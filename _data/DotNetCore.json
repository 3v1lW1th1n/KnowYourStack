{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019","PublishedOn":"2019-04-02T21:47:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we released the March 2019 Update for Windows 10 version 1809 and Windows Server 2019.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/","RawContent":null},{"Title":"Visual Studio 2019 .NET productivity","PublishedOn":"2019-04-02T19:00:17+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Your friendly neighborhood .NET productivity team (aka. Roslyn) focuses a lot on improving the .NET coding experience. Sometimes it’s the little refactorings and code fixes that really improve your...","Href":"https://devblogs.microsoft.com/dotnet/visual-studio-2019-net-productivity-2/","RawContent":null},{"Title":"Handling a new era in the Japanese calendar in .NET","PublishedOn":"2019-04-02T10:40:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Typically, calendar eras represent long time periods. In the Gregorian calendar, for example, the current era spans (as of this year) 2,019 years. In the Japanese calendar, however, a new era begins...","Href":"https://devblogs.microsoft.com/dotnet/handling-a-new-era-in-the-japanese-calendar-in-net/","RawContent":null},{"Title":"Announcing F# 4.6","PublishedOn":"2019-03-29T21:40:28+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"We&#8217;re excited to announce general availability of F# 4.6 and the F# tools for Visual Studio 2019! In this post, I&#8217;ll show you how to get started, explain the F# 4.6 feature set, give you...","Href":"https://devblogs.microsoft.com/dotnet/announcing-f-4-6/","RawContent":null},{"Title":"Migrating Delegate.BeginInvoke Calls for .NET Core","PublishedOn":"2019-03-28T21:29:50+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"I recently worked with a couple customers migrating applications to .NET Core that had to make code changes to workaround BeginInvoke and EndInvoke methods on delegates not being supported on .NET...","Href":"https://devblogs.microsoft.com/dotnet/migrating-delegate-begininvoke-calls-for-net-core/","RawContent":null},{"Title":".NET Framework March 2019 Update","PublishedOn":"2019-03-20T00:40:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we released the March 2019 Update.\nQuality and Reliability\nThis release contains the following quality and reliability improvements.\nCLR\n\nAddresses an issue in which the Framework throws an...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/","RawContent":null},{"Title":".NET Core Container Images now Published to Microsoft Container Registry","PublishedOn":"2019-03-15T14:12:09+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We are now publishing .NET Core container images to Microsoft Container Registry (MCR). We have also made other changes to the images we publish, described in this post.\nImportant: You will need to...","Href":"https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/","RawContent":null},{"Title":".NET Core March 2019 Updates – 1.0.15, 1.1.12, 2.1.9 and 2.2.3","PublishedOn":"2019-03-12T22:59:50+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core March 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on included reliability fixes.\n\n.NET Core...","Href":"https://devblogs.microsoft.com/dotnet/net-core-march-2019/","RawContent":null},{"Title":"Announcing ML.NET 0.11 – Machine Learning for .NET","PublishedOn":"2019-03-09T01:03:28+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"ML.NET is an open-source and cross-platform machine learning framework (Windows, Linux, macOS) for .NET developers. Using ML.NET, developers can leverage their existing tools and skillsets to develop...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ml-net-0-11-machine-learning-for-net/","RawContent":null},{"Title":"Announcing .NET Core 3 Preview 3","PublishedOn":"2019-03-06T19:10:42+00:00","CommentsCount":36,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 3.0 Preview 3. We would like to update you on the .NET Core 3.0 schedule and introduce you to improvements in .NET Core SDK installers, Docker containers, Range, and...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-preview-3/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9341532248","Type":"PullRequestEvent","CreatedAt":"2019-03-29T14:44:24","Actor":"BillWagner","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Merged pull request \"add docs samples link\" (#142) at dotnet/foundation","RelatedBody":"@BillWagner should we add the samples project too?"},{"Id":"9337730849","Type":"PullRequestEvent","CreatedAt":"2019-03-29T02:29:48","Actor":"mairaw","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Opened pull request \"add docs samples link\" (#142) at dotnet/foundation","RelatedBody":"@BillWagner should we add the samples project too?"},{"Id":"9337725308","Type":"PullRequestEvent","CreatedAt":"2019-03-29T02:28:20","Actor":"mairaw","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Opened pull request \"add links to ML.NET docs\" (#141) at dotnet/foundation","RelatedBody":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects"},{"Id":"9337679090","Type":"PullRequestEvent","CreatedAt":"2019-03-29T02:16:08","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Merged pull request \"Add link to ASP.NET Core docs\" (#139) at dotnet/foundation","RelatedBody":"Provide a link to the docs site for ASP.NET Core."},{"Id":"9337677839","Type":"PullRequestEvent","CreatedAt":"2019-03-29T02:15:48","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Merged pull request \"add links to .NET docs\" (#140) at dotnet/foundation","RelatedBody":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?"},{"Id":"9335742237","Type":"PullRequestEvent","CreatedAt":"2019-03-28T19:21:55","Actor":"BillWagner","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Opened pull request \"add links to .NET docs\" (#140) at dotnet/foundation","RelatedBody":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?"},{"Id":"9335605309","Type":"PullRequestEvent","CreatedAt":"2019-03-28T19:00:02","Actor":"scottaddie","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Opened pull request \"Add link to ASP.NET Core docs\" (#139) at dotnet/foundation","RelatedBody":"Provide a link to the docs site for ASP.NET Core."},{"Id":"9266562420","Type":"PullRequestEvent","CreatedAt":"2019-03-18T21:04:01","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Merged pull request \"Add V3.1 repo and change documentation link\" (#137) at dotnet/foundation","RelatedBody":""},{"Id":"9266559615","Type":"PullRequestEvent","CreatedAt":"2019-03-18T21:03:34","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Merged pull request \"Add Dave to cake.md\" (#138) at dotnet/foundation","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9228689700","Type":"IssuesEvent","CreatedAt":"2019-03-12T17:35:17","Actor":"vivmishra","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Opened issue \"March 2019 .NET Updates\" (#103) at dotnet/announcements","RelatedBody":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0))\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9150531193","Type":"IssuesEvent","CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Opened issue \"SDK Installers will remove previous patch versions\" (#102) at dotnet/announcements","RelatedBody":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions)."}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"9367364033","Type":"IssuesEvent","CreatedAt":"2019-04-03T05:14:40","Actor":"tapika","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/23681","RelatedDescription":"Opened issue \"Support for fast mixed mode call stack determination\" (#23681) at dotnet/coreclr","RelatedBody":"Originally wrote this as e-mail, but 'Jan Kotas' <jkotas@microsoft.com> proposed to raise this as github issue. Not attaching original e-mail recipients, and don't know if they want to be in this mail list.\r\n\r\nHi !\r\n\r\nApproximately 3 years ago I have asked you about mixed mode call stack determination, and briefly documented your answer and my findings about this\r\nOn stack overflow: https://stackoverflow.com/questions/34733155/resolve-managed-and-native-stack-trace-which-api-to-use\r\n\r\nToday I have started to look through what is the best API to use for determining mixed mode call stack and find out \r\nThat my solution was copied to DRace application \r\n                https://github.com/siemens/drace/tree/9bdccd142ae8ab42f6f68eeeca86539abb16c1fe\r\n\r\nAlso I saw various bugfixes made to it (E.g. https://github.com/siemens/drace/commit/9abf73363269fb5ae7ffc3dd5023af26af86c8af )\r\n\r\nBut what I have noticed as well  -\r\nhttps://github.com/siemens/drace/blob/9bdccd142ae8ab42f6f68eeeca86539abb16c1fe/ManagedResolver/src/ManagedResolver.cpp#L153\r\n\r\nis mention that this call stack determination does not work for Core CLR.\r\n\r\nWhat would be best API to use for mixed mode call stack determination from your perspective, which would be also portable to next generation code (Core CLR) ?\r\n\r\n...\r\n\r\nI see that I even could participate in this component creation / design, API defining, as long as there is commitment from Microsoft side to support this API for forthcoming new platforms. "},{"Id":"9366787974","Type":"PullRequestEvent","CreatedAt":"2019-04-03T02:25:41","Actor":"sywhang","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/22901","RelatedDescription":"Closed pull request \"Add process time counters\" (#22901) at dotnet/coreclr","RelatedBody":"For #20372. \r\n\r\nThis adds a Runtime counter for process time (user time + kernel/system time). \r\n\r\ncc @jkotas "},{"Id":"9366780519","Type":"PullRequestEvent","CreatedAt":"2019-04-03T02:23:41","Actor":"sywhang","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/23680","RelatedDescription":"Opened pull request \"Add CPU runtime counter\" (#23680) at dotnet/coreclr","RelatedBody":"Part of https://github.com/dotnet/coreclr/issues/20372. \r\n\r\nThere was a previous attempt at doing this in https://github.com/dotnet/coreclr/pull/22901 but it had several issues and the EventCounter API surface has changed quite a bit since then, so here is a new PR addressing this. \r\n\r\nNote that on Linux this counter currently only returns 0 because of a bug in the System.Native library, but that should be addressed by https://github.com/dotnet/corefx/pull/36552. \r\n\r\n"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"9367100866","Type":"IssuesEvent","CreatedAt":"2019-04-03T03:53:29","Actor":"dylank","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/11055","RelatedDescription":"Closed issue \"dotnet restore --interactive: 401 Unauthorized on Windows with Azure DevOps feed\" (#11055) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\ndotnet restore always fails on Windows when connecting to a private feed hosted on ADO.\r\n\r\n```\r\n>dotnet restore --interactive\r\n  Restoring packages for ....csproj...\r\n  Restoring packages for ...csproj...\r\nC:\\Program Files\\dotnet\\sdk\\2.2.104\\NuGet.targets(114,5): error : Unable to load the service index for source https://pkgs.dev.azure.com/microsoft/_packaging/something/nuget/v3/index.json. [....sln]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.104\\NuGet.targets(114,5): error :   Response status code does not indicate success: 401 (Unauthorized). [....sln]\r\n```\r\n\r\n## Expected  behavior\r\nRunning `dotnet restore --interactive` should prompt for code auth, like it does on macOS. Alternatively, running `dotnet restore` should behave like `nuget restore` does, and prompt for credentials allowing you to enter a PAT.\r\n\r\n## Actual behavior\r\nOn Windows 10, running `dotnet restore --interactive` or `dotnet restore` will always fail when connecting to a private feed on ADO.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.104\r\n Commit:    73f036d4ac\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.104\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.2\r\n  Commit:  a4fd7b2c84\r\n\r\n.NET Core SDKs installed:\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.102 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"9366579640","Type":"IssuesEvent","CreatedAt":"2019-04-03T01:28:07","Actor":"flcdrg","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/11058","RelatedDescription":"Opened issue \"dotnet-install.ps1 installs locally even when same version installed globally\" (#11058) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\n1. On a machine that already has 2.2.101 SDK installed\r\n2. `.\\dotnet-install.ps1 -Version 2.2.101`\r\n\r\n## Expected behavior\r\n\r\nDo nothing. \r\n\r\nMaybe provide a `-Force` parameter so that only when that is given, do you still install the version\r\n\r\n## Actual behavior\r\n\r\nVersion is installed into `c:\\users\\USERNAME\\AppData\\Local\\Microsoft\\dotnet`, even if it was already installed in `C:\\Program Files\\dotnet\\sdk`\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.101\r\n Commit:    236713b0b7\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  6.3.9600\r\n OS Platform: Windows\r\n RID:         win81-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.101\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0-preview2-003156 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n"},{"Id":"9366005343","Type":"IssuesEvent","CreatedAt":"2019-04-02T22:51:53","Actor":"richlander","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/11056","RelatedDescription":"Closed issue \"dotnet build doesn't work when filtered to a supported framework for current SDK\" (#11056) at dotnet/cli","RelatedBody":"I am wanting to build a project with the .NET Core 2.2 SDK. The project targets .NET Core 3.0 and 2.2. It should work, but instead, it makes me sad.\r\n\r\n```console\r\nC:\\git\\testapps\\cpumath>type cpumath.csproj\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFrameworks>netcoreapp3.0;net472;netcoreapp2.2</TargetFrameworks>\r\n    <RuntimeIdentifiers>win-x64;linux-x64</RuntimeIdentifiers>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.ML.CpuMath\" Version=\"0.11.0\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\nC:\\git\\testapps\\cpumath>dotnet build -f netcoreapp2.2\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nC:\\Program Files\\dotnet\\sdk\\2.2.105\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.TargetFrameworkInference.targets(137,5): error NETSDK1045: The current .NET SDK does not support targeting .NET Core 3.0.  Either target .NET Core 2.2 or lower, or use a version of the .NET SDK that supports .NET Core 3.0. [C:\\git\\testapps\\cpumath\\cpumath.csproj]\r\n\r\nC:\\git\\testapps\\cpumath>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.105\r\n Commit:    7cecb35b92\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.105\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview4-27529-09\r\n  Commit:  0a688d1b7e\r\n```"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"9361570606","Type":"PullRequestEvent","CreatedAt":"2019-04-02T12:14:00","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1117","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1117) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190401.12\r\n- **Date Produced**: 4/2/2019 1:18 AM\r\n- **Commit**: 505e38906e1ee2d032c41bb297de0958307db946\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19201.12\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19201.12\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19201.12\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19201.12\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19201.12\r\n\r\n"},{"Id":"9361503684","Type":"PullRequestEvent","CreatedAt":"2019-04-02T12:03:55","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1117","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1117) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190401.12\r\n- **Date Produced**: 4/2/2019 1:18 AM\r\n- **Commit**: 505e38906e1ee2d032c41bb297de0958307db946\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19201.12\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19201.12\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19201.12\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19201.12\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19201.12\r\n\r\n"},{"Id":"9345939087","Type":"PullRequestEvent","CreatedAt":"2019-03-30T12:23:34","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1116","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1116) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190329.2\r\n- **Date Produced**: 3/29/2019 1:07 PM\r\n- **Commit**: 31abd61b43b115a6af83c92ce35ed4e8efd01dfd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19179.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19179.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19179.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19179.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19179.2\r\n\r\n"},{"Id":"9345902471","Type":"PullRequestEvent","CreatedAt":"2019-03-30T12:03:27","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1116","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1116) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190329.2\r\n- **Date Produced**: 3/29/2019 1:07 PM\r\n- **Commit**: 31abd61b43b115a6af83c92ce35ed4e8efd01dfd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19179.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19179.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19179.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19179.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19179.2\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"9367225064","Type":"IssuesEvent","CreatedAt":"2019-04-03T04:31:52","Actor":"davidsh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/34466","RelatedDescription":"Closed issue \"HttpClient ignores WebRequest.DefaultWebProxy\" (#34466) at dotnet/corefx","RelatedBody":"Right now there's no way to coerce all web requests of a specific application through a specific configured proxy since `HttpClient` disregards `WebRequest.DefaultWebProxy` and only respects `SystemProxyInfo.ConstructSystemProxy()`.\r\n`HttpWebRequest` and `WebClient` who just wrap `HttpClient` explicitly take care of assigning `HttpClientHandler.Proxy = WebRequest.DefaultWebProxy` but if this is left unassigned, `HttpClient` will consult `SystemProxyInfo.ConstructSystemProxy()`. This is very unfortunate if you have no control over the HttpClients created and no control over the system proxy (e.g. Azure Web Apps).\r\n\r\nI'd like to request support for HttpClient to use `WebRequest.DefaultWebProxy` when it has been set by the user and only otherwise the default system proxy.\r\n\r\nI'd also take another API that allows to globally configure a Proxy."},{"Id":"9367223974","Type":"IssuesEvent","CreatedAt":"2019-04-03T04:31:33","Actor":"davidsh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/24574","RelatedDescription":"Closed issue \"How to default to WinHTTP proxy not the WinINet for a .Net core app\" (#24574) at dotnet/corefx","RelatedBody":"_From @rohitshrivastava04 on October 11, 2017 10:50_\n\n# Issue Title\r\nHow to set proxy settings for a .Net Core application\r\n\r\n# General\r\n\r\nWe have a .Net Core Windows Service which makes few calls to AWS or other internet services. For this, it needs to use proxy settings. There are two options either we configure each call to use proxy server or set proxy setting machine wide. Setting WinHTTP proxy configuration is easier than WinINet. However .net core process uses wininet as default proxy policy. How can I set it to default to WinHTTP than WinINet for the whole app rather than changing in each WinHttpHandler?\n\n_Copied from original issue: dotnet/core#1023_"},{"Id":"9367222839","Type":"IssuesEvent","CreatedAt":"2019-04-03T04:31:13","Actor":"davidsh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/29934","RelatedDescription":"Closed issue \"Correct way to set proxy settings to be used by HttpClient on Windows?\" (#29934) at dotnet/corefx","RelatedBody":"Hi,\r\n\r\nI am running my ASP.NET Core 2.1 RC 1 Final app inside Docker container based on `microsoft\\dotnet:2.1-aspnetcore-runtime-nanoserver-sac2016`. I would like all my requests from `HttpClient` to go through system-wide (container-wide) proxy. I didn't find any good source of information on what configuration should i do. One thing that i tried was to set proxy environment variables but it does not seem to work.\r\n\r\nThanks."},{"Id":"9367217251","Type":"IssuesEvent","CreatedAt":"2019-04-03T04:29:26","Actor":"davidsh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/36553","RelatedDescription":"Opened issue \"Implement global proxy configuration for HttpClient\" (#36553) at dotnet/corefx","RelatedBody":"HttpClient has support for reading system proxy configuration (IE settings on Windows, Environment variables on Linux, etc). However, there is no mechanism for setting credentials (i.e. CredentialCache.DefaultCredentials) for a system configured proxy.  Currently, this requires creating an HttpClientHandler instance and setting its [DefaultProxyCredentials](https://docs.microsoft.com/en-us/dotnet/api/system.net.http.httpclienthandler.defaultproxycredentials?view=netframework-4.7.2#System_Net_Http_HttpClientHandler_DefaultProxyCredentials) property.\r\n\r\nFor cases where libraries are creating the HttpClient object, there is no way for consumers of the library to set these credentials easily. \r\n\r\nThe .NET Framework supports using app.config/web.config settings with a [system.net section](https://docs.microsoft.com/en-us/dotnet/framework/configure-apps/file-schema/network/proxy-element-network-settings):\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<configuration>\r\n  <system.net>\r\n    <defaultProxy useDefaultCredentials=\"true\" />\r\n  </system.net>\r\n</configuration>\r\n```\r\n\r\nThis allows applications to inject a global proxy configuration for any HttpClient that is created. However, .NET Core doesn't natively support configuration files.\r\n\r\n.NET Framework currently has the [WebRequest.DefaultWebProxy](https://docs.microsoft.com/en-us/dotnet/api/system.net.webrequest.defaultwebproxy?view=netframework-4.7.2#System_Net_WebRequest_DefaultWebProxy) property to control this for all HttpWebRequest objects (and affects HttpClient) as well.  On .NET Core, the WebRequest class is considered legacy.  But we need a similar way to set global proxy config on .NET Core for HttpClient usage.\r\n\r\nA static API on HttpClient (or other object) created for global proxy configuration for the application could be used by upstack components to create a similar configuration file (i.e. app.config) behavior.\r\n"},{"Id":"9367034826","Type":"IssuesEvent","CreatedAt":"2019-04-03T03:33:51","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/33880","RelatedDescription":"Closed issue \"APIs that could use annotations or attributes for nullability\" (#33880) at dotnet/corefx","RelatedBody":"In C# 8.0 with the nullability analysis turned on, libraries that don't carry explicit nullable annotations are treated as \"oblivious\", which means the analysis assumes the best (to minimize nullability warnings).\r\n\r\nThis is generally a reasonable assumption, but it hides some potentially useful warnings. As a rule of thumb:\r\n- any API which could return a `null` should declare that.\r\n- any API which throws an exception on a `null` input should declare that. For instance, `Path.GetDirectoryName(string! name)`.\r\n\r\nThe experience of using nullability analysis on APIs can be further enhanced with some attributes that provide hints about the semantics of the API:\r\n- `bool string.IsNullOrEmpty([NotNullWhenFalse] string value)`\r\n- `bool string.IsNullOrWhiteSpace([NotNullWhenFalse] string value)`\r\n- `[MaybeNull] T FirstOrDefault(...)`\r\n- `Debug.Assert([EnsuresTrue] ...)`\r\n\r\nWe are still working to finalize the set of such attributes (tracked by https://github.com/dotnet/roslyn/issues/26761).\r\n\r\nI'm opening this issue to collect such examples, so that we have some idea which APIs should be annotated first, once we are ready to do that."},{"Id":"9366992141","Type":"PullRequestEvent","CreatedAt":"2019-04-03T03:21:46","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/36552","RelatedDescription":"Merged pull request \"[System.Native] Fix GetCpuUtilization to return percentage\" (#36552) at dotnet/corefx","RelatedBody":"This adds a surface `SystemNative_GetCpuUtilizationPercent` that builds on top of the existing `SystemNative_GetCpuUtilization` surface - it just converts the number to a percentage (between 0 - 100). I tried using the current `SystemNative_GetCpuUtilization`, which is calculating the ratio, and is converting it to an int32_t, so it's always giving me 0. I'm not sure if this is the intended behavior, so I just added another surface. \r\n\r\nIf this wasn't the intended behavior and is actually a bug I need to fix, please let me know and I can modify this PR to return the percentage all the time.\r\n\r\n"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"9367182108","Type":"PullRequestEvent","CreatedAt":"2019-04-03T04:17:57","Actor":"heejaechang","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34654","RelatedDescription":"Merged pull request \"Revert \"move StreamJsonRpc to 2.x from 1.3.x\"\" (#34654) at dotnet/roslyn","RelatedBody":"Reverts dotnet/roslyn#33960\r\n\r\nreverting this until platform and other partners to move to 2.0 first due breaking functionality if only one team moves."},{"Id":"9367042781","Type":"IssuesEvent","CreatedAt":"2019-04-03T03:36:18","Actor":"AlexRadch","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/34716","RelatedDescription":"Opened issue \"Why extension methods do not work for dynamic parameters when passed values are dynamic already. Compiler error CS1973.\" (#34716) at dotnet/roslyn","RelatedBody":"**Version Used**:  Any\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create extension method with dynamic parameters:\r\n```cs\r\npublic static class Extensions\r\n{\r\n    public static dynamic If(this bool p, dynamic @then, dynamic @else) => p ? @then : @else;\r\n}\r\n```\r\n\r\n2. Call this method when passed values are dynamic already.\r\n```cs\r\n    dynamic t = \"then\";\r\n    dynamic e = \"else\";\r\n    Console.WriteLine( true.If(t, e) );\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nSupport extension methods with dynamic parameters when passed values are dynamic already.\r\n\r\n**Actual Behavior**:\r\n\r\nCompiler error CS1973."},{"Id":"9367030058","Type":"IssuesEvent","CreatedAt":"2019-04-03T03:32:24","Actor":"Therzok","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/23051","RelatedDescription":"Closed issue \"Fuzzy matcher does not work with incremental pattern changes\" (#23051) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n2.6.0-vs-for-mac-62217-03\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Have a class named `Test`\r\n2. Write `Tempt` letter by letter in the search bar. `Test` is not matched\r\n3.  Paste in `Tempt` . `Test` is matched.\r\n\r\n**Expected Behavior**:\r\n`Test` is matched in case 2.\r\n\r\n**Actual Behavior**:\r\n`Test` is not matched.\r\n\r\nPossibly a regression in https://github.com/dotnet/roslyn/commit/47b80b58459c5c991c0fbe9b4841b495f55f3db3#commitcomment-25452007"},{"Id":"9367027350","Type":"IssuesEvent","CreatedAt":"2019-04-03T03:31:39","Actor":"cston","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/34711","RelatedDescription":"Closed issue \"No nullable warning when lock'ing a potentially null object\" (#34711) at dotnet/roslyn","RelatedBody":"**Version Used**:\r\n3.0.0-beta4-19170-01+1deafee3682da88bf07d1c18521a99f47446cee8\r\n\r\n**Repro**:\r\n```C#\r\n#nullable enable\r\nclass Program\r\n{\r\n    static void Main()\r\n    {\r\n        object? obj = null;\r\n        lock (obj) { }\r\n    }\r\n}\r\n```\r\n\r\nI expected a warning on `lock (obj)`, but none is issued.  In contrast, one is issued for `Monitor.Enter` (this is using a corelib that already has Monitor annotated):\r\n![image](https://user-images.githubusercontent.com/2642209/55447727-e5c52700-5592-11e9-99b4-2a05ffbcd5d0.png)\r\n\r\ncc: @cston, @dotnet/nullablefc "},{"Id":"9366991828","Type":"PullRequestEvent","CreatedAt":"2019-04-03T03:21:42","Actor":"Therzok","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34715","RelatedDescription":"Opened pull request \"Fix usage of ConcurrentDictionary.AddOrUpdate\" (#34715) at dotnet/roslyn","RelatedBody":"The lambda here is used in the update scenario. Given we always want to\r\nupdate and discard the existing value, we don't need to go through this\r\nmethod.\r\n\r\nLooking over the implementation, there's a few things to note:\r\n* The indexer always adds or updates the value\r\n* AddOrUpdate does a bit more logic so that it spins on the collection\r\nchecking if the value already exists while retrying the factory logic\r\n\r\nThis makes the code safe to switch to indexer and avoid the allocation\r\n\r\nFixes #33179\r\n\r\nContained squashed changes from other PR:\r\nhttps://github.com/dotnet/roslyn/pull/33173/commits/8f64a8790283a32c786b35c65072df84cfc65f75\r\nhttps://github.com/dotnet/roslyn/pull/33173/commits/a70422ed7c813e3679cbd3d7eeada84663877d11"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"9366700742","Type":"IssuesEvent","CreatedAt":"2019-04-03T02:01:57","Actor":"yowl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7248","RelatedDescription":"Opened issue \"wasm: some linq methods fail to compile\" (#7248) at dotnet/corert","RelatedBody":"When attempting to build an Uno Platform project, it fails on a method \r\n```\r\n{[System.Linq]System.Linq.Enumerable+Iterator`1<Windows.UI.Xaml.Documents.Inline>.Select<string>(Func``2<Inline,string>)}\r\n```\r\n in the ctor for `WebAssemblyVTableSlotNode` on the assert\r\n```\r\nDebug.Assert(!targetMethod.HasInstantiation);\r\n```\r\nNot done any more investigation yet."},{"Id":"9366178153","Type":"PullRequestEvent","CreatedAt":"2019-04-02T23:35:19","Actor":"yowl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7247","RelatedDescription":"Opened pull request \"wasm: remove unneeded fpext when doing ops on 2 floats\" (#7247) at dotnet/corert","RelatedBody":"previously when floats where popped of the stack they were always widened to doubles.  This change removes that and only widens floats when the operation has a double on the other side."},{"Id":"9366088939","Type":"PullRequestEvent","CreatedAt":"2019-04-02T23:12:29","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7246","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx\" (#7246) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas"},{"Id":"9365679779","Type":"PullRequestEvent","CreatedAt":"2019-04-02T21:44:03","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7244","RelatedDescription":"Merged pull request \"Store StructMarshalingData for OffsetOf on blittable types\" (#7244) at dotnet/corert","RelatedBody":"Fixes #7232"},{"Id":"9365679769","Type":"IssuesEvent","CreatedAt":"2019-04-02T21:44:03","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7232","RelatedDescription":"Closed issue \"Marshal.OffsetOf<T> fails on blittable structs\" (#7232) at dotnet/corert","RelatedBody":"I was going to leave this as a comment on #5374 until I realized the issue was only happening on blittable structs, so I don't feel like it's totally relevant there. (Plus that issue has been closed.)\r\n\r\nIn short, both `Marshal.OffsetOf` and `Marshal.OffsetOf<T>` do not work on blittable structs. They work as expected if the struct is not blittable.\r\n\r\nI have made a minimal demonstration of the issue available at [PathogenPlayground/CoreRtOffsetOf](https://github.com/PathogenPlayground/CoreRtOffsetOf/blob/master/CoreRtOffsetOf/Program.cs). It exercises the generic and non-generic variants of `Marshal.OffsetOf` and `Marshal.SizeOf` on both blittable and non-blittable types. Everything works except for either `OffsetOf` on the blittable type.\r\n\r\nI've tried the workaround described by @MichalStrehovsky at https://github.com/dotnet/corert/issues/5374#issuecomment-364846258, but it has no impact on any of the calls. (Whether or not it's there, the success/failure of everything remains the same.) I've also tried adding the types to the `rd.xml`, but that doesn't change anything either.\r\n\r\nI also tried using `1.0.0-alpha-26212-01` in case there was a regression since Michal made his comment, but that also had the same results.\r\n\r\nFor the sake of convenience, here's the output of the playground on my machine:\r\n\r\n```\r\nSizeOf<BlittableStruct>: 8\r\nSizeOf(BlittableStruct): 8\r\nsizeof(BlittableStruct): 8\r\nSizeOf<MarshaledStruct>: 16\r\nSizeOf(MarshaledStruct): 16\r\nOffsetOf<BlittableStruct>: FAILED\r\nEETypeRva:0x0032F1E8(System.Runtime.InteropServices.MissingInteropDataException): CoreRtOffsetOf.BlittableStruct is missing structure marshalling data. To enable structure marshalling data, add a MarshalStructure directive to the application rd.xml file. For more information, please visit http://go.microsoft.com/fwlink/?LinkID=393965\r\n   at System.Runtime.InteropServices.Marshal.OffsetOf(Type, String) + 0x1a7\r\n   at CoreRtOffsetOf.Program.<>c.<Main>b__1_5() + 0x20\r\n   at CoreRtOffsetOf.Program.Test(String, Func`1) + 0x34\r\n\r\nOffsetOf(BlittableStruct): FAILED\r\nEETypeRva:0x0032F1E8(System.Runtime.InteropServices.MissingInteropDataException): CoreRtOffsetOf.BlittableStruct is missing structure marshalling data. To enable structure marshalling data, add a MarshalStructure directive to the application rd.xml file. For more information, please visit http://go.microsoft.com/fwlink/?LinkID=393965\r\n   at System.Runtime.InteropServices.Marshal.OffsetOf(Type, String) + 0x1a7\r\n   at CoreRtOffsetOf.Program.<>c.<Main>b__1_6() + 0x2f\r\n   at CoreRtOffsetOf.Program.Test(String, Func`1) + 0x34\r\n\r\nOffsetOf<MarshaledStruct>: 4\r\nOffsetOf(MarshaledStruct): 4\r\nDone.\r\n```\r\n\r\nOn a side note, I was very impressed with CoreRT when I finally tried it with a largeish test project yesterday. This was the only real issue I ran into. Everything else was adding the right types to `rd.xml` for reflection and disabling some AOT-unfriendly runtime assembly loading."},{"Id":"9365671457","Type":"PullRequestEvent","CreatedAt":"2019-04-02T21:42:30","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7246","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx\" (#7246) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"9362079216","Type":"PullRequestEvent","CreatedAt":"2019-04-02T13:22:41","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7245","RelatedDescription":"Merged pull request \"Merge master to nmirror\" (#7245) at dotnet/corert","RelatedBody":"The UTC bug that was blocking the integration is now fixed."},{"Id":"9362074276","Type":"PullRequestEvent","CreatedAt":"2019-04-02T13:22:06","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7245","RelatedDescription":"Opened pull request \"Merge master to nmirror\" (#7245) at dotnet/corert","RelatedBody":"The UTC bug that was blocking the integration is now fixed."},{"Id":"9361425338","Type":"PullRequestEvent","CreatedAt":"2019-04-02T11:52:07","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7208","RelatedDescription":"Merged pull request \"Add a mode that disables reflection\" (#7208) at dotnet/corert","RelatedBody":"Fixes #6897.\r\n\r\nThis adds an option to disable generation of reflection data in the compiler."},{"Id":"9361425317","Type":"IssuesEvent","CreatedAt":"2019-04-02T11:52:06","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6897","RelatedDescription":"Closed issue \"Expose option to completely disable reflection\" (#6897) at dotnet/corert","RelatedBody":"CoreRT runtime doesn't require reflection metadata to run managed code. We should expose a compiler option that skips generation of reflection metadata and switches reflection stack over to one that operates on runtime metadata only (i.e. one can use reflection to get the base type or list of interfaces, but no names, methods, fields, are exposed)."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"9365703599","Type":"PullRequestEvent","CreatedAt":"2019-04-02T21:48:28","Actor":"fadimounir","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3072","RelatedDescription":"Opened pull request \"Update version in global.json\" (#3072) at dotnet/sdk","RelatedBody":"New version pulls the ILLink.Tasks and Microsoft.NET.Build.Bundle packages."},{"Id":"9364560826","Type":"PullRequestEvent","CreatedAt":"2019-04-02T18:44:46","Actor":"nugetlurker","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3071","RelatedDescription":"Opened pull request \"Insert NuGet Build 5.1.0-rtm.5921 into sdk\" (#3071) at dotnet/sdk","RelatedBody":"Insert NuGet Build 5.1.0-rtm.5921 into sdk release/2.1.7xx branch"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-03-29T02:28:20","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"open","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Open PR \"add links to ML.NET docs\" (#141)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379731798","IsPullRequest":true,"CreatedAt":"2018-11-13T04:22:32","Actor":"leastprivilege","Number":"114","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#114)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"},{"Id":"379733880","IsPullRequest":true,"CreatedAt":"2018-11-13T04:20:23","Actor":"leastprivilege","Number":"115","RawContent":null,"Title":"Create identitymodel.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/115","RelatedDescription":"Closed or merged PR \"Create identitymodel.md\" (#115)"},{"Id":"371941750","IsPullRequest":true,"CreatedAt":"2018-11-01T16:20:07","Actor":"SeanKilleen","Number":"113","RawContent":null,"Title":"Update logo for couchbase-lite in projects.json","State":"closed","Body":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser.","Url":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Closed or merged PR \"Update logo for couchbase-lite in projects.json\" (#113)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"428570204","IsPullRequest":false,"CreatedAt":"2019-04-03T05:14:38","Actor":"tapika","Number":"23681","RawContent":null,"Title":"Support for fast mixed mode call stack determination","State":"open","Body":"Originally wrote this as e-mail, but 'Jan Kotas' <jkotas@microsoft.com> proposed to raise this as github issue. Not attaching original e-mail recipients, and don't know if they want to be in this mail list.\r\n\r\nHi !\r\n\r\nApproximately 3 years ago I have asked you about mixed mode call stack determination, and briefly documented your answer and my findings about this\r\nOn stack overflow: https://stackoverflow.com/questions/34733155/resolve-managed-and-native-stack-trace-which-api-to-use\r\n\r\nToday I have started to look through what is the best API to use for determining mixed mode call stack and find out \r\nThat my solution was copied to DRace application \r\n                https://github.com/siemens/drace/tree/9bdccd142ae8ab42f6f68eeeca86539abb16c1fe\r\n\r\nAlso I saw various bugfixes made to it (E.g. https://github.com/siemens/drace/commit/9abf73363269fb5ae7ffc3dd5023af26af86c8af )\r\n\r\nBut what I have noticed as well  -\r\nhttps://github.com/siemens/drace/blob/9bdccd142ae8ab42f6f68eeeca86539abb16c1fe/ManagedResolver/src/ManagedResolver.cpp#L153\r\n\r\nis mention that this call stack determination does not work for Core CLR.\r\n\r\nWhat would be best API to use for mixed mode call stack determination from your perspective, which would be also portable to next generation code (Core CLR) ?\r\n\r\n...\r\n\r\nI see that I even could participate in this component creation / design, API defining, as long as there is commitment from Microsoft side to support this API for forthcoming new platforms. ","Url":"https://github.com/dotnet/coreclr/issues/23681","RelatedDescription":"Open issue \"Support for fast mixed mode call stack determination\" (#23681)"},{"Id":"428532231","IsPullRequest":true,"CreatedAt":"2019-04-03T02:23:40","Actor":"sywhang","Number":"23680","RawContent":null,"Title":"Add CPU runtime counter","State":"open","Body":"Part of https://github.com/dotnet/coreclr/issues/20372. \r\n\r\nThere was a previous attempt at doing this in https://github.com/dotnet/coreclr/pull/22901 but it had several issues and the EventCounter API surface has changed quite a bit since then, so here is a new PR addressing this. \r\n\r\nNote that on Linux this counter currently only returns 0 because of a bug in the System.Native library, but that should be addressed by https://github.com/dotnet/corefx/pull/36552. \r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/23680","RelatedDescription":"Open PR \"Add CPU runtime counter\" (#23680)"},{"Id":"428460474","IsPullRequest":true,"CreatedAt":"2019-04-03T01:17:06","Actor":"Dotnet-GitSync-Bot","Number":"23667","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/coreclr/pull/23667","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#23667)"},{"Id":"428513900","IsPullRequest":true,"CreatedAt":"2019-04-03T01:07:48","Actor":"dotnet-maestro-bot","Number":"23679","RawContent":null,"Title":"Update CoreClr to preview4-27602-72 (master)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/23679","RelatedDescription":"Open PR \"Update CoreClr to preview4-27602-72 (master)\" (#23679)"},{"Id":"428461293","IsPullRequest":true,"CreatedAt":"2019-04-03T00:57:01","Actor":"briansull","Number":"23668","RawContent":null,"Title":"Remove a few Check builds and Check tests for PullRequests","State":"closed","Body":"We now build and test the following for PullRequests\r\n        - Linux_arm\r\n        - Linux_arm64\r\n        - Linux_musl_x64\r\n        - Linux_x64\r\n        - OSX_x64\r\n        - Windows_NT_arm\r\n        - Windows_NT_arm64\r\n        - Windows_NT_x64\r\n        - Windows_NT_x86","Url":"https://github.com/dotnet/coreclr/pull/23668","RelatedDescription":"Closed or merged PR \"Remove a few Check builds and Check tests for PullRequests\" (#23668)"},{"Id":"428498193","IsPullRequest":true,"CreatedAt":"2019-04-02T23:58:46","Actor":"jkoritzinsky","Number":"23678","RawContent":null,"Title":"Treat WinMDs as having been loaded in the default ALC for AssemblyLoadContext.GetLoadContext","State":"open","Body":"Fixes #23583 \r\n\r\nThere is currently no way to load a WinMD into an ALC and all WinMD dependencies are loaded into the default ALC, so from a user perspective, this is effectively correct.\r\n\r\nWith #23402 this will change slightly (a WinMD will still be loaded by the WinRT binder but its dependencies can be loaded into an isolated ALC), so we might want to do different behavior then.","Url":"https://github.com/dotnet/coreclr/pull/23678","RelatedDescription":"Open PR \"Treat WinMDs as having been loaded in the default ALC for AssemblyLoadContext.GetLoadContext\" (#23678)"},{"Id":"428497006","IsPullRequest":true,"CreatedAt":"2019-04-02T23:57:21","Actor":"echesakovMSFT","Number":"23677","RawContent":null,"Title":"Disable *.Arm32.Open in PullRequest and remove two queues from scheduled runs","State":"closed","Body":"@RussKeldorph PTAL","Url":"https://github.com/dotnet/coreclr/pull/23677","RelatedDescription":"Closed or merged PR \"Disable *.Arm32.Open in PullRequest and remove two queues from scheduled runs\" (#23677)"},{"Id":"428496290","IsPullRequest":true,"CreatedAt":"2019-04-02T23:50:53","Actor":"safern","Number":"23676","RawContent":null,"Title":"Nullable: All remaining exceptions","State":"open","Body":"@stephentoub I left out of this PR:\r\n`System\\Threading\\Tasks\\TaskCanceledException.cs`\r\n`System\\Threading\\Tasks\\TaskExceptionHolder.cs`\r\n`System\\Threading\\Tasks\\TaskSchedulerException.cs`\r\n\r\nI didn't know if you were already working on them locally, I didn't want to duplicate work. If you're not, just let me know and I'll include them on my PR.","Url":"https://github.com/dotnet/coreclr/pull/23676","RelatedDescription":"Open PR \"Nullable: All remaining exceptions\" (#23676)"},{"Id":"428492988","IsPullRequest":true,"CreatedAt":"2019-04-02T23:38:04","Actor":"CarolEidt","Number":"23675","RawContent":null,"Title":"Arm64 vector ABI","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/23675","RelatedDescription":"Open PR \"Arm64 vector ABI\" (#23675)"},{"Id":"428492677","IsPullRequest":true,"CreatedAt":"2019-04-02T23:36:50","Actor":"fiigii","Number":"23674","RawContent":null,"Title":"Fix #23672","State":"open","Body":"With altjit, ARM64 JIT can get the namespace of x86 intrinsics (right?). Remove this assert and let the lookup code handle the unsupported intrinsics.\r\n\r\nFixes  #23672.\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/23674","RelatedDescription":"Open PR \"Fix #23672\" (#23674)"},{"Id":"428480505","IsPullRequest":true,"CreatedAt":"2019-04-02T22:50:32","Actor":"CarolEidt","Number":"23673","RawContent":null,"Title":"Fix Arm64 intrinsic lookup","State":"open","Body":"Fix #23669","Url":"https://github.com/dotnet/coreclr/pull/23673","RelatedDescription":"Open PR \"Fix Arm64 intrinsic lookup\" (#23673)"},{"Id":"428477849","IsPullRequest":false,"CreatedAt":"2019-04-02T22:41:38","Actor":"BruceForstall","Number":"23672","RawContent":null,"Title":"arm64 altjit PMI asm diffs failures","State":"open","Body":"After https://github.com/dotnet/coreclr/pull/23028, we have:\r\n```\r\nAssert failure(PID 21224 [0x000052e8], Thread: 13716 [0x3594]): Assertion failed 'strcmp(namespaceName + 25, \".Arm.Arm64\") == 0 || namespaceName[25] == '\\0'' in 'System.SpanHelpers:IndexOf(byref,ushort,\r\nint):int' (IL size 339)\r\n    File: f:\\gh\\coreclr12\\src\\jit\\importer.cpp Line: 4279\r\n    Image: f:\\gh\\coreclr10\\bin\\tests\\Windows_NT.x64.Checked\\Tests\\Core_Root\\corerun.exe\r\n```\r\n\r\nWith, e.g., on x64 checked:\r\n```\r\njit-diff diff --pmi --diff --base --base_root f:\\gh\\coreclr12 --arch x64 --build Checked --altjit protononjit.dll --corelib\r\n```\r\n","Url":"https://github.com/dotnet/coreclr/issues/23672","RelatedDescription":"Open issue \"arm64 altjit PMI asm diffs failures\" (#23672)"},{"Id":"428474522","IsPullRequest":true,"CreatedAt":"2019-04-02T22:30:33","Actor":"BruceForstall","Number":"23671","RawContent":null,"Title":"Improve COMPlus_JitFunctionTrace","State":"open","Body":"Indicated if the generated function was generated by altjit.\r\nThis helps when there is code generated by both altjit and non-altjit.","Url":"https://github.com/dotnet/coreclr/pull/23671","RelatedDescription":"Open PR \"Improve COMPlus_JitFunctionTrace\" (#23671)"},{"Id":"428473990","IsPullRequest":true,"CreatedAt":"2019-04-02T22:28:57","Actor":"BruceForstall","Number":"23670","RawContent":null,"Title":"Fix arm altjit asm diffs","State":"open","Body":"At shutdown, the VM iterates over generated code as part of ETW\r\n\"rundown\". This currently includes altjit generated code. It calls\r\nfunctions which interprets the code as native code, e.g., arm32\r\nGC info as x86 GC info.\r\n\r\nThe fix is to make a call to BackoutJitData(), which was already\r\nsuggested in the comments. This removes the altjit generated code\r\nfrom the \"nibble map\", and hence from the iteration.\r\n\r\nFixes #23393","Url":"https://github.com/dotnet/coreclr/pull/23670","RelatedDescription":"Open PR \"Fix arm altjit asm diffs\" (#23670)"},{"Id":"428472165","IsPullRequest":false,"CreatedAt":"2019-04-02T22:22:40","Actor":"CarolEidt","Number":"23669","RawContent":null,"Title":"[Arm64] HardwareIntrinsics test failures","State":"open","Body":"Probably hidden by the other Arm64 failures (#23577) there are now 4 additional failures. These are:\r\n```\r\nJIT\\HardwareIntrinsics\\General\\NotSupported\\NotSupported_ro\\NotSupported_ro.cmd\r\nJIT\\HardwareIntrinsics\\General\\NotSupported\\NotSupported_r\\NotSupported_r.cmd\r\nJIT\\HardwareIntrinsics\\General\\Vector64_1\\Vector64_1_r\\Vector64_1_r.cmd\r\nJIT\\HardwareIntrinsics\\General\\Vector64_1\\Vector64_1_ro\\Vector64_1_ro.cmd\r\n```\r\nThis appears to be an off-by-one error here: https://github.com/dotnet/coreclr/blob/master/src/jit/hwintrinsicArm64.cpp#L113.\r\nNote the extra `- 1` in the x86 case: https://github.com/dotnet/coreclr/blob/master/src/jit/hwintrinsicxarch.cpp#L60\r\n\r\nI'll have a PR up shortly.","Url":"https://github.com/dotnet/coreclr/issues/23669","RelatedDescription":"Open issue \"[Arm64] HardwareIntrinsics test failures\" (#23669)"},{"Id":"428408097","IsPullRequest":true,"CreatedAt":"2019-04-02T22:06:00","Actor":"stephentoub","Number":"23663","RawContent":null,"Title":"Nullable: System.Threading","State":"closed","Body":"Finishes off annotation of the System.Threading namespace, not including subnamespaces.","Url":"https://github.com/dotnet/coreclr/pull/23663","RelatedDescription":"Closed or merged PR \"Nullable: System.Threading\" (#23663)"},{"Id":"428200094","IsPullRequest":true,"CreatedAt":"2019-04-02T21:49:28","Actor":"dotnet-maestro[bot]","Number":"23652","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190401.12\r\n- **Date Produced**: 4/2/2019 1:18 AM\r\n- **Commit**: 505e38906e1ee2d032c41bb297de0958307db946\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19201.12\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19201.12\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/23652","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#23652)"},{"Id":"428452546","IsPullRequest":false,"CreatedAt":"2019-04-02T21:27:12","Actor":"GrabYourPitchforks","Number":"23666","RawContent":null,"Title":"JIT should suppress zero-extending same-register moves in more scenarios","State":"open","Body":"Related to https://github.com/dotnet/coreclr/pull/22454. An optimization was previously introduced in coreclr which eliminates unnecessary `mov` instructions when zero-extending registers. However, that optimization only looks back one instruction to determine if the elimination is worthwhile.\r\n\r\nPer https://github.com/dotnet/coreclr/pull/23665, we have evidence that there's benefit to be realized from looking back more than one instruction when performing this optimization. We should be more aggressive about eliminating these `mov` instructions.","Url":"https://github.com/dotnet/coreclr/issues/23666","RelatedDescription":"Open issue \"JIT should suppress zero-extending same-register moves in more scenarios\" (#23666)"},{"Id":"428451922","IsPullRequest":true,"CreatedAt":"2019-04-02T21:25:31","Actor":"GrabYourPitchforks","Number":"23665","RawContent":null,"Title":"[WIP] Performance improvements to Span.Slice","State":"open","Body":"This updates `Span<T>.Slice` and `ReadOnlySpan<T>.Slice` to zero-extend rather than sign-extend the index when computing the new base address. It's a proof of concept demonstrating the performance gains we can get from addressing https://github.com/dotnet/coreclr/issues/23666. I hacked together a prototype that performs `mov` elimination in all cases, then re-introduced this PR and reran the benchmarks to come up with the following results.\r\n\r\n|         Method |  Toolchain |     Mean |     Error |    StdDev | Ratio |\r\n|--------------- |----------- |---------:|----------:|----------:|------:|\r\n| Utf8Parser_Sum | 3.0-master | 20.97 ms | 0.4830 ms | 1.0903 ms |  1.00 |\r\n| Utf8Parser_Sum |  spanslice | 19.78 ms | 0.3494 ms | 0.3269 ms |  0.88 |\r\n|                |            |          |           |           |       |\r\n|    CountSpaces | 3.0-master | 12.92 ms | 0.2084 ms | 0.1848 ms |  1.00 |\r\n|    CountSpaces |  spanslice | 12.57 ms | 0.1028 ms | 0.0911 ms |  0.97 |\r\n\r\n```cs\r\nprivate readonly byte[] _bytes = Encoding.UTF8.GetBytes(\"1 22 333 4444 55555 666666 7777777 1 22 333 4444 55555 666666 7777777 1 22 333 4444 55555 666666 7777777 1 22 333 4444 55555 666666 7777777 \");\r\n\r\n[Benchmark]\r\n[MethodImpl(MethodImplOptions.AggressiveOptimization)]\r\npublic int Utf8Parser_Sum()\r\n{\r\n    byte[] bytes = _bytes;\r\n    _ = bytes.Length; // allow JIT to determine non-null\r\n    int sum = default;\r\n\r\n    for (int i = NUM_ITERS; i > 0; i--)\r\n    {\r\n        ReadOnlySpan<byte> copy = bytes;\r\n        while (!copy.IsEmpty)\r\n        {\r\n            Utf8Parser.TryParse(copy, out int value, out int bytesConsumed, 'N');\r\n            copy = copy.Slice(bytesConsumed);\r\n            copy = copy.Slice(1);\r\n            sum += value;\r\n        }\r\n    }\r\n\r\n    return sum;\r\n}\r\n\r\n[Benchmark]\r\n[MethodImpl(MethodImplOptions.AggressiveOptimization)]\r\npublic int CountSpaces()\r\n{\r\n    byte[] bytes = _bytes;\r\n    _ = bytes.Length; // allow JIT to determine non-null\r\n    int count = default;\r\n\r\n    for (int i = NUM_ITERS; i > 0; i--)\r\n    {\r\n        ReadOnlySpan<byte> copy = bytes;\r\n        while (!copy.IsEmpty)\r\n        {\r\n            int index = copy.IndexOf((byte)' ');\r\n            if (index < 0) { break; }\r\n\r\n            count++;\r\n            copy = copy.Slice(index + 1);\r\n        }\r\n    }\r\n\r\n    return count;\r\n}\r\n```\r\n\r\nI didn't change the other overloads of `Slice` because I couldn't create a benchmark that clearly demonstrated a perf win.","Url":"https://github.com/dotnet/coreclr/pull/23665","RelatedDescription":"Open PR \"[WIP] Performance improvements to Span.Slice\" (#23665)"},{"Id":"428446065","IsPullRequest":true,"CreatedAt":"2019-04-02T21:10:32","Actor":"jkoritzinsky","Number":"23664","RawContent":null,"Title":"Change Auto charset to mean UTF-8 off-Windows","State":"open","Body":"Match Mono's behavior by changing the Auto character set to mean UTF-8 on non-Windows platforms (new behavior) and UCS-2/UTF-16 on Windows (current behavior).\r\n\r\nFixes #23464 \r\nFixes dotnet/corefx#32442\r\n\r\nImpact of breaking change: It is highly unlikely that anyone is actively using current behavior since it is inconsistent with Mono and doesn't match any native system APIs on non-Windows platforms (they're all UTF-8 based).\r\n\r\nWe will need to update our documentation to reflect this updated behavior.","Url":"https://github.com/dotnet/coreclr/pull/23664","RelatedDescription":"Open PR \"Change Auto charset to mean UTF-8 off-Windows\" (#23664)"},{"Id":"428398193","IsPullRequest":true,"CreatedAt":"2019-04-02T19:19:10","Actor":"brianrob","Number":"23662","RawContent":null,"Title":"Emit event for calls to ReadyToRunInfo::GetEntryPoint.","State":"open","Body":"Adds a new R2RGetEntryPoint event for use in diagnosing R2R method lookup behavior.  As an example, I used this event to help diagnose #23640.","Url":"https://github.com/dotnet/coreclr/pull/23662","RelatedDescription":"Open PR \"Emit event for calls to ReadyToRunInfo::GetEntryPoint.\" (#23662)"},{"Id":"428245637","IsPullRequest":true,"CreatedAt":"2019-04-02T18:53:48","Actor":"stephentoub","Number":"23655","RawContent":null,"Title":"Nullable: Interlocked, Volatile","State":"closed","Body":"Also fixing the class? annotation on public LazyInitializer methods.","Url":"https://github.com/dotnet/coreclr/pull/23655","RelatedDescription":"Closed or merged PR \"Nullable: Interlocked, Volatile\" (#23655)"},{"Id":"428385265","IsPullRequest":true,"CreatedAt":"2019-04-02T18:48:28","Actor":"jorive","Number":"23661","RawContent":null,"Title":"[release/2.2][Port] Fix EventPipe EventHandle Caching for TraceLogging (#18355)","State":"open","Body":"#### Description\r\n\r\nEnabling ETW or EventPipe tracing results in a unbound memory usage by the runtime.\r\n\r\n \r\n#### Customer Impact\r\n\r\nIt impacts anyone using Azure customers using ASP.NET Core on App Service with Application Insights Profiler when ETW/EventPipe listeners are enabled.\r\n\r\n \r\n#### Regression?\r\n\r\nYes, this is a regression. ETW scenario now shares some of the code of EventPipe, and this shared code introduced the bug where events were not properly cached. This results in a redundant allocation for the same event for as long as a session was recorded.\r\n\r\n\r\n#### Risk\r\n\r\nThe risk is low. We checked this in a year ago and there have not been any issues reported with it. In addition, the code is only active when tracing is enabled.\r\nI have manually tested the ETW and EventPipe scenarios reported and I can confirm that the bug is fixed (it is not on master branch neither), and I have stepped through the debugger to verify we do not keep allocating memory for the same event.\r\n\r\n\r\n#### Issue\r\n\r\nFixes https://github.com/dotnet/coreclr/issues/23562\r\nOriginally at Microsoft/ApplicationInsights-dotnet#1102, and  https://github.com/aspnet/AspNetCore/issues/8648","Url":"https://github.com/dotnet/coreclr/pull/23661","RelatedDescription":"Open PR \"[release/2.2][Port] Fix EventPipe EventHandle Caching for TraceLogging (#18355)\" (#23661)"},{"Id":"428268334","IsPullRequest":true,"CreatedAt":"2019-04-02T18:37:27","Actor":"stephentoub","Number":"23656","RawContent":null,"Title":"Nullable: Overlapped and friends","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/23656","RelatedDescription":"Closed or merged PR \"Nullable: Overlapped and friends\" (#23656)"},{"Id":"428354901","IsPullRequest":true,"CreatedAt":"2019-04-02T18:15:13","Actor":"safern","Number":"23659","RawContent":null,"Title":"Merge master into NullableFeature","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/23659","RelatedDescription":"Closed or merged PR \"Merge master into NullableFeature\" (#23659)"},{"Id":"428362633","IsPullRequest":true,"CreatedAt":"2019-04-02T17:53:55","Actor":"dotnet-maestro-bot","Number":"23660","RawContent":null,"Title":"[automated] Merge branch 'master' => 'release/3.0'","State":"open","Body":"I detected changes in the master branch which have not been merged yet to release/3.0. I'm a robot and am configured to help you automatically keep release/3.0 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on master by the following committers:\n\n* @fadimounir\n* @stephentoub\n* @AndyAyersMS\n* @jorive\n* @MichalStrehovsky\n* @echesakovMSFT\n* @jkotas\n* @sdmaclea\n* @GrabYourPitchforks\n* @CarolEidt\n* @tarekgh\n* @sandreenko\n* @BruceForstall\n* @briansull\n* @tannergooding\n* @jkoritzinsky\n* @janvorli\n* @franksinankaya\n* @sywhang\n* @safern\n* @VSadov\n* @swaroop-sridhar\n* @cshung\n* @davidwrighton\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout master\r\ngit pull --ff-only\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit merge --no-ff master\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/master-to-release/3.0'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/23660","RelatedDescription":"Open PR \"[automated] Merge branch 'master' => 'release/3.0'\" (#23660)"},{"Id":"428343956","IsPullRequest":true,"CreatedAt":"2019-04-02T17:41:49","Actor":"fadimounir","Number":"23658","RawContent":null,"Title":"Output error messages to stderr. This provides a better integration with the .NET SDK","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/23658","RelatedDescription":"Closed or merged PR \"Output error messages to stderr. This provides a better integration with the .NET SDK\" (#23658)"},{"Id":"428323693","IsPullRequest":true,"CreatedAt":"2019-04-02T16:22:29","Actor":"stephentoub","Number":"23657","RawContent":null,"Title":"Nullable: ReaderWriterLockSlim","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/23657","RelatedDescription":"Open PR \"Nullable: ReaderWriterLockSlim\" (#23657)"},{"Id":"428217019","IsPullRequest":true,"CreatedAt":"2019-04-02T16:18:42","Actor":"dotnet-maestro[bot]","Number":"23654","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190402.01\r\n- **Date Produced**: 4/2/2019 9:53 AM\r\n- **Commit**: 44d2cf6db601c5f7303d614cfca201023645021f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview4-27602-01\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/23654","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#23654)"},{"Id":"428215054","IsPullRequest":true,"CreatedAt":"2019-04-02T16:18:24","Actor":"dotnet-maestro[bot]","Number":"23653","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190401.9\r\n- **Date Produced**: 4/2/2019 7:44 AM\r\n- **Commit**: 85cec01822bc70fbc45a25001997b0c1e71b1d22\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview4.19201.9\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 4.6.0-preview4.19201.9\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/23653","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#23653)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"428388246","IsPullRequest":false,"CreatedAt":"2019-04-03T03:53:28","Actor":"dylank","Number":"11055","RawContent":null,"Title":"dotnet restore --interactive: 401 Unauthorized on Windows with Azure DevOps feed","State":"closed","Body":"## Steps to reproduce\r\n\r\ndotnet restore always fails on Windows when connecting to a private feed hosted on ADO.\r\n\r\n```\r\n>dotnet restore --interactive\r\n  Restoring packages for ....csproj...\r\n  Restoring packages for ...csproj...\r\nC:\\Program Files\\dotnet\\sdk\\2.2.104\\NuGet.targets(114,5): error : Unable to load the service index for source https://pkgs.dev.azure.com/microsoft/_packaging/something/nuget/v3/index.json. [....sln]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.104\\NuGet.targets(114,5): error :   Response status code does not indicate success: 401 (Unauthorized). [....sln]\r\n```\r\n\r\n## Expected  behavior\r\nRunning `dotnet restore --interactive` should prompt for code auth, like it does on macOS. Alternatively, running `dotnet restore` should behave like `nuget restore` does, and prompt for credentials allowing you to enter a PAT.\r\n\r\n## Actual behavior\r\nOn Windows 10, running `dotnet restore --interactive` or `dotnet restore` will always fail when connecting to a private feed on ADO.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.104\r\n Commit:    73f036d4ac\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.104\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.2\r\n  Commit:  a4fd7b2c84\r\n\r\n.NET Core SDKs installed:\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.102 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11055","RelatedDescription":"Closed issue \"dotnet restore --interactive: 401 Unauthorized on Windows with Azure DevOps feed\" (#11055)"},{"Id":"428518835","IsPullRequest":false,"CreatedAt":"2019-04-03T01:28:07","Actor":"flcdrg","Number":"11058","RawContent":null,"Title":"dotnet-install.ps1 installs locally even when same version is already installed globally","State":"open","Body":"## Steps to reproduce\r\n\r\n1. On a machine that already has 2.2.101 SDK installed\r\n2. `.\\dotnet-install.ps1 -Version 2.2.101`\r\n\r\n## Expected behavior\r\n\r\nDo nothing. \r\n\r\nMaybe provide a `-Force` parameter so that only when that is given, do you still install the version\r\n\r\n## Actual behavior\r\n\r\nVersion is installed into `c:\\users\\USERNAME\\AppData\\Local\\Microsoft\\dotnet`, even if it was already installed in `C:\\Program Files\\dotnet\\sdk`\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.101\r\n Commit:    236713b0b7\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  6.3.9600\r\n OS Platform: Windows\r\n RID:         win81-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.101\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0-preview2-003156 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11058","RelatedDescription":"Open issue \"dotnet-install.ps1 installs locally even when same version is already installed globally\" (#11058)"},{"Id":"428417045","IsPullRequest":false,"CreatedAt":"2019-04-02T22:51:53","Actor":"richlander","Number":"11056","RawContent":null,"Title":"dotnet build doesn't work when filtered to a supported framework for current SDK","State":"closed","Body":"I am wanting to build a project with the .NET Core 2.2 SDK. The project targets .NET Core 3.0 and 2.2. It should work, but instead, it makes me sad.\r\n\r\n```console\r\nC:\\git\\testapps\\cpumath>type cpumath.csproj\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFrameworks>netcoreapp3.0;net472;netcoreapp2.2</TargetFrameworks>\r\n    <RuntimeIdentifiers>win-x64;linux-x64</RuntimeIdentifiers>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.ML.CpuMath\" Version=\"0.11.0\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\nC:\\git\\testapps\\cpumath>dotnet build -f netcoreapp2.2\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nC:\\Program Files\\dotnet\\sdk\\2.2.105\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.TargetFrameworkInference.targets(137,5): error NETSDK1045: The current .NET SDK does not support targeting .NET Core 3.0.  Either target .NET Core 2.2 or lower, or use a version of the .NET SDK that supports .NET Core 3.0. [C:\\git\\testapps\\cpumath\\cpumath.csproj]\r\n\r\nC:\\git\\testapps\\cpumath>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.105\r\n Commit:    7cecb35b92\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.105\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview4-27529-09\r\n  Commit:  0a688d1b7e\r\n```","Url":"https://github.com/dotnet/cli/issues/11056","RelatedDescription":"Closed issue \"dotnet build doesn't work when filtered to a supported framework for current SDK\" (#11056)"},{"Id":"428419314","IsPullRequest":false,"CreatedAt":"2019-04-02T20:09:09","Actor":"richlander","Number":"11057","RawContent":null,"Title":"File in use problems","State":"open","Body":"I am using .NET Core and in a short timespan, I see the following two errors. They are intermittent (build again and the error goes away). I am using VS Code at the same time (if that matters). I have never seen this before. Any clues what might be going on? These are serious issues if at all pervasive.\r\n\r\n```console\r\nC:\\git\\testapps\\cpumath>dotnet build\r\nMicrosoft (R) Build Engine version 16.1.46-preview+ge12aa7ba78 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 971.7 ms for C:\\git\\testapps\\cpumath\\cpumath.csproj.\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-011022\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.RuntimeIdentifierInference.targets(151,5): message NETSDK1057: You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview [C:\\git\\testapps\\cpumath\\cpumath.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-011022\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.GenerateAssemblyInfo.targets(133,5): error MSB3713: The file \"obj\\Debug\\netcoreapp3.0\\cpumath.AssemblyInfo.cs\" could not be created. The process cannot access the file 'C:\\git\\testapps\\cpumath\\obj\\Debug\\netcoreapp3.0\\cpumath.AssemblyInfo.cs' because it is being used by another process. [C:\\git\\testapps\\cpumath\\cpumath.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-011022\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.RuntimeIdentifierInference.targets(151,5): message NETSDK1057: You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview [C:\\git\\testapps\\cpumath\\cpumath.csproj]\r\n  cpumath -> C:\\git\\testapps\\cpumath\\bin\\Debug\\net472\\cpumath.exe\r\n\r\nBuild FAILED.\r\n\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-011022\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.GenerateAssemblyInfo.targets(133,5): error MSB3713: The file \"obj\\Debug\\netcoreapp3.0\\cpumath.AssemblyInfo.cs\" could not be created. The process cannot access the file 'C:\\git\\testapps\\cpumath\\obj\\Debug\\netcoreapp3.0\\cpumath.AssemblyInfo.cs' because it is being used by another process. [C:\\git\\testapps\\cpumath\\cpumath.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:02.25\r\n```\r\n\r\nAnd then:\r\n\r\n```console\r\nC:\\git\\testapps\\cpumath>dotnet build\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restoring packages for C:\\git\\testapps\\cpumath\\cpumath.csproj...\r\n  Generating MSBuild file C:\\git\\testapps\\cpumath\\obj\\cpumath.csproj.nuget.g.props.\r\n  Generating MSBuild file C:\\git\\testapps\\cpumath\\obj\\cpumath.csproj.nuget.g.targets.\r\n  Restore completed in 345.7 ms for C:\\git\\testapps\\cpumath\\cpumath.csproj.\r\nC:\\Program Files\\dotnet\\sdk\\2.2.105\\Microsoft.Common.CurrentVersion.targets(2110,5): warning MSB3101: Could not write state file \"obj\\Debug\\netcoreapp2.2\\cpumath.csprojAssemblyReference.cache\". The process cannot access the file 'C:\\git\\testapps\\cpumath\\obj\\Debug\\netcoreapp2.2\\cpumath.csprojAssemblyReference.cache' because it is being used by another process. [C:\\git\\testapps\\cpumath\\cpumath.csproj]\r\n  cpumath -> C:\\git\\testapps\\cpumath\\bin\\Debug\\netcoreapp2.2\\cpumath.dll\r\n\r\nBuild succeeded.\r\n\r\nC:\\Program Files\\dotnet\\sdk\\2.2.105\\Microsoft.Common.CurrentVersion.targets(2110,5): warning MSB3101: Could not write state file \"obj\\Debug\\netcoreapp2.2\\cpumath.csprojAssemblyReference.cache\". The process cannot access the file 'C:\\git\\testapps\\cpumath\\obj\\Debug\\netcoreapp2.2\\cpumath.csprojAssemblyReference.cache' because it is being used by another process. [C:\\git\\testapps\\cpumath\\cpumath.csproj]\r\n    1 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:04.33\r\n```\r\n","Url":"https://github.com/dotnet/cli/issues/11057","RelatedDescription":"Open issue \"File in use problems\" (#11057)"},{"Id":"427087891","IsPullRequest":true,"CreatedAt":"2019-04-02T20:02:14","Actor":"omajid","Number":"11045","RawContent":null,"Title":"Fix bash completion when the SDK is not installed","State":"closed","Body":"The `dotnet complete` command is an SDK command. If the SDK is not installed, `dotnet complete` is not available. Triggering completion in bash without the SDK installed results in errors being shown.\r\n\r\nFix it by checking if `dotnet complete` is installed before trying to use to get completions. If the SDK is not installed, we will only show file completions.\r\n\r\nFixes #11044","Url":"https://github.com/dotnet/cli/pull/11045","RelatedDescription":"Closed or merged PR \"Fix bash completion when the SDK is not installed\" (#11045)"},{"Id":"427076141","IsPullRequest":false,"CreatedAt":"2019-04-02T20:02:14","Actor":"omajid","Number":"11044","RawContent":null,"Title":"bash completion relies on the sdk being installed","State":"closed","Body":"## Steps to reproduce\r\n\r\n0. Create a .NET Core console app, and publish it\r\n   - `dotnet new console && dotnet publish -c Release --self-contained false`\r\n1. Remove the SDK\r\n2. Install the bash completion script (https://github.com/dotnet/cli/blob/master/scripts/register-completions.bash)\r\n3. Run `dotnet b<TAB>`\r\n\r\nIn my case, I have:\r\n\r\n```\r\n$ dotnet --info\r\n\r\nHost (useful for support):\r\n  Version: 2.2.3\r\n  Commit:  6b8ad509b6\r\n\r\n.NET Core SDKs installed:\r\n  No SDKs were found.\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.NETCore.App 2.2.3 [/usr/lib64/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n$ cat /usr/share/bash-completion/completions/dotnet \r\n# bash parameter completion for the dotnet CLI\r\n\r\n_dotnet_bash_complete()\r\n{\r\n  local word=${COMP_WORDS[COMP_CWORD]}\r\n\r\n  local completions=(\"$(dotnet complete --position ${COMP_POINT} \"${COMP_LINE}\")\")\r\n\r\n  COMPREPLY=( $(compgen -W \"$completions\" -- \"$word\") )\r\n}\r\n\r\ncomplete -f -F _dotnet_bash_complete dotnet\r\n```\r\n\r\n\r\n## Expected  behavior\r\n\r\nNo completion, or just plain file completion\r\n\r\n## Actual behavior\r\n\r\n```\r\n$ dotnet bDid you mean to run dotnet SDK commands? Please install dotnet SDK from:\r\n  https://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\nin/\r\n```\r\n\r\nPlease note that the completion was triggered after `b`, and aside from including the error message, also includes the expansion of `in` (`b` + `in` = `bin` directory)\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n\r\n```\r\n$ dotnet --info\r\n\r\nHost (useful for support):\r\n  Version: 2.2.3\r\n  Commit:  6b8ad509b6\r\n\r\n.NET Core SDKs installed:\r\n  No SDKs were found.\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.NETCore.App 2.2.3 [/usr/lib64/dotnet/shared/Microsoft.NETCore.App]                                       \r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11044","RelatedDescription":"Closed issue \"bash completion relies on the sdk being installed\" (#11044)"},{"Id":"428383804","IsPullRequest":true,"CreatedAt":"2019-04-02T18:44:46","Actor":"nugetlurker","Number":"11054","RawContent":null,"Title":"Insert NuGet Build 5.1.0-rtm.5921 into cli","State":"open","Body":"Insert NuGet Build 5.1.0-rtm.5921 into cli release/2.1.7xx branch","Url":"https://github.com/dotnet/cli/pull/11054","RelatedDescription":"Open PR \"Insert NuGet Build 5.1.0-rtm.5921 into cli\" (#11054)"},{"Id":"428383784","IsPullRequest":true,"CreatedAt":"2019-04-02T18:44:43","Actor":"nugetlurker","Number":"11053","RawContent":null,"Title":"Insert NuGet Build 5.1.0-rtm.5921 into cli","State":"open","Body":"Insert NuGet Build 5.1.0-rtm.5921 into cli release/2.2.3xx branch","Url":"https://github.com/dotnet/cli/pull/11053","RelatedDescription":"Open PR \"Insert NuGet Build 5.1.0-rtm.5921 into cli\" (#11053)"},{"Id":"427278676","IsPullRequest":true,"CreatedAt":"2019-04-02T12:51:04","Actor":"dotnet-maestro[bot]","Number":"11047","RawContent":null,"Title":"[master] Update dependencies from dotnet/clicommandlineparser","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190329.1\r\n- **Date Produced**: 3/29/2019 12:17 PM\r\n- **Commit**: f626e17f5984c88a164b4683bdb6c675754c07f6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19179.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190330.1\r\n- **Date Produced**: 3/30/2019 12:18 PM\r\n- **Commit**: 7afd8ced79c18b71b15ba2b24937a064e56c2459\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19180.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190330.1\r\n- **Date Produced**: 3/30/2019 12:18 PM\r\n- **Commit**: 7afd8ced79c18b71b15ba2b24937a064e56c2459\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19180.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11047","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/clicommandlineparser\" (#11047)"},{"Id":"427389125","IsPullRequest":true,"CreatedAt":"2019-04-02T12:06:28","Actor":"dotnet-maestro[bot]","Number":"11048","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190330.1\r\n- **Date Produced**: 3/30/2019 3:25 PM\r\n- **Commit**: 4d6c1faa02f78347dc65a2416fadec7ecef8ea7d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview4.19180.1\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190330.1\r\n- **Date Produced**: 3/30/2019 3:25 PM\r\n- **Commit**: 4d6c1faa02f78347dc65a2416fadec7ecef8ea7d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview4.19180.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11048","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11048)"},{"Id":"428188617","IsPullRequest":true,"CreatedAt":"2019-04-02T12:06:24","Actor":"dotnet-maestro[bot]","Number":"11052","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190401.12\r\n- **Date Produced**: 4/2/2019 1:18 AM\r\n- **Commit**: 505e38906e1ee2d032c41bb297de0958307db946\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19201.12\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11052","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#11052)"},{"Id":"427275611","IsPullRequest":true,"CreatedAt":"2019-04-02T05:50:47","Actor":"dotnet-maestro[bot]","Number":"11046","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190329.2\r\n- **Date Produced**: 3/29/2019 1:07 PM\r\n- **Commit**: 31abd61b43b115a6af83c92ce35ed4e8efd01dfd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19179.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190329.2\r\n- **Date Produced**: 3/29/2019 1:07 PM\r\n- **Commit**: 31abd61b43b115a6af83c92ce35ed4e8efd01dfd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19179.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190329.2\r\n- **Date Produced**: 3/29/2019 1:07 PM\r\n- **Commit**: 31abd61b43b115a6af83c92ce35ed4e8efd01dfd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19179.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11046","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11046)"},{"Id":"427767845","IsPullRequest":false,"CreatedAt":"2019-04-02T05:26:19","Actor":"dagood","Number":"11049","RawContent":null,"Title":"2.2.105.toolpath.sentinel directory missing ?","State":"closed","Body":"@DweeberlyLoom commented on [Wed Mar 20 2019](https://github.com/dotnet/core/issues/2483)\n\nProblem encountered on https://dotnet.microsoft.com/learn/web/aspnet-microservice-tutorial/create\r\nOperating System: windows\r\n\r\n```\r\nPS C:\\Users\\dweeb> dotnet new webapi -o myMicroservice --no-https\r\nSystem.UnauthorizedAccessException: Access to the path 'C:\\Users\\dweeb\\.dotnet\\2.2.105.toolpath.sentinel' is denied.\r\n   at System.IO.FileStream.ValidateFileHandle(SafeFileHandle fileHandle)\r\n   at System.IO.FileStream.CreateFileOpenHandle(FileMode mode, FileShare share, FileOptions options)\r\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)\r\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize)\r\n   at System.IO.File.Create(String path)\r\n   at Microsoft.Extensions.EnvironmentAbstractions.FileWrapper.CreateEmptyFile(String path)\r\n   at Microsoft.DotNet.Configurer.FileSentinel.Create()\r\n   at Microsoft.DotNet.Configurer.DotnetFirstTimeUseConfigurer.Configure()\r\n   at Microsoft.DotNet.Cli.Program.ConfigureDotNetForFirstTimeUse(INuGetCacheSentinel nugetCacheSentinel, IFirstTimeUseNoticeSentinel firstTimeUseNoticeSentinel, IAspNetCertificateSentinel aspNetCertificateSentinel, IFileSentinel toolPathSentinel, Boolean hasSuperUserAccess, DotnetFirstRunConfiguration dotnetFirstRunConfiguration, IEnvironmentProvider environmentProvider)\r\n   at Microsoft.DotNet.Cli.Program.ProcessArgs(String[] args, ITelemetry telemetryClient)\r\n   at Microsoft.DotNet.Cli.Program.Main(String[] args)\r\nPS C:\\Users\\dweeb> dir 'C:\\Users\\dweeb\\.dotnet\\2.2.105*'\r\n\r\n\r\n    Directory: C:\\Users\\dweeb\\.dotnet\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\n-a----        3/20/2019   9:01 PM              5 2.2.105_IsDockerContainer.dotnetUserLevelCache\r\n-a----        3/20/2019   9:01 PM             64 2.2.105_MachineId.dotnetUserLevelCache\r\n```\r\n\r\nIt would appear that the SDK doesn't install what you think it installs ... ?\r\n\n\n---\n\n@karelz commented on [Sat Mar 30 2019](https://github.com/dotnet/core/issues/2483#issuecomment-478274906)\n\n@DweeberlyLoom how did you install the SDK?\r\nIs it maybe some weird machine setup? Can you try it on clean VM/another machine to see if it is one machine problem or general problem? Thanks!\n\n---\n\n@karelz commented on [Sat Mar 30 2019](https://github.com/dotnet/core/issues/2483#issuecomment-478274928)\n\ncc @dagood \n\n---\n\n@dagood commented on [Mon Apr 01 2019](https://github.com/dotnet/core/issues/2483#issuecomment-478623911)\n\nMoving to the dotnet/cli repo because `Microsoft.DotNet.Configurer.FileSentinel` lives there, and I think the people with the most context will see it there.\r\n\r\nSo far, this does look like an unusual permissions issue: `System.UnauthorizedAccessException: Access to the path 'C:\\Users\\dweeb\\.dotnet\\2.2.105.toolpath.sentinel' is denied.`\r\n\n\n","Url":"https://github.com/dotnet/cli/issues/11049","RelatedDescription":"Closed issue \"2.2.105.toolpath.sentinel directory missing ?\" (#11049)"},{"Id":"427800049","IsPullRequest":false,"CreatedAt":"2019-04-01T21:34:32","Actor":"Trolldemorted","Number":"11050","RawContent":null,"Title":"CTRL+Cing console apps started dotnet run doesn't wait for the target to terminate","State":"closed","Body":"# Original issue (https://github.com/dotnet/core/issues/2530):\r\n\r\nLet's consider this brief demo:\r\n\r\n```c#\r\nprivate static readonly CancellationTokenSource CancelSource = new CancellationTokenSource();\r\npublic static void Main()\r\n{\r\n    Console.WriteLine(\"Hello world!\");\r\n    Console.CancelKeyPress += (s, e) =>\r\n    {\r\n        e.Cancel = true;\r\n        CancelSource.Cancel();\r\n        Console.WriteLine(\"CancelKeyPress event handler finished\");\r\n    };\r\n    CancelSource.Token.WaitHandle.WaitOne();\r\n    Task.Delay(1000).Wait();\r\n    Console.WriteLine(\"Main finished\");\r\n}\r\n```\r\nAs you can see, the Program is waiting for the cancel event, stating that it does not want to be shut down, waiting one second, printing \"Main finished\" and exiting.\r\n\r\nI would expect the output to be:\r\n```\r\nC:\\Users\\Benni\\source\\repos\\Test\\Test>dotnet run\r\nHello world!\r\nCancelKeyPress event handler finished\r\n^C\r\nMain finished\r\nC:\\Users\\Benni\\source\\repos\\Test\\Test>\r\n```\r\nBut it is:\r\n```\r\nC:\\Users\\Benni\\source\\repos\\Test\\Test>dotnet run\r\nHello world!\r\nCancelKeyPress event handler finished\r\n^C\r\nC:\\Users\\Benni\\source\\repos\\Test\\Test>Main finished\r\n```\r\nUnfortunately the shells (I tested bash, cmd.exe and powershell) print the CWD (for the next command) before the program has actually finished running!\r\n\r\n# .NET CLI's role\r\n\r\nWe managed to narrow the problem down to the usage of `dotnet run`. If you run the produced dll directly (e.g. `dotnet .\\bin\\Debug\\netcoreapp2.2\\Test.dll` the program works as expected, if you use `dotnet run` it does not.\r\n\r\nI will be closing my original issue, and hope here is the right place to report this.\r\n\r\n## Affected systems\r\n\r\nWhen building with dotnet sdk 2.2.105 the problem is reproducible on W10 1809 and on Archlinux. A [stackoverflow user states](https://stackoverflow.com/questions/55441329/cancelkeypress-handler-confuses-shells-cmd-exe-powershell-and-bash) that on his system the shells behave differently and the problem does not occur, but he or she is using dotnet sdk v2.2.103.\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11050","RelatedDescription":"Closed issue \"CTRL+Cing console apps started dotnet run doesn't wait for the target to terminate\" (#11050)"},{"Id":"425776962","IsPullRequest":true,"CreatedAt":"2019-04-01T20:14:56","Actor":"wli3","Number":"11029","RawContent":null,"Title":"Remove skip first run flag and simplify flags","State":"closed","Body":"Review by commit will be easier.","Url":"https://github.com/dotnet/cli/pull/11029","RelatedDescription":"Closed or merged PR \"Remove skip first run flag and simplify flags\" (#11029)"},{"Id":"427835882","IsPullRequest":false,"CreatedAt":"2019-04-01T17:56:25","Actor":"tylerohlsen","Number":"11051","RawContent":null,"Title":"Inconsistent target path between solution build and project build when platform specified","State":"open","Body":"## Steps to reproduce\r\nThe target path / output directory are different building the solution vs building the project when the platform is specified.\r\n`dotnet build MyProject.sln /p:Platform=\"Any CPU\"`  \r\n`dotnet build MyProject.csproj /p:Platform=\"Any CPU\"`  \r\n(where MyProject.sln contains MyProject.csproj)\r\n\r\n## Expected  behavior\r\nThe TargetPath for MyProject for both commands should be the same.\r\n\r\n## Actual behavior\r\nTargetPath when building the solution: ```MyProject\\bin\\Debug\\netstandard2.0\\MyProject.dll```\r\nTargetPath when building the project: ```MyProject\\bin\\Any CPU\\Debug\\netstandard2.0\\MyProject.dll```\r\n\r\n## Environment data\r\n<details><summary>My environment data</summary>  \r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.101\r\n Commit:    236713b0b7\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.101\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0-preview2-003131 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0-preview4-004233 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0-rc3-004530 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download```\r\n</details>","Url":"https://github.com/dotnet/cli/issues/11051","RelatedDescription":"Open issue \"Inconsistent target path between solution build and project build when platform specified\" (#11051)"},{"Id":"426954968","IsPullRequest":true,"CreatedAt":"2019-03-31T00:03:37","Actor":"dotnet-maestro[bot]","Number":"11041","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190328.2\r\n- **Date Produced**: 3/29/2019 3:17 AM\r\n- **Commit**: 0979dd3c53a8971a5434cf4bc68efd103fe5ea68\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview4.19178.2\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190328.2\r\n- **Date Produced**: 3/29/2019 3:17 AM\r\n- **Commit**: 0979dd3c53a8971a5434cf4bc68efd103fe5ea68\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview4.19178.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11041","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11041)"},{"Id":"426954799","IsPullRequest":true,"CreatedAt":"2019-03-29T21:09:16","Actor":"dotnet-maestro[bot]","Number":"11040","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190329.1\r\n- **Date Produced**: 3/29/2019 10:57 AM\r\n- **Commit**: ef139c7533e2e33c5e0946b80cb1aa95d84da868\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19179.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11040","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11040)"},{"Id":"426684590","IsPullRequest":true,"CreatedAt":"2019-03-29T18:14:06","Actor":"Jalalx","Number":"11033","RawContent":null,"Title":"fix add package when package directory has spaces","State":"closed","Body":"This should close #10685 ","Url":"https://github.com/dotnet/cli/pull/11033","RelatedDescription":"Closed or merged PR \"fix add package when package directory has spaces\" (#11033)"},{"Id":"426969288","IsPullRequest":true,"CreatedAt":"2019-03-29T13:16:06","Actor":"dotnet-maestro[bot]","Number":"11042","RawContent":null,"Title":"[master] Update dependencies from dotnet/clicommandlineparser","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190328.1\r\n- **Date Produced**: 3/28/2019 12:27 PM\r\n- **Commit**: f4808f6e7125b60874d69fb43a4ab0f7d19358f5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19178.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11042","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/clicommandlineparser\" (#11042)"},{"Id":"426953327","IsPullRequest":true,"CreatedAt":"2019-03-29T12:01:12","Actor":"dotnet-bot","Number":"11039","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11039","RelatedDescription":"Open PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#11039)"},{"Id":"426953308","IsPullRequest":true,"CreatedAt":"2019-03-29T12:01:08","Actor":"dotnet-bot","Number":"11038","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11038","RelatedDescription":"Open PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#11038)"},{"Id":"426743426","IsPullRequest":true,"CreatedAt":"2019-03-29T03:28:21","Actor":"livarcocc","Number":"11035","RawContent":null,"Title":"Fixing publish step on the CLI","State":"closed","Body":"Added - group: DotNet-Blob-Feed to the list of groups which brings dotnetfeed-storage-access-key-1 key.","Url":"https://github.com/dotnet/cli/pull/11035","RelatedDescription":"Closed or merged PR \"Fixing publish step on the CLI\" (#11035)"},{"Id":"426756846","IsPullRequest":true,"CreatedAt":"2019-03-29T01:42:45","Actor":"dotnet-bot","Number":"11037","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.2.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11037","RelatedDescription":"Closed or merged PR \"Merge release/2.1.5xx to release/2.2.1xx\" (#11037)"},{"Id":"426756832","IsPullRequest":true,"CreatedAt":"2019-03-29T01:42:05","Actor":"dotnet-bot","Number":"11036","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.1.6xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.1.6xx\ngit reset --hard upstream/release/2.1.6xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.1.6xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11036","RelatedDescription":"Closed or merged PR \"Merge release/2.1.5xx to release/2.1.6xx\" (#11036)"},{"Id":"426295690","IsPullRequest":true,"CreatedAt":"2019-03-28T21:49:55","Actor":"livarcocc","Number":"11030","RawContent":null,"Title":"Change the YAML from phases to jobs and make it use the new pools of machines.","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11030","RelatedDescription":"Closed or merged PR \"Change the YAML from phases to jobs and make it use the new pools of machines.\" (#11030)"},{"Id":"426721191","IsPullRequest":false,"CreatedAt":"2019-03-28T21:45:18","Actor":"wli3","Number":"11034","RawContent":null,"Title":"Update docker with build-in sudo","State":"open","Body":"To reduce the chance of build failure. Currently we need to download `sudo` for every build and due to network failure it could fail. The following images have build-in `sudo`.\r\n\r\nhttps://github.com/dotnet/dotnet-buildtools-prereqs-docker/pull/75\r\n\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-afc9dca-20190328175133\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-18.04-debpkg-cfdd435-20190328175133\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-17.10-afc9dca-20190328175132\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-17.10-debpkg-cfdd435-20190328175132\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-afc9dca-20190328175112\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-debpkg-cfdd435-20190328175112\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-coredeps-d770b8b-20190328175112\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-coredeps\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-crossdeps-cfdd435-20190328175112\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-crossdeps\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-cross-arm64-cfdd435-20190328175112\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-cross-arm64-alpine-cfdd435-20190328175112\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-cross-cfdd435-20190328175112\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-mlnet-207e097-20190328175112\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-14.04-afc9dca-20190328175106\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-14.04-debpkg-cfdd435-20190328175106\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-14.04-coredeps-4e6e894-20190328175106\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-14.04-coredeps\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-14.04-crossdeps-cfdd435-20190328175106\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-14.04-crossdeps\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-14.04-cross-cfdd435-20190328175106\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:fedora-29-afc9dca-20190328175057\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:fedora-29-helix-c6dc5e6-20190328175057\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:fedora-28-afc9dca-20190328175057\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:fedora-28-helix-45b1fa2-20190328175057\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:debian-jessie-coredeps-58e4974-20190328175052\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:debian-jessie-afc9dca-20190328175052\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:debian-jessie-debpkg-58e4974-20190328175052\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:debian-jessie-corert-58e4974-20190328175052\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:debian-stretch-docker-testrunner-63f2145-20190328175052\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:debian-stretch-afc9dca-20190328175052\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:opensuse-42.3-afc9dca-20190328191913\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:centos-7-afc9dca-20190328192013\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:centos-7-mlnet-8bba86b-20190328192013\r\nmcr.microsoft.com/dotnet-buildtools/prereqs:centos-6-afc9dca-20190328192030","Url":"https://github.com/dotnet/cli/issues/11034","RelatedDescription":"Open issue \"Update docker with build-in sudo\" (#11034)"},{"Id":"426485200","IsPullRequest":false,"CreatedAt":"2019-03-28T19:30:22","Actor":"mgravell","Number":"11031","RawContent":null,"Title":"Remove implicit feeds from the SDK.","State":"closed","Body":"## Steps to reproduce\r\n\r\nwith SDK 2, and a nuget.config that looks something like:\r\n\r\n``` xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <packageSources>\r\n        <clear />\r\n    <add key=\"Artifactory\" value=\"https://redacted.nope/artifactory/api/nuget/nuget\" />\r\n    <add key=\"MyGet\" value=\"https://www.myget.org/F/redacted/api/v3/index.json\" />\r\n  </packageSources>\r\n</configuration>\r\n```\r\n\r\nand an empty package cache (`dotnet nuget locals all --clear`), it only looks as the specified endpoints when doing `dotnet restore` (our artifactory acts as a mirror for things we've needed, etc).\r\n\r\nHowever, with SDK3, I additionally get a lot of requests to `https://dotnetfeed.blob.core.windows.net/` locations, i.e.\r\n\r\n```\r\n Restore completed in 7.69 ms for C:\\Code\\Scheduler\\src\\Scheduler.Sdk\\Scheduler.Sdk.csproj.\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/dotnet-core/flatcontainer/system.reflection.typeextensions/index.json'.\r\n  A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/dotnet-core/flatcontainer/microsoft.aspnetcore.server.kestrel/index.json'.\r\n  A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/aspnet-aspnetcore/flatcontainer/microsoft.aspnetcore.server.kestrel.core/index.json'.\r\n  A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/aspnet-entityframeworkcore/flatcontainer/system.reflection.typeextensions/index.json'.\r\n  A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/aspnet-entityframeworkcore/flatcontainer/microsoft.aspnetcore.server.kestrel.core/index.json'.\r\n  A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/aspnet-aspnetcore-tooling/flatcontainer/microsoft.codeanalysis.csharp/index.json'.\r\n  A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/aspnet-aspnetcore/flatcontainer/microsoft.codeanalysis.csharp/index.json'.\r\n  A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/aspnet-extensions/flatcontainer/microsoft.codeanalysis.csharp/index.json'.\r\n  A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/dotnet-core/flatcontainer/microsoft.codeanalysis.common/index.json'.\r\n  A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/aspnet-aspnetcore-tooling/flatcontainer/system.diagnostics.fileversioninfo/index.json'.\r\n  A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/aspnet-aspnetcore/flatcontainer/newtonsoft.json/index.json'.\r\n  A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.\r\n  Retrying 'FindPackagesByIdAsync' for source 'https://dotnetfeed.blob.core.windows.net/dotnet-core/flatcontainer/system.diagnostics.fileversioninfo/index.json'.\r\n```\r\n\r\nI'm not sure I'd expect it to be looking in those locations when there's a `<clear/>` in the config?\r\n\r\n`dotnet --info` says:\r\n\r\n```\r\nC:\\Code\\Scheduler>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview4-010959\r\n Commit:    fede0ee825\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-010959\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview4-27524-03\r\n  Commit:  f89f4f9def\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.105 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview4-010959 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview4-19172-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview4-27524-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview4-27522-14 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```","Url":"https://github.com/dotnet/cli/issues/11031","RelatedDescription":"Closed issue \"Remove implicit feeds from the SDK.\" (#11031)"},{"Id":"426606992","IsPullRequest":true,"CreatedAt":"2019-03-28T19:25:16","Actor":"wli3","Number":"11032","RawContent":null,"Title":"Update debain jessie image","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11032","RelatedDescription":"Closed or merged PR \"Update debain jessie image\" (#11032)"},{"Id":"425684807","IsPullRequest":false,"CreatedAt":"2019-03-26T22:56:18","Actor":"cmeyertons","Number":"11028","RawContent":null,"Title":"dotnet publish is slow ","State":"open","Body":"## Steps to reproduce\r\nCreate a small console app and add some NuGet packages.  Run `dotnet publish` to publish app\r\n\r\n## Expected  behavior\r\nThe publish step should perform roughly similar to a robocopy operation on newer files\r\n\r\n## Actual behavior\r\nDotnet publish is considerably slower\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11028","RelatedDescription":"Open issue \"dotnet publish is slow \" (#11028)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"428466923","IsPullRequest":false,"CreatedAt":"2019-04-02T22:06:10","Actor":"wtgodbe","Number":"1118","RawContent":null,"Title":"Consider adding Nullable annotations to .Net Standard","State":"open","Body":"https://github.com/dotnet/coreclr/tree/NullableFeature\r\n\r\nWe should consider adding the annotations from the above Feature branch to the .Net Standard for 2.1.\r\n\r\nCC @wtgodbe @terrajobst @dotnet/nullablefc ","Url":"https://github.com/dotnet/standard/issues/1118","RelatedDescription":"Open issue \"Consider adding Nullable annotations to .Net Standard\" (#1118)"},{"Id":"428187528","IsPullRequest":true,"CreatedAt":"2019-04-02T12:14:00","Actor":"dotnet-maestro[bot]","Number":"1117","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190401.12\r\n- **Date Produced**: 4/2/2019 1:18 AM\r\n- **Commit**: 505e38906e1ee2d032c41bb297de0958307db946\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19201.12\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19201.12\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19201.12\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19201.12\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19201.12\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1117","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1117)"},{"Id":"427275509","IsPullRequest":true,"CreatedAt":"2019-03-30T12:23:34","Actor":"dotnet-maestro[bot]","Number":"1116","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190329.2\r\n- **Date Produced**: 3/29/2019 1:07 PM\r\n- **Commit**: 31abd61b43b115a6af83c92ce35ed4e8efd01dfd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19179.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19179.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19179.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19179.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19179.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1116","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1116)"},{"Id":"426954195","IsPullRequest":true,"CreatedAt":"2019-03-29T12:13:42","Actor":"dotnet-maestro[bot]","Number":"1115","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190329.1\r\n- **Date Produced**: 3/29/2019 10:57 AM\r\n- **Commit**: ef139c7533e2e33c5e0946b80cb1aa95d84da868\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19179.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19179.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19179.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19179.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19179.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1115","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1115)"},{"Id":"426800191","IsPullRequest":false,"CreatedAt":"2019-03-29T03:29:38","Actor":"CalvinFengDatacom","Number":"1114","RawContent":null,"Title":"Multiple assemblies with equivalent identity have been imported","State":"open","Body":"Hi Guys,\r\n\r\nI have a wired issue with my .Net project after I push my changes to remote repository in DevOps.\r\n\r\nThe situation is, we have a .Net project was in .Net framework in version 4.6, then because of other dependencies, we need to upgrade the .Net framework to 4.6.2. It built successfully locally, but it built failed in the build pipeline of DevOps.\r\n\r\nThe error message is: \r\n\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.Serialization.Primitives.4.1.1\\lib\\net46\\System.Runtime.Serialization.Primitives.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.Serialization.Primitives.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.InteropServices.4.1.0\\lib\\net462\\System.Runtime.InteropServices.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.InteropServices.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.Extensions.4.1.0\\lib\\net462\\System.Runtime.Extensions.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.Extensions.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.4.1.0\\lib\\net462\\System.Runtime.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.IO.4.1.0\\lib\\net462\\System.IO.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.IO.dll'. Remove one of the duplicate references.\r\n- Process 'msbuild.exe' exited with code '1'.\r\n\r\nI can see there are lots of suggestions of removing one of the conflict file manually, however it doesn't work for me. \r\n\r\n_**Note again, we are using .Net Standard F/W, not .Net Core.**\r\nIt was in 4.6 and now it's in 4.6.2._\r\n\r\nLooking forward from your ideas, thanks","Url":"https://github.com/dotnet/standard/issues/1114","RelatedDescription":"Open issue \"Multiple assemblies with equivalent identity have been imported\" (#1114)"},{"Id":"420728685","IsPullRequest":false,"CreatedAt":"2019-03-28T16:46:11","Actor":"OpenSpacesAndPlaces","Number":"1100","RawContent":null,"Title":"Question....On .Net Framework 4.7 without any SDKs...","State":"closed","Body":"I'm currently running into an issue with a hosting company that only has .Net Framework 4.7 installed and no supporting SDKS for netstandard 2.0.\r\n\r\nThe netstandard 2.0. library is needed for EntityFramework Core and SignalR Core.\r\n\r\nThe problem is:\r\nCould not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified.\r\n\r\n- Simply trying to add the 4.7.1. dll results in:\r\nCould not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. Reference assemblies should not be loaded for execution.  They can only be loaded in the Reflection-only loader context\r\n\r\n- Pre-compiling/Publish has not helped.\r\n- Attempting to include the required base libraries (the ones .Net Standard would be used to pull in) has not helped.\r\n- Various combinations of assembly rules/config settings has not helped.\r\n\r\n---\r\n\r\nI'm totally fine with hand adding every last nuget package needed if there is a way to redirect the netstandard bindings to the base libraries.\r\n\r\nUnfortunately there is no RDP access to the server - so any fix has to be within the confines of bin folder drops or web.config values.\r\n\r\n---\r\n\r\nAny help appreciated!\r\nAny other details I can provide - let me know!","Url":"https://github.com/dotnet/standard/issues/1100","RelatedDescription":"Closed issue \"Question....On .Net Framework 4.7 without any SDKs...\" (#1100)"},{"Id":"426583515","IsPullRequest":false,"CreatedAt":"2019-03-28T16:14:20","Actor":"CoenraadS","Number":"1113","RawContent":null,"Title":"System.TypeInitializationException: 'The type initializer for 'Microsoft.ServiceBus.Messaging.Constants' threw an exception.'","State":"open","Body":"I have a .Net Core Project that requires `System.UriTemplate` which doesn't seem implemented.\r\n\r\n`System.TypeInitializationException: 'The type initializer for 'Microsoft.ServiceBus.Messaging.Constants' threw an exception.'`\r\n\r\n`TypeLoadException: Could not load type 'System.UriTemplate' from assembly 'System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.`\r\n\r\n.Net Core 2.1 Console Project\r\n\r\n![image](https://user-images.githubusercontent.com/5593825/55173581-3c3dfa00-517c-11e9-95d0-7380e4ce654a.png)\r\n\r\n\r\n```\r\nusing Microsoft.ServiceBus.Messaging;\r\nusing System;\r\nusing System.Linq;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            string connectionString = \"\";\r\n            var q = QueueClient.CreateFromConnectionString(connectionString, \"myqueue\");\r\n\r\n            var sessions = q.GetMessageSessions();\r\n\r\n            var names = sessions.Select(e => e.SessionId);\r\n\r\n            foreach (var name in names)\r\n            {\r\n                Console.WriteLine(name);\r\n            }\r\n        }\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/standard/issues/1113","RelatedDescription":"Open issue \"System.TypeInitializationException: 'The type initializer for 'Microsoft.ServiceBus.Messaging.Constants' threw an exception.'\" (#1113)"},{"Id":"426455070","IsPullRequest":true,"CreatedAt":"2019-03-28T12:24:04","Actor":"dotnet-maestro[bot]","Number":"1112","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190327.11\r\n- **Date Produced**: 3/28/2019 1:58 AM\r\n- **Commit**: 69f276904fdd6d8f81404b857f295537894b81d3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19177.11\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19177.11\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19177.11\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19177.11\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19177.11\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1112","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1112)"},{"Id":"426112720","IsPullRequest":true,"CreatedAt":"2019-03-27T19:57:52","Actor":"wtgodbe","Number":"1111","RawContent":null,"Title":"Update build pools","State":"closed","Body":"@MattGal @mmitche PTAL","Url":"https://github.com/dotnet/standard/pull/1111","RelatedDescription":"Closed or merged PR \"Update build pools\" (#1111)"},{"Id":"425696215","IsPullRequest":true,"CreatedAt":"2019-03-27T13:10:47","Actor":"ericstj","Number":"1109","RawContent":null,"Title":"Make some packages optional for source build","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1109","RelatedDescription":"Closed or merged PR \"Make some packages optional for source build\" (#1109)"},{"Id":"425920602","IsPullRequest":true,"CreatedAt":"2019-03-27T12:13:39","Actor":"dotnet-maestro[bot]","Number":"1110","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190326.14\r\n- **Date Produced**: 3/27/2019 12:08 AM\r\n- **Commit**: e23a3e2fd09a6222361ce47b78d23ab42867924c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19176.14\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19176.14\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19176.14\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19176.14\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19176.14\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1110","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1110)"},{"Id":"425628046","IsPullRequest":true,"CreatedAt":"2019-03-26T20:21:32","Actor":"dotnet-maestro[bot]","Number":"1108","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190325.9\r\n- **Date Produced**: 3/25/2019 10:36 PM\r\n- **Commit**: 13daa29185518ef3c6d4074fd07efbc5236a76c5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19175.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19175.9\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19175.9\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19175.9\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19175.9\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1108","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1108)"},{"Id":"425140404","IsPullRequest":true,"CreatedAt":"2019-03-26T19:53:53","Actor":"wtgodbe","Number":"1107","RawContent":null,"Title":"Add transport package for NetStandard","State":"closed","Body":"This creates a transport package, `Microsoft.Private.Standard`, which contains the same netstandard2.1 binaries as `NetStandard.Library`, but not `NetStandard.Library.Targets`. The assets are in `ref\\netstandard2.1` instead of `build\\netstandard2.1\\ref`. This transport package can be consumed by Core-Setup for the purpose of creating the targeting pack, rather than publicly shipping `NetStandard.Library`, or having Core-Setup consume its Standard dependencies through `NetStandard.Library`. Eventually we can phase out NS.L in favor of this transport package.\r\n\r\n@ericstj @dagood @terrajobst PTAL\r\n\r\nResolves https://github.com/dotnet/standard/issues/1106","Url":"https://github.com/dotnet/standard/pull/1107","RelatedDescription":"Closed or merged PR \"Add transport package for NetStandard\" (#1107)"},{"Id":"425067073","IsPullRequest":false,"CreatedAt":"2019-03-26T19:53:53","Actor":"wtgodbe","Number":"1106","RawContent":null,"Title":"Create a transport package for NetStandard","State":"closed","Body":"We should create a transport package for Net Standard, and stop shipping/building stable versions of NS.Library. Instead, we can have Core-Setup consume the transport package, and release the bits through a targeting pack. The contents should be similar to what's in NS.Library today, but in the `ref\\netstandard2.1` folder instead of `build`\r\n\r\nCC @dagood @ericstj ","Url":"https://github.com/dotnet/standard/issues/1106","RelatedDescription":"Closed issue \"Create a transport package for NetStandard\" (#1106)"},{"Id":"423998952","IsPullRequest":true,"CreatedAt":"2019-03-22T17:11:38","Actor":"dotnet-maestro[bot]","Number":"1104","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.2\r\n- **Date Produced**: 3/21/2019 6:29 PM\r\n- **Commit**: 5f884de91b56acd5d19bf792516b646e5fad19b5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19171.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19171.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.3\r\n- **Date Produced**: 3/22/2019 12:37 AM\r\n- **Commit**: b3bcf3034ff395bd09066114379ec64736b13633\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19171.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19171.3\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.6\r\n- **Date Produced**: 3/22/2019 4:35 AM\r\n- **Commit**: 2eb45ff0eed6f86f1071b16b11a447cadeeeec59\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19171.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19171.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19171.6\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19171.6\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1104","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1104)"},{"Id":"422563592","IsPullRequest":false,"CreatedAt":"2019-03-19T06:25:32","Actor":"githubdigo","Number":"1103","RawContent":null,"Title":"After updating to .netStandard 2.0.3 Convert.ToString(null) is throwing Null reference exception","State":"open","Body":"","Url":"https://github.com/dotnet/standard/issues/1103","RelatedDescription":"Open issue \"After updating to .netStandard 2.0.3 Convert.ToString(null) is throwing Null reference exception\" (#1103)"},{"Id":"421676181","IsPullRequest":true,"CreatedAt":"2019-03-18T19:09:34","Actor":"terrajobst","Number":"1102","RawContent":null,"Title":"Expose RandomNumberGenerator.GetInt32","State":"closed","Body":"Fixes #1101.","Url":"https://github.com/dotnet/standard/pull/1102","RelatedDescription":"Closed or merged PR \"Expose RandomNumberGenerator.GetInt32\" (#1102)"},{"Id":"420975088","IsPullRequest":false,"CreatedAt":"2019-03-18T19:09:34","Actor":"khellang","Number":"1101","RawContent":null,"Title":"Include System.Security.Cryptography.RandomNumberGenerator.GetInt32","State":"closed","Body":"I'd like to propose the inclusion of the new `System.Security.Cryptography.RandomNumberGenerator.GetInt32` APIs, added in https://github.com/dotnet/corefx/pull/31243.\r\n\r\nAs noted in https://github.com/dotnet/corefx/issues/30873, this is often incorrectly implemented, which can lead to security vulnerabilities and bias. It would be nice if it was part of the standard, to have a convenient API for this across all platforms.\r\n\r\nThe implementation doesn't have a lot of dependencies and could probably be (more or less) copied to other platforms.\r\n\r\n```diff\r\ndiff --git a/src/netstandard/ref/System.Security.Cryptography.cs b/src/netstandard/ref/System.Security.Cryptography.cs\r\nindex ec34484..2b7d68b 100644\r\n--- a/src/netstandard/ref/System.Security.Cryptography.cs\r\n+++ b/src/netstandard/ref/System.Security.Cryptography.cs\r\n@@ -810,6 +810,8 @@ namespace System.Security.Cryptography\r\n         public virtual void GetBytes(System.Span<byte> data) { }\r\n         public virtual void GetNonZeroBytes(byte[] data) { }\r\n         public virtual void GetNonZeroBytes(System.Span<byte> data) { }\r\n+        public static int GetInt32(int fromInclusive, int toExclusive) { throw null; }\r\n+        public static int GetInt32(int toExclusive) { throw null; }\r\n     }\r\n     [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]\r\n     public abstract partial class RC2 : System.Security.Cryptography.SymmetricAlgorithm\r\n\r\n```\r\n\r\n// @terrajobst ","Url":"https://github.com/dotnet/standard/issues/1101","RelatedDescription":"Closed issue \"Include System.Security.Cryptography.RandomNumberGenerator.GetInt32\" (#1101)"},{"Id":"419180568","IsPullRequest":false,"CreatedAt":"2019-03-10T17:28:29","Actor":"jinyuttt","Number":"1099","RawContent":null,"Title":"Elliptic Curve Cryptography","State":"closed","Body":"Provide elliptic curve cryptography? ","Url":"https://github.com/dotnet/standard/issues/1099","RelatedDescription":"Closed issue \"Elliptic Curve Cryptography\" (#1099)"},{"Id":"418668244","IsPullRequest":true,"CreatedAt":"2019-03-09T00:32:27","Actor":"stephentoub","Number":"1098","RawContent":null,"Title":"Add dummy field to TypedReference","State":"closed","Body":"cc: @terrajobst ","Url":"https://github.com/dotnet/standard/pull/1098","RelatedDescription":"Closed or merged PR \"Add dummy field to TypedReference\" (#1098)"},{"Id":"418474274","IsPullRequest":false,"CreatedAt":"2019-03-07T22:27:38","Actor":"MgSam","Number":"1097","RawContent":null,"Title":"Change .NET Standard 2.1 version number","State":"closed","Body":"It was just [announced ](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-preview-3/#) that the next version of .NET Standard will be 2.1, which will be implemented by .NET Core 3.0 and incompatible with .NET Core 2.1 and incompatible with any version of .NET Framework. Got all that?\r\n\r\nI implore you to please change the version number of Standard 2.1 before it's too late. It is extremely confusing to have it be Standard 2.1 which is incompatible with Core 2.1. I strongly feel that Standard should version alongside of Core (given that Core is the lead implementation of .NET) and should be Standard 3.0\r\n\r\nIn lieu of that, at the very least it should get a version number which doesn't actively lead to confusion by aligning with the version number of an incompatible version of Core. Standard 2.5?\r\n\r\nI know Microsoft has a reputation to uphold at being horrible at naming things, but this is a bridge too far :)","Url":"https://github.com/dotnet/standard/issues/1097","RelatedDescription":"Closed issue \"Change .NET Standard 2.1 version number\" (#1097)"},{"Id":"417603266","IsPullRequest":true,"CreatedAt":"2019-03-06T03:17:38","Actor":"terrajobst","Number":"1096","RawContent":null,"Title":"Update information for .NET Standard 2.1","State":"closed","Body":"This updates the version table for .NET Standard 2.1 as well as the API diff.\r\n\r\n/cc @mairaw ","Url":"https://github.com/dotnet/standard/pull/1096","RelatedDescription":"Closed or merged PR \"Update information for .NET Standard 2.1\" (#1096)"},{"Id":"417601953","IsPullRequest":true,"CreatedAt":"2019-03-06T03:11:36","Actor":"terrajobst","Number":"1095","RawContent":null,"Title":"Add footnote regarding .NET Framework 4.6.1 support","State":"closed","Body":"This mirrors what's already in the docs","Url":"https://github.com/dotnet/standard/pull/1095","RelatedDescription":"Closed or merged PR \"Add footnote regarding .NET Framework 4.6.1 support\" (#1095)"},{"Id":"416990675","IsPullRequest":false,"CreatedAt":"2019-03-04T21:01:09","Actor":"tannergooding","Number":"1094","RawContent":null,"Title":"Consider the HWIntrinsic APIs for NS2.1","State":"open","Body":"### Summary\r\n\r\nWe should consider including the Harware Intrinsic APIs as part of `netstandard2.1` given that they are trivial to \"support\" (you just expose the APIs and return `false` for all the `IsSupported` checks, as the shared framework code is already doing), were designed in a way that the feature can be incrementally enabled by a given runtime, are already finding use in the shared framework code, and will allow users to more readily write cross-runtime libraries.\r\n\r\n### Rationale\r\n\r\n`netcoreapp3.0` is adding ~1500 APIs in order to support the new \"Hardware Intrinsics\" feature. These APIs provide support for writing more efficient algorithms that can take advantage of hardware specific functionality.\r\n\r\nWhile the number of APIs exposed may seem daunting, the APIs are hardware specific and were designed such that you must perform the appropriate checks before attempting to use a given API or they will result in a `PlatformNotSupportedException` at runtime. For example, `System.Runtime.Intrinsics.X86.Sse` is a class that exposes the SSE ISA for the x86 and x64 architectures. Before using any of the methods on that class, you must emit an `if (Sse.IsSupported)` check to validate that both the current hardware and the current runtime support this ISA.\r\n\r\nThese API declarations are also part of the existing shared framework code and have a default implementation of returning `false` for the `IsSupported` checks and throwing `PlatformNotSupportedException` from any of the other exposed hardware-specific APIs. This has allowed us to already take a cross-runtime dependency on these intrinsics in places like `SpanHelpers`, `Decimal`, `BitOperations`, `BitArray`, and more.\r\n\r\nGiven the above, I propose that these APIs be included as part of `netstandard2.1` as it will allow general library and application developers to share in the same benefits we have already seen. That is, it will light-up on .NET Core 3.0 and will do nothing on other runtimes. This will avoid the need for them to cross-compile their code in a number of cases.\r\n\r\nFor the runtimes that don't support this functionality yet, they should require somewhere between no and minimal changes. For the most part, they should already be internally compiling these APIs and hitting the `IsSupported=false` paths. So they will ultimately just be exposing these APIs to the end-user and would require no changes. The work that may be required is to ensure that the `Vector64<T>`, `Vector128<T>`, and `Vector256<T>` types have the appropriate ABI dependent type layouts. That is, these types should have the appropriate packing (e.g. `16` for `Vector128<T>` on x86/x64 since it maps to the `__m128` ABI primitive defined by the Windows and System V calling convention specifications).\r\n\r\nExposing this will also allow the various runtimes to have incremental \"light-up\" of these APIs. That is, rather than waiting for the next release to both expose and implement the APIs, they can expose the the APIs as part of `netstandard2.1` and the corresponding version of their runtime (e.g `x.0`). They can then light up individual ISAs and make them available to their users as they see fit (e.g. They could enable just `SSE` in `x.1` and could enable SSE2/SSE3 in `x.2`, etc).\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1094","RelatedDescription":"Open issue \"Consider the HWIntrinsic APIs for NS2.1\" (#1094)"},{"Id":"416499863","IsPullRequest":false,"CreatedAt":"2019-03-03T18:13:53","Actor":"proof85","Number":"1093","RawContent":null,"Title":"HashCode to standard","State":"closed","Body":"Hi,\r\n\r\nis it possible to add the HashCode-\"Helper\" struct to the .net standard? Including the Combine method? it is covered by the .net corefx since v2.1 and it looks like there is no os or platform specific usecase","Url":"https://github.com/dotnet/standard/issues/1093","RelatedDescription":"Closed issue \"HashCode to standard\" (#1093)"},{"Id":"414920447","IsPullRequest":false,"CreatedAt":"2019-02-27T02:53:49","Actor":"divega","Number":"1092","RawContent":null,"Title":"Add string overloads to DbDataReader.Get*() to .NET Standard 2.1","State":"open","Body":"This is mainly about adding the API from https://github.com/dotnet/corefx/issues/31595 (commit https://github.com/dotnet/corefx/commit/b30fc2b4ee302e449e3580ae39cb083a76b813c9), plus possibly two additional async method possibly coming from https://github.com/dotnet/corefx/issues/35611, to .NET Standard 2.1.\r\n\r\ncc @roji @ajcvickers @terrajobst ","Url":"https://github.com/dotnet/standard/issues/1092","RelatedDescription":"Open issue \"Add string overloads to DbDataReader.Get*() to .NET Standard 2.1\" (#1092)"},{"Id":"414887877","IsPullRequest":false,"CreatedAt":"2019-02-27T00:35:13","Actor":"ChaseFlorell","Number":"1091","RawContent":null,"Title":"Collection<T> and ObservableCollection<T> do not support ranges","State":"open","Body":"This is taken directly from https://github.com/dotnet/corefx/issues/10752 [by @robertmclaws]\r\n\r\nThis API change is already approved in .netcore (tentatively scheduled for 3.0), and I think it's equally as important to be available in .netstandard\r\n\r\n```csharp\r\n    // Adds a range to the end of the collection.\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Add)\r\n    public void AddRange(IEnumerable<T> collection) => InsertItemsRange(0, collection);\r\n\r\n    // Inserts a range\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Add)\r\n    public void InsertRange(int index, IEnumerable<T> collection) => InsertItemsRange(index, collection);\r\n\r\n    // Removes a range.\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Remove)\r\n    public void RemoveRange(int index, int count) => RemoveItemsRange(index, count);\r\n\r\n    // Will allow to replace a range with fewer, equal, or more items.\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Replace)\r\n    public void ReplaceRange(int index, int count, IEnumerable<T> collection)\r\n    {\r\n         RemoveItemsRange(index, count);\r\n         InsertItemsRange(index, collection);\r\n    }\r\n\r\n    #region virtual methods\r\n    protected virtual void InsertItemsRange(int index, IEnumerable<T> collection);\r\n    protected virtual void RemoveItemsRange(int index, int count);\r\n    #endregion\r\n```\r\n\r\nPlease see the linked issue for the full discussion.\r\n\r\nI'm assuming it would land [here](https://github.com/dotnet/standard/blob/master/src/netstandard/ref/System.Collections.ObjectModel.cs) and the appropriate shims would be created, however I don't know enough about netstandard to actually draw up the PR.\r\n","Url":"https://github.com/dotnet/standard/issues/1091","RelatedDescription":"Open issue \"Collection<T> and ObservableCollection<T> do not support ranges\" (#1091)"},{"Id":"414879247","IsPullRequest":false,"CreatedAt":"2019-02-27T00:01:34","Actor":"wtgodbe","Number":"1090","RawContent":null,"Title":"Sort out baseline between netstandard & netcoreapp","State":"open","Body":"We should sit down & go over the diff between netstandard & netcoreapp, and decide what we need to fix/how we need to fix it.\r\n\r\nCC @terrajobst ","Url":"https://github.com/dotnet/standard/issues/1090","RelatedDescription":"Open issue \"Sort out baseline between netstandard & netcoreapp\" (#1090)"},{"Id":"414599564","IsPullRequest":true,"CreatedAt":"2019-02-26T13:10:54","Actor":"dotnet-maestro[bot]","Number":"1089","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19125.2\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19125.2\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19125.2\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19125.2\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19125.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1089","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1089)"},{"Id":"414395637","IsPullRequest":true,"CreatedAt":"2019-02-26T02:09:06","Actor":"terrajobst","Number":"1088","RawContent":null,"Title":"Update .NET Standard 2.1 API delta","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1088","RelatedDescription":"Closed or merged PR \"Update .NET Standard 2.1 API delta\" (#1088)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"428561093","IsPullRequest":false,"CreatedAt":"2019-04-03T04:29:25","Actor":"davidsh","Number":"36553","RawContent":null,"Title":"Implement global proxy configuration for HttpClient","State":"open","Body":"HttpClient has support for reading system proxy configuration (IE settings on Windows, Environment variables on Linux, etc). However, there is no mechanism for setting credentials (i.e. CredentialCache.DefaultCredentials) for a system configured proxy.  Currently, this requires creating an HttpClientHandler instance and setting its [DefaultProxyCredentials](https://docs.microsoft.com/en-us/dotnet/api/system.net.http.httpclienthandler.defaultproxycredentials?view=netframework-4.7.2#System_Net_Http_HttpClientHandler_DefaultProxyCredentials) property.\r\n\r\nFor cases where libraries are creating the HttpClient object, there is no way for consumers of the library to set these credentials easily. \r\n\r\nThe .NET Framework supports using app.config/web.config settings with a [system.net section](https://docs.microsoft.com/en-us/dotnet/framework/configure-apps/file-schema/network/proxy-element-network-settings):\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<configuration>\r\n  <system.net>\r\n    <defaultProxy useDefaultCredentials=\"true\" />\r\n  </system.net>\r\n</configuration>\r\n```\r\n\r\nThis allows applications to inject a global proxy configuration for any HttpClient that is created. However, .NET Core doesn't natively support configuration files.\r\n\r\n.NET Framework currently has the [WebRequest.DefaultWebProxy](https://docs.microsoft.com/en-us/dotnet/api/system.net.webrequest.defaultwebproxy?view=netframework-4.7.2#System_Net_WebRequest_DefaultWebProxy) property to control this for all HttpWebRequest objects (and affects HttpClient) as well.  On .NET Core, the WebRequest class is considered legacy.  But we need a similar way to set global proxy config on .NET Core for HttpClient usage.\r\n\r\nA static API on HttpClient (or other object) created for global proxy configuration for the application could be used by upstack components to create a similar configuration file (i.e. app.config) behavior.\r\n","Url":"https://github.com/dotnet/corefx/issues/36553","RelatedDescription":"Open issue \"Implement global proxy configuration for HttpClient\" (#36553)"},{"Id":"428516836","IsPullRequest":true,"CreatedAt":"2019-04-03T03:21:46","Actor":"sywhang","Number":"36552","RawContent":null,"Title":"[System.Native] Fix GetCpuUtilization to return percentage","State":"closed","Body":"This adds a surface `SystemNative_GetCpuUtilizationPercent` that builds on top of the existing `SystemNative_GetCpuUtilization` surface - it just converts the number to a percentage (between 0 - 100). I tried using the current `SystemNative_GetCpuUtilization`, which is calculating the ratio, and is converting it to an int32_t, so it's always giving me 0. I'm not sure if this is the intended behavior, so I just added another surface. \r\n\r\nIf this wasn't the intended behavior and is actually a bug I need to fix, please let me know and I can modify this PR to return the percentage all the time.\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/36552","RelatedDescription":"Closed or merged PR \"[System.Native] Fix GetCpuUtilization to return percentage\" (#36552)"},{"Id":"428500595","IsPullRequest":true,"CreatedAt":"2019-04-03T00:08:34","Actor":"wfurt","Number":"36551","RawContent":null,"Title":"OSX can return ENODEV if we attempt tcgetattr() on stdin without terminal","State":"open","Body":"fixes https://github.com/dotnet/core-eng/issues/5742\r\n\r\nOn OSX 11.14 this can can fail when Helix runs in background and it was causing catastrophic failures for all corefx runs.\r\n\r\nOSX 10.14 is back in business\r\nhttps://mc.dot.net/#/user/wfurt/osx.1014/test~2Ffunctional~2Fcli~2F/default\r\n(ignore Ping failures as they build up through out the investigation) \r\n\r\n\r\ncc: @MattGal \r\n ","Url":"https://github.com/dotnet/corefx/pull/36551","RelatedDescription":"Open PR \"OSX can return ENODEV if we attempt tcgetattr() on stdin without terminal\" (#36551)"},{"Id":"428497558","IsPullRequest":true,"CreatedAt":"2019-04-02T23:56:10","Actor":"ahsonkhan","Number":"36550","RawContent":null,"Title":"[release/2.1] Add SuppressMetaPackage to break circular dependency during System.Memory package restore","State":"open","Body":"\r\n#### Description\r\n\r\n`System.Memory` depends on the `NetStandard.Library` meta-package, particularly on netstandard1.1 (see https://www.nuget.org/packages/System.Memory/4.5.2).\r\n![image](https://user-images.githubusercontent.com/6527137/55442890-55242200-5565-11e9-95c4-48ecb5fcafe7.png)\r\n\r\nWhenever libraries that make up the meta-package try to reference/depend on `System.Memory`, it ends up creating a circular dependency which causes package restore to fail. This change makes it such that `System.Memory` does not reference `NETStandard.Library` (meta-package) but instead references the constituent System.* packages.\r\n\r\n\r\n#### Customer Impact\r\n\r\nThis issue surfaced recently when `System.Diagnostics.DiagnosticSource` was trying to reference `System.Memory` to add new span-based APIs (and the `NetStandard.Library` meta-package includes this package in its closure - via `System.Net.Http`) . This results in applications consuming such library to fail on package restore (see https://github.com/dotnet/corefx/pull/33207):\r\n\r\n> PackageCycle.csproj : error NU1108: Cycle detected.\r\nPackageCycle.csproj : error NU1108:   PackageCycle -> System.Diagnostics.DiagnosticSource 4.5.1 -> System.Memory 4.5.1 -> NETStandard.Library 1.6.1 -> System.Net.Http 4.3.0 -> System.Diagnostics.DiagnosticSource (>= 4.3.0).\r\n\r\n`System.Diagnostics.DiagnosticSource` has customers (such as App Insights) who depend on this new functionality (and need to run on netstandard1.x/2.0 compatible frameworks). The pkgproj contains a temporary workaround as a stop gap: https://github.com/dotnet/corefx/blob/ccb68c0602656cea9a2a33f35f54dccba9eef784/src/System.Diagnostics.DiagnosticSource/pkg/System.Diagnostics.DiagnosticSource.pkgproj#L21-L35\r\n\r\n#### Regression?\r\n\r\nNo\r\n\r\n#### Packaging reviewed? \r\n\r\n* The fix was tested by consuming `System.Diagnostics.DiagnosticSource` (that references the fixed `System.Memory` package) from a console app targeting netcoreapp1.1. The package restore was successful and we no longer have the cycle.\r\n* Also, the change is correctly reflected in the generated nusepc:\r\n![image](https://user-images.githubusercontent.com/6527137/55443409-7c7bee80-5567-11e9-948d-33c4da6d5af1.png)\r\n\r\ncc @ericstj, @wtgodbe, @safern  \r\n\r\n#### Risk\r\n\r\nLow.  We have made similar fixes before to break the circular dependency (for example for `System.Runtime.CompilerServices.Unsafe` - https://github.com/dotnet/corefx/pull/28042).\r\n","Url":"https://github.com/dotnet/corefx/pull/36550","RelatedDescription":"Open PR \"[release/2.1] Add SuppressMetaPackage to break circular dependency during System.Memory package restore\" (#36550)"},{"Id":"428477608","IsPullRequest":true,"CreatedAt":"2019-04-02T22:40:55","Actor":"steveharter","Number":"36549","RawContent":null,"Title":"Avoid serializer multi-threaded cache issues","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/36547\r\n\r\nThe previous code has a List<> containing cached properties which was initialized on the first deserialize. If there are many threads trying to deserialize the same POCO type (during this warm-up phase) it is possible that the List<> could get corrupted or throw an exception during an Add() or Item().\r\n\r\nThe fix is to use a stack-based List<> cache (during the warm-up phase) and assign that to the POCO type cache only when it is completed, overwriting any other thread's cache if there happens to be a race condition.\r\n","Url":"https://github.com/dotnet/corefx/pull/36549","RelatedDescription":"Open PR \"Avoid serializer multi-threaded cache issues\" (#36549)"},{"Id":"428470532","IsPullRequest":true,"CreatedAt":"2019-04-02T22:17:06","Actor":"wfurt","Number":"36548","RawContent":null,"Title":"WIP: try to add Alpine ARM64 queue","State":"open","Body":"Add Alpine ARM64 queue to official build runs.","Url":"https://github.com/dotnet/corefx/pull/36548","RelatedDescription":"Open PR \"WIP: try to add Alpine ARM64 queue\" (#36548)"},{"Id":"428347525","IsPullRequest":true,"CreatedAt":"2019-04-02T21:41:50","Actor":"jkotas","Number":"36544","RawContent":null,"Title":"Avoid unnecessary SetLastError on PInvokes","State":"closed","Body":"These console PInvokes are used in nearly every app. Omitting unnecessary SetLastError\r\nwill save us from generating marshalling stub for them.","Url":"https://github.com/dotnet/corefx/pull/36544","RelatedDescription":"Closed or merged PR \"Avoid unnecessary SetLastError on PInvokes\" (#36544)"},{"Id":"428361426","IsPullRequest":true,"CreatedAt":"2019-04-02T20:27:59","Actor":"dotnet-maestro-bot","Number":"36546","RawContent":null,"Title":"[automated] Merge branch 'master' => 'release/3.0'","State":"closed","Body":"I detected changes in the master branch which have not been merged yet to release/3.0. I'm a robot and am configured to help you automatically keep release/3.0 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on master by the following committers:\n\n* @safern\n* @ViktorHofer\n* @roji\n* @stephentoub\n* @jkotas\n* @layomia\n* @dotnet-maestro[bot]\n* @ericstj\n* @wfurt\n* @GrabYourPitchforks\n* @stevenbrix\n* @AaronRobinsonMSFT\n* @davidsh\n* @maryamariyan\n* @steveharter\n* @bartonjs\n* @sdmaclea\n* @AfsanehR\n* @tannergooding\n* @sywhang\n* @Wraith2\n* @MattGal\n* @danmosemsft\n* @karelz\n* @MichalStrehovsky\n* @rmkerr\n* @jkoritzinsky\n* @lmolkova\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout master\r\ngit pull --ff-only\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit merge --no-ff master\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/master-to-release/3.0'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/36546","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'master' => 'release/3.0'\" (#36546)"},{"Id":"428410487","IsPullRequest":false,"CreatedAt":"2019-04-02T19:48:53","Actor":"steveharter","Number":"36547","RawContent":null,"Title":"Verify multi-threaded behavior on json serializer \"warm up\" of sorted property cache","State":"open","Body":"See https://github.com/dotnet/coreclr/issues/23645\r\n\r\nBased on the exception\r\n```System.ArgumentException : Destination array was not long enough. Check the destination index,```\r\nit appears that the \"sorted\" property cache for a given POCO type needs to prevent calling Add() on more than one thread.","Url":"https://github.com/dotnet/corefx/issues/36547","RelatedDescription":"Open issue \"Verify multi-threaded behavior on json serializer \"warm up\" of sorted property cache\" (#36547)"},{"Id":"427924826","IsPullRequest":false,"CreatedAt":"2019-04-02T19:18:24","Actor":"Gnbrkm41","Number":"36531","RawContent":null,"Title":"CultureInfo.DisplayName do not return the string in language/culture specified by `CurrentUICulture` or `CurrentCulture`","State":"closed","Body":"OS used: Windows 10 1903 Insiders Preview x64 (Build No. 18362.1), Korean\r\nRuntime used: .NET Core 3.0 P3 \r\n\r\nCode used to test:\r\n```cs\r\nusing System;\r\nusing System.Globalization;\r\nusing System.Threading;\r\n\r\nnamespace ConsoleApp19\r\n{\r\n    public class Program\r\n    {\r\n        private static void Main(string[] args)\r\n        {\r\n            Thread t = new Thread(Print);\r\n            t.CurrentCulture = new CultureInfo(\"en-US\");\r\n            t.CurrentUICulture = new CultureInfo(\"en-US\");\r\n            t.Start();\r\n        }\r\n\r\n        private static void Print()\r\n        {\r\n            Console.WriteLine(CultureInfo.CurrentCulture);\r\n            Console.WriteLine(new CultureInfo(\"es-ES\").DisplayName);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nExpected output: The DisplayName property returns the string in English.\r\nActual output (on Core 3.0): \r\n```\r\nen-US\r\n스페인어(스페인, 국제 정렬) // Spanish (Spain, International Sort) in Korean\r\n```\r\nOutput when ran on .NET Framework 4.7.1/4.7.2:\r\n```\r\nen-US\r\nSpanish (Spain)\r\n```\r\n\r\n(Not sure why DisplayName is outputting the sorting as well in Core 3.0, related issue: https://github.com/dotnet/corefx/issues/36524)","Url":"https://github.com/dotnet/corefx/issues/36531","RelatedDescription":"Closed issue \"CultureInfo.DisplayName do not return the string in language/culture specified by `CurrentUICulture` or `CurrentCulture`\" (#36531)"},{"Id":"427820010","IsPullRequest":false,"CreatedAt":"2019-04-02T18:08:09","Actor":"mahidaturgana","Number":"36524","RawContent":null,"Title":".NET Core 2.2 CultureInfo derivation from .NET Framework 4.7.1","State":"closed","Body":"While using CultureInfo provided in .NET Core 2.2, I noticed a difference in one of the values from its counterpart in .NET Framework 4.7.1.\r\n\r\n`new CultureInfo(\"es-ES\").DisplayName;`\r\n\r\n.NET Core 2.2 displays the value as: \"Spanish (Spain, International Sort)\"\r\n.NET Framework 4.7.1 displays the value as: \"Spanish (Spain)\"\r\n\r\nIs this intended? ","Url":"https://github.com/dotnet/corefx/issues/36524","RelatedDescription":"Closed issue \".NET Core 2.2 CultureInfo derivation from .NET Framework 4.7.1\" (#36524)"},{"Id":"428352644","IsPullRequest":false,"CreatedAt":"2019-04-02T17:30:04","Actor":"Damien-The-Unbeliever","Number":"36545","RawContent":null,"Title":"Whither System.Linq.AsyncEnumerable?","State":"open","Body":"IEnumerable has a companion class - System.Linq.Enumerable - that provides LINQ to Objects implementation.\r\n\r\nIAsyncEnumerable doesn't seem to have such a companion. Is this a deliberate decision? I can't find any discussion on this but I may be searching wrong.\r\n\r\nIn the meantime, I've spent a couple of weekends trying to build my own. It doesn't seem undoable but perhaps there's a reason it's undesirable?\r\n\r\n(It is, however, undoubtedly tedious to produce all of the overloads)","Url":"https://github.com/dotnet/corefx/issues/36545","RelatedDescription":"Open issue \"Whither System.Linq.AsyncEnumerable?\" (#36545)"},{"Id":"428288378","IsPullRequest":false,"CreatedAt":"2019-04-02T16:56:04","Actor":"mikaelmello","Number":"36542","RawContent":null,"Title":"X509Certificate2 with RSA private key is stored without its private key on Windows","State":"closed","Body":"When we associate a private key of type `RSA` to a `X509Certificate2`, by using `X509Certificate2.CopyWithPrivateKey(RSA rsa)`, the returned certificate has a private key, but when added in a `X509Store`, it is stored without its private key.\r\n\r\nThis behavior only happens when the private key is of type `RSA` and not one of its derived types such as `RSACng` or `RSACryptoServiceProvider`. By using one of those two, the certificate is stored with its private key and you can normally retrieve it.\r\n\r\nThis also only happens on Windows, working with the `RSA` base class does not cause this problem under Unix.\r\n\r\n## Steps to reproduce:\r\n\r\nAssociate a `RSA` private key to an existing `X509Certificate2` certificate and store it using `X509Store`. Open the Certificate Manager and check that the certificate was stored without a private key.\r\n\r\nYou can also simply programatically retrieve the certificate and see that it does not have a private key.\r\n\r\n## Project ready to reproduce:\r\n\r\nhttps://github.com/mikaelmello/test-certificate-pk\r\n\r\nClone the repository and run the project under Windows and Linux and you will see different behaviors:\r\n\r\n- **Windows**: The retrieved certificate will not have a private key\r\n- **Linux**: The retrieved certificate will have a private key\r\n\r\n## Screenshots from Windows:\r\n![image](https://user-images.githubusercontent.com/17488630/55413982-bdacd800-5540-11e9-9c35-5c05bd15d497.png)\r\n![image](https://user-images.githubusercontent.com/17488630/55414045-d87f4c80-5540-11e9-9186-3e4eb4e2865a.png)\r\n\r\n## Correct behavior on Linux:\r\n![image](https://user-images.githubusercontent.com/17488630/55414122-f8af0b80-5540-11e9-85bf-6d57805cdf56.png)\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/36542","RelatedDescription":"Closed issue \"X509Certificate2 with RSA private key is stored without its private key on Windows\" (#36542)"},{"Id":"428025781","IsPullRequest":true,"CreatedAt":"2019-04-02T16:31:26","Actor":"wfurt","Number":"36537","RawContent":null,"Title":"pull in new fedora images","State":"closed","Body":"use properly re-build images with ping. ","Url":"https://github.com/dotnet/corefx/pull/36537","RelatedDescription":"Closed or merged PR \"pull in new fedora images\" (#36537)"},{"Id":"427975298","IsPullRequest":true,"CreatedAt":"2019-04-02T16:27:16","Actor":"Dotnet-GitSync-Bot","Number":"36536","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @krwq @krwq","Url":"https://github.com/dotnet/corefx/pull/36536","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#36536)"},{"Id":"428297292","IsPullRequest":false,"CreatedAt":"2019-04-02T15:31:31","Actor":"bergner","Number":"36543","RawContent":null,"Title":"SyndicationItem.Load + FileBufferingReadStream (via Request.EnableBuffering()) fails with \"Root element is missing\" exception","State":"open","Body":"At https://github.com/bergner/netcore-bugs/ I've provided a webapi example that reproduces this problem. It uses netcoreapp2.1.\r\n\r\n```\r\n$ git clone https://github.com/bergner/netcore-bugs.git\r\n$ cd netcore-bugs/RequestBuffering\r\n$ dotnet build\r\n$ dotnet run RequestBuffering\r\n```\r\n\r\nThis starts a service with POST and PUT support on /api/Values/. The POST endpoint uses [FromBody] SyndicationItem and the PUT endpoint uses [FromBody] XmlElement. **In Startup.cs context.Request.EnableBuffering() is called** (before app.UseMvc()). The request buffering is a key component to the issue here.\r\n\r\n```\r\napp.Use(next => context => {\r\n    Console.WriteLine(\"BODY IS OF TYPE: {0}\", context.Request.Body.GetType());\r\n    context.Request.EnableBuffering();\r\n    //(new StreamReader(context.Request.Body)).ReadToEnd();\r\n    //context.Request.Body.Position = 0;\r\n    Console.WriteLine(\"BODY IS OF TYPE: {0}\", context.Request.Body.GetType());\r\n    return next(context);\r\n});\r\n```\r\n\r\nThis causes ASP.NET Core to switch the context.Request.Body from a Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpRequestStream object to a Microsoft.AspNetCore.WebUtilities.FileBufferingReadStream object.\r\n\r\nThe service has a AtomEntryInputFormatter class which is used to parse the incoming HTTP request into a SyndicationItem object (using XmlReader, see below). It is also using an XmlSerializerInputFormatter to support the PUT requests (which are used for comparison here).\r\n\r\n```\r\nusing System;\r\nusing System.IO;\r\nusing System.Reflection;\r\nusing System.ServiceModel.Syndication;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\nusing System.Xml;\r\nusing System.Xml.Serialization;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.AspNetCore.Mvc.Formatters;\r\n\r\nnamespace RequestBuffering\r\n{\r\n    public class AtomEntryInputFormatter : XmlSerializerInputFormatter\r\n    {\r\n        public AtomEntryInputFormatter(MvcOptions options) : base(options)\r\n        {\r\n            SupportedMediaTypes.Clear();\r\n            SupportedMediaTypes.Add(\"application/atom+xml;type=entry\");\r\n        }\r\n\r\n        protected override bool CanReadType(Type dataType)\r\n        {\r\n            Console.WriteLine(\"CAN READ TYPE? {0} --> {1}\", dataType, typeof(SyndicationItem).IsAssignableFrom(dataType));\r\n            return typeof(SyndicationItem).IsAssignableFrom(dataType);\r\n        }\r\n\r\n        public override async Task<InputFormatterResult> ReadRequestBodyAsync(InputFormatterContext context,\r\n            Encoding encoding)\r\n        {\r\n            try {\r\n                Console.WriteLine(\"PARSING STREAM {0}\", context.HttpContext.Request.Body.GetType());\r\n                using (XmlReader reader = XmlReader.Create(context.HttpContext.Request.Body))\r\n                {\r\n                    SyndicationItem item = SyndicationItem.Load(reader);\r\n                    Console.WriteLine(\"SUCCESSFULLY PARSED: {0}\", item.Title.Text);\r\n                    return await InputFormatterResult.SuccessAsync(item);\r\n                }\r\n            } catch (Exception e) {\r\n                Console.WriteLine(\"CAUGHT EXCEPTION WHILE PARSING: {0}\", e.Message);\r\n                throw e;\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nA sample input xml below:\r\n\r\n```\r\n$ cat /tmp/entry.xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<entry xmlns=\"http://www.w3.org/2005/Atom\"><title>test</title></entry>\r\n```\r\n\r\nUsing PUT to the XmlElement endpoint works ok. I get a 200 response and the controller gets the expected data (which can be seen in Console.WriteLine output from the server).\r\n\r\n```\r\n$ curl -X PUT -k -H \"Content-Type: application/atom+xml\" --data-binary @/tmp/entry.xml https://localhost:5001/api/Values/\r\n```\r\n\r\n**The POST request fails with a 400 Bad request**:\r\n\r\n```\r\n$ curl -X POST -k -H \"Content-Type: application/atom+xml\" --data-binary @/tmp/entry.xml https://localhost:5001/api/Values/\r\n```\r\n\r\nAnd the log shows an exception:\r\n\r\n```\r\ninfo: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]\r\n      Request starting HTTP/1.1 POST https://localhost:5001/api/Values/ application/atom+xml;type=entry 110\r\nBODY IS OF TYPE: Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpRequestStream\r\nBODY IS OF TYPE: Microsoft.AspNetCore.WebUtilities.FileBufferingReadStream\r\ninfo: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]\r\n      Route matched with {action = \"Post\", controller = \"Values\"}. Executing action RequestBuffering.Controllers.ValuesController.Post (RequestBuffering)\r\nCAN READ TYPE? System.ServiceModel.Syndication.SyndicationItem --> True\r\nPARSING STREAM Microsoft.AspNetCore.WebUtilities.FileBufferingReadStream\r\nCAUGHT EXCEPTION WHILE PARSING: Root element is missing.\r\ninfo: Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor[1]\r\n      Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.SerializableError'.\r\ninfo: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]\r\n      Executed action RequestBuffering.Controllers.ValuesController.Post (RequestBuffering) in 48.2919ms\r\nfail: Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware[1]\r\n      An unhandled exception has occurred while executing the request.\r\nSystem.InvalidOperationException: There was an error generating the XML document. ---> System.ArgumentException: The empty string '' is not a valid local name.\r\n   at System.Xml.XmlWellFormedWriter.WriteStartElement(String prefix, String localName, String ns)\r\n   at System.Xml.XmlWriter.WriteStartElement(String localName)\r\n   at Microsoft.AspNetCore.Mvc.Formatters.Xml.SerializableErrorWrapper.WriteXml(XmlWriter writer)\r\n   at System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(IXmlSerializable serializable, String name, String ns, Boolean isNullable, Boolean wrapped)\r\n   --- End of inner exception stack trace ---\r\n   at System.Xml.Serialization.XmlSerializer.Serialize(XmlWriter xmlWriter, Object o, XmlSerializerNamespaces namespaces, String encodingStyle, String id)\r\n   at System.Xml.Serialization.XmlSerializer.Serialize(XmlWriter xmlWriter, Object o)\r\n   at Microsoft.AspNetCore.Mvc.Formatters.XmlSerializerOutputFormatter.Serialize(XmlSerializer xmlSerializer, XmlWriter xmlWriter, Object value)\r\n   at Microsoft.AspNetCore.Mvc.Formatters.XmlSerializerOutputFormatter.WriteResponseBodyAsync(OutputFormatterWriteContext context, Encoding selectedEncoding)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\n```\r\n\r\n## Workaround\r\n\r\nI have found 2 workarounds for this problem:\r\n\r\n1. Don't call `XmlReader reader = XmlReader.Create(context.HttpContext.Request.Body)` directly in preparation for `SyndicationItem.Load(reader)`. Instead wrap the body stream with `new StreamReader(context.HttpContext.Request.Body)` then use that with XmlReader.Create.\r\n2. Make sure that the request body has been read at least once BEFORE you get to the XmlReader / input formatter. Commenting out the two lines in Startup.cs above makes the problem go away.\r\n\r\nRemoving EnableBuffering() also makes the problem go away but there are many circumstances where you want/need to have request buffering enabled so it is not a viable workaround.\r\n\r\n## Expected result\r\n\r\nThe reading / parsing from context.HttpContext.Request.Body should have the same behavior regardless if EnableBuffering is used or not, and when buffering is used it should not matter it the body has been read prior to reaching SyndicationItem.Load.","Url":"https://github.com/dotnet/corefx/issues/36543","RelatedDescription":"Open issue \"SyndicationItem.Load + FileBufferingReadStream (via Request.EnableBuffering()) fails with \"Root element is missing\" exception\" (#36543)"},{"Id":"428213054","IsPullRequest":true,"CreatedAt":"2019-04-02T14:10:35","Actor":"dotnet-maestro[bot]","Number":"36541","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190401.9\r\n- **Date Produced**: 4/2/2019 7:44 AM\r\n- **Commit**: 85cec01822bc70fbc45a25001997b0c1e71b1d22\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview4.19201.9\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/36541","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#36541)"},{"Id":"428208251","IsPullRequest":true,"CreatedAt":"2019-04-02T14:05:51","Actor":"dotnet-maestro[bot]","Number":"36540","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190402.01\r\n- **Date Produced**: 4/2/2019 9:53 AM\r\n- **Commit**: 44d2cf6db601c5f7303d614cfca201023645021f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview4-27602-01\r\n  - **Microsoft.NETCore.DotNetHost** -> 3.0.0-preview4-27602-01\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 3.0.0-preview4-27602-01\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/36540","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#36540)"},{"Id":"427968908","IsPullRequest":true,"CreatedAt":"2019-04-02T12:35:49","Actor":"stevenbrix","Number":"36535","RawContent":null,"Title":"fix \"all configurations\" build parameter","State":"closed","Body":"looks like this changed at some point from \"BuildAllConfigurations\" to just \"allconfigurations\"","Url":"https://github.com/dotnet/corefx/pull/36535","RelatedDescription":"Closed or merged PR \"fix \"all configurations\" build parameter\" (#36535)"},{"Id":"428164970","IsPullRequest":true,"CreatedAt":"2019-04-02T11:10:05","Actor":"tmds","Number":"36539","RawContent":null,"Title":"SafeSocketHandle.Unix: ensure we can't create a new context after the handle is disposed","State":"open","Body":"Most Socket operations first check if the Socket isn't disposed. Once we are past\r\nthat check, it's possible we create an AsyncContext for a Socket that got disposed.","Url":"https://github.com/dotnet/corefx/pull/36539","RelatedDescription":"Open PR \"SafeSocketHandle.Unix: ensure we can't create a new context after the handle is disposed\" (#36539)"},{"Id":"428092361","IsPullRequest":false,"CreatedAt":"2019-04-02T08:34:34","Actor":"filipnavara","Number":"36538","RawContent":null,"Title":"[System.Text.Json] JsonSerializer depends on unspecified runtime behavior","State":"open","Body":"The unit test \"System.Text.Json.Serialization.Tests.ValueTests.ValueFail\" uses the following code: \r\n\r\nhttps://github.com/dotnet/corefx/blob/master/src/System.Text.Json/tests/Serialization/Value.ReadTests.cs#L247\r\n\r\n`Enum` is an abstract class and thus it can't be constructed. JsonSerializer tries to do it anyway here:\r\n\r\nhttps://github.com/dotnet/corefx/blob/85cec01822bc70fbc45a25001997b0c1e71b1d22/src/System.Text.Json/src/JsonReflectionEmitMaterializer.cs#L13-L41\r\n\r\nIt ends up generating invalid IL (`newobj` with method referencing constructor of abstract class). This succeeds just fine on CoreCLR, but calling the resulting delegate throws `System.InvalidOperationException: Instances of abstract classes cannot be created.`.\r\n\r\nOn Mono the IL is checked earlier as part of `DynamicMethod.CreateDelegate` and throws `System.MemberAccessException: Cannot create an abstract class: System.Enum`.\r\n\r\nI believe this should be checked explicitly in the JsonSerializer code instead of depending on the runtime accepting invalid IL code and throwing the expected exception.\r\n\r\n/cc @bartonjs ","Url":"https://github.com/dotnet/corefx/issues/36538","RelatedDescription":"Open issue \"[System.Text.Json] JsonSerializer depends on unspecified runtime behavior\" (#36538)"},{"Id":"427930853","IsPullRequest":true,"CreatedAt":"2019-04-02T00:56:52","Actor":"Dotnet-GitSync-Bot","Number":"36533","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corert\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks","Url":"https://github.com/dotnet/corefx/pull/36533","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corert\" (#36533)"},{"Id":"427940386","IsPullRequest":true,"CreatedAt":"2019-04-02T00:05:52","Actor":"wfurt","Number":"36534","RawContent":null,"Title":"stabilize Http2GetAsync_TrailerHeaders_TrailingHeaderNoBody test","State":"closed","Body":"The test never intended to read only headers. (caused by copy from other test) \r\nSince there is no body frame processing runs and Assert.Contains() may or may not succeed.","Url":"https://github.com/dotnet/corefx/pull/36534","RelatedDescription":"Closed or merged PR \"stabilize Http2GetAsync_TrailerHeaders_TrailingHeaderNoBody test\" (#36534)"},{"Id":"427883083","IsPullRequest":true,"CreatedAt":"2019-04-01T21:57:43","Actor":"Dotnet-GitSync-Bot","Number":"36527","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**","Url":"https://github.com/dotnet/corefx/pull/36527","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#36527)"},{"Id":"427929247","IsPullRequest":false,"CreatedAt":"2019-04-01T21:54:40","Actor":"Eilon","Number":"36532","RawContent":null,"Title":"HttpUtility.UrlDecode will decode twice compare to WebUtility.UrlDecode","State":"open","Body":"_From @daohunliwei on Saturday, 30 March 2019 06:35:43_\r\n\r\n### Describe the bug\r\nThe framework I am using is net core 2.0.\r\nI have a string that has been urlencode twice.When I use 「System.Web.HttpUtility.UrlDecode」 to decode, I only call it once, but all the strings are decoded.\r\nWhen this method is running on Windows, everything works fine. When running on Linux, the above problem occurs.\r\nLater, I changed 「System.Net.WebUtility.UrlDecode」to decode, and the results on both sides are the same.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '2.2.105'\r\n2. Run this code \r\n```csharp\r\nstring url=\"https%3a%2f%2foapi.dingtalk.com%2fservice%2fget_corp_token%3fsignature%3dFHOywukz2tdfFpx2dPg5medckUMauhAFOuppnDx%252b2NQ%253d\"\r\nvar right = System.Net.WebUtility.UrlDecode(url);\r\n//resultRight=https://oapi.dingtalk.com/service/get_corp_token?signature=FHOywukz2tdfFpx2dPg5medckUMauhAFOuppnDx%2b2NQ%3d\r\nvar wrong = System.Web.HttpUtility.UrlDecode(url);\r\n//resultWrong=https://oapi.dingtalk.com/service/get_corp_token?signature=FHOywukz2tdfFpx2dPg5medckUMauhAFOuppnDx+2NQ=\r\n```\r\n\r\n### Expected behavior\r\nI want to call decode only once to decode one layer.\r\n\r\n### Screenshots\r\nnone.\r\n\r\n### Additional context\r\nAdd any other context about the problem here.\r\nInclude the output of `dotnet --info`\r\n\r\n>.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.104\r\n Commit:    73f036d4ac\r\nRuntime Environment:\r\n OS Name:     centos\r\n OS Version:  7\r\n OS Platform: Linux\r\n RID:         centos.7-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.2.104/\r\nHost (useful for support):\r\n  Version: 2.2.2\r\n  Commit:  a4fd7b2c84\r\n.NET Core SDKs installed:\r\n  2.2.104 [/usr/share/dotnet/sdk]\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.2 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.2 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\n_Copied from original issue: aspnet/AspNetCore#8938_","Url":"https://github.com/dotnet/corefx/issues/36532","RelatedDescription":"Open issue \"HttpUtility.UrlDecode will decode twice compare to WebUtility.UrlDecode\" (#36532)"},{"Id":"427924808","IsPullRequest":false,"CreatedAt":"2019-04-01T21:41:16","Actor":"Waleed-KH","Number":"36530","RawContent":null,"Title":" Why the new JSON APIs under the namespace `System.Text.Json.Serialization` and not `System.Json` ","State":"open","Body":" Follows https://github.com/dotnet/corefx/issues/34372#issuecomment-465916976\r\nThe current JSON APIs naming is so long and not clear, Why it can't be more simple? (Please see the example in the comment link above)","Url":"https://github.com/dotnet/corefx/issues/36530","RelatedDescription":"Open issue \" Why the new JSON APIs under the namespace `System.Text.Json.Serialization` and not `System.Json` \" (#36530)"},{"Id":"427867074","IsPullRequest":false,"CreatedAt":"2019-04-01T21:33:34","Actor":"Gnbrkm41","Number":"36526","RawContent":null,"Title":"Changes regarding the new era to JapaneseCalendar / JapaneseLunisolarCalendar","State":"closed","Body":"A few hours ago, [the name of Japan's new era has been announced as 'Reiwa'](https://www3.nhk.or.jp/nhkworld/nhknewsline/backstories/reiwaera/) (令和, `\\u4ee4\\u548c`). \r\n\r\nI had a quick glance at the code, and although the information is fetched from the OS (#27800) and therefore barely any changes should be required, there seem to be a couple of hard-coded data in the codes.\r\n\r\nList of changes required:\r\n* https://github.com/dotnet/corefx/blob/304c0194b16a1f26c14cda92e2532efcf126c99f/src/Common/src/CoreLib/System/Globalization/JapaneseCalendar.Win32.cs#L203 https://github.com/dotnet/corefx/blob/304c0194b16a1f26c14cda92e2532efcf126c99f/src/Common/src/CoreLib/System/Globalization/JapaneseCalendar.WinRT.cs#L50 (Duplicate data?) Need to add another English Abbreviation. Actually, it seems that neither of the methods and the fields are actually accessed; Could we just delete this?\r\n* https://github.com/dotnet/corefx/blob/304c0194b16a1f26c14cda92e2532efcf126c99f/src/Common/src/CoreLib/System/Globalization/JapaneseCalendar.cs#L77\r\nNeed to add the new era to the fallback case, though it seems very unlikely to happen.\r\n(The problem is, quite a lot of callsites are expecting the first item in the array to be the current era, which wouldn't be the case until 1st of May)","Url":"https://github.com/dotnet/corefx/issues/36526","RelatedDescription":"Closed issue \"Changes regarding the new era to JapaneseCalendar / JapaneseLunisolarCalendar\" (#36526)"},{"Id":"427903728","IsPullRequest":false,"CreatedAt":"2019-04-01T20:44:18","Actor":"lukepuplett","Number":"36529","RawContent":null,"Title":"Provide an abstraction for the system clock","State":"open","Body":"Should we have a standard abstraction for the wall-clock that returns the local `DateTimeOffset`?\r\n\r\nThe idea is to break the hard dependency on the system clock and be able to inject a different clock for system level testing of time and ageing impacts, especially useful in finance.\r\n\r\nI've rarely seen anyone do this but often seen people that wish they had. I think its just a habit we haven't learned yet.\r\n\r\nIf we saw more types taking `IWallClock` or whatever we'd maybe think more about this. Sure its super easy to implement but like `ILogFactory` life's better when we're all using a uniform interface.","Url":"https://github.com/dotnet/corefx/issues/36529","RelatedDescription":"Open issue \"Provide an abstraction for the system clock\" (#36529)"},{"Id":"427898568","IsPullRequest":true,"CreatedAt":"2019-04-01T20:31:16","Actor":"ericstj","Number":"36528","RawContent":null,"Title":"Add DataTableExtensions.AsDataView","State":"open","Body":"This pushes down the minimal number of types required to implement\r\nDataTableExtensions.AsDataView.\r\n\r\nLinqDataView is added in order to implement AsDataView, the following \r\ntypes need to be pushed down in order to implement this:\r\n - DataSetUtil\r\n - DataTableExtensions\r\n - EnumerableRowCollection\r\n - SortExpressionBuilder\r\n\r\nMoving these down requires that the following also be moved due to needing\r\ninternals access to moved types.\r\n - EnumerableRowCollectionExtensions\r\n - OrderedEnumerableRowCollection\r\n - TypedTableBase\r\n - TypedTableBaseExtensions\r\n\r\nThis leaves behind only the following types in DataSetExtensions:\r\n- DataRowComparer\r\n- DataRowExtensions\r\n\r\nI could have moved those as well, but wanted to start from the minimal change and go from there.  ","Url":"https://github.com/dotnet/corefx/pull/36528","RelatedDescription":"Open PR \"Add DataTableExtensions.AsDataView\" (#36528)"},{"Id":"427849290","IsPullRequest":false,"CreatedAt":"2019-04-01T18:29:59","Actor":"dreddy-work","Number":"36525","RawContent":null,"Title":"An error pops up when using the method AddResource() of ResXResourceWriter in the .NET Core 3.0 winforms application","State":"open","Body":"@Zheng-Li01 commented on [Mon Jan 28 2019](https://github.com/dotnet/winforms/issues/387)\n\n**OS:** RS4 X64\r\n**VS:** Visual Studio 2019 Version 16.0.0.0 Preview 4.0 [28526.15.d16.0stg]\r\n**.NET SDK:** .NET Core 3.0.100-preview-10184\r\n\r\n**More Info:**\r\n1. In .Net framework application adding the same code, no exception pops up.\r\n2. Replace Bitmap value = new Bitmap(64, 64) with Bitmap value = new Bitmap(\"C:\\Users\\Desktop\\xxx.png\") , no exception pops up.\r\n\r\n**Steps to Reproduce:**\r\n1. Create a Winforms .Net Core application by command: dotnet new winforms –o “xxx”.\r\n2. Write code to Form1.cs.\r\n    using System.Resources;\r\n    using System.Drawing;\r\n    Bitmap value = new Bitmap(64, 64);\r\n    String key = \"e\";\r\n    ResXResourceWriter writer = new ResXResourceWriter(\"ResxResourceWriter.resx\");\r\n    ResXDataNode node = new ResXDataNode(key, value);\r\n    writer.AddResource(node);\r\n3. Debug the application.\r\n\r\n**Actual:**\r\nWhen debugging to writer.AddResource(node), the exception pops up.\r\n![image](https://user-images.githubusercontent.com/38325459/51834305-d62c2680-2334-11e9-8764-6b0f0b4b3800.png)\r\n\r\n**Call Stack:**\r\nSystem.ArgumentNullException\r\nHResult=0x80004003\r\nMessage=Value cannot be null.\r\nSource=System.Drawing.Common\r\nStackTrace:\r\nat System.Drawing.Image.Save(Stream stream, ImageCodecInfo encoder, EncoderParameters encoderParams)\r\nat System.Drawing.Image.Save(Stream stream, ImageFormat format)\r\nat System.Drawing.ImageConverter.ConvertTo(ITypeDescriptorContext context, CultureInfo culture, Object value, Type destinationType)\r\nat System.ComponentModel.TypeConverter.ConvertTo(Object value, Type destinationType)\r\nat System.Resources.ResXDataNode.FillDataNodeInfoFromObject(DataNodeInfo nodeInfo, Object value)\r\nat System.Resources.ResXDataNode.GetDataNodeInfo()\r\nat System.Resources.ResXResourceWriter.AddResource(ResXDataNode node)\r\nat AddResourceconsole.Program.Main(String[] args) in C:\\Users\\v-jiaol\\Desktop\\WinformDemo\\AddResourceconsole\\Program.cs:line 31\r\n\r\n**Expected:**\r\nNo exception pops up, application runs successfully.\r\n\r\n\n\n---\n\n@dreddy-work commented on [Mon Apr 01 2019](https://github.com/dotnet/winforms/issues/387#issuecomment-478689191)\n\nMoving it to CoreFx repro as there was bug in porting Windows.Image.cs source.\n\n","Url":"https://github.com/dotnet/corefx/issues/36525","RelatedDescription":"Open issue \"An error pops up when using the method AddResource() of ResXResourceWriter in the .NET Core 3.0 winforms application\" (#36525)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"428549086","IsPullRequest":false,"CreatedAt":"2019-04-03T03:36:17","Actor":"AlexRadch","Number":"34716","RawContent":null,"Title":"Why extension methods do not work for dynamic values when method parameters are dynamic already. Compiler error CS1973.","State":"open","Body":"**Version Used**:  Any\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create extension method with dynamic parameters already:\r\n```cs\r\npublic static class Extensions\r\n{\r\n    public static dynamic If(this bool p, dynamic @then, dynamic @else) => p ? @then : @else;\r\n}\r\n```\r\n\r\n2. Call this method with dynamic values.\r\n```cs\r\n    dynamic t = \"then\";\r\n    dynamic e = \"else\";\r\n    Console.WriteLine( true.If(t, e) ); // Compiler error CS1973.\r\n```\r\n\r\n3. But next code works\r\n```cs\r\n    dynamic t = \"then\";\r\n    dynamic e = \"else\";\r\n    Console.WriteLine( true.If((object)t, (object)e) );\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nSupport extension methods for dynamic values when method parameters are dynamic already.\r\n\r\n**Actual Behavior**:\r\n\r\nCompiler error CS1973.","Url":"https://github.com/dotnet/roslyn/issues/34716","RelatedDescription":"Open issue \"Why extension methods do not work for dynamic values when method parameters are dynamic already. Compiler error CS1973.\" (#34716)"},{"Id":"428527209","IsPullRequest":false,"CreatedAt":"2019-04-03T03:31:39","Actor":"stephentoub","Number":"34711","RawContent":null,"Title":"No nullable warning when lock'ing a potentially null object","State":"closed","Body":"**Version Used**:\r\n3.0.0-beta4-19170-01+1deafee3682da88bf07d1c18521a99f47446cee8\r\n\r\n**Repro**:\r\n```C#\r\n#nullable enable\r\nclass Program\r\n{\r\n    static void Main()\r\n    {\r\n        object? obj = null;\r\n        lock (obj) { }\r\n    }\r\n}\r\n```\r\n\r\nI expected a warning on `lock (obj)`, but none is issued.  In contrast, one is issued for `Monitor.Enter` (this is using a corelib that already has Monitor annotated):\r\n![image](https://user-images.githubusercontent.com/2642209/55447727-e5c52700-5592-11e9-99b4-2a05ffbcd5d0.png)\r\n\r\ncc: @cston, @dotnet/nullablefc ","Url":"https://github.com/dotnet/roslyn/issues/34711","RelatedDescription":"Closed issue \"No nullable warning when lock'ing a potentially null object\" (#34711)"},{"Id":"428545760","IsPullRequest":true,"CreatedAt":"2019-04-03T03:21:41","Actor":"Therzok","Number":"34715","RawContent":null,"Title":"Fix usage of ConcurrentDictionary.AddOrUpdate","State":"open","Body":"The lambda here is used in the update scenario. Given we always want to\r\nupdate and discard the existing value, we don't need to go through this\r\nmethod.\r\n\r\nLooking over the implementation, there's a few things to note:\r\n* The indexer always adds or updates the value\r\n* AddOrUpdate does a bit more logic so that it spins on the collection\r\nchecking if the value already exists while retrying the factory logic\r\n\r\nThis makes the code safe to switch to indexer and avoid the allocation\r\n\r\nFixes #33179\r\n\r\nContained squashed changes from other PR:\r\nhttps://github.com/dotnet/roslyn/pull/33173/commits/8f64a8790283a32c786b35c65072df84cfc65f75\r\nhttps://github.com/dotnet/roslyn/pull/33173/commits/a70422ed7c813e3679cbd3d7eeada84663877d11","Url":"https://github.com/dotnet/roslyn/pull/34715","RelatedDescription":"Open PR \"Fix usage of ConcurrentDictionary.AddOrUpdate\" (#34715)"},{"Id":"428530488","IsPullRequest":false,"CreatedAt":"2019-04-03T02:16:49","Actor":"stephentoub","Number":"34714","RawContent":null,"Title":"Analyzer to remove unnecessary null-forgiving operators","State":"open","Body":"Especially as the compiler improves its nullability analysis and reduces the number of false positive warnings for potential null dereferences (e.g. via improved attribution from https://github.com/dotnet/roslyn/issues/26761), we are going to find ourselves with unnecessary `!`s strewn throughout the codebase.  It would be helpful if there were an analyzer + auto-fix that would spot the unnecessary usage and enable automatically removing it.\r\n\r\ncc: @jaredpar, @dotnet/nullablefc ","Url":"https://github.com/dotnet/roslyn/issues/34714","RelatedDescription":"Open issue \"Analyzer to remove unnecessary null-forgiving operators\" (#34714)"},{"Id":"428528440","IsPullRequest":false,"CreatedAt":"2019-04-03T02:08:06","Actor":"VBAndCs","Number":"34713","RawContent":null,"Title":"VS.NET 2019 Community Works only with .NET Core 2.1 SDK","State":"open","Body":"**Version Used**: \r\nVS.NET Community 16.0.0\r\n\r\n**Expected Behavior**:\r\nAble to use .Net Core 3 SDK preview3\r\n\r\n**Actual Behavior**:\r\nDoesn't even recognize it! Build the project gives Error NETSDK1045:\r\n> The current .NET SDK does not support targeting .NET Core 3.0.  Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 3.0.\t\r\n\r\nThere is something wrong with the community edition. I tried all the sorts of uninstall, restart re-install, and even ran a repair setup, but nothing changes!","Url":"https://github.com/dotnet/roslyn/issues/34713","RelatedDescription":"Open issue \"VS.NET 2019 Community Works only with .NET Core 2.1 SDK\" (#34713)"},{"Id":"428527973","IsPullRequest":true,"CreatedAt":"2019-04-03T02:06:02","Actor":"RikkiGibson","Number":"34712","RawContent":null,"Title":"Features/readonly members","State":"open","Body":"Related to #32911 and dotnet/csharplang#1710\r\n\r\nAll commits have been previously reviewed.\r\n\r\ncc @jaredpar ","Url":"https://github.com/dotnet/roslyn/pull/34712","RelatedDescription":"Open PR \"Features/readonly members\" (#34712)"},{"Id":"428526458","IsPullRequest":false,"CreatedAt":"2019-04-03T01:59:53","Actor":"jcouv","Number":"34710","RawContent":null,"Title":"Warn for parameter with `CancellationToken` type in async-iterator methods","State":"open","Body":"This is being confirmed with LDM by mail.\r\nThe warning should only produced for methods that have the `cancellationToken` variable (ie. not `IAsyncEnumerator`-returning async-iterators)\r\n\r\nRelates to https://github.com/dotnet/roslyn/issues/24037 (async-streams umbrella)","Url":"https://github.com/dotnet/roslyn/issues/34710","RelatedDescription":"Open issue \"Warn for parameter with `CancellationToken` type in async-iterator methods\" (#34710)"},{"Id":"428524968","IsPullRequest":false,"CreatedAt":"2019-04-03T01:54:07","Actor":"jcouv","Number":"34709","RawContent":null,"Title":"Missing diagnostics in async-iterator when `CancellationToken` type is missing","State":"open","Body":"Found this issue while implementing the `cancellationToken` variable (https://github.com/dotnet/roslyn/pull/34692).\r\n\r\n\r\n```C#\r\n        [Fact, WorkItem(34709, \"https://github.com/dotnet/roslyn/issues/34709\")]\r\n        public void MissingTypeAndMembers_IAsyncEnumerator()\r\n        {\r\n            ...\r\n            // We're missing a diagnostic for missing CancellationToken type\r\n            // See https://github.com/dotnet/roslyn/issues/34709\r\n            //VerifyMissingType(_enumerator, WellKnownType.System_Threading_CancellationToken);\r\n\r\n            string enumerableWithCancellationToken = @\"\r\nusing System.Threading.Tasks;\r\nclass C\r\n{\r\n    async System.Collections.Generic.IAsyncEnumerable<int> M() { await Task.CompletedTask; yield return 3; cancellationToken.ToString(); }\r\n}\r\n\";\r\n            // We're missing a diagnostic for missing CancellationToken type\r\n            // See https://github.com/dotnet/roslyn/issues/34709\r\n            //VerifyMissingType(enumerableWithCancellationToken, WellKnownType.System_Threading_CancellationToken);\r\n        }\r\n```\r\n\r\nThis issue is referenced in the test above.\r\n\r\n\r\nRelates to https://github.com/dotnet/roslyn/issues/24037 (async-streams umbrella)","Url":"https://github.com/dotnet/roslyn/issues/34709","RelatedDescription":"Open issue \"Missing diagnostics in async-iterator when `CancellationToken` type is missing\" (#34709)"},{"Id":"428523924","IsPullRequest":false,"CreatedAt":"2019-04-03T01:50:09","Actor":"jcouv","Number":"34708","RawContent":null,"Title":"Allow usage and capture of 'cancellationToken' in lambdas and local functions","State":"open","Body":"As part of the PR to add support for special `cancellationToken` variable (https://github.com/dotnet/roslyn/pull/34692), I blocked those scenarios temporarily to get the bulk of the feature working.\r\n\r\nThis issue is referenced in source and tests.\r\n\r\nShould test:\r\n- in lambdas\r\n- in expression trees\r\n- in nested local functions (some being async-iterators and some not)\r\n\r\n\r\nRelates to https://github.com/dotnet/roslyn/issues/24037 (async-streams umbrella)","Url":"https://github.com/dotnet/roslyn/issues/34708","RelatedDescription":"Open issue \"Allow usage and capture of 'cancellationToken' in lambdas and local functions\" (#34708)"},{"Id":"428498633","IsPullRequest":true,"CreatedAt":"2019-04-03T01:30:10","Actor":"dotnet-bot","Number":"34702","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/34702","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#34702)"},{"Id":"428498660","IsPullRequest":true,"CreatedAt":"2019-04-03T01:30:05","Actor":"dotnet-bot","Number":"34703","RawContent":null,"Title":"Merge master to features/readonly-members","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/readonly-members.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/readonly-members\ngit reset --hard upstream/features/readonly-members\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/readonly-members --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/34703","RelatedDescription":"Closed or merged PR \"Merge master to features/readonly-members\" (#34703)"},{"Id":"428508633","IsPullRequest":false,"CreatedAt":"2019-04-03T00:44:56","Actor":"davkean","Number":"34707","RawContent":null,"Title":"Sync namespace to folder reformats the entire document","State":"open","Body":"**Version Used**: \r\n2019 RTM\r\n\r\n**Steps to Reproduce**:\r\n\r\n1.  At $ run Sync namespace to folder\r\n\r\n``` C#\r\nusing System;\r\n\r\nnamespace Namespace\r\n{\r\n    class Program\r\n    {\r\n        //          Column1               Column2\r\n        [InlineData(\"FooBar\",             \"Bar\")]\r\n        [InlineData(\"FooBarFooBar\",       \"Bar\")]\r\n        [InlineData(\"FooBarFooBarFooBar\", \"Bar\")]\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello World!\");\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\n**Expected Behavior**:\r\n``` C#\r\nusing System;\r\n\r\nnamespace Namespace.NewFolder\r\n{\r\n    class Program\r\n    {\r\n        //          Column1               Column2\r\n        [InlineData(\"FooBar\",             \"Bar\")]\r\n        [InlineData(\"FooBarFooBar\",       \"Bar\")]\r\n        [InlineData(\"FooBarFooBarFooBar\", \"Bar\")]\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello World!\");\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\n**Actual Behavior**:\r\n``` C#\r\nusing System;\r\n\r\nnamespace Namespace.NewFolder\r\n{\r\n    class Program\r\n    {\r\n        //          Column1               Column2\r\n        [InlineData(\"FooBar\", \"Bar\")]\r\n        [InlineData(\"FooBarFooBar\", \"Bar\")]\r\n        [InlineData(\"FooBarFooBarFooBar\", \"Bar\")]\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello World!\");\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\nI cannot use this feature in any test project as it breaks all tables. Why does it need to reformat the document to fix the namespace?","Url":"https://github.com/dotnet/roslyn/issues/34707","RelatedDescription":"Open issue \"Sync namespace to folder reformats the entire document\" (#34707)"},{"Id":"428506783","IsPullRequest":true,"CreatedAt":"2019-04-03T00:36:23","Actor":"chborl","Number":"34706","RawContent":null,"Title":"Don't complete statement on element access expression unless caret is inside bracketed argument list","State":"open","Body":"Fixes #34666\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/34706","RelatedDescription":"Open PR \"Don't complete statement on element access expression unless caret is inside bracketed argument list\" (#34706)"},{"Id":"428503492","IsPullRequest":true,"CreatedAt":"2019-04-03T00:21:03","Actor":"gafter","Number":"34705","RawContent":null,"Title":"Use object== for original types rather than .Equals.","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/34705","RelatedDescription":"Open PR \"Use object== for original types rather than .Equals.\" (#34705)"},{"Id":"428500801","IsPullRequest":false,"CreatedAt":"2019-04-03T00:09:24","Actor":"gafter","Number":"34704","RawContent":null,"Title":"Implement cycle breaking rule for interfaces","State":"open","Body":"There is a specification for breaking binding cycles while binding an interface's base clause:\r\n\r\n> ### Binding base clauses\r\n> \r\n> Interfaces now contain types.  These types may be used in the base clause as base interfaces.  When binding a base clause, we may need to know the set of base interfaces to bind those types (e.g. to lookup in them and to resolve protected access).  The meaning of an interface's base clause is thus circularly defined.  To break the cycle, we add a new language rules corresponding to a similar rule already in place for classes.\r\n> \r\n> While determining the meaning of the *interface_base* of an interface, the base interfaces are temporarily assumed to be empty. Intuitively this ensures that the meaning of a base clause cannot recursively depend on itself. \r\n> \r\n> When an interface IB extends an interface IA, it is a compile-time error for IA to depend on IB. An interface ***directly depends on*** its direct base interfaces (if any) and directly depends on the type within which it is immediately nested (if any). Given this definition, and the definition of *directly depends on* for classes, the complete set of types upon which an interface depends is the reflexive and transitive closure of the directly depends on relationship.\r\n\r\nIt is possible that this rule is already implemented, or that some other cycle breaking algorithm is implemented.  Please ensure there is alignment between the implementation and the specification.\r\n","Url":"https://github.com/dotnet/roslyn/issues/34704","RelatedDescription":"Open issue \"Implement cycle breaking rule for interfaces\" (#34704)"},{"Id":"428488332","IsPullRequest":false,"CreatedAt":"2019-04-02T23:19:53","Actor":"chsienki","Number":"34701","RawContent":null,"Title":"Pattern based async disposal does not work on lifted nullable structs","State":"open","Body":"When implementing async disposal via pattern, you should be able to use a nullable version of the struct in the `await using` statement:\r\n\r\n**Repro:**\r\n\r\n```c#\r\nusing System;\r\nusing System.Threading;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace System\r\n{\r\n    public interface IAsyncDisposable\r\n    {\r\n        ValueTask DisposeAsync();\r\n    }\r\n}\r\n\r\npublic class C \r\n{\r\n    public static async Task M()\r\n    {\r\n        StructDisposer? a = null;\r\n        await using (a) { } // DisposeAsync is not invoked\r\n        \r\n        StructDisposer? b = new StructDisposer();\r\n        await using (b) { } // DisposeAsync is invoked\r\n    }\r\n}\r\n\r\npublic struct StructDisposer /*: IAsyncDisposable*/\r\n{\r\n    public async ValueTask DisposeAsync() => Console.WriteLine(\"DisposeAsync\");\r\n}\r\n```\r\n\r\n**Expected Behaviour:**\r\n\r\nCompiles successfully.\r\n\r\n**Actual Behavior:**\r\n\r\n`error CS8410: 'StructDisposer?': type used in an async using statement must be implicitly convertible to 'System.IAsyncDisposable' or implement a suitable 'DisposeAsync' method.`\r\n\r\n**Workaround**:\r\n\r\nExplicitly implement the IAsyncDisposable interface, and the code will compile and run successfully. \r\n\r\n[jcouv update:] this issue is reference in the design doc. Should update the design doc when closing this issue.\r\n","Url":"https://github.com/dotnet/roslyn/issues/34701","RelatedDescription":"Open issue \"Pattern based async disposal does not work on lifted nullable structs\" (#34701)"},{"Id":"428483683","IsPullRequest":false,"CreatedAt":"2019-04-02T23:01:59","Actor":"cston","Number":"34700","RawContent":null,"Title":"Incorrect nullability of nested struct field","State":"open","Body":"No warning should be reported for `t.Item1.F.ToString()`:\r\n```C#\r\nstruct S\r\n{\r\n    internal object? F;\r\n}\r\n\r\nclass Program\r\n{\r\n    static void Main()\r\n    {\r\n        S s = new S() { F = 1 };\r\n        var t = (s, s = new S());\r\n        t.Item1.F.ToString();\r\n        t.Item2.F.ToString(); // warning\r\n    }\r\n}\r\n```\r\nResult:\r\n```\r\n(12,9): warning CS8602: Dereference of a possibly null reference.\r\n(13,9): warning CS8602: Dereference of a possibly null reference.\r\n```","Url":"https://github.com/dotnet/roslyn/issues/34700","RelatedDescription":"Open issue \"Incorrect nullability of nested struct field\" (#34700)"},{"Id":"428481253","IsPullRequest":false,"CreatedAt":"2019-04-02T22:53:02","Actor":"VBAndCs","Number":"34699","RawContent":null,"Title":"VB.NET Editor is messed up!","State":"open","Body":"**Version Used**: \r\nVS.NET 2019 Community Edition.\r\nWin 10 x64 ver 1809 update KB4489899 (OS Build 17763.379)\r\n\r\n**Steps to Reproduce**:\r\nI am working on the Vazor project\r\nhttps://github.com/VBAndCs/Vazor\r\nTry any file in the project, for example: https://github.com/VBAndCs/Vazor/blob/master/WebApp1/Views/Home/Index.vazor.vb\r\n\r\n**Expected Behavior**:\r\nA usual editor behavior.\r\n\r\n**Actual Behavior**:\r\nThe editor doesn't recognize most of the types, no Intellisense most of the time, no red line under unrecognized members and the go to definition command doesn't work! \r\nI faced some of these issues in the VS.NET 2019 preview, where the editor always shows me an error message at the top of the window after loading the project, but these issues were minimal. This got worst in the release! no error message, but nearly nothing is working!","Url":"https://github.com/dotnet/roslyn/issues/34699","RelatedDescription":"Open issue \"VB.NET Editor is messed up!\" (#34699)"},{"Id":"428480676","IsPullRequest":true,"CreatedAt":"2019-04-02T22:51:07","Actor":"tmat","Number":"34698","RawContent":null,"Title":"Prototype: Storing compilation outputs in Project","State":"open","Body":"The EnC infrastructure needs to read data from the assembly and the PDB produced by the compiler.\r\nCurrently this information is not represented in Workspace layer, which is where we need to access it.\r\n\r\nSee https://github.com/dotnet/roslyn/issues/34371.\r\n\r\n**Proposal**\r\n\r\nAdd new APIs that provide an access to the files that is abstracted from the file system, so that it allows projects to potentially compile in-memory and still provide the necessary data.\r\n\r\n```C#\r\n public abstract class CompilationOutputs\r\n {\r\n     /// <summary>\r\n     /// Opens an assembly file produced by the compiler (corresponds to OutputAssembly build task parameter).\r\n     /// </summary>\r\n     public abstract Stream OpenOutputAssembly();\r\n\r\n     /// <summary>\r\n     /// Opens a reference assembly file produced by the compiler (corresponds to OutputRefAssembly build task parameter).\r\n     /// </summary>\r\n     public abstract Stream OpenOutputRefAssembly();\r\n\r\n     /// <summary>\r\n     /// Opens a PDB file produced by the compiler (corresponds to PdbFile build task parameter).\r\n     /// </summary>\r\n     public abstract Stream OpenPdbFile();\r\n\r\n     /// <summary>\r\n     /// Opens a documentation file produced by the compiler (corresponds to DocumentationFile build task parameter).\r\n     /// </summary>\r\n     public abstract Stream OpenDocumentationFile();\r\n\r\n     public abstract override bool Equals(object other);\r\n     public abstract override int GetHashCode();\r\n }\r\n```\r\n\r\n`OpenXxx` opens a new stream each time it's called. It's up to the caller to dispose the stream.\r\nIf the stream is backed by a file, the file is locked while the stream is being opened. The caller must make sure to close the stream as soon as it can to allow rebuild.\r\n\r\nA file system specific implementation:\r\n\r\n```C#\r\n public sealed class CompilationOutputFiles : CompilationOutputs, IEquatable<CompilationOutputFiles>\r\n {\r\n     public string OutputAssemblyPath { get; }\r\n     public string OutputRefAssemblyPath { get; }\r\n     public string PdbFilePath { get; }\r\n     public string DocumentationFilePath { get; }\r\n\r\n     public CompilationOutputFiles(\r\n         string outputAssemblyPath = null,\r\n         string outputRefAssemblyPath = null,\r\n         string pdbFilePath = null,\r\n         string documentationFilePath = null);\r\n\r\n     public CompilationOutputFiles WithOutputAssemblyPath(string path);\r\n     public CompilationOutputFiles WithOutputRefAssemblyPath(string path);\r\n     public CompilationOutputFiles WithPdbFilePath(string path);\r\n     public CompilationOutputFiles WithDocumentationFilePath(string path);\r\n }\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/pull/34698","RelatedDescription":"Open PR \"Prototype: Storing compilation outputs in Project\" (#34698)"},{"Id":"428479523","IsPullRequest":true,"CreatedAt":"2019-04-02T22:47:05","Actor":"chsienki","Number":"34697","RawContent":null,"Title":"Add spec for enhanced using","State":"open","Body":"Spec out the various parts of the enhanced using feature","Url":"https://github.com/dotnet/roslyn/pull/34697","RelatedDescription":"Open PR \"Add spec for enhanced using\" (#34697)"},{"Id":"428479464","IsPullRequest":true,"CreatedAt":"2019-04-02T22:46:53","Actor":"KirillOsenkov","Number":"34696","RawContent":null,"Title":"Avoid a first-chance FileNotFoundException when a ruleset include is not found.","State":"open","Body":"When a .ruleset file includes a non-existing ruleset reference we receive null from ResolveIncludePath and throw a FileNotFoundException, which is the immediately caught in LoadRuleSet.\r\n\r\nWe can avoid the first-chance exception and the associated allocations if we just return null. A missing ruleset is not an exceptional situation so no need to use exceptions for control flow here if we can avoid it.\r\n\r\nThis is not blocking anything and not urgent, I was just passing by and noticed this and decided to fix.","Url":"https://github.com/dotnet/roslyn/pull/34696","RelatedDescription":"Open PR \"Avoid a first-chance FileNotFoundException when a ruleset include is not found.\" (#34696)"},{"Id":"428478077","IsPullRequest":true,"CreatedAt":"2019-04-02T22:42:20","Actor":"gafter","Number":"34695","RawContent":null,"Title":"`t is null` with LangVersion 7 should produce a diagnostic","State":"open","Body":"Fixes #34678","Url":"https://github.com/dotnet/roslyn/pull/34695","RelatedDescription":"Open PR \"`t is null` with LangVersion 7 should produce a diagnostic\" (#34695)"},{"Id":"428472897","IsPullRequest":true,"CreatedAt":"2019-04-02T22:25:08","Actor":"dibarbet","Number":"34694","RawContent":null,"Title":"Update shell framework version to consume partial load API.","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/34694","RelatedDescription":"Open PR \"Update shell framework version to consume partial load API.\" (#34694)"},{"Id":"428468971","IsPullRequest":false,"CreatedAt":"2019-04-02T22:12:23","Actor":"tannergooding","Number":"34693","RawContent":null,"Title":"StackOverflow in the compiler","State":"open","Body":"**Repro:**\r\nCompile the following program using the latest compiler bits:\r\n```csharp\r\nusing System;\r\nusing System.Runtime.InteropServices;\r\n\r\nnamespace Interop\r\n{\r\n    public unsafe struct PROPVARIANT\r\n    {\r\n        public CAPROPVARIANT ca;\r\n    }\r\n\r\n    public unsafe struct CAPROPVARIANT\r\n    {\r\n        public uint cElems;\r\n        public PROPVARIANT* pElems;\r\n    }\r\n}\r\n```\r\n\r\nStackTrace: \r\n[StackTrace.txt](https://github.com/dotnet/roslyn/files/3036089/StackTrace.txt)\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/34693","RelatedDescription":"Open issue \"StackOverflow in the compiler\" (#34693)"},{"Id":"428468602","IsPullRequest":true,"CreatedAt":"2019-04-02T22:11:14","Actor":"jcouv","Number":"34692","RawContent":null,"Title":"Add cancellationToken local symbol","State":"open","Body":"Inside an async-iterator method that returns `IAsyncEnumerable` (but not `IAsyncEnumerator`), a variable `cancellationToken` exists. It is implemented as a field on the state machine. We initialize it with the token passed as a parameter into `GetAsyncEnumerator(CancellationToken)`.\r\n\r\nParameters and type parameters of this name are disallowed on such async-iterators.\r\nThere is discussion of providing a warning on parameters of type `CancellationToken` as well, but I will do that in a follow-up (see below).\r\nI temporarily blocked usage and capture of `cancellationToken` in local functions and lambdas due to time constraints.\r\n\r\nFixes https://github.com/dotnet/roslyn/issues/34407\r\n\r\n- [x] Add a binder just after the InMethodBinder\r\n- [x] Stored the synthesized local in the method. \r\n- [x] Checking IsIterator early is trouble (we need to determine if the local exists before binding the body of the method, but binding the body is currently required to determine if a method is an iterator) so I'm using the return type instead. The two are equivalent (otherwise an error is produced).\r\n- [x] AsyncRewriter hoists the synthesized local.\r\n- [x] GetAsyncEnumerator assigns the corresponding field with value from parameter.\r\n- [x] Made local readonly. Don't assign a debug slot to this local. Add diagnostics for conflicts.\r\n- [x] Report an error if the `CancellationToken` type is missing (filed https://github.com/dotnet/roslyn/issues/34709)\r\n- [x] When a local function captures `cancellationToken` the async method should use that local function's environment, rather than its own field. (temporarily blocked this scenario. Filed https://github.com/dotnet/roslyn/issues/34708 to enable)\r\n- [x] Add a warning for parameters of type `CancellationToken` (email thread with LDM, filed https://github.com/dotnet/roslyn/issues/34710)\r\n- [ ] test EE (see comment in DefineUserDefinedStateMachineHoistedLocal) and EnC (add a declaration for 'cancellationToken', add a write statement)\r\n\r\nRelates to https://github.com/dotnet/roslyn/issues/24037 (async-streams umbrella)","Url":"https://github.com/dotnet/roslyn/pull/34692","RelatedDescription":"Open PR \"Add cancellationToken local symbol\" (#34692)"},{"Id":"428468329","IsPullRequest":false,"CreatedAt":"2019-04-02T22:10:21","Actor":"gafter","Number":"34691","RawContent":null,"Title":"Test CSharpUpgradeProjectCodeFixProvider with mix of CSharp8 and Preview","State":"open","Body":"What happens if you have mixed versions Latest and Preview in different projects of your solution, and you use a Preview feature in a Latest project.  Will it upgrade everything to Preview?  Latest?","Url":"https://github.com/dotnet/roslyn/issues/34691","RelatedDescription":"Open issue \"Test CSharpUpgradeProjectCodeFixProvider with mix of CSharp8 and Preview\" (#34691)"},{"Id":"428446388","IsPullRequest":true,"CreatedAt":"2019-04-02T21:11:24","Actor":"jaredpar","Number":"34690","RawContent":null,"Title":"NGEN logging code is fixed in arcade","State":"open","Body":"This can be enabled in our builds now.","Url":"https://github.com/dotnet/roslyn/pull/34690","RelatedDescription":"Open PR \"NGEN logging code is fixed in arcade\" (#34690)"},{"Id":"428429892","IsPullRequest":true,"CreatedAt":"2019-04-02T20:32:30","Actor":"ivanbasov","Number":"34689","RawContent":null,"Title":"Support `inlineDescription` parameter for `AssertSelectedCompletionIt…em` in ModernCompletionTestState","State":"open","Body":"Fix https://github.com/dotnet/roslyn/issues/33913\r\n\r\nThe actual fix was https://github.com/dotnet/roslyn/pull/34275","Url":"https://github.com/dotnet/roslyn/pull/34689","RelatedDescription":"Open PR \"Support `inlineDescription` parameter for `AssertSelectedCompletionIt…em` in ModernCompletionTestState\" (#34689)"},{"Id":"428428777","IsPullRequest":false,"CreatedAt":"2019-04-02T20:30:08","Actor":"tmeschter","Number":"34688","RawContent":null,"Title":"Re-enable DotNetSdkTests.TestDiscoverEditorConfigFiles","State":"open","Body":"The `Microsoft.CodeAnalysis.BuildTasks.UnitTests.DotNetSdkTests.TestDiscoverEditorConfigFiles` test verifies that our MSBuild .props/.targets files can find .editorconfig files starting from the set of input .cs/.vb files. However, the latest implementation of this depends on MSBuild features that are not yet available in our build systems. As such we need to disable the test until such time as we can take a dependency on a newer MSBuild.","Url":"https://github.com/dotnet/roslyn/issues/34688","RelatedDescription":"Open issue \"Re-enable DotNetSdkTests.TestDiscoverEditorConfigFiles\" (#34688)"},{"Id":"428423230","IsPullRequest":true,"CreatedAt":"2019-04-02T20:17:51","Actor":"gafter","Number":"34687","RawContent":null,"Title":"Infer nullability in switch on conditional access operator","State":"open","Body":"Adds a test for an already-fixed issue\r\nFixes #34246","Url":"https://github.com/dotnet/roslyn/pull/34687","RelatedDescription":"Open PR \"Infer nullability in switch on conditional access operator\" (#34687)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"428526993","IsPullRequest":false,"CreatedAt":"2019-04-03T02:01:57","Actor":"yowl","Number":"7248","RawContent":null,"Title":"wasm: some linq methods fail to compile","State":"open","Body":"When attempting to build an Uno Platform project, it fails on a method \r\n```\r\n{[System.Linq]System.Linq.Enumerable+Iterator`1<Windows.UI.Xaml.Documents.Inline>.Select<string>(Func``2<Inline,string>)}\r\n```\r\n in the ctor for `WebAssemblyVTableSlotNode` on the assert\r\n```\r\nDebug.Assert(!targetMethod.HasInstantiation);\r\n```\r\nNot done any more investigation yet.","Url":"https://github.com/dotnet/corert/issues/7248","RelatedDescription":"Open issue \"wasm: some linq methods fail to compile\" (#7248)"},{"Id":"428492299","IsPullRequest":true,"CreatedAt":"2019-04-02T23:35:19","Actor":"yowl","Number":"7247","RawContent":null,"Title":"wasm: remove unneeded fpext when doing ops on 2 floats","State":"open","Body":"previously when floats where popped off the stack they were always widened to doubles.  This change removes that and only widens floats when the operation has a double on the other side.","Url":"https://github.com/dotnet/corert/pull/7247","RelatedDescription":"Open PR \"wasm: remove unneeded fpext when doing ops on 2 floats\" (#7247)"},{"Id":"428458380","IsPullRequest":true,"CreatedAt":"2019-04-02T23:12:29","Actor":"Dotnet-GitSync-Bot","Number":"7246","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7246","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7246)"},{"Id":"428022723","IsPullRequest":true,"CreatedAt":"2019-04-02T21:44:03","Actor":"jkotas","Number":"7244","RawContent":null,"Title":"Store StructMarshalingData for OffsetOf on blittable types","State":"closed","Body":"Fixes #7232","Url":"https://github.com/dotnet/corert/pull/7244","RelatedDescription":"Closed or merged PR \"Store StructMarshalingData for OffsetOf on blittable types\" (#7244)"},{"Id":"426956826","IsPullRequest":false,"CreatedAt":"2019-04-02T21:44:02","Actor":"PathogenDavid","Number":"7232","RawContent":null,"Title":"Marshal.OffsetOf<T> fails on blittable structs","State":"closed","Body":"I was going to leave this as a comment on #5374 until I realized the issue was only happening on blittable structs, so I don't feel like it's totally relevant there. (Plus that issue has been closed.)\r\n\r\nIn short, both `Marshal.OffsetOf` and `Marshal.OffsetOf<T>` do not work on blittable structs. They work as expected if the struct is not blittable.\r\n\r\nI have made a minimal demonstration of the issue available at [PathogenPlayground/CoreRtOffsetOf](https://github.com/PathogenPlayground/CoreRtOffsetOf/blob/master/CoreRtOffsetOf/Program.cs). It exercises the generic and non-generic variants of `Marshal.OffsetOf` and `Marshal.SizeOf` on both blittable and non-blittable types. Everything works except for either `OffsetOf` on the blittable type.\r\n\r\nI've tried the workaround described by @MichalStrehovsky at https://github.com/dotnet/corert/issues/5374#issuecomment-364846258, but it has no impact on any of the calls. (Whether or not it's there, the success/failure of everything remains the same.) I've also tried adding the types to the `rd.xml`, but that doesn't change anything either.\r\n\r\nI also tried using `1.0.0-alpha-26212-01` in case there was a regression since Michal made his comment, but that also had the same results.\r\n\r\nFor the sake of convenience, here's the output of the playground on my machine:\r\n\r\n```\r\nSizeOf<BlittableStruct>: 8\r\nSizeOf(BlittableStruct): 8\r\nsizeof(BlittableStruct): 8\r\nSizeOf<MarshaledStruct>: 16\r\nSizeOf(MarshaledStruct): 16\r\nOffsetOf<BlittableStruct>: FAILED\r\nEETypeRva:0x0032F1E8(System.Runtime.InteropServices.MissingInteropDataException): CoreRtOffsetOf.BlittableStruct is missing structure marshalling data. To enable structure marshalling data, add a MarshalStructure directive to the application rd.xml file. For more information, please visit http://go.microsoft.com/fwlink/?LinkID=393965\r\n   at System.Runtime.InteropServices.Marshal.OffsetOf(Type, String) + 0x1a7\r\n   at CoreRtOffsetOf.Program.<>c.<Main>b__1_5() + 0x20\r\n   at CoreRtOffsetOf.Program.Test(String, Func`1) + 0x34\r\n\r\nOffsetOf(BlittableStruct): FAILED\r\nEETypeRva:0x0032F1E8(System.Runtime.InteropServices.MissingInteropDataException): CoreRtOffsetOf.BlittableStruct is missing structure marshalling data. To enable structure marshalling data, add a MarshalStructure directive to the application rd.xml file. For more information, please visit http://go.microsoft.com/fwlink/?LinkID=393965\r\n   at System.Runtime.InteropServices.Marshal.OffsetOf(Type, String) + 0x1a7\r\n   at CoreRtOffsetOf.Program.<>c.<Main>b__1_6() + 0x2f\r\n   at CoreRtOffsetOf.Program.Test(String, Func`1) + 0x34\r\n\r\nOffsetOf<MarshaledStruct>: 4\r\nOffsetOf(MarshaledStruct): 4\r\nDone.\r\n```\r\n\r\nOn a side note, I was very impressed with CoreRT when I finally tried it with a largeish test project yesterday. This was the only real issue I ran into. Everything else was adding the right types to `rd.xml` for reflection and disabling some AOT-unfriendly runtime assembly loading.","Url":"https://github.com/dotnet/corert/issues/7232","RelatedDescription":"Closed issue \"Marshal.OffsetOf<T> fails on blittable structs\" (#7232)"},{"Id":"428224212","IsPullRequest":true,"CreatedAt":"2019-04-02T13:22:41","Actor":"MichalStrehovsky","Number":"7245","RawContent":null,"Title":"Merge master to nmirror","State":"closed","Body":"The UTC bug that was blocking the integration is now fixed.","Url":"https://github.com/dotnet/corert/pull/7245","RelatedDescription":"Closed or merged PR \"Merge master to nmirror\" (#7245)"},{"Id":"428005918","IsPullRequest":true,"CreatedAt":"2019-04-02T11:47:26","Actor":"Dotnet-GitSync-Bot","Number":"7243","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @krwq @krwq","Url":"https://github.com/dotnet/corert/pull/7243","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7243)"},{"Id":"427930897","IsPullRequest":true,"CreatedAt":"2019-04-02T03:24:36","Actor":"Dotnet-GitSync-Bot","Number":"7242","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks","Url":"https://github.com/dotnet/corert/pull/7242","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7242)"},{"Id":"427883213","IsPullRequest":true,"CreatedAt":"2019-04-01T21:55:39","Actor":"Dotnet-GitSync-Bot","Number":"7241","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @acid-chicken","Url":"https://github.com/dotnet/corert/pull/7241","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7241)"},{"Id":"427452743","IsPullRequest":true,"CreatedAt":"2019-04-01T21:26:28","Actor":"trylek","Number":"7238","RawContent":null,"Title":"SuperIlc - minor improvements and bugfixes","State":"closed","Body":"These are a couple of items I spotted in my local SuperIlc testing:\r\n\r\n1) FindCoreRun was crashing with nullref when no ReferencePaths were\r\nspecified. I used this opportunity to unify the idiom of converting\r\nthe command line argument to an IEnumerable<string>.\r\n\r\n2) The execution step was missing logging of failures similar to\r\nwhat we have for compilations. I have adapted compilation logging\r\nfor this purpose.\r\n\r\n3) I hit and fixed a typo in the DateTime formatting string for the\r\nCompileDirectory command.\r\n\r\n4) I came to the conclusion that it's more precise to have the\r\n\"outcome\" table represent individual compilations and executions\r\nrather than the complete \"apps\" (folders) so I modified the code\r\nas appropriate.\r\n\r\n5) I fixed a bug where I had incorrectly placed a try / catch block\r\nand that caused error count calculation to be slightly off.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7238","RelatedDescription":"Closed or merged PR \"SuperIlc - minor improvements and bugfixes\" (#7238)"},{"Id":"427666802","IsPullRequest":true,"CreatedAt":"2019-04-01T18:26:01","Actor":"filipnavara","Number":"7239","RawContent":null,"Title":"Add missing PreAllocatedOverlapped and ThreadPoolBoundHandle classes …","State":"closed","Body":"…on Unix builds\r\n\r\nContributes to https://github.com/dotnet/corert/issues/7090.","Url":"https://github.com/dotnet/corert/pull/7239","RelatedDescription":"Closed or merged PR \"Add missing PreAllocatedOverlapped and ThreadPoolBoundHandle classes …\" (#7239)"},{"Id":"427716069","IsPullRequest":true,"CreatedAt":"2019-04-01T15:25:10","Actor":"MichalStrehovsky","Number":"7240","RawContent":null,"Title":"Fix regression in Enum.GetValues","State":"closed","Body":"Found during Project N integration.","Url":"https://github.com/dotnet/corert/pull/7240","RelatedDescription":"Closed or merged PR \"Fix regression in Enum.GetValues\" (#7240)"},{"Id":"427311595","IsPullRequest":true,"CreatedAt":"2019-03-31T08:54:03","Actor":"MichalStrehovsky","Number":"7237","RawContent":null,"Title":"Add option to enable method body folding","State":"closed","Body":"This adds an option to specify the user would like to fold identical method bodies together. When enabled, we generate method bodies into separate COMDAT sections and when linker has `/OPT:ICF` passed to it (we already pass that), it's going to fold sections with identical content together.\r\n\r\nThis results in size savings - e.g. we save 170 kB on a Hello world because there's lots of methods with identical bodies in the image.\r\n\r\nI've also enabled folding of the `FoldableReadOnlyDataSection`. This was added for Project N but wasn't taken advantage of in the open source compiler. With this, we can fold identical interface dispatch maps and a couple other things. The size savings from that are not substatial, but we can do it without being under the optional switch, so that's nice.","Url":"https://github.com/dotnet/corert/pull/7237","RelatedDescription":"Closed or merged PR \"Add option to enable method body folding\" (#7237)"},{"Id":"427230798","IsPullRequest":true,"CreatedAt":"2019-03-30T03:19:34","Actor":"Dotnet-GitSync-Bot","Number":"7236","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @Gnbrkm41","Url":"https://github.com/dotnet/corert/pull/7236","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7236)"},{"Id":"427214057","IsPullRequest":true,"CreatedAt":"2019-03-30T02:06:05","Actor":"Dotnet-GitSync-Bot","Number":"7235","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @sdmaclea","Url":"https://github.com/dotnet/corert/pull/7235","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7235)"},{"Id":"427082113","IsPullRequest":true,"CreatedAt":"2019-03-29T20:27:53","Actor":"sergiy-k","Number":"7234","RawContent":null,"Title":"Switch to new build pools per requests from the engineering team","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7234","RelatedDescription":"Closed or merged PR \"Switch to new build pools per requests from the engineering team\" (#7234)"},{"Id":"427002209","IsPullRequest":true,"CreatedAt":"2019-03-29T15:10:42","Actor":"Dotnet-GitSync-Bot","Number":"7233","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7233","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7233)"},{"Id":"426848260","IsPullRequest":true,"CreatedAt":"2019-03-29T13:58:28","Actor":"Dotnet-GitSync-Bot","Number":"7231","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @marek-safar @benaadams","Url":"https://github.com/dotnet/corert/pull/7231","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7231)"},{"Id":"426824931","IsPullRequest":true,"CreatedAt":"2019-03-29T07:08:24","Actor":"Dotnet-GitSync-Bot","Number":"7230","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @sywhang @GrabYourPitchforks","Url":"https://github.com/dotnet/corert/pull/7230","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7230)"},{"Id":"426653469","IsPullRequest":true,"CreatedAt":"2019-03-29T05:32:37","Actor":"Dotnet-GitSync-Bot","Number":"7228","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @safern @krwq @safern","Url":"https://github.com/dotnet/corert/pull/7228","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7228)"},{"Id":"426718885","IsPullRequest":true,"CreatedAt":"2019-03-28T22:09:30","Actor":"MichalStrehovsky","Number":"7229","RawContent":null,"Title":"Update DotNet-CoreRT-Publish.json","State":"closed","Body":"Disable myget publish for now.","Url":"https://github.com/dotnet/corert/pull/7229","RelatedDescription":"Closed or merged PR \"Update DotNet-CoreRT-Publish.json\" (#7229)"},{"Id":"426556186","IsPullRequest":true,"CreatedAt":"2019-03-28T18:46:08","Actor":"Dotnet-GitSync-Bot","Number":"7227","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @simplejackcoder","Url":"https://github.com/dotnet/corert/pull/7227","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7227)"},{"Id":"426308387","IsPullRequest":true,"CreatedAt":"2019-03-28T15:09:57","Actor":"Dotnet-GitSync-Bot","Number":"7225","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7225","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7225)"},{"Id":"426255405","IsPullRequest":true,"CreatedAt":"2019-03-28T07:54:08","Actor":"jkotas","Number":"7223","RawContent":null,"Title":"Update README.md","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7223","RelatedDescription":"Closed or merged PR \"Update README.md\" (#7223)"},{"Id":"426343271","IsPullRequest":false,"CreatedAt":"2019-03-28T07:42:09","Actor":"Fabi","Number":"7226","RawContent":null,"Title":" Unable to find package in the latest release(s)","State":"open","Body":"Hey,\r\n\r\nthe latest myget packages (1.0.0-alpha-27527-02 at least) result in missing package errors while building.\r\nThis doesn't happen with packages from 2 days ago.\r\n\r\nI'm using .NET Core 3.0 preview 3\r\n\r\n```\r\n\r\n  Persisting no-op dg to D:\\a\\1\\s\\src\\Arctium.WoW.Tools\\Arctium.WoW.Launcher\\obj\\Arctium.WoW.Launcher.csproj.nuget.dgspec.json\r\nD:\\a\\1\\s\\src\\Arctium.WoW.Tools\\Arctium.WoW.Launcher\\Arctium.WoW.Launcher.csproj : error NU1102: Unable to find package runtime.osx-x64.Microsoft.DotNet.ILCompiler with version (>= 1.0.0-alpha-27527-02) [D:\\a\\1\\s\\Arctium.WoW.Tools.sln]\r\nD:\\a\\1\\s\\src\\Arctium.WoW.Tools\\Arctium.WoW.Launcher\\Arctium.WoW.Launcher.csproj : error NU1102:   - Found 566 version(s) in dotnet-core [ Nearest version: 1.0.0-alpha-27527-01 ] [D:\\a\\1\\s\\Arctium.WoW.Tools.sln]\r\nD:\\a\\1\\s\\src\\Arctium.WoW.Tools\\Arctium.WoW.Launcher\\Arctium.WoW.Launcher.csproj : error NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages [D:\\a\\1\\s\\Arctium.WoW.Tools.sln]\r\nD:\\a\\1\\s\\src\\Arctium.WoW.Tools\\Arctium.WoW.Launcher\\Arctium.WoW.Launcher.csproj : error NU1102:   - Found 0 version(s) in nuget.org [D:\\a\\1\\s\\Arctium.WoW.Tools.sln]\r\nD:\\a\\1\\s\\src\\Arctium.WoW.Tools\\Arctium.WoW.Launcher\\Arctium.WoW.Launcher.csproj : error NU1102:   - Found 0 version(s) in https://dotnetfeed.blob.core.windows.net/aspnet-aspnetcore-tooling/index.json [D:\\a\\1\\s\\Arctium.WoW.Tools.sln]\r\nD:\\a\\1\\s\\src\\Arctium.WoW.Tools\\Arctium.WoW.Launcher\\Arctium.WoW.Launcher.csproj : error NU1102:   - Found 0 version(s) in https://dotnetfeed.blob.core.windows.net/aspnet-aspnetcore/index.json [D:\\a\\1\\s\\Arctium.WoW.Tools.sln]\r\nD:\\a\\1\\s\\src\\Arctium.WoW.Tools\\Arctium.WoW.Launcher\\Arctium.WoW.Launcher.csproj : error NU1102:   - Found 0 version(s) in https://dotnetfeed.blob.core.windows.net/aspnet-entityframeworkcore/index.json [D:\\a\\1\\s\\Arctium.WoW.Tools.sln]\r\nD:\\a\\1\\s\\src\\Arctium.WoW.Tools\\Arctium.WoW.Launcher\\Arctium.WoW.Launcher.csproj : error NU1102:   - Found 0 version(s) in https://dotnetfeed.blob.core.windows.net/aspnet-extensions/index.json [D:\\a\\1\\s\\Arctium.WoW.Tools.sln]\r\nD:\\a\\1\\s\\src\\Arctium.WoW.Tools\\Arctium.WoW.Launcher\\Arctium.WoW.Launcher.csproj : error NU1102:   - Found 0 version(s) in https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json [D:\\a\\1\\s\\Arctium.WoW.Tools.sln]\r\nD:\\a\\1\\s\\src\\Arctium.WoW.Tools\\Arctium.WoW.Launcher\\Arctium.WoW.Launcher.csproj : error NU1102:   - Found 0 version(s) in https://dotnetfeed.blob.core.windows.net/dotnet-windowsdesktop/index.json [D:\\a\\1\\s\\Arctium.WoW.Tools.sln]\r\nD:\\a\\1\\s\\src\\Arctium.WoW.Tools\\Arctium.WoW.Launcher\\Arctium.WoW.Launcher.csproj : error NU1102: Unable to find package runtime.win-x64.Microsoft.DotNet.ILCompiler with version (>= 1.0.0-alpha-27527-02) [D:\\a\\1\\s\\Arctium.WoW.Tools.sln]\r\nD:\\a\\1\\s\\src\\Arctium.WoW.Tools\\Arctium.WoW.Launcher\\Arctium.WoW.Launcher.csproj : error NU1102:   - Found 566 version(s) in dotnet-core [ Nearest version: 1.0.0-alpha-27527-01 ] [D:\\a\\1\\s\\Arctium.WoW.Tools.sln]\r\nD:\\a\\1\\s\\src\\Arctium.WoW.Tools\\Arctium.WoW.Launcher\\Arctium.WoW.Launcher.csproj : error NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages [D:\\a\\1\\s\\Arctium.WoW.Tools.sln]\r\nD:\\a\\1\\s\\src\\Arctium.WoW.Tools\\Arctium.WoW.Launcher\\Arctium.WoW.Launcher.csproj : error NU1102:   - Found 0 version(s) in nuget.org [D:\\a\\1\\s\\Arctium.WoW.Tools.sln]\r\nD:\\a\\1\\s\\src\\Arctium.WoW.Tools\\Arctium.WoW.Launcher\\Arctium.WoW.Launcher.csproj : error NU1102:   - Found 0 version(s) in https://dotnetfeed.blob.core.windows.net/aspnet-aspnetcore-tooling/index.json [D:\\a\\1\\s\\Arctium.WoW.Tools.sln]\r\nD:\\a\\1\\s\\src\\Arctium.WoW.Tools\\Arctium.WoW.Launcher\\Arctium.WoW.Launcher.csproj : error NU1102:   - Found 0 version(s) in https://dotnetfeed.blob.core.windows.net/aspnet-aspnetcore/index.json [D:\\a\\1\\s\\Arctium.WoW.Tools.sln]\r\nD:\\a\\1\\s\\src\\Arctium.WoW.Tools\\Arctium.WoW.Launcher\\Arctium.WoW.Launcher.csproj : error NU1102:   - Found 0 version(s) in https://dotnetfeed.blob.core.windows.net/aspnet-entityframeworkcore/index.json [D:\\a\\1\\s\\Arctium.WoW.Tools.sln]\r\nD:\\a\\1\\s\\src\\Arctium.WoW.Tools\\Arctium.WoW.Launcher\\Arctium.WoW.Launcher.csproj : error NU1102:   - Found 0 version(s) in https://dotnetfeed.blob.core.windows.net/aspnet-extensions/index.json [D:\\a\\1\\s\\Arctium.WoW.Tools.sln]\r\nD:\\a\\1\\s\\src\\Arctium.WoW.Tools\\Arctium.WoW.Launcher\\Arctium.WoW.Launcher.csproj : error NU1102:   - Found 0 version(s) in https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json [D:\\a\\1\\s\\Arctium.WoW.Tools.sln]\r\nD:\\a\\1\\s\\src\\Arctium.WoW.Tools\\Arctium.WoW.Launcher\\Arctium.WoW.Launcher.csproj : error NU1102:   - Found 0 version(s) in https://dotnetfeed.blob.core.windows.net/dotnet-windowsdesktop/index.json [D:\\a\\1\\s\\Arctium.WoW.Tools.sln]\r\n  Restore failed in 22.88 sec for D:\\a\\1\\s\\src\\Arctium.WoW.Tools\\Arctium.WoW.Launcher\\Arctium.WoW.Launcher.csproj.\r\n```","Url":"https://github.com/dotnet/corert/issues/7226","RelatedDescription":"Open issue \" Unable to find package in the latest release(s)\" (#7226)"},{"Id":"426261333","IsPullRequest":true,"CreatedAt":"2019-03-28T04:24:08","Actor":"Dotnet-GitSync-Bot","Number":"7224","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @krwq @krwq @krwq @sdmaclea @safern @buyaa-n @buyaa-n","Url":"https://github.com/dotnet/corert/pull/7224","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7224)"},{"Id":"426233023","IsPullRequest":true,"CreatedAt":"2019-03-28T02:07:24","Actor":"Dotnet-GitSync-Bot","Number":"7221","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @sdmaclea","Url":"https://github.com/dotnet/corert/pull/7221","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7221)"},{"Id":"426247028","IsPullRequest":false,"CreatedAt":"2019-03-28T01:04:36","Actor":"pebble2050","Number":"7222","RawContent":null,"Title":"'clrcompression.dll': The specified module could not be found. when using openxmlsdk","State":"closed","Body":"Unhandled Exception: System.IO.Compression.ZLibException: The underlying compression routine could not be loaded correctly. ---> System.DllNotFoundException: Unable to load DLL 'clrcompression.dll': The specified module could not be found.\r\n   at Internal.Runtime.CompilerHelpers.InteropHelpers.FixupModuleCell(InteropHelpers.ModuleFixupCell*) + 0x7f\r\n   at Internal.Runtime.CompilerHelpers.InteropHelpers.ResolvePInvokeSlow(InteropHelpers.MethodFixupCell*) + 0x1d\r\n   at Interop.zlib.InflateInit2_(ZLibNative.ZStream&, Int32) + 0x40\r\n   at System.IO.Compression.ZLibNative.ZLibStreamHandle.InflateInit2_(Int32) + 0x30\r\n   at System.IO.Compression.Inflater.InflateInit(Int32) + 0x48\r\n\r\n   --- End of inner exception stack trace ---\r\n   at System.IO.Compression.Inflater.InflateInit(Int32) + 0x1e5\r\n   at System.IO.Compression.DeflateStream.InitializeInflater(Stream, Boolean, Int32) + 0x4a\r\n   at System.IO.Compression.ZipArchiveEntry.GetDataDecompressor(Stream) + 0x45\r\n   at System.IO.Compression.ZipArchiveEntry.OpenInReadMode(Boolean) + 0x86\r\n   at System.IO.Packaging.ZipStreamManager.Open(ZipArchiveEntry, FileMode, FileAccess) + 0x108\r\n   at System.IO.Packaging.ZipPackage.ContentTypeHelper.ParseContentTypesFile(ReadOnlyCollection`1) + 0x1e\r\n   at System.IO.Packaging.ZipPackage.ContentTypeHelper..ctor(ZipArchive, FileMode, FileAccess, ZipStreamManager) + 0x88\r\n   at System.IO.Packaging.ZipPackage..ctor(String, FileMode, FileAccess, FileShare) + 0x1c3\r\n   at System.IO.Packaging.Package.Open(String, FileMode, FileAccess, FileShare) + 0x280\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPackage.OpenCore(String, Boolean) + 0x61\r\n   at DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.Open(String, Boolean, OpenSettings) + 0x1d0","Url":"https://github.com/dotnet/corert/issues/7222","RelatedDescription":"Closed issue \"'clrcompression.dll': The specified module could not be found. when using openxmlsdk\" (#7222)"},{"Id":"425502208","IsPullRequest":true,"CreatedAt":"2019-03-27T17:40:47","Actor":"Dotnet-GitSync-Bot","Number":"7219","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7219","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7219)"},{"Id":"425736620","IsPullRequest":false,"CreatedAt":"2019-03-27T15:58:05","Actor":"ChinaChenMingQuan","Number":"7220","RawContent":null,"Title":"error:   Response status code does not indicate success: 404 (Not Found).","State":"closed","Body":"Geographic position: China\r\nSystem: Windows7 x64\r\nSystem language: China chinese\r\nVisual studio version: vs2017 community\r\n.Net core sdk version: 2.1.505 x64\r\nWindows sdk version: Windows 8.1 SDK and Windows 10  (10 .0.171340.)\r\nCompile version: vc++ 2017 v141\r\n\r\nI reference \"https://github.com/dotnet/corert/tree/master/samples/HelloWorld\" do test, \r\n\r\n1. \r\n> dotnet new console -o HelloWorld\r\n\r\n![第一步](https://user-images.githubusercontent.com/32387920/55045706-b3d73080-5079-11e9-9a55-1a3610391027.png)\r\n\r\n> cd HelloWorld\r\n\r\n![第一步续](https://user-images.githubusercontent.com/32387920/55045789-116b7d00-507a-11e9-9d83-652ae111a9c4.png)\r\n\r\nsuccess.\r\n\r\n2.\r\n> dotnet new nuget \r\n\r\n![第二步](https://user-images.githubusercontent.com/32387920/55045904-8f2f8880-507a-11e9-83b2-57b6e4e64680.png)\r\n\r\nopen nuget.config file.\r\n\r\n![第二步续1](https://user-images.githubusercontent.com/32387920/55046032-0d8c2a80-507b-11e9-9980-494ac881db0b.png)\r\n\r\nchange file.\r\n\r\n<add key=\"dotnet-core\" value=\"https://dotnet.myget.org/F/dotnet-core/api/v3/index.json\" />\r\n<add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" protocolVersion=\"3\" />\r\n\r\n![第二步续2](https://user-images.githubusercontent.com/32387920/55046117-57751080-507b-11e9-9a4f-5313d19cc615.png)\r\n\r\nsave file.\r\n\r\n![第二步续3](https://user-images.githubusercontent.com/32387920/55046193-a327ba00-507b-11e9-88f7-cd682c003711.png)\r\n\r\nencoding is UTF-8 without BOM.\r\n\r\n![第二步续4](https://user-images.githubusercontent.com/32387920/55046412-7cb64e80-507c-11e9-9d4e-c487d9eb58d7.png)\r\n\r\nsuccess.\r\n\r\n3.\r\n> dotnet add package Microsoft.DotNet.ILCompiler -v 1.0.0-alpha-* \r\n\r\n![第三步](https://user-images.githubusercontent.com/32387920/55046506-dae33180-507c-11e9-989a-ac7e9c26f64e.png)\r\n\r\nerror:   Unable to load source \"https://api.helloworld.org/v3/index.json\" Server index -- from google translation.\r\nerror:   Response status code does not indicate success: 404 (Not Found).\r\n\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7220","RelatedDescription":"Closed issue \"error:   Response status code does not indicate success: 404 (Not Found).\" (#7220)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"428460599","IsPullRequest":true,"CreatedAt":"2019-04-02T21:48:28","Actor":"fadimounir","Number":"3072","RawContent":null,"Title":"Update version in global.json","State":"open","Body":"New version pulls the ILLink.Tasks and Microsoft.NET.Build.Bundle packages.","Url":"https://github.com/dotnet/sdk/pull/3072","RelatedDescription":"Open PR \"Update version in global.json\" (#3072)"},{"Id":"428383802","IsPullRequest":true,"CreatedAt":"2019-04-02T18:44:46","Actor":"nugetlurker","Number":"3071","RawContent":null,"Title":"Insert NuGet Build 5.1.0-rtm.5921 into sdk","State":"open","Body":"Insert NuGet Build 5.1.0-rtm.5921 into sdk release/2.1.7xx branch","Url":"https://github.com/dotnet/sdk/pull/3071","RelatedDescription":"Open PR \"Insert NuGet Build 5.1.0-rtm.5921 into sdk\" (#3071)"},{"Id":"428383786","IsPullRequest":true,"CreatedAt":"2019-04-02T18:44:43","Actor":"nugetlurker","Number":"3070","RawContent":null,"Title":"Insert NuGet Build 5.1.0-rtm.5921 into sdk","State":"open","Body":"Insert NuGet Build 5.1.0-rtm.5921 into sdk release/2.2.3xx branch","Url":"https://github.com/dotnet/sdk/pull/3070","RelatedDescription":"Open PR \"Insert NuGet Build 5.1.0-rtm.5921 into sdk\" (#3070)"},{"Id":"427940639","IsPullRequest":false,"CreatedAt":"2019-04-01T22:32:28","Actor":"nkolev92","Number":"3069","RawContent":null,"Title":"ProduceContentAssets should not \"url decode\" paths provided by NuGet","State":"open","Body":"Create the following project and run `dotnet build`.\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net462</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ContentFilesExample\" Version=\"*\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nMake sure that nuget.org is among the sources. \r\n\r\n```\r\n dotnet build\r\nMicrosoft (R) Build Engine version 16.0.450+ga8dc7f1d34 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 530.45 ms for C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj.\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018: The \"ProduceContentAssets\" task failed unexpectedly. [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018: System.IO.DirectoryNotFoundException: Could not find a part of the path 'C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\globalPackagesFolder\\contentfilesexample\\1.0.2\\contentFiles\\cs\\portable-net45+wpa81+wp8+win8\\ExampleReader.cs.pp'. [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at System.IO.FileStream.ValidateFileHandle(SafeFileHandle fileHandle) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at System.IO.FileStream.CreateFileOpenHandle(FileMode mode, FileShare share, FileOptions options) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at System.IO.File.OpenRead(String path) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at Microsoft.NET.Build.Tasks.NugetContentAssetPreprocessor.Process(String originalAssetPath, String relativeOutputPath, String& pathToFinalAsset) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ProduceContentAssets.ProduceContentAsset(ITaskItem contentFile) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ProduceContentAssets.ExecuteCore() [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\n\r\nBuild FAILED.\r\n\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018: The \"ProduceContentAssets\" task failed unexpectedly. [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018: System.IO.DirectoryNotFoundException: Could not find a part of the path 'C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\globalPackagesFolder\\contentfilesexample\\1.0.2\\contentFiles\\cs\\portable-net45+wpa81+wp8+win8\\ExampleReader.cs.pp'. [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at System.IO.FileStream.ValidateFileHandle(SafeFileHandle fileHandle) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at System.IO.FileStream.CreateFileOpenHandle(FileMode mode, FileShare share, FileOptions options) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at System.IO.File.OpenRead(String path) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at Microsoft.NET.Build.Tasks.NugetContentAssetPreprocessor.Process(String originalAssetPath, String relativeOutputPath, String& pathToFinalAsset) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ProduceContentAssets.ProduceContentAsset(ITaskItem contentFile) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ProduceContentAssets.ExecuteCore() [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(350,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [C:\\Users\\nikolev.REDMOND\\Source\\Repos\\ContentFilesExampleTest\\ContentFilesExampleTest\\ContentFilesExampleTest.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:01.67\r\n```\r\n\r\nThe issue here is that the selected framework for the contentfiles is a PCL framework and `+` in the name, encoded as `%2B`. \r\n\r\nNuGet extracts the encoded name, and writes that to the assets file, g.props as needed.\r\n\r\nPaths that the targets read from NuGet should be treated as strings and not decoded in any way. \r\n","Url":"https://github.com/dotnet/sdk/issues/3069","RelatedDescription":"Open issue \"ProduceContentAssets should not \"url decode\" paths provided by NuGet\" (#3069)"},{"Id":"427938176","IsPullRequest":false,"CreatedAt":"2019-04-01T22:24:03","Actor":"nguerrera","Number":"3068","RawContent":null,"Title":"Support framework satellite assemblies in self-contained deployment","State":"open","Body":"The runtime packs for Microsoft.WindowsDesktop.App now have satellites assemblies. However, they are not used by self-contained build or publish.\r\n\r\nThey should be deployed exactly as satellites from a NuGet package. That is:\r\n\r\n1. If `$(SatelliteResourceLanguages)` is not specified, then all satellites are deployed.\r\n\r\n2. If `$(SatelliteResourceLanguages)` is specified, then only matching satellites are deployed.\r\n\r\ncc @dsplaisted @leecow @vivmishra\r\n\r\nThis is needed for .NET Core 3.0 Preview 5","Url":"https://github.com/dotnet/sdk/issues/3068","RelatedDescription":"Open issue \"Support framework satellite assemblies in self-contained deployment\" (#3068)"},{"Id":"426276905","IsPullRequest":true,"CreatedAt":"2019-04-01T21:59:02","Actor":"peterhuene","Number":"3058","RawContent":null,"Title":"Fix apphost creation when using a publish profile.","State":"closed","Body":"When publishing an ASP.NET project using a publish profile that sets\r\n`RuntimeIdentifier`, various apphost-related properties are calculated before\r\nthe RID is set when the publish profile is imported.\r\n\r\nThis typically results in the expected file names for the restored assets not\r\nhaving the correct prefixes and suffixes for the target RID.  For example, if a\r\nWindows RID is set in the publish profile, the expected apphost asset is named\r\n`apphost` instead of the correct `apphost.exe`. This causes the apphost\r\ncustomization to be skipped because the expected apphost asset wasn't found.\r\n\r\nThe fix is to delay setting these properties until after the publish profile\r\nhas been imported by the Web SDK.  This is accomplished by moving the\r\nproperties into a target that is invoked based on every place in the SDK\r\nwhere the properties are used.\r\n\r\nFixes dotnet/cli#10647.","Url":"https://github.com/dotnet/sdk/pull/3058","RelatedDescription":"Closed or merged PR \"Fix apphost creation when using a publish profile.\" (#3058)"},{"Id":"427813834","IsPullRequest":false,"CreatedAt":"2019-04-01T16:59:31","Actor":"jzabroski","Number":"3067","RawContent":null,"Title":"Implement CleanFull target","State":"open","Body":"In my .NET Core projects, I define a \"cleanfull\" target in all my .NET Core projects that does the following:\r\n\r\n* Runs MSBuild Clean target\r\n* Runs custom task to remove all nuget packages\r\n* Runs custom task to remove MSTest results directory\r\n* Runs custom task to remove bin and obj directories\r\n\r\nThe normal MSBuild Clean is a pain in the ass to deal with when upgrading .NET framework versions and making sure metapackages resolve consistently between development environment and build server.\r\n\r\nThe only alternative way to solve this problem cleanly is to run your entire build pipeline, from local dev environment to build server, through a isolated process via docker container or similar.","Url":"https://github.com/dotnet/sdk/issues/3067","RelatedDescription":"Open issue \"Implement CleanFull target\" (#3067)"},{"Id":"427491342","IsPullRequest":false,"CreatedAt":"2019-04-01T03:08:33","Actor":"hrumhurum","Number":"3066","RawContent":null,"Title":"Intermittent file access errors to \"obj\\Release\\net45\\xxx.AssemblyInfo.cs\" file","State":"open","Body":"From time to time we get the following error on build agents:\r\n\r\nC:\\Program Files\\dotnet\\sdk\\2.1.505\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.GenerateAssemblyInfo.targets(134,5): error MSB3713: The file \"obj\\Release\\net45\\xxx.AssemblyInfo.cs\" could not be created. The process cannot access the file '...\\obj\\Release\\net45\\xxx.AssemblyInfo.cs' because it is being used by another process.\r\n\r\nSometimes it occurs on developer machines as well.\r\n\r\nThe classic MSBuild targets solved problems like that by waiting for access during 10 seconds or so. It would be nice to see a fix for that in .NET SDK as well.","Url":"https://github.com/dotnet/sdk/issues/3066","RelatedDescription":"Open issue \"Intermittent file access errors to \"obj\\Release\\net45\\xxx.AssemblyInfo.cs\" file\" (#3066)"},{"Id":"427411907","IsPullRequest":false,"CreatedAt":"2019-03-31T15:57:19","Actor":"barthamark","Number":"3065","RawContent":null,"Title":"Files generated before build (e.g. by NPM or Gulp) into the wwwroot folder might not be accessible","State":"open","Body":"I have a BeforeTargets=\"BeforeBuild\" script defined in my csproj file that executes a Gulp task which generates a bunch of js files taking more than 4 seconds to finish. These files are not accessible by the web application only after rebuilding the solution. However, if the script finishes quickly (couple milliseconds) then it will be fine after the first build.\r\n\r\n```\r\n<Target Name=\"NpmInstall\" BeforeTargets=\"BeforeBuild\">\r\n  <Exec Command=\"npm install\" />\r\n  <Exec Command=\"gulp\" />\r\n</Target>\r\n```\r\n\r\nThis might be a duplicate by one of the following issues, however, none of the workarounds fixed this scenario where the goal is to access these files locally on my development environment and not after publishing the website.\r\n\r\nhttps://github.com/aspnet/websdk/issues/114\r\nhttps://github.com/dotnet/sdk/issues/1044","Url":"https://github.com/dotnet/sdk/issues/3065","RelatedDescription":"Open issue \"Files generated before build (e.g. by NPM or Gulp) into the wwwroot folder might not be accessible\" (#3065)"},{"Id":"427293027","IsPullRequest":true,"CreatedAt":"2019-03-30T15:20:59","Actor":"kouvel","Number":"3064","RawContent":null,"Title":"[WIP] Change option that enables/disables tier 0 JIT and expose another related option","State":"open","Body":"Depends on https://github.com/dotnet/coreclr/pull/23597\r\n\r\n- Tier 0 JIT is being referred to as quick JIT. Renamed option that was added by https://github.com/dotnet/sdk/pull/2925 to StartupTierQuickJit, which indicates whether tiered compilation may use quick JIT in its startup tier. Default will be false.\r\n- Added option QuickJitForLoops that configures whether quick JIT may be used for methods that contain loops. Default will be false, so `<StartupTierQuickJit>true</StartupTierQuickJit>` would still not use quick JIT for methods that contain loops by default.","Url":"https://github.com/dotnet/sdk/pull/3064","RelatedDescription":"Open PR \"[WIP] Change option that enables/disables tier 0 JIT and expose another related option\" (#3064)"},{"Id":"427275532","IsPullRequest":true,"CreatedAt":"2019-03-30T13:39:16","Actor":"dotnet-maestro[bot]","Number":"3063","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190329.2\r\n- **Date Produced**: 3/29/2019 1:07 PM\r\n- **Commit**: 31abd61b43b115a6af83c92ce35ed4e8efd01dfd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19179.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19179.2\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3063","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3063)"},{"Id":"427160016","IsPullRequest":true,"CreatedAt":"2019-03-29T20:12:02","Actor":"livarcocc","Number":"3062","RawContent":null,"Title":"Switching to Jobs from Phases for YAML and also switch to new pools.","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3062","RelatedDescription":"Open PR \"Switching to Jobs from Phases for YAML and also switch to new pools.\" (#3062)"},{"Id":"426954314","IsPullRequest":true,"CreatedAt":"2019-03-29T13:34:35","Actor":"dotnet-maestro[bot]","Number":"3061","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190329.1\r\n- **Date Produced**: 3/29/2019 10:57 AM\r\n- **Commit**: ef139c7533e2e33c5e0946b80cb1aa95d84da868\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19179.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19179.1\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3061","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3061)"},{"Id":"426251339","IsPullRequest":true,"CreatedAt":"2019-03-29T01:41:17","Actor":"wli3","Number":"3057","RawContent":null,"Title":"Cap project tools to netcoreapp2.2 and block creating new package","State":"closed","Body":"2 work are separate commits","Url":"https://github.com/dotnet/sdk/pull/3057","RelatedDescription":"Closed or merged PR \"Cap project tools to netcoreapp2.2 and block creating new package\" (#3057)"},{"Id":"426647712","IsPullRequest":true,"CreatedAt":"2019-03-28T21:51:11","Actor":"wli3","Number":"3060","RawContent":null,"Title":"WIP test ci","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3060","RelatedDescription":"Closed or merged PR \"WIP test ci\" (#3060)"},{"Id":"426391209","IsPullRequest":false,"CreatedAt":"2019-03-28T16:44:48","Actor":"SravanthiDondapati","Number":"3059","RawContent":null,"Title":"NETSDK1064: Package Microsoft.VisualStudio.Web.CodeGeneration, version 2.1.1 was not found","State":"closed","Body":"Hi There,\r\n\r\nI am trying to configure Jenkins for my .Net Core Web API. We are using VS 2017 to build our code. So, when I try to build the project using command line **\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\MSBuild.exe\" /target:Clean,Build /property:Configuration=Release,VisualStudioVersion=15.0 \"projectName.sln\"** I get the below error: **NETSDK1064: Package Microsoft.VisualStudio.Web.CodeGeneration, version 2.1.1 was not found. It might have been deleted since NuGet restore. Otherwise, NuGet restore might have only partially completed, which might have been due to maximum path length restrictions.**\r\nCan anyone help me in resolving the issue.","Url":"https://github.com/dotnet/sdk/issues/3059","RelatedDescription":"Closed issue \"NETSDK1064: Package Microsoft.VisualStudio.Web.CodeGeneration, version 2.1.1 was not found\" (#3059)"},{"Id":"425920757","IsPullRequest":true,"CreatedAt":"2019-03-28T13:39:55","Actor":"dotnet-maestro[bot]","Number":"3053","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190326.14\r\n- **Date Produced**: 3/27/2019 12:08 AM\r\n- **Commit**: e23a3e2fd09a6222361ce47b78d23ab42867924c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19176.14\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19176.14\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190327.11\r\n- **Date Produced**: 3/28/2019 1:58 AM\r\n- **Commit**: 69f276904fdd6d8f81404b857f295537894b81d3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19177.11\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19177.11\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3053","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3053)"},{"Id":"426231130","IsPullRequest":true,"CreatedAt":"2019-03-28T03:16:03","Actor":"wli3","Number":"3056","RawContent":null,"Title":"Cap project tools restore to netcoreapp2.2","State":"closed","Body":"Max project tools TFM will be netcoreapp2.2","Url":"https://github.com/dotnet/sdk/pull/3056","RelatedDescription":"Closed or merged PR \"Cap project tools restore to netcoreapp2.2\" (#3056)"},{"Id":"426221425","IsPullRequest":false,"CreatedAt":"2019-03-27T23:06:03","Actor":"aeos","Number":"3055","RawContent":null,"Title":"PackageDependencyResolution.targets error only occurring on Ubuntu 18.04.2 LTS","State":"open","Body":"We have a series of build scripts run through gulp which work flawlessly on windows, and inside a linux docker container. However, when run on a Ubuntu 18.04.2 LTS laptop, we get the following errors for various packages. If I build pack and push the project by itself the issue goes away. But if I build all of the projects through gulp the package won't build and failes with the following error:\r\n\r\n/usr/share/dotnet/sdk/2.2.105/Sdks/Microsoft.NET.Sdk/targets/Microsoft.PackageDependencyResolution.targets(208,5): error MSB4018: The \"ResolvePackageAssets\" task failed unexpectedly. [/home/carlos/workspace/stream-forms-backend/Common/Services/Services.csproj]\r\n/usr/share/dotnet/sdk/2.2.105/Sdks/Microsoft.NET.Sdk/targets/Microsoft.PackageDependencyResolution.targets(208,5): error MSB4018: System.IO.EndOfStreamException: Unable to read beyond the end of the stream. [/home/carlos/workspace/stream-forms-backend/Common/Services/Services.csproj]\r\n/usr/share/dotnet/sdk/2.2.105/Sdks/Microsoft.NET.Sdk/targets/Microsoft.PackageDependencyResolution.targets(208,5): error MSB4018:    at System.IO.BinaryReader.FillBuffer(Int32 numBytes) [/home/carlos/workspace/stream-forms-backend/Common/Services/Services.csproj]\r\n/usr/share/dotnet/sdk/2.2.105/Sdks/Microsoft.NET.Sdk/targets/Microsoft.PackageDependencyResolution.targets(208,5): error MSB4018:    at System.IO.BinaryReader.ReadInt32() [/home/carlos/workspace/stream-forms-backend/Common/Services/Services.csproj]\r\n/usr/share/dotnet/sdk/2.2.105/Sdks/Microsoft.NET.Sdk/targets/Microsoft.PackageDependencyResolution.targets(208,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader.ReadItem() [/home/carlos/workspace/stream-forms-backend/Common/Services/Services.csproj]\r\n/usr/share/dotnet/sdk/2.2.105/Sdks/Microsoft.NET.Sdk/targets/Microsoft.PackageDependencyResolution.targets(208,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader.ReadItemGroup() [/home/carlos/workspace/stream-forms-backend/Common/Services/Services.csproj]\r\n/usr/share/dotnet/sdk/2.2.105/Sdks/Microsoft.NET.Sdk/targets/Microsoft.PackageDependencyResolution.targets(208,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ReadItemGroups() [/home/carlos/workspace/stream-forms-backend/Common/Services/Services.csproj]\r\n/usr/share/dotnet/sdk/2.2.105/Sdks/Microsoft.NET.Sdk/targets/Microsoft.PackageDependencyResolution.targets(208,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ExecuteCore() [/home/carlos/workspace/stream-forms-backend/Common/Services/Services.csproj]\r\n/usr/share/dotnet/sdk/2.2.105/Sdks/Microsoft.NET.Sdk/targets/Microsoft.PackageDependencyResolution.targets(208,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() [/home/carlos/workspace/stream-forms-backend/Common/Services/Services.csproj]\r\n/usr/share/dotnet/sdk/2.2.105/Sdks/Microsoft.NET.Sdk/targets/Microsoft.PackageDependencyResolution.targets(208,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [/home/carlos/workspace/stream-forms-backend/Common/Services/Services.csproj]\r\n/usr/share/dotnet/sdk/2.2.105/Sdks/Microsoft.NET.Sdk/targets/Microsoft.PackageDependencyResolution.targets(208,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [/home/carlos/workspace/stream-forms-backend/Common/Services/Services.csproj]","Url":"https://github.com/dotnet/sdk/issues/3055","RelatedDescription":"Open issue \"PackageDependencyResolution.targets error only occurring on Ubuntu 18.04.2 LTS\" (#3055)"},{"Id":"426012337","IsPullRequest":true,"CreatedAt":"2019-03-27T23:01:02","Actor":"johnbeisner","Number":"3054","RawContent":null,"Title":"Moving performance tests under CI to Azure DevOps","State":"closed","Body":"Moving performance tests under CI to Azure DevOps \r\n\r\n**.vsts-ci.yml**\r\nAdding \"Windows_Performance Build_Release\" and \"Linux_Performance Build_Release\" CI legs.\r\n\r\n**eng/build.yml**\r\nDo only 4 performance test iterations for CI\r\n\r\n\r\n@DrewScoggins\r\n@adiaaida\r\n\r\n_**Next Steps:**_\r\nCreate a daily trigger with BenchView upload\r\nCreate a commit trigger with BenchView upload\r\nMove dotnet/sdk:master from phases to jobs","Url":"https://github.com/dotnet/sdk/pull/3054","RelatedDescription":"Closed or merged PR \"Moving performance tests under CI to Azure DevOps\" (#3054)"},{"Id":"425690398","IsPullRequest":true,"CreatedAt":"2019-03-27T18:38:11","Actor":"johnbeisner","Number":"3047","RawContent":null,"Title":"[WIP] First draft: performance tests' move to Azure DevOps","State":"closed","Body":"First draft: performance tests' move to Azure DevOps","Url":"https://github.com/dotnet/sdk/pull/3047","RelatedDescription":"Closed or merged PR \"[WIP] First draft: performance tests' move to Azure DevOps\" (#3047)"},{"Id":"425744746","IsPullRequest":true,"CreatedAt":"2019-03-27T17:56:28","Actor":"peterhuene","Number":"3051","RawContent":null,"Title":"Fix publish conflict resolution for runtime pack assets.","State":"closed","Body":"This commit fixes a bug in the conflict resolution for runtime pack assets that\r\nwas caused by a recent fix to filter out duplicates items in the set of\r\npublish assets introduced by adding the runtime pack assets twice. The\r\nregression was that the adding of the runtime pack assets to the publish assets\r\nwas done *after* the conflict resolution occurred; thus, conflicts weren't\r\ndetected properly for assets that should conflict with runtime pack assets.\r\n\r\nThe fix is to always add the runtime pack assets to the list of publish assets\r\nbefore conflict resolution occurs.  To prevent the duplicate add of the items,\r\nwe now filter out the runtime pack assets when adding the\r\n`ReferenceCopyLocalPaths` items to the publish assets.\r\n\r\nFixes #3035.","Url":"https://github.com/dotnet/sdk/pull/3051","RelatedDescription":"Closed or merged PR \"Fix publish conflict resolution for runtime pack assets.\" (#3051)"},{"Id":"425388030","IsPullRequest":false,"CreatedAt":"2019-03-27T12:42:36","Actor":"vitek-karas","Number":"3043","RawContent":null,"Title":"dotnet build doesn't write runtime properties to .runtimeconfig.json on .NET 2.1","State":"closed","Body":"Using .NET Core 2.1\r\n\r\n```\r\nmkdir repro\r\ncd repro\r\ndotnet new console\r\n```\r\n\r\nEdit `repro.csproj` to add `ServerGarbageCollection` property:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n    <ServerGarbageCollection>true</ServerGarbageCollection>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\n```\r\ndotnet build\r\n```\r\n\r\nOpen the `repro.runtimeconfig.json`:\r\n```json\r\n{\r\n  \"runtimeOptions\": {\r\n    \"tfm\": \"netcoreapp2.1\",\r\n    \"framework\": {\r\n      \"name\": \"Microsoft.NETCore.App\",\r\n      \"version\": \"2.1.0\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nIt should have the `System.GC.Server` property:\r\n```json\r\n    \"configProperties\": {\r\n      \"System.GC.Server\": true\r\n    }\r\n```\r\n\r\nRunning:\r\n```\r\ndotnet publish\r\n```\r\n\r\nWill produce the correct `.runtimeconfig.json` into the publish folder.","Url":"https://github.com/dotnet/sdk/issues/3043","RelatedDescription":"Closed issue \"dotnet build doesn't write runtime properties to .runtimeconfig.json on .NET 2.1\" (#3043)"},{"Id":"425746353","IsPullRequest":false,"CreatedAt":"2019-03-27T03:33:35","Actor":"chabiss","Number":"3052","RawContent":null,"Title":"System.Runtime.dll missing as a reference assemblies as of 3.0.0-preview4-27521-03","State":"closed","Body":"System.Runtime.dll is missting once as a reference DLL when opened in Visual Studio  This breaks the XAML designer and block his release for Preview 2","Url":"https://github.com/dotnet/sdk/issues/3052","RelatedDescription":"Closed issue \"System.Runtime.dll missing as a reference assemblies as of 3.0.0-preview4-27521-03\" (#3052)"},{"Id":"425715472","IsPullRequest":false,"CreatedAt":"2019-03-27T01:31:21","Actor":"zcr1","Number":"3050","RawContent":null,"Title":"Segmentation Fault on Mac High Sierra 10.14.3","State":"closed","Body":"I am experiencing fairly regular Segmentation Fault and System.BadImageFormatException: 'Bad IL format.' issues on Mac High Sierra. I do not have any reproducible code unfortunately but only happens in Lidgren (udp library), perhaps networking related?\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.105\r\n Commit:    7cecb35b92\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.2.105/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.3\r\n  Commit:  6b8ad509b6\r\n\r\n.NET Core SDKs installed:\r\n  2.1.302 [/usr/local/share/dotnet/sdk]\r\n  2.1.500 [/usr/local/share/dotnet/sdk]\r\n  2.2.105 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\n```\r\n\r\n\r\n```\r\nProcess:               dotnet [6391]\r\nPath:                  /usr/local/share/dotnet/dotnet\r\nIdentifier:            dotnet\r\nVersion:               0\r\nCode Type:             X86-64 (Native)\r\nParent Process:        dotnet [6384]\r\nResponsible:           dotnet [6391]\r\nUser ID:               501\r\n\r\nDate/Time:             2019-03-26 17:57:16.378 -0700\r\nOS Version:            Mac OS X 10.14.3 (18D109)\r\nReport Version:        12\r\nBridge OS Version:     3.3 (16P3133)\r\nAnonymous UUID:        CC532C6D-657D-DA06-31EF-F3990208CE3E\r\n\r\nSleep/Wake UUID:       5E805E3C-43F4-476A-8E09-2904247090FB\r\n\r\nTime Awake Since Boot: 23000 seconds\r\nTime Since Wake:       3500 seconds\r\n\r\nSystem Integrity Protection: enabled\r\n\r\nCrashed Thread:        0  Dispatch queue: com.apple.main-thread\r\n\r\nException Type:        EXC_BAD_ACCESS (SIGSEGV)\r\nException Codes:       KERN_INVALID_ADDRESS at 0x0000000000000000\r\nException Note:        EXC_CORPSE_NOTIFY\r\n\r\nTermination Signal:    Segmentation fault: 11\r\nTermination Reason:    Namespace SIGNAL, Code 0xb\r\nTerminating Process:   exc handler [6391]\r\n\r\nVM Regions Near 0:\r\n--> \r\n    __TEXT                 000000010909f000-00000001090c2000 [  140K] r-x/rwx SM=COW  /usr/local/share/dotnet/dotnet\r\n\r\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\r\n0   libcoreclr.dylib              \t0x000000010958d3b3 SignatureNative::GetSignature(SignatureNative*, unsigned char const*, unsigned int, FieldDesc*, ReflectMethodObject*, ReflectClassBaseObject*) + 627\r\n1   ???                           \t0x000000010fde3883 0 + 4561188995\r\n2   ???                           \t0x000000010fde4274 0 + 4561191540\r\n3   ???                           \t0x000000010fd91008 0 + 4560850952\r\n4   ???                           \t0x000000010fd73ec5 0 + 4560731845\r\n5   ???                           \t0x000000010fd741b9 0 + 4560732601\r\n6   libcoreclr.dylib              \t0x0000000109658747 CallDescrWorkerInternal + 124\r\n7   libcoreclr.dylib              \t0x00000001094c4f0d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n8   libcoreclr.dylib              \t0x00000001093f81cc GetExceptionMessage(Object*) + 332\r\n9   libcoreclr.dylib              \t0x00000001093fe4d8 DefaultCatchHandlerExceptionMessageWorker(Thread*, Object*, char16_t*, int, int) + 472\r\n10  libcoreclr.dylib              \t0x00000001093feae5 DefaultCatchHandler(_EXCEPTION_POINTERS*, Object**, int, int, int, int, int) + 885\r\n11  libcoreclr.dylib              \t0x00000001093fe17a InternalUnhandledExceptionFilter_Worker(_EXCEPTION_POINTERS*) + 1034\r\n12  libcoreclr.dylib              \t0x00000001095d165f UnwindManagedExceptionPass1(PAL_SEHException&, _CONTEXT*) + 719\r\n13  libcoreclr.dylib              \t0x00000001095d1810 DispatchManagedException(PAL_SEHException&, bool) + 304\r\n14  libcoreclr.dylib              \t0x0000000109583216 ReflectionEnum::GetEnumValuesAndNames(void*, QCall::ObjectHandleOnStack, QCall::ObjectHandleOnStack, int) + 2150\r\n15  ???                           \t0x000000010fefb795 0 + 4562335637\r\n16  ???                           \t0x000000010fdec4e2 0 + 4561224930\r\n17  ???                           \t0x000000010fdecccc 0 + 4561226956\r\n18  ???                           \t0x000000010fdee466 0 + 4561232998\r\n19  ???                           \t0x000000010ff9209d 0 + 4562952349\r\n20  ???                           \t0x00000001119b46d0 0 + 4590356176\r\n21  ???                           \t0x00000001119a7246 0 + 4590301766\r\n22  ???                           \t0x00000001116ce861 0 + 4587317345\r\n23  ???                           \t0x00000001116c36f7 0 + 4587271927\r\n24  ???                           \t0x00000001116bae9e 0 + 4587237022\r\n25  ???                           \t0x00000001116c360b 0 + 4587271691\r\n26  ???                           \t0x00000001116b9d24 0 + 4587232548\r\n27  ???                           \t0x00000001116b9bf1 0 + 4587232241\r\n28  ???                           \t0x00000001116ba669 0 + 4587234921\r\n29  ???                           \t0x00000001116ba32d 0 + 4587234093\r\n30  ???                           \t0x000000011038ef37 0 + 4567134007\r\n31  ???                           \t0x0000000110381915 0 + 4567079189\r\n32  ???                           \t0x0000000110381756 0 + 4567078742\r\n33  libcoreclr.dylib              \t0x0000000109658747 CallDescrWorkerInternal + 124\r\n34  libcoreclr.dylib              \t0x00000001094c4f0d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n35  libcoreclr.dylib              \t0x000000010939b0ea RunMain(MethodDesc*, short, int*, PtrArray**) + 682\r\n36  libcoreclr.dylib              \t0x000000010939b35f Assembly::ExecuteMainMethod(PtrArray**, int) + 223\r\n37  libcoreclr.dylib              \t0x00000001093daff4 CorHost2::ExecuteAssembly(unsigned int, char16_t const*, int, char16_t const**, unsigned int*) + 436\r\n38  libcoreclr.dylib              \t0x000000010930f9c6 coreclr_execute_assembly + 230\r\n39  libhostpolicy.dylib           \t0x000000010925a3d8 0x1091d1000 + 562136\r\n40  libhostpolicy.dylib           \t0x0000000109243813 0x1091d1000 + 469011\r\n41  libhostpolicy.dylib           \t0x000000010924a099 0x1091d1000 + 495769\r\n42  libhostfxr.dylib              \t0x000000010916c8a3 0x1090e2000 + 567459\r\n43  libhostfxr.dylib              \t0x000000010918c5ee 0x1090e2000 + 697838\r\n44  libhostfxr.dylib              \t0x000000010918f1c2 0x1090e2000 + 709058\r\n45  libhostfxr.dylib              \t0x000000010918d678 0x1090e2000 + 702072\r\n46  libhostfxr.dylib              \t0x000000010916d919 0x1090e2000 + 571673\r\n47  dotnet                        \t0x00000001090ac052 0x10909f000 + 53330\r\n48  dotnet                        \t0x00000001090ac645 0x10909f000 + 54853\r\n49  libdyld.dylib                 \t0x00007fff58cb3ed9 start + 1\r\n\r\nThread 1:\r\n0   libsystem_kernel.dylib        \t0x00007fff58ded17a mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff58ded6d0 mach_msg + 60\r\n2   libcoreclr.dylib              \t0x000000010930c2b8 MachMessage::Receive(unsigned int) + 72\r\n3   libcoreclr.dylib              \t0x000000010930b20e SEHExceptionThread(void*) + 94\r\n4   libsystem_pthread.dylib       \t0x00007fff58ea7305 _pthread_body + 126\r\n5   libsystem_pthread.dylib       \t0x00007fff58eaa26f _pthread_start + 70\r\n6   libsystem_pthread.dylib       \t0x00007fff58ea6415 thread_start + 13\r\n\r\nThread 2:\r\n0   libsystem_kernel.dylib        \t0x00007fff58df3716 kevent + 10\r\n1   libcoreclr.dylib              \t0x0000000109300b20 CorUnix::CPalSynchronizationManager::ReadBytesFromProcessPipe(int, unsigned char*, int) + 560\r\n2   libcoreclr.dylib              \t0x00000001093000f3 CorUnix::CPalSynchronizationManager::WorkerThread(void*) + 131\r\n3   libcoreclr.dylib              \t0x0000000109308c08 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n4   libsystem_pthread.dylib       \t0x00007fff58ea7305 _pthread_body + 126\r\n5   libsystem_pthread.dylib       \t0x00007fff58eaa26f _pthread_start + 70\r\n6   libsystem_pthread.dylib       \t0x00007fff58ea6415 thread_start + 13\r\n\r\nThread 3:\r\n0   libsystem_kernel.dylib        \t0x00007fff58dee152 __open + 10\r\n1   libcoreclr.dylib              \t0x0000000109379a9f TwoWayPipe::WaitForConnection() + 31\r\n2   libcoreclr.dylib              \t0x000000010937151f DbgTransportSession::TransportWorker() + 159\r\n3   libcoreclr.dylib              \t0x000000010936fe79 DbgTransportSession::TransportWorkerStatic(void*) + 9\r\n4   libcoreclr.dylib              \t0x0000000109308c08 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n5   libsystem_pthread.dylib       \t0x00007fff58ea7305 _pthread_body + 126\r\n6   libsystem_pthread.dylib       \t0x00007fff58eaa26f _pthread_start + 70\r\n7   libsystem_pthread.dylib       \t0x00007fff58ea6415 thread_start + 13\r\n\r\nThread 4:\r\n0   libsystem_kernel.dylib        \t0x00007fff58df07de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff58eaa593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x00000001092fe5e2 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x00000001092fe1f7 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x0000000109302b73 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x0000000109302e02 WaitForMultipleObjectsEx + 82\r\n6   libcoreclr.dylib              \t0x000000010936e328 DebuggerRCThread::MainLoop() + 264\r\n7   libcoreclr.dylib              \t0x000000010936e1bb DebuggerRCThread::ThreadProc() + 251\r\n8   libcoreclr.dylib              \t0x000000010936dec4 DebuggerRCThread::ThreadProcStatic(void*) + 132\r\n9   libcoreclr.dylib              \t0x0000000109308c08 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff58ea7305 _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff58eaa26f _pthread_start + 70\r\n12  libsystem_pthread.dylib       \t0x00007fff58ea6415 thread_start + 13\r\n\r\nThread 5:\r\n0   libsystem_kernel.dylib        \t0x00007fff58df07de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff58eaa593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x00000001092fe5e2 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x00000001092fe1f7 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x0000000109302b73 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x0000000109302e02 WaitForMultipleObjectsEx + 82\r\n6   libcoreclr.dylib              \t0x000000010950cf2e FinalizerThread::WaitForFinalizerEvent(CLREvent*) + 158\r\n7   libcoreclr.dylib              \t0x000000010950d023 FinalizerThread::FinalizerThreadWorker(void*) + 115\r\n8   libcoreclr.dylib              \t0x00000001094893d1 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n9   libcoreclr.dylib              \t0x00000001094899f9 ManagedThreadBase::FinalizerBase(void (*)(void*)) + 73\r\n10  libcoreclr.dylib              \t0x000000010950d33c FinalizerThread::FinalizerThreadStart(void*) + 204\r\n11  libcoreclr.dylib              \t0x0000000109308c08 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n12  libsystem_pthread.dylib       \t0x00007fff58ea7305 _pthread_body + 126\r\n13  libsystem_pthread.dylib       \t0x00007fff58eaa26f _pthread_start + 70\r\n14  libsystem_pthread.dylib       \t0x00007fff58ea6415 thread_start + 13\r\n\r\nThread 6:\r\n0   libsystem_kernel.dylib        \t0x00007fff58ded17a mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff58ded6d0 mach_msg + 60\r\n2   libclrjit.dylib               \t0x000000010a06dea8 MachMessage::Receive(unsigned int) + 72\r\n3   libclrjit.dylib               \t0x000000010a06cdfe SEHExceptionThread(void*) + 94\r\n4   libsystem_pthread.dylib       \t0x00007fff58ea7305 _pthread_body + 126\r\n5   libsystem_pthread.dylib       \t0x00007fff58eaa26f _pthread_start + 70\r\n6   libsystem_pthread.dylib       \t0x00007fff58ea6415 thread_start + 13\r\n\r\nThread 7:: com.apple.audio.IOThread.client\r\n0   libsystem_kernel.dylib        \t0x00007fff58ded17a mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff58ded6d0 mach_msg + 60\r\n2   com.apple.audio.CoreAudio     \t0x00007fff2b4b689a HALB_MachPort::SendMessageWithReply(unsigned int, unsigned int, unsigned int, unsigned int, mach_msg_header_t*, bool, unsigned int) + 124\r\n3   com.apple.audio.CoreAudio     \t0x00007fff2b4b680d HALB_MachPort::SendSimpleMessageWithSimpleReply(unsigned int, unsigned int, int, int&, bool, unsigned int) + 45\r\n4   com.apple.audio.CoreAudio     \t0x00007fff2b4b2b84 HALC_ProxyIOContext::IOWorkLoop() + 988\r\n5   com.apple.audio.CoreAudio     \t0x00007fff2b4b25ee HALC_ProxyIOContext::IOThreadEntry(void*) + 128\r\n6   com.apple.audio.CoreAudio     \t0x00007fff2b4b20d6 HALB_IOThread::Entry(void*) + 72\r\n7   libsystem_pthread.dylib       \t0x00007fff58ea7305 _pthread_body + 126\r\n8   libsystem_pthread.dylib       \t0x00007fff58eaa26f _pthread_start + 70\r\n9   libsystem_pthread.dylib       \t0x00007fff58ea6415 thread_start + 13\r\n\r\nThread 8:\r\n0   libsystem_kernel.dylib        \t0x00007fff58df07de __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff58eaa593 _pthread_cond_wait + 724\r\n2   libcoreclr.dylib              \t0x00000001092fe5a5 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x00000001092fe1f7 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x00000001093031fd SleepEx + 141\r\n5   libcoreclr.dylib              \t0x0000000109485617 Thread::UserSleep(int) + 263\r\n6   libcoreclr.dylib              \t0x00000001094db0af ThreadNative::Sleep(int) + 191\r\n7   ???                           \t0x000000011038d076 0 + 4567126134\r\n8   ???                           \t0x00000001107550d0 0 + 4571091152\r\n9   libcoreclr.dylib              \t0x0000000109658747 CallDescrWorkerInternal + 124\r\n10  libcoreclr.dylib              \t0x00000001094c4f0d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n11  libcoreclr.dylib              \t0x00000001094d8af9 ThreadNative::KickOffThread_Worker(void*) + 393\r\n12  libcoreclr.dylib              \t0x00000001094893d1 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n13  libcoreclr.dylib              \t0x0000000109489963 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n14  libcoreclr.dylib              \t0x00000001094d8d01 ThreadNative::KickOffThread(void*) + 289\r\n15  libcoreclr.dylib              \t0x0000000109308c08 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n16  libsystem_pthread.dylib       \t0x00007fff58ea7305 _pthread_body + 126\r\n17  libsystem_pthread.dylib       \t0x00007fff58eaa26f _pthread_start + 70\r\n18  libsystem_pthread.dylib       \t0x00007fff58ea6415 thread_start + 13\r\n\r\nThread 9:: com.apple.NSEventThread\r\n0   libsystem_kernel.dylib        \t0x00007fff58ded17a mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff58ded6d0 mach_msg + 60\r\n2   com.apple.CoreFoundation      \t0x00007fff2ba66fde __CFRunLoopServiceMachPort + 337\r\n3   com.apple.CoreFoundation      \t0x00007fff2ba6652d __CFRunLoopRun + 1654\r\n4   com.apple.CoreFoundation      \t0x00007fff2ba65c64 CFRunLoopRunSpecific + 463\r\n5   com.apple.AppKit              \t0x00007fff28fbff89 _NSEventThread + 160\r\n6   libsystem_pthread.dylib       \t0x00007fff58ea7305 _pthread_body + 126\r\n7   libsystem_pthread.dylib       \t0x00007fff58eaa26f _pthread_start + 70\r\n8   libsystem_pthread.dylib       \t0x00007fff58ea6415 thread_start + 13\r\n\r\nThread 10:\r\n0   libsystem_kernel.dylib        \t0x00007fff58df52ee poll + 10\r\n1   System.Native.dylib           \t0x000000010bc1798e SystemNative_Poll + 382\r\n2   ???                           \t0x00000001116b93ac 0 + 4587230124\r\n3   ???                           \t0x000000011178a778 0 + 4588087160\r\n4   ???                           \t0x00000001117baebc 0 + 4588285628\r\n5   ???                           \t0x0000000111797f97 0 + 4588142487\r\n6   ???                           \t0x00000001116b80e8 0 + 4587225320\r\n7   ???                           \t0x00000001116b7728 0 + 4587222824\r\n8   ???                           \t0x00000001107550d0 0 + 4571091152\r\n9   libcoreclr.dylib              \t0x0000000109658747 CallDescrWorkerInternal + 124\r\n10  libcoreclr.dylib              \t0x00000001094c4f0d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n11  libcoreclr.dylib              \t0x00000001094d8af9 ThreadNative::KickOffThread_Worker(void*) + 393\r\n12  libcoreclr.dylib              \t0x00000001094893d1 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n13  libcoreclr.dylib              \t0x0000000109489963 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n14  libcoreclr.dylib              \t0x00000001094d8d01 ThreadNative::KickOffThread(void*) + 289\r\n15  libcoreclr.dylib              \t0x0000000109308c08 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n16  libsystem_pthread.dylib       \t0x00007fff58ea7305 _pthread_body + 126\r\n17  libsystem_pthread.dylib       \t0x00007fff58eaa26f _pthread_start + 70\r\n18  libsystem_pthread.dylib       \t0x00007fff58ea6415 thread_start + 13\r\n\r\nThread 11:\r\n0   libsystem_pthread.dylib       \t0x00007fff58ea63f8 start_wqthread + 0\r\n1   ???                           \t0x0000000054485244 0 + 1414025796\r\n\r\nThread 12:\r\n0   libsystem_pthread.dylib       \t0x00007fff58ea63f8 start_wqthread + 0\r\n1   ???                           \t0x0000000054485244 0 + 1414025796\r\n\r\nThread 13:\r\n0   libsystem_kernel.dylib        \t0x00007fff58ded1ce semaphore_timedwait_trap + 10\r\n1   libdispatch.dylib             \t0x00007fff58c6642c _dispatch_sema4_timedwait + 76\r\n2   libdispatch.dylib             \t0x00007fff58c66b1d _dispatch_semaphore_wait_slow + 58\r\n3   libdispatch.dylib             \t0x00007fff58c73b66 _dispatch_worker_thread + 328\r\n4   libsystem_pthread.dylib       \t0x00007fff58ea7305 _pthread_body + 126\r\n5   libsystem_pthread.dylib       \t0x00007fff58eaa26f _pthread_start + 70\r\n6   libsystem_pthread.dylib       \t0x00007fff58ea6415 thread_start + 13\r\n\r\nThread 0 crashed with X86 Thread State (64-bit):\r\n  rax: 0x0000000000000000  rbx: 0x0000000110a21118  rcx: 0x000000000031284e  rdx: 0x0000000000000000\r\n  rdi: 0x0000000189427158  rsi: 0x0000000189422e50  rbp: 0x00007ffee6b56510  rsp: 0x00007ffee6b56290\r\n   r8: 0x0000000189422f68   r9: 0x0000000189422e50  r10: 0x0000000000002000  r11: 0x0000000189427180\r\n  r12: 0x00007ffee6b56448  r13: 0x00007ffee6b562b0  r14: 0x000000010f7143c8  r15: 0x00007ffee6b56400\r\n  rip: 0x000000010958d3b3  rfl: 0x0000000000010246  cr2: 0x0000000000000000\r\n  \r\nLogical CPU:     6\r\nError Code:      0x00000004\r\nTrap Number:     14\r\n\r\n\r\nBinary Images:\r\n       0x10909f000 -        0x1090c1ff7 +dotnet (0) <EC08A28E-D343-361D-BA43-97C8616BBE3B> /usr/local/share/dotnet/dotnet\r\n       0x1090e2000 -        0x1091c8fff +libhostfxr.dylib (0) <9421119C-940C-3E46-B924-583295CD62B9> /usr/local/share/dotnet/host/fxr/2.2.3/libhostfxr.dylib\r\n       0x1091d1000 -        0x1092baff7 +libhostpolicy.dylib (0) <3AE4991B-D5CA-3E7B-8FF3-4C0AE84DA570> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.1.6/libhostpolicy.dylib\r\n       0x1092c4000 -        0x109807ff7 +libcoreclr.dylib (0) <2E06DAFA-5532-3EA5-97B0-C65E5872FEBD> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.1.6/libcoreclr.dylib\r\n       0x109ea7000 -        0x10a0b5fff +libclrjit.dylib (0) <4D18CF34-0BC3-3163-A19C-152CE4E00DC1> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.1.6/libclrjit.dylib\r\n       0x10a159000 -        0x10a164fff +System.Globalization.Native.dylib (0) <9050072E-33EB-31D5-94B1-98D89B462D19> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.1.6/System.Globalization.Native.dylib\r\n       0x10bc14000 -        0x10bc1cfff +System.Native.dylib (0) <CF0EA5D7-6301-39CB-9132-19F556C1BDA1> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.1.6/System.Native.dylib\r\n       0x10bdb3000 -        0x10be9efff +libSDL2-2.dylib (5.1) <8FA13A04-0D3D-322B-9F79-8F42F30669A0> /Users/USER/*/libSDL2-2.dylib\r\n       0x10c81c000 -        0x10c89aa87  dyld (655.1) <3EBA447F-A546-366B-B302-8DC3B21A3E30> /usr/lib/dyld\r\n       0x10e2f5000 -        0x10e302ff7  com.apple.iokit.IOHIDLib (2.0.0 - 2.0.0) <A7ADF231-A790-3EE2-AAFF-F141254B79D7> /System/Library/Extensions/IOHIDFamily.kext/Contents/PlugIns/IOHIDLib.plugin/Contents/MacOS/IOHIDLib\r\n       0x10e347000 -        0x10e34a047  libobjc-trampolines.dylib (750.1) <0D004834-E2EB-3066-8598-6F413521157F> /usr/lib/libobjc-trampolines.dylib\r\n       0x10e354000 -        0x10e358fff  com.apple.audio.AppleGFXHDAHALPlugIn (100.1.40 - 100.1.40) <F245D0C7-8BCE-3AD0-A73C-15A3E2AD8F2A> /System/Library/Extensions/AppleGFXHDA.kext/Contents/PlugIns/AppleGFXHDAHALPlugIn.bundle/Contents/MacOS/AppleGFXHDAHALPlugIn\r\n       0x10e4ad000 -        0x10e531fff +libopenal.dylib (1.17.2) <C06C9952-39CA-3E0B-9EF2-6828FCF9DF8C> /Users/USER/*/libopenal.dylib\r\n       0x1a1320000 -        0x1a1326ff7 +System.Security.Cryptography.Native.Apple.dylib (0) <4CA751CE-5F23-347E-B986-865FCD97676A> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.1.6/System.Security.Cryptography.Native.Apple.dylib\r\n       0x1a1fe2000 -        0x1a2187ff7  com.apple.audio.units.Components (1.14 - 1.14) <A7E7DE74-B219-308E-8177-7F1AC561DB93> /System/Library/Components/CoreAudio.component/Contents/MacOS/CoreAudio\r\n       0x1a2b08000 -        0x1a2bd1ff7  com.apple.AMDRadeonX4000GLDriver (2.4.10 - 2.0.4) <BD5AEDB7-59B1-3D64-916A-3A8948AF2BA7> /System/Library/Extensions/AMDRadeonX4000GLDriver.bundle/Contents/MacOS/AMDRadeonX4000GLDriver\r\n    0x7fff21c3c000 -     0x7fff21d87fff  com.apple.AMDMTLBronzeDriver (2.4.10 - 2.0.4) <D06807E4-FC1B-3AE6-AA16-428CE745F924> /System/Library/Extensions/AMDMTLBronzeDriver.bundle/Contents/MacOS/AMDMTLBronzeDriver\r\n    0x7fff21d88000 -     0x7fff22501fff  ATIRadeonX4000SCLib.dylib (2.4.10) <EF35E927-BE8C-3567-8934-153CA3328250> /System/Library/Extensions/AMDRadeonX4000GLDriver.bundle/Contents/MacOS/ATIRadeonX4000SCLib.dylib\r\n    0x7fff24226000 -     0x7fff25006fff  com.apple.driver.AppleIntelKBLGraphicsGLDriver (12.4.7.2 - 12.0.4) <3F6416CB-D223-30F3-9B46-5BD1AAB39D52> /System/Library/Extensions/AppleIntelKBLGraphicsGLDriver.bundle/Contents/MacOS/AppleIntelKBLGraphicsGLDriver\r\n    0x7fff25007000 -     0x7fff2528eff7  com.apple.driver.AppleIntelKBLGraphicsMTLDriver (12.4.7.2 - 12.0.4) <E8F51A32-C943-300C-BF6E-BDCA13AF9069> /System/Library/Extensions/AppleIntelKBLGraphicsMTLDriver.bundle/Contents/MacOS/AppleIntelKBLGraphicsMTLDriver\r\n    0x7fff27d57000 -     0x7fff27d57fff  com.apple.Accelerate (1.11 - Accelerate 1.11) <A09CB6D5-3F8A-3E05-B0EB-63878296A059> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate\r\n    0x7fff27d58000 -     0x7fff27d6efef  libCGInterfaces.dylib (506.19.1) <55B9EFFF-6719-381E-B7F3-C3AA07F5D78F> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/Libraries/libCGInterfaces.dylib\r\n    0x7fff27d6f000 -     0x7fff2840ffe3  com.apple.vImage (8.1 - ???) <BDA40EB0-9B20-3ACF-BE37-199578FA84F4> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage\r\n    0x7fff28410000 -     0x7fff28687fd7  libBLAS.dylib (1243.200.4) <0ADBEAE3-6636-33E5-AC9F-11C2249E19D3> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib\r\n    0x7fff28688000 -     0x7fff286fafe7  libBNNS.dylib (38.200.5) <CC93B9B5-2A8C-3D42-9234-75DD41EC8C0D> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib\r\n    0x7fff286fb000 -     0x7fff28aa1fff  libLAPACK.dylib (1243.200.4) <45722A8A-5788-3C4C-ADD9-1812763FA635> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib\r\n    0x7fff28aa2000 -     0x7fff28ab7ffb  libLinearAlgebra.dylib (1243.200.4) <3923AB79-213E-32FD-AC87-8B1A1A832336> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib\r\n    0x7fff28ab8000 -     0x7fff28abdff3  libQuadrature.dylib (3.200.2) <4FBCAC0A-81A4-3C53-8458-27F3569C809D> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib\r\n    0x7fff28abe000 -     0x7fff28b3bffb  libSparse.dylib (79.200.5) <2D650C50-E87E-3F24-9BFA-C8EB6DE1A6E9> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparse.dylib\r\n    0x7fff28b3c000 -     0x7fff28b4fffb  libSparseBLAS.dylib (1243.200.4) <6F8C78BE-A0FD-3507-8A95-541AFC57F1EE> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib\r\n    0x7fff28b50000 -     0x7fff28d34ff3  libvDSP.dylib (671.220.1) <2F576522-08B1-3C65-8F00-3427E938ADDA> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib\r\n    0x7fff28d35000 -     0x7fff28deaff3  libvMisc.dylib (671.220.1) <D7B5F89D-3310-31F4-B8BF-42DA300ABE64> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib\r\n    0x7fff28deb000 -     0x7fff28debfff  com.apple.Accelerate.vecLib (3.11 - vecLib 3.11) <221E4FEF-0431-3316-8281-22B6F8315A09> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib\r\n    0x7fff28f9c000 -     0x7fff29dbdffb  com.apple.AppKit (6.9 - 1671.20.108) <D460682F-1B60-372E-A8E5-58D7F3A1CB3A> /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit\r\n    0x7fff29e0f000 -     0x7fff29e0ffff  com.apple.ApplicationServices (50.1 - 50.1) <86D6F10E-21F8-3CDC-9838-EB07A1C54BA9> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices\r\n    0x7fff29e10000 -     0x7fff29e7bff7  com.apple.ApplicationServices.ATS (377 - 453.11) <4080F8BE-F2A2-3707-8754-436FBDB1DAF1> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS\r\n    0x7fff29f14000 -     0x7fff2a033fff  libFontParser.dylib (228.6) <BBCBEE2C-5B55-3278-B81D-22D72466753E> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib\r\n    0x7fff2a034000 -     0x7fff2a07fff7  libFontRegistry.dylib (228.12.1.1) <B515718C-81BC-3705-A207-7215486C6D28> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib\r\n    0x7fff2a0de000 -     0x7fff2a111ff7  libTrueTypeScaler.dylib (228.6) <760BF895-3D7A-36E2-B97C-6775C3615A1D> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libTrueTypeScaler.dylib\r\n    0x7fff2a17b000 -     0x7fff2a17fff3  com.apple.ColorSyncLegacy (4.13.0 - 1) <4B1238CC-9B77-3AA5-8329-EE3C736F07EA> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSyncLegacy.framework/Versions/A/ColorSyncLegacy\r\n    0x7fff2a21c000 -     0x7fff2a26eff3  com.apple.HIServices (1.22 - 627.14.2) <1F851BF9-AD29-3558-9EA5-AAD9BAAAC823> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices\r\n    0x7fff2a26f000 -     0x7fff2a27dff3  com.apple.LangAnalysis (1.7.0 - 1.7.0) <5654723A-7B3B-391F-B9F7-0DE4D5940185> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis\r\n    0x7fff2a27e000 -     0x7fff2a2cafff  com.apple.print.framework.PrintCore (14.2 - 503.8) <F1246C9A-2216-3390-8DF1-89304F47CE5D> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore\r\n    0x7fff2a2cb000 -     0x7fff2a306ff7  com.apple.QD (3.12 - 407.2) <F6B648DA-DA39-3EB4-B593-1B7E316661CD> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD\r\n    0x7fff2a307000 -     0x7fff2a313ff7  com.apple.speech.synthesis.framework (8.1.0 - 8.1.0) <CF19C8B6-AAD5-3DCF-ABD0-3BABB44D119C> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis\r\n    0x7fff2a314000 -     0x7fff2a5b1fff  com.apple.audio.toolbox.AudioToolbox (1.14 - 1.14) <5D484151-F269-3D98-B507-0544A6B950AC> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox\r\n    0x7fff2a5b3000 -     0x7fff2a5b3fff  com.apple.audio.units.AudioUnit (1.14 - 1.14) <91100E0A-C14D-3E6C-B095-0C4109AC6694> /System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit\r\n    0x7fff2a917000 -     0x7fff2acd8fff  com.apple.CFNetwork (976 - 976) <A434842F-305B-301D-8F88-373CA7BF7196> /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork\r\n    0x7fff2aced000 -     0x7fff2acedfff  com.apple.Carbon (158 - 158) <82E18DC5-6557-3A66-89A9-9FAD7B4E56DD> /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon\r\n    0x7fff2acee000 -     0x7fff2acf1ffb  com.apple.CommonPanels (1.2.6 - 98) <775C94BE-EC00-315F-96E0-F0C1CD6EE3F4> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels\r\n    0x7fff2acf2000 -     0x7fff2aff9ff7  com.apple.HIToolbox (2.1.1 - 917.3) <8FEBBC30-9C36-3AD4-BC4C-AE3537E8943D> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox\r\n    0x7fff2affa000 -     0x7fff2affdffb  com.apple.help (1.3.8 - 66) <0C6CC127-A860-30D2-8434-6CC3CAFFB030> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help\r\n    0x7fff2affe000 -     0x7fff2b003ff7  com.apple.ImageCapture (9.0 - 1530.1) <72ABBF32-531B-3B04-926D-E14B8D9003A8> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture\r\n    0x7fff2b004000 -     0x7fff2b098ff3  com.apple.ink.framework (10.9 - 225) <344AACCC-E997-3498-8B1D-2EFD3A889205> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink\r\n    0x7fff2b099000 -     0x7fff2b0b3fff  com.apple.openscripting (1.7 - 179) <A57FC4DB-4C51-3ABB-842F-9578991043E3> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting\r\n    0x7fff2b0d4000 -     0x7fff2b0d5fff  com.apple.print.framework.Print (14.2 - 267.4) <618D290C-2EA0-3959-A2A8-FB7B61DA92DD> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print\r\n    0x7fff2b0d6000 -     0x7fff2b0d8ff7  com.apple.securityhi (9.0 - 55006) <2FE1EB07-F717-3E89-9662-8BA7C17C6AEC> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI\r\n    0x7fff2b0d9000 -     0x7fff2b0dfff7  com.apple.speech.recognition.framework (6.0.3 - 6.0.3) <F7E95C56-19E8-30A1-9594-84D4DD89F6D4> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition\r\n    0x7fff2b208000 -     0x7fff2b208fff  com.apple.Cocoa (6.11 - 23) <3F281295-3B16-359C-AE0C-5B4181DE1579> /System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa\r\n    0x7fff2b216000 -     0x7fff2b2e2fff  com.apple.ColorSync (4.13.0 - 3340) <2F45EB01-0C51-3D25-9836-18F99222E1C7> /System/Library/Frameworks/ColorSync.framework/Versions/A/ColorSync\r\n    0x7fff2b47d000 -     0x7fff2b50dfff  com.apple.audio.CoreAudio (4.3.0 - 4.3.0) <1E7EF105-B843-370D-884E-0A43E1A5800B> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio\r\n    0x7fff2b573000 -     0x7fff2b59eff7  com.apple.CoreBluetooth (1.0 - 1) <F041753E-7709-3FA4-ADA3-6B37296D92FB> /System/Library/Frameworks/CoreBluetooth.framework/Versions/A/CoreBluetooth\r\n    0x7fff2b59f000 -     0x7fff2b940fef  com.apple.CoreData (120 - 866.1) <18CD58FD-513E-385B-B43C-08EEB909709C> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData\r\n    0x7fff2b941000 -     0x7fff2ba2aff7  com.apple.CoreDisplay (101.3 - 106.2) <EE0D334B-8B71-3A70-9F90-677171D6762F> /System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay\r\n    0x7fff2ba2b000 -     0x7fff2be78fef  com.apple.CoreFoundation (6.9 - 1562) <02A2C178-9FF6-385C-A9C5-7F4FC9D66311> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation\r\n    0x7fff2be7a000 -     0x7fff2c507ff7  com.apple.CoreGraphics (2.0 - 1249.2) <78B75F62-4B60-3FF4-9259-8981E755F6CD> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics\r\n    0x7fff2c509000 -     0x7fff2c832fff  com.apple.CoreImage (14.2.0 - 720.0.130) <B356BA95-EDD3-35D8-9E4B-250AF6C6DDF9> /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage\r\n    0x7fff2cce8000 -     0x7fff2cce8fff  com.apple.CoreServices (941 - 941) <6DBA4791-26DB-39FB-A6A3-5910A0F2EDD2> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices\r\n    0x7fff2cce9000 -     0x7fff2cd67ffb  com.apple.AE (771 - 771) <4B009524-699E-3891-98DD-E3B6BB433C8F> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE\r\n    0x7fff2cd68000 -     0x7fff2d040ff7  com.apple.CoreServices.CarbonCore (1178.16 - 1178.16) <17FC2B9E-EB6C-3768-A2D0-6E086F2563D9> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore\r\n    0x7fff2d041000 -     0x7fff2d08bff7  com.apple.DictionaryServices (1.2 - 284.16.3) <1DAC9153-FB5A-3798-8797-CBFEFF227F71> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices\r\n    0x7fff2d08c000 -     0x7fff2d094ffb  com.apple.CoreServices.FSEvents (1239.200.12 - 1239.200.12) <8E1507EA-F0A8-3845-B32D-4FBC1381E89C> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents\r\n    0x7fff2d095000 -     0x7fff2d260fff  com.apple.LaunchServices (941 - 941) <A8E42760-995C-35E2-BF4A-C96FD0633B29> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices\r\n    0x7fff2d261000 -     0x7fff2d303fff  com.apple.Metadata (10.7.0 - 1191.53) <48609998-8A34-3CAF-8A42-52C180809656> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata\r\n    0x7fff2d304000 -     0x7fff2d34fff7  com.apple.CoreServices.OSServices (941 - 941) <1B9EA259-09DF-332B-807A-BD50F3184CAC> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices\r\n    0x7fff2d350000 -     0x7fff2d3beff7  com.apple.SearchKit (1.4.0 - 1.4.0) <CEC29BB5-D28E-3424-84FE-70756E521F3B> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit\r\n    0x7fff2d3bf000 -     0x7fff2d3e3ffb  com.apple.coreservices.SharedFileList (71.27 - 71.27) <6389B59D-DDAC-3C97-A982-137B9B1FB734> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList\r\n    0x7fff2d72b000 -     0x7fff2d890ffb  com.apple.CoreText (352.0 - 584.26) <5F61037C-825D-37A4-9091-0047413CC213> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText\r\n    0x7fff2d891000 -     0x7fff2d8cefff  com.apple.CoreVideo (1.8 - 0.0) <34EC73F1-F0ED-32F5-B96E-7683B1F9A7A2> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo\r\n    0x7fff2d8cf000 -     0x7fff2d965ffb  com.apple.framework.CoreWLAN (13.0 - 1370.8) <32426190-3455-3049-8C09-0EC04D9C1279> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN\r\n    0x7fff2dbe2000 -     0x7fff2dbe7fff  com.apple.DiskArbitration (2.7 - 2.7) <97707A79-30E7-3D99-AA20-B992B0900BC4> /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration\r\n    0x7fff2ddad000 -     0x7fff2ddafff7  com.apple.ForceFeedback (1.0.6 - 1.0.6) <42A74696-FDA2-3F33-872A-A452D246B80C> /System/Library/Frameworks/ForceFeedback.framework/Versions/A/ForceFeedback\r\n    0x7fff2ddb0000 -     0x7fff2e17efff  com.apple.Foundation (6.9 - 1562) <83D4A12B-EA5A-3C62-8D93-95E64F0A256B> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation\r\n    0x7fff2e1ef000 -     0x7fff2e21fff3  com.apple.GSS (4.0 - 2.0) <86D07291-5DFC-30C2-9A18-5FCEDB0BE621> /System/Library/Frameworks/GSS.framework/Versions/A/GSS\r\n    0x7fff2e339000 -     0x7fff2e443ff3  com.apple.Bluetooth (6.0.10 - 6.0.10f1) <B3E7A841-1D1B-3043-A2C9-398928CB31AB> /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth\r\n    0x7fff2e4a5000 -     0x7fff2e538fff  com.apple.framework.IOKit (2.0.2 - 1483.240.1) <241690BB-8AFA-3B6A-A210-67874197CB59> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit\r\n    0x7fff2e53a000 -     0x7fff2e544ff7  com.apple.IOSurface (255.1 - 255.1) <58826B1A-38E8-3C76-8FFC-76C9282DA893> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface\r\n    0x7fff2e59b000 -     0x7fff2e739fff  com.apple.ImageIO.framework (3.3.0 - 1822.1) <908907D5-5C29-32F7-ACD9-C6A6D51C4D15> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO\r\n    0x7fff2e73a000 -     0x7fff2e73effb  libGIF.dylib (1822.1) <35E37B95-1962-3A25-9C9E-CADD161152B3> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib\r\n    0x7fff2e73f000 -     0x7fff2e824fe7  libJP2.dylib (1822.1) <BDBCBF28-12DB-3D63-B6F0-A559D1839F81> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib\r\n    0x7fff2e825000 -     0x7fff2e84aff7  libJPEG.dylib (1822.1) <D443C754-4AFC-38E1-9E45-D309ACBCE17B> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib\r\n    0x7fff2eb1d000 -     0x7fff2eb43fe7  libPng.dylib (1822.1) <28FE6E2C-1A17-3A84-AAF3-76014DEADDD4> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib\r\n    0x7fff2eb44000 -     0x7fff2eb46ff7  libRadiance.dylib (1822.1) <687906E3-4EC2-3CE9-B7EA-34418239EE1B> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib\r\n    0x7fff2eb47000 -     0x7fff2eb95ffb  libTIFF.dylib (1822.1) <0A1C083B-CE2F-3A00-8E45-EB58DCA2FF34> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib\r\n    0x7fff2fc3f000 -     0x7fff2fc58fff  com.apple.Kerberos (3.0 - 1) <5D1B0593-3C0E-32D5-AAE5-ABC22A98B639> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos\r\n    0x7fff3067a000 -     0x7fff3070dfff  com.apple.Metal (158.5 - 158.5) <72BF7187-81FE-389B-882F-7B2587FEB455> /System/Library/Frameworks/Metal.framework/Versions/A/Metal\r\n    0x7fff3072a000 -     0x7fff3074aff7  com.apple.MetalPerformanceShaders.MPSCore (1.0 - 1) <18281B14-0C6A-38F8-AB80-2D4BB0743C88> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSCore.framework/Versions/A/MPSCore\r\n    0x7fff3074b000 -     0x7fff307c9ff7  com.apple.MetalPerformanceShaders.MPSImage (1.0 - 1) <BEAF764B-362B-3C45-86F5-2AFBA5FA0F47> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSImage.framework/Versions/A/MPSImage\r\n    0x7fff307ca000 -     0x7fff307f2fff  com.apple.MetalPerformanceShaders.MPSMatrix (1.0 - 1) <116D6C1A-2FD7-3743-95A0-CDDA3D459529> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSMatrix.framework/Versions/A/MPSMatrix\r\n    0x7fff307f3000 -     0x7fff30925ff7  com.apple.MetalPerformanceShaders.MPSNeuralNetwork (1.0 - 1) <88E80BEE-3D2B-328B-80D4-F4717BDB2E9F> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSNeuralNetwork.framework/Versions/A/MPSNeuralNetwork\r\n    0x7fff30926000 -     0x7fff30941ff7  com.apple.MetalPerformanceShaders.MPSRayIntersector (1.0 - 1) <E0E652B0-1624-3435-AD60-83A9C4B59852> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSRayIntersector.framework/Versions/A/MPSRayIntersector\r\n    0x7fff30942000 -     0x7fff30942ff7  com.apple.MetalPerformanceShaders.MetalPerformanceShaders (1.0 - 1) <1BBA8BC8-49C6-3C9B-B985-7CE4373E3553> /System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/MetalPerformanceShaders\r\n    0x7fff31b40000 -     0x7fff31b4cffb  com.apple.NetFS (6.0 - 4.0) <918DF6CD-2DB0-36A8-B869-5EF637A06C0D> /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS\r\n    0x7fff34603000 -     0x7fff3460bfe7  libcldcpuengine.dylib (2.10.3) <D7BF3AFE-3E48-35FF-B674-6CA33B982D63> /System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/libcldcpuengine.dylib\r\n    0x7fff3460c000 -     0x7fff34664fff  com.apple.opencl (2.15.1 - 2.15.1) <CC9439C3-FF30-38D2-BF2F-EA0EF1B5775E> /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL\r\n    0x7fff34665000 -     0x7fff34681ff7  com.apple.CFOpenDirectory (10.14 - 207.200.4) <2CB1F122-2FA0-347C-8454-9CE0FA150832> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory\r\n    0x7fff34682000 -     0x7fff3468effb  com.apple.OpenDirectory (10.14 - 207.200.4) <A3FB0F0C-57F4-3F89-A4B1-63DA1F7C9E8E> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory\r\n    0x7fff34ff1000 -     0x7fff34ff3fff  libCVMSPluginSupport.dylib (17.3.1) <B2310175-04D6-378B-A220-A8AD7F0DA68E> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib\r\n    0x7fff34ff4000 -     0x7fff34ff9ff3  libCoreFSCache.dylib (163.20) <566DB80E-F1D6-3AEC-AF06-08955507AFEE> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib\r\n    0x7fff34ffa000 -     0x7fff34ffefff  libCoreVMClient.dylib (163.20) <B9A89373-BDCD-3003-9A82-6D73B930A122> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib\r\n    0x7fff34fff000 -     0x7fff35007ffb  libGFXShared.dylib (17.3.1) <9FFA679A-8CC9-3932-8A41-AA80C386AD3A> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib\r\n    0x7fff35008000 -     0x7fff35013fff  libGL.dylib (17.3.1) <CFAB6AE4-E646-3E8A-B872-EF091CAF949E> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib\r\n    0x7fff35014000 -     0x7fff3504efef  libGLImage.dylib (17.3.1) <1AEC8E56-D851-3516-96FE-2829883A8302> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib\r\n    0x7fff3504f000 -     0x7fff351c1ff3  libGLProgrammability.dylib (17.3.1) <3B701B8D-FF2C-383E-8F94-77B052ECC075> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLProgrammability.dylib\r\n    0x7fff351c2000 -     0x7fff351fffff  libGLU.dylib (17.3.1) <90279918-D4B2-31E0-9709-8E06628D9486> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib\r\n    0x7fff35baf000 -     0x7fff35bbeff3  com.apple.opengl (17.3.1 - 17.3.1) <2F59064F-D6EF-35CD-9747-20A91DB3D5DF> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL\r\n    0x7fff35bbf000 -     0x7fff35d55ff7  GLEngine (17.3.1) <2320D7E8-11EF-3667-8FC9-7EA5ABD6B8AD> /System/Library/Frameworks/OpenGL.framework/Versions/A/Resources/GLEngine.bundle/GLEngine\r\n    0x7fff35d56000 -     0x7fff35d7eff7  GLRendererFloat (17.3.1) <444BAB14-2648-3CD9-863F-695EA9206059> /System/Library/Frameworks/OpenGL.framework/Versions/A/Resources/GLRendererFloat.bundle/GLRendererFloat\r\n    0x7fff36a1a000 -     0x7fff36c73fff  com.apple.QuartzCore (1.11 - 696.3) <01A2F065-8759-311D-AC2E-FD49F52A87FA> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore\r\n    0x7fff374c7000 -     0x7fff377efff7  com.apple.security (7.0 - 58286.240.4) <91A03FF2-2EE9-36A7-AC4F-169E11FE7846> /System/Library/Frameworks/Security.framework/Versions/A/Security\r\n    0x7fff377f0000 -     0x7fff3787ffff  com.apple.securityfoundation (6.0 - 55185.200.14) <F6A0EC77-51DB-3312-991C-3E1F920DE8F1> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation\r\n    0x7fff378b1000 -     0x7fff378b5ff3  com.apple.xpc.ServiceManagement (1.0 - 1) <26BA237C-DBA0-3322-B9BF-8B8E739E3A20> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement\r\n    0x7fff37c72000 -     0x7fff37ce2ff3  com.apple.SystemConfiguration (1.17 - 1.17) <A8FD596E-C858-397F-836C-978038B97AC0> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration\r\n    0x7fff3af50000 -     0x7fff3aff5fe7  com.apple.APFS (1.0 - 1) <BCB42C90-DEE0-3CD2-9B28-55CD8EFD9487> /System/Library/PrivateFrameworks/APFS.framework/Versions/A/APFS\r\n    0x7fff3ba41000 -     0x7fff3ba42ff3  com.apple.AggregateDictionary (1.0 - 1) <EBA6443E-6CF0-34F6-B77A-3FCEC57F8F80> /System/Library/PrivateFrameworks/AggregateDictionary.framework/Versions/A/AggregateDictionary\r\n    0x7fff3c03f000 -     0x7fff3c06bff7  com.apple.framework.Apple80211 (13.0 - 1376.2) <A71EADCB-7582-3D1B-9122-356F03E11594> /System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Apple80211\r\n    0x7fff3c347000 -     0x7fff3c356fcf  com.apple.AppleFSCompression (96.200.3 - 1.0) <78D538DD-1D24-34FC-AFB3-10411494870D> /System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression\r\n    0x7fff3c454000 -     0x7fff3c45ffff  com.apple.AppleIDAuthSupport (1.0 - 1) <E41452B2-3AFB-3493-BB82-0CE6D04DF424> /System/Library/PrivateFrameworks/AppleIDAuthSupport.framework/Versions/A/AppleIDAuthSupport\r\n    0x7fff3c4a0000 -     0x7fff3c4e9ff3  com.apple.AppleJPEG (1.0 - 1) <EC4C49F1-C060-3C0F-910F-3620985D4F12> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG\r\n    0x7fff3c73c000 -     0x7fff3c764ff7  com.apple.applesauce (1.0 - ???) <58654BC0-9243-39D1-BC43-B7F2E37A3A44> /System/Library/PrivateFrameworks/AppleSauce.framework/Versions/A/AppleSauce\r\n    0x7fff3c8ca000 -     0x7fff3c8e0ffb  com.apple.AssertionServices (1.0 - 1) <3F767D20-FE14-35CF-A089-E0445375ECFB> /System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices\r\n    0x7fff3cc1c000 -     0x7fff3cebfff7  com.apple.AuthKit (1.0 - 1) <4FF8DA76-2250-39B9-B6A9-0E584C8B988F> /System/Library/PrivateFrameworks/AuthKit.framework/Versions/A/AuthKit\r\n    0x7fff3d090000 -     0x7fff3d099ff3  com.apple.coreservices.BackgroundTaskManagement (1.0 - 57.1) <05CF66F0-9650-3F75-9857-F8D186043866> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement\r\n    0x7fff3d09a000 -     0x7fff3d13cfff  com.apple.backup.framework (1.10.3 - ???) <0B4C2292-AEA9-39B5-A65F-8F381166C5C2> /System/Library/PrivateFrameworks/Backup.framework/Versions/A/Backup\r\n    0x7fff3d13d000 -     0x7fff3d1aeffb  com.apple.BaseBoard (360.24 - 360.24) <04AF4372-C5D3-3F0A-A688-68D888D6D138> /System/Library/PrivateFrameworks/BaseBoard.framework/Versions/A/BaseBoard\r\n    0x7fff3ed63000 -     0x7fff3ed6cfff  com.apple.CommonAuth (4.0 - 2.0) <090893E5-BB65-39DA-A174-EAB2C7191EFE> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth\r\n    0x7fff3fa7d000 -     0x7fff3fa91fff  com.apple.CoreEmoji (1.0 - 69.19.8) <26BC0F82-08C1-3EBD-9299-D3CC5091C467> /System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji\r\n    0x7fff40067000 -     0x7fff400d9ff7  com.apple.CoreNLP (1.0 - 130.15.22) <D0A3E880-CDEA-360A-9838-220D76BAECC6> /System/Library/PrivateFrameworks/CoreNLP.framework/Versions/A/CoreNLP\r\n    0x7fff403a4000 -     0x7fff403acffb  com.apple.CorePhoneNumbers (1.0 - 1) <2D9AF545-ED3C-3EC1-887F-86922652EC57> /System/Library/PrivateFrameworks/CorePhoneNumbers.framework/Versions/A/CorePhoneNumbers\r\n    0x7fff4053b000 -     0x7fff4056cfff  com.apple.CoreServicesInternal (357 - 357) <789E57F4-5A14-3220-93DF-1D4FEE315431> /System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal\r\n    0x7fff40941000 -     0x7fff409cfff7  com.apple.CoreSymbolication (10.1 - 64460.6) <177AC44B-32E4-3F80-A36B-5B9999B388A8> /System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication\r\n    0x7fff40a5f000 -     0x7fff40b8bfff  com.apple.coreui (2.1 - 498.46) <5EFE2CDC-897C-3A6B-A60B-4E0FB1D1ECA9> /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI\r\n    0x7fff40b8c000 -     0x7fff40d11fff  com.apple.CoreUtils (5.7.4 - 574.17) <DEF9C8A6-DDF1-37F4-A7F0-7DFAA95E8451> /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils\r\n    0x7fff40d68000 -     0x7fff40dcbffb  com.apple.framework.CoreWiFi (13.0 - 1370.8) <818F8915-BA51-3145-9C40-C9B8D7BE2DBD> /System/Library/PrivateFrameworks/CoreWiFi.framework/Versions/A/CoreWiFi\r\n    0x7fff40dcc000 -     0x7fff40dddffb  com.apple.CrashReporterSupport (10.13 - 938.23) <D8D105F5-B6FB-3E91-A116-7CD92171E5C5> /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport\r\n    0x7fff40e60000 -     0x7fff40e6fff3  com.apple.framework.DFRFoundation (1.0 - 211) <B72944ED-E4E8-3479-B832-8D50C4E30386> /System/Library/PrivateFrameworks/DFRFoundation.framework/Versions/A/DFRFoundation\r\n    0x7fff40e70000 -     0x7fff40e74ff7  com.apple.DSExternalDisplay (3.1 - 380) <76449D22-BA27-3FB1-AD25-A290936E6DEA> /System/Library/PrivateFrameworks/DSExternalDisplay.framework/Versions/A/DSExternalDisplay\r\n    0x7fff40ef7000 -     0x7fff40f6effb  com.apple.datadetectorscore (7.0 - 590.24) <3A49EC90-2081-3031-8CAE-3A6D5F7BFA1E> /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore\r\n    0x7fff40fbc000 -     0x7fff40ffdfff  com.apple.DebugSymbols (185 - 185) <64F5F9D6-401D-388B-82AD-A48B56413556> /System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols\r\n    0x7fff40ffe000 -     0x7fff41157ff7  com.apple.desktopservices (1.13.1 - ???) <AD61A660-0218-327E-8963-A1A170EC2C20> /System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv\r\n    0x7fff42199000 -     0x7fff425c1fff  com.apple.vision.FaceCore (3.3.4 - 3.3.4) <41218EB7-19C9-3813-A793-B0623387CADF> /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore\r\n    0x7fff45ee3000 -     0x7fff45ee4fff  libmetal_timestamp.dylib (902.2.2) <55E0B1F2-94F0-3A77-9DB3-152F44848DA5> /System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/3902/Libraries/libmetal_timestamp.dylib\r\n    0x7fff47582000 -     0x7fff4758dff7  libGPUSupportMercury.dylib (17.3.1) <CBF68814-AF66-3B8D-AF60-69469EA92E61> /System/Library/PrivateFrameworks/GPUSupport.framework/Versions/A/Libraries/libGPUSupportMercury.dylib\r\n    0x7fff4758e000 -     0x7fff47593ff7  com.apple.GPUWrangler (3.28.4 - 3.28.4) <7E06C75D-5502-3F1D-987C-4F103917CD85> /System/Library/PrivateFrameworks/GPUWrangler.framework/Versions/A/GPUWrangler\r\n    0x7fff483fe000 -     0x7fff4840dfff  com.apple.GraphVisualizer (1.0 - 5) <CAFE626E-9738-3C14-88AA-B6A9182F2C39> /System/Library/PrivateFrameworks/GraphVisualizer.framework/Versions/A/GraphVisualizer\r\n    0x7fff4855e000 -     0x7fff485d3fff  com.apple.Heimdal (4.0 - 2.0) <D99FF31F-6310-3D80-8AE3-64934385AC11> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal\r\n    0x7fff499b9000 -     0x7fff499c2fff  com.apple.IOAccelMemoryInfo (1.0 - 1) <4C91E3B6-3BB3-3AB6-942C-F67CC0B21228> /System/Library/PrivateFrameworks/IOAccelMemoryInfo.framework/Versions/A/IOAccelMemoryInfo\r\n    0x7fff499c3000 -     0x7fff499caffb  com.apple.IOAccelerator (404.2.2 - 404.2.2) <2F099589-DBE9-3442-AC93-F4AB363482A0> /System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator\r\n    0x7fff499ce000 -     0x7fff499e7fff  com.apple.IOPresentment (1.0 - 42.6) <F7E91CC9-E4BB-3904-8647-0473E3BCAF70> /System/Library/PrivateFrameworks/IOPresentment.framework/Versions/A/IOPresentment\r\n    0x7fff49dfc000 -     0x7fff49e2bff7  com.apple.IconServices (379 - 379) <694E17A6-471B-3C57-92D6-ECC4295FB859> /System/Library/PrivateFrameworks/IconServices.framework/Versions/A/IconServices\r\n    0x7fff4a0cb000 -     0x7fff4a0defff  com.apple.security.KeychainCircle.KeychainCircle (1.0 - 1) <DC6F5E18-3411-32AF-B395-AFC110C74A63> /System/Library/PrivateFrameworks/KeychainCircle.framework/Versions/A/KeychainCircle\r\n    0x7fff4a0fa000 -     0x7fff4a1f1fff  com.apple.LanguageModeling (1.0 - 159.15.15) <34609F31-4DA1-3881-8947-85BEA7AFC938> /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling\r\n    0x7fff4a1f2000 -     0x7fff4a233ff7  com.apple.Lexicon-framework (1.0 - 33.15.10) <07E008F3-E823-333B-8B41-A46024AB0561> /System/Library/PrivateFrameworks/Lexicon.framework/Versions/A/Lexicon\r\n    0x7fff4a23a000 -     0x7fff4a240ff7  com.apple.LinguisticData (1.0 - 238.23.4) <F6AA7095-3975-3C76-9833-BBE955EFEBD7> /System/Library/PrivateFrameworks/LinguisticData.framework/Versions/A/LinguisticData\r\n    0x7fff4af9d000 -     0x7fff4afc5ffb  com.apple.spotlight.metadata.utilities (1.0 - 1191.53) <2CFFD786-87A5-3629-B5E1-8E4DEF51ADA8> /System/Library/PrivateFrameworks/MetadataUtilities.framework/Versions/A/MetadataUtilities\r\n    0x7fff4afc6000 -     0x7fff4b058fff  com.apple.gpusw.MetalTools (1.0 - 1) <C0489BBD-C25C-33E5-84CD-8A50205080A0> /System/Library/PrivateFrameworks/MetalTools.framework/Versions/A/MetalTools\r\n    0x7fff4b203000 -     0x7fff4b21eff3  com.apple.MobileKeyBag (2.0 - 1.0) <663E513E-CE91-3474-9108-77DF844F17BA> /System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag\r\n    0x7fff4b2ac000 -     0x7fff4b2d6ff7  com.apple.MultitouchSupport.framework (2410.5 - 2410.5) <3A712911-F672-3BB3-B62B-A2A7BADF3578> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport\r\n    0x7fff4b549000 -     0x7fff4b554fff  com.apple.NetAuth (6.2 - 6.2) <A6474ABC-FD4B-3A8F-AB33-7AACEEED7F0E> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth\r\n    0x7fff4be21000 -     0x7fff4be77fff  com.apple.OTSVG (1.0 - ???) <F020144A-D840-390D-A87F-29E8095C78AF> /System/Library/PrivateFrameworks/OTSVG.framework/Versions/A/OTSVG\r\n    0x7fff4cfe2000 -     0x7fff4cff1ff3  com.apple.PerformanceAnalysis (1.217 - 217) <AA34989F-7E01-303E-8134-5BB37CE82DDF> /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis\r\n    0x7fff4efb0000 -     0x7fff4efceff7  com.apple.ProtocolBuffer (1 - 263.1) <D70A1E3D-D2F7-3765-861C-173F5BBC848B> /System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer\r\n    0x7fff4f17d000 -     0x7fff4f1d5f0f  com.apple.ROCKit (24 - 24) <FA6B086A-1841-3A5E-800B-CE7A52C3DAF1> /System/Library/PrivateFrameworks/ROCKit.framework/Versions/A/ROCKit\r\n    0x7fff4f2f5000 -     0x7fff4f318ffb  com.apple.RemoteViewServices (2.0 - 128) <55D89BC9-0613-3910-B63E-9A146D35D91A> /System/Library/PrivateFrameworks/RemoteViewServices.framework/Versions/A/RemoteViewServices\r\n    0x7fff50c8e000 -     0x7fff50dacfff  com.apple.Sharing (1214.19 - 1214.19) <27C2CFC8-1C1B-3F98-B0BC-7AB6B1847B1B> /System/Library/PrivateFrameworks/Sharing.framework/Versions/A/Sharing\r\n    0x7fff51b66000 -     0x7fff51e18ff3  com.apple.SkyLight (1.600.0 - 337.5) <B18B2F6F-F44B-3B5B-8DA1-3B8977E59240> /System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight\r\n    0x7fff525e9000 -     0x7fff525f6fff  com.apple.SpeechRecognitionCore (5.0.21 - 5.0.21) <FABB97BC-9555-33FE-B6C5-606CC403CE16> /System/Library/PrivateFrameworks/SpeechRecognitionCore.framework/Versions/A/SpeechRecognitionCore\r\n    0x7fff53457000 -     0x7fff534e4ff7  com.apple.Symbolication (10.1 - 64460.8) <7DDC5C90-947F-34FF-864D-5ED3C2B746A9> /System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication\r\n    0x7fff539ed000 -     0x7fff539faffb  com.apple.TCC (1.0 - 1) <81F88B91-49C1-36E7-8A39-C4BD654EE942> /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC\r\n    0x7fff53c6d000 -     0x7fff53d34ff7  com.apple.TextureIO (3.8.4 - 3.8.1) <83CDF659-E5B3-381F-BDA1-FF0BFA17B5EE> /System/Library/PrivateFrameworks/TextureIO.framework/Versions/A/TextureIO\r\n    0x7fff53dee000 -     0x7fff53deffff  com.apple.TrustEvaluationAgent (2.0 - 31.200.1) <5C3E1B2D-40A8-3237-A8D9-4E7B15EEA678> /System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent\r\n    0x7fff53df5000 -     0x7fff53faffff  com.apple.UIFoundation (1.0 - 551) <65A80450-7A24-3366-B521-4D02C4DB5094> /System/Library/PrivateFrameworks/UIFoundation.framework/Versions/A/UIFoundation\r\n    0x7fff54c9e000 -     0x7fff54d87ff7  com.apple.ViewBridge (401.1 - 401.1) <E76BC854-5B08-3FFF-AA2C-9679754FCAF0> /System/Library/PrivateFrameworks/ViewBridge.framework/Versions/A/ViewBridge\r\n    0x7fff555ad000 -     0x7fff555b0fff  com.apple.dt.XCTTargetBootstrap (1.0 - 1) <5F779D77-4AB1-3CCD-9AAF-101EC7E4905B> /System/Library/PrivateFrameworks/XCTTargetBootstrap.framework/Versions/A/XCTTargetBootstrap\r\n    0x7fff559e1000 -     0x7fff559e3ff3  com.apple.loginsupport (1.0 - 1) <67BC49D6-320F-33ED-912E-16E5A342F385> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport\r\n    0x7fff55c9e000 -     0x7fff55cd6fff  libCRFSuite.dylib (41.15.4) <92752A96-D1CF-3CA1-837A-1E075AE4C642> /usr/lib/libCRFSuite.dylib\r\n    0x7fff55cd9000 -     0x7fff55ce4ff7  libChineseTokenizer.dylib (28.15.3) <55572692-4918-3C54-AD35-726E03EC47D5> /usr/lib/libChineseTokenizer.dylib\r\n    0x7fff55d75000 -     0x7fff55d76ff7  libDiagnosticMessagesClient.dylib (107) <15210AC0-61F9-3F9D-A159-A009F62EB537> /usr/lib/libDiagnosticMessagesClient.dylib\r\n    0x7fff55dad000 -     0x7fff55f70ff7  libFosl_dynamic.dylib (18.3.2) <D67B74E9-EB95-38BC-995C-5F4CC044C3F7> /usr/lib/libFosl_dynamic.dylib\r\n    0x7fff55fc6000 -     0x7fff55fe5ff7  libMobileGestalt.dylib (645.220.9) <C2C55511-993B-34D2-9040-902BFDA38141> /usr/lib/libMobileGestalt.dylib\r\n    0x7fff55fe6000 -     0x7fff55fe6fff  libOpenScriptingUtil.dylib (179) <441A2E60-5D5C-3567-9B00-AA22E6EE5358> /usr/lib/libOpenScriptingUtil.dylib\r\n    0x7fff56127000 -     0x7fff56128ffb  libSystem.B.dylib (1252.200.5) <C6201660-5E17-397D-BA21-C503420CD706> /usr/lib/libSystem.B.dylib\r\n    0x7fff561b2000 -     0x7fff561b3fff  libThaiTokenizer.dylib (2.15.1) <F09EB0BB-1E8A-3391-BEF5-7D91F0715A62> /usr/lib/libThaiTokenizer.dylib\r\n    0x7fff561c6000 -     0x7fff561dcffb  libapple_nghttp2.dylib (1.24.1) <71C126C5-D869-3E67-9778-058FA7F3CA74> /usr/lib/libapple_nghttp2.dylib\r\n    0x7fff561dd000 -     0x7fff56206ffb  libarchive.2.dylib (54.200.3) <32B8634D-E465-3F6D-B254-A20D44504508> /usr/lib/libarchive.2.dylib\r\n    0x7fff56207000 -     0x7fff56286fef  libate.dylib (1.13.8) <C7F1CEC4-467F-34B2-92FF-6482460A39E1> /usr/lib/libate.dylib\r\n    0x7fff5628a000 -     0x7fff5628aff3  libauto.dylib (187) <003DEF68-0C59-3AFB-A7B7-A1B5ED301AF2> /usr/lib/libauto.dylib\r\n    0x7fff56361000 -     0x7fff56371ff3  libbsm.0.dylib (39.200.18) <58A9ACEC-BF46-3A4E-86F5-3DD9AD7095B4> /usr/lib/libbsm.0.dylib\r\n    0x7fff56372000 -     0x7fff56380fff  libbz2.1.0.dylib (38.200.3) <4DEC3797-087F-3C8D-815B-48E895813251> /usr/lib/libbz2.1.0.dylib\r\n    0x7fff56381000 -     0x7fff563d8ff7  libc++.1.dylib (400.9.4) <B260AC33-EB9A-30C6-8746-D011B3B02B08> /usr/lib/libc++.1.dylib\r\n    0x7fff563d9000 -     0x7fff563eefff  libc++abi.dylib (400.17) <446F4748-8A89-3D2E-AE1C-27EEBE93A8AB> /usr/lib/libc++abi.dylib\r\n    0x7fff563ef000 -     0x7fff563efff3  libcharset.1.dylib (51.200.6) <43F7E100-F5D1-36AB-A26E-CF94196A19C0> /usr/lib/libcharset.1.dylib\r\n    0x7fff563f0000 -     0x7fff56400ffb  libcmph.dylib (6.15.1) <CEDA6538-C071-3B5A-948E-DF61E2878983> /usr/lib/libcmph.dylib\r\n    0x7fff56401000 -     0x7fff56419ffb  libcompression.dylib (52.200.13) <05A2A91B-D24D-39E8-A071-261CBC5BB158> /usr/lib/libcompression.dylib\r\n    0x7fff566c4000 -     0x7fff566dafff  libcoretls.dylib (155.220.1) <1229F9EA-C070-3D03-9DC6-F548C59F9FD5> /usr/lib/libcoretls.dylib\r\n    0x7fff566db000 -     0x7fff566dcff3  libcoretls_cfhelpers.dylib (155.220.1) <33661841-3C3B-3608-86AC-C88D1CD6FE98> /usr/lib/libcoretls_cfhelpers.dylib\r\n    0x7fff5687b000 -     0x7fff56a0bffb  libcrypto.35.dylib (22.240.1) <603427B4-6A5E-367B-B164-744606A2AA27> /usr/lib/libcrypto.35.dylib\r\n    0x7fff56d53000 -     0x7fff56daaffb  libcups.2.dylib (462.10) <29B6D106-A5F2-321D-8916-90F595545D88> /usr/lib/libcups.2.dylib\r\n    0x7fff56ee2000 -     0x7fff56ee2fff  libenergytrace.dylib (17.200.1) <F5BA8134-16F9-31CD-90E1-D1EBEBADA4AE> /usr/lib/libenergytrace.dylib\r\n    0x7fff56f14000 -     0x7fff56f19ff7  libgermantok.dylib (17.15.2) <9381B152-5CFD-3D23-A5A7-4D64EE55B85E> /usr/lib/libgermantok.dylib\r\n    0x7fff56f1a000 -     0x7fff56f1fff7  libheimdal-asn1.dylib (520.220.2) <D851A47D-E162-35F8-B8D4-6ABEA7FFDAD7> /usr/lib/libheimdal-asn1.dylib\r\n    0x7fff56f4b000 -     0x7fff5703cff7  libiconv.2.dylib (51.200.6) <9FB95807-7C62-32B7-A19F-946D7FB7CCA6> /usr/lib/libiconv.2.dylib\r\n    0x7fff5703d000 -     0x7fff572a0ffb  libicucore.A.dylib (62109.0.1) <FEB89BD3-79C4-3208-A754-7E6BC4D38548> /usr/lib/libicucore.A.dylib\r\n    0x7fff572ed000 -     0x7fff572eefff  liblangid.dylib (128.15.1) <663D0A24-7260-31D1-9BFE-74D67B6F72F6> /usr/lib/liblangid.dylib\r\n    0x7fff572ef000 -     0x7fff57307fff  liblzma.5.dylib (10.200.3) <9A52A949-0CB1-39B6-9244-D079FB609559> /usr/lib/liblzma.5.dylib\r\n    0x7fff5731f000 -     0x7fff573cffff  libmecab.1.0.0.dylib (779.24.1) <590BC39C-2A3E-368B-9499-C808B84C4955> /usr/lib/libmecab.1.0.0.dylib\r\n    0x7fff573d0000 -     0x7fff5760dff7  libmecabra.dylib (779.24.1) <22BFD5A8-EA42-3DC3-8910-F27DCFB1B631> /usr/lib/libmecabra.dylib\r\n    0x7fff577e5000 -     0x7fff57b3dffb  libnetwork.dylib (1229.240.1) <F99593DA-3089-3008-BE5B-5AC096EBF3A3> /usr/lib/libnetwork.dylib\r\n    0x7fff57bcf000 -     0x7fff58355fe7  libobjc.A.dylib (750.1) <804715F4-F52D-34D0-8FEC-A25DC08513C3> /usr/lib/libobjc.A.dylib\r\n    0x7fff58368000 -     0x7fff5836cffb  libpam.2.dylib (22.200.1) <85253002-89F2-3872-9C8A-1801303A2EBB> /usr/lib/libpam.2.dylib\r\n    0x7fff5836f000 -     0x7fff583a5ff7  libpcap.A.dylib (79.200.4) <6D25197A-2F7C-3147-A45A-F6F13E55909F> /usr/lib/libpcap.A.dylib\r\n    0x7fff584bf000 -     0x7fff584d7ffb  libresolv.9.dylib (65.200.2) <A1A77B4E-1AF0-3039-9945-D05440494E00> /usr/lib/libresolv.9.dylib\r\n    0x7fff5852b000 -     0x7fff58702fe7  libsqlite3.dylib (274.22) <B30E3B7E-E22E-37A0-A3EB-EA333ADEE13E> /usr/lib/libsqlite3.dylib\r\n    0x7fff5898f000 -     0x7fff58992ffb  libutil.dylib (51.200.4) <10C5E165-0939-363A-9D13-7076F3B513EC> /usr/lib/libutil.dylib\r\n    0x7fff58993000 -     0x7fff589a0fff  libxar.1.dylib (404) <16E875B3-CF89-3059-87BB-36D301B32E7B> /usr/lib/libxar.1.dylib\r\n    0x7fff589a5000 -     0x7fff58a88fff  libxml2.2.dylib (32.8) <3E7875AC-3195-3800-AC48-8AA3B7BE51E4> /usr/lib/libxml2.2.dylib\r\n    0x7fff58a89000 -     0x7fff58ab1ff3  libxslt.1.dylib (16.1) <D6EBFEBB-F88E-398F-B1B5-66F413C2CD32> /usr/lib/libxslt.1.dylib\r\n    0x7fff58ab2000 -     0x7fff58ac4ffb  libz.1.dylib (70.200.4) <15F7B40A-424C-33BB-BF2C-7E8195128B78> /usr/lib/libz.1.dylib\r\n    0x7fff58b35000 -     0x7fff58b39ff3  libcache.dylib (81) <704331AC-E43D-343A-8C24-39201142AF27> /usr/lib/system/libcache.dylib\r\n    0x7fff58b3a000 -     0x7fff58b44ff3  libcommonCrypto.dylib (60118.220.1) <9C865644-EE9A-3662-AB77-7C8A5E561784> /usr/lib/system/libcommonCrypto.dylib\r\n    0x7fff58b45000 -     0x7fff58b4cfff  libcompiler_rt.dylib (63.4) <817772E3-E836-3FFD-A39B-BDCD1C357221> /usr/lib/system/libcompiler_rt.dylib\r\n    0x7fff58b4d000 -     0x7fff58b56ff3  libcopyfile.dylib (146.200.3) <5C5C4F35-DAB7-3CF1-940F-F47192AB8289> /usr/lib/system/libcopyfile.dylib\r\n    0x7fff58b57000 -     0x7fff58bdbfdf  libcorecrypto.dylib (602.230.1) <C78D1A87-5543-3561-BEB4-3B480BA94ECB> /usr/lib/system/libcorecrypto.dylib\r\n    0x7fff58c62000 -     0x7fff58c9cff7  libdispatch.dylib (1008.220.2) <2FDB1401-5119-3DF0-91F5-F4E105F00CD7> /usr/lib/system/libdispatch.dylib\r\n    0x7fff58c9d000 -     0x7fff58cccff3  libdyld.dylib (655.1) <90C801E7-5D05-37A8-810C-B58E8C53953A> /usr/lib/system/libdyld.dylib\r\n    0x7fff58ccd000 -     0x7fff58ccdffb  libkeymgr.dylib (30) <A4EFD9A4-2EF3-3E18-B325-F527E3821939> /usr/lib/system/libkeymgr.dylib\r\n    0x7fff58cce000 -     0x7fff58cdaff7  libkxld.dylib (4903.241.1) <D039B38D-E8E6-3011-94F5-A21CD3D59526> /usr/lib/system/libkxld.dylib\r\n    0x7fff58cdb000 -     0x7fff58cdbff7  liblaunch.dylib (1336.240.2) <D5F0014D-CF46-3B04-9DE0-A1466DA14A2C> /usr/lib/system/liblaunch.dylib\r\n    0x7fff58cdc000 -     0x7fff58ce1fff  libmacho.dylib (921) <6ADB99F3-D142-3A0A-B3CE-031354766ACC> /usr/lib/system/libmacho.dylib\r\n    0x7fff58ce2000 -     0x7fff58ce4ffb  libquarantine.dylib (86.220.1) <58524FD7-63C5-38E0-9D90-845A79551C14> /usr/lib/system/libquarantine.dylib\r\n    0x7fff58ce5000 -     0x7fff58ce6ff3  libremovefile.dylib (45.200.2) <BA53CA8A-9974-3A43-9265-B110B1AE470F> /usr/lib/system/libremovefile.dylib\r\n    0x7fff58ce7000 -     0x7fff58cfeff3  libsystem_asl.dylib (356.200.4) <33C62769-1242-3BC1-9459-13CBCDECC7FE> /usr/lib/system/libsystem_asl.dylib\r\n    0x7fff58cff000 -     0x7fff58cfffff  libsystem_blocks.dylib (73) <152EDADF-7D94-35F2-89B7-E66DCD945BBA> /usr/lib/system/libsystem_blocks.dylib\r\n    0x7fff58d00000 -     0x7fff58d88fff  libsystem_c.dylib (1272.200.26) <D6C701A2-9F17-308D-B6AC-9E17EF31B7DF> /usr/lib/system/libsystem_c.dylib\r\n    0x7fff58d89000 -     0x7fff58d8cff7  libsystem_configuration.dylib (963.200.27) <94898525-ECC8-3CC9-B312-CBEAAC305E32> /usr/lib/system/libsystem_configuration.dylib\r\n    0x7fff58d8d000 -     0x7fff58d90ff7  libsystem_coreservices.dylib (66) <10818C17-70E1-328E-A3E3-C3EB81AEC590> /usr/lib/system/libsystem_coreservices.dylib\r\n    0x7fff58d91000 -     0x7fff58d97ffb  libsystem_darwin.dylib (1272.200.26) <07468CF7-982F-37C4-83D0-D5E602A683AA> /usr/lib/system/libsystem_darwin.dylib\r\n    0x7fff58d98000 -     0x7fff58d9eff7  libsystem_dnssd.dylib (878.240.1) <5FEA5E1E-E80F-3616-AD33-8E936D61F31A> /usr/lib/system/libsystem_dnssd.dylib\r\n    0x7fff58d9f000 -     0x7fff58debff3  libsystem_info.dylib (517.200.9) <54B65F21-2E93-3579-9B72-6637A03245D9> /usr/lib/system/libsystem_info.dylib\r\n    0x7fff58dec000 -     0x7fff58e14ff7  libsystem_kernel.dylib (4903.241.1) <CA10BC3A-5B09-32CE-B74F-BAD01755AA37> /usr/lib/system/libsystem_kernel.dylib\r\n    0x7fff58e15000 -     0x7fff58e60ff7  libsystem_m.dylib (3158.200.7) <AF25F8E8-194C-314F-A2D3-A424853EE796> /usr/lib/system/libsystem_m.dylib\r\n    0x7fff58e61000 -     0x7fff58e85ff7  libsystem_malloc.dylib (166.220.1) <4777DC06-F9C6-356E-82AB-86A1C6D62F3A> /usr/lib/system/libsystem_malloc.dylib\r\n    0x7fff58e86000 -     0x7fff58e91ff3  libsystem_networkextension.dylib (767.240.1) <4DB0D4A2-83E7-3638-AAA0-39CECD5C25F8> /usr/lib/system/libsystem_networkextension.dylib\r\n    0x7fff58e92000 -     0x7fff58e99fff  libsystem_notify.dylib (172.200.21) <65B3061D-41D7-3485-B217-A861E05AD50B> /usr/lib/system/libsystem_notify.dylib\r\n    0x7fff58e9a000 -     0x7fff58ea3fef  libsystem_platform.dylib (177.200.16) <83DED753-51EC-3B8C-A98D-883A5184086B> /usr/lib/system/libsystem_platform.dylib\r\n    0x7fff58ea4000 -     0x7fff58eaefff  libsystem_pthread.dylib (330.230.1) <80CC5992-823E-327E-BB6E-9D4568B84161> /usr/lib/system/libsystem_pthread.dylib\r\n    0x7fff58eaf000 -     0x7fff58eb2ff7  libsystem_sandbox.dylib (851.230.3) <D6469A17-C13C-3538-A300-D6517BB7F249> /usr/lib/system/libsystem_sandbox.dylib\r\n    0x7fff58eb3000 -     0x7fff58eb5ff3  libsystem_secinit.dylib (30.220.1) <5964B6D2-19D4-3CF9-BDBC-4EB1D42348F1> /usr/lib/system/libsystem_secinit.dylib\r\n    0x7fff58eb6000 -     0x7fff58ebdff7  libsystem_symptoms.dylib (820.237.2) <487E1794-4C6E-3B1B-9C55-95B1A5FF9B90> /usr/lib/system/libsystem_symptoms.dylib\r\n    0x7fff58ebe000 -     0x7fff58ed3ff7  libsystem_trace.dylib (906.220.1) <4D4BA88A-FA32-379D-8860-33838723B35F> /usr/lib/system/libsystem_trace.dylib\r\n    0x7fff58ed5000 -     0x7fff58edaffb  libunwind.dylib (35.4) <EF1A77FD-A86B-39F5-ABEA-6100AB23583A> /usr/lib/system/libunwind.dylib\r\n    0x7fff58edb000 -     0x7fff58f0bfff  libxpc.dylib (1336.240.2) <EE0CDA53-6FF9-3B4E-A571-335A5FF6B6F4> /usr/lib/system/libxpc.dylib\r\n\r\nExternal Modification Summary:\r\n  Calls made by other processes targeting this process:\r\n    task_for_pid: 1\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by this process:\r\n    task_for_pid: 0\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by all processes on this machine:\r\n    task_for_pid: 74498\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n\r\nVM Region Summary:\r\nReadOnly portion of Libraries: Total=412.5M resident=0K(0%) swapped_out_or_unallocated=412.5M(100%)\r\nWritable regions: Total=186.6M written=0K(0%) resident=0K(0%) swapped_out=0K(0%) unallocated=186.6M(100%)\r\n \r\n                                VIRTUAL   REGION \r\nREGION TYPE                        SIZE    COUNT (non-coalesced) \r\n===========                     =======  ======= \r\nAccelerate framework               128K        2 \r\nActivity Tracing                   256K        2 \r\nCG backing stores                 5432K        4 \r\nCG image                          1076K        6 \r\nCoreAnimation                       88K       10 \r\nCoreGraphics                         8K        2 \r\nCoreImage                           24K        3 \r\nCoreUI image data                  740K       11 \r\nCoreUI image file                  196K        4 \r\nDispatch continuations            24.0M        2 \r\nFoundation                           4K        2 \r\nIOKit                             7940K        2 \r\nKernel Alloc Once                    8K        2 \r\nMALLOC                           127.5M       30 \r\nMALLOC guard page                   32K        9 \r\nMemory Tag 242                      12K        2 \r\nOpenGL GLSL                        256K        4 \r\nSTACK GUARD                       56.1M       15 \r\nStack                             14.6M       15 \r\nVM_ALLOCATE                        2.3G      276 \r\nVM_ALLOCATE (reserved)             132K        4         reserved VM address space (unallocated)\r\n__DATA                            35.2M      268 \r\n__FONT_DATA                          4K        2 \r\n__GLSLBUILTINS                    5176K        2 \r\n__LINKEDIT                       219.5M       18 \r\n__TEXT                           193.0M      267 \r\n__UNICODE                          564K        2 \r\nmapped file                       74.7M      194 \r\nshared memory                      672K       13 \r\n===========                     =======  ======= \r\nTOTAL                              3.0G     1144 \r\nTOTAL, minus reserved VM space     3.0G     1144 \r\n\r\nModel: MacBookPro15,1, BootROM 220.240.2.0.0 (iBridge: 16.16.3133.0.0,0), 6 processors, Intel Core i7, 2.6 GHz, 16 GB, SMC \r\nGraphics: Intel UHD Graphics 630, Intel UHD Graphics 630, Built-In\r\nGraphics: Radeon Pro 560X, Radeon Pro 560X, PCIe\r\nMemory Module: BANK 0/ChannelA-DIMM0, 8 GB, DDR4, 2400 MHz, Micron, 8ATF1G64HZ-2G6E1 8ATF1G64HZ-2G6E1\r\nMemory Module: BANK 2/ChannelB-DIMM0, 8 GB, DDR4, 2400 MHz, Micron, 8ATF1G64HZ-2G6E1 8ATF1G64HZ-2G6E1\r\nAirPort: spairport_wireless_card_type_airport_extreme (0x14E4, 0x7BF), wl0: Sep 18 2018 16:24:57 version 9.130.86.7.32.6.21 FWID 01-83a3fe91\r\nBluetooth: Version 6.0.10f1, 3 services, 27 devices, 1 incoming serial ports\r\nNetwork Service: Wi-Fi, AirPort, en0\r\nUSB Device: USB 3.1 Bus\r\nUSB Device: USB2.0 Hub\r\nUSB Device: ZOWIE Gaming mouse\r\nUSB Device: USB Keyboard\r\nUSB Device: USB3.1 Hub\r\nUSB Device: iBridge Bus\r\nUSB Device: iBridge DFR brightness\r\nUSB Device: iBridge Display\r\nUSB Device: Apple Internal Keyboard / Trackpad\r\nUSB Device: Headset\r\nUSB Device: iBridge ALS\r\nUSB Device: iBridge FaceTime HD Camera (Built-in)\r\nUSB Device: iBridge\r\nThunderbolt Bus: MacBook Pro, Apple Inc., 34.6\r\nThunderbolt Bus: MacBook Pro, Apple Inc., 34.6\r\n````","Url":"https://github.com/dotnet/sdk/issues/3050","RelatedDescription":"Closed issue \"Segmentation Fault on Mac High Sierra 10.14.3\" (#3050)"},{"Id":"425701299","IsPullRequest":true,"CreatedAt":"2019-03-27T00:01:37","Actor":"dotnet-bot","Number":"3049","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3049","RelatedDescription":"Open PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#3049)"},{"Id":"425701289","IsPullRequest":true,"CreatedAt":"2019-03-27T00:01:35","Actor":"dotnet-bot","Number":"3048","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3048","RelatedDescription":"Open PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#3048)"},{"Id":"425628198","IsPullRequest":true,"CreatedAt":"2019-03-26T21:47:24","Actor":"dotnet-maestro[bot]","Number":"3045","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190325.9\r\n- **Date Produced**: 3/25/2019 10:36 PM\r\n- **Commit**: 13daa29185518ef3c6d4074fd07efbc5236a76c5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19175.9\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19175.9\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3045","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3045)"},{"Id":"425631708","IsPullRequest":false,"CreatedAt":"2019-03-26T20:24:49","Actor":"jzabroski","Number":"3046","RawContent":null,"Title":"Implicit references fail transitively","State":"open","Body":"This issue is effectively the same issue @natemcmaster has reported in https://github.com/aspnet/Docs/issues/9490#issuecomment-442912739 for .NET Core 2.2 -> 3.0 migrations, but the regression goes back to at least 2.1 -> 2.2 upgrades as well:\r\n\r\n> Preview 1 Known Issue - workaround for NuGet/Home#7342 - projects which do not start with `<Project Sdk=\"Microsoft.NET.Sdk.Web\">` will get compiler or runtime errors due to missing Microsoft.AspNetCore.* assemblies. This is most often the case for test projects and class libraries. \r\n\r\nConsider the following project structure:\r\n\r\n```\r\nSource\r\n|\r\n \\ WebApi\r\n   |\r\n   \\ WebApi.csproj\r\nTests\r\n|\r\n \\ WebApi.Tests\r\n  |\r\n   \\ WebApi.Tests.csproj\r\n```\r\nand the following definitions for `WebApi.csproj` and `WebApi.Tests.csproj`:\r\n\r\n# `WebApi.csproj`\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <!-- Implicit Version to avoid MSBuild targets warning -->\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" />\r\n    <!--<PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.2.3\" AllowExplicitVersion=\"true\" />-->\r\n</Project>\r\n```\r\n\r\n# `WebApi.Tests.csproj`\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.NET.Test.Sdk\" Version=\"16.0.1\" />\r\n    <PackageReference Include=\"xunit\" Version=\"2.4.1\" />\r\n    <PackageReference Include=\"xunit.runner.visualstudio\" Version=\"2.4.1\">\r\n      <PrivateAssets>all</PrivateAssets>\r\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>\r\n    </PackageReference>\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <!-- This could really be any ProjectReference that transitively references a metapackage -->\r\n    <ProjectReference Include=\"..\\WebApi\\WebApi.csproj\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you build the solution, `Tests\\WebApi.Tests\\obj\\project.assets.json` will show references to Microsoft.AspNetCore.All metapackage for .NET Core 2.1\r\n\r\nThe only solution is to use `AllowExplicitVersion=\"true\"`:\r\n\r\n```xml\r\n<PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.2.3\" AllowExplicitVersion=\"true\" />\r\n```\r\n\r\nThe error message is:\r\n\r\n```\r\nSeverity: Error\t\t\r\nCode: CS1705\r\nDescription: Assembly 'WebApi' with identity 'WebApi, Version=1.5.0.0, Culture=neutral, PublicKeyToken=null' uses 'Microsoft.AspNetCore.Mvc.ViewFeatures, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' which has a higher version than referenced assembly 'Microsoft.AspNetCore.Mvc.ViewFeatures' with identity 'Microsoft.AspNetCore.Mvc.ViewFeatures, Version=2.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'\r\nProject: WebApi.Tests\r\nFile: D:\\source\\John.Zabroski\\Source\\WebApi.Tests\\CSC\r\nLine:\t 1\r\nSuppression State: Active\r\n```","Url":"https://github.com/dotnet/sdk/issues/3046","RelatedDescription":"Open issue \"Implicit references fail transitively\" (#3046)"},{"Id":"425518164","IsPullRequest":false,"CreatedAt":"2019-03-26T16:20:41","Actor":"onovotny","Number":"3044","RawContent":null,"Title":"Restore fails if netstandard1.x package reference is present","State":"open","Body":"SDK version: 3.0.100-preview4-010963\r\n\r\nrepro:\r\n- clone https://github.com/RssBandit/RssBandit\r\n- cd source/RssBandit\r\n- dotnet restore\r\n\r\n\r\n```\r\n  Persisting no-op dg to C:\\dev\\RssBandit\\source\\ChildProjects\\IEControl\\obj\\IEControl.csproj.nuget.dgspec.json\r\n  Persisting no-op dg to C:\\dev\\RssBandit\\source\\RssBandit.AppServices\\obj\\RssBandit.AppServices.csproj.nuget.dgspec.json\r\n  Persisting no-op dg to C:\\dev\\RssBandit\\source\\NewsComponents\\obj\\NewsComponents.csproj.nuget.dgspec.json\r\n  Persisting no-op dg to C:\\dev\\RssBandit\\source\\RssBandit\\obj\\RssBandit.csproj.nuget.dgspec.json\r\n  Restore completed in 22.85 ms for C:\\dev\\RssBandit\\source\\RssBandit.AppServices\\RssBandit.AppServices.csproj.\r\n  Restore completed in 22.83 ms for C:\\dev\\RssBandit\\source\\ChildProjects\\IEControl\\IEControl.csproj.\r\n  Restore completed in 26.1 ms for C:\\dev\\RssBandit\\source\\NewsComponents\\NewsComponents.csproj.\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Runtime.InteropServices from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Console 4.0.0 -> runtime.win.System.Console 4.3.0 -> System.Runtime.InteropServices (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Runtime.InteropServices (>= 4.1.0)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Runtime.Extensions from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.IO.FileSystem 4.0.1 -> runtime.win.System.IO.FileSystem 4.3.0 -> System.Runtime.Extensions (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Runtime.Extensions (>= 4.1.0)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Runtime.InteropServices from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.IO.FileSystem 4.0.1 -> runtime.win.System.IO.FileSystem 4.3.0 -> System.Runtime.InteropServices (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Runtime.InteropServices (>= 4.1.0)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.IO.FileSystem from 4.3.0 to 4.0.1. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Net.Sockets 4.1.0 -> runtime.win.System.Net.Sockets 4.3.0 -> System.IO.FileSystem (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.IO.FileSystem (>= 4.0.1)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Net.NameResolution from 4.3.0 to 4.0.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Net.Sockets 4.1.0 -> runtime.win.System.Net.Sockets 4.3.0 -> System.Net.NameResolution (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Net.NameResolution (>= 4.0.0)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Net.Primitives from 4.3.0 to 4.0.11. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Net.Sockets 4.1.0 -> runtime.win.System.Net.Sockets 4.3.0 -> System.Net.Primitives (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Net.Sockets 4.1.0 -> System.Net.Primitives (>= 4.0.11)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Runtime.Extensions from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Net.Sockets 4.1.0 -> runtime.win.System.Net.Sockets 4.3.0 -> System.Runtime.Extensions (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Runtime.Extensions (>= 4.1.0)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Runtime.InteropServices from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Net.Sockets 4.1.0 -> runtime.win.System.Net.Sockets 4.3.0 -> System.Runtime.InteropServices (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Runtime.InteropServices (>= 4.1.0)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Runtime.InteropServices from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Diagnostics.Process 4.1.0 -> Microsoft.Win32.Primitives 4.0.1 -> runtime.win.Microsoft.Win32.Primitives 4.3.0 -> System.Runtime.InteropServices (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Runtime.InteropServices (>= 4.1.0)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Runtime.InteropServices from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.IO.FileSystem.Watcher 4.0.0 -> Microsoft.Win32.Primitives 4.0.1 -> runtime.win.Microsoft.Win32.Primitives 4.3.0 -> System.Runtime.InteropServices (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Runtime.InteropServices (>= 4.1.0)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Runtime.Extensions from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Net.NameResolution 4.0.0 -> System.Net.Primitives 4.0.11 -> runtime.win.System.Net.Primitives 4.3.0 -> System.Runtime.Extensions (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Runtime.Extensions (>= 4.1.0)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Runtime.InteropServices from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Net.NameResolution 4.0.0 -> System.Net.Primitives 4.0.11 -> runtime.win.System.Net.Primitives 4.3.0 -> System.Runtime.InteropServices (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Runtime.InteropServices (>= 4.1.0)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Runtime.Extensions from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Net.Requests 4.0.11 -> System.Net.Primitives 4.0.11 -> runtime.win.System.Net.Primitives 4.3.0 -> System.Runtime.Extensions (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Runtime.Extensions (>= 4.1.0)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Runtime.InteropServices from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Net.Requests 4.0.11 -> System.Net.Primitives 4.0.11 -> runtime.win.System.Net.Primitives 4.3.0 -> System.Runtime.InteropServices (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Runtime.InteropServices (>= 4.1.0)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Runtime.Extensions from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Net.Sockets 4.1.0 -> System.Net.Primitives 4.0.11 -> runtime.win.System.Net.Primitives 4.3.0 -> System.Runtime.Extensions (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Runtime.Extensions (>= 4.1.0)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Runtime.InteropServices from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Net.Sockets 4.1.0 -> System.Net.Primitives 4.0.11 -> runtime.win.System.Net.Primitives 4.3.0 -> System.Runtime.InteropServices (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Runtime.InteropServices (>= 4.1.0)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Runtime.InteropServices from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Net.NameResolution 4.0.0 -> System.Security.Principal.Windows 4.0.0 -> Microsoft.Win32.Primitives 4.0.1 -> runtime.win.Microsoft.Win32.Primitives 4.3.0 -> System.Runtime.InteropServices (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Runtime.InteropServices (>= 4.1.0)\r\n  Restore failed in 467.8 ms for C:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj.\r\n\r\n```\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3044","RelatedDescription":"Open issue \"Restore fails if netstandard1.x package reference is present\" (#3044)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"},{"Id":"359151445","IsPullRequest":false,"CreatedAt":"2018-09-11T17:44:50","Actor":"leecow","Number":"84","RawContent":null,"Title":"September 2018 .NET Updates","State":"open","Body":"# September 2018 .NET Updates\r\n\r\nThe following .NET updates were released in September 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework September 2018 Security and Quality Rollup - September 11, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/09/11/net-framework-september-2018-security-and-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core September 2018 Update - September 11, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.4/2.1.4.md)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/84","RelatedDescription":"Open issue \"September 2018 .NET Updates\" (#84)"},{"Id":"359136325","IsPullRequest":false,"CreatedAt":"2018-09-11T17:00:55","Actor":"blowdart","Number":"83","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in .NET Core when System.IO.Pipelines improperly handles requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an application that is leveraging System.IO.Pipelines. The vulnerability can be exploited remotely, without authentication. A remote unauthenticated attacker could exploit this vulnerability by providing specially crafted requests to the application.\r\n\r\nThe update addresses the vulnerability by correcting how System.IO.Pipelines handles requests.\r\n\r\nIf you are using ASP.NET Core 2.1 you will also need to update your ASP.NET version this by following the instructions in the [ASP.NET Core bulletin](https://github.com/aspnet/Announcements/issues/316).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/32228\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.IO.Pipelines package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Pipelines | 4.5.0 | 4.5.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications which use System.IO.Pipelines\r\n\r\nSystem.IO.Pipelines is distributed both in ASP.NET Core 2.1 and separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the System.IO.Pipelines package.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8409](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8409)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 11, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-09-11_\r\n","Url":"https://github.com/dotnet/announcements/issues/83","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\" (#83)"},{"Id":"357399856","IsPullRequest":false,"CreatedAt":"2018-09-05T20:56:25","Actor":"richlander","Number":"82","RawContent":null,"Title":".NET Core Runtime ARM64 Status","State":"open","Body":"# .NET Core Runtime ARM64 Status\r\n\r\nThe .NET Core team is in the process of adding support for ARM64, as part of the .NET Core 3.0 project. This issue will be updated as ARM64 support progresses.\r\n\r\n[.NET Core 3.0 Preview 1](https://github.com/dotnet/core/issues/2099) includes support for Linux ARM64. Please try this build and provide support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/coreclr #19843](https://github.com/dotnet/coreclr/issues/19843)\r\n\r\n## Current Status\r\n\r\nARM64 builds are functional, for console and ASP.NET Core apps.\r\n\r\n## Details\r\n\r\nInitial support for ARM64 was added in the .NET Core 2.1 release. The team is not maintaining .NET Core 2.x branches with respect to ARM64. All ARM64 improvements will be made in the .NET Core 3.0 branch (currently [master](https://github.com/dotnet/coreclr)).\r\n\r\nSee [Installing .NET Core 3.0 on Linux ARM64](https://gist.github.com/richlander/467813274cea8abc624553ee72b28213) to install .NET Core on your ARM64 machine. Builds are available from the [daily builds page](https://github.com/dotnet/core/blob/master/daily-builds.md).\r\n\r\n## Bug Queries\r\n\r\nthe following bugs queries are available for ARM64:\r\n\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n\r\n## Operating Systems\r\n\r\n.NET Core 3.0 ARM64 builds are tested on the following operating systems:\r\n\r\n* Ubuntu 16.04 and 18.04\r\n* Debian 9\r\n\r\n## Test Hardware\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following hardware:\r\n\r\n* [NVIDIA Jetson TX2 Module](https://developer.nvidia.com/embedded/buy/jetson-tx2)\r\n* [Pine A64](https://www.pine64.org/?page_id=46823)\r\n* [Qualcomm Centriq 2400](https://www.qualcomm.com/products/qualcomm-centriq-2400-processor)\r\n* [Qualcomm Snapdragon](https://www.qualcomm.com/snapdragon/always-connected-pc)\r\n* [Raspberry Pi3](https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/)","Url":"https://github.com/dotnet/announcements/issues/82","RelatedDescription":"Open issue \".NET Core Runtime ARM64 Status\" (#82)"},{"Id":"349693735","IsPullRequest":false,"CreatedAt":"2018-08-22T18:23:01","Actor":"richlander","Number":"80","RawContent":null,"Title":"Improving Performance of ARM32 Docker Images with .NET Core Package Cache","State":"closed","Body":"# Improving Performance of ARM32 Docker Images with .NET Core Package Cache\r\n\r\n.NET Core SDK distributions include a compressed copy of NuGet packages for .NET Core, ASP.NET Core and EF Core. These packages are decompressed upon installation of the .NET Core SDK. The packages are not currently included in ARM32 distributions due to the time and space cost to decompress the packages. Instead, they will be added to [.NET Core ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/), where these costs can be paid as part of image creation.\r\n\r\nThese NuGet packages include content for two purposes:\r\n\r\n- Reference assemblies for .NET Core, for code compilation.\r\n- Pre-compiled assemblies (compiled with [crossgen](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md)) for .NET Core, for use in self-contained applications.\r\n\r\nIn both cases, the presence of these packages avoid the need to access remote NuGet feeds for .NET Core assemblies as part of package restore.\r\n\r\nThis change only affects [.NET Core 2.1 SDK ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/). This change will be made in August 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #653](https://github.com/dotnet/dotnet-docker/issues/653)\r\n\r\n## .NET Core SDK NugetFallbackFolder\r\n\r\nThe .NET Core SDK includes a compressed copy of all NuGet package, in LZMA format. It exists at the following version-specific location:\r\n\r\n```\r\nroot@3778032bc43d:/# ls -l /usr/share/dotnet/sdk/2.1.302/*.lzma\r\n-rw-r--r-- 1 1004 sudo 35995936 Jul  2 22:51 /usr/share/dotnet/sdk/2.1.302/nuGetPackagesArchive.lzma\r\n```\r\n\r\nThis file is decompressed to the following location: `/usr/share/dotnet/sdk/NuGetFallbackFolder/`\r\n\r\nA package restore for a .NET Core assembly will restore the assembly from the NuGetFallbackFolder location and copy it to the user NuGet cache. At that point, regular NuGet behavior is used.\r\n\r\n## Impact of this change\r\n\r\nThere should be no functional difference in behavior after this change. .NET SDK commands should complete faster and require fewer package restore network requests.\r\n\r\nThe following examples demonstrates the benefit of this change. The improvement can be observed with package restore. Build times (assuming no restore) are not affected.\r\n\r\n### .NET Core 2.1 SDK image after this change\r\n\r\n> The change has already been made in the `microsoft/dotnet-nightly` repo, as you can see in the example below. In August, this same change will be made available in the `microsoft/dotnet` repo.\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet-nightly:2.1-sdk\r\nroot@416731f24915:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 6.68 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    0m32.496s\r\nuser    0m35.820s\r\nsys     0m4.280s\r\nroot@416731f24915:/# cd mvcapp/\r\nroot@416731f24915:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.8.138-preview+ge0cd4f1c1f for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 524.78 ms for /mvcapp/mvcapp.csproj.\r\n/usr/share/dotnet/sdk/2.1.401-preview-009081/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(143,5): message NETSDK1057: You are working with a preview version of the .NET Core SDK. You can define the SDK version via a global.json file in the current project. More at https://go.microsoft.com/fwlink/?linkid=869452 [/mvcapp/mvcapp.csproj]\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:09.15\r\n\r\nreal    2m13.377s\r\nuser    1m25.260s\r\nsys     0m9.420s\r\nroot@416731f24915:/mvcapp#\r\n```\r\n\r\n### .NET Core 2.1 SDK image before this change\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet:2.1-sdk\r\nroot@9d1d5e45df6a:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Installing System.Xml.XmlSerializer 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.0.0.\r\n  Installing System.Globalization.Extensions 4.0.1.\r\n  Installing runtime.native.System.Security.Cryptography 4.0.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.0.0.\r\n  Installing System.Security.Cryptography.Cng 4.2.0.\r\n  Installing System.Security.Cryptography.Csp 4.0.0.\r\n  Installing runtime.native.System.Net.Http 4.0.1.\r\n  Installing runtime.native.System 4.0.0.\r\n  Installing runtime.native.System.IO.Compression 4.1.0.\r\n  Installing System.Buffers 4.0.0.\r\n  Installing System.Private.DataContractSerialization 4.3.0.\r\n  Installing System.Security.Principal 4.3.0.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing runtime.rhel.7-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.ubuntu.14.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.opensuse.42.1-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.App 2.1.0.\r\n  Installing runtime.ubuntu.16.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.App 2.1.1.\r\n  Installing runtime.ubuntu.16.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 2.1.0.\r\n  Installing Microsoft.NETCore.Targets 2.1.0.\r\n  Installing NETStandard.Library 2.0.3.\r\n  Installing Microsoft.NETCore.DotNetHostPolicy 2.1.0.\r\n  Installing Microsoft.AspNetCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Antiforgery 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Session 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.KeyPerFile 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Embedded 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Physical 2.1.1.\r\n  Installing Microsoft.Extensions.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Cookies 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Core 2.1.1.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.Authentication.Google 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Facebook 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting.Abstractions 2.1.1.\r\n  Installing runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.HttpsPolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.MicrosoftAccount 2.1.1.\r\n  Installing Microsoft.Extensions.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.MiddlewareAnalysis 2.1.1.\r\n  Installing Microsoft.Extensions.FileSystemGlobbing 2.1.1.\r\n  Installing Microsoft.Extensions.DiagnosticAdapter 2.1.0.\r\n  Installing Microsoft.Extensions.Identity.Core 2.1.1.\r\n  Installing Microsoft.Extensions.Identity.Stores 2.1.1.\r\n  Installing Microsoft.Extensions.Options.ConfigurationExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Localization.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Abstractions 2.1.1.\r\n  Installing runtime.fedora.24-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Options 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Composite 2.1.1.\r\n  Installing Microsoft.Extensions.Logging 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.TraceSource 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.UserSecrets 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Debug 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Console 2.1.1.\r\n  Installing Microsoft.Extensions.DependencyInjection 2.1.1.\r\n  Installing Microsoft.Extensions.ObjectPool 2.1.1.\r\n  Installing runtime.debian.8-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.DependencyInjection.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Binder 2.1.1.\r\n  Installing runtime.fedora.23-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Configuration.EnvironmentVariables 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.FileExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Memory 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.CommandLine 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Abstractions 2.1.1.\r\n  Installing Microsoft.Net.Http.Headers 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.InMemory 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Ini 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.StaticFiles 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Relational 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Https 2.1.1.\r\n  Installing Microsoft.Extensions.Primitives 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel 2.1.1.\r\n  Installing Microsoft.Extensions.WebEncoders 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebUtilities 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR 1.0.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Tools 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Rewrite 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCompression 2.1.1.\r\n  Installing System.Globalization.Extensions 4.3.0.\r\n  Installing Microsoft.AspNetCore.Razor.Language 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.TagHelpers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Runtime 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.RazorPages 2.1.1.\r\n  Installing Microsoft.AspNetCore.Owin 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.ViewCompilation 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Json 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebSockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Cors 2.1.1.\r\n  Installing System.Diagnostics.DiagnosticSource 4.3.0.\r\n  Installing Microsoft.AspNetCore.Mvc.DataAnnotations 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ApiExplorer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.EventSource 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OAuth 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Json 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Protocols.Json 1.0.1.\r\n  Installing Microsoft.AspNetCore.NodeServices 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.JsonPatch 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization.Routing 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.IISIntegration 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.UI 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HttpOverrides 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Features 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cors 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Server.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.Internal 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.KeyDerivation 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HostFiltering 2.1.1.\r\n  Installing Microsoft.CSharp 4.0.1.\r\n  Installing Microsoft.AspNetCore.CookiePolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Core 2.1.1.\r\n  Installing Microsoft.AspNetCore.Html.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Twitter 2.1.1.\r\n  Installing Microsoft.AspNetCore.Connections.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization.Policy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.HttpSys 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.SqlServer 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.SqlServer 2.1.1.\r\n  Installing Microsoft.AspNet.WebApi.Client 5.2.6.\r\n  Installing Microsoft.AspNetCore.SignalR.Core 1.0.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ViewFeatures 2.1.1.\r\n  Installing Microsoft.CodeAnalysis.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.JwtBearer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OpenIdConnect 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.WsFederation 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore 2.1.1.\r\n  Installing System.Runtime.Serialization.Primitives 4.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Core 2.1.1.\r\n  Installing System.Xml.ReaderWriter 4.0.11.\r\n  Installing Microsoft.NETCore.DotNetHostResolver 2.1.0.\r\n  Installing System.Diagnostics.DiagnosticSource 4.5.0.\r\n  Installing System.ComponentModel.Annotations 4.5.0.\r\n  Installing System.Buffers 4.5.0.\r\n  Installing System.Memory 4.5.1.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.1.\r\n  Installing System.Text.Encodings.Web 4.5.0.\r\n  Installing Microsoft.CSharp 4.5.0.\r\n  Installing System.Net.WebSockets.WebSocketProtocol 4.5.1.\r\n  Installing Newtonsoft.Json 11.0.2.\r\n  Installing System.IO.Pipelines 4.5.0.\r\n  Installing System.Numerics.Vectors 4.5.0.\r\n  Installing System.Security.Principal.Windows 4.5.0.\r\n  Installing System.Threading.Tasks.Extensions 4.5.1.\r\n  Installing System.Security.Cryptography.Cng 4.5.0.\r\n  Installing System.Net.Http 4.1.0.\r\n  Installing System.Security.Cryptography.Xml 4.5.0.\r\n  Installing Microsoft.Win32.Registry 4.5.0.\r\n  Installing System.Reflection.Metadata 1.6.0.\r\n  Installing System.Data.SqlClient 4.5.1.\r\n  Installing Newtonsoft.Json.Bson 1.0.1.\r\n  Installing Newtonsoft.Json 10.0.1.\r\n  Installing System.Threading.Channels 4.5.0.\r\n  Installing System.Reflection.Emit 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.CSharp 2.8.0.\r\n  Installing Microsoft.CodeAnalysis.Common 2.8.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.OpenIdConnect 5.2.0.\r\n  Installing System.IdentityModel.Tokens.Jwt 5.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.WsFederation 5.2.0.\r\n  Installing System.Collections.Immutable 1.5.0.\r\n  Installing Remotion.Linq 2.2.0.\r\n  Installing System.Interactive.Async 3.1.1.\r\n  Installing Microsoft.Extensions.DependencyModel 2.1.0.\r\n  Installing Microsoft.NETCore.DotNetAppHost 2.1.0.\r\n  Installing Microsoft.NETCore.Platforms 2.0.0.\r\n  Installing System.Security.Cryptography.Pkcs 4.5.0.\r\n  Installing System.Security.Permissions 4.5.0.\r\n  Installing System.Security.AccessControl 4.5.0.\r\n  Installing NETStandard.Library 1.6.1.\r\n  Installing System.Text.Encoding.CodePages 4.5.0.\r\n  Installing System.Linq 4.3.0.\r\n  Installing runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing System.Diagnostics.Debug 4.3.0.\r\n  Installing System.Globalization 4.3.0.\r\n  Installing System.IO 4.3.0.\r\n  Installing System.Collections 4.3.0.\r\n  Installing System.Runtime.Serialization.Primitives 4.3.0.\r\n  Installing System.Runtime.Serialization.Formatters 4.3.0.\r\n  Installing System.Xml.XmlDocument 4.3.0.\r\n  Installing System.Threading 4.3.0.\r\n  Installing System.Resources.ResourceManager 4.3.0.\r\n  Installing System.Text.Encoding.Extensions 4.3.0.\r\n  Installing System.Xml.XDocument 4.3.0.\r\n  Installing System.Threading.Tasks 4.3.0.\r\n  Installing System.Linq.Expressions 4.3.0.\r\n  Installing System.Runtime.Numerics 4.3.0.\r\n  Installing System.Text.Encoding 4.3.0.\r\n  Installing System.Reflection.Extensions 4.3.0.\r\n  Installing System.Text.RegularExpressions 4.3.0.\r\n  Installing System.Runtime.Extensions 4.3.0.\r\n  Installing System.Reflection 4.3.0.\r\n  Installing System.ObjectModel 4.3.0.\r\n  Installing System.Dynamic.Runtime 4.3.0.\r\n  Installing System.Xml.ReaderWriter 4.3.0.\r\n  Installing Microsoft.CSharp 4.3.0.\r\n  Installing System.ComponentModel.TypeConverter 4.3.0.\r\n  Installing System.Runtime 4.3.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.3.0.\r\n  Installing System.Reflection.Primitives 4.3.0.\r\n  Installing System.AppContext 4.3.0.\r\n  Installing System.Console 4.3.0.\r\n  Installing System.Collections.Concurrent 4.3.0.\r\n  Installing System.Diagnostics.Tools 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.0.0.\r\n  Installing System.IO.Compression 4.3.0.\r\n  Installing System.IO.FileSystem 4.3.0.\r\n  Installing System.IO.FileSystem.Primitives 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.3.0.\r\n  Installing System.Collections.Immutable 1.3.1.\r\n  Installing System.Runtime.InteropServices 4.3.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.1.0.\r\n  Installing System.Diagnostics.StackTrace 4.3.0.\r\n  Installing System.Reflection.Metadata 1.4.2.\r\n  Installing System.Threading.Thread 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.Analyzers 1.1.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.3.0.\r\n  Installing System.ValueTuple 4.3.0.\r\n  Installing System.Diagnostics.FileVersionInfo 4.3.0.\r\n  Installing System.Threading.Tasks.Parallel 4.3.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.3.0.\r\n  Installing System.Xml.XPath.XDocument 4.3.0.\r\n  Installing System.Text.Encoding.CodePages 4.3.0.\r\n  Installing System.Runtime.InteropServices 4.1.0.\r\n  Installing Microsoft.IdentityModel.Protocols 5.2.0.\r\n  Installing Microsoft.IdentityModel.Tokens 5.2.0.\r\n  Installing Microsoft.IdentityModel.Xml 5.2.0.\r\n  Installing System.Diagnostics.Debug 4.0.11.\r\n  Installing System.Reflection.Extensions 4.0.1.\r\n  Installing Microsoft.IdentityModel.Tokens.Saml 5.2.0.\r\n  Installing System.Runtime.Extensions 4.1.0.\r\n  Installing System.Threading 4.0.11.\r\n  Installing System.Collections 4.0.11.\r\n  Installing System.Reflection 4.1.0.\r\n  Installing System.ObjectModel 4.0.12.\r\n  Installing System.Linq 4.1.0.\r\n  Installing System.Linq.Queryable 4.0.1.\r\n  Installing System.Linq.Expressions 4.1.0.\r\n  Installing System.Runtime 4.1.0.\r\n  Installing NETStandard.Library 1.6.0.\r\n  Installing System.Dynamic.Runtime 4.0.11.\r\n  Installing Newtonsoft.Json 9.0.1.\r\n  Installing Microsoft.DotNet.PlatformAbstractions 2.1.0.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.0.\r\n  Installing runtime.win-x64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-x86.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-arm64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing Microsoft.NETCore.Platforms 1.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.3.0.\r\n  Installing System.Net.Sockets 4.3.0.\r\n  Installing System.Diagnostics.Tracing 4.3.0.\r\n  Installing System.IO.Compression.ZipFile 4.3.0.\r\n  Installing System.Globalization.Calendars 4.3.0.\r\n  Installing System.Threading.Timer 4.3.0.\r\n  Installing System.Security.Cryptography.Primitives 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.0.0.\r\n  Installing System.Runtime.Handles 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.3.0.\r\n  Installing System.Net.Http 4.3.0.\r\n  Installing Microsoft.NETCore.Targets 1.1.0.\r\n  Installing System.Net.Primitives 4.3.0.\r\n  Installing System.Reflection.Emit.Lightweight 4.3.0.\r\n  Installing System.Reflection.TypeExtensions 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.3.0.\r\n  Installing System.ComponentModel 4.3.0.\r\n  Installing System.ComponentModel.Primitives 4.3.0.\r\n  Installing System.Collections.NonGeneric 4.3.0.\r\n  Installing System.Collections.Specialized 4.3.0.\r\n  Installing runtime.native.System 4.3.0.\r\n  Installing runtime.native.System.IO.Compression 4.3.0.\r\n  Installing System.Buffers 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.native.System.Net.Http 4.3.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing System.Security.Cryptography.Cng 4.3.0.\r\n  Installing System.Security.Cryptography.Csp 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing System.Xml.XPath 4.3.0.\r\n  Installing Microsoft.IdentityModel.Logging 5.2.0.\r\n  Installing System.Diagnostics.Contracts 4.3.0.\r\n  Installing System.Runtime.Serialization.Xml 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 1.0.1.\r\n  Installing Microsoft.NETCore.Targets 1.0.1.\r\n  Installing System.Security.Claims 4.3.0.\r\n  Installing System.Reflection.Primitives 4.0.1.\r\n  Installing System.IO 4.1.0.\r\n  Installing System.Globalization 4.0.11.\r\n  Installing System.Threading.Tasks 4.0.11.\r\n  Installing System.Resources.ResourceManager 4.0.1.\r\n  Installing System.Reflection.Emit 4.0.1.\r\n  Installing System.Reflection.TypeExtensions 4.1.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.0.1.\r\n  Installing System.Reflection.Emit.Lightweight 4.0.1.\r\n  Installing System.AppContext 4.1.0.\r\n  Installing System.Collections.Concurrent 4.0.12.\r\n  Installing System.IO.FileSystem.Primitives 4.0.1.\r\n  Installing System.Runtime.Numerics 4.0.1.\r\n  Installing System.Security.Cryptography.Primitives 4.0.0.\r\n  Installing System.Xml.XDocument 4.0.11.\r\n  Installing System.Text.RegularExpressions 4.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.0.1.\r\n  Installing System.Console 4.0.0.\r\n  Installing System.Diagnostics.Tools 4.0.1.\r\n  Installing System.Diagnostics.Tracing 4.1.0.\r\n  Installing System.Globalization.Calendars 4.0.1.\r\n  Installing System.IO.FileSystem 4.0.1.\r\n  Installing System.Net.Sockets 4.1.0.\r\n  Installing System.Text.Encoding 4.0.11.\r\n  Installing System.Threading.Timer 4.0.1.\r\n  Installing System.Net.Primitives 4.0.11.\r\n  Installing System.Runtime.Handles 4.0.1.\r\n  Installing System.Text.Encoding.Extensions 4.0.11.\r\n  Installing System.IO.Compression.ZipFile 4.0.1.\r\n  Installing System.IO.Compression 4.1.0.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 44.04 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    1m8.386s\r\nuser    1m8.010s\r\nsys     0m18.190s\r\nroot@9d1d5e45df6a:/# cd mvcapp/\r\nroot@9d1d5e45df6a:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 557.76 ms for /mvcapp/mvcapp.csproj.\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:07.34\r\n\r\nreal    2m11.716s\r\nuser    1m22.990s\r\nsys     0m8.880s\r\nroot@9d1d5e45df6a:/mvcapp#\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/80","RelatedDescription":"Closed issue \"Improving Performance of ARM32 Docker Images with .NET Core Package Cache\" (#80)"},{"Id":"350233220","IsPullRequest":false,"CreatedAt":"2018-08-13T23:50:57","Actor":"richlander","Number":"81","RawContent":null,"Title":"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+","State":"open","Body":"# Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\r\n\r\nAn [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md) was discovered with [.NET Framework 4.7.1](https://blogs.msdn.microsoft.com/dotnet/2017/10/17/announcing-the-net-framework-4-7-1/). This issue was resolved earlier this year, with the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/). We recently learned that some applications, including Johnson Controls’ C-CURE 9000 Software, were negatively impacted by this change as this update requires all client and server workstations to be updated simultaneously with the appropriate Microsoft updates. The changes made to .NET Framework 4.7.1 were also integrated into .NET Framework 4.6 and later servicing releases. As a result, this advisory applies to .NET Framework 4.6 and later versions.\r\n\r\nThis advisory is provided so that developers can correctly diagnose this issue and be aware of our guidance. We will continue to update this issue as we have new information to share.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #832](https://github.com/Microsoft/dotnet/issues/832)\r\n\r\n## Guidance\r\n\r\nThis guidance only applies to customers that have experienced this issue.\r\n\r\nWe have released [an update for .NET Framework 4.6](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/) and later that resolves the issue. **You must deploy the .NET Framework update for this issue to all .NET Framework 4.6+ machines that communicate via serialized objects**. After doing that, cross-machine serialization will work as expected. \r\n \r\nPlease consult your software vendor to understand if this impacts the software you are using.\r\n\r\n## Technical Context\r\n\r\nIn the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/), we made a change to the internal type CultureAwareComparer to implement ISerializable. We made the change in order to address [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md).\r\n\r\nThe issue reported was that a type that contains an instance of CultureAwareComparer was not able to correctly serialize and deserialize across different versions of the .NET Framework. There are a few types in .NET Framework that do this, the most commonly impacted one being the Dictionary<TKey, TValue> type.\r\n \r\nThe change to implement the ISerializable interface had unintended side effects when exchanging this type across different machines. We have had a small number of reports from customers who have been affected.\r\n\r\nA common, but not unique way, of exchanging objects across machines is to use WCF in conjunction with a serializer. One of the common serializers being DataContractSerializer. The side-effect of the change prevented data serialized on systems where the type implements ISerializable to correctly deserialize of systems where the type does NOT implement ISerializable. The same is true of the opposite case, that systems where the type does not implement ISerializable will not correctly deserialize data from systems where the type does implement ISerializable.\r\n\r\nWe have an updated fix that we intend to release within the next month that will remove the implementation of the ISerializable interface on the type and use a different internal mechanism for ensuring the cross-version serialization continues to work as expected. This change addresses the break experienced with WCF.\r\n\r\nThe upcoming fix will remove the implementation of the ISerializable interface on the type and use a different mechanism for ensuring the cross-version serialization of that type continues to work. This change addresses the break experienced with WCF.\r\n\r\n## Symptoms\r\n\r\nAn application that is affected by this issue will most likely crash when trying to deserialize an object. It may print or log an error message similar to the following one:\r\n\r\n```\r\nThe formatter threw an exception while trying to deserialize the message: \r\nThere was an error while trying to deserialize parameter . The InnerException message was ''EndElement' 'Comparer' from namespace '' is not expected. Expecting element '_compareInfo'.'.  Please see InnerException for more details.\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/81","RelatedDescription":"Open issue \"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\" (#81)"},{"Id":"348162872","IsPullRequest":false,"CreatedAt":"2018-08-07T04:26:40","Actor":"richlander","Number":"79","RawContent":null,"Title":"August 2018 .NET Updates","State":"open","Body":"# August 2018 .NET Updates\r\n\r\nThe following .NET updates were released in August 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [August 2018 .NET Framework Security and Quality Rollup - August 14, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/)\r\n* [Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+](https://github.com/dotnet/announcements/issues/81)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [August 2018 Preview of Quality Rollup - August 30, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core August 2018 Update - August 21, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.3/2.1.3.md)\r\n* [.NET Core 2.1.400 SDK Update - August 14, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.400-SDK/2.1.400-sdk.md)\r\n\r\n## End of Support for Operating System Versions\r\n\r\n.NET Core does not support systems that are out of support. The following operating systems are now out of support. To stay supported, move to a [later version of the given operating system](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md).\r\n\r\n* [Debian 8 -- Jessie](https://lists.debian.org/debian-security-announce/2018/msg00132.html)\r\n* [Ubuntu 17.10 -- Artful Aardvark](https://lists.ubuntu.com/archives/ubuntu-announce/2018-July/000232.html)\r\n\r\nSee [Debian Jessie End of Life -- Impact on .NET Core Docker Images](https://github.com/dotnet/announcements/issues/78)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/79","RelatedDescription":"Open issue \"August 2018 .NET Updates\" (#79)"},{"Id":"348161534","IsPullRequest":false,"CreatedAt":"2018-08-07T04:18:01","Actor":"richlander","Number":"78","RawContent":null,"Title":"Debian Jessie End of Life -- Impact on .NET Core Docker Images","State":"open","Body":"# Debian Jessie End of Life -- Impact on .NET Core Docker Images\r\n\r\nDebian Jessie (AKA Debian 8) is now [out of support](https://lists.debian.org/debian-security-announce/2018/msg00132.html). Debian Jessie is no longer a supported operating system for .NET Core. Docker users need to switch to Debian Stretch-based (AKA Debian 9) images to stay in support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #647](https://github.com/dotnet/dotnet-docker/issues/647)\r\n\r\n## Context\r\n\r\nJessie-based images are currently provided for .NET Core 1.0, 1.1 and 2.0. .NET Core 1.0 and 1.1 expose multi-arch tags, such as `1.0-runtime` and `1.1-sdk`, that support Debian Jessie. When pulled for a Linux Docker daemon (on Linux or Windows), these tags pull Jessie-based images. .NET Core 2.0 supports Jessie, but it is not the default. .NET Core 2.0 multi-arch tags, such as `2.0-runtime` and `2.0-sdk`, pull Debian Stretch-based images, when pulled for a Linux Docker daemon. We made a conscious decision with .NET Core 2.0 to move off of Jessie as the default to avoid this problem, based the Jessie 2018 EOL date. .NET Core 2.1 does not support Jessie, only Stretch.\r\n\r\nWe recently posted about our policy for underlying operating system dependencies with Docker:\r\n\r\n> For each major and minor .NET version, we may take a new major operating system version dependency. As I mentioned earlier, we adopted Debian 9 as the base image for .NET Core 2.0. We stayed with Debian 9 for .NET Core 2.1, since Debian 10 (AKA “Buster”) has not been released. Debian 9 will remain the default base image for .NET Core 2.1 for the life of .NET Core 2.1. **Once we adopt an underlying operating system major version, we will not change it for the life of that given .NET release.**\r\n\r\nSource: https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/\r\n\r\n## Plan\r\n\r\nWe will continue to re-build .NET Core 1.0 and 1.1 multi-arch tags on top of Jessie for the remaining [supported lifetime of .NET Core 1.0 and 1.1](https://github.com/dotnet/core/blob/master/microsoft-support.md). We will also provide a Stretch-based image for .NET Core 1.1. This tag will look like the following: `1.1-runtime-stretch` or `1.1.9-sdk-stretch`. This is same format that Jessie has used.\r\n\r\nWe will produce Jessie-based images for NET Core 2.0 until October 2018, which is when [.NET Core 2.0 support ends](https://github.com/dotnet/core/blob/master/microsoft-support.md). .NET Core 2.0 multi-arch tags support Debian Stretch, not Jessie, as described above.\r\n\r\nIn summary, .NET Core is no longer supported on Debian Jessie, with Docker or otherwise. We will produce Docker images for Jessie until .NET Core 1.0, 1.1 and 2.0 support ends, respectively, to avoid breaking applications. This aligns with the policy defined above, per [Staying up-to-date with .NET Container Images](https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/).\r\n\r\n## Affected Repos\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)","Url":"https://github.com/dotnet/announcements/issues/78","RelatedDescription":"Open issue \"Debian Jessie End of Life -- Impact on .NET Core Docker Images\" (#78)"},{"Id":"345028102","IsPullRequest":false,"CreatedAt":"2018-07-26T22:31:32","Actor":"leecow","Number":"77","RawContent":null,"Title":"https://dot.net now using TLS 1.2-only","State":"open","Body":"Earlier today, https://dot.net switched to using TLS 1.2-only. Most Windows Powershell instances default to TLS 1.1 and will thus fail with `wget : The underlying connection was closed: An unexpected error occurred on a send. trying to run the previous command.`\r\n\r\nAn example of a PowerShell script fix can be seen in https://github.com/dotnet/docs/pull/6689","Url":"https://github.com/dotnet/announcements/issues/77","RelatedDescription":"Open issue \"https://dot.net now using TLS 1.2-only\" (#77)"},{"Id":"343360319","IsPullRequest":false,"CreatedAt":"2018-07-21T22:29:05","Actor":"richlander","Number":"76","RawContent":null,"Title":"July 2018 .NET Updates","State":"open","Body":"# July 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework 4.7.2 is available on Windows Update, WSUS and MU Catalog](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-framework-4-7-2-is-available-on-windows-update-wsus-and-mu-catalog/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3632](https://blogs.msdn.microsoft.com/dotnet/2018/07/18/announcing-net-framework-4-8-early-access-build-3632/)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-core-july-2018-update/)\r\n\r\n## .NET Core Support Policies\r\n\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core Supported OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n","Url":"https://github.com/dotnet/announcements/issues/76","RelatedDescription":"Open issue \"July 2018 .NET Updates\" (#76)"},{"Id":"343360017","IsPullRequest":false,"CreatedAt":"2018-07-21T22:22:25","Actor":"richlander","Number":"75","RawContent":null,"Title":"June 2018 .NET Updates","State":"open","Body":"# June 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework June 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/06/13/net-framework-june-2018-security-and-quality-rollup/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3621!](https://blogs.msdn.microsoft.com/dotnet/2018/06/06/announcing-net-framework-4-8-early-access-build-3621/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core 2.1 June Update](https://blogs.msdn.microsoft.com/dotnet/2018/06/22/net-core-2-1-june-update/)\r\n* [.NET Core 2.0 will reach End of Life on October 1, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core 1.0 and 1.1 EOL Dates Documented](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n\r\n## Previous Updates\r\n\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n* [February 2018](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/75","RelatedDescription":"Open issue \"June 2018 .NET Updates\" (#75)"},{"Id":"343283437","IsPullRequest":false,"CreatedAt":"2018-07-21T00:56:48","Actor":"richlander","Number":"74","RawContent":null,"Title":"Advisory on July 2018 .NET Framework Updates","State":"open","Body":"# Advisory on July 2018 .NET Framework Updates\r\n\r\nUpdated: 08/14/2018\r\n\r\n> A new [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/) has been released that **resolves this advisory for all supported Windows versions**.\r\n\r\n~~A new [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) has been released that resolves this advisory. See Guidance section.~~\r\n\r\n~~Guidance has changed for Windows 7, Windows Server 2008 and Windows Server 2008 R2. See Guidance section.~~\r\n\r\nThe [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) was released earlier this month. We have received multiple customer reports of [applications that fail to start or don't run correctly](https://support.microsoft.com/en-us/help/4345913) after installing the July 2018 update. These reports are specific to applications that initialize a COM component and run with restricted permissions.\r\n\r\nWe have stopped distributing the .NET Framework July 2018 updates on Windows Update and are actively working on fixing and re-shipping this month's updates. If you installed the July 2018 update and have not yet seen any negative behavior, we recommend that you leave your systems as-is but closely monitor them and ensure that you apply upcoming .NET Framework updates.\r\n\r\nAs a team, we regret that this release was shipped with this flaw. This release was tested using our regular and extensive testing process. We discovered while investigating this issue that we have a test hole for the specific combination of COM activation and restricted permissions, including impersonation. We will be mitigating that gap going forward. Again, we are sorry for any inconvenience that this product flaw has caused.\r\n\r\nWe will continue to update this issue and [post](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/) as we have new information.\r\n\r\n## Discussion\r\nPlease share your thoughts/experience on this advisory and see what others are saying at:\r\n\r\n* [microsoft/dotnet #811](https://github.com/Microsoft/dotnet/issues/811)\r\n\r\n## Guidance\r\n\r\nWe strongly recommend that you install [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/).\r\n\r\n~~We recommend that you install [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) on your systems if you experienced the symptoms described in this advisory. If you did not experience these symptoms, we recommend you wait to update your machines until the next regular update, in August.~~\r\n\r\n~~On Windows 7, Windows Server 2008, and Windows Server 2008 R2, we have found that the combination of [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) and  [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) do not resolve all symptoms. On these Windows versions, if you are experiencing these symptoms after installing this combination of patches, we recommend that you uninstall (only) the Monthly Rollup patch and then install the appropriate Security Only patch listed at [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356).~~\r\n\r\n## Technical Context\r\n\r\nThe .NET Framework runtime uses the process token to determine whether the process is being run within an elevated context. These system calls can fail if the required process inspection permissions are not present. This causes an “access denied\" error.\r\n\r\n## Symptoms\r\n\r\nA COM component fails to load because of “access denied,” “class not registered,” or “internal failure occurred for unknown reasons” errors. \r\n\r\nThe most commonly reported failure results in the following error message:\r\n\r\n```console\r\nException type: System.UnauthorizedAccessException\r\nMessage: Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\n### Sharepoint\r\n\r\nWhen users browse to a SharePoint site they may see the following HTTP 403 message:\r\n\r\n```console\r\n\"The Web Site declined to show this webpage\"\r\n```\r\n\r\nThe SharePoint ULS Logs will contain a message like the following:  \r\n\r\n```console\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 0000       High                UnauthorizedAccessException for the request. 403 Forbidden will be returned. Error=An error occurred creating the configuration section handler for system.serviceModel/extensions: Could not load file or assembly <AssemblySignature>  or one of its dependencies. Access is denied. (C:\\Windows\\Microsoft.NET\\Framework64\\v2.0.50727\\Config\\machine.config line 180)    \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General b6p2      VerboseEx                Sending HTTP response 403:403 FORBIDDEN.      \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 8nca       Verbose                Application error when access /, Error=Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\nWhen crawling a people content source, the request may fail with the following entry logged to the SharePoint ULS Log: \r\n\r\n```console\r\nmssearch.exe (0x118C) 0x203C SharePoint Server Search Crawler:Gatherer Plugin cd11 Warning The start address sps3s://<URLtoSite> cannot be crawled.  Context: Application 'Search_Service_Application', Catalog 'Portal_Content'  Details:  Class not registered   (0x80040154)  \r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive error \"ActiveX component can't create object\" \r\n\r\n.NET Application creates instance of .NET COM application within an Impersonation Context may receive error \"0x80040154 (REGDB_E_CLASSNOTREG)\"\r\n```\r\n\r\n### BizTalk Server Administration Console\r\n\r\nBizTalk Server Administration Console fails to launch properly with the following errors: \r\n\r\n```console\r\nAn internal failure occurred for unknown reasons. (WinMgmt) \r\n\r\nProgram Location:  \r\n\r\n   at System.Runtime.InteropServices.Marshal.ThrowExceptionForHRInternal(Int32 errorCode, IntPtr errorInfo) \r\n\r\n   at System.Management.ManagementObject.Get() \r\n\r\n   at Microsoft.BizTalk.SnapIn.Framework.WmiProvider.SelectInstance\r\n```\r\n\r\n> Warning: The following workarounds may make a computer or a network more vulnerable to attack by malicious users or by malicious software such as viruses. We do not recommend these workarounds but are providing this information so that you can implement the workarounds at your own discretion. Use these workarounds at your own risk.\r\n\r\nUse the following guidance as a workaround:\r\n\r\n* Add “NETWORK SERVICE” to the local Administrators group. \r\n\r\n### IIS with Classic ASP\r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive the following error: \"ActiveX component can't create object\". Use the following guidance as a workaround.\r\n\r\n* If your web site uses Anonymous Authentication, change the Web Site Anonymous Authentication credentials to use the \"Application pool identity\"\r\n* If your site uses Basic Authentication, log into the application once as the application pool identity and then create an instance of the .NET COM component. All subsequent activations for that .NET COM component should succeed, for any user.\r\n\r\n### .NET applications using COM and impersonation\r\n\r\n.NET Applications that creates instances of .NET COM application within an Impersonation Context may receive the following error: \"0x80040154 (REGDB_E_CLASSNOTREG)\". Use the following guidance as a workaround.\r\n\r\n* Create an instance of the .NET COM component prior to the impersonation context call. Later impersonated create instance calls should work as expected.\r\n* Run the .NET Application in the context of the impersonated user\r\n* Avoid using Impersonation when creating the .NET COM object","Url":"https://github.com/dotnet/announcements/issues/74","RelatedDescription":"Open issue \"Advisory on July 2018 .NET Framework Updates\" (#74)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1111582019157278721","CreatedAt":"2019-03-29T10:53:00+00:00","UserScreenname":"dotnet","Text":"Learn how Azure Monitor can help you debug your production applications in this episode of #OnDotNet\n\n\"Investigatin… https://t.co/vNGlulMfam","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":18,"RawContent":null},{"Id":"1110673857285746688","CreatedAt":"2019-03-26T22:44:17+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":40,"FavoriteCount":21,"RawContent":null},{"Id":"1110519813179215879","CreatedAt":"2019-03-26T12:32:10+00:00","UserScreenname":"dotnet","Text":"Learn about \"Supercharging your Web APIs with OData and https://t.co/iOiV9qNspl Core\" w/ @HassanRezkHabib &amp;… https://t.co/CJyNmohHpi","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":50,"FavoriteCount":14,"RawContent":null},{"Id":"1110268016921464832","CreatedAt":"2019-03-25T19:51:37+00:00","UserScreenname":"dotnet","Text":"This week's @aspnet Community Standup will feature Brady Gaster (@bradygaster) on #SignalR!\n\nJoin us on Tuesday Mar… https://t.co/ef8BQS2nV5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":50,"FavoriteCount":17,"RawContent":null}]}},"RunOn":"2019-04-03T05:30:29.3481052Z","RunDurationInMilliseconds":8407}