{"Data":{"Blog":{"FeedItems":[{"Title":"Contributing to Xamarin.Android","PublishedOn":"2018-05-25T18:15:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin has been open source for over two years now, starting the day we made the exciting announcement about the future of Xamarin. Since then, we&#8217;ve moved the majority of our work out in the...","Href":"https://blog.xamarin.com/contributing-xamarin-android/","RawContent":null},{"Title":"Guest Post: Securing and Versioning Xamarin Apps with Mobile.BuildTools","PublishedOn":"2018-05-23T19:11:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Dan Siegel is a Microsoft MVP, maintainer of the Prism Library, author of numerous dev tools and OSS libraries, leader of the San Diego Xamarin Dev’s Meetup, and a Xamarin blogger. Dan works as a...","Href":"https://blog.xamarin.com/securing-versioning-xamarin-apps-with-mobilebuildtools/","RawContent":null},{"Title":"Xamarin.Essentials: Cross-Platform APIs for Mobile Apps","PublishedOn":"2018-05-16T18:36:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When developing iOS and Android apps with Xamarin, developers can access every native platform API using C#. These bindings not only expose the platform APIs in C#, but add powerful C# features, such...","Href":"https://blog.xamarin.com/xamarin-essentials-cross-platform-apis-mobile-apps/","RawContent":null},{"Title":"Integrating Xamarin.com into Microsoft Sites","PublishedOn":"2018-05-15T22:49:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Over the past year we&#8217;ve started to make it even easier to find Xamarin information on Microsoft sites, and going forward you will start seeing changes to xamarin.com as we continue to migrate...","Href":"https://blog.xamarin.com/integrating-xamarin-com-microsoft-sites/","RawContent":null},{"Title":"Update Your Xamarin.Mac Apps for 64-bit Today!","PublishedOn":"2018-05-14T18:33:45+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last June, Apple announced that upcoming macOS releases would only support 32-bit applications “with compromises”. If your Mac application is not 64-bit, we strongly recommend taking action to avoid...","Href":"https://blog.xamarin.com/update-xamarinmac-apps/","RawContent":null},{"Title":"Podcast: Build 2018 Recap for Mobile Developers","PublishedOn":"2018-05-11T18:38:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I discuss the news for mobile developers from Build 2018, including Xamarin.Forms 3.0, Hyper-V support for the Android emulator,...","Href":"https://blog.xamarin.com/podcast-build-2018-recap-mobile-developers/","RawContent":null},{"Title":"All Things Xamarin at Build 2018","PublishedOn":"2018-05-09T15:07:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Build 2018 has finally arrived which means exciting news for developers about Microsoft products and technologies, including Xamarin. For those following along at home, we’ve rounded up all...","Href":"https://blog.xamarin.com/xamarin-build-2018/","RawContent":null},{"Title":"Try the Latest Release of Xamarin.Forms 3.0!","PublishedOn":"2018-05-07T19:05:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are overjoyed to bring you our latest stable release of Xamarin.Forms, version 3.0. This is our fastest, richest release to date coupled with fantastic improvements up and down the Xamarin stack...","Href":"https://blog.xamarin.com/xamarin-forms-3-0-released/","RawContent":null},{"Title":"Mobile Development at Microsoft Build 2018","PublishedOn":"2018-05-04T22:03:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s almost time for Microsoft Build 2018 in Seattle, Washington and that means a full three days of keynotes, breakout and theater sessions, workshops, and all the latest updates to your...","Href":"https://blog.xamarin.com/mobile-development-microsoft-build-2018/","RawContent":null},{"Title":"Xamarin Developer Events in May","PublishedOn":"2018-05-02T18:35:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin and .NET user groups are hosting recap events around the world all month long to ensure every developer gets the most they can out of Microsoft Build. Continue your Xamarin development...","Href":"https://blog.xamarin.com/xamarin-developer-events-may/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7747510993","Type":"IssuesEvent","CreatedAt":"2018-05-30T03:46:45","Actor":"xamarin-release-manager","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1679","RelatedDescription":"Closed issue \"System.Memory facade is missing from the installation\" (#1679) at xamarin/xamarin-android","RelatedBody":"This breaks when newer System.Memory package is used. Xamarin.iOS installs it correctly, see https://github.com/dotnet/corefx/issues/29654\n\n> VS bug [#619210](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/619210)"},{"Id":"7747510938","Type":"IssuesEvent","CreatedAt":"2018-05-30T03:46:44","Actor":"xamarin-release-manager","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1651","RelatedDescription":"Closed issue \"Bundled app initialization error (vs 15.7 preview)\" (#1651) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a xamarin app for Android\r\n2. Enable \"Bundle Assemblies into Native Code\" option : <BundleAssemblies>true</BundleAssemblies> in csproj\r\n3. Build and launch app in VS 2017 15.7 preview\r\n\r\n### Expected Behavior\r\n\r\nNo crash.\r\nThis is actually what happens with VS 2017 15.6.7\r\n\r\n### Actual Behavior\r\n\r\nApp crashes (when using VS 2017 15.7 preview) with the following error:\r\nbundled app initialization error: dlopen failed: cannot locate symbol \"mono_jit_set_aot_mode\" referenced by libmonodroid_bundle_app.so\r\n\r\n### Version Information (causing the error)\r\n\r\nVersion 15.7.0 Preview 5.0\r\nVisualStudio.15.Preview/15.7.0-pre.5.0+27625.0\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nXamarin   4.10.0.440 (943b34d9d)\r\nXamarin.Android SDK   8.3.0.18 (HEAD/1f8462ef1)\r\n\r\n### Version Information (no error)\r\n\r\nVersion 15.6.7\r\nVisualStudio.15.Release/15.6.7+27428.2043\r\nMono Debugging for Visual Studio   4.9.11-pre (71eb098)\r\nXamarin   4.9.0.753 (f0f46392f)\r\nXamarin.Android SDK   8.2.0.16 (HEAD/a78295902)\n\n> VS bug [#618947](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/618947)"},{"Id":"7747449581","Type":"IssuesEvent","CreatedAt":"2018-05-30T03:23:11","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1748","RelatedDescription":"Opened issue \"_CreateAapt2VersionCache target always runs on master\" (#1748) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Build [Xamarin.Forms.ControlGallery.Android.csproj](https://github.com/xamarin/Xamarin.Forms/blob/master/Xamarin.Forms.ControlGallery.Android/Xamarin.Forms.ControlGallery.Android.csproj)\r\n2. Build it again, with no changes\r\n\r\nThe `_CreateAapt2VersionCache` target is always running, and it seems to be a bit of a performance regression.\r\n\r\nFor example, in the log from building this project I see the following times from this project and other referenced projects:\r\n- 144ms\r\n- 51ms\r\n- 92ms\r\n- 127ms\r\n- 102ms\r\n\r\nTotal of 516ms added to a build with no changes.\r\n\r\n### Expected Behavior\r\n\r\n`_CreateAapt2VersionCache` runs even though Aapt2 is disabled by default via `$(AndroidUseAapt2)` set to `False`\r\n\r\n### Actual Behavior\r\n\r\n`_CreateAapt2VersionCache` always runs.\r\n\r\n### Version Information\r\n\r\nMy local build is at commit: d8fdbcfc16f7d6e22098fa03101c487d9a853575"},{"Id":"7746988880","Type":"PullRequestEvent","CreatedAt":"2018-05-30T00:31:27","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1747","RelatedDescription":"Opened pull request \"Bump to Java.Interop/master/bed29582\" (#1747) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/1493\r\n\r\nAllows injection of `<dllmap/>` entries into\r\n`Java.Runtime.Environment.dll.config`.\r\n\r\nUse `<fileapi.h>`, not `<FileAPI.h>`, as Linux wants the former.\r\n\r\nAdd `$(CecilSourceDirectory)` support."},{"Id":"7746939696","Type":"PullRequestEvent","CreatedAt":"2018-05-30T00:12:18","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1732","RelatedDescription":"Merged pull request \"Bump to mono/2018-02/7bdb7dd7\" (#1732) at xamarin/xamarin-android","RelatedBody":"Prepare for branching.\r\n\r\nFixes: https://github.com/mono/mono/issues/8282\r\n\r\nBumps to xamarin-android-api-compatibility/master/f36a1f07\r\n"},{"Id":"7746348703","Type":"PullRequestEvent","CreatedAt":"2018-05-29T21:23:07","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1745","RelatedDescription":"Opened pull request \"[linker] Added PreserveJniMarshalMethods option\" (#1745) at xamarin/xamarin-android","RelatedBody":"This option makes preserving new marshal methods, generated by\r\n`jnimarshalmethod-gen.exe`, optional in the linker.\r\n\r\nIt also introduces new `JniMarshalMethods` property to toggle building\r\nwith generated marshal methods and will be used by following\r\npatches too. It defaults to *False*."},{"Id":"7746059454","Type":"IssuesEvent","CreatedAt":"2018-05-29T20:24:36","Actor":"xamarin-release-manager","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1405","RelatedDescription":"Reopened issue \"When \"Use Shared Runtime\" is unchecked, any code changes aren't picked up\" (#1405) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. In Xamarin Android project settings, uncheck \"Use Shared Runtime\"\r\n2. Select armembi-v7a as the only supported platform\r\n3. Run a simple Hello World app by pressing F5\r\n4. Stop debugging\r\n5. Comment out a line of code\r\n6. Run again with F5\r\n\r\n### Expected Behavior\r\n\r\nThe changes should be picked up and the commented out line shouldn't execute\r\n\r\n### Actual Behavior\r\n\r\nThe commented out line is still executed. Changes to the source code are not deployed\r\n\r\n### Version Information\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.6.1\r\nVisualStudio.15.Release/15.6.1+27428.2002\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2017   00369-60000-00001-AA324\r\nMicrosoft Visual C++ 2017\r\n\r\nVisual F# Tools 10.1 for F# 4.1   00369-60000-00001-AA324\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nApplication Insights Tools for Visual Studio Package   8.11.10212.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40214.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   1.0\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.51214.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.40215.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.7.0-beta3-62620-07. Commit Hash: e873e69306527a0424e97af2985370556f474019\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.51212.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.9.11-pre (71eb098)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61801.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.6.20202.3\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.7.0-beta3-62620-07. Commit Hash: e873e69306527a0424e97af2985370556f474019\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual C++ for Cross Platform Mobile Development (Android)   15.0.27406.00\r\nVisual C++ for Cross Platform Mobile Development (Android)\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27428.01\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.9.0.749 (9b0fce36d)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.10.58 (cee1369d0)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.2.0.15 (HEAD/22d97e153)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.8.0.20 (1c6f300)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\nXenko.VisualStudio.Package   2.0\r\nXenko VisualStudio Package\n\n> VS bug [#621197](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/621197)"},{"Id":"7745657988","Type":"PullRequestEvent","CreatedAt":"2018-05-29T19:02:57","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1744","RelatedDescription":"Opened pull request \"[docs] added ADB0000 error code\" (#1744) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/monodroid/pull/780\r\nContext: https://github.com/xamarin/xamarin-android/issues/1560\r\nCloses: https://github.com/xamarin/xamarin-android/issues/1727\r\n\r\nI implemented `ADB0000` in the proprietary part of Xamarin.Android,\r\nbut need to document the error code in the open source\r\n`xamarin-android` repository.\r\n\r\nLooking at how the `Install` target is setup in `xamarin-android`, it\r\ndid not appear there was a good way to emit this error code for the\r\nfollowing target:\r\n\r\n    <Target Name=\"_Deploy\">\r\n      <Exec Command=\"&quot;$(AdbToolPath)\\adb&quot; install -r &quot;$(ApkFileSigned)&quot;\" />\r\n    </Target>\r\n\r\nSince proprietary Xamarin.Android overrides this target, it is\r\nprobably not worth the work to write a custom MSBuild task to add the\r\n`ADB0000` error code for open source `xamarin-android`."},{"Id":"7744973890","Type":"PullRequestEvent","CreatedAt":"2018-05-29T16:50:46","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1743","RelatedDescription":"Opened pull request \"[tests] fix Aapt2Tests on Windows\" (#1743) at xamarin/xamarin-android","RelatedBody":"Context: https://devdiv.visualstudio.com/DevDiv/_build?buildId=1722717&tab=ms.vss-test-web.test-result-details\r\n\r\nI noticed one of the new aapt2 tests is failing on Windows with:\r\n\r\n    System.IO.IOException :\r\n        The process cannot access the file 'E:\\A\\_work\\1\\s\\bin\\TestDebug\\temp\\Aapt2CompileFixesUpErrors' because it is being used by another process.\r\n\r\nI also noticed usage of `Directory.SetCurrentDirectory` within the\r\ntest, that should be within a `try-finally` block.\r\n\r\nThe following fixes the test:\r\n- Reset `$CWD` right after we run `Aapt2Compile.Execute`, as we should\r\n  no longer need it modified at that point\r\n- Use a `try-finally` block, in case something `throws`"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7747475777","Type":"IssuesEvent","CreatedAt":"2018-05-30T03:33:07","Actor":"allenliu1030","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2864","RelatedDescription":"Opened issue \"XF: IsVisible binding will not work if there is ScrollView in a RelativeLayout and specify the RelativeLayout.HeightConstraint value\" (#2864) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nThis is Allen from APGC support team. Now there is one customer of mine is having issue with XF as the title mentioned.\r\nThe page is one form submit page, customer is using RelativeLayout with lots of controls in it. One of the container in the RelativeLayout is a ScrollView with multiple controls in it. And the issue is happened with one of the switch element which will control a GPS location showing.\r\nThe page layout will looks like the below one:\r\n\r\n```XML\r\n<RelativeLayout>\r\n\t<!-- Some other controls -->\r\n\t<ScrollView x:Name=\"IssueScrollView\"\r\n\t\t\t\tRelativeLayout.HeightConstraint = \"{ConstraintExpression Type=RelativeLayoutToParent, Property=Height, Constant=-45\"} >\r\n\t\t<StackLayout Orientation=\"Horizontal\" VerticalOptions=\"Center\">\r\n\t\t\t<Label YAlign=\"Center\" Text=\"Send location data?\" TextColor=\"White\" FontSize=\"Medium\" FontAttributes=\"Bold\" ></Label>\r\n\t\t\t<Switch x:Name=\"sendLocation\" IsToggled=\"{Binding SendCurrentLocation, Mode=TwoWay}\" Toggled=\"SendLocationToggled\" ></Switch>\r\n\t\t</StackLayout>\r\n\t\t<StackLayout Orientation=\"Horizontal\" HorizontalOptions=\"Start\" VerticalOptions=\"Center\" IsVisible=\"{Binding IsFindingLocation, Mode=OneWay}\" HeightRequest=\"25\">\r\n            <ActivityIndicator IsRunning=\"{Binding IsFindingLocation, Mode=OneWay}\" HeightRequest=\"20\" HorizontalOptions=\"Start\" Color=\"White\" >\r\n            </ActivityIndicator>\r\n            <Label  YAlign=\"Center\" VerticalOptions=\"Center\" Text=\"Getting your location\" HorizontalOptions=\"StartAndExpand\" TextColor=\"White\"></Label>\r\n        </StackLayout>\r\n\t</ScrollView>\r\n</RelativeLayout>\r\n```\r\nThe normal process is that after turning on the Switch, first it will pop up the permission request for accessing Location, then the StackLayout containing ActivityIndicator and Label should be visible, and the ActivityIndicator should be running.\r\nCurrent issue is that the permission request will pop up, but the StackLayout will not show. But the code should be running. What we tested is that if we click on one of the Entry element in that page, the StackLayout will then show with everything working normally from then on.\r\nAlso, when we get into the form page, if we focus on the Entry first, then the switch will work just as what we want.\r\n\r\nOne thing I have done to troubleshooting is that if we comment out `RelativeLayout.HeightConstraint = \"{ConstraintExpression Type=RelativeLayoutToParent, Property=Height, Constant=-45\"}`, then the feature will work normally but the UI will not be showing correctly as customer's original design.\r\n\r\n### Steps to Reproduce\r\n\r\n1.  Run the customer's code and deploy to Android phone.\r\n2.  Go to the target page.\r\n3.  Directly turn the switch on.\r\n4.  Click Yes when the permission request comes out.\r\n\r\n### Expected Behavior\r\nThe permission request shows and after giving permission, the StackLayout containing ActivityIndicator will show.\r\n### Actual Behavior\r\nThe StackLayout containing ActivityIndicator will not show.\r\n### Basic Information\r\n\r\n- Version with issue: XF 2.5.1 and XF 3.0 (This is what I tested, from customer's code, he's using XF 2.5.1, I tried to upgrade to 3.0 but still the same issue.)\r\n- Last known good version: None\r\n- IDE: Visual Studio 2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  Currently customer is not working on iOS.\r\n  - Android: My testing is based on 8.0\r\n  - UWP:  No need to investigate UWP.\r\n- Android Support Library Version: No need.\r\n- Nuget Packages: No need.\r\n- Affected Devices: Android devices.\r\n\r\n### Screenshots\r\n\r\nI will upload the screenshot later due to some issue with my VS.\r\n\r\nIf we directly turn on the switch, first we will get the permission request as below:\r\n\r\n\r\n\r\nAfter giving the permission, the issue will reproduce as below: the StackLayout will not show.\r\n\r\n\r\n\r\nAfter click on the Entry box of Carriage, the StackLayout will show:\r\n\r\n\r\n\r\n\r\n### Reproduction Link\r\n\r\nPlease contact me through mail if the engineer who is working this case needs to take a look at the customer's code. \r\n"},{"Id":"7747087255","Type":"IssuesEvent","CreatedAt":"2018-05-30T01:09:48","Actor":"jgold6","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2863","RelatedDescription":"Opened issue \"\"CS0103 The name 'InitializeComponent' does not exist in the current context\" intellisense error\" (#2863) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nUWP app project showing Intellisense error with a new, from template Xamarin.Forms solution using a Shared project type. \r\n\r\n### Steps to Reproduce\r\n\r\n1. In Visual Studio 2017 15.7.2, create a new Cross Platform Xam.Forms solution with Shared project type for shared code.\r\n2. Select the UWP app as the startup project. \r\n3. Open the Errors Pane and select \"Build + IntelliSense\" or \"Intellisense Only\" in the dropdown.\r\n\r\n### Expected Behavior\r\n\r\nNo errors shown\r\n\r\n### Actual Behavior\r\n\r\nError\tCS0103\tThe name 'InitializeComponent' does not exist in the current context\tApp1.UWP\r\nis shown in the errors pane.\r\n\r\n\r\n### Additional notes\r\n\r\nIssue was brought up in this forum post: https://forums.xamarin.com/discussion/comment/332572/#Comment_332572\r\n\r\nThe first time I tried to reproduce it, I got a build error and the UWP app project build failed. Cleaning and rebuilding resolved the build error but the Intellisense error remained only for the UWP app project. \r\n\r\nI then tested again, creating a new template project of the same type. This second time there was no build error, but the Intellisense error was shown for all three app platform projects. At some point, after cleaning and rebuilding and selecting the iOS app project as the startup project, the INtellisense error went away for the iOS app project, but remained for Android and UWP. \r\n\r\n![screen shot 2018-05-29 at 2 59 07 pm](https://user-images.githubusercontent.com/4606509/40693025-e527e060-6350-11e8-9157-fbb1b8b3cffd.png)\r\n\r\nI tried closing and re-opening the solutions as well as closing and re-opening the IDE. At some point the Intellisense errors went away. I closed the IDE and re-opened the second solution I created, opened the properties pages to get some info for the bug report, i.e. target frameworks, and the Intellisense errors went away.  Not sure after which specific action they disappeared, but it seems to me this was a dance that should not need to be done. \r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.7.2\r\nVisualStudio.15.Release/15.7.2+27703.2018\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Enterprise\r\n\r\nApplication Insights Tools for Visual Studio Package   8.12.10405.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40511.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.7.31476\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60419.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.40424.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.3000.2\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Functions and Web Jobs Tools   15.0.40424.0\r\nAzure Functions and Web Jobs Tools\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.3.3000.2\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   2.8.2-beta6-62916-08. Commit Hash: 2ad4aabc7a9dada097e54e544ebba48ab1c05074\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nGitHub.VisualStudio   2.2.0.10\r\nA Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMerq   1.1.19-rc (a4ffc1b)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.3.3000.2\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.3.3000.2\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   2.1\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.3.3000.2\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10420.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNode.js Tools   1.4.11027.3\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSnapshot Debugging Extension   1.0\r\nSnapshot Debugging Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61804.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   15.7.20419.2003\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.8.2-beta6-62916-08. Commit Hash: 2ad4aabc7a9dada097e54e544ebba48ab1c05074\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.1 for F# 4.1   15.7.0.0.  Commit Hash: 56f97a8dd4353d897336941f3e644423b87c794f.\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Apache Cordova   15.123.7408.1\r\nVisual Studio Tools for Apache Cordova\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27703.2018\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWindows Machine Learning Generator Extension   1.0\r\nWindows Machine Learning Visual Studio Extension Detailed Info\r\n\r\nXamarin   4.10.0.448 (4373404db)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.12.270 (82d750d12)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.3.0.19 (HEAD/342b2ce96)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.10.1.178 (408d357)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n- Last known good version: Don't know\r\n- IDE: Visual Studio 2017 on Windows\r\n- Platform Target Frameworks: \r\n  - UWP:  16299 --> \r\n  - Android: Compile with: 8.1 Oreo, Min 4.4 KitKat, Target: 8.1 Oreo\r\n  - iOS: iOS 11, Deployment target 8.0\r\n\r\n\r\n"},{"Id":"7746816801","Type":"PullRequestEvent","CreatedAt":"2018-05-29T23:30:18","Actor":"myroot","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2862","RelatedDescription":"Opened pull request \"[Tizen] Add Date/TimePickerRenderer for Watch idiom\" (#2862) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n New Date/TimePickerRenderer for Watch idiom on Tizen\r\n\r\n ![a5b144fe-6313-11e8-9831-c1977dd84ab8](https://user-images.githubusercontent.com/1029155/40690773-80e8809e-63e3-11e8-95aa-227b42d04c0c.gif)\r\n\r\n### Bugs Fixed ###\r\n None\r\n\r\n### API Changes ###\r\nNone\r\n\r\n### Behavioral Changes ###\r\n New style Date/TimePicker will be shown on Watch device\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"7746815471","Type":"PullRequestEvent","CreatedAt":"2018-05-29T23:29:55","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2861","RelatedDescription":"Opened pull request \"[UI Test] Remove conflicting automationId from 56771 test\" (#2861) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nNew test button added in #2512 had a conflicting automation ID. I can't seem to get this test to pass locally, but this is the only change I can find that would have caused it to start failing.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"7746795752","Type":"PullRequestEvent","CreatedAt":"2018-05-29T23:23:32","Actor":"myroot","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2860","RelatedDescription":"Opened pull request \"[Tizen] Enhancement WebView Renderer\" (#2860) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nEnhancement Tizen WebView Renderer\r\n - Support Focus\r\n - Support GestureRecognizers\r\n\r\n### Bugs Fixed ###\r\n Fix focus issue\r\n Fix GestureRecognizer\r\n\r\n### API Changes ###\r\n None\r\n\r\n### Behavioral Changes ###\r\n None\r\n\r\n### PR Checklist ###\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"7745907140","Type":"IssuesEvent","CreatedAt":"2018-05-29T19:53:37","Actor":"jimmgarrido","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2859","RelatedDescription":"Opened issue \"UWP build fails when minimum version is Anniversary Update or lower\" (#2859) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nCompiling a UWP project that has a minimum version set to Windows 10 Anniversary Update or lower will fail when using Xamarin.Forms 3.0. This is because there is now a dependency on .NET Standard 2.0 for UWP which is only supported when using a minimum version of Fall Creator's Update or higher. \r\n\r\nTo prevent this, the UWP target framework version in the nuspec should be updated to 10.0.15138 like in the [Microsoft.NETCore.UniversalWindowsPlatform](https://www.nuget.org/packages/Microsoft.NETCore.UniversalWindowsPlatform/6.1.4) package.\r\n\r\nAlso reported here: https://developercommunity.visualstudio.com/content/problem/256382/netstandard-compatibility.html\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new Xamarin.Forms project using a shared project\r\n2. In the UWP project's properties, change the Minimum version to Windows 10 Anniversary Update or lower\r\n3. Build the UWP project\r\n\r\n### Expected Behavior\r\nThe build will complete successfully\r\n\r\n### Actual Behavior\r\nThe build fails with several errors such as\r\n\r\n> The type 'Type' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'\r\n> The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'\r\n\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.0+\r\n- Last known good version: 2.5 series\r\n- IDE: VS2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - UWP:  \r\n    - Min version: Anniversary update, build 14393\r\n    - Target version: April 2018 update, build 17134 \r\n"},{"Id":"7745717773","Type":"IssuesEvent","CreatedAt":"2018-05-29T19:14:50","Actor":"MartinZikmund","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2858","RelatedDescription":"Opened issue \"CascadeInputTransparent behavior inconsistent on Android\" (#2858) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nI have discovered an issue which is quite critical for our business - `CascadeInputTransparent` behaves differently on Android compared to the other platforms.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a XAML page with the following content:\r\n\r\n```\r\n<Grid>\r\n    <Grid BackgroundColor=\"Blue\" VerticalOptions=\"FillAndExpand\" HorizontalOptions=\"FillAndExpand\">\r\n        <Grid.GestureRecognizers>\r\n            <TapGestureRecognizer Tapped=\"TapGestureRecognizer_OnTapped\" />\r\n        </Grid.GestureRecognizers>\r\n    </Grid>\r\n    <Grid RowSpacing=\"0\" ColumnSpacing=\"0\" InputTransparent=\"True\" CascadeInputTransparent=\"False\">\r\n        <Grid BackgroundColor=\"Red\" HorizontalOptions=\"Center\" WidthRequest=\"300\" VerticalOptions=\"Center\" HeightRequest=\"300\">\r\n            <Label>Parent - InputTransparent=True, CascadeInputTransparent=False</Label>\r\n        </Grid>\r\n    </Grid>\r\n</Grid>\r\n```\r\n2. In the code-behind add the following `Tapped` event handler:\r\n\r\n```\r\nprivate void TapGestureRecognizer_OnTapped(object sender, EventArgs e)\r\n{\r\n\tDebug.WriteLine(\"Tap captured\");\r\n}\r\n```\r\n\r\n3. Run the app on Android, UWP and iOS \r\n\r\n### Expected Behavior\r\n\r\nTapping the red rectangle should not fire the tapped event handler on the blue `Grid`.\r\n\r\n### Actual Behavior\r\n\r\nTapping the red rectangle does not fire tapped event on the blue `Grid` on UWP and iOS, but it does fire on Android. The same goes for all other gestures.\r\n\r\nIn our project we have a map control instead of a `Grid` this behavior on Android causes that user can manipulate the map over any UI which is above the map, even if it has a solid background, which is not valid.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: \r\n- Last known good version: -\r\n- IDE: Visual Studio 15.7.2\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11.1\r\n  - Android: 8.1\r\n  - UWP: 16299\r\n\r\n### Reproduction Link\r\n\r\nRepro for the issue is [available here on my GitHub](https://github.com/MartinZikmund/Xamarin.Forms-input-inconsistency).\r\n"},{"Id":"7745441809","Type":"PullRequestEvent","CreatedAt":"2018-05-29T18:21:40","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2853","RelatedDescription":null,"RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\n### Steps to Reproduce\r\n\r\n1. Open Control gallery\r\n2. Go to issue 53834\r\n3. Check the empty white rows \r\n\r\n### Expected Behavior\r\n\r\nShould show grouped list with all rows \r\n\r\n### Actual Behavior\r\n\r\nShows grouped list with empty white rows \r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.0.0\r\n\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n   - UWP:  <!--  16299 --> \r\n\r\n### Screenshots\r\n\r\n<img width=\"1416\" alt=\"screenshot 2018-04-17 12 54 31\" src=\"https://user-images.githubusercontent.com/1235097/38868577-658abb20-423f-11e8-8a2b-794b20908d75.png\">\r\n\r\n<img width=\"446\" alt=\"screenshot 2018-04-17 12 48 58\" src=\"https://user-images.githubusercontent.com/1235097/38868560-5bdc7db6-423f-11e8-9a05-ec230ee0c9e7.png\">\r\n\r\n\r\n"},{"Id":"7744696740","Type":"IssuesEvent","CreatedAt":"2018-05-29T16:01:56","Actor":"D4rkC1own187","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2856","RelatedDescription":"Opened issue \"SelectedItem does not fire when binded\" (#2856) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n[SelectedItem does not work.zip](https://github.com/xamarin/Xamarin.Forms/files/2049096/SelectedItem.does.not.work.zip)\r\n -->\r\n\r\n### Description\r\nItemSelected binding does not work. ItemSelected is bind in XAML.\r\n### Steps to Reproduce\r\nBinded SelectedItem in view model.\r\nFor test purpose, I call SelectedItem when the \"Add\" icon is click.\r\n\r\n1. \r\nBind SelectedItem in XAML\r\n2. \r\nInitialize SelectedItem with any item in list view source\r\n3. \r\nNothing happens.\r\n\r\n### Expected Behavior\r\nSelectedItem should highlight the item.\r\n### Actual Behavior\r\nNothing.\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin Forms (3.0.0.446417)\r\n- Last known good version: N/A\r\n- IDE: Visual Studio Community\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11.10.1.177\r\n  - Android: Version: 8.3.0.19\r\n  - UWP:  N/A\r\n- Android Support Library Version: N/A\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\nN/A\r\n\r\n### Reproduction Link\r\n[SelectedItem does not work.zip](https://github.com/xamarin/Xamarin.Forms/files/2049112/SelectedItem.does.not.work.zip)\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7746490633","Type":"PullRequestEvent","CreatedAt":"2018-05-29T21:55:32","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4026","RelatedDescription":"Merged pull request \"Add xcode9.4 support into 15.7\" (#4026) at xamarin/xamarin-macios","RelatedBody":"The PR is not final and cannot be merged until the final Xcode 9.4\nrelease from Apple is available.\n    \nSince there's no macOS specific changes (at least up to beta 2) we can\ndirectly merge into the _normal_ milestone branch and avoid having\nseparate branches to maintain for XI and XM (until 15.8)."},{"Id":"7746151796","Type":"PullRequestEvent","CreatedAt":"2018-05-29T20:42:44","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4158","RelatedDescription":"Merged pull request \"[jenkins] Revert unintended change that prevents the keychain from unlocking properly.\" (#4158) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"7745620932","Type":"PullRequestEvent","CreatedAt":"2018-05-29T18:55:56","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4158","RelatedDescription":"Opened pull request \"[jenkins] Revert unintended change that prevents the keychain from unlocking properly.\" (#4158) at xamarin/xamarin-macios","RelatedBody":null}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1001568114855890945","CreatedAt":"2018-05-29T20:57:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to create simple Xamarin.iOS apps with #CoreML and Microsoft #Azure: https://t.co/poP0TGynlP https://t.co/UH3gpAFFHj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":25,"RawContent":null},{"Id":"1000859470057132032","CreatedAt":"2018-05-27T22:01:07+00:00","UserScreenname":"xamarinhq","Text":"Extending #XamarinForms controls functionality with Behaviors: https://t.co/8arBeS4lBP https://t.co/iNmDBtF3zX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":18,"RawContent":null},{"Id":"1000408472083673089","CreatedAt":"2018-05-26T16:09:01+00:00","UserScreenname":"xamarinhq","Text":"Just push play—using Google Play on an Android Emulator: https://t.co/wl37sjNIjv https://t.co/t7b1GH4pMp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":39,"FavoriteCount":10,"RawContent":null},{"Id":"1000081068660330497","CreatedAt":"2018-05-25T18:28:02+00:00","UserScreenname":"xamarinhq","Text":"Join our open source family and help make https://t.co/3QxhuBuvHc even better: https://t.co/6h1HH1dTAM https://t.co/5go35jCm9N","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":75,"FavoriteCount":34,"RawContent":null},{"Id":"999682195089436672","CreatedAt":"2018-05-24T16:03:03+00:00","UserScreenname":"xamarinhq","Text":"Add a search bar to your iOS 11 #Xamarin apps: https://t.co/T9OdiJFhmH https://t.co/81dQ3CWoSL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":55,"FavoriteCount":13,"RawContent":null},{"Id":"999389007191728134","CreatedAt":"2018-05-23T20:38:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to secure and version your #Xamarin apps in this guest post on Mobile.BuildTools: https://t.co/NTtOmsdDTl https://t.co/ks5Q3K2joU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":60,"FavoriteCount":17,"RawContent":null},{"Id":"998953429568573440","CreatedAt":"2018-05-22T15:47:11+00:00","UserScreenname":"xamarinhq","Text":"Extend your #Xamarin app's reach by adding language support with the Multilingual App Toolkit:… https://t.co/2E1zBel6Cr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":21,"RawContent":null},{"Id":"998352195631435777","CreatedAt":"2018-05-20T23:58:06+00:00","UserScreenname":"xamarinhq","Text":"Sketch out your next great app idea with Ink to Code, and see your ideas immediately converted into recognized comp… https://t.co/tO3s7DT35f","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":124,"FavoriteCount":46,"RawContent":null},{"Id":"997143964397572096","CreatedAt":"2018-05-17T15:57:01+00:00","UserScreenname":"xamarinhq","Text":"Get started debugging Mono from the source code in the third part of our #Xamarin Open Source Frameworks series:… https://t.co/LeAoHXXaA6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":21,"FavoriteCount":9,"RawContent":null},{"Id":"996824503241052160","CreatedAt":"2018-05-16T18:47:36+00:00","UserScreenname":"xamarinhq","Text":"Get started with #XamarinEssentials cross-platform APIs: https://t.co/sW5UgLfeGb https://t.co/Bw4ufWhGP8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":150,"FavoriteCount":79,"RawContent":null},{"Id":"996785351665463297","CreatedAt":"2018-05-16T16:12:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build #XamariniOS from the source code in the second part of our four-part series on debugging… https://t.co/UZ5l6JaWcB","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":28,"FavoriteCount":11,"RawContent":null},{"Id":"996750580969365506","CreatedAt":"2018-05-16T13:53:51+00:00","UserScreenname":"xamarinhq","Text":"Learn about some small changes coming as we integrate https://t.co/iLyxWYOFfj content into Microsoft sites: https://t.co/RcvPgvkPTD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":22,"FavoriteCount":8,"RawContent":null},{"Id":"996423969308921856","CreatedAt":"2018-05-15T16:16:01+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/2LzUatSvjX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":49,"FavoriteCount":24,"RawContent":null},{"Id":"996420693481938944","CreatedAt":"2018-05-15T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"We’ve updated the #XamarinForms project templates in #VS2017 to include #dotNET Standard support and customization… https://t.co/aiwQSbkh1B","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":24,"RawContent":null},{"Id":"996099804915814401","CreatedAt":"2018-05-14T18:47:54+00:00","UserScreenname":"xamarinhq","Text":"Avoid compromises in the next version of macOS by updating your Xamarin.Mac apps for 64-bit today: https://t.co/IB6aLnHlAq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":22,"FavoriteCount":10,"RawContent":null},{"Id":"996040460673142784","CreatedAt":"2018-05-14T14:52:06+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/Z262pfyFdQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":64,"FavoriteCount":24,"RawContent":null},{"Id":"995782486859964418","CreatedAt":"2018-05-13T21:47:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":79,"FavoriteCount":34,"RawContent":null},{"Id":"995405503118430215","CreatedAt":"2018-05-12T20:49:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":21,"RawContent":null},{"Id":"995013274252009473","CreatedAt":"2018-05-11T18:50:25+00:00","UserScreenname":"xamarinhq","Text":"On this week's epsiode of the #XamarinPodcast, get the #MSBuild 2018 recap for mobile developers: https://t.co/UhjdSxsePY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":32,"FavoriteCount":9,"RawContent":null},{"Id":"994975698736570368","CreatedAt":"2018-05-11T16:21:06+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/iXX9NqH3wX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":11,"RawContent":null}]}},"RunOn":"2018-05-30T05:30:42.6631548Z","RunDurationInMilliseconds":4307}