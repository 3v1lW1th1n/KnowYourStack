{"Data":{"Blog":{"FeedItems":[{"Title":"Attend A .NET Conf Event Near You!","PublishedOn":"2018-08-15T20:29:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you have not yet heard of the .NET Conf, it is a FREE, 3-day virtual developer event co-organized by the .NET community and Microsoft. There is a wide selection of live sessions with feature...","Href":"https://blog.xamarin.com/attend-a-net-conf-event-near-you/","RawContent":null},{"Title":"Preview: iOS 12 development with Xamarin","PublishedOn":"2018-08-10T16:30:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The latest Xamarin preview release supports Xcode 10 beta 5, which includes beta SDKs for iOS 12, macOS Mojave (10.14), watchOS 5, and tvOS 12. Get Started With New iOS 12 APIs Today: iOS 12 includes...","Href":"https://blog.xamarin.com/preview-ios-12-development-with-xamarin/","RawContent":null},{"Title":"Securing network traffic with TLS 1.2","PublishedOn":"2018-08-07T15:58:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Secure and encrypted network communications are a crucial part of mobile application development. Without some kind of security around the communication layer, it is trivial for a third party to...","Href":"https://blog.xamarin.com/securing-network-traffic-with-tls-1-2/","RawContent":null},{"Title":"Adaptive Mobile Designs with FlexLayout","PublishedOn":"2018-08-03T17:33:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms is fantastic for quickly shipping a single code base to multiple platforms and devices. As soon as you are present on all those different screens, you need to make sure your UI looks as...","Href":"https://blog.xamarin.com/adaptive-mobile-designs-with-flexlayout/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in August!","PublishedOn":"2018-08-01T19:46:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This year&#8217;s .NET Conf is coming to you September 12 &#8211; 14, 2018! Over the course of the three days, you have a wide selection of live sessions that feature speakers from the community and...","Href":"https://blog.xamarin.com/xamarin-dotnet-developer-events-august/","RawContent":null},{"Title":"Guest Post: Visual UI tests on iOS simulator using Xamarin and Appium","PublishedOn":"2018-07-30T19:07:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post from Sophie Tagar, a customer support engineer at Applitools. Previously, Sophie was a software developer at Matrix Israel where, among other things, she did full stack...","Href":"https://blog.xamarin.com/visual-ui-tests-ios-simulator-using-xamarin-appium/","RawContent":null},{"Title":"Announcing Xamarin.Android 9.0 (P) Preview","PublishedOn":"2018-07-27T16:11:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Android 9.0 (P) introduces many features such as Wi-Fi RTT(Round-Trip-Time), Display cutout support, Notification enhancements, Multi-camera support, and much more. We&#8217;re excited to announce...","Href":"https://blog.xamarin.com/xamarin-android-9-0-p-preview/","RawContent":null},{"Title":"Previewing Files Inside Your Xamarin.iOS App","PublishedOn":"2018-07-25T18:21:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If your app interacts with files, such as email attachments or photos, allowing users to preview those files without leaving your app is a great way to enhance the user&#8217;s experience....","Href":"https://blog.xamarin.com/previewing-files-with-xamarin-ios/","RawContent":null},{"Title":"Xamarin.Forms 3.1: Improving the Little Things","PublishedOn":"2018-07-18T19:27:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Earlier this year, we surveyed Xamarin.Forms developers about the kinds of custom controls and extra platform code being written repeatedly that should be considered for support “in the box”. From...","Href":"https://blog.xamarin.com/xamarin-forms-3-1-improvments/","RawContent":null},{"Title":"Export To Application Insights With AppCenter Continuous Export","PublishedOn":"2018-07-10T03:35:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Five-star mobile apps have one special feature: they don’t let go of their users. This can be achieved by understanding your app, the app’s users, and how these users interact with your app. The deep...","Href":"https://blog.xamarin.com/appcenter-continuous-export-application-insights/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8125909410","Type":"PullRequestEvent","CreatedAt":"2018-08-16T22:56:09","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2075","RelatedDescription":"Opened pull request \"[build] Improve a few items for new contributors\" (#2075) at xamarin/xamarin-android","RelatedBody":"Update an old mention of Xamarin Studio.\r\n\r\nAdjust capitalization in a couple links in the README so they match the\r\nanchor names.\r\n\r\nAdd an error early in the preparation targets to let contributors know\r\nthat having spaces in the Android NDK path will lead to errors during\r\nthe build.\r\n\r\nFix a little typo in the order of arguments to `SymbolicLink.Create()`\r\nin `xabuild` so that the system directories are linked into the build\r\noutput directory.  This code only runs if the directories in the build\r\noutput directory do *not exist*, so the goal is to link the system\r\nversions of the .NETFramework and .NETPortable directories into the\r\nbuild output directory."},{"Id":"8124901580","Type":"PullRequestEvent","CreatedAt":"2018-08-16T19:04:49","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2041","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] fix for UseLatest when API level not installed\" (#2041) at xamarin/xamarin-android","RelatedBody":"Cherry-pick from (#2018)\r\n\r\nFixes: https://github.com/xamarin/xamarin-android/issues/2007\r\n\r\nApparently there is a situation we aren't doing the right thing for:\r\n\r\n  - `$(TargetFrameworkVersion)`=v9.0\r\n  - `$(AndroidUseLatestPlatformSdk)`=True\r\n  - API 28 is not installed\r\n\r\nIn this case, we *should* be downgrading `$(TargetFrameworkVersion)`\r\nto `v8.1`.  Instead we get:\r\n\r\n\tResolveSdksTask Outputs:\r\n\t    AndroidApiLevel: 27\r\n\t    AndroidApiLevelName: 27\r\n\t    TargetFrameworkVersion: v9.0\r\n\r\nThis puts us in a weird state, since we would use `.jar` files for\r\ndifferent API levels:\r\n\r\n  - `platforms/android-27/android.jar`\r\n  - `xbuild-frameworks/MonoAndroid/v9.0/mono.android.jar`\r\n\r\nThis in turn causes `proguard` (and likely other things) to fail:\r\n\r\n\tPROGUARD : warning : there were 38 unresolved references to classes or interfaces.\r\n\t    You may need to add missing library jars or update their versions.\r\n\t    If your code works fine without the missing classes, you can suppress\r\n\t    the warnings with '-dontwarn' options.\r\n\t    (http://proguard.sourceforge.net/manual/troubleshooting.html#unresolvedclass)\r\n\r\nThe fix here is somewhat complicated:\r\n\r\n 1. Starting at `maxSupported` API level, check to see if:\r\n 2. An Android API directory corresponding to `maxSupported` exists,\r\n    e.g. `platforms/android-28`, and\r\n 3. A `$(TargetFrameworkVersion)` directory corresponding to (2)\r\n    exists such as `MonoAndroid/v9.0`.\r\n 4. Decrement `maxSupported` until a value which satisfies *both*\r\n    (2) and (3) is found.\r\n\r\nAdd a parameterized test cases verifying that the right thing is\r\nhappening when `$(AndroidUseLatestPlatformSdk)`=True and different\r\nAPI levels are actually installed.\r\n\r\nOther changes:\r\n\r\n  - Refactored a bit to not call `int.TryParse()` when not needed. We\r\n    could just use the `int` value and call `ToString()` in a better\r\n    order.\r\n  - One existing test case had an incorrect failure message; fixed.\r\n\r\nFinally, remove `$(_SupportedApiLevel)`.  This MSBuild property\r\nappears to be vestigial, and was causing confusion but had no real\r\nbenefit, i.e. as `$(_SupportedApiLevel)` is used to generate the\r\n`ANDROID_X` values in `<GetAndroidDefineConstants/>`, what possible\r\nvalue is there in allowing it to be *higher* than\r\n`$(TargetFrameworkVersion)`, which controls which `Mono.Android.dll`\r\nthe source code is compiled against?\r\n\r\nIt appears that we can just remove `$(_SupportedApiLevel)`, and use\r\n`$(_AndroidApiLevel)` in its place.  I also checked private repos,\r\nand could find nothing that is using this property."},{"Id":"8123632124","Type":"IssuesEvent","CreatedAt":"2018-08-16T15:06:31","Actor":"JonDouglas","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1989","RelatedDescription":"Closed issue \"Application crash on startup - condition new_val < (1 << ABORT_PROT_BLOCK_BITS) not met\" (#1989) at xamarin/xamarin-android","RelatedBody":"This bug has been copied across from Bugzilla as a quick search isn't showing up any results here. The bug itself had been confirmed but hasn't been updated since October 2017.\r\n\r\nAs a quick overview, there appears to be an issue with getting passed application startup if Xamarin.Android app has a Resource.designer.cs file which is around 12MB in size. We confirmed this on Friday (7/20/2018) with one of our companies enterprise applications reaching this limit after adding new layouts. Temporarily, we have followed the advice of commenters in the original Bugzilla report to optimize the app's resources by removing unused ones and renaming some to be shorter which has given us about 2MB back but we will inevitably reach the limit again. \r\n\r\nBased on my native Android experience, I don't think this is a limitation of Android itself and is an issue with Mono / Xamarin\r\n\r\nThe original details from the bug can be found below. \r\n\r\n## condition new_val < (1 << ABORT_PROT_BLOCK_BITS) not met\r\n\r\n_Submitted by a community member on 2017-06-09 13:56 UTC_\r\n\r\nI just upgraded to Xamarin.Android 7.3.1.2 and my app is crashing on startup with the following error:\r\n\r\nAssertion at /Users/builder/jenkins/workspace/xamarin-android/xamarin-android/external/mono/mono/metadata/threads.c:266, condition 'new\\_val \\< (1 \\<\\< ABORT\\_PROT\\_BLOCK\\_BITS)' not met\r\n\r\nThis was deployed to a device running Android 7.1.1\r\n\r\n* * *\r\n\r\n_Reference: <https://bugzilla.xamarin.com/show_bug.cgi?id=57320>_"},{"Id":"8123501902","Type":"PullRequestEvent","CreatedAt":"2018-08-16T14:46:44","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2074","RelatedDescription":"Opened pull request \"Bump to xamarin-android-tools/master/9e78d6e\" (#2074) at xamarin/xamarin-android","RelatedBody":"Context; https://github.com/xamarin/xamarin-android-tools/compare/917d3b3...9e78d6e\r\n\r\nFixes for OpenJDK:\r\nhttps://github.com/xamarin/xamarin-android-tools/pull/43\r\nhttps://github.com/xamarin/xamarin-android-tools/pull/45\r\n\r\nBetter logging: https://github.com/xamarin/xamarin-android-tools/pull/46\r\n\r\nFix for missing JDKs on MacOS: https://github.com/xamarin/xamarin-android-tools/pull/48\r\n\r\nTests now pass on Windows: https://github.com/xamarin/xamarin-android-tools/pull/47"},{"Id":"8121178572","Type":"IssuesEvent","CreatedAt":"2018-08-16T07:12:33","Actor":"xamarin-release-manager","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2069","RelatedDescription":"Closed issue \"[Regression] Master and 15.9 break the Android designer and Forms previewer\" (#2069) at xamarin/xamarin-android","RelatedBody":"Going from:\r\n\r\n15.9: monodroid a81dd627 -> 9b8cd4e\r\nmaster: monodroid 499dd03 -> 5363cc2\r\n\r\nBreaks the our tests for the designer and previewer. The following exception now pops-up when inflating custom controls:\r\n\r\n```\r\n[Info] MonoDroid: UNHANDLED EXCEPTION:\r\n[Info] MonoDroid: System.ArgumentException: Handle must be valid.\r\n[Info] MonoDroid: Parameter name: instance\r\n[Info] MonoDroid:   at Java.Interop.JniEnvironment+InstanceMethods.CallObjectMethod (Java.Interop.JniObjectReference instance, Java.Interop.JniMethodInfo method) [0x00009] in <fc8972c36bf44e5faaab45457e87d302>:0 \r\n[Info] MonoDroid:   at Android.Runtime.JNIEnv.CallObjectMethod (System.IntPtr jobject, System.IntPtr jmethod) [0x0000e] in <d87fb528296241ff935553e737e841b0>:0 \r\n[Info] MonoDroid:   at Java.Interop.TypeManager.GetClassName (System.IntPtr class_ptr) [0x00000] in <d87fb528296241ff935553e737e841b0>:0 \r\n[Info] MonoDroid:   at Java.Interop.TypeManager.CreateInstance (System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer, System.Type targetType) [0x00054] in <d87fb528296241ff935553e737e841b0>:0 \r\n[Info] MonoDroid:   at Java.Lang.Object.GetObject (System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer, System.Type type) [0x000c1] in <d87fb528296241ff935553e737e841b0>:0 \r\n[Info] MonoDroid:   at Android.Runtime.JNIEnv+<>c.<CreateNativeArrayElementToManaged>b__93_9 (System.Type type, System.IntPtr source, System.Int32 index) [0x0000e] in <d87fb528296241ff935553e737e841b0>:0 \r\n[Info] MonoDroid:   at Android.Runtime.JNIEnv.GetObjectArray (System.IntPtr array_ptr, System.Type[] element_types) [0x00051] in <d87fb528296241ff935553e737e841b0>:0 \r\n[Info] MonoDroid:   at Java.Interop.TypeManager.n_Activate (System.IntPtr jnienv, System.IntPtr jclass, System.IntPtr typename_ptr, System.IntPtr signature_ptr, System.IntPtr jobject, System.IntPtr parameters_ptr) [0x000a1] in <d87fb528296241ff935553e737e841b0>:0 \r\n[Info] MonoDroid:   at (wrapper dynamic-method) System.Object.2(intptr,intptr,intptr,intptr,intptr,intptr)\r\nERROR: An exception occured while loading control md5bed1eba2499d8c032005c73fd288d4f3.InfoPane\r\nERROR: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n<snip>\r\nCaused by: android.runtime.JavaProxyThrowable: System.ArgumentException: Handle must be valid.\r\nParameter name: instance\r\n  at Java.Interop.JniEnvironment+InstanceMethods.CallObjectMethod (Java.Interop.JniObjectReference instance, Java.Interop.JniMethodInfo method) [0x00009] in <fc8972c36bf44e5faaab45457e87d302>:0 \r\n  at Android.Runtime.JNIEnv.CallObjectMethod (System.IntPtr jobject, System.IntPtr jmethod) [0x0000e] in <d87fb528296241ff935553e737e841b0>:0 \r\n  at Java.Interop.TypeManager.GetClassName (System.IntPtr class_ptr) [0x00000] in <d87fb528296241ff935553e737e841b0>:0 \r\n  at Java.Interop.TypeManager.CreateInstance (System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer, System.Type targetType) [0x00054] in <d87fb528296241ff935553e737e841b0>:0 \r\n  at Java.Lang.Object.GetObject (System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer, System.Type type) [0x000c1] in <d87fb528296241ff935553e737e841b0>:0 \r\n  at Android.Runtime.JNIEnv+<>c.<CreateNativeArrayElementToManaged>b__93_9 (System.Type type, System.IntPtr source, System.Int32 index) [0x0000e] in <d87fb528296241ff935553e737e841b0>:0 \r\n  at Android.Runtime.JNIEnv.GetObjectArray (System.IntPtr array_ptr, System.Type[] element_types) [0x00051] in <d87fb528296241ff935553e737e841b0>:0 \r\n  at Java.Interop.TypeManager.n_Activate (System.IntPtr jnienv, System.IntPtr jclass, System.IntPtr typename_ptr, System.IntPtr signature_ptr, System.IntPtr jobject, System.IntPtr parameters_ptr) [0x000a1] in <d87fb528296241ff935553e737e841b0>:0 \r\n  at (wrapper dynamic-method) System.Object.2(intptr,intptr,intptr,intptr,intptr,intptr)\r\n  at mono.android.TypeManager.n_activate(Native Method)\r\n  at mono.android.TypeManager.Activate(TypeManager.java:10)\r\n  at md5bed1eba2499d8c032005c73fd288d4f3.InfoPane.<init>(InfoPane.java:32)\r\n  ... 20 more\r\n```\n\n> VS bug [#664560](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/664560)"},{"Id":"8119996653","Type":"IssuesEvent","CreatedAt":"2018-08-15T23:57:19","Actor":"guygodin","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2073","RelatedDescription":"Opened issue \"SslStream has horrible performance, high number of allocations\" (#2073) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Run the Windows project on its own\r\n2. Run the Android project with the Xamarin profiler\r\n3. Observe the insane number of allocations performed by the SslStream on the Android side to read 100MB of data from the network\r\n\r\n[SslStreamPerformance.zip](https://github.com/xamarin/xamarin-android/files/2292030/SslStreamPerformance.zip)\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nThere should be a minimal number of allocations compared to reading from the unencrypted stream\r\n\r\n### Actual Behavior\r\nOver 590MB of objects are allocated to transfer 100MB of data which ends up tanking performance on Android.\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\nMicrosoft Visual Studio Enterprise 2017  (2)\r\nVersion 15.8.0\r\nVisualStudio.15.Release/15.8.0+28010.0\r\nMicrosoft .NET Framework\r\nVersion 4.7.03062\r\n\r\nInstalled Version: Enterprise\r\n\r\nC# Tools   2.9.0-beta8-63208-01\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nMerq   1.1.38 (5b3c069)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMono Debugging for Visual Studio   4.11.7-pre (8955b2a)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nVisual Basic Tools   2.9.0-beta8-63208-01\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: c55dd2c3d618eb93a8d16e503947342b1fa93556.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.11.0.732 (d15-8@33e83e124)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.14.218 (79f535bdd)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.113 (e1d02a7)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.0.0.18 (HEAD/3d8a28f1a)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.14.0.13 (373c313)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"8119414162","Type":"IssuesEvent","CreatedAt":"2018-08-15T21:16:08","Actor":"georgi8706","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2072","RelatedDescription":"Opened issue \"Members of a singleTop activity in background are finalized\" (#2072) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create an activity with a singleTop launch mode and add a class member of type ObservableCollection or LruCache.\r\n  \r\n2. Create a second activity with a parent the first activity.\r\n \r\n3. Run the app and from the first activity (which is the main activity) start the second activity.\r\n\r\n4. Now do some resource consumption operation as loading a bitmap.\r\n\r\nThe result is JavaFinalize() is called on the member of the first activity. This is not acceptable! The instance of the first activity is still alive, but some members are disposed (Java.Lang.Object Handle becomes null). When I return back to the first activity that member is already disposed  (OnCreate is not called because of the singleTop mode).\r\n\r\n### Expected Behavior\r\nAll members of the first activity should be alive. \r\n\r\n### Actual Behavior\r\nSome of the members of the first activity are disposed.\r\n\r\n### Version Information\r\nXamarin Android SDK 8.3.3.2. \r\n\r\nReproduced on a real device (LG G4C) running Android API 23.\r\n\r\nVisual Studio Community version 15.7.5. "},{"Id":"8119142772","Type":"PullRequestEvent","CreatedAt":"2018-08-15T20:20:34","Actor":"rubo","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2071","RelatedDescription":"Opened pull request \"Fixed the issue #1931\" (#2071) at xamarin/xamarin-android","RelatedBody":"HTTP headers `Server` and `User-Agent` must use space symbol as a separator instead of comma as defined in [RFC 7231](https://tools.ietf.org/html/rfc7231). Implemented this requirement similar to what have been done for NSUrlSessionHandler.cs in Xamarin.iOS.\r\n\r\nSee the issue #1931\r\n"},{"Id":"8118852858","Type":"PullRequestEvent","CreatedAt":"2018-08-15T19:20:10","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2064","RelatedDescription":"Closed pull request \"Ensured AndroidApkSigner is run on all APKs\" (#2064) at xamarin/xamarin-android","RelatedBody":"See https://github.com/xamarin/xamarin-android/issues/2060"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8126724506","Type":"IssuesEvent","CreatedAt":"2018-08-17T04:10:12","Actor":"jrahma","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3595","RelatedDescription":"Opened issue \"Xamarin iOS does not deploy to device\" (#3595) at xamarin/Xamarin.Forms","RelatedBody":"Hi,\r\n\r\nThe latest VS for Mac and Xamarin iOS will not deploy to device.\r\n\r\nHere is a bug posted long time back with no solution yet.\r\n\r\n[https://developercommunity.visualstudio.com/content/problem/249249/latest-visual-studio-update-wont-deploy-to-device.html?childToView=313081#comment-313081\r\n](https://developercommunity.visualstudio.com/content/problem/249249/latest-visual-studio-update-wont-deploy-to-device.html?childToView=313081#comment-313081\r\n)\r\n\r\n"},{"Id":"8126293723","Type":"IssuesEvent","CreatedAt":"2018-08-17T01:15:30","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3584","RelatedDescription":"Closed issue \"AbsoluteLayout inside ScrollView not rendered\" (#3584) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nAbsoluteLayout added to a scrollview not rendered\r\n### Steps to Reproduce\r\n\r\n1. Try this snippet\r\n` <ContentView>\r\n        <StackLayout HorizontalOptions=\"Fill\" VerticalOptions=\"Fill\">\r\n            <Label Text=\"Title\"/>\r\n            <ScrollView HorizontalOptions=\"Fill\" VerticalOptions=\"FillAndExpand\">\r\n                <AbsoluteLayout HorizontalOptions=\"Fill\" HeightRequest=\"150\" BackgroundColor=\"Fuchsia\"></AbsoluteLayout>\r\n            </ScrollView>\r\n        </StackLayout>\r\n    </ContentView>`\r\n\r\n### Basic Information\r\nIDE: Visual Studio Mac\r\nPlatform Xamarin.Forms 3.1.0"},{"Id":"8126219822","Type":"IssuesEvent","CreatedAt":"2018-08-17T00:46:24","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3582","RelatedDescription":"Closed issue \"Two keyboards appear when editing the TextColumn after the NumericColumn\" (#3582) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nHi Team,\r\n\r\nWe at Syncfusion develop data visualization controls for Xamarin and we have more than 90 controls spread across all platforms of Xamarin. Please refer the below link for a description about us.\r\nUserGuide: https://help.syncfusion.com/xamarin/sfdatagrid/overview\r\nFeatureTour: https://www.syncfusion.com/products/xamarin\r\n\r\nWe would like to bring to your notice a bug that we encountered recently when editing the first column (Numeric column) alphanumeric Keyboard appears which is fine, after that while editing second column (Text Column), same alpha numeric keyboard appears first, next text keyboard comes to the view which is issue. \r\n\r\nIssue was reproduced only on Samsung Android device with Android version 6 Marshmallow , API - 23. only on Samsung keyboard \r\n\r\nIssue was ensured with Xamarin forms version 2.4.0.280 and latest stable version of 3.1.0.697729 too.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run the attached sample\r\n2. Enters in to edit mode by double tabbing\r\n3. Edit any cell in the first column (Numeric column)\r\n4. Then tab any where to collapse the keyboard\r\n5.  Now edit the second column (Text column)\r\n6. Able to see first \"**Alphanumeric keyboard**\" comes to the view after that \"**Text keyboard**\" appears, which is mentioned issue\r\n\r\n### Expected Behavior\r\nOnly Text keyboard should appear while edit the Text column after editing of Numeric column\r\n### Actual Behavior\r\nAfter editing Numeric column if editing happens for Text column, first Alphanumeric keyboard comes to the view then Text keyboard appears.\r\n### Basic Information\r\n\r\n- Version with issue: 2.4.0.280\r\n- Last known good version:  3.1.0.697729\r\n- IDE:\r\n- Platform Target Frameworks: \r\n  - Android: 6 Marshmallow API 23\r\n- Nuget Packages: 3.1.0.697729\r\n- Affected Devices:  6 Marshmallow API 23 version devices\r\n\r\n### VideoLink\r\n\r\n[TwoKeyboardVideo.zip](https://github.com/xamarin/Xamarin.Forms/files/2293076/TwoKeyboardVideo.zip)\r\n\r\n\r\n### Reproduction Sample Link\r\n[BugReport.zip](https://github.com/xamarin/Xamarin.Forms/files/2293254/BugReport.zip)\r\n\r\n### Note: In case if SfDatagrid packages are not restored in the sample, you can download the package Syncfusion.Xamarin.SfDataGrid from nuget.org. "},{"Id":"8126039238","Type":"IssuesEvent","CreatedAt":"2018-08-16T23:38:42","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3556","RelatedDescription":"Closed issue \"DatePicker fails when binding to both minimum and maximum dates\" (#3556) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nDatePicker control works fine when binding to minimum or maximum but when you bind to both it throws an exception.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a datepicker\r\n2. Bind MinimumDate to a datetime\r\n3. Bind Maximum Date to a datetime\r\n\r\n### Expected Behavior\r\nMinimum and Maximum dates are reflected in use of datepicker\r\n### Actual Behavior\r\nException is thrown\r\n### Basic Information\r\n\r\n- Version with issue:\r\n3.1.0.697729\r\n- Last known good version:\r\n- IDE:  Visual Studio 2017 (Windows)\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 -->  8.1\r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->  27.0.2.1 (?)\r\n- Nuget Packages:\r\n- Affected Devices:\r\nGalaxy S5 (and emulators)\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"8125991043","Type":"PullRequestEvent","CreatedAt":"2018-08-16T23:22:01","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3594","RelatedDescription":"Opened pull request \"Fix NRE; Return 0 if Text null\" (#3594) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nFix NRE; Return 0 if Text null\r\n### Issues Resolved ###\r\n- fixes #3579\r\n### API Changes ###\r\nNone\r\n### Platforms Affected ###\r\n- iOS\r\n### Behavioral/Visual Changes ###\r\nNone\r\n### PR Checklist ###\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8125873436","Type":"IssuesEvent","CreatedAt":"2018-08-16T22:44:48","Actor":"adrianknight89","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3593","RelatedDescription":"Opened issue \"[iOS] Manifest file editor does not properly check/uncheck device interface orientations\" (#3593) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nThe editor and the Info.plist file show different things. Please see reproduction steps.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new project using VS2017 15.7.6\r\n2. Right click iOS project and go to Properties -> iOS Manifest -> Click link to open the manifest editor\r\n3. Uncheck Landscape Left (or Landscape Right)\r\n4. Click Save All (Cntrl + Shift + S)\r\n5. Observe that Info.plist file removes UIInterfaceOrientationLandscapeLeft (or right) but adds UIInterfaceOrientationPortraitUpsideDown (why?)\r\n\r\n1. Create a new project using VS2017 15.7.6\r\n2. Right click iOS project and go to Properties -> iOS Manifest -> Click link to open the manifest editor\r\n3. Uncheck Landscape Left AND Landscape Right at the same time\r\n4. Click Save All (Cntrl + Shift + S)\r\n5. Observe that Info.plist file removes UIInterfaceOrientationLandscapeRight but adds UIInterfaceOrientationPortraitUpsideDown (why?) and does not remove UIInterfaceOrientationLandscapeLeft"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8126074271","Type":"IssuesEvent","CreatedAt":"2018-08-16T23:51:36","Actor":"taikodragon","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4635","RelatedDescription":"Opened issue \"Dyn invoked method with too many / too large parameters throw ExecutionEngineException on device\" (#4635) at xamarin/xamarin-macios","RelatedBody":"<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. `git clone https://github.com/taikodragon/AppBug59184`\r\n2. Open AppBug59184.sln in Visual Studio for Mac.\r\n4. Build and run the application in the \"Debug|iPhone\" configuration.\r\n\r\n### Expected Behavior\r\nSee this bug for historic details: https://bugzilla.xamarin.com/show_bug.cgi?id=59184\r\nEach test should insert one row into each table.\r\n### Actual Behavior\r\nThe first four work properly. Which demonstrates the fix the linked bug, but a mixed database object will cause the same behavior to resurface.\r\n\r\nWhen trying to add a record to the fifth table (BuggedLargerNullableEntities) EFCore will cause an System.ExecutionEngineException while trying to dynamically invoke the constructor of it's Snapshot internal class.\r\n\r\nException info: https://gist.github.com/taikodragon/ca8888a037bad4369e564b7c5043bcd7\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Professional 2017 for Mac ===\r\n\r\nVersion 7.5.4 (build 7)\r\nInstallation UUID: 0e6e8824-59be-4998-8a54-99bf6eb9fa7e\r\nRuntime:\r\n\tMono 5.10.1.57 (2017-12/ea8a24b1bbf) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.193 (master / 64fece5f)\r\n\r\n\tPackage version: 510010057\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.1\r\n\t2.0.5\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.301/Sdks\r\nSDK Versions:\r\n\t2.1.301\r\n\t2.1.4\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.3\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.0 (14320.12.2)\r\nBuild 10L232m\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.99.2.250 (Visual Studio Professional)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.99.2.130 (Visual Studio Professional)\r\nHash: 86e97b10\r\nBranch: HEAD\r\nBuild date: 2018-08-04 01:01:50-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.0.0.17 (Visual Studio Professional)\r\nAndroid SDK: /Users/RES/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t2.3   (API level 10)\r\n\t\t4.0.3 (API level 15)\r\n\t\t4.4   (API level 19)\r\n\t\t5.0   (API level 21)\r\n\t\t6.0   (API level 23)\r\n\t\t7.1   (API level 25)\r\n\t\t8.1   (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705040007\r\nGit revision: 1fcae95fd5b606f806c3b1d445237f675c395fdd\r\nBuild date: 2018-08-02 18:48:50+00\r\nXamarin addins: 48a82b251ec0ef78cb92223061ea448f967f4ec2\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Thu Jun 21 22:53:14 PDT 2018\r\n    root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.5.3\r\n```\r\n\r\n### Build Logs\r\n\r\nhttps://gist.github.com/taikodragon/fb6333588f993e34b1b2f0ebd346e34e\r\n\r\n### Example Project (If Possible)\r\n\r\n\r\nhttps://github.com/taikodragon/AppBug59184\r\nTested on a iPod Touch (6th generation) using iOS 11.4.1\r\nTested using VSMac Beta, Alpha, and XCode 10 channels. \r\n\r\n"},{"Id":"8125791408","Type":"IssuesEvent","CreatedAt":"2018-08-16T22:20:36","Actor":"kalyanmungi","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4621","RelatedDescription":"Closed issue \"Xcode 10 preview throwing native binding duplicate errors when trying to run on device\" (#4621) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n### Steps to Reproduce\r\n\r\n1. Download Xcode 10 beta from apple developer downloads\r\n2. Install the builds from visual studio Xcode 10 preview channel(Xamarin.iOS 11.99)\r\n3. In visual studio tools, change apple sdk path to Xcode beta\r\n4. Try running on real device, it throws errors (Note : Simulators are working fine)\r\n\r\n### Expected Behavior\r\nShould compile\r\n### Actual Behavior\r\nNot compiling, Throwing native bindings errors\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"8124595695","Type":"IssuesEvent","CreatedAt":"2018-08-16T18:04:31","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4633","RelatedDescription":"Closed issue \"[Mac] dynamic variable not working on release build\" (#4633) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. Create a cocoa app.\r\n2. Use C# and 10.10 as target macOS.\r\n3. On the ViewDidLoad() function make a dynamic variable as string.\r\n4. Use the dynamic variable; in my case I try to print it on Console log.\r\n\r\n`dynamic dyn_string = \"THIS IS JUST A TEST!\";`\r\n`Console.WriteLine(dyn_string);`\r\n\r\n### Expected Behavior\r\nIt will print the \"THIS IS JUST A TEST!\" on the Application Output Log \r\n### Actual Behavior\r\nWhen build is on Debug mode you get the the string, but if you switch to Release mode the Application Output Log shows this:\r\n`\r\nUnhandled Exception:\r\nSystem.ArgumentNullException: Value cannot be null.\r\nParameter name: method\r\n  at System.Linq.Expressions.Expression.Call (System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0) [0x00045] in <9998312cb7f54d0fa102075104aa4522>:0 \r\n  at System.Runtime.CompilerServices.CallSite1[T].CreateCustomNoMatchDelegate (System.Reflection.MethodInfo invoke) [0x0003f] in <9998312cb7f54d0fa102075104aa4522>:0 \r\n  at System.Runtime.CompilerServices.CallSite1[T].MakeUpdateDelegate () [0x00151] in <9998312cb7f54d0fa102075104aa4522>:0 \r\n  at System.Runtime.CompilerServices.CallSite1[T].GetUpdateDelegate (T& addr) [0x0000d] in <9998312cb7f54d0fa102075104aa4522>:0 \r\n  at System.Runtime.CompilerServices.CallSite1[T].GetUpdateDelegate () [0x00000] in <9998312cb7f54d0fa102075104aa4522>:0 \r\n  at System.Runtime.CompilerServices.CallSite1[T]..ctor (System.Runtime.CompilerServices.CallSiteBinder binder) [0x00007] in <9998312cb7f54d0fa102075104aa4522>:0 \r\n  at System.Runtime.CompilerServices.CallSite1[T].Create (System.Runtime.CompilerServices.CallSiteBinder binder) [0x0002c] in <9998312cb7f54d0fa102075104aa4522>:0 \r\n  at test.ViewController.ViewDidLoad () [0x00048] in <084fd0e8bccd4c81972d4c3d9736d613>:0 \r\n  at (wrapper managed-to-native) AppKit.NSApplication.NSApplicationMain(int,string[])\r\n  at AppKit.NSApplication.Main (System.String[] args) [0x00040] in <547ffa0ac80b49899084f906bb6a3a0b>:0 \r\n  at test.MainClass.Main (System.String[] args) [0x00005] in <084fd0e8bccd4c81972d4c3d9736d613>:0 \r\n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentNullException: Value cannot be null.\r\nParameter name: method\r\n  at System.Linq.Expressions.Expression.Call (System.Reflection.MethodInfo method, System.Linq.Expressions.Expression arg0) [0x00045] in <9998312cb7f54d0fa102075104aa4522>:0 \r\n  at System.Runtime.CompilerServices.CallSite1[T].CreateCustomNoMatchDelegate (System.Reflection.MethodInfo invoke) [0x0003f] in <9998312cb7f54d0fa102075104aa4522>:0 \r\n  at System.Runtime.CompilerServices.CallSite1[T].MakeUpdateDelegate () [0x00151] in <9998312cb7f54d0fa102075104aa4522>:0 \r\n  at System.Runtime.CompilerServices.CallSite1[T].GetUpdateDelegate (T& addr) [0x0000d] in <9998312cb7f54d0fa102075104aa4522>:0 \r\n  at System.Runtime.CompilerServices.CallSite1[T].GetUpdateDelegate () [0x00000] in <9998312cb7f54d0fa102075104aa4522>:0 \r\n  at System.Runtime.CompilerServices.CallSite1[T]..ctor (System.Runtime.CompilerServices.CallSiteBinder binder) [0x00007] in <9998312cb7f54d0fa102075104aa4522>:0 \r\n  at System.Runtime.CompilerServices.CallSite1[T].Create (System.Runtime.CompilerServices.CallSiteBinder binder) [0x0002c] in <9998312cb7f54d0fa102075104aa4522>:0 \r\n  at test.ViewController.ViewDidLoad () [0x00048] in <084fd0e8bccd4c81972d4c3d9736d613>:0 \r\n  at (wrapper managed-to-native) AppKit.NSApplication.NSApplicationMain(int,string[])\r\n  at AppKit.NSApplication.Main (System.String[] args) [0x00040] in <547ffa0ac80b49899084f906bb6a3a0b>:0 \r\n  at test.MainClass.Main (System.String[] args) [0x00005] in <084fd0e8bccd4c81972d4c3d9736d613>:0 \r\n`\r\n### Environment\r\n\r\n<!--\r\n1. Visual Studio for Mac:\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. \r\n-->\r\n\r\n```\r\nVisual Studio Community 2017 for Mac\r\nVersion 7.5.2 (build 40)\r\nInstallation UUID: 27beacef-3e04-40df-ae82-33e36244d668\r\nRuntime:\r\n\tMono 5.10.1.57 (2017-12/ea8a24b1bbf) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 510010057\r\n\r\nNuGet\r\nVersion: 4.3.1.4445\r\n\r\n.NET Core\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Version: 2.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Version: 2.1.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\nXamarin.Profiler\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\nApple Developer Tools\r\nXcode 9.3 (14154)\r\nBuild 9E145\r\n\r\nXamarin.Mac\r\nVersion: 4.4.1.193 (Visual Studio Community)\r\n\r\nXamarin.iOS\r\nVersion: 11.12.0.4 (Visual Studio Community)\r\nHash: 64fece5f\r\nBranch: d15-7\r\nBuild date: 2018-05-29 20:00:44-0400\r\n\r\nXamarin.Android\r\nVersion: 8.3.3.2 (Visual Studio Community)\r\nAndroid SDK: /Users/bienlaqui/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.2 (API level 17)\r\n\t\t4.4 (API level 19)\r\n\t\t5.0 (API level 21)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 26.0.2\r\nSDK Build Tools Version: 26.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\nXamarin Inspector\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\nBuild Information\r\nRelease ID: 705020040\r\nGit revision: cfe2fc0566bc4db990242959de40505a13f58352\r\nBuild date: 2018-05-30 11:24:18-04\r\nXamarin addins: 3ac7413ef51a88e06367313c27aec8f7292752a6\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\nOperating System\r\nMac OS X 10.13.4\r\nDarwin 17.5.0 Darwin Kernel Version 17.5.0\r\n    Fri Apr 13 19:32:32 PDT 2018\r\n    root:xnu-4570.51.2~1/RELEASE_X86_64 x86_64\r\n\r\nEnabled user installed addins\r\nInternet of Things (IoT) development (Preview) 7.5\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\nhttps://gist.github.com/bnvnclq/69f40ced28db40a1a24ca264505bd255\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"8124587534","Type":"IssuesEvent","CreatedAt":"2018-08-16T18:02:52","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4634","RelatedDescription":"Opened issue \"[msbuild] Use xcrun everywhere to pick Apple tools\" (#4634) at xamarin/xamarin-macios","RelatedBody":"Following the work in https://github.com/xamarin/xamarin-macios/pull/4601 and issue https://github.com/xamarin/xamarin-macios/issues/4576.\r\n\r\nI suggest we try to move our msbuild tasks to use `xcrun` instead of hardcoded tool path that can become obsolete.\r\n\r\nI am thinking the `XcodeCompilerToolTask` should call `xcrun` and the all the \"tool tasks\" should subclass `XcodeCompilerToolTask`."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1029840138099220487","CreatedAt":"2018-08-15T21:19:57+00:00","UserScreenname":"xamarinhq","Text":"Attend A #dotNETConf Event Near You - https://t.co/VrHYwnCS69\n\nIt's a FREE, 3-day virtual dev event co-organized by… https://t.co/tqMWcB8mJz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":46,"FavoriteCount":31,"RawContent":null},{"Id":"1026898128509825024","CreatedAt":"2018-08-07T18:29:27+00:00","UserScreenname":"xamarinhq","Text":"- Authentication   - Encryption   - Integrity\n3 important requirements to securing network communications &amp; absolut… https://t.co/hDPkHLZsLA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":91,"FavoriteCount":47,"RawContent":null},{"Id":"1025442837813518336","CreatedAt":"2018-08-03T18:06:38+00:00","UserScreenname":"xamarinhq","Text":"Want to use a single code base for multiple platforms and devices? Of course you do. ...just posted to our Xamarin… https://t.co/qJBV4vvEir","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":170,"FavoriteCount":85,"RawContent":null},{"Id":"1024752638599028736","CreatedAt":"2018-08-01T20:24:02+00:00","UserScreenname":"xamarinhq","Text":"This year’s #dotNETConf is coming 9/12-14. Live sessions w/ speakers from the community &amp; it's your chance to learn… https://t.co/Nujb04dGd4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":71,"FavoriteCount":44,"RawContent":null},{"Id":"1024013376295452672","CreatedAt":"2018-07-30T19:26:28+00:00","UserScreenname":"xamarinhq","Text":"Here's everything you need to know to integrate automated visual UI tests into a dev toolchain that includes an… https://t.co/12Ihjj4bSN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":122,"FavoriteCount":56,"RawContent":null},{"Id":"1022882059763830784","CreatedAt":"2018-07-27T16:31:01+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/RGpgfHMoPZ -- Announcing Xamarin .Android support for Android 9.0 (P) now available for both #VS2017 &amp;… https://t.co/9clAy4LHZp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":83,"FavoriteCount":53,"RawContent":null},{"Id":"1022866229143461888","CreatedAt":"2018-07-27T15:28:07+00:00","UserScreenname":"xamarinhq","Text":"Previewing files from inside your Xamarin .iOS app is a great way to enhance user experience. ...and adding this fe… https://t.co/tF7v5at9xo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":30,"RawContent":null},{"Id":"1019670557011243008","CreatedAt":"2018-07-18T19:49:40+00:00","UserScreenname":"xamarinhq","Text":"Xamarin.Forms 3.1 delivers the latest in quality improvements. We're excited to introduce Xamarin.Forms 3.1, now wi… https://t.co/qW6S2P7Hi0","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":260,"FavoriteCount":163,"RawContent":null},{"Id":"1016758939877117952","CreatedAt":"2018-07-10T18:59:56+00:00","UserScreenname":"xamarinhq","Text":"Understanding your app, it's users, &amp; their interactions helps you build a 5-star app. Application Insights w/ AppC… https://t.co/Smw5tVHZ1X","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":43,"FavoriteCount":26,"RawContent":null},{"Id":"1014949294737186816","CreatedAt":"2018-07-05T19:09:03+00:00","UserScreenname":"xamarinhq","Text":"Cool intros to new goodies in &lt;10 minutes! Explore some of the “Snack Pack” episodes that @JamesMontemagno bundled… https://t.co/80gmo35fb6","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":89,"FavoriteCount":43,"RawContent":null},{"Id":"1014903254034141190","CreatedAt":"2018-07-05T16:06:06+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/3RaJk3O0xb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":44,"FavoriteCount":34,"RawContent":null},{"Id":"1014521211970379776","CreatedAt":"2018-07-04T14:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":34,"RawContent":null},{"Id":"1014159326645313537","CreatedAt":"2018-07-03T14:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":25,"RawContent":null},{"Id":"1013873320834445313","CreatedAt":"2018-07-02T19:53:31+00:00","UserScreenname":"xamarinhq","Text":"In today's Xamarin Podcast, @PierceBoggan &amp; @JamesMontemagno talk up latest &amp; greatest in mobile #dotNET dev; Xamar… https://t.co/chy5AhHt86","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":63,"FavoriteCount":43,"RawContent":null},{"Id":"1013805063209455616","CreatedAt":"2018-07-02T15:22:17+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/kdzv9U4084","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":23,"RawContent":null},{"Id":"1013547297437835264","CreatedAt":"2018-07-01T22:18:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/JL1SW3MFro","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":29,"RawContent":null},{"Id":"1012399525338595328","CreatedAt":"2018-06-28T18:17:10+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/3QxhuBcUiC v7.2 introduces two new MSBuild properties to make maintaining Android VersionCode for Andr… https://t.co/j469e1DU24","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":84,"FavoriteCount":58,"RawContent":null}]}},"RunOn":"2018-08-17T05:30:53.5897292Z","RunDurationInMilliseconds":4101}