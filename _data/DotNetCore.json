{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework January 2018 Security and Quality Rollup","PublishedOn":"2018-01-10T06:39:31+00:00","CommentsCount":28,"FacebookCount":0,"Summary":"Today, we are releasing the January 2018 Security and Quality Rollup. Please avoid installing this update on Windows 7 or Windows Server 2008 R2. See .NET Framework January 2018 Rollup Known Issue...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/","RawContent":null},{"Title":".NET for UWP January 2018 Update","PublishedOn":"2018-01-10T04:17:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET for UWP January 2018 Update. This post includes the fix included and instructions on how to update your applications. Security CVE-2018-0786 – Security Feature Bypass...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/","RawContent":null},{"Title":".NET Framework 4.7.1 is available on Windows Update, WSUS and MU Catalog!","PublishedOn":"2018-01-09T21:39:54+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today, we are happy to announce the Microsoft .NET Framework 4.7.1 is available on Windows Update, Windows Server Update Services (WSUS) and Microsoft Update (MU) Catalog. This includes reliability...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-4-7-1-is-available-on-windows-update-wsus-and-mu-catalog/","RawContent":null},{"Title":".NET Core January 2018 Update","PublishedOn":"2018-01-09T21:08:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core January 2018 Update. This includes .NET Core  1.0.9, 1.1.6 and 2.0.5. Please leave feedback on the release in the comments below or at dotnet/core #1199. Security...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-core-january-2018-update/","RawContent":null},{"Title":"Migrating your existing .NET application to the cloud? Tell us about it!","PublishedOn":"2017-12-05T18:14:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Hi everyone! The .NET team is conducting a survey to learn more about your approach for moving existing .NET applications to the cloud.  The survey should take less than 5 minutes to complete. Take...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/12/05/migrating-your-existing-net-application-to-the-cloud-tell-us-about-it/","RawContent":null},{"Title":"Announcing the Windows Compatibility Pack for .NET Core","PublishedOn":"2017-11-17T04:59:32+00:00","CommentsCount":76,"FacebookCount":0,"Summary":"Porting existing code to .NET Core used to be quite hard because the available API set was very small. In .NET Core 2.0, we already made this much easier, thanks to .NET Standard 2.0. Today,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/announcing-the-windows-compatibility-pack-for-net-core/","RawContent":null},{"Title":"UPDATE – Microservices and Docker containers: Architecture, Patterns and Development guidance (Updated for .NET Core 2.0)","PublishedOn":"2017-11-16T22:00:06+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published this eBook/guide and sample application offering guidance for architecting microservices and Docker containers based applications. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-microservices-and-docker-containers-architecture-patterns-and-development-guidance-updated-for-net-core-2-0/","RawContent":null},{"Title":"UPDATE – Web Applications with ASP.NET Core Architecture and Patterns guidance (Updated for ASP.NET Core 2)","PublishedOn":"2017-11-16T21:00:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published an eBook/Guide and sample application offering guidance named Architecting Modern Web Applications with ASP.NET Core and Microsoft Azure. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-web-applications-with-asp-net-core-architecture-and-patterns-guidance-updated-for-asp-net-core-2/","RawContent":null},{"Title":"Introducing Tensor for multi-dimensional Machine Learning and AI data","PublishedOn":"2017-11-15T22:00:18+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Overview Tensor is an exchange type for homogenous multi-dimensional data for 1 to N dimensions. The motivation behind introducing Tensor&#60;T&#62; is to make it easy for Machine Learning library...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/introducing-tensor-for-multi-dimensional-machine-learning-and-ai-data/","RawContent":null},{"Title":"Introducing Nullable Reference Types in C#","PublishedOn":"2017-11-15T20:00:47+00:00","CommentsCount":240,"FacebookCount":0,"Summary":"Today we released a prototype of a C# feature called &#8220;nullable reference types&#8220;, which is intended to help you find and fix most of your null-related bugs before they blow up at runtime....","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/nullable-reference-types-in-csharp/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7097053889","Type":"PullRequestEvent","CreatedAt":"2018-01-14T15:15:00","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Opened pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7065382954","Type":"PullRequestEvent","CreatedAt":"2018-01-06T19:21:47","Actor":"ctaggart","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Opened pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7044237283","Type":"PullRequestEvent","CreatedAt":"2017-12-31T20:25:44","Actor":"onovotny","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Opened pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"6946829856","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:08:42","Actor":"heiligerdankgesang","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Opened pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"6934052963","Type":"PullRequestEvent","CreatedAt":"2017-12-02T15:19:09","Actor":"rprouse","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Opened pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""},{"Id":"6872255902","Type":"PullRequestEvent","CreatedAt":"2017-11-17T22:01:26","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/90","RelatedDescription":"Merged pull request \"Add BenchmarkDotNet to README.md and project.json\" (#90) at dotnet/home","RelatedBody":""},{"Id":"6872252909","Type":"PullRequestEvent","CreatedAt":"2017-11-17T22:00:44","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/89","RelatedDescription":"Merged pull request \"New logo and SSL certificate for Peachpie\" (#89) at dotnet/home","RelatedBody":""},{"Id":"6868854916","Type":"PullRequestEvent","CreatedAt":"2017-11-17T09:04:03","Actor":"AndreyAkinshin","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/90","RelatedDescription":"Opened pull request \"Add BenchmarkDotNet to README.md and project.json\" (#90) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7089727012","Type":"IssuesEvent","CreatedAt":"2018-01-12T04:51:18","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/53","RelatedDescription":"Opened issue \".NET Framework January 2018 Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications\" (#53) at dotnet/announcements","RelatedBody":"# .NET Framework January 2018 Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications\r\n\r\nAn issue has been found in the [.NET Framework January 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/). The .NET team is in the process of fixing the issue. This document describes the symptom and workarounds to resolve the issue while you are waiting for a fix.\r\n\r\nThis document will be updated when a fix is made available.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #599](https://github.com/Microsoft/dotnet/issues/599)\r\n\r\n## Symptoms\r\n\r\nWindows Presentation Foundation (WPF) applications that request a fallback font or a character that is not included in the currently selected font return the following error messages: \r\n\r\n```\r\nSystem.TypeInitializationException\r\n \r\n“FileFormatException: No FontFamily element found in FontFamilyCollection \r\nthat matches current OS or greater: Win7SP1”.\r\n\r\nInner exception originates from: CompositeFontParser\r\n```\r\n\r\n## Workarounds\r\n\r\nTo work around this problem, use one of the following methods.\r\n\r\n### Workaround 1 - Uninstall the January 2018 Update\r\n\r\nTo keep .NET 4.7.1 installed and maintain protection against vulnerabilities that are addressed by the January security updates, uninstall the January .NET Framework Security and Quality Rollup ([KB4055002](https://support.microsoft.com/en-us/help/4055002)), and then install the January .NET Framework Security-Only Update ([KB4054183](https://support.microsoft.com/en-us/help/4054183)). To do this, follow these steps:\r\n\r\n1. In Control Panel, open the Windows Update item, and then select View update history.\r\n1. In the Review your update history list, locate and select Security Update for Microsoft .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, 4.7.1 ([KB4055002](https://support.microsoft.com/en-us/help/4055002)). Then, select Uninstall.\r\n1. When you are prompted for confirmation to uninstall, select Yes.\r\n1. Restart your computer if you are prompted to do this.\r\n1. Download and install the Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 for Windows 7 SP1 and Windows Server 2008 R2 SP1 and .NET Framework 4.6 for Windows Server 2008 SP2 ([KB4054183](https://support.microsoft.com/en-us/help/4054183)) for your operating system configuration from the following links:\r\n   * [Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 for Windows 7 SP1 and Windows Server 2008 R2 SP1 for x86 systems (KB4054183)](http://download.windowsupdate.com/d/msdownload/update/software/secu/2018/01/ndp47-kb4054183-x86_301cb3d6591b572786c8349c12a28e5ec5d2d334.exe)\r\n   * [Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 on Windows 7 SP1 and Windows Server 2008 R2 SP1 for x64 systems (KB4055269)](http://download.windowsupdate.com/d/msdownload/update/software/secu/2018/01/ndp47-kb4054183-x64_a022ad5109b1208dff502d1be4477668b4fa258d.exe)\r\n1. Follow the installation prompts, and then restart your computer if your are prompted to do this.\r\n\r\n### Workaround 2 - Uninstall the .NET Framework 4.7.1, Install .NET Framework 4.7\r\n\r\nRoll back to the previous version of .NET Framework. To do this, follow these steps:\r\n\r\n1. In Control Panel, open the Programs and Features item.\r\n1. In the Uninstall or change a program list, locate and then select Microsoft .NET Framework 4.7.1, and then select Uninstall/Change.\r\n![image](https://user-images.githubusercontent.com/2608468/34859496-5a3f11e6-f70b-11e7-82cb-5a12a4f9a633.png)\r\n1. Select Remove .NET Framework 4.7.1 from this computer, and then select Next.\r\n![image](https://user-images.githubusercontent.com/2608468/34859585-f5d50f3e-f70b-11e7-8fb9-a75e35c08767.png)\r\n1. Select Continue to confirm uninstallation.\r\n1. Select Finish after the uninstallation is finished.\r\n![image](https://user-images.githubusercontent.com/2608468/34859595-07877226-f70c-11e7-9d66-908a37ef0ded.png)\r\n1. Restart your computer if you are prompted to do this.\r\n1. Install [.NET Framework 4.7](https://www.microsoft.com/en-us/download/details.aspx?id=55170).\r\n\r\n## Issue Reports\r\n\r\n* [KB4074906 (Microsoft)](https://support.microsoft.com/en-us/help/4074906)\r\n* [0xd4d/dnSpy #692](https://github.com/0xd4d/dnSpy/issues/692)\r\n* [Wox-launcher/Wox #1823](https://github.com/Wox-launcher/Wox/issues/1823)\r\n"},{"Id":"7076404590","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:02:02","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/52","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0764: Denial of Service when parsing XML documents\" (#52) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0764\r\n## Denial of Service when parsing XML documents\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 1.1, and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a Denial of Service vulnerability in all public versions of .NET core due to improper processing of XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application. A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET core handles XML document processing.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.9, 1.1.6 and 2.0.5. Developers are advised to update their .NET Core SDK to version 2.1.4 or 1.1.7. These runtime and SDK versions will also address CVE-2018-0786,  https://github.com/dotnet/announcements/issues/51\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n## Affected Software\r\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected runtime versions listed below\r\n\r\n Runtime Version | Fixed runtime version\r\n----------------| -------------------------\r\n1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7, 1.0.8 | 1.0.9\r\n1.1.0, 1.1.1, 1.1.2, 1.1.4, 1.1.5 | 1.1.6\r\n2.0.0, 2.0.3, 2.0.4 |  2.0.5\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\ |\r\n| macOS | /usr/local/share/dotnet/shared/Microsoft.NETCore.App/    |\r\n| Supported Linux platforms | /usr/share/dotnet/shared/Microsoft.NETCore.App/   |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 1.0.9, 1.1.6 or 2.0.2 then any applications targeting .NET Core will be vulnerable. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by installing the latest runtimes or SDKs. Typically application servers only install a runtime package, developer machines install SDKs. Installers can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). Runtime version 1.1.6 will also install runtime version 1.0.9.\r\n\r\nIf you have built a [self-contained application](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the [application.runtime.config](https://github.com/dotnet/cli/blob/ede74b6be1406ba0c086b6d5fc1a5d4eacff1f01/Documentation/specs/runtime-configuration-file.md#appnameruntimeconfigjson) file for that application and editing the framework version and setting `rollForward` to `false`. This should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nNote that this file is optional, you may need to create it for each application alongside the executable.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0764](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0764)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  "},{"Id":"7076401836","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:01:26","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/51","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0786: Security Feature Bypass in X509 Certificate Validation\" (#51) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0786\r\n## Security Feature Bypass in X509 Certificate Validation\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 1.1, and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly. \r\n\r\nMicrosoft is aware of a security vulnerability in the public versions of .NET Core where an attacker could present a certificate that is marked invalid for a specific use, but a component uses it for that purpose. This action disregards the Enhanced Key Usage tagging.\r\n\r\nThe security update addresses the vulnerability by ensuring that .NET Core components completely validate certificates.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.9, 1.1.6 and 2.0.5. Developers are advised to update their .NET Core SDK to version 2.1.4 or 1.1.7. These runtime and SDK versions will also address CVE-2018-0764 ***** TODO: ADD LINK TO OTHER ISSUE *****\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n## Affected Software\r\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected runtime versions listed below\r\n\r\n Runtime Version | Fixed runtime version\r\n----------------| -------------------------\r\n1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7, 1.0.8 | 1.0.9\r\n1.1.0, 1.1.1, 1.1.2, 1.1.4, 1.1.5 | 1.1.6\r\n2.0.0, 2.0.3, 2.0.4 |  2.0.5\r\n\r\nThis vulnerability also affects any .NET native applications using the following NuGet packages.\r\n\r\nNuGet Packages | Fixed NuGet Packages\r\n-- | --\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.2.* (contains   .NET native 1.4.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.2.4\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.3.* (contains   .NET native 1.6.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.3.5\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.4.* (contains   .NET native 1.7.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.4.2\r\nMicrosoft.NETCore.UniversalWindowsPlatform 6.0.* (contains   .NET native 2.0.*) | Microsoft.NETCore.UniversalWindowsPlatform 6.0.6\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\ |\r\n| macOS | /usr/local/share/dotnet/shared/Microsoft.NETCore.App/    |\r\n| Supported Linux platforms | /usr/share/dotnet/shared/Microsoft.NETCore.App/   |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 1.0.9, 1.1.6 or 2.0.2 then any applications targeting .NET Core will be vulnerable. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by installing the latest runtimes or SDKs. Typically application servers only install a runtime package, developer machines install SDKs. Installers can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). Runtime version 1.1.6 will also install runtime version 1.0.9.\r\n\r\nIf you have built a [self-contained application](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n#### How do I fix my .NET native application? \r\n\r\n.NET native requires that applications be re-processed by the .NET native compiler to incorporate the fixes and the re-processed version needs to be distributed via the Windows Store.\r\n\r\nWe recommend that you update your .NET UWP apps to use the latest minor version of the `Microsoft.NETCore.UniversalWindowsPlatform` NuGet package so that you can build and verify that your app works as expected when updated. If you are using version 6.0.x, you should update to 6.0.6 and if you’re using 5.2.x, you can update to 5.2.4. Of course, you can update to a higher major version too, but we are distributing security updates for all impacted major versions (currently 5.2.x, 5.3.x, 5.4.x and 6.0.x). Additionally, whether or not you update your NuGet packages, all applications submitted to the store after today will be automatically fixed during submission processing.\r\n\r\nIf you do not update your app in the Store, it will automatically be reprocessed and distributed via an application update in the next few weeks. Users who have automatic app updates enabled will get the fix with no intervention on your or their parts. Because updated apps are distributed through the Windows Store, sideloaded apps will not be automatically updated. We recommend that developers who distribute sideloaded apps update the affected NuGet packages, rebuild their applications and distribute them to their users.\r\n\r\nMicrosoft is committed to keeping UWP applications secure and to supporting developers. If you have feedback on the fix distribution process, please let us know at dotnetnative@microsoft.com. \r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the [application.runtime.config](https://github.com/dotnet/cli/blob/ede74b6be1406ba0c086b6d5fc1a5d4eacff1f01/Documentation/specs/runtime-configuration-file.md#appnameruntimeconfigjson) file for that application and editing the framework version and setting `rollForward` to `false`. This should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nNote that this file is optional, you may need to create it for each application alongside the executable.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0786](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0786)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_"},{"Id":"6948315401","Type":"IssuesEvent","CreatedAt":"2017-12-05T23:41:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Closed issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Referencing #29.\r\n\r\nWill it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"},{"Id":"6944555922","Type":"IssuesEvent","CreatedAt":"2017-12-05T10:46:06","Actor":"tioduke","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Opened issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Will it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7097986130","Type":"PullRequestEvent","CreatedAt":"2018-01-15T01:22:04","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15859","RelatedDescription":"Opened pull request \"Update CoreClr to preview1-26114-03 (master)\" (#15859) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"7097961923","Type":"PullRequestEvent","CreatedAt":"2018-01-15T01:07:20","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15856","RelatedDescription":"Merged pull request \"Update CoreClr, CoreFx, PgoData to preview1-26114-02, preview1-26114-03, master-20180114-0044, respectively (master)\" (#15856) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"7097679116","Type":"PullRequestEvent","CreatedAt":"2018-01-14T21:51:24","Actor":"4creators","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15858","RelatedDescription":"Opened pull request \" Update clr-configuration-knobs.md, add new C# csi.exe based script for xplat document generation\" (#15858) at dotnet/coreclr","RelatedBody":"Fixes #15700\r\n\r\nThis PR updates clr-configuration-knobs.md documentation file with current data from clrconfigvalues.h\r\nand jitconfigvalues.h files. \r\n\r\nNew script written in C# which can be run xpalt with support of csi was written due to the following reasons:\r\n1. Wanted to test how effective is C# at typical scripting task in comparison to bash and m4\r\n2. Tried to apply general dogfooding principle starting with non critical part of repo\r\n3. Wanted to remove dependency on m4 in documentation scripts\r\n4. Hoped to gain some insights into strengths and weaknesses of  C# csi based scripting\r\n\r\nIt seems that with current state of csi scripting more complex regex matching (i.e. paretheses stack)\r\nis very inefficient (at least 10 - 30 times slower) than simple string search. Therefore, it was not used\r\nin this PR, except for C++ string literal matching.\r\n\r\nTo unify documentation, there have been some editorial changes introduced into C++\r\nclrconfigvalues.h and jitconfigvalues.h files:\r\n1. Consistent formatting of knobs category names located in comments as well as comment format\r\nstarting with /// instead of // for ease of parsing\r\n2. Upper cased all first letters in all knobs descriptions and moved question marks at the end \r\nputting them inside parentheses\r\n3. Minor white space fixes in clrconfigvalues.h\r\n\r\nKnobs are now presented in tables splitted into categories in alphabetical order. This\r\nsignificantly improves searching and reading.\r\n\r\nThere are some problematic knobs which I hope to fix during code review."},{"Id":"7097563220","Type":"IssuesEvent","CreatedAt":"2018-01-14T20:38:10","Actor":"Petermarcu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/15857","RelatedDescription":"Opened issue \"Debug.Assert causing an application to crash.\" (#15857) at dotnet/coreclr","RelatedBody":"@anpaz-msft commented on [Fri Jan 12 2018](https://github.com/dotnet/core/issues/1216)\n\n# Issue Title\r\n\r\nDebug.Assert causing an application to crash.\r\n\r\n# General\r\n\r\nTypically, Debug.Assert should bring a pop-up with Abort, Retry, Ignore, or if the `assertuienabled` property is `false` then it should just continue, however in version 2.1.2 hitting the assert is causing the app to crash with a `FailFast` message.\r\n\r\nFor a simple console app:\r\n```C#\r\nusing System;\r\nusing System.Diagnostics;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello World!\");\r\n            Debug.Assert(false, \"Assert hit\");\r\n            Console.WriteLine(\"Goodbye World!\");\r\n\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nYou get this:\r\n```\r\nC:\\Users\\anpaz\\source\\repos\\ConsoleApp1\\ConsoleApp1>dotnet run\r\nHello World!\r\nFailFast: Assert hit\r\n\r\n   at System.Diagnostics.Debug.Assert(Boolean condition, String message, String detailMessage)\r\n   at ConsoleApp1.Program.Main(String[] args) in C:\\ConsoleApp1\\ConsoleApp1\\Program.cs:line 11\r\n\r\n   at System.Environment.FailFast(System.String, System.Exception)\r\n   at ConsoleApp1.Program.Main(System.String[])\r\n```\r\n\r\nI'm finding this to be problematic in my xUnit tests: when I run the tests and they (purposely) hit a Debug.Assert the run pauses and eventually fails.\r\n\r\n```\r\n> dotnet --version\r\n2.1.2\r\n```\r\n\n\n"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7097569666","Type":"IssuesEvent","CreatedAt":"2018-01-14T20:42:03","Actor":"Petermarcu","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8399","RelatedDescription":"Opened issue \"dotnet pack does not respect assembly atttributes\" (#8399) at dotnet/cli","RelatedBody":"@junalmeida commented on [Tue Jan 09 2018](https://github.com/dotnet/core/issues/1203)\n\n# Issue Title\r\n\r\nCompiling and packing using Visual Studio 2017 or dotnet pack does not respect assembly attributes while using AssemblyInfo.cs\r\n\r\n# General \r\n\r\n\r\nUsing the following csproj structure: \r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n    <AssemblyName>Alma.Core</AssemblyName>\r\n    <RootNamespace>Alma.Core</RootNamespace>\r\n    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>\r\n    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>\r\n  </PropertyGroup>\r\n```\r\n\r\nWhen building the project, binaries are generated correctly with my attributes from .cs file, but nuget package is wrong: \r\n\r\n![image](https://user-images.githubusercontent.com/991675/34752832-cba0a618-f59b-11e7-8d8d-235483050534.png)\r\n\r\n\n\n"},{"Id":"7097557642","Type":"IssuesEvent","CreatedAt":"2018-01-14T20:34:49","Actor":"Petermarcu","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8398","RelatedDescription":"Opened issue \"CLI didn't take proper environment\" (#8398) at dotnet/cli","RelatedBody":"@KhaledSMQ commented on [Fri Jan 12 2018](https://github.com/dotnet/core/issues/1215)\n\n# Issue Title\r\non windows 10 32bit  .NET Core SDK 2.1.2  i am setting the env to Local \r\nusing set ASPNETCORE_ENVIRONMENT=Local and the settings on windows environment variables for system and user both i set the key to Local but still taking Development `MyProject.Host` in my `launchSettings.json`  dotnet core must to take `MyProject.Host.Local` profile\r\n \r\nlaunchSettings.json file\r\n```\r\n{\r\n\t\"iisSettings\": {\r\n\t\t\"windowsAuthentication\": false,\r\n\t\t\"anonymousAuthentication\": true,\r\n\t\t\"iisExpress\": {\r\n\t\t\t\"applicationUrl\": \"http://localhost:5000/\",\r\n\t\t\t\"sslPort\": 0\r\n\t\t}\r\n\t},\r\n\t\"profiles\": {\r\n\t\t\"IIS Express\": {\r\n\t\t\t\"commandName\": \"IISExpress\",\r\n\t\t\t\"environmentVariables\": {\r\n\t\t\t\t\"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"MyProject.Host\": {\r\n\t\t\t\"commandName\": \"Project\",\r\n\t\t\t\"environmentVariables\": {\r\n\t\t\t\t\"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n\t\t\t},\r\n\t\t\t\"applicationUrl\": \"http://localhost:5000/\"\r\n\t\t},\r\n\t\t\"MyProject.Host.Local\": {  ` <------- targeted profile  `\r\n\t\t\t\"commandName\": \"Project\",\r\n\t\t\t\"environmentVariables\": {\r\n\t\t\t\t\"ASPNETCORE_ENVIRONMENT\": \"Local\"\r\n\t\t\t},\r\n\t\t\t\"applicationUrl\": \"http://localhost:5000/\"\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n \n\n"},{"Id":"7096475830","Type":"PullRequestEvent","CreatedAt":"2018-01-14T07:42:16","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8397","RelatedDescription":"Opened pull request \"WIP Tool command tests with mock\" (#8397) at dotnet/cli","RelatedBody":"\r\n"},{"Id":"7096456960","Type":"PullRequestEvent","CreatedAt":"2018-01-14T07:24:51","Actor":"AndyGerlicher","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8396","RelatedDescription":"Opened pull request \"MSBuild 15.6.54\" (#8396) at dotnet/cli","RelatedBody":"This went into VS15.6 Preview 3 (shiproom approved).\r\n\r\nInternal PR: https://devdiv.visualstudio.com/DevDiv/MSBuild/_git/VS/pullrequest/101374\r\n\r\nIs this the right branch to get inserted there (rel/d15.6 branch)?"},{"Id":"7096407871","Type":"IssuesEvent","CreatedAt":"2018-01-14T06:35:02","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8067","RelatedDescription":"Closed issue \"[tools] December summary issue\" (#8067) at dotnet/cli","RelatedBody":"- [x] Obtain Package, Construct fake project and restore to custom folder https://github.com/dotnet/cli/issues/8062\r\n- [x] Generate Shim, Find XML of metadata update shim  https://github.com/dotnet/cli/issues/8063\r\n- [x] Generate Shim, Proper execute permission for both shim and executable from package https://github.com/dotnet/cli/issues/8064\r\n- [x] Add Shim to Path https://github.com/dotnet/cli/issues/8065\r\n- [x] Write install command parser https://github.com/dotnet/cli/issues/8066 PR:#8132\r\n- [x] loc https://github.com/dotnet/cli/issues/8078\r\n\r\nNuget Ask: NuGet/Home#6200"},{"Id":"7096406870","Type":"IssuesEvent","CreatedAt":"2018-01-14T06:34:06","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8395","RelatedDescription":"Opened issue \"[tools] Require -g to install global tools\" (#8395) at dotnet/cli","RelatedBody":"-g, --global : Install user wide"},{"Id":"7096405759","Type":"IssuesEvent","CreatedAt":"2018-01-14T06:32:51","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8162","RelatedDescription":"Closed issue \"[tools] Customer facing string review\" (#8162) at dotnet/cli","RelatedBody":"- [ ] tool command description [code link](https://github.com/dotnet/cli/blob/master/src/dotnet/commands/dotnet-install/dotnet-install-tool/InstallToolCommandParser.cs#L13) \r\n- [ ] install command help text [code link](https://github.com/dotnet/cli/blob/master/src/dotnet/commands/dotnet-install/InstallCommandParser.cs#L13)\r\n\r\n"},{"Id":"7096404704","Type":"IssuesEvent","CreatedAt":"2018-01-14T06:31:51","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8322","RelatedDescription":"Closed issue \"Issue installing tools using a custom feed\" (#8322) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n```\r\ndotnet install tool dotnet-dev-certs --configfile ./nuget.config\r\n```\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n <packageSources>\r\n    <add key=\"aspnet-dev\" value=\"https://dotnet.myget.org/F/aspnetcore-dev/api/v3/index.json\" />\r\n    <!--To inherit the global NuGet package sources remove the <clear/> line below -->\r\n    <clear />\r\n </packageSources>\r\n</configuration>\r\n```\r\n## Expected  behavior\r\nThe tool gets intalled\r\n\r\n## Actual behavior\r\nInstall fails due to a restore failure.\r\n\r\n```\r\nInstall failed. Failed to download package:\r\nNuGet returned:\r\n\r\nFailed to restore package. \r\nWorkingDirectory: \r\nArguments: restore /var/folders/y5/hl1jtt6947l6bc_c6_7wj_200000gn/T/qwxcj3ip.frc/piuqzyde.eyk.csproj --configfile /Users/jacalvar/work/nuget.config --runtime osx.10.13-x64 /p:BaseIntermediateOutputPath=\\\"/Users/jacalvar/.dotnet/tools/dotnet-dev-certs/5gjm40p2.3jl\\\"\r\nOutput:   Restoring packages for /var/folders/y5/hl1jtt6947l6bc_c6_7wj_200000gn/T/qwxcj3ip.frc/piuqzyde.eyk.csproj...\r\n/var/folders/y5/hl1jtt6947l6bc_c6_7wj_200000gn/T/qwxcj3ip.frc/piuqzyde.eyk.csproj : error NU1100: Unable to resolve 'dotnet-dev-certs ' for '.NETCoreApp,Version=v2.1'.\r\n/var/folders/y5/hl1jtt6947l6bc_c6_7wj_200000gn/T/qwxcj3ip.frc/piuqzyde.eyk.csproj : error NU1100: Unable to resolve 'dotnet-dev-certs ' for '.NETCoreApp,Version=v2.1/osx.10.13-x64'.\r\n  Generating MSBuild file /Users/jacalvar/.dotnet/tools/dotnet-dev-certs/5gjm40p2.3jl/piuqzyde.eyk.csproj.nuget.g.props.\r\n  Generating MSBuild file /Users/jacalvar/.dotnet/tools/dotnet-dev-certs/5gjm40p2.3jl/piuqzyde.eyk.csproj.nuget.g.targets.\r\n  Restore failed in 70.2 ms for /var/folders/y5/hl1jtt6947l6bc_c6_7wj_200000gn/T/qwxcj3ip.frc/piuqzyde.eyk.csproj.\r\n```\r\n## Environment data\r\n```\r\n.NET Command Line Tools (2.2.0-preview1-007796)\r\n\r\nProduct Information:\r\n Version:            2.2.0-preview1-007796\r\n Commit SHA-1 hash:  3ac579997c\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.13\r\n OS Platform: Darwin\r\n RID:         osx.10.12-x64\r\n Base Path:   /Users/jacalvar/.dotnet/sdk/2.2.0-preview1-007796/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.1.0-preview1-26016-05\r\n  Build    : aa54e8822fa635a865bc63e1132628c6d8d5d00a\r\n\r\n```\r\n\r\n\r\n\r\n\r\n"},{"Id":"7096400085","Type":"IssuesEvent","CreatedAt":"2018-01-14T06:27:02","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8366","RelatedDescription":"Closed issue \"The dotnet install command missing from list of SDK commands in dotnet help text\" (#8366) at dotnet/cli","RelatedBody":"I don't see `dotnet install` listed in the list of SDK commands in the dotnet help text (although I can see the help text for the install command itself):\r\n\r\n```\r\nC:\\Users\\daroth\\Desktop\\test>dotnet help\r\n.NET Command Line Tools (2.2.0-preview1-007925)\r\nUsage: dotnet [runtime-options] [path-to-application]\r\nUsage: dotnet [sdk-options] [command] [arguments] [command-options]\r\n\r\npath-to-application:\r\n  The path to an application .dll file to execute.\r\n\r\nSDK commands:\r\n  new              Initialize .NET projects.\r\n  restore          Restore dependencies specified in the .NET project.\r\n  run              Compiles and immediately executes a .NET project.\r\n  build            Builds a .NET project.\r\n  publish          Publishes a .NET project for deployment (including the runtime).\r\n  test             Runs unit tests using the test runner specified in the project.\r\n  pack             Creates a NuGet package.\r\n  migrate          Migrates a project.json based project to a msbuild based project.\r\n  clean            Clean build output(s).\r\n  sln              Modify solution (SLN) files.\r\n  add              Add reference to the project.\r\n  remove           Remove reference from the project.\r\n  list             List reference in the project.\r\n  nuget            Provides additional NuGet commands.\r\n  msbuild          Runs Microsoft Build Engine (MSBuild).\r\n  vstest           Runs Microsoft Test Execution Command Line Tool.\r\n  store            Stores the specified assemblies in the runtime store.\r\n  help             Show help.\r\n\r\nCommon options:\r\n  -v|--verbosity        Set the verbosity level of the command. Allowed values are q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic].\r\n  -h|--help             Show help.\r\n\r\nRun 'dotnet COMMAND --help' for more information on a command.\r\n\r\nsdk-options:\r\n  --version        Display .NET Core SDK version.\r\n  --info           Display .NET Core information.\r\n  --list-sdks      Display the installed SDKs.\r\n  --list-runtimes  Display the installed runtimes.\r\n  -d|--diagnostics Enable diagnostic output.\r\n\r\nruntime-options:\r\n  --additionalprobingpath <path>    Path containing probing policy and assemblies to probe for.\r\n  --fx-version <version>            Version of the installed Shared Framework to use to run the application.\r\n  --roll-forward-on-no-candidate-fx Roll forward on no candidate shared framework is enabled.\r\n  --additional-deps <path>          Path to additional deps.json file.\r\n\r\n\r\nC:\\Users\\daroth\\Desktop\\test>dotnet install -h\r\nUsage: dotnet install [options] [command]\r\n\r\nOptions:\r\n  -h, --help   Show help information.\r\n\r\nCommands:\r\n  tool <packageId>   Install tool\r\n\r\nC:\\Users\\daroth\\Desktop\\test>dotnet --info\r\n.NET Command Line Tools (2.2.0-preview1-007925)\r\n\r\nProduct Information:\r\n Version:            2.2.0-preview1-007925\r\n Commit SHA-1 hash:  ff4299241c\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.0-preview1-007925\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.1.0-preview1-26110-02\r\n  Build    : 77152705cd56e7d89f52585959ec3559d91084c4\r\n```\r\n\r\n"},{"Id":"7096398432","Type":"IssuesEvent","CreatedAt":"2018-01-14T06:25:16","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8078","RelatedDescription":"Closed issue \"[tools] localization \" (#8078) at dotnet/cli","RelatedBody":"To make code review easier. Loc will come later\r\n\r\n\r\n"},{"Id":"7095733571","Type":"IssuesEvent","CreatedAt":"2018-01-13T20:20:29","Actor":"michielvoo","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8394","RelatedDescription":"Closed issue \"`dotnet new` exits with exit code 0 but produces no output\" (#8394) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\nOn a Mac running macOS High Sierra 10.13.2:\r\n- Uninstall .NET Core SDK using [the official uninstall script](https://github.com/dotnet/cli/blob/master/scripts/obtain/uninstall/dotnet-uninstall-pkgs.sh)\r\n- Download [the .NET Core SDK 2.1.4 installer](https://www.microsoft.com/net/download/thank-you/dotnet-sdk-2.1.4-macos-x64-installer)\r\n- Install .NET Core SDK\r\n- Run the following commands\r\n\r\n```\r\n> cd ~\r\n\r\n> mkdir test\r\n\r\n> cd test\r\n\r\n> pwd\r\n/Users/Michiel/test\r\n\r\n> dotnet new sln --name test.sln --output /Users/Michiel/test\r\nThe template \"Solution File\" was created successfully.\r\n\r\n> echo $?\r\n0\r\n\r\n> ls -al\r\ntotal 0\r\ndrwxr-xr-x  2 Michiel  staff   64 Jan 13 19:21 ./\r\ndrwxr-xr-x@ 6 Michiel  staff  192 Jan 13 19:21 ../\r\n\r\n> dotnet new page --name test.cshtml --output /Users/Michiel/test\r\nThe template \"Razor Page\" was created successfully.\r\n\r\n> echo $?\r\n0\r\n\r\n> ls -al\r\ntotal 0\r\ndrwxr-xr-x   2 Michiel  staff    64 Jan 13 19:45 ./\r\ndrwxr-xr-x@ 41 Michiel  staff  1312 Jan 13 19:45 ../\r\n\r\n> dotnet new console --name test --output /Users/Michiel/test\r\nThe template \"Console Application\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on /Users/Michiel/test/test.csproj...\r\n  Restoring packages for /Users/Michiel/test/test.csproj...\r\n  Generating MSBuild file /Users/Michiel/test/obj/test.csproj.nuget.g.props.\r\n  Generating MSBuild file /Users/Michiel/test/obj/test.csproj.nuget.g.targets.\r\n  Restore completed in 242.71 ms for /Users/Michiel/test/test.csproj.\r\n\r\n\r\nRestore succeeded.\r\n\r\n> echo $?\r\n0\r\n\r\n> ls -al\r\ntotal 0\r\ndrwxr-xr-x   2 Michiel  staff    64 Jan 13 19:45 ./\r\ndrwxr-xr-x@ 41 Michiel  staff  1312 Jan 13 19:45 ../\r\n\r\n> stat /Users/Michiel/test/test.csproj\r\nstat: /Users/Michiel/test/test.csproj: stat: No such file or directory\r\n\r\n```\r\n## Expected  behavior\r\nA file named test.sln or test.cshtml is created, or the project and MSBuild files are created.\r\n\r\n## Actual behavior\r\nNo files are created.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     debian\r\n OS Version:  9\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.0.0/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n```\r\n\r\n`dotnet new --list` output:\r\n```\r\nUsage: new [options]\r\n\r\nOptions:\r\n  -h, --help          Displays help for this command.\r\n  -l, --list          Lists templates containing the specified name. If no name is specified, lists all templates.\r\n  -n, --name          The name for the output being created. If no name is specified, the name of the current directory is used.\r\n  -o, --output        Location to place the generated output.\r\n  -i, --install       Installs a source or a template pack.\r\n  -u, --uninstall     Uninstalls a source or a template pack.\r\n  --type              Filters templates based on available types. Predefined values are \"project\", \"item\" or \"other\".\r\n  --force             Forces content to be generated even if it would change existing files.\r\n  -lang, --language   Specifies the language of the template to create.\r\n\r\n\r\nTemplates                                         Short Name       Language          Tags               \r\n--------------------------------------------------------------------------------------------------------\r\nConsole Application                               console          [C#], F#, VB      Common/Console     \r\nClass library                                     classlib         [C#], F#, VB      Common/Library     \r\nUnit Test Project                                 mstest           [C#], F#, VB      Test/MSTest        \r\nxUnit Test Project                                xunit            [C#], F#, VB      Test/xUnit         \r\nASP.NET Core Empty                                web              [C#], F#          Web/Empty          \r\nASP.NET Core Web App (Model-View-Controller)      mvc              [C#], F#          Web/MVC            \r\nASP.NET Core Web App                              razor            [C#]              Web/MVC/Razor Pages\r\nASP.NET Core with Angular                         angular          [C#]              Web/MVC/SPA        \r\nASP.NET Core with React.js                        react            [C#]              Web/MVC/SPA        \r\nASP.NET Core with React.js and Redux              reactredux       [C#]              Web/MVC/SPA        \r\nASP.NET Core Web API                              webapi           [C#], F#          Web/WebAPI         \r\nglobal.json file                                  globaljson                         Config             \r\nNuget Config                                      nugetconfig                        Config             \r\nWeb Config                                        webconfig                          Config             \r\nSolution File                                     sln                                Solution           \r\nRazor Page                                        page                               Web/ASP.NET        \r\nMVC ViewImports                                   viewimports                        Web/ASP.NET        \r\nMVC ViewStart                                     viewstart                          Web/ASP.NET    \r\n```"},{"Id":"7095633219","Type":"IssuesEvent","CreatedAt":"2018-01-13T19:11:18","Actor":"michielvoo","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8394","RelatedDescription":"Opened issue \"`dotnet new` exits with exit code 0 but produces no output\" (#8394) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\nOn a Mac running macOS Hight Sierra 10.13.2:\r\n- Uninstall .NET Core SDK using [the official uninstall script](https://github.com/dotnet/cli/blob/master/scripts/obtain/uninstall/dotnet-uninstall-pkgs.sh)\r\n- Download [the .NET Core SDK 2.1.4 installer](https://www.microsoft.com/net/download/thank-you/dotnet-sdk-2.1.4-macos-x64-installer)\r\n- Install .NET Core SDK\r\n- Run the following commands\r\n\r\n```\r\n> cd ~\r\n\r\n> mkdir test\r\n\r\n> cd test\r\n\r\n> pwd\r\n/Users/Michiel/test\r\n\r\n> dotnet new sln --name test.sln --output /Users/Michiel/test\r\nThe template \"Solution File\" was created successfully.\r\n\r\n> echo $?\r\n0\r\n\r\n> ls -al\r\ntotal 0\r\ndrwxr-xr-x  2 Michiel  staff   64 Jan 13 19:21 ./\r\ndrwxr-xr-x@ 6 Michiel  staff  192 Jan 13 19:21 ../\r\n\r\n> dotnet new page --name test.cshtml --output /Users/Michiel/test\r\nThe template \"Razor Page\" was created successfully.\r\n\r\n> echo $?\r\n0\r\n\r\n> ls -al\r\ntotal 0\r\ndrwxr-xr-x   2 Michiel  staff    64 Jan 13 19:45 ./\r\ndrwxr-xr-x@ 41 Michiel  staff  1312 Jan 13 19:45 ../\r\n\r\n> dotnet new console --name test --output /Users/Michiel/test\r\nThe template \"Console Application\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on /Users/Michiel/test/test.csproj...\r\n  Restoring packages for /Users/Michiel/test/test.csproj...\r\n  Generating MSBuild file /Users/Michiel/test/obj/test.csproj.nuget.g.props.\r\n  Generating MSBuild file /Users/Michiel/test/obj/test.csproj.nuget.g.targets.\r\n  Restore completed in 242.71 ms for /Users/Michiel/test/test.csproj.\r\n\r\n\r\nRestore succeeded.\r\n\r\n> echo $?\r\n0\r\n\r\n> ls -al\r\ntotal 0\r\ndrwxr-xr-x   2 Michiel  staff    64 Jan 13 19:45 ./\r\ndrwxr-xr-x@ 41 Michiel  staff  1312 Jan 13 19:45 ../\r\n\r\n> stat /Users/Michiel/test/test.csproj\r\nstat: /Users/Michiel/test/test.csproj: stat: No such file or directory\r\n\r\n```\r\n## Expected  behavior\r\nA file named test.sln or test.cshtml is created.\r\n\r\n## Actual behavior\r\nNo file is created.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     debian\r\n OS Version:  9\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.0.0/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n```\r\n\r\n`dotnet new --list` output:\r\n```\r\nUsage: new [options]\r\n\r\nOptions:\r\n  -h, --help          Displays help for this command.\r\n  -l, --list          Lists templates containing the specified name. If no name is specified, lists all templates.\r\n  -n, --name          The name for the output being created. If no name is specified, the name of the current directory is used.\r\n  -o, --output        Location to place the generated output.\r\n  -i, --install       Installs a source or a template pack.\r\n  -u, --uninstall     Uninstalls a source or a template pack.\r\n  --type              Filters templates based on available types. Predefined values are \"project\", \"item\" or \"other\".\r\n  --force             Forces content to be generated even if it would change existing files.\r\n  -lang, --language   Specifies the language of the template to create.\r\n\r\n\r\nTemplates                                         Short Name       Language          Tags               \r\n--------------------------------------------------------------------------------------------------------\r\nConsole Application                               console          [C#], F#, VB      Common/Console     \r\nClass library                                     classlib         [C#], F#, VB      Common/Library     \r\nUnit Test Project                                 mstest           [C#], F#, VB      Test/MSTest        \r\nxUnit Test Project                                xunit            [C#], F#, VB      Test/xUnit         \r\nASP.NET Core Empty                                web              [C#], F#          Web/Empty          \r\nASP.NET Core Web App (Model-View-Controller)      mvc              [C#], F#          Web/MVC            \r\nASP.NET Core Web App                              razor            [C#]              Web/MVC/Razor Pages\r\nASP.NET Core with Angular                         angular          [C#]              Web/MVC/SPA        \r\nASP.NET Core with React.js                        react            [C#]              Web/MVC/SPA        \r\nASP.NET Core with React.js and Redux              reactredux       [C#]              Web/MVC/SPA        \r\nASP.NET Core Web API                              webapi           [C#], F#          Web/WebAPI         \r\nglobal.json file                                  globaljson                         Config             \r\nNuget Config                                      nugetconfig                        Config             \r\nWeb Config                                        webconfig                          Config             \r\nSolution File                                     sln                                Solution           \r\nRazor Page                                        page                               Web/ASP.NET        \r\nMVC ViewImports                                   viewimports                        Web/ASP.NET        \r\nMVC ViewStart                                     viewstart                          Web/ASP.NET    \r\n```"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7097753248","Type":"IssuesEvent","CreatedAt":"2018-01-14T22:39:45","Actor":"MelbourneDeveloper","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/621","RelatedDescription":"Opened issue \"UWP Debuggin Broken\" (#621) at dotnet/standard","RelatedBody":"I upgraded to the latest version of UWP 16299. I then upgraded my .NET Standard projects to 2.0. Debugging is completely broken now.  I can't debug anything. I am using Visual Studio 15.5.3"},{"Id":"7088753160","Type":"PullRequestEvent","CreatedAt":"2018-01-11T22:45:46","Actor":"ahsonkhan","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/620","RelatedDescription":"Merged pull request \"Update BuildTools to prerelease-02411-04 (master)\" (#620) at dotnet/standard","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7098416955","Type":"PullRequestEvent","CreatedAt":"2018-01-15T05:00:36","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/26339","RelatedDescription":"Merged pull request \"Disables EventLog Related tests on nano server\" (#26339) at dotnet/corefx","RelatedBody":"EventLog is not supported on nano server. so disabling tests related to Event log on nano server.\r\nFix #26333"},{"Id":"7098416950","Type":"IssuesEvent","CreatedAt":"2018-01-15T05:00:36","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/26333","RelatedDescription":"Closed issue \"[New Tests] Failed: System.ServiceProcess.Tests.ServiceBaseTests / LogWritten & LogWritten_AutoLog_False\" (#26333) at dotnet/corefx","RelatedBody":"Affected tests (introduced in PR #26260 - @Anipik):\r\n* LogWritten\r\n* LogWritten_AutoLog_False\r\n\r\nFailure of `LogWritten` test:\r\n```\r\nSystem.InvalidOperationException : Cannot open log Application on computer '.'. This function is not supported on this system\r\n\r\nat System.Diagnostics.EventLogInternal.OpenForRead(String currentMachineName) in E:\\A\\_work\\1554\\s\\corefx\\src\\System.Diagnostics.EventLog\\src\\System\\Diagnostics\\EventLogInternal.cs:line 1112\r\nat System.Diagnostics.EventLogInternal.get_EntryCount() in E:\\A\\_work\\1554\\s\\corefx\\src\\System.Diagnostics.EventLog\\src\\System\\Diagnostics\\EventLogInternal.cs:line 155\r\nat System.ServiceProcess.Tests.ServiceBaseTests.LogWritten() in E:\\A\\_work\\1554\\s\\corefx\\src\\System.ServiceProcess.ServiceController\\tests\\ServiceBaseTests.cs:line 180\r\n```\r\n\r\n## History of failures\r\n\r\nDay | Build | OS | Details\r\n--- | --- | --- | --- \r\n1/13 | 20180113.03 | Win10.Nano | LogWritten & LogWritten_AutoLog_False\r\n1/14 | 20180114.01 | Win10.Nano | LogWritten & LogWritten_AutoLog_False\r\n1/14 | 20180114.03 | Win10.Nano | LogWritten & LogWritten_AutoLog_False\r\n"},{"Id":"7098083485","Type":"PullRequestEvent","CreatedAt":"2018-01-15T02:13:48","Actor":"wfurt","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/26341","RelatedDescription":"Opened pull request \"[WIP] initial attempt to add proxy configuration based on environment variables\" (#26341) at dotnet/corefx","RelatedBody":"I mostly focused on testing curl and making sure we do the same. \r\nI test combination ov variables and check what takes precedence. \r\nAlso note that this is only configuration. I start looking at implementing HTTPS support but it is not part of this PR. \r\n\r\nAs far as the exception list everything seems to work same for \"normal\" names. \r\nFor IDNS getting something like http://名がドメイン.com/ I sometimes get \r\nGetProxy Called for http://名がドメイン.com/  or \r\nGetProxy Called for  http://xn--v8jxj3d1dzdz08w.com/  \r\n\r\nNote that second is raw format for first one. I'm not sure if we have thoughts on this but my next step is to verify compatibility with curl. We still may want to detect that and use decoded string. \r\n\r\nFor now I keep environmental configuration attached also for windows. \r\nIn next step I plan to \"reuse\" code from winhttp and get proper implementation. \r\n\r\nLast unknown part as authentication. One can specify http_poxy=http://foo:bar@1.1.1.1 and curl will set Proxy-Authorization header automatically.  The current structure seems to assume all proxies do share same credentials but they don't need to on Unix. \r\nAlso I plan to progress on processing .netrc and get credentials from there if there is entry matching proxy destination. \r\n\r\nLast part is work on unit testing. I wanted to craft true unit test when class can get set of inputs and where I can verify outputs without doing any HTTP and I/O. \r\n\r\nAs far as HTTPS support: Doing HTTPS via HTTP (and CONNECT) is not supported and we have issue for that. Also http via HTTPS url does not work and handler throws exception.  I plan to look at it while working on HTTPS support. \r\n\r\n"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7098025829","Type":"IssuesEvent","CreatedAt":"2018-01-15T01:44:45","Actor":"rolandh","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24238","RelatedDescription":"Opened issue \"AlternateContent XAML tag causes IDE error but no compile error\" (#24238) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nVisual Studio 2017 15.6.0\r\nC# 7.2\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. \r\nCreate a WPF project with the following code\r\nPut this in the XAML file header\r\n`xmlns:admin=\"admin\"\r\n`\r\n2.\r\nPut this XAML code somewhere in the visual tree\r\n```\r\n<mc:AlternateContent>\r\n\t<mc:Choice Requires=\"admin\">\r\n\t\t<dxb:BarSubItem x:Name=\"biSniffer\" Content=\"Admin\">\r\n\t\t\t<dxb:BarButtonItem x:Name=\"Button\"/>\r\n\t\t</dxb:BarSubItem>\r\n\t</mc:Choice>\r\n</mc:AlternateContent>\r\n```\r\n3.\r\nPut this code in Properties/AssemblyInfo.cs \r\n\r\n```\r\n#if ADMIN\r\n[assembly: XmlnsDefinition(\"admin\", \"Pcmtec.Editor.View\")]\r\n#endif\r\n```\r\n4.\r\nEnsure you have a build flag named ADMIN in the build properties of your project.\r\n\r\nBuild the project, despite intellisene errors the project builds and runs as expected.\r\n\r\n**Expected Behavior**:\r\nXAML Designer does not display \"Invalid Markup\"\r\nIntellisense does not highlight the text as if there is an error.\r\n\r\n**Actual Behavior**:\r\n![image](https://user-images.githubusercontent.com/1109554/34923622-884e54a4-f9ed-11e7-9e0e-8da0dde4a5d0.png)\r\n\r\nAlso raised the issue here:\r\nhttps://developercommunity.visualstudio.com/content/problem/182354/alternatecontent-tag-in-xaml-causes-ide-error-but.html\r\n\r\nStack overflow discussion:\r\nhttps://stackoverflow.com/questions/24459716/alternatecontent-tags-causing-issues-with-ide-but-not-compiler\r\n\r\nIf this does not belong in Roslyn could someone please move the issue to the relevant repository?\r\n\r\nThank you."},{"Id":"7097895282","Type":"IssuesEvent","CreatedAt":"2018-01-15T00:21:50","Actor":"jamesqo","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24237","RelatedDescription":"Opened issue \"Consider 'value is null' instead of 'value == null' for the \"Add null check\" codefix\" (#24237) at dotnet/roslyn","RelatedBody":"It's possible that there could be a custom operator defined for `==`, which could be slower than a simple pointer comparison. `is null` reads better and is guaranteed to be just a pointer comparison.\r\n\r\nThis may warrant looking into the user's code style to see if they already have a lot of `== null`s or `is null`s, to see which codefix should be offered to maintain consistency."},{"Id":"7097781405","Type":"IssuesEvent","CreatedAt":"2018-01-14T22:59:30","Actor":"vsfeedback","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24236","RelatedDescription":"Opened issue \"Go To X - default selection is not intuitive\" (#24236) at dotnet/roslyn","RelatedBody":"I'm used to Resharper which's GoToX feature works very intuitive. 99% of the time it selects the element I'm looking for.\n\nIn VisualStudio it's very strange. See the following examples:\n\nExample1:\nWhy would you preselect the file without the right extension? I'd expect (1) to be the first file.\n\nExample2:\nWhy is the filter 'greedy'. I'd expect (1) to be the first file.\n\nOkay, maybe I can get to my MainViewModel without using the Mouse/Arrow-Keys with some tricks...\n\nExample3:\nHmm... okay....\n\nExample4:\nARE YOU SERIOUS???\n\nI'd be very thankful if you could improve the search, since the idea is great but practically it's useless.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/181030/go-to-x-default-selection-is-not-intuitive.html\nVSTS ticketId: 550334_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)"},{"Id":"7097669285","Type":"IssuesEvent","CreatedAt":"2018-01-14T21:45:07","Actor":"CyrusNajmabadi","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24235","RelatedDescription":"Opened issue \"VB projects, by default, suppress warnings from 3rd party analyzers.\" (#24235) at dotnet/roslyn","RelatedBody":"I have an analyzer that reports warnings for C# and VB.  C# warnings show up fine in the IDE, but VB warnings do not show up at all (either squiggles or error list).  I debugged through both and found what the issue is.  However, i can't understand the logic and i don't know what the right fix is.\r\n\r\nHere's the parts that are going wrong:\r\n\r\nFirst:\r\n\r\n```\r\n>\tMicrosoft.VisualStudio.LanguageServices.VisualBasic.ProjectSystemShim.VisualBasicProjectOptionsHelper.CreateCompilationOptions(baseCompilationOptionsOpt, newParseOptions, compilerOptions, compilerHost, globalImports, projectDirectoryOpt, ruleSetOpt) Line 52\tBasic\r\n \tMicrosoft.VisualStudio.LanguageServices.VisualBasic.ProjectSystemShim.VisualBasicProject.CreateCompilationOptions(commandLineArguments, newParseOptions) Line 389\tBasic\r\n \tMicrosoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.AbstractProject.UpdateOptions() Line 65\tC#\r\n \tMicrosoft.VisualStudio.LanguageServices.VisualBasic.ProjectSystemShim.VisualBasicProject.UpdateOptions() Line 409\tBasic\r\n \tMicrosoft.VisualStudio.LanguageServices.VisualBasic.ProjectSystemShim.VisualBasicProject.SetCompilerOptions(pCompilerOptions) Line 380\tBasic\r\n```\r\n\r\nhttps://github.com/dotnet/roslyn/blob/master/src/VisualStudio/VisualBasic/Impl/ProjectSystemShim/VisualBasicProjectOptionsHelper.vb#L50-L53\r\n\r\nAt this point we set 'generalDiagnosticOption' to ReportDiagnostic.Supress.  \r\n\r\nLater on when the analyzer reports the diagnostic, we get to:\r\n\r\n```\r\n>\tMicrosoft.CodeAnalysis.Diagnostics.AnalyzerDriver.GetDiagnosticSink.AnonymousMethod__0(diagnostic, analyzer, isSyntaxDiagnostic) Line 1161\tC#\r\n \tMicrosoft.CodeAnalysis.Diagnostics.AnalyzerExecutor.GetAddDiagnostic.AnonymousMethod__0(diagnostic) Line 1472\tC#\r\n \tMicrosoft.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext.ReportDiagnostic(diagnostic) Line 626\tC#\r\n```\r\n\r\nThis does:\r\n\r\n```c#\r\n                var filteredDiagnostic = GetFilteredDiagnostic(diagnostic, compilation);\r\n                if (filteredDiagnostic != null)\r\n                {\r\n                    addLocalDiagnosticCore(filteredDiagnostic, analyzer, isSyntaxDiagnostic);\r\n                }\r\n```\r\n\r\nWe end up filtering out the diagnostic.  The reason for this is:\r\n\r\n```\r\n>\tMicrosoft.CodeAnalysis.VisualBasic.VisualBasicDiagnosticFilter.GetDiagnosticReport(severity, isEnabledByDefault, id, location, category, generalDiagnosticOption, caseInsensitiveSpecificDiagnosticOptions, hasDisableDirectiveSuppression) Line 109\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.VisualBasicDiagnosticFilter.Filter(diagnostic, generalDiagnosticOption, specificDiagnosticOptions) Line 71\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.FilterDiagnostic(diagnostic) Line 1030\tBasic\r\n \tMicrosoft.CodeAnalysis.Diagnostics.AnalyzerDriver.GetFilteredDiagnostic(diagnostic, compilation) Line 1183\tC#\r\n```\r\n\r\nhttps://github.com/dotnet/roslyn/blob/master/src/Compilers/VisualBasic/Portable/Compilation/VisualBasicDiagnosticFilter.vb#L107-L110\r\n\r\nBasically, because the 'generalDiagnosticOption' is Suppress (due to the top bit i linked), and because we reported something at Warning level, the diagnostic is Suppressed.  \r\n\r\n "},{"Id":"7097333064","Type":"IssuesEvent","CreatedAt":"2018-01-14T18:10:13","Actor":"KirillOsenkov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24234","RelatedDescription":"Opened issue \"Issue a warning when a field initializer is used with [ThreadStatic]\" (#24234) at dotnet/roslyn","RelatedBody":"C# compiler should warn if a field initializer is used with [ThreadStatic]. I think this is almost always a bug - I can't think of a scenario where this would be desired.\r\n\r\nThe initializer will run only once per appdomain, and not per thread (as a novice might expect). For all other threads the field will be initialized with null instead."},{"Id":"7097227578","Type":"IssuesEvent","CreatedAt":"2018-01-14T17:01:03","Actor":"Gallimathias","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24233","RelatedDescription":"Opened issue \"SIMD 64 Bit Memory-Alignment Bug\" (#24233) at dotnet/roslyn","RelatedBody":"**Version Used**: .NET 4.7.1 C# 7.2\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Install engenious via nuget or wrote your own packed Vector3 or use a other packed Vector3\r\n2. Cast with pointer to System.Numerics.Vector3 or own unpacked Vector3\r\n3.  Just do the same thing, just put the pointer in a variable before it.\r\n4. Compare the results\r\n\r\n**A brief example:**\r\n\r\nC#-Code:\r\n\r\n````CSharp\r\n        static unsafe void Test()\r\n        {\r\n            var value = new Vector3(0, 0, -41);\r\n            var a = *(Numerics.Vector3*)(&value);\r\n        }\r\n\r\n        static unsafe void TestB()\r\n        {\r\n            var value = new Vector3(0, 0, -41);\r\n            var d = &value;\r\n            var a = *(Numerics.Vector3*)d;\r\n        }\r\n````\r\n\r\nIL-Code:\r\n\r\n````CIL\r\n                 .method private hidebysig static \r\n\t\t\tvoid Test () cil managed \r\n\t\t{\r\n\t\t\t// Method begins at RVA 0x2144\r\n\t\t\t// Code size 33 (0x21)\r\n\t\t\t.maxstack 4\r\n\t\t\t.locals init (\r\n\t\t\t\t[0] valuetype [engenious]engenious.Vector3 'value',\r\n\t\t\t\t[1] valuetype [System.Numerics.Vectors]System.Numerics.Vector3 a\r\n\t\t\t)\r\n\r\n\t\t\tIL_0000: nop\r\n\t\t\tIL_0001: ldloca.s 'value'\r\n\t\t\tIL_0003: ldc.r4 0.0\r\n\t\t\tIL_0008: ldc.r4 0.0\r\n\t\t\tIL_000d: ldc.r4 -41\r\n\t\t\tIL_0012: call instance void [engenious]engenious.Vector3::.ctor(float32, float32, float32)\r\n\t\t\tIL_0017: ldloca.s 'value'\r\n\t\t\tIL_0019: conv.u\r\n\t\t\tIL_001a: ldobj [System.Numerics.Vectors]System.Numerics.Vector3\r\n\t\t\tIL_001f: stloc.1\r\n\t\t\tIL_0020: ret\r\n\t\t} // end of method Program::Test\r\n\r\n\t\t.method private hidebysig static \r\n\t\t\tvoid TestB () cil managed \r\n\t\t{\r\n\t\t\t// Method begins at RVA 0x2174\r\n\t\t\t// Code size 35 (0x23)\r\n\t\t\t.maxstack 4\r\n\t\t\t.locals init (\r\n\t\t\t\t[0] valuetype [engenious]engenious.Vector3 'value',\r\n\t\t\t\t[1] valuetype [engenious]engenious.Vector3* d,\r\n\t\t\t\t[2] valuetype [System.Numerics.Vectors]System.Numerics.Vector3 a\r\n\t\t\t)\r\n\r\n\t\t\tIL_0000: nop\r\n\t\t\tIL_0001: ldloca.s 'value'\r\n\t\t\tIL_0003: ldc.r4 0.0\r\n\t\t\tIL_0008: ldc.r4 0.0\r\n\t\t\tIL_000d: ldc.r4 -41\r\n\t\t\tIL_0012: call instance void [engenious]engenious.Vector3::.ctor(float32, float32, float32)\r\n\t\t\tIL_0017: ldloca.s 'value'\r\n\t\t\tIL_0019: conv.u\r\n\t\t\tIL_001a: stloc.1\r\n\t\t\tIL_001b: ldloc.1\r\n\t\t\tIL_001c: ldobj [System.Numerics.Vectors]System.Numerics.Vector3\r\n\t\t\tIL_0021: stloc.2\r\n\t\t\tIL_0022: ret\r\n\t\t} // end of method Program::TestB\r\n````\r\n\r\n**Expected Behavior**: Both methods should produce the same result on all systems.\r\n\r\nMethod Test: a should be <0. 0. -41>\r\nMethod TestB: a should be <0. 0. -41>\r\n\r\n**Actual Behavior**: When you cast a packed vector into an unpacked vector, the result will always be a zero vector on some computers with 64 Bit and the use of a direct assignment.\r\n\r\nMethod TestB works on all systems no matter if 32 Bit or 64 Bit.\r\nMethod Test does not work as 64 bit version on some systems. Could this be related to the CPU used?\r\n\r\nMy Results compiled as 64 Bit:\r\n\r\nMethod Test: a is <0. 0. 0>\r\nMetod TestB: a is <0. 0. -41>\r\n\r\nOn my PC, Method Test doesn't work. My CPU is Intel i7-5960X.\r\n\r\nThe only difference in CIL are the following lines:\r\n\r\nIL_001a: stloc.1\r\nIL_001b: ldloc.1"},{"Id":"7096566117","Type":"IssuesEvent","CreatedAt":"2018-01-14T09:07:36","Actor":"vsfeedback","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24232","RelatedDescription":"Opened issue \"editorconfig not working for VB.NET in 15.5.2\" (#24232) at dotnet/roslyn","RelatedBody":"I updated my Visual Studio to version 15.5.2 since then the editorconfig settings are not applied to vb files anymore.\n\nI created a sample project here: https://github.com/papauorg/editorconfig_vb_issue\nIt includes an interface that doesn't start with an I and a member variable that starts with m_ instead of just an _. Both rules are included in the editorconfig file but are not applied anymore. When I open the project in a older version of Visual Studio 15.4.0 on my notebook it is working fine. The warnings are displayed as expected.\n\nThe warnings and suggestions for C# files seem to work fine, too.\n\nLet me know if I need to provide more information.\n\nBest regards,\nPhilipp\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/179195/editorconfig-not-working-for-vbnet-in-1552.html\nVSTS ticketId: 549243_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7096169065","Type":"PullRequestEvent","CreatedAt":"2018-01-14T02:25:57","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5247","RelatedDescription":"Opened pull request \"Force link time symbol resolution for \"__Internal\" module for compatibility with Mono\" (#5247) at dotnet/corert","RelatedBody":""},{"Id":"7096081065","Type":"PullRequestEvent","CreatedAt":"2018-01-14T00:58:46","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5246","RelatedDescription":"Merged pull request \"Merge master to nmirror\" (#5246) at dotnet/corert","RelatedBody":""},{"Id":"7096080930","Type":"PullRequestEvent","CreatedAt":"2018-01-14T00:58:38","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5246","RelatedDescription":"Opened pull request \"Merge master to nmirror\" (#5246) at dotnet/corert","RelatedBody":""},{"Id":"7096037193","Type":"PullRequestEvent","CreatedAt":"2018-01-14T00:16:55","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5245","RelatedDescription":"Merged pull request \"Merge nmirror to master\" (#5245) at dotnet/corert","RelatedBody":""},{"Id":"7095970357","Type":"PullRequestEvent","CreatedAt":"2018-01-13T23:18:34","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5245","RelatedDescription":"Opened pull request \"Merge nmirror to master\" (#5245) at dotnet/corert","RelatedBody":""},{"Id":"7095970085","Type":"PullRequestEvent","CreatedAt":"2018-01-13T23:18:20","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5244","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#5244) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"7095956614","Type":"PullRequestEvent","CreatedAt":"2018-01-13T23:08:18","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5244","RelatedDescription":"Opened pull request \"Merge changes from TFS\" (#5244) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"7095879816","Type":"PullRequestEvent","CreatedAt":"2018-01-13T22:08:33","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5243","RelatedDescription":"Merged pull request \"Add ability to build CoreRT with VS BuildTools 2017\" (#5243) at dotnet/corert","RelatedBody":"Dockerfile that builds CoreRT win-x64 packages: https://gist.github.com/am11/826911cbf6c26ea1de4747176ca2b57c\r\n\r\n* Line 17 is required by `dotnet/buildtools`\r\n* Line 18 and 19 are required by MSBuild\r\n"},{"Id":"7095835452","Type":"PullRequestEvent","CreatedAt":"2018-01-13T21:35:11","Actor":"am11","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5243","RelatedDescription":"Opened pull request \"Add ability to build CoreRT with VS BuildTools 2017\" (#5243) at dotnet/corert","RelatedBody":"Dockerfile that builds CoreRT win-x64 packages: https://gist.github.com/am11/826911cbf6c26ea1de4747176ca2b57c\r\n\r\n* Line 17 is required by `dotnet/buildtools`\r\n* Line 18 and 19 are required by MSBuild\r\n"},{"Id":"7095087069","Type":"IssuesEvent","CreatedAt":"2018-01-13T12:51:38","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/4517","RelatedDescription":"Closed issue \"Implement ldftn opcode\" (#4517) at dotnet/corert","RelatedBody":"Implement the ldftn opcode, which pushes a function pointer. It might be possible to just use the results of LLVM.GetNamedFunction as the function pointer and let LLVM fix it up. The method to fill in is:\r\nhttps://github.com/dotnet/corert/blob/e6d0a9398e3d8fc83d047cccda302ed13610f190/src/ILCompiler.WebAssembly/src/CodeGen/ILToWebAssemblyImporter.cs#L634"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7096587274","Type":"IssuesEvent","CreatedAt":"2018-01-14T09:26:50","Actor":"dasMulli","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/1855","RelatedDescription":"Opened issue \"Should netstandard2.0 library publish trim packages?\" (#1855) at dotnet/sdk","RelatedBody":"When building a .NET Framework or .NET Core 2.0 app and ending up with a package reference to a pre-2.0 `System.*` pacakage, it is removed from the publish output.\r\n\r\nThe same does not happen for .NET Standard libraries, at least for those that shipped \"outside\" of NETStandard.Library 1.6.0/1.6.1, but are considered inbox in NETStandard.Library 2.0.0+ for netstandard2.0.\r\nWhile this is probably fine for <2.0, performing a similar trimming could be beneficial for for >= 2.0 libraries, since all platforms that can load netstandard 2.0 libraries should already carry the necessary assemblies (or the app has binding redirects) to load <= netstandard2.0 libraries.\r\n\r\nThe scenarios this affects are plugin architectures that try to load assemblies from \"plugin\" folders that aren't known during build time. This also includes MSBuild tasks.\r\nThe danger here is logic like \"for all DLLs..\" in code or in VS, referencing all published assemblies via the UI, which results in Reference+HintPath items that aren't trimmed (!) and end up in the build/publish output.\r\n\r\nExample:\r\n1. Create a .NET Standard 2.0 library\r\n2. Add a package reference to `System.Text.RegularExpressions` (alt: `Newtonsoft.Json` 10.0.3)\r\n3. `dotnet publish`\r\n4. see `System.Text.RegularExpressions.dll` in publish output.\r\n\r\nQuestion: Is there a benefit in leaving this as it is or would it be better to trim the these packages for netstandard2.0 publish? "},{"Id":"7096405183","Type":"IssuesEvent","CreatedAt":"2018-01-14T06:32:18","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1823","RelatedDescription":"Closed issue \"[tools] Pack experience for portable app\" (#1823) at dotnet/sdk","RelatedBody":"The Producer adds a property in portable app project file to indicate this project is a tool\r\nRun pack target (`dotnet msbuild /t:pack` or `dotnet pack`)\r\nThere is a tool nupkg with correct layout and setting file and ready to publish to NuGet and use"},{"Id":"7094114111","Type":"PullRequestEvent","CreatedAt":"2018-01-12T23:55:30","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1843","RelatedDescription":"Merged pull request \"Pack for tools\" (#1843) at dotnet/sdk","RelatedBody":"Add PackAsTool in csproj, and run dotnet pack. The result will be in\r\ntool format nupkg"},{"Id":"7093414375","Type":"IssuesEvent","CreatedAt":"2018-01-12T20:24:11","Actor":"rynowak","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/1854","RelatedDescription":"Opened issue \"ResolvePackageFileConflicts throwing when referencing System.Diagnostics.DiagnosticSource by assembly path\" (#1854) at dotnet/sdk","RelatedBody":"This is new failure that just started happening in some Razor tests for our MSBuild functionality. This started failing for us `2.2.0-preview1-007927` - this was working before in `2.2.0-preview1-007866`.\r\n\r\nI've attached a repro project, which is doing some esoteric things because this is part of our tests for our MSBuild targets 😆. I think the probably might not be anything wierd that we're doing though.\r\n\r\nThe project file looks like this:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup Condition=\"'$(BinariesRoot)'==''\">\r\n    <!-- In test scenarios $(BinariesRoot) is defined in a generated Directory.Build.props file -->\r\n    <ProjectReference Include=\"..\\..\\Microsoft.AspNetCore.Razor.Test.MvcShim\\Microsoft.AspNetCore.Razor.Test.MvcShim.csproj\"/>\r\n    <ProjectReference Include=\"..\\..\\..\\src\\Microsoft.AspNetCore.Razor.Runtime\\Microsoft.AspNetCore.Razor.Runtime.csproj\"/>\r\n  </ItemGroup>\r\n\r\n  <ItemGroup Condition=\"'$(BinariesRoot)'!=''\">\r\n    <Reference Include=\"$(BinariesRoot)\\System.Diagnostics.DiagnosticSource.dll\"/>\r\n    <Reference Include=\"$(BinariesRoot)\\Microsoft.AspNetCore.Html.Abstractions.dll\"/>\r\n    <Reference Include=\"$(BinariesRoot)\\Microsoft.AspNetCore.Razor.dll\"/>\r\n    <Reference Include=\"$(BinariesRoot)\\Microsoft.AspNetCore.Razor.Runtime.dll\"/>\r\n    <Reference Include=\"$(BinariesRoot)\\Microsoft.AspNetCore.Razor.Test.MvcShim.dll\"/>\r\n  </ItemGroup>\r\n</Project>\r\n```\r\nRemoving `<Reference Include=\"$(BinariesRoot)\\System.Diagnostics.DiagnosticSource.dll\"/>` seems to fix it.\r\n\r\n\r\n```\r\nMicrosoft (R) Build Engine version 15.6.22.57775 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restoring packages for C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\SimpleMvc.csproj...\r\n  Generating MSBuild file C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\obj\\SimpleMvc.csproj.nuget.g.props.\r\n  Generating MSBuild file C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\obj\\SimpleMvc.csproj.nuget.g.targets.\r\n  Restore completed in 273.82 ms for C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\SimpleMvc.csproj.\r\nC:\\Users\\rynowak\\.dotnet\\x64\\sdk\\2.2.0-preview1-007927\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.ConflictResolution.targets(59,5): error MSB4018: The \"ResolvePackageFileConflicts\" task failed unexpectedly. [C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\SimpleMvc.csproj]\r\nC:\\Users\\rynowak\\.dotnet\\x64\\sdk\\2.2.0-preview1-007927\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.ConflictResolution.targets(59,5): error MSB4018: System.ArgumentNullException: Value cannot be null. [C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\SimpleMvc.csproj]\r\nC:\\Users\\rynowak\\.dotnet\\x64\\sdk\\2.2.0-preview1-007927\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.ConflictResolution.targets(59,5): error MSB4018: Parameter name: key [C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\SimpleMvc.csproj]\r\nC:\\Users\\rynowak\\.dotnet\\x64\\sdk\\2.2.0-preview1-007927\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.ConflictResolution.targets(59,5): error MSB4018:    at System.Collections.Generic.Dictionary`2.FindEntry(TKey key) [C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\SimpleMvc.csproj]\r\nC:\\Users\\rynowak\\.dotnet\\x64\\sdk\\2.2.0-preview1-007927\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.ConflictResolution.targets(59,5): error MSB4018:    at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue& value) [C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\SimpleMvc.csproj]\r\nC:\\Users\\rynowak\\.dotnet\\x64\\sdk\\2.2.0-preview1-007927\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.ConflictResolution.targets(59,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ConflictResolution.PackageOverrideResolver`1.Resolve(TConflictItem item1, TConflictItem item2) [C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\SimpleMvc.csproj]\r\nC:\\Users\\rynowak\\.dotnet\\x64\\sdk\\2.2.0-preview1-007927\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.ConflictResolution.targets(59,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ConflictResolution.ConflictResolver`1.ResolveConflict(TConflictItem item1, TConflictItem item2) [C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\SimpleMvc.csproj]\r\nC:\\Users\\rynowak\\.dotnet\\x64\\sdk\\2.2.0-preview1-007927\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.ConflictResolution.targets(59,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ConflictResolution.ConflictResolver`1.ResolveConflicts(IEnumerable`1 conflictItems, Func`2 getItemKey, Action`1 foundConflict, Boolean commitWinner, Action`1 unresolvedConflict) [C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\SimpleMvc.csproj]\r\nC:\\Users\\rynowak\\.dotnet\\x64\\sdk\\2.2.0-preview1-007927\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.ConflictResolution.targets(59,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ConflictResolution.ResolvePackageFileConflicts.ExecuteCore()[C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\SimpleMvc.csproj]\r\nC:\\Users\\rynowak\\.dotnet\\x64\\sdk\\2.2.0-preview1-007927\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.ConflictResolution.targets(59,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() [C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\SimpleMvc.csproj]\r\nC:\\Users\\rynowak\\.dotnet\\x64\\sdk\\2.2.0-preview1-007927\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.ConflictResolution.targets(59,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() in E:\\A\\_work\\24\\s\\src\\Build\\BackEnd\\TaskExecutionHost\\TaskExecutionHost.cs:line 631 [C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\SimpleMvc.csproj]\r\nC:\\Users\\rynowak\\.dotnet\\x64\\sdk\\2.2.0-preview1-007927\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.ConflictResolution.targets(59,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__25.MoveNext() in E:\\A\\_work\\24\\s\\src\\Build\\BackEnd\\Components\\RequestBuilder\\TaskBuilder.cs:line 787 [C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\SimpleMvc.csproj]\r\n```\r\n\r\n\r\n```\r\n.NET Command Line Tools (2.2.0-preview1-007927)\r\n\r\nProduct Information:\r\n Version:            2.2.0-preview1-007927\r\n Commit SHA-1 hash:  a212d5a017\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.15063\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Users\\rynowak\\.dotnet\\x64\\sdk\\2.2.0-preview1-007927\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.1.0-preview1-26110-02\r\n  Build    : 77152705cd56e7d89f52585959ec3559d91084c4\r\n```\r\n[Repro.zip](https://github.com/dotnet/sdk/files/1627368/Repro.zip)\r\n"},{"Id":"7089958883","Type":"IssuesEvent","CreatedAt":"2018-01-12T06:30:35","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/1853","RelatedDescription":"Opened issue \"[tools] Pack should glob result of publish or not\" (#1853) at dotnet/sdk","RelatedBody":"https://github.com/dotnet/sdk/pull/1843#discussion_r161075634\r\n\r\nNeed further discussion \r\n\r\n>dasMulli\r\nI think I suggested ResolvedFileToPublish previously but having doubts now. It could by PreserveNewest with some modification already done in the publish output or users could have targets with <Copy> stuff in there. (or even post-built steps using xcopy execute).\r\nThe most \"correct\" but also slowest would be to do the same as the web sdk does for publishing - clean an intermediate directory and publish to it, then use a glob to harvest this clean publish. e.g. like #1846 (comment)"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"952185961085067266","CreatedAt":"2018-01-13T14:29:58+00:00","UserScreenname":"dotnet","Text":"Our Jeff Fritz (@csharpfritz) will be LIVE CODING again today.  Today's topic is unit testing @AspNet Core projects… https://t.co/kXZpzdtOqA","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":9,"RawContent":null},{"Id":"950980824685412352","CreatedAt":"2018-01-10T06:41:11+00:00","UserScreenname":"dotnet","Text":".NET Framework January 2018 Security and Quality Rollup https://t.co/vyjtKwKpkb","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":14,"RawContent":null},{"Id":"950944972588462080","CreatedAt":"2018-01-10T04:18:43+00:00","UserScreenname":"dotnet","Text":".NET for UWP January 2018 Update https://t.co/zckziEWmv7","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":43,"FavoriteCount":28,"RawContent":null},{"Id":"950850103652139008","CreatedAt":"2018-01-09T22:01:45+00:00","UserScreenname":"dotnet","Text":".NET Framework 4.7.1 is available on Windows Update, WSUS and MU Catalog! https://t.co/Hr3fLteMDg","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":63,"FavoriteCount":57,"RawContent":null},{"Id":"950842872890191872","CreatedAt":"2018-01-09T21:33:01+00:00","UserScreenname":"dotnet","Text":".NET Core January 2018 Update https://t.co/waKNOsvgKU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":76,"FavoriteCount":64,"RawContent":null},{"Id":"948916811034234881","CreatedAt":"2018-01-04T13:59:32+00:00","UserScreenname":"dotnet","Text":"At 10am ET, join our Jeff Fritz (@csharpfritz) for LIVE CODING and he'll answer your questions and .NET, ASPNet, an… https://t.co/CCz9Kdyzk7","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":10,"RawContent":null},{"Id":"944564608391577600","CreatedAt":"2017-12-23T13:45:26+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz - @csharpfritz and MVP @IrisClasson in about an hour for LIVE CODING and pair programming on… https://t.co/kicrnl8tNJ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":11,"RawContent":null}]}},"RunOn":"2018-01-15T05:30:21.2501223Z","RunDurationInMilliseconds":7697}