{"Data":{"GitHub":{"Issues":[{"Id":"524099061","IsPullRequest":false,"CreatedAt":"2019-11-20T02:55:09","Actor":"ThomasGoulet73","Number":"2199","RawContent":null,"Title":"Cleanup of inefficient code","State":"closed","Body":"There are several places in the WPF project where there is old code and inefficient code that aren't up-to-date with .Net. For example, in PresentationCore, there is little to no use of recent releases of the C# language. There is no use of discards or pattern matching and all those new feature that makes the code cleaner and more efficient. I would start with PresentationCore because I think it is the oldest project.\r\n\r\nHere are the things I would change in PresentationCore:\r\n- Use discards with unused out parameter.\r\n- Use pattern matching instead of \"as\" and then null check.\r\n- Use Null-conditional operators instead of null check and then calling the method.\r\n- Replace literal string parameter name with nameof(parameter).\r\n- And other cleanup which is a case per case.\r\n\r\nThere wouldn't be any breaking change because it's only cleanup.\r\n\r\nI would like to do this cleanup in PresentationCore as my first issue. I know cleanup is probably not in your priorities which is why I would like to do this and it's very easy to review because it's not suppose to change the behavior of the code. I would do one PR per big file and group small changes to multiple file in other PR.","Url":"https://github.com/dotnet/wpf/issues/2199","RelatedDescription":"Closed issue \"Cleanup of inefficient code\" (#2199)"},{"Id":"524743378","IsPullRequest":true,"CreatedAt":"2019-11-19T19:41:47","Actor":"dotnet-maestro-bot","Number":"2208","RawContent":null,"Title":"[automated] Merge branch 'release/3.1' => 'master'","State":"closed","Body":"I detected changes in the release/3.1 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1 by the following committers:\n\n* @dotnet-maestro[bot]\n* @vatsan-madhavan\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit checkout master\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/wpf HEAD:merge/release/3.1-to-master\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/wpf HEAD:merge/release/3.1-to-master\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/wpf merge/release/3.1-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/wpf HEAD:merge/release/3.1-to-master\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1-to-master master\r\ngit pull git@github.com:dotnet-maestro-bot/wpf merge/release/3.1-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/wpf HEAD:merge/release/3.1-to-master\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/wpf/pull/2208","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.1' => 'master'\" (#2208)"},{"Id":"525191561","IsPullRequest":true,"CreatedAt":"2019-11-19T19:12:08","Actor":"vatsan-madhavan","Number":"2211","RawContent":null,"Title":"Fixup pipelines for internal PR's to work","State":"closed","Body":"Fixes #2201 \r\n\r\nEnsures PR builds can run from internal code-mirror. ","Url":"https://github.com/dotnet/wpf/pull/2211","RelatedDescription":"Closed or merged PR \"Fixup pipelines for internal PR's to work\" (#2211)"},{"Id":"524567512","IsPullRequest":false,"CreatedAt":"2019-11-19T19:12:08","Actor":"vatsan-madhavan","Number":"2201","RawContent":null,"Title":"Add internal/* to PR trigger list","State":"closed","Body":"Add internal/* branches to PR trigger list in yml file","Url":"https://github.com/dotnet/wpf/issues/2201","RelatedDescription":"Closed issue \"Add internal/* to PR trigger list\" (#2201)"},{"Id":"525191329","IsPullRequest":true,"CreatedAt":"2019-11-19T19:10:03","Actor":"vatsan-madhavan","Number":"2209","RawContent":null,"Title":"Fixup pipelines for internal PR's to work","State":"closed","Body":"Fixes #2201 \r\n\r\nEnsures PR builds can run from internal code-mirror. ","Url":"https://github.com/dotnet/wpf/pull/2209","RelatedDescription":"Closed or merged PR \"Fixup pipelines for internal PR's to work\" (#2209)"},{"Id":"525191473","IsPullRequest":true,"CreatedAt":"2019-11-19T19:09:52","Actor":"vatsan-madhavan","Number":"2210","RawContent":null,"Title":"Fixup pipelines for internal PR's to work","State":"closed","Body":"Fixes #2201 \r\n\r\nEnsures PR builds can run from internal code-mirror. ","Url":"https://github.com/dotnet/wpf/pull/2210","RelatedDescription":"Closed or merged PR \"Fixup pipelines for internal PR's to work\" (#2210)"},{"Id":"525202416","IsPullRequest":false,"CreatedAt":"2019-11-19T19:02:11","Actor":"dpugh","Number":"2212","RawContent":null,"Title":"ContentPresenters created by GridViewRowPresenters are visible to automation","State":"open","Body":"* .NET Core Version: 4.8\r\n* Windows version: (`winver`) 1909 (OS Build 183.63.476(\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? No\r\n \r\nIf you have a ListView that uses a FrameworkElementFactory, each row in the list is represented by a GridViewRowPresenter. That presenter creates a ContentPresenter for each child.\r\n\r\nWhen the content of the cell is another UIElement, however, the automation tree has two elements for each cell (one for the ContentPresenter and one for the contained UIElement). This causes problems with navigation using caps+arrows (you stop at the ContentPresenter before navigating to the UIElement) and with some (cough, Narrator) screen readers that read out the ContentPresenter as \"Custom\".\r\n\r\nThere should be a way to have the automation peers of the GridViewRowPresenter skip the ContentPresenters of cells that have a UIElement as their content (for example, provide a way to specify the AutomationPeers of the content created using a FrameworkElementFactory).\r\n\r\nSee the following source for code that replicates the problem.\r\n     public partial class MainWindow : Window\r\n    {\r\n        private readonly ObservableCollection<RowViewModel> _source;\r\n\r\n        public MainWindow()\r\n        {\r\n            InitializeComponent();\r\n\r\n            _source = new ObservableCollection<RowViewModel>();\r\n            this.View.ItemsSource = _source;\r\n\r\n            GridView grid = this.View.View as GridView;\r\n            grid.Columns.Add(CreateGridViewColumn(100.0, \"Alpha\", 5.0));\r\n            grid.Columns.Add(CreateGridViewColumn(100.0, \"Beta\", 5.0));\r\n            grid.Columns.Add(CreateGridViewColumn(100.0, \"Gamma\", 5.0));\r\n\r\n            _source.Add(new RowViewModel(1));\r\n            _source.Add(new RowViewModel(2));\r\n            _source.Add(new RowViewModel(3));\r\n        }\r\n\r\n        private GridViewColumn CreateGridViewColumn(double width, string name, double padding)\r\n        {\r\n            GridViewColumn column = new GridViewColumn();\r\n            column.Width = width + padding;\r\n            column.Header = name;\r\n            column.CellTemplate = MainWindow.CreateItemDataTemplate(name);\r\n\r\n            return column;\r\n        }\r\n\r\n\r\n        private static DataTemplate CreateItemDataTemplate(string columnName)\r\n        {\r\n            var template = new DataTemplate();\r\n\r\n            FrameworkElementFactory factory = new FrameworkElementFactory(typeof(ContentPresenter));\r\n            factory.SetBinding(ContentPresenter.ContentProperty, new Binding(string.Format(CultureInfo.InvariantCulture, \"[{0}]\", columnName)));\r\n\r\n            template.VisualTree = factory;\r\n\r\n            return template;\r\n        }\r\n    }\r\n\r\n    class RowViewModel\r\n    {\r\n        private readonly string _id;\r\n        private readonly Dictionary<string, object> _rowMap = new Dictionary<string, object>();\r\n\r\n        public RowViewModel(int id)\r\n        {\r\n            _id = id.ToString();\r\n        }\r\n\r\n        public object this[string columnName]\r\n        {\r\n            get\r\n            {\r\n                if (!_rowMap.TryGetValue(columnName, out object value))\r\n                {\r\n                    value = new TextBlock() { Text = columnName + _id };\r\n                }\r\n                return value;\r\n            }\r\n        }\r\n    }\r\n","Url":"https://github.com/dotnet/wpf/issues/2212","RelatedDescription":"Open issue \"ContentPresenters created by GridViewRowPresenters are visible to automation\" (#2212)"},{"Id":"524362845","IsPullRequest":true,"CreatedAt":"2019-11-19T13:48:33","Actor":"dotnet-maestro[bot]","Number":"2200","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191118.21\r\n- **Date Produced**: 11/19/2019 2:20 AM\r\n- **Commit**: f53863434c8067a1053c38453de0d438cca08028\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.19568.21\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2200","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2200)"},{"Id":"524738452","IsPullRequest":true,"CreatedAt":"2019-11-19T03:00:26","Actor":"dotnet-maestro[bot]","Number":"2207","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fd5f4619-cca3-4e12-8f56-08d72a4ce301)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191118.1\r\n- **Date Produced**: 11/19/2019 2:29 AM\r\n- **Commit**: 24b0195c1f4c4a707ca6c3a3bd4715a65fcd8bfe\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.1-rtm.19568.1\r\n\r\n[marker]: <> (End:fd5f4619-cca3-4e12-8f56-08d72a4ce301)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2207","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/winforms\" (#2207)"},{"Id":"524625293","IsPullRequest":true,"CreatedAt":"2019-11-19T01:25:57","Actor":"dotnet-maestro-bot","Number":"2205","RawContent":null,"Title":"[automated] Merge branch 'release/3.1' => 'master'","State":"closed","Body":"I detected changes in the release/3.1 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1 by the following committers:\n\n* @vatsan-madhavan\n* @dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit checkout master\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/wpf HEAD:merge/release/3.1-to-master\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/wpf HEAD:merge/release/3.1-to-master\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/wpf merge/release/3.1-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/wpf HEAD:merge/release/3.1-to-master\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1-to-master master\r\ngit pull git@github.com:dotnet-maestro-bot/wpf merge/release/3.1-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/wpf HEAD:merge/release/3.1-to-master\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/wpf/pull/2205","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.1' => 'master'\" (#2205)"},{"Id":"524568292","IsPullRequest":true,"CreatedAt":"2019-11-18T22:12:34","Actor":"vatsan-madhavan","Number":"2202","RawContent":null,"Title":"Add internal/release/3.* to PR trigger","State":"closed","Body":"We don't need an actual re-branding change. \r\nAdding internal/release/3.* to PR trigger list. \r\n\r\nAddresses #2201 \r\n/cc @mmitche ","Url":"https://github.com/dotnet/wpf/pull/2202","RelatedDescription":"Closed or merged PR \"Add internal/release/3.* to PR trigger\" (#2202)"},{"Id":"524631131","IsPullRequest":false,"CreatedAt":"2019-11-18T21:30:18","Actor":"scalablecory","Number":"2206","RawContent":null,"Title":"Designer crash when hovering over usercontrol. dotnet core 3.0. ","State":"open","Body":"_From @ShemJM on Friday, November 15, 2019 11:45:57 AM_\r\n\r\nI have created a user control with the following XAML:\r\n\r\n```\r\n<Button x:Class=\"MyApp.Controls.Buttons.TileButton\"\r\n             xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" \r\n             xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\" \r\n             mc:Ignorable=\"d\" \r\n             Height=\"115\" Width=\"120\" Cursor=\"Hand\">\r\n    <Button.Background>\r\n        <LinearGradientBrush EndPoint=\"0.5,1\" StartPoint=\"0.5,0\">\r\n            <GradientStop Color=\"#FF047E99\"/>\r\n            <GradientStop Color=\"#FF00858B\" Offset=\"1\"/>\r\n        </LinearGradientBrush>\r\n    </Button.Background>\r\n    <Canvas>\r\n        <Image Name =\"ButtonIcon\"  Height=\"53\" Source=\"board.png\" Canvas.Left=\"-23\" Canvas.Top=\"-37\" />\r\n        <Label Name=\"ButtonLabel\" Content=\"TEXT\" Height=\"26\" Foreground=\"White\" HorizontalContentAlignment=\"Center\" Canvas.Left=\"-14\" Canvas.Top=\"21\"/>\r\n    </Canvas>\r\n</Button>\r\n```\r\n\r\nI can add it to my pages but when I hover over it, the designer crashes and I get this error: \r\n\r\n```\r\nSystem.InvalidOperationException\r\nCalculated node path is invalid -- null->Page:Canvas\r\n   at Microsoft.VisualStudio.DesignTools.XamlSurfaceDesigner.InstanceBuilders.IsolatedSurfaceInstanceManager.GetCorrespondingNodePath(IViewNode viewNode)\r\n   at Microsoft.VisualStudio.DesignTools.XamlSurfaceDesigner.Views.XamlHitTestHelper.HitTestContext.GetCorrespondingSceneElement(IViewObject viewObject)\r\n   at Microsoft.VisualStudio.DesignTools.XamlSurfaceDesigner.Views.XamlHitTestHelper.HitTestContext.FilterPotentialHit(IViewObject viewObject)\r\n   at Microsoft.VisualStudio.DesignTools.XamlSurfaceDesigner.Views.XamlHitTestHelper.HitTestContext.GetFilterBehavior(IViewObject potentialHitTestTarget)\r\n   at Microsoft.VisualStudio.DesignTools.XamlSurfaceDesigner.Views.XamlHitTestHelper.HitTestContext.GetFilterBehavior(IViewObject potentialHitTestTarget)\r\n   at Microsoft.VisualStudio.DesignTools.XamlSurfaceDesigner.Views.XamlHitTestHelper.HitTestContext.<PerformHitTest>d__15.MoveNext()\r\n   at System.Linq.Enumerable.FirstOrDefault[TSource](IEnumerable`1 source)\r\n   at Microsoft.VisualStudio.DesignTools.XamlSurfaceDesigner.Views.XamlSceneView.GetElementAtPoint(Point point, HitTestModifier hitTestModifier, InvisibleObjectHitTestModifier invisibleObjectHitTestModifier, ICollection`1 ignoredElements)\r\n   at Microsoft.VisualStudio.DesignTools.XamlSurfaceDesigner.Views.XamlSceneView.HitElementHelper.GetSelectableElementAtPoint(Point point)\r\n   at Microsoft.VisualStudio.DesignTools.XamlSurfaceDesigner.Views.XamlSceneView.GetSelectableElementAtPoint(Point point, SelectionFor3D selectionFor3D, Boolean selectedOnly, Boolean smartInvisiblePanelSelect, Boolean isDrillingEnabled)\r\n   at Microsoft.VisualStudio.DesignTools.SurfaceDesigner.Views.SceneView.GetCachedSelectableElementAtPoint(Point point, SelectionFor3D selectionFor3D, Boolean isDrillingEnabled)\r\n   at Microsoft.VisualStudio.DesignTools.SurfaceDesigner.Tools.ToolBehavior.CachedHitTest(Point pointerPosition, Boolean allowDrilling)\r\n   at Microsoft.VisualStudio.DesignTools.SurfaceDesigner.Tools.Selection.ElementEditorBehavior.OnHoverOverNonAdorner(Point pointerPosition)\r\n   at Microsoft.VisualStudio.DesignTools.SurfaceDesigner.Tools.ElementToolBehavior.OnHover(Point pointerPosition)\r\n   at Microsoft.VisualStudio.DesignTools.SurfaceDesigner.Tools.EventRouter.ScopeElement_MouseMove_Internal(MouseEventArgs args)\r\n   at Microsoft.VisualStudio.DesignTools.SurfaceDesigner.Tools.EventRouter.<>c__DisplayClass59_0.<ScopeElement_MouseMoveCore>b__1()\r\n   at Microsoft.VisualStudio.DesignTools.Utility.ProtectionZone.TrueProtectionZone.Execute(Action action)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n```\r\n\r\nIf I don't hover over it I can build my project and use the button as expected. \r\n\r\nIt also works fine in .net framework. \r\n\r\nI have also tried with a Stackpanel. I get the same error but instead of canvas it says StackPanel\r\n\r\n\r\n_Copied from original issue: dotnet/core#3815_","Url":"https://github.com/dotnet/wpf/issues/2206","RelatedDescription":"Open issue \"Designer crash when hovering over usercontrol. dotnet core 3.0. \" (#2206)"},{"Id":"524577785","IsPullRequest":true,"CreatedAt":"2019-11-18T21:16:26","Actor":"vatsan-madhavan","Number":"2204","RawContent":null,"Title":"add internal/release/3.* to PR trigger list","State":"closed","Body":"Addresses #2201\r\n\r\nAdds internal/3.* to PR trigger list","Url":"https://github.com/dotnet/wpf/pull/2204","RelatedDescription":"Closed or merged PR \"add internal/release/3.* to PR trigger list\" (#2204)"},{"Id":"524576719","IsPullRequest":true,"CreatedAt":"2019-11-18T21:16:11","Actor":"vatsan-madhavan","Number":"2203","RawContent":null,"Title":"add internal/release/3.* to PR trigger list","State":"closed","Body":"Addresses #2201 \r\n\r\nAdds internal/3.* to PR trigger list","Url":"https://github.com/dotnet/wpf/pull/2203","RelatedDescription":"Closed or merged PR \"add internal/release/3.* to PR trigger list\" (#2203)"},{"Id":"523984994","IsPullRequest":true,"CreatedAt":"2019-11-17T14:00:30","Actor":"dotnet-maestro[bot]","Number":"2198","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191116.8\r\n- **Date Produced**: 11/17/2019 12:44 AM\r\n- **Commit**: 18e4620bd11704f579c46ddcd457a21e7492ae2a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.19566.8\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2198","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2198)"},{"Id":"523844295","IsPullRequest":true,"CreatedAt":"2019-11-16T14:04:40","Actor":"dotnet-maestro[bot]","Number":"2197","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191115.8\r\n- **Date Produced**: 11/15/2019 6:01 PM\r\n- **Commit**: 482c48d5b8a2428e877c8d5af0f49b8d4cb186c9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.19565.8\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2197","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2197)"},{"Id":"523593109","IsPullRequest":false,"CreatedAt":"2019-11-15T17:20:32","Actor":"rladuca","Number":"2196","RawContent":null,"Title":"Test fixups w.r.t WinForms type removal","State":"open","Body":"See: #2169 \r\n\r\nWe need to react to this change in our test repo and remove the type references in the following tests:\r\n\r\n\r\nFeature | Test   Case | Reproduced   OS | Main   Log | Detail   Log\r\n-- | -- | -- | -- | --\r\nElementServices | /Name=\"Var(MouseButtonApp_WpfApplication_WindowsFormSource)\"   /SubArea=\"Input\" | All   test OSes | Log:   ********* Starting Test:   Var(MouseButtonApp_WpfApplication_WindowsFormSource) *********   Repro Arguments:   /Name=Var(MouseButtonApp_WpfApplication_WindowsFormSource) /Are   a=ElementServices   /SubArea=Input   ********* Begin Variation:   InputApp *********   … …   Creating 'WindowsFormSource'   surface...   Creating a WindowsFormSource   object   Unhandled exception occurred in dispatcher.   System.MissingMethodException: Method not found: 'Void   System.Windows.Forms.Cont   rol.add_ContextMenuChanged(System.EventHandler)'.      at System.Windows.Forms.Integration.ElementHost.StartPropertyMapping()      at   System.Windows.Forms.Integration.ElementHost..ctor() in G:\\wpf_private\\src   \\Microsoft.DotNet.Wpf\\src\\WindowsFormsIntegration\\System\\Windows\\Integration\\Ele   mentHost.cs:line 85      at Microsoft.Test.WindowsForms.WindowsFormSource.InitializeComponent()   in /_/   src/Test/Common/Code/Microsoft/Test/WindowsForms/WindowsFormsSource.cs:line   152      at   Microsoft.Test.WindowsForms.WindowsFormSource..ctor() in /_/src/Test/Commo   n/Code/Microsoft/Test/WindowsForms/WindowsFormsSource.cs:line   59   … … | Var(MouseButtonApp_WpfApplication_WindowsFormSource)_3.1\r\nElementServices | /Name=\"Var(Border_Border_Canvas_AllFocusable_HandledEventsToo-WpfApplication-WindowsFormSource)\"   /SubArea=\"InputSequence\" | All   test OSes | Log:   ********* Starting Test:   Var(Border_Border_Canvas_AllFocusable_HandledEventsToo-   WpfApplication-WindowsFormSource)   *********   Repro Arguments:   /Name=Var(Border_Border_Canvas_AllFocusable_HandledEventsToo-Wp   fApplication-WindowsFormSource)   /Area=ElementServices /SubArea=InputSequence   ********* Begin Variation:   InputSequenceApp *********   … …   QualityVault: Process: 3916 now   marked for tracking.   Variation loop beginning...   In CreateTestContainer...   In   ActionSequenceTestEngine.RunTestAction...   'TestContainer' is in storage.   Creating 'WindowsFormSource'   surface...   Creating a WindowsFormSource   object   Unhandled exception occurred in dispatcher.   System.MissingMethodException: Method not found: 'Void   System.Windows.Forms.Cont   rol.add_ContextMenuChanged(System.EventHandler)'.      at   System.Windows.Forms.Integration.ElementHost.StartPropertyMapping()      at System.Windows.Forms.Integration.ElementHost..ctor()   in G:\\wpf_private\\src   \\Microsoft.DotNet.Wpf\\src\\WindowsFormsIntegration\\System\\Windows\\Integration\\Ele   mentHost.cs:line 85      at   Microsoft.Test.WindowsForms.WindowsFormSource.InitializeComponent() in /_/   src/Test/Common/Code/Microsoft/Test/WindowsForms/WindowsFormsSource.cs:line   152      at   Microsoft.Test.WindowsForms.WindowsFormSource..ctor() in /_/src/Test/Commo   n/Code/Microsoft/Test/WindowsForms/WindowsFormsSource.cs:line   59      at   Avalon.Test.CoreUI.Trusted.SurfaceFramework.Initialize(String typeOfSurfac   e, Int32 left, Int32 top, Int32   width, Int32 height, Boolean visibleSurface)      at   Avalon.Test.CoreUI.Trusted.SurfaceFramework..ctor(String typeOfSurface, In   t32 left, Int32 top, Int32   width, Int32 height)      at   Avalon.Test.CoreUI.Common.StubTestContainer.DisplayObject(Object visual, I   nt32 x, Int32 y, Int32 w, Int32   h)   … … | Var(Border_Border_Canvas_AllFocusable_HandledEventsToo-WpfApplication-WindowsFormSource)_3.1\r\n\r\n\r\nWindowsFormsIntegration | DrtWindowsFormsIntegration () | All test OSes | Log:   ********* Starting Test:   DrtWindowsFormsIntegration() *********   Repro Arguments:   /Name=DrtWindowsFormsIntegration() /Area=WindowsFormsIntegration   Clearing click once cache.   ********* Begin Variation:   DrtWindowsFormsIntegration() *********   QualityVault: Process: 2008 now   marked for tracking.   DrtWindowsFormsIntegration (owner:   )   >Suite   (owner:         ):   WindowsFormsHostTestSuite   >Suite   (owner:         ):   ElementHostTestSuite       Non-zero exit code: 1   ***************************************   Variation Result: Fail   ***************************************   ********* End Variation  :   DrtWindowsFormsIntegration() *********   Repro Arguments:   /Name=DrtWindowsFormsIntegration() /Area=WindowsFormsIntegration /SubArea=   ********* Ending Test: DrtWindowsFormsIntegration()   ********* | DrtWindowsFormsIntegration()\r\n-- | -- | -- | -- | --\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/2196","RelatedDescription":"Open issue \"Test fixups w.r.t WinForms type removal\" (#2196)"},{"Id":"523466385","IsPullRequest":true,"CreatedAt":"2019-11-15T14:21:22","Actor":"dotnet-maestro[bot]","Number":"2195","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191115.4\r\n- **Date Produced**: 11/15/2019 12:33 PM\r\n- **Commit**: 5e14088f5b1bfc53127fab7ac108c0bc25afa146\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.19565.4\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2195","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2195)"},{"Id":"523282474","IsPullRequest":true,"CreatedAt":"2019-11-15T07:57:05","Actor":"dotnet-maestro[bot]","Number":"2194","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fd5f4619-cca3-4e12-8f56-08d72a4ce301)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191114.4\r\n- **Date Produced**: 11/15/2019 4:57 AM\r\n- **Commit**: 4bcd68c8b29476fc3c5ca1b496214584aadfdc84\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.1-rtm.19564.4\r\n\r\n[marker]: <> (End:fd5f4619-cca3-4e12-8f56-08d72a4ce301)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2194","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/winforms\" (#2194)"},{"Id":"523217247","IsPullRequest":false,"CreatedAt":"2019-11-15T02:34:39","Actor":"StormStark","Number":"2193","RawContent":null,"Title":"MouseHover event not available","State":"open","Body":"I wanted change the default border color of the button and textbox when the mouse is hovering over the element.\r\nMany websites show there is a MouseHover event present. I noticed there is a lot of mouse events (moseOver, mouseEnter, mouseLeave ,etc. ) presrnt but MouseHover.\r\n\r\nIs there any other event that will do the trick?","Url":"https://github.com/dotnet/wpf/issues/2193","RelatedDescription":"Open issue \"MouseHover event not available\" (#2193)"},{"Id":"523202282","IsPullRequest":true,"CreatedAt":"2019-11-15T01:50:27","Actor":"dotnet-maestro[bot]","Number":"2192","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fd5f4619-cca3-4e12-8f56-08d72a4ce301)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191114.3\r\n- **Date Produced**: 11/15/2019 12:17 AM\r\n- **Commit**: 9fb9388f954d929d9f6213096fca6abdd99716e5\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.1-rtm.19564.3\r\n\r\n[marker]: <> (End:fd5f4619-cca3-4e12-8f56-08d72a4ce301)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2192","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/winforms\" (#2192)"},{"Id":"523162303","IsPullRequest":true,"CreatedAt":"2019-11-14T23:39:09","Actor":"wtgodbe","Number":"2191","RawContent":null,"Title":"Update PreReleaseVersionLabel to RTM","State":"closed","Body":"Non-shipping packages should be labeled RTM for GA. We need to take this fix for 3.1 GA","Url":"https://github.com/dotnet/wpf/pull/2191","RelatedDescription":"Closed or merged PR \"Update PreReleaseVersionLabel to RTM\" (#2191)"},{"Id":"523100764","IsPullRequest":false,"CreatedAt":"2019-11-14T20:58:09","Actor":"rladuca","Number":"2190","RawContent":null,"Title":"Consider exposing an hwnd-scoped version of UpdateLayout","State":"open","Body":"Moved from [internal bug](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/781867).\r\n\r\nHwndTarget calls UpdateLayout while handling WM_RESIZE.  It needs the updated layout for its window, but UpdateLayout deals with all windows on the thread.  As we’ve seen, this can lead to undesirable re-entrancy.  Why should a resize for one hwnd need to touch anything belonging to an unrelated hwnd?\r\n\r\nConsider exposing an hwnd-scoped version of UpdateLayout.","Url":"https://github.com/dotnet/wpf/issues/2190","RelatedDescription":"Open issue \"Consider exposing an hwnd-scoped version of UpdateLayout\" (#2190)"},{"Id":"522414770","IsPullRequest":false,"CreatedAt":"2019-11-14T20:51:11","Actor":"faryu","Number":"2185","RawContent":null,"Title":"System.SystemException: Error at \"OleInitialize\" for \"-2147417850\"","State":"closed","Body":"Hi,\r\n\r\nI have recently migrated my WPF application from .net framework 4.6.2 to .net core 3.0.\r\nIt works great so far on my machine and at least 6 more, but now I have encountered a Notebook, which throws an error which I have not seen before while opening the MainWindow with the ShowDialog() method.\r\n\r\n```cs\r\nSystem.SystemException: Fehler bei \"OleInitialize\" für \"-2147417850\".\r\n   at System.Windows.OleServicesContext.SetDispatcherThread()\r\n   at System.Windows.OleServicesContext.get_CurrentOleServicesContext()\r\n   at System.Windows.DragDrop.RegisterDropTarget(IntPtr windowHandle)\r\n   at System.Windows.Interop.HwndSource.Initialize(HwndSourceParameters parameters)\r\n   at System.Windows.Interop.HwndSource..ctor(HwndSourceParameters parameters)\r\n   at System.Windows.Window.CreateSourceWindow(Boolean duringShow)\r\n   at System.Windows.Window.CreateSourceWindowDuringShow()\r\n   at System.Windows.Window.SafeCreateWindowDuringShow()\r\n   at System.Windows.Window.ShowHelper(Object booleanBox)\r\n   at System.Windows.Window.Show()\r\n   at System.Windows.Window.ShowDialog()\r\n```\r\n\r\nWhich in english could mean: Error at \"OleInitialize\" for \"-2147417850\".\r\n\r\nThe notebook is using Windows 10 64-bit and is running the latest windows updates.\r\nMy application is a self-contained .net core 3.0 with WPF enabled, published for the win-x64 target platform. I do not know how to tell the exact version of which .net core 3.0 I'm using, so I'm posting the version of the PresentationCore.dll, which is file version 4.800.19.46214 and product version 4.8.0-rc2.19462.14+...\r\n\r\nAny idea what could cause this? ","Url":"https://github.com/dotnet/wpf/issues/2185","RelatedDescription":"Closed issue \"System.SystemException: Error at \"OleInitialize\" for \"-2147417850\"\" (#2185)"},{"Id":"523095551","IsPullRequest":false,"CreatedAt":"2019-11-14T20:46:42","Actor":"rladuca","Number":"2189","RawContent":null,"Title":"System.ArgumentException in PresentationFramework.dll!System.Windows.Controls.ToolBarTray.MeasureOverride","State":"open","Body":"This bug was ported over from an [internal bug](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/795027).\r\n\r\nCall Stack\r\nThe call stack provided below is only a SAMPLE. Please use the cab search link above to obtain latest cabs and call stacks.\r\nWindowsBase.ni!System.Windows.Size.set_Width\r\nat PresentationFramework.ni!System.Windows.Controls.ToolBarTray.MeasureOverride in ToolBarTray.cs\r\nat PresentationFramework.ni!System.Windows.FrameworkElement.MeasureCore\r\nat PresentationCore.ni!System.Windows.UIElement.Measure in UIElement.cs\r\nat PresentationFramework.ni!System.Windows.Controls.Border.MeasureOverride in Border.cs\r\nat PresentationFramework.ni!System.Windows.FrameworkElement.MeasureCore\r\nat PresentationCore.ni!System.Windows.UIElement.Measure in UIElement.cs\r\nat PresentationFramework.ni!System.Windows.Controls.DockPanel.MeasureOverride in DockPanel.cs\r\nat PresentationFramework.ni!System.Windows.FrameworkElement.MeasureCore\r\nat PresentationCore.ni!System.Windows.UIElement.Measure in UIElement.cs\r\nat PresentationCore.ni!System.Windows.ContextLayoutManager.UpdateLayout in LayoutManager.cs\r\nat PresentationCore.ni!System.Windows.ContextLayoutManager.UpdateLayoutCallback in LayoutManager.cs\r\nat PresentationCore.ni!System.Windows.Media.MediaContext in MediaContext.cs\r\nat PresentationCore.ni!System.Windows.Media.MediaContext.FireInvokeOnRenderCallbacks in MediaContext.cs\r\nat PresentationCore.ni!System.Windows.Media.MediaContext.RenderMessageHandlerCore in MediaContext.cs\r\nat PresentationCore.ni!System.Windows.Media.MediaContext.RenderMessageHandler in MediaContext.cs\r\nat WindowsBase.ni!System.Windows.Threading.ExceptionWrapper.InternalRealCall in ExceptionWrapper.cs\r\nat WindowsBase.ni!System.Windows.Threading.ExceptionWrapper.TryCatchWhen in ExceptionWrapper.cs\r\nat WindowsBase.ni!System.Windows.Threading.DispatcherOperation.InvokeImpl in DispatcherOperation.cs\r\nat WindowsBase.ni!System.Windows.Threading.DispatcherOperation.InvokeInSecurityContext in DispatcherOperation.cs\r\nat WindowsBase.ni!MS.Internal.CulturePreservingExecutionContext.CallbackWrapper in CulturePreservingExecutionContext.cs\r\nat mscorlib.ni!System.Threading.ExecutionContext.RunInternal in executioncontext.cs\r\nat mscorlib.ni!System.Threading.ExecutionContext.Run in executioncontext.cs\r\nat mscorlib.ni!System.Threading.ExecutionContext.Run in executioncontext.cs\r\nat WindowsBase.ni!MS.Internal.CulturePreservingExecutionContext.Run in CulturePreservingExecutionContext.cs\r\nat WindowsBase.ni!System.Windows.Threading.DispatcherOperation.Invoke in DispatcherOperation.cs\r\nat WindowsBase.ni!System.Windows.Threading.Dispatcher.ProcessQueue in Dispatcher.cs\r\nat WindowsBase.ni!System.Windows.Threading.Dispatcher.WndProcHook in Dispatcher.cs\r\nat WindowsBase.ni!MS.Win32.HwndWrapper.WndProc in HwndWrapper.cs\r\nat WindowsBase.ni!MS.Win32.HwndSubclass.DispatcherCallbackOperation in HwndSubclass.cs\r\nat WindowsBase.ni!System.Windows.Threading.ExceptionWrapper.InternalRealCall in ExceptionWrapper.cs\r\nat WindowsBase.ni!System.Windows.Threading.ExceptionWrapper.TryCatchWhen in ExceptionWrapper.cs\r\nat WindowsBase.ni!System.Windows.Threading.Dispatcher.LegacyInvokeImpl in Dispatcher.cs\r\nat WindowsBase.ni!MS.Win32.HwndSubclass.SubclassWndProc in HwndSubclass.cs\r\n\r\n\r\nAnonymized analysis comments:\r\n\r\n```\r\nThis is a dupe of a bug in the old tracking system.\r\n\r\nThe bug is and always has been in WPF, specifically this code inside ToolBarTray.MeasureOverride\r\n\r\n<snip>\r\nfor (toolBarIndex = 0; toolBarIndex < band.Count; toolBarIndex++)\r\n{\r\n    ToolBar toolBar = band[toolBarIndex];\r\n    remainingLength -= toolBar.MinLength;\r\n    if (DoubleUtil.LessThan(remainingLength, 0))\r\n    {\r\n        remainingLength = 0;\r\n        break;\r\n    }\r\n}\r\n// Measure all children passing the remainingLength as a constraint\r\nfor (toolBarIndex = 0; toolBarIndex < band.Count; toolBarIndex++)\r\n{\r\n    ToolBar toolBar = band[toolBarIndex];\r\n    remainingLength += toolBar.MinLength;\r\n    if (fHorizontal)\r\n        childConstraint.Width = remainingLength;\r\n    else\r\n        childConstraint.Height = remainingLength;\r\n    toolBar.Measure(childConstraint);\r\n<snip>\r\n\r\nThe first for loop gets it correct, in that it uses DoubleUtil.LessThan(remainingLength, 0) to ensure that if the remaningLength drops below 0 it is capped back to 0. The lower loop does not. In this crash after measuring the MinLength for 19 toolbars remainingLength has ended up as -0.0 (yes, doubles have a concept of negative 0), that is set as Width and the Size class throws saying that width cannot be negative.\r\n```\r\n\r\n```\r\nReopening this for WPF to investigate potentially fixing this. The real bug seems to be in DoubleUtil.LessThan(). If the value being checked is close to zero but slightly negative, it can slip through this check and result in setting the Width or Height of a Size object to a negative value resulting in the exception. One way to fix this could be to change the if check to something like this:\r\n\r\nif (remainingLength < double.Epsilon)\r\n    remainingLength = 0;\r\n```","Url":"https://github.com/dotnet/wpf/issues/2189","RelatedDescription":"Open issue \"System.ArgumentException in PresentationFramework.dll!System.Windows.Controls.ToolBarTray.MeasureOverride\" (#2189)"},{"Id":"521897111","IsPullRequest":false,"CreatedAt":"2019-11-14T20:10:57","Actor":"usernamedd","Number":"2183","RawContent":null,"Title":"disable to compile solution . no netcore5.0 installed","State":"closed","Body":"I donot know how to install net core 5.0 ,now just net core 3.1 can be downloaded from internet.","Url":"https://github.com/dotnet/wpf/issues/2183","RelatedDescription":"Closed issue \"disable to compile solution . no netcore5.0 installed\" (#2183)"},{"Id":"523067758","IsPullRequest":false,"CreatedAt":"2019-11-14T19:48:06","Actor":"vatsan-madhavan","Number":"2188","RawContent":null,"Title":"Fixup WPF to adapt to WinForms API removal","State":"open","Body":"https://github.com/dotnet/wpf/issues/2169#issue-519605686\r\n\r\nWinForms recently removed a bunch of API's - see dotnet/winforms#2157.\r\n\r\nFixup WPF to adapt to this change.","Url":"https://github.com/dotnet/wpf/issues/2188","RelatedDescription":"Open issue \"Fixup WPF to adapt to WinForms API removal\" (#2188)"},{"Id":"523045583","IsPullRequest":false,"CreatedAt":"2019-11-14T19:01:49","Actor":"arpitmathur","Number":"2187","RawContent":null,"Title":".NET 5.0 - WPF Accessibility Bugs","State":"open","Body":"Epic to capture all MAS Related Bugs for .NET 5.0","Url":"https://github.com/dotnet/wpf/issues/2187","RelatedDescription":"Open issue \".NET 5.0 - WPF Accessibility Bugs\" (#2187)"},{"Id":"522855761","IsPullRequest":true,"CreatedAt":"2019-11-14T13:43:41","Actor":"dotnet-maestro[bot]","Number":"2186","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191113.6\r\n- **Date Produced**: 11/14/2019 2:08 AM\r\n- **Commit**: 4cf56ef4a8f8a620fe1d9354d7451ff59c903db8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.19563.6\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2186","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2186)"},{"Id":"522222079","IsPullRequest":true,"CreatedAt":"2019-11-13T14:16:35","Actor":"dotnet-maestro[bot]","Number":"2184","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191112.8\r\n- **Date Produced**: 11/13/2019 3:40 AM\r\n- **Commit**: cc4e5bc1b9b600c5329e7cc553137a62480b36bd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.19562.8\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2184","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2184)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-11-20T05:30:58.1617398Z","RunDurationInMilliseconds":801}