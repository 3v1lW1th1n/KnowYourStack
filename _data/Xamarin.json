{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin and .NET Community Events in January","PublishedOn":"2019-01-02T19:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s a new year with tons of new and awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page....","Href":"https://blog.xamarin.com/xamarin-and-net-community-events-in-january/","RawContent":null},{"Title":"Accessing Native Features the Cross-Platform Way with Xamarin.Essentials","PublishedOn":"2018-12-19T22:46:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Every mobile application requires access to native functionality. When developing native mobile apps with Xamarin, developers are able to integrate deeply into iOS and Android since Xamarin exposes...","Href":"https://blog.xamarin.com/accessing-native-features-xamarin-essentials/","RawContent":null},{"Title":"November 2018 Xamarin and Azure Office Hours Recap","PublishedOn":"2018-12-14T21:08:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"I ❤️ every single developer. And I want to hear your stories. I want to hear about your successes, your &#8220;not-so-much&#8221; successes, and any questions or concerns you may have about our...","Href":"https://blog.xamarin.com/office-hours-november-2018-xamarin-azure/","RawContent":null},{"Title":"Xamarin.Forms 4.0 Feature Preview: An Entirely New Point of (Collection)View","PublishedOn":"2018-12-07T19:00:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of the upcoming Xamarin.Forms 4.0 release, we are implementing the all new CollectionView control. The CollectionView is intended to be a successor to the ListView, improving upon its design...","Href":"https://blog.xamarin.com/xamarin-forms-4-0-feature-preview-an-entirely-new-point-of-collectionview/","RawContent":null},{"Title":"The Future of Mobile Development: Xamarin.Forms 4.0 Preview","PublishedOn":"2018-12-05T19:59:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Yesterday at Microsoft Connect(); 2018 we announced our plans for Xamarin.Forms 4.0 and shared a public preview. Let&#8217;s now take a deeper look at the big changes, starting with Xamarin.Forms...","Href":"https://blog.xamarin.com/xamarin-forms-4-0-preview/","RawContent":null},{"Title":"Connect(); 2018 Xamarin Announcements","PublishedOn":"2018-12-04T16:21:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, at Microsoft Connect(); 2018, we have several exciting announcements about brand new capabilities and foundational improvements in the Xamarin platform driven by your generous feedback....","Href":"https://blog.xamarin.com/connect-2018-xamarin-announcements/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in December","PublishedOn":"2018-12-02T20:46:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Here are just a few of the awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page. There you will...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-december/","RawContent":null},{"Title":"Multi-targeting with Android Support Library v28","PublishedOn":"2018-11-28T18:09:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting with Xamarin’s Android Support Library version 28, we are introducing multi-targeting. This includes assemblies for older support library versions when your application&#8217;s...","Href":"https://blog.xamarin.com/multi-targeting-with-android-support-library-v28/","RawContent":null},{"Title":"Android Build Performance and Reliability","PublishedOn":"2018-11-21T16:45:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As a Xamarin developer working on Android apps, you may be well-aware of two issues that slow down your everyday development; build times and the correctness of the build. If you aren&#8217;t sure...","Href":"https://blog.xamarin.com/android-build-performance-reliability/","RawContent":null},{"Title":"Xamarin.Forms 3.4.0: Say Hello to ImageButton","PublishedOn":"2018-11-15T19:17:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of our long-term goal to have more frequent releases, we’re pleased to announce the release of Xamarin.Forms 3.4.0. As always, this release contains even more bug fixes and most notably,...","Href":"https://blog.xamarin.com/xamarin-forms-3-4-0-say-hello-to-imagebutton/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8854507784","Type":"IssuesEvent","CreatedAt":"2019-01-09T01:40:51","Actor":"inwotep","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2595","RelatedDescription":"Opened issue \"BluetoothDevice.ConnectGatt has invalid signature\" (#2595) at xamarin/xamarin-android","RelatedBody":"In the Android.Bluetooth.BluetoothDevice class, the following methods have an incorrect signature:\r\n\r\n        public BluetoothGatt ConnectGatt(Context context, bool autoConnect, BluetoothGattCallback callback, [GeneratedEnum] BluetoothTransports transport, [GeneratedEnum] ScanSettingsPhy phy);\r\n        public BluetoothGatt ConnectGatt(Context context, bool autoConnect, BluetoothGattCallback callback, [GeneratedEnum] BluetoothTransports transport, [GeneratedEnum] ScanSettingsPhy phy, Handler handler);\r\n\r\nThe ```phy``` parameter should be ```Android.Bluetooth.LE.BluetoothPhy```, not ```Android.Bluetooth.LE.ScanSettingsPhy```.  Additionally, the ```Android.Bluetooth.LE.BluetoothPhy``` class is missing mappings to the following values:\r\n\r\n```\r\nPHY_LE_1M\r\nPHY_LE_1M_MASK\r\nPHY_LE_2M\r\nPHY_LE_2M_MASK\r\nPHY_LE_CODED\r\nPHY_LE_CODED_MASK\r\n```\r\n\r\nUsing the API as defined causes the Bluetooth stack to crash on Google Pixel 2 running Android 9.0:\r\n\r\n    Device.ConnectGatt(context, true, this, BluetoothTransports.Le, Android.Bluetooth.LE.ScanSettingsPhy.AllSupported, handler);\r\n\r\nThe only option is to do something like this:\r\n\r\n    GattClient = Device.ConnectGatt(context, true, this, BluetoothTransports.Le, (Android.Bluetooth.LE.ScanSettingsPhy)1 /*  PHY_LE_1M_MASK */, handler);\r\n### Version Information\r\n\r\nMicrosoft Visual Studio Professional 2017 \r\nVersion 15.9.3\r\nVisualStudio.15.Release/15.9.3+28307.145\r\nMicrosoft .NET Framework\r\nVersion 4.7.03190\r\n\r\nInstalled Version: Professional\r\n\r\nVisual C++ 2017   00369-60000-00001-AA091\r\nMicrosoft Visual C++ 2017\r\n\r\nApplication Insights Tools for Visual Studio Package   8.14.11009.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.9.04012.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60913.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.9.03024.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.13.11-pre (400cfb1)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNode.js Tools   1.4.21001.1 Commit Hash:8dd15923800d931b153ab9e4de74e42a74eba5e6\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61810.11040\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.9.20918.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual C++ for Cross Platform Mobile Development (Android)   15.0.28107.00\r\nVisual C++ for Cross Platform Mobile Development (Android)\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 6e26c5bacc8c4201e962f5bdde0a177f82f88691.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28301.59\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.12.3.73 (d15-9@20b35b881)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.16.5 (6b9f32067)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.127 (e975299)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.1.0.38 (HEAD/61d16aa23)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.2.1.11 (5ef73d3)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\nXamlFormatter   1.0\r\nFormats Xaml the way I want it formatted. Focusing entirely on spacing and leaving the decision of what belongs on what line up to you.\r\n\r\n### Log File\r\n\r\nN/A"},{"Id":"8848239451","Type":"PullRequestEvent","CreatedAt":"2019-01-08T06:04:17","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2594","RelatedDescription":"Opened pull request \"[build] use WorkingDirectory for <GitBlame/>\" (#2594) at xamarin/xamarin-android","RelatedBody":"Downstream in monodroid, I'm getting a build failure such as:\r\n\r\n    /usr/bin/git blame \"/full/path/to/external/xamarin-android/Configuration.props\"\r\n    XAVersionInfo.targets(53,5): error MSB6006: \"git\" exited with code 128.\r\n    XAVersionInfo.targets(61,5): error MSB4044: The \"GitCommitsInRange\" task was not given a value for the required parameter \"StartCommit\".\r\n\r\nIf I run the git command manually:\r\n\r\n    fatal: not a git repository (or any of the parent directories): .git\r\n\r\nIt seems we shouldn't be using a full path here, but use\r\n`WorkingDirectory` instead? Maybe it will not work if\r\n`xamarin-android` is a submodule?\r\n\r\nThis has somehow been working in the past, so perhaps my version of\r\ngit is the cause?\r\n\r\n    $ git --version\r\n    git version 2.17.1 (Apple Git-112)"},{"Id":"8845559270","Type":"PullRequestEvent","CreatedAt":"2019-01-07T18:37:25","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2593","RelatedDescription":"Merged pull request \"Bump to xamarin/java.interop/master@d37ec49\" (#2593) at xamarin/xamarin-android","RelatedBody":"Changes: https://github.com/xamarin/java.interop/compare/0cd8bc7...d37ec49\r\n\r\n[jnimarshalmethod-gen] Add `-o DIR` option\r\n\r\n[build] Java.Interop-MonoAndroid wildcards too much"},{"Id":"8844286553","Type":"IssuesEvent","CreatedAt":"2019-01-07T15:01:08","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2489","RelatedDescription":"Closed issue \"Deployment is failing intermittently during InstallPackageAssemblies\" (#2489) at xamarin/xamarin-android","RelatedBody":"I'm seeing deployment fail pretty consistently on a first deployment attempt, and I'm seemingly only able to work around it by cleaning and re-deploying. This appears to be a regression in relatively recent d16.0  builds.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new Android project and try to deploy it to device.\r\n2. You may need to clean and redeploy, or otherwise work from an \"incremental\" state in order to reproduce, however as mentioned I am seeing this pretty consistently on \"Clean\" deployment attempts.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nDeployment attempts succeed every time.\r\n\r\n### Actual Behavior\r\nDeployment intermittently fails with\r\n```MSB4018: The \"InstallPackageAssemblies\" task failed unexpectedly.\r\nSystem.MissingMethodException: Method not found: 'Void Xamarin.AndroidTools.AndroidDeploySession.set_FastDevTypemapsProvider(System.Func`1<System.Collections.Generic.IEnumerable`1<System.String>>)'.\r\n   at Xamarin.Android.Tasks.InstallPackageAssemblies.RunTask()\r\n   at Xamarin.Android.Tasks.InstallPackageAssemblies.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n```\r\n\r\n### Version Information\r\nXamarin.Android SDK   9.1.199.38 (HEAD/00f9c37c) installed on top of VS2017 15.9\r\nMono: mono/mono/2018-08@23f2024af80\r\n    Java.Interop: xamarin/java.interop/master@6dd6f16\r\n    LibZipSharp: grendello/LibZipSharp/master@d695149\r\n    LibZip: nih-at/libzip/rel-1-5-1@b95cf3f\r\n    MXE: xamarin/mxe/xamarin@b9cbb535\r\n    ProGuard: xamarin/proguard/master@905836d\r\n    SQLite: xamarin/sqlite/3.25.2@4ea4c69\r\n    Xamarin.Android Tools: xamarin/xamarin-android-tools/d16-0-p2@9e78d6e\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttps://gist.githubusercontent.com/pjcollins/9a0737e48f1ccbee5a898583860ab839/raw/ec98364a9f77b8bdcca88891d057016e234aeb93/gistfile1.txt\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"8844272368","Type":"PullRequestEvent","CreatedAt":"2019-01-07T14:58:52","Actor":"jonathanpeppers","Repository":"xamarin/","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2593","RelatedDescription":"Opened pull request \"Bump to xamarin/java.interop/master@d37ec49\" (#2593) at xamarin/","RelatedBody":"Changes: https://github.com/xamarin/java.interop/compare/0cd8bc7...d37ec49\r\n\r\n[jnimarshalmethod-gen] Add `-o DIR` option\r\n\r\n[build] Java.Interop-MonoAndroid wildcards too much"},{"Id":"8844272368","Type":"PullRequestEvent","CreatedAt":"2019-01-07T14:58:52","Actor":"jonathanpeppers","Repository":"xamarin/","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2593","RelatedDescription":"Opened pull request \"Bump to xamarin/java.interop/master@d37ec49\" (#2593) at xamarin/","RelatedBody":"Changes: https://github.com/xamarin/java.interop/compare/0cd8bc7...d37ec49\r\n\r\n[jnimarshalmethod-gen] Add `-o DIR` option\r\n\r\n[build] Java.Interop-MonoAndroid wildcards too much"},{"Id":"8844014534","Type":"PullRequestEvent","CreatedAt":"2019-01-07T14:15:29","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2592","RelatedDescription":"Opened pull request \"Build with Android NDK r18\" (#2592) at xamarin/xamarin-android","RelatedBody":"  * Update gradle to version 5.1 (the latest version)\r\n  * Update gradle android addin to 3.2.1 (required for r18 as it removes\r\n    dependency on the MIPS toolchain which no longer exists in r18)\r\n  * Bump mono to the tip of the `2018-08` branch, to bring NDK r18 build fixes\r\n    for BTLS and Mono runtime."},{"Id":"8843958471","Type":"PullRequestEvent","CreatedAt":"2019-01-07T14:05:19","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2591","RelatedDescription":"Merged pull request \"[C++] Cosmetic changes to the code: NULL -> nullptr\" (#2591) at xamarin/xamarin-android","RelatedBody":"In effort to morph our current code to modern C++, this commit replaces all the\r\n`NULL` macro instances with the C++ standard `nullptr` type. No functional\r\nchanges are present in this commit.\r\n\r\nThe only exception here is the `xamarin_getifaddrs.cc` file in which the reverse\r\noperation is done - replacement of `nullptr` with `NULL`. The reason for this is\r\nthat the file is destined to be moved to the Mono codebase at some point and so,\r\nat least for now, it should remain standard C99"},{"Id":"8843270589","Type":"PullRequestEvent","CreatedAt":"2019-01-07T11:45:08","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2591","RelatedDescription":"Opened pull request \"[C++] Cosmetic changes to the code: NULL -> nullptr\" (#2591) at xamarin/xamarin-android","RelatedBody":"In effort to morph our current code to modern C++, this commit replaces all the\r\n`NULL` macro instances with the C++ standard `nullptr` type. No functional\r\nchanges are present in this commit.\r\n\r\nThe only exception here is the `xamarin_getifaddrs.cc` file in which the reverse\r\noperation is done - replacement of `nullptr` with `NULL`. The reason for this is\r\nthat the file is destined to be moved to the Mono codebase at some point and so,\r\nat least for now, it should remain standard C99"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8854382176","Type":"PullRequestEvent","CreatedAt":"2019-01-09T01:05:21","Actor":"AndreiMisiukevich","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4928","RelatedDescription":"Opened pull request \"[MacOS] TapGestureRecognizer doesn't work for Spans\" (#4928) at xamarin/Xamarin.Forms","RelatedBody":"Added TapGesture handling for Spans on Mac OS\r\n\r\n### Description of Change ###\r\n\r\nAdded support **TapGestureRecognizer** on Mac for Span's\r\n\r\n### Issues Resolved ### \r\n- fixes #4775 \r\n\r\n### API Changes ###\r\nNone\r\n\r\n### Platforms Affected ### \r\n- Mac OS\r\n\r\n### Behavioral/Visual Changes ###\r\nTap gesture works for spans on Mac Os\r\n\r\n### Before/After Screenshots ### \r\nNot applicable\r\n\r\n### Testing Procedure ###\r\nCreate label with formatter text. Add span with **Tap**GestureRecognizer. Try to tap/click it\r\n"},{"Id":"8854053177","Type":"PullRequestEvent","CreatedAt":"2019-01-08T23:32:59","Actor":"AndreiMisiukevich","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4927","RelatedDescription":"Opened pull request \"[MacOS] Native NRE exception when removing children from a StackLayout within a StackLayout\" (#4927) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nUgly fix of macos crashes on dispose.\r\n\r\nCalling ```Control.Dispose``` cause the crash.\r\nAlso i noticed, that app throws exception only first call of this method.\r\nStackTrace is in original issue ticket\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #4838 \r\n\r\n### API Changes ###\r\nNone\r\n \r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- MacOS\r\n\r\n### Behavioral/Visual Changes ###\r\nNo Crash\r\n\r\n### Before/After Screenshots ### \r\nNot applicable\r\n\r\n### Testing Procedure ###\r\nUse sample described in original issue ticket"},{"Id":"8853836235","Type":"IssuesEvent","CreatedAt":"2019-01-08T22:40:29","Actor":"jalbertSyncroTech","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4926","RelatedDescription":"Opened issue \"[Enhancement] NavigationRequested event with consistent behavior\" (#4926) at xamarin/Xamarin.Forms","RelatedBody":"## Summary\r\n\r\nThe existing Requested events in NavigationPage.cs all have different behavior\r\n* Some functions update the internal Xamarin.Forms properties *before* the event is invoked, making it impossible to intercept and/or cancel the navigation\r\n* Some function's don't await the assigned NavigationRequestedEventArgs.Task\r\n* Some functions use the boolean result of NavigationRequestedEventArgs.Task to cancel the request\r\n\r\n| Event | Invoked By | Before Navigation | Awaits | Uses Result |\r\n| ----- | ---------- | ----------------- | ------ | ----------- |\r\n| InsertPageBeforeRequested | InsertPageBefore() | Yes | No | No |\r\n| PopRequested | RemoveAsyncInner() | Yes | Yes | No |\r\n| PopToRootRequested | PopToRootAsyncInner() | No | Yes | Yes |\r\n| PushRequested | PushAsyncInner() | No | Yes | No |\r\n| RemovePageRequested | RemovePage() | Yes | Yes | No |\r\n\r\n## API Changes\r\n\r\nAdd a single NavigationRequested event that's invoked, and who's Task is awaited, *before* any Xamarin.Forms or platform-specific updates take place.  Use the result of the awaited task to determine whether the navigation is allowed to continue.\r\n\r\n## Intended Use Case\r\n\r\nAt the moment, if you want to intercept and/or cancel navigation, you must add that logic everywhere in your application before any of the 12 different navigation methods are called.\r\n\r\nA single NavigationRequested event that's implemented consistently and re-uses the existing and already appropriately named NavigationRequestedEventArgs would make it possible to inject the necessary logic from a single location.\r\n"},{"Id":"8853021141","Type":"IssuesEvent","CreatedAt":"2019-01-08T20:02:54","Actor":"pauldipietro","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4923","RelatedDescription":"Closed issue \"[Feedback] Xamarin Forms Entry Focused event problem\" (#4923) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n\n<p>Hello, \n\nI have found out that the event &quot;Focused&quot; on the Entry control of Xamarin.Forms is being fired every time the cursor is blinking! \nThis should not work like this I suppose. \nLet's see this code: \n MyEntry.Focused += (object sender, FocusEventArgs e) =&gt;{};\nThis will be fired on every cursor blink...</p>\n<a href=\"https://developercommunity.visualstudio.com/content/problem/419680/xamarin-forms-entry-focused-event-problem.html\">View on Developer Community</a>\n<br>To find diagnostic information, see the <a href=\"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/760693\">original linked feedback ticket</a>.\r\n\r\n### Source\r\n\r\n[761739](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/761739)"},{"Id":"8852852387","Type":"IssuesEvent","CreatedAt":"2019-01-08T19:33:47","Actor":"charlesroddie","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4925","RelatedDescription":"Opened issue \"Add GridLengths\" (#4925) at xamarin/Xamarin.Forms","RelatedBody":"There are Star GridLengths and absolute GridLengths.\r\n`GridLength a` creates a units of absolute GridLengths.\r\n`GridLength (s, GridUnitType.Star)` creates s units of Star GridLengths.\r\n\r\nGridLengths should be addable because\r\n\r\n- GridLengths are naturaly vector space.\r\n- This allows construction of GridLengths combining absolute and Star units.\r\n\r\nThe Definition of GridLength should be:\r\n\r\n```fsharp\r\ntype GridLength(absolute:float,stars:float) =\r\n    member t.A = absolute\r\n    member t.S = stars\r\n    static member (+) (u:GridLength, v:GridLength) = GridLength(u.A+v.A,u.S+v.S)\r\n    static member (*) (t:float, u:GridLength) = GridLength(t*u.A,t*u.S)\r\n    static member (~-) (u:GridLength) = GridLength(-u.A,-u.S)\r\n```\r\nMeasurement is then:\r\n```fsharp\r\nlet measure(spaceAvailable:float, gridLengths:GridLength[]): float[] =\r\n    let total = Array.sum gridLengths\r\n    let starMeasure = (spaceAvailable - total.A) / total.S\r\n    gridLengths |> Array.map (fun gl -> gl.A + gl.S * starMeasure)\r\n```\r\n\r\nGridLengths combining both units and GridLengths where one dimension is negative are useful for balance. Examples:\r\n\r\n![image](https://user-images.githubusercontent.com/19760720/50854106-10c92180-137c-11e9-9d08-88673bad1d7a.png)"},{"Id":"8852676437","Type":"IssuesEvent","CreatedAt":"2019-01-08T19:02:48","Actor":"mattleibow","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4924","RelatedDescription":"Opened issue \"[Enhancement] Add \"Target\" support to VisualStateManager\" (#4924) at xamarin/Xamarin.Forms","RelatedBody":"## Summary\r\nThis probably should be in this issue (https://github.com/xamarin/Xamarin.Forms/issues/4232), but I thought I would create a new one as this might be a smaller task.\r\n\r\nI was porting my UWP app to Xamarin.Forms and I noticed that the VisualStateManager does not allow states to affect child controls. Take this pseudo xaml:\r\n\r\n```xaml\r\n<Grid>\r\n    <VisualStateManager>\r\n        <State Name=\"Big\">\r\n            <!-- New feature can change children -->\r\n            <!-- UWP style -->\r\n            <Setter Target=\"myButton.Color\" Value=\"Red\" />\r\n            <!-- WPF style -->\r\n            <Setter TargetName=\"myButton\" Property=\"Color\" Value=\"Red\" />\r\n\r\n            <!-- Current feature only changes the current element -->\r\n           <Setter Target=\"BackgroundColor\" Value=\"Red\" />\r\n        </State>\r\n    </VisualStateManager>\r\n\r\n    <Button x:Name=\"myButton\" Color=\"Blue\" />\r\n\r\n</Grid>\r\n```\r\n\r\nThis XAML allows the VSM to modify properties on the children, not just the current element.\r\nhttps://docs.microsoft.com/en-us/uwp/api/windows.ui.xaml.setter.target#Windows_UI_Xaml_Setter_Target\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.windows.setter.targetname?view=netframework-4.7.2#System_Windows_Setter_TargetName\r\n\r\n## API Changes\r\n\r\nI am not sure if the UWP or the WPF route is better, but we might just be able to add a `TargetName` property to `Setter` and then instead of a `this.SetProperty(PropertyName, Value)` we would `this.FindElement(TargetName).SetProperty(PropertyName, Value)`.\r\n\r\n## Intended Use Case\r\n\r\nThis will solve the issue of multiple VSM elements in a single page that responds to a single event, such as a state for a wide screen or a narrow screen, or for device orientation. One VSM can control the entire page.\r\n\r\nThe use case that I was working on was on a narrow screen, I would have 2 columns in my grid, but on a wide screen, I would have 4 and show a big header with more features.\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8853203815","Type":"IssuesEvent","CreatedAt":"2019-01-08T20:37:31","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5359","RelatedDescription":"Opened issue \"IDE (VS4Mac at least) does not see assets added from Xcode\" (#5359) at xamarin/xamarin-macios","RelatedBody":"See https://github.com/xamarin/xamarin-macios/issues/5339#issuecomment-452442169 for details.\r\n\r\nThis issue is to track the addin (VS4Mac).\r\n\r\nThe original issue will track the (ms)build missing logic."},{"Id":"8853062765","Type":"PullRequestEvent","CreatedAt":"2019-01-08T20:10:29","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5358","RelatedDescription":"Opened pull request \"[foundation] Directly call Remove in NSUrlSessionHandler\" (#5358) at xamarin/xamarin-macios","RelatedBody":"Small optimization. It's not needed to check if the item exists\nin the dictionary to remove it, `Remove` returns `true` if the item\nwas present (but we do not care about the result here)."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1080559862642282502","CreatedAt":"2019-01-02T20:22:01+00:00","UserScreenname":"xamarinhq","Text":"It’s a new year with tons of new and awesome Xamarin and .NET Community events coming this month. Get the full list… https://t.co/ZOykEyCRBN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":59,"FavoriteCount":22,"RawContent":null},{"Id":"1075783769876033536","CreatedAt":"2018-12-20T16:03:32+00:00","UserScreenname":"xamarinhq","Text":"Introducing Xamarin.Essentials, a new library that abstracts native APIs into a set of cross-platform APIs giving y… https://t.co/EMM97iFY9o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":269,"FavoriteCount":119,"RawContent":null},{"Id":"1072256672498966533","CreatedAt":"2018-12-10T22:28:06+00:00","UserScreenname":"xamarinhq","Text":"CarouselView is Here! Xamarin.Forms 4.0 now includes an entirely new point of view. ...as part of the upcoming rele… https://t.co/Vh8UMRM4ez","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":154,"FavoriteCount":68,"RawContent":null},{"Id":"1070425707770195968","CreatedAt":"2018-12-05T21:12:30+00:00","UserScreenname":"xamarinhq","Text":"Yesterday at Microsoft Connect(); 2018 we announced our plans &amp; preview for Xamarin.Forms 4.0. This post will give… https://t.co/oNXLJGsrQ8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":144,"FavoriteCount":74,"RawContent":null},{"Id":"1070075277101944833","CreatedAt":"2018-12-04T22:00:01+00:00","UserScreenname":"xamarinhq","Text":"Today, at #MSFTConnect 2018, we have several exciting announcements about brand new capabilities and foundational i… https://t.co/olEK9QjR1j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":54,"FavoriteCount":38,"RawContent":null},{"Id":"1069721699225088008","CreatedAt":"2018-12-03T22:35:02+00:00","UserScreenname":"xamarinhq","Text":"Here's what we have coming up this month for #Xamarin and #dotNET Developer Events in December:… https://t.co/oAMbLqXh9f","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":45,"FavoriteCount":18,"RawContent":null},{"Id":"1068601941339582469","CreatedAt":"2018-11-30T20:25:31+00:00","UserScreenname":"xamarinhq","Text":"Now announcing multi-targeting with Android Support Library v28. \n\n...but what is multi-targeting you ask? Well, no… https://t.co/oBJ1j9vP6P","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":94,"FavoriteCount":53,"RawContent":null},{"Id":"1067915081495846913","CreatedAt":"2018-11-28T22:56:10+00:00","UserScreenname":"xamarinhq","Text":"The Xamarin #Android team has been working hard on improving Build Performance &amp; Reliability in both #VS2017 v15.9… https://t.co/c4iSbZJDy9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":83,"FavoriteCount":45,"RawContent":null},{"Id":"1063457672048058371","CreatedAt":"2018-11-16T15:44:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing the release of Xamarin.Forms 3.4.0 w/ even more bug fixes and another new highly requested feature, an I… https://t.co/EJadLHYi73","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":178,"FavoriteCount":105,"RawContent":null},{"Id":"1063145593562902528","CreatedAt":"2018-11-15T19:03:56+00:00","UserScreenname":"xamarinhq","Text":"Build and deploy #ethereum smart contracts using the new @trufflesuite extension for #VSCode from @MSFTBlockchain… https://t.co/nEbiFUYaM2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":37,"FavoriteCount":18,"RawContent":null},{"Id":"1062819180100100099","CreatedAt":"2018-11-14T21:26:53+00:00","UserScreenname":"xamarinhq","Text":"Want to get started w/ mobile dev using C# &amp; #Xamarin? We've got a Twitch Workshop for that.\n\nComing Friday, Nov 16… https://t.co/ce2vH9dC4t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":114,"FavoriteCount":61,"RawContent":null},{"Id":"1058039721652297729","CreatedAt":"2018-11-01T16:55:01+00:00","UserScreenname":"xamarinhq","Text":"Get all the links you need for the world-wide, community-run mobile dev engagements happening for the Xamarin &amp;… https://t.co/eiJXYtWfvG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":43,"FavoriteCount":26,"RawContent":null},{"Id":"1053027600086552576","CreatedAt":"2018-10-18T20:58:38+00:00","UserScreenname":"xamarinhq","Text":"TY2 you &amp; the Xamarin.Forms team we've filled in some of the features you’ve told us are important to building your… https://t.co/lwqRjrIFEi","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":31,"RawContent":null},{"Id":"1052217100041945088","CreatedAt":"2018-10-16T15:18:00+00:00","UserScreenname":"xamarinhq","Text":"A full day of community-driven sessions on cross-platform mobile application development with Xamarin, DevOps with… https://t.co/07SVz6rgLT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":53,"FavoriteCount":22,"RawContent":null},{"Id":"1050824055014744064","CreatedAt":"2018-10-12T19:02:32+00:00","UserScreenname":"xamarinhq","Text":"Now, in #VisualStudio 15.8, Dotfuscator Community can help protect your https://t.co/FGIvdxOrYa Apps at Runtime by… https://t.co/iPm1GjIrpS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":54,"FavoriteCount":29,"RawContent":null},{"Id":"1050447051228631040","CreatedAt":"2018-10-11T18:04:28+00:00","UserScreenname":"xamarinhq","Text":"With Xamarin.Forms, the UI and app logic for your app resides in a single codebase and you get to use a single IDE… https://t.co/SMq0XwjtKL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":38,"RawContent":null},{"Id":"1047580523881799680","CreatedAt":"2018-10-03T20:13:54+00:00","UserScreenname":"xamarinhq","Text":"Do both types of testing with your Visual Studio App Center CI/CD pipeline - cover the Data Access Layer with unit… https://t.co/6y14u8p3lQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":65,"FavoriteCount":33,"RawContent":null},{"Id":"1046875654631886850","CreatedAt":"2018-10-01T21:33:00+00:00","UserScreenname":"xamarinhq","Text":"Microsoft named a leader in 2018 analyst reports on mobile app development. Get complimentary access to reports fro… https://t.co/EWg450kHpI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":69,"FavoriteCount":33,"RawContent":null}]}},"RunOn":"2019-01-09T05:31:13.4881013Z","RunDurationInMilliseconds":2669}