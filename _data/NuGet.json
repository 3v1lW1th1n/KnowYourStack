{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1","PublishedOn":"2020-02-19T00:44:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last November, we shared our two-stage plan for deprecating TLS 1.0/1.1 on NuGet.org and actions you can take today to ensure your systems use TLS 1.2. In this post, we will go into more details and a...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/","RawContent":null},{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"12084652645","Type":"PullRequestEvent","CreatedAt":"2020-04-17T23:57:43","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7948","RelatedDescription":"Merged pull request \"Allow deletion of unconfirmed users and orgs\" (#7948) at NuGet/NuGetGallery","RelatedBody":"Fix minor styling issue on the delete account page when an exception bubbles out.\r\nFix bug in the account delete handler which would not delete users when notifications were turned off.\r\nAddress https://github.com/NuGet/Engineering/issues/3099\r\n\r\nConsider [hiding whitespace in the diff](https://github.com/NuGet/NuGetGallery/pull/7948/files?w=1)."},{"Id":"12084482079","Type":"PullRequestEvent","CreatedAt":"2020-04-17T23:18:23","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7954","RelatedDescription":null,"RelatedBody":"A new validation was added at the ValidateBeforeGeneratePackageAsync method.\r\n\r\nhttps://github.com/NuGet/NuGetGallery/issues/7922"},{"Id":"12084441259","Type":"PullRequestEvent","CreatedAt":"2020-04-17T23:09:56","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7954","RelatedDescription":"Closed pull request \"Packages with duplicated entries should be block on upload.\" (#7954) at NuGet/NuGetGallery","RelatedBody":"A new validation was added at the ValidateBeforeGeneratePackageAsync method.\r\n\r\nhttps://github.com/NuGet/NuGetGallery/issues/7922"},{"Id":"12083819309","Type":"PullRequestEvent","CreatedAt":"2020-04-17T21:23:59","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7954","RelatedDescription":"Opened pull request \"Packages with duplicated entries should be block on upload.\" (#7954) at NuGet/NuGetGallery","RelatedBody":"A new validation was added at the ValidateBeforeGeneratePackageAsync method.\r\n\r\nhttps://github.com/NuGet/NuGetGallery/issues/7922"},{"Id":"12083149016","Type":"IssuesEvent","CreatedAt":"2020-04-17T19:55:28","Actor":"rambotech","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7953","RelatedDescription":"Opened issue \"Search and filtering of results\" (#7953) at NuGet/NuGetGallery","RelatedBody":"Nuget.org packages are dependent/support various .NET Framework and .NET Core versions. I don't see information on the search results which shows these.\r\n\r\nAre there any plans to add advanced options for filtering such as:\r\n\r\n- Selecting one or more Core/Framework versions to include (exclude the rest out)\r\n- Selecting a date range when the package was uploaded or released.\r\n\r\nThe simplest feature would be a radio button for .NET Framework / .NET Standard / Both\r\n\r\nThanks."},{"Id":"12082189357","Type":"IssuesEvent","CreatedAt":"2020-04-17T17:58:21","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7866","RelatedDescription":"Closed issue \"Latest version is not present using the NuGet API\" (#7866) at NuGet/NuGetGallery","RelatedBody":"@darmalovan commented on [Thu Mar 12 2020](https://github.com/NuGet/Home/issues/9291)\n\n## Details about Problem\r\n I'm seeing a discrepancy in getting the latest version of a package between the NuGet website and the NuGet API.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Going to the NuGet web site for the `EntityFrameworkCore.Relational` package https://www.nuget.org/packages/Microsoft.EntityFrameworkCore.Relational/\r\nthe latest version is `3.1.2`. \r\n\r\n2. Using the API https://api.nuget.org/v3/registration3/microsoft.entityframeworkcore.relational/index.json I am getting `3.1.1` as the latest version.\r\n\r\nI tried also to use the api.nuget.org/v3/registration3-gz-semver2 endpoint without any luck.\r\n\r\nThe search web site says `3.1.2` is the latest version:\r\n![image](https://user-images.githubusercontent.com/5316748/76555697-d50a7a00-64a0-11ea-8c79-01e7b5c367dc.png)\r\n\r\nWould love for any advice here :)\r\n\n\n---\n\n@donnie-msft commented on [Thu Mar 12 2020](https://github.com/NuGet/Home/issues/9291#issuecomment-598385470)\n\nHi! I'm sending this over to the Server team to take a look.\n\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"12094168303","Type":"IssuesEvent","CreatedAt":"2020-04-19T22:40:57","Actor":"StingyJack","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9454","RelatedDescription":"Opened issue \" NuGet Package Manager doesn't indicate which package is deprecated\" (#9454) at NuGet/Home","RelatedBody":"The Nuget PM UI does show that a package is deprecated, but fails to tell us which package is the deprecated one.  Its kind of useless to give the warning but not the necessary detail. Please fix.\r\n\r\n"},{"Id":"12094155357","Type":"IssuesEvent","CreatedAt":"2020-04-19T22:37:24","Actor":"rymeskar","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9453","RelatedDescription":"Opened issue \"Transparent Metapackage\" (#9453) at NuGet/Home","RelatedBody":"Within our organization, we would love to create a *transparent* meta-package.\r\n*Transparent* metapackage is a package that includes only a dependency list.\r\n\r\nWe however wish to enforce the following behavior:\r\n* Metapackage A depends on packages P1 and P2.\r\n* Shared Library SL depends on metapackage A.\r\n* SL is packaged as nuget.\r\n* SL has packages P1 and P2 marked as dependencies, however, no package A.\r\n\r\nThis behavior is to not confuse our partners with unknown metapackage A and instead expose the well-known packages P1 and P2.\r\n\r\nThis can come handy when we want to combine versions of packages that work with different targets. Microsoft.Extensions.Logging is a great example.\r\n\r\nWe were not able to find such ready-made feature.\r\n\r\nWe arrived at the package created through [the following repository.](https://github.com/rymeskar/generate_nuget_repro/blob/master/build/repro.props)\r\n\r\nUnfortunately, we bumped into inconsitencies in SL package packing.\r\nP1 and P2 dependencies within SL are not marked deterministically when using dotnent pack. Pack capability (msbuild) within Visual Studio deterministically produces intended package though.\r\n\r\nThe purpose of this post is two-fold:\r\n* Evaluate the option of *transparent* meta-package functionality.\r\n* Find the right place to report the undeterministic behavior of nuget packing.\r\n"},{"Id":"12089700500","Type":"IssuesEvent","CreatedAt":"2020-04-19T01:40:36","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9329","RelatedDescription":"Closed issue \"Invalid characters error in nuget pack for nuspec file with absolute path in file target \" (#9329) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): NuGet.exe\r\n\r\nNuGet version (x.x.x.xxx): 5.4.0.6315\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Windows 10 Enterprise 1903 18362.720 \r\n\r\nWorked before? If so, with which NuGet version: Yes but I don't remember the version (about a year ago)\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Make a new `.nuspec` file containing a file node where the target that is an absolute path. Eg \r\n\r\n```\r\n\t<files>\r\n\t\t<file src=\"SomeFolder\\someFile.txt\" target=\"c:\\SomeDestination\\SomeFolder\" />\r\n\t</files>\r\n```\r\n\r\n2. Run `nuget pack` on this `.nuspec` file. You will be getting an error like this (output I captured with `-Verbosity detailed`): \r\n\r\n```\r\nTarget path 'c:\\SomeDestination\\SomeFolder' contains invalid characters.\r\nSystem.Exception: Target path 'c:\\SomeDestination\\SomeFolder' contains invalid characters.\r\n   at NuGet.Packaging.Manifest.Validate(Manifest manifest)\r\n   at NuGet.Packaging.Manifest.ReadFrom(Stream stream, Func`2 propertyProvider, Boolean validateSchema)\r\n   at NuGet.Packaging.PackageBuilder.ReadManifest(Stream stream, String basePath, Func`2 propertyProvider)\r\n   at NuGet.Packaging.PackageBuilder..ctor(String path, String basePath, Func`2 propertyProvider, Boolean includeEmptyDirectories, Boolean deterministic)\r\n   at NuGet.Commands.PackCommandRunner.CreatePackageBuilderFromNuspec(String path)\r\n   at NuGet.Commands.PackCommandRunner.BuildFromNuspec(String path)\r\n   at NuGet.Commands.PackCommandRunner.BuildPackage()\r\n   at NuGet.CommandLine.PackCommand.ExecuteCommand()\r\n   at NuGet.CommandLine.Command.ExecuteCommandAsync()\r\n   at NuGet.CommandLine.Command.Execute()\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)\r\n```\r\n \r\n3. This used to work in previous versions of nuget. \r\n...\r\n\r\n### Verbose Logs\r\n\r\nNuGet.exe pack -verbosity detailed\r\n\r\n```\r\nTarget path 'c:\\SomeDestination\\SomeFolder' contains invalid characters.\r\nSystem.Exception: Target path 'c:\\SomeDestination\\SomeFolder' contains invalid characters.\r\n   at NuGet.Packaging.Manifest.Validate(Manifest manifest)\r\n   at NuGet.Packaging.Manifest.ReadFrom(Stream stream, Func`2 propertyProvider, Boolean validateSchema)\r\n   at NuGet.Packaging.PackageBuilder.ReadManifest(Stream stream, String basePath, Func`2 propertyProvider)\r\n   at NuGet.Packaging.PackageBuilder..ctor(String path, String basePath, Func`2 propertyProvider, Boolean includeEmptyDirectories, Boolean deterministic)\r\n   at NuGet.Commands.PackCommandRunner.CreatePackageBuilderFromNuspec(String path)\r\n   at NuGet.Commands.PackCommandRunner.BuildFromNuspec(String path)\r\n   at NuGet.Commands.PackCommandRunner.BuildPackage()\r\n   at NuGet.CommandLine.PackCommand.ExecuteCommand()\r\n   at NuGet.CommandLine.Command.ExecuteCommandAsync()\r\n   at NuGet.CommandLine.Command.Execute()\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)\r\n```\r\n\r\n\r\n\r\n"},{"Id":"12087711093","Type":"IssuesEvent","CreatedAt":"2020-04-18T15:47:12","Actor":"TFTomSun","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9452","RelatedDescription":"Opened issue \"Reference Project outside of the solution shows error NU1105\" (#9452) at NuGet/Home","RelatedBody":"In the past, it was possible to reference projects outside of the solution. At the moment it seems not to be possible. I've read https://github.com/NuGet/Home/issues/5820, so there seems to be some activity to make that possible again. Which Visual Studio Version do I need to test it? Which are the limitations?"},{"Id":"12084840401","Type":"IssuesEvent","CreatedAt":"2020-04-18T00:46:08","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9213","RelatedDescription":"Closed issue \"Nuget says Could not find a part of the path when compiling VB.NET solution\" (#9213) at NuGet/Home","RelatedBody":"I have the following problem explained [here](https://stackoverflow.com/questions/60335041/ncrontab-signed-3-3-2-nuget-says-could-not-find-a-part-of-the-path-when-compilin) in stackoverflow.\r\n\r\nIn short, I have Visual Studio 2013 and a project built with .NET Framework 4.5. I know the problem is the version of Nuget I have. My Nuget version is 2.12.0.817 (last version available for Visual Studio 2013) and I know this is causing the problem. This problem was resolved in Nuget version 2.12.1 but I am not able to install version 2.12.1 in Visual Studio 2013.... I install Nuget 2.12.1 from console and it says it has been installed correctly but Visual Studio continue saying I have version 2.12.0.817.....\r\n\r\nAlso I have tried the workaround explained in most sites, I mean, changing blank space in the following line by a backslash and it is not working:\r\n\r\n`<PaddedSolutionDir Condition=\" '$(OS)' == 'Windows_NT'\">\"$(SolutionDir) \"</PaddedSolutionDir>`\r\n\r\nby \r\n\r\n`<PaddedSolutionDir Condition=\" '$(OS)' == 'Windows_NT'\">\"$(SolutionDir)\\\"</PaddedSolutionDir>`\r\n\r\nPlease, could you help me?"},{"Id":"12084703706","Type":"IssuesEvent","CreatedAt":"2020-04-18T00:09:37","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/6440","RelatedDescription":"Closed issue \"Please allow extension SDK manifests to light up for Windows Forms also\" (#6440) at NuGet/Home","RelatedBody":"The toolbox can automatically display XAML controls from referenced NuGet packages via [extension SDK manifests](https://github.com/NuGet/Home/wiki/Converting-Extension-SDKs-into-NuGet-Packages#extension-sdk-manifests). It would be amazing if the same behavior lit up for Windows Forms projects too:\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<FileList>\r\n  <File Reference=\"CompanyName.LibraryName.dll\">\r\n    <ToolboxItems VSCategory=\"CompanyName LibraryName (2.1.0-rc)\">\r\n      <Item Type=\"LibraryNamespace.ControlName\" />\r\n    </ToolboxItems>\r\n  </File>\r\n</FileList>\r\n```\r\n\r\nThis current lack in Visual Studio has been an ongoing issue as my company has migrated from shared projects to NuGet packages for our own internal controls. I eventually came up with a workaround (detailed at https://github.com/NuGet/Home/issues/3509#issuecomment-347621114) which does install tools into the toolbox automatically. It's not perfect but it's a lifesaver. It's a shame that we're forced to use such a dubious workaround though.\r\n\r\nNuGet has recently become a popular distribution model for DevExpress's many Windows Forms controls as well. I've gathered that you worked with Telerik on the XAML control distribution model. The NuGet/toolbox work seems to be mostly done. It would make sense to afford the same convenience to DevExpress customers who use Windows Forms.\r\n\r\nWould you please consider this?"},{"Id":"12084460452","Type":"IssuesEvent","CreatedAt":"2020-04-17T23:13:57","Actor":"debonte","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/4747","RelatedDescription":"Closed issue \"IVsPathContextProvider.CreateAsync returns incorrect value if project uses packages.config\" (#4747) at NuGet/Home","RelatedBody":"@joelverhagen noticed this issue when we were talking yesterday.  Just wanted to make sure it was recorded.  He may want to correct my description of the problem.\r\n\r\nIVsPathContext contains a UserPackageFolder and a collection of FallbackPackageFolders.  Neither of those are applicable to packages.config scenarios.  However if you call IVsPathContextProvider.CreateAsync on a packages.config project you get back a non-null value.\r\n\r\nSo the API should be updated to either:\r\n1. Return a null value in this case.  It would be nice to support packages.config with this API though.\r\n2. Place the solution-level package store path in IVsPathContext.UserPackageFolder even though that's misleading since the layout of UserPackageFolder directories (%USERPROFILE%\\.nuget\\packages) is different from solution-level caches.  For example, there's no version directory in the packages.config case.  (...\\packages\\mypackage\\**1.0.0**\\packagecontents vs. ...\\packages\\mypackage\\packagecontents)\r\n3. Improve/extend the API somehow to return the packages.config cache location in a way that makes it clear that it is not a UserPackageFolder."},{"Id":"12083532276","Type":"IssuesEvent","CreatedAt":"2020-04-17T20:44:49","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9443","RelatedDescription":"Closed issue \"net5 tfm: msbuild props supersede NuGetFramework data\" (#9443) at NuGet/Home","RelatedBody":"When present, msbuild props like `TargetPlatformIdentifier` and `TargetPlatformVersion` should supersede the corresponding data in `NuGetFramework` objects."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"11608975127","Type":"IssuesEvent","CreatedAt":"2020-02-25T23:07:38","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/42","RelatedDescription":"Opened issue \"Deprecating TLS 1.0 and 1.1 on NuGet.org – Stage 1\" (#42) at NuGet/Announcements","RelatedBody":"## NuGet.org will temporarily remove support for TLS 1.0/1.1 on February 26, 2020\r\n\r\nWe plan to temporarily remove support for TLS 1.0/1.1 across 3 time slots in a 24 hour period, for 4 hours each, to ensure overlap with normal working hours across the globe. If you discover that you are impacted and cannot identify a workaround, please open an issue on the NuGet Gallery GitHub repo.\r\n\r\nRead this blog post to learn more and to identify the test slot time in your time zone - https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org-stage-1/\r\n\r\n"},{"Id":"11502675218","Type":"IssuesEvent","CreatedAt":"2020-02-12T19:33:43","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/41","RelatedDescription":"Opened issue \"Support pre-release packages with floating versions\" (#41) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Support pre-release packages with floating versions](https://github.com/NuGet/Home/wiki/Support-pre-release-packages-with-floating-versions) | https://github.com/NuGet/Home/issues/912|"},{"Id":"11467027718","Type":"IssuesEvent","CreatedAt":"2020-02-08T01:39:00","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/40","RelatedDescription":"Opened issue \"Add nuget sources command to the dotnet CLI\" (#40) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Add nuget sources command to the dotnet CLI](https://github.com/NuGet/Home/wiki/Add-nuget-sources-command-to-the-dotnet-CLI) | https://github.com/NuGet/Home/issues/4126|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-04-20T05:30:40.3205402Z","RunDurationInMilliseconds":1771}