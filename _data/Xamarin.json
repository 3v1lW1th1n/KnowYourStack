{"Data":{"Blog":{"FeedItems":[{"Title":"Introducing the Android SDK Manager","PublishedOn":"2017-10-25T19:55:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>To make the process of managing Android SDKs as smooth as possible, we’ve revamped the Android SDK Manager in Visual Studio for Mac to create a seamless, integrated experience. Not only does this new SDK Manager offer a one-stop shop for all things Android SDK, we&#8217;re also introducing support for automatic SDK dependency resolution. So, let’s [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/introducing-android-sdk-manager/\">Introducing the Android SDK Manager</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/introducing-android-sdk-manager/","RawContent":null},{"Title":"3 Big Things To Explore in the Xamarin.Forms 2.5.0 Pre-Release","PublishedOn":"2017-10-24T19:52:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Over the past year we’ve been working on a couple of &#8220;big things&#8221; that enable you to create more performant applications on more platforms. With our latest stable release, version 2.4.0, we introduced performance optimized renderers on Android, nicknamed Fast Renderers. While faster platform renderers are a clear win, you really start to see the big [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/3-big-things-explore-xamarin-forms-2-5-0-pre-release/\">3 Big Things To Explore in the Xamarin.Forms 2.5.0 Pre-Release</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/3-big-things-explore-xamarin-forms-2-5-0-pre-release/","RawContent":null},{"Title":"Five-Star Apps with Mobile Center Test","PublishedOn":"2017-10-20T12:33:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Five-star mobile apps are all about consistent and predictable output. It&#8217;s not a good experience for users when an app suddenly crashes or doesn’t format correctly on their mobile screens. Developers can easily avoid these scenarios by testing for various scenarios on different devices, and Visual Studio Mobile Center makes it easy to test your mobile [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/five-star-apps-with-visual-studio-mobile-center-test/\">Five-Star Apps with Mobile Center Test</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/five-star-apps-with-visual-studio-mobile-center-test/","RawContent":null},{"Title":"Upcoming Webinar | Build Better Games with Unity and Microsoft Azure","PublishedOn":"2017-10-19T18:51:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Register now to join David Antognoli on Tuesday, November 7 at 9 am PT to learn how to take your Unity games to the next level with powerful cloud services. He’ll walk through how to connect your apps to Microsoft Azure, adding compelling features that users love, like leaderboards and heatmaps, and demo how new [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/upcoming-webinar-build-better-games-unity-microsoft-azure/\">Upcoming Webinar | Build Better Games with Unity and Microsoft Azure</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/upcoming-webinar-build-better-games-unity-microsoft-azure/","RawContent":null},{"Title":"Plugin and Permission Changes with iOS 11","PublishedOn":"2017-10-18T20:24:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>iOS 11 introduced some fun updates around permissions when accessing certain features on the device. I first noticed these changes when trying to access a user location with the Geolocator Plugin in a Xamarin.Forms application. To my surprise, nothing happened. Upon further investigation of the application&#8217;s Output, I noticed a message explaining exactly what I [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/plugin-permission-changes-ios-11/\">Plugin and Permission Changes with iOS 11</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/plugin-permission-changes-ios-11/","RawContent":null},{"Title":"Adaptive UI with Xamarin.Forms","PublishedOn":"2017-10-16T20:58:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Xamarin.Forms has supported iOS, Android, and Windows for a long time. We&#8217;ve also added new platforms to keep up with the changing landscape, such as Tizen and macOS, with Linux and Windows WPF on the horizon. These platforms run on a wide variety of devices including phones, tablets, desktops, and TVs. This presents an interesting [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/adaptive-ui-xamarin-forms/\">Adaptive UI with Xamarin.Forms</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/adaptive-ui-xamarin-forms/","RawContent":null},{"Title":"Give the Visual Studio 2017 Version 15.5 Preview a Try!","PublishedOn":"2017-10-13T20:06:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>With Visual Studio 2017 version 15.4 now stable and sporting some awesome new features, such as Xamarin Live integration, Android Oreo / iOS 11 support, and a smarter, smaller installation, it&#8217;s time to turn our attention to the next version of Visual Studio 2017, version 15.5! This upcoming release is now available as a preview [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/give-visual-studio-2017-version-15-5-preview-try/\">Give the Visual Studio 2017 Version 15.5 Preview a Try!</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/give-visual-studio-2017-version-15-5-preview-try/","RawContent":null},{"Title":"Bring 3D Models To Life in Augmented Reality with UrhoSharp","PublishedOn":"2017-10-12T19:28:50+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>UrhoSharp brings 3D to a variety of platforms and uses its own binary mdl format for model files. There are many sources for 3D models, including cgtrader and TurboSquid, and formats such as FBX, OBJ, DAE and BLEND. Urho3D provides tools like AssetImporter and the Urho3D Blender Add-in so you can use these models. In [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/bring-3d-models-life-augmented-reality-urhosharp/\">Bring 3D Models To Life in Augmented Reality with UrhoSharp</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/bring-3d-models-life-augmented-reality-urhosharp/","RawContent":null},{"Title":"Updating Xamarin.iOS Apps for the iPhone X","PublishedOn":"2017-10-11T18:35:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>There&#8217;s no doubt that one of the biggest announcements from Apple this year was the iPhone X. The new Super Retina display is edge-to-edge on the device, creating an immersive experience we had yet to see on iPhones. With the new screen changes on the iPhone X, developers may be asking themselves, &#8220;What do I [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/updating-xamarin-ios-apps-for-the-iphone-x/\">Updating Xamarin.iOS Apps for the iPhone X</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/updating-xamarin-ios-apps-for-the-iphone-x/","RawContent":null},{"Title":"Build and Release Five-Star Apps Faster","PublishedOn":"2017-10-10T17:49:16+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>The first step in the life of a mobile app is build automation, which builds the app and runs required tests to make sure the app follows required rules. Build automation is also the first step towards shipping high quality, five-star mobile apps. When building iOS and Android mobile applications, one of the main challenges [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/build-and-release-five-star-apps-faster-with-visual-studio-mobile-center/\">Build and Release Five-Star Apps Faster</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/build-and-release-five-star-apps-faster-with-visual-studio-mobile-center/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"6767278124","Type":"PullRequestEvent","CreatedAt":"2017-10-26T02:16:45","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/979","RelatedDescription":"Opened pull request \"[build] Add `make prepare-image` target.\" (#979) at xamarin/xamarin-android","RelatedBody":"We are investigating building Xamarin.Android atop\r\nVisual Studio Team System (VSTS) in addition to our current Jenkins\r\nsetup, and one of the issues we're running into is \"bootstrapping\":\r\nVSTS is configured to create a \"fresh\" VM for each build.\r\n\r\n**Pro**: It should allow builds to be more reliable, as previous build\r\nartifacts won't be present, and thus won't cause/hide errors.\r\n\r\n**Con**: *Previous build artifacts are not present*. Previous build\r\nartifacts such as *downloading and extracting* the Android NDK & SDK,\r\nusing `brew` to install dependencies, building MXE...\r\n\r\nEnsuring that the dependencies are installed through `make prepare`\r\ncan be quite time consuming. What we want is a way to ensure that the\r\n\"build image\" -- *what's already installed* when the VM boots --\r\ncontains all of our desired dependencies.\r\n\r\nFurthermore, we *don't* want to have the responsible parties checkout\r\nand build xamarin-android in order to determine what the dependencies\r\nshould be.\r\n\r\nAttempt to square this circle by adding a new `make prepare-image`\r\ntarget, which processes `@(AndroidSdkItem)`, `@(AndroidNdkItem)`,\r\n`@(AntItem)`, and `@(RequiredProgram)` to construct a set of **sh**(1)\r\ncommmands which will download and install the required dependencies.\r\n\r\nThe generated shell script does *not* take the state of the machine\r\nrunning `make prepare-image` into consideration. This allows the\r\ntarget to be executed on one machine, and the output run on another.\r\n\r\n\t$ make prepare-image > install-dependencies.sh\r\n\t$ bash -e install-dependencies.sh\r\n\r\n*Note*: `make prepare-image` does not currently deal with MXE.\r\n(Building MXE on the VSTS VM is *very* time consuming, so it's\r\nsomething we need to take care of. It is not *yet* dealt with.)\r\n\r\nExample `make prepare-image` output:\r\n\r\n```sh\r\n\tset -o xtrace\r\n\tmkdir -p \"$HOME/android-archives\"\r\n\tif [ ! -f \"$HOME/android-archives/build-tools_r26.0.1-macosx.zip\" ]; then\r\n\t  curl -o \"$HOME/android-archives/build-tools_r26.0.1-macosx.zip\" \"https://dl-ssl.google.com/android/repository/build-tools_r26.0.1-macosx.zip\" ;\r\n\tfi\r\n  # ...\r\n\trm -Rf \"$HOME/android-toolchain/sdk\" \"$HOME/android-toolchain/ndk\" \"$HOME/android-toolchain/ant\"\r\n\tmkdir -p \"$HOME/android-toolchain/sdk\" \"$HOME/android-toolchain/ndk\" \"$HOME/android-toolchain/ant\"\r\n\tEXTRACT_TMP=`mktemp -d`\r\n\tif [ ! -f \"$HOME/android-toolchain/sdk/.stamp-build-tools_r26.0.1-macosx.zip\" ]; then\r\n\t  mkdir -p \"$HOME/android-toolchain/sdk/build-tools/26.0.1\"\r\n\t  unzip -d \"$EXTRACT_TMP\" \"$HOME/android-archives/build-tools_r26.0.1-macosx.zip\" ;\r\n\t  mv \"$EXTRACT_TMP\"/*/* \"$HOME/android-toolchain/sdk/build-tools/26.0.1\" ;\r\n\t  touch \"$HOME/android-toolchain/sdk/.stamp-build-tools_r26.0.1-macosx.zip\" ;\r\n\t  rm -Rf \"$EXTRACT_TMP\" ;\r\n\tfi\r\n  # ...\r\n\trm -Rf \"$HOME/android-toolchain/toolchains/arm-linux-androideabi-clang\"\r\n\tpython \"$HOME/android-toolchain/ndk/build/tools/make_standalone_toolchain.py\" -v --api 9 --install-dir \"$HOME/android-toolchain/toolchains/arm-linux-androideabi-clang\" --arch arm\r\n  # ...\r\n\tbrew install p7zip\r\n\t# ...\r\n\tcurl -o \"$HOME/android-archives/`basename https://bosstoragemirror.blob.core.windows.net/wrench/mono-2017-06/28/28a417c2c0d1a2d1231d8b0a5beea3201208b57d/MonoFramework-MDK-5.4.0.147.macos10.xamarin.universal.pkg`\" \"https://bosstoragemirror.blob.core.windows.net/wrench/mono-2017-06/28/28a417c2c0d1a2d1231d8b0a5beea3201208b57d/MonoFramework-MDK-5.4.0.147.macos10.xamarin.universal.pkg\"\r\n\tinstaller -pkg \"$HOME/android-archives/MonoFramework-MDK-5.4.0.147.macos10.xamarin.universal.pkg\" -target /\r\n```"},{"Id":"6767239968","Type":"PullRequestEvent","CreatedAt":"2017-10-26T02:01:51","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/973","RelatedDescription":"Merged pull request \"[tests] update NUnit to 3.7.1\" (#973) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/nunit/nunit/releases/tag/3.7.1\r\n\r\nThe release notes for NUnit 3.7.1 mention a hang with parallelized\r\ntests, so it is worth a try to see if updating fixes it.\r\n\r\nReverting 6687dac as well to see if we get a green build."},{"Id":"6766223807","Type":"PullRequestEvent","CreatedAt":"2017-10-25T20:42:17","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/978","RelatedDescription":"Opened pull request \"Bump to Java.Interop/master/5cf61f5\" (#978) at xamarin/xamarin-android","RelatedBody":"Changes as needed by #949"},{"Id":"6766069289","Type":"PullRequestEvent","CreatedAt":"2017-10-25T20:09:18","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/968","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tests] Fix the processing of the build.log files.\" (#968) at xamarin/xamarin-android","RelatedBody":"Commit 029c86fb kinda caused a perforanace problem because it\r\nwas regex'ing the entire build log. Some of those logs can\r\ngrow to 300+ meg in size.\r\n\r\nThis commit reworks the build log processing to\r\n1) Use a StringBuilder rather than concat strings.\r\n2) Search for the build time from the end of the file first.\r\n\r\nHopefully this will improve things."},{"Id":"6766039096","Type":"PullRequestEvent","CreatedAt":"2017-10-25T20:02:44","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/974","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tests] Clean up DebugType = \"None\" test changes.\" (#974) at xamarin/xamarin-android","RelatedBody":"Commit 8643ded9 added support for running the tests in msbuild.\r\nPart of that change was altering the behaviour of `xbuild to\r\nmatch that of msbuild. This was regarding the way they hande\r\nthe `$(DebugType) == \"None\"`.\r\n\r\nThe commit altered the .targets file to reset `$(DebugType)` to\r\n`portable` if `None` is detected. It also resets `$(DebugSymbols)`\r\nto `false` in the same senario.\r\n\r\nAs a result the the in these two tests which do the same thing\r\nshould not longer be required."},{"Id":"6765953719","Type":"PullRequestEvent","CreatedAt":"2017-10-25T19:44:12","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/977","RelatedDescription":"Merged pull request \"[tests] fix failures related to AndroidSdkDirectory property\" (#977) at xamarin/xamarin-android","RelatedBody":"Context in #910\r\n\r\nWhen switching to `xabuild.exe`, two mistakes were made:\r\n- `xabuild.exe` shouldn’t set `AndroidSdkDirectory` or\r\n`AndroidNdkDirectory`\r\n- Xamarin.Android.Build.Tests should pass these values to xabuild\r\n\r\nThis restores some of the code in `Builder.cs` removed in f9d15dd"},{"Id":"6764543497","Type":"PullRequestEvent","CreatedAt":"2017-10-25T15:05:01","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/977","RelatedDescription":"Opened pull request \"[tests] fix failures related to AndroidSdkDirectory property\" (#977) at xamarin/xamarin-android","RelatedBody":"Context in #910\r\n\r\nWhen switching to `xabuild.exe`, two mistakes were made:\r\n- `xabuild.exe` shouldn’t set `AndroidSdkDirectory` or\r\n`AndroidNdkDirectory`\r\n- Xamarin.Android.Build.Tests should pass these values to xabuild\r\n\r\nThis restores some of the code in `Builder.cs` removed in f9d15dd"},{"Id":"6763710748","Type":"PullRequestEvent","CreatedAt":"2017-10-25T12:38:02","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/976","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Null Reference Exceoption when getting android.jar\" (#976) at xamarin/xamarin-android","RelatedBody":"Fixes https://bugzilla.xamarin.com/show_bug.cgi?id=60324\r\n\r\nIf a android.jar file does NOT exist for a target platform we should\r\nraise a normal error. But we currently throw a null reference\r\nexception.\r\n\r\n`TryGetPlatformDirectoryFromApiLevel` can return null, this is by\r\ndesign. So we need to handle that in the places where its used.\r\nAnd return a reasonable error message if we do get a null back."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"6765897064","Type":"PullRequestEvent","CreatedAt":"2017-10-25T19:31:30","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1221","RelatedDescription":"Merged pull request \"Fix NRE introduced by 59882\" (#1221) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFix NRE introduced by 59882. Expect application can be null before OnStart is called. Actually, while fixing another bug, assumed it was non-null which caused NRE.\r\n\r\n### Bugs Fixed ###\r\n\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=60337\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6765770046","Type":"PullRequestEvent","CreatedAt":"2017-10-25T19:03:42","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1220","RelatedDescription":"Merged pull request \"Proper revert of PR #882\" (#1220) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFor some reason #1190 didn't do what it was supposed to. For whatever reason the code that was supposed to be removed just got shuffled around.\r\n\r\n### Bugs Fixed ###\r\n\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=60041\r\n\r\n### API Changes ###\r\n\r\nN/A\r\n\r\n### Behavioral Changes ###\r\n\r\nN/A\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6764026928","Type":"PullRequestEvent","CreatedAt":"2017-10-25T13:38:28","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1229","RelatedDescription":"Opened pull request \"[Xaml[C]] ResourceDictionary.Source\" (#1229) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAllow setting a Source to a ResourceDictionary. Source is an Uri, relative or absolute, that points to a resource in the same assembly.\r\n\r\nRestriction: this can only be used from within Xaml\r\n\r\nMergedWith is deprecated (obsolete).\r\n\r\nOh, and you no longer have to create code behind for resource dictionaries !\r\n\r\nTODO:\r\n- compile the RD with XamlC\r\n\r\n### Bugs Fixed ###\r\n\r\n/\r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n - Uri ResourceDictionary.Source {get; set;}\r\n\r\n### Behavioral Changes ###\r\n\r\n/\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense"},{"Id":"6763522793","Type":"PullRequestEvent","CreatedAt":"2017-10-25T11:55:55","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1228","RelatedDescription":"Opened pull request \"[XamlC] fix parent walking in compiledBPConverter with ListNode\" (#1228) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n[XamlC] fix parent walking in compiledBPConverter with ListNode\r\n\r\nit's a bout time I kill the ListNode... but not this time, yet\r\n\r\n### Bugs Fixed ###\r\n\r\n- https://bugzilla.xamarin.com/show_bug.cgi?id=60203\r\n\r\n### API Changes ###\r\n\r\n/\r\n\r\n### Behavioral Changes ###\r\n\r\n/\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"6767442691","Type":"PullRequestEvent","CreatedAt":"2017-10-26T03:22:27","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2925","RelatedDescription":"Opened pull request \"[SceneKit] Adds Xcode 9 Beta 1 to stable bindings\" (#2925) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6766514812","Type":"PullRequestEvent","CreatedAt":"2017-10-25T21:49:13","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2924","RelatedDescription":"Opened pull request \" [XHarness] Add bcl tests for System.IO.Compression.FileSystem.\" (#2924) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6766462418","Type":"PullRequestEvent","CreatedAt":"2017-10-25T21:36:10","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2918","RelatedDescription":"Merged pull request \"[XHarness] Add the System.IO.Compression bcl tests.\" (#2918) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6766408258","Type":"PullRequestEvent","CreatedAt":"2017-10-25T21:23:15","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2923","RelatedDescription":"Opened pull request \"Add XM Modern to BCL test suite\" (#2923) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6765435762","Type":"PullRequestEvent","CreatedAt":"2017-10-25T17:55:06","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2920","RelatedDescription":"Merged pull request \"Bump maccore to get maciostools with unlock device warning code\" (#2920) at xamarin/xamarin-macios","RelatedBody":"commit 287cbcf72d81e185f6d9d9534bcd558a718d8001 (HEAD -> master, upstream/master, upstream/HEAD)\nAuthor: Vincent Dondain <vidondai@microsoft.com>\nDate:   Wed Oct 25 11:33:11 2017 -0400\n\n    Bump maciostools to get unlock device warning code\n\n    commit af38985deb3dd4ce6f5cf33de921cea602e1e8e1 (HEAD -> master, origin/master, origin/HEAD)\n    Author: Vincent Dondain <vidondai@microsoft.com>\n    Date:   Fri Oct 20 14:36:18 2017 -0400\n\n        [Xamarin.Hosting] Update '--wait-for-unlock' error message (#94)\n\n        - Use same `1031` error code as in `controller-device.cs`'s `LaunchBundleIdOnDevice`.\n        - Simplify message to not mention passcode as there are other ways to unlock a device.\n        - This change is needed to show up the alert dialog in https://github.com/xamarin/md-addins/pull/2590."},{"Id":"6765324354","Type":"PullRequestEvent","CreatedAt":"2017-10-25T17:31:56","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2582","RelatedDescription":"Closed pull request \"[XHarness] Add the System.IO.Compression.FileSystem tests\" (#2582) at xamarin/xamarin-macios","RelatedBody":"This branch just allows to run the tests in the dll from mono. Tests\r\nwill fail until they are fixed in the mono source."},{"Id":"6765172752","Type":"PullRequestEvent","CreatedAt":"2017-10-25T16:59:50","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2922","RelatedDescription":"Opened pull request \"Add Objective Sharpie 3.4 as an optional dependency, and add support for running xtro tests on wrench+jenkins. (#2887)\" (#2922) at xamarin/xamarin-macios","RelatedBody":"This will add Objective Sharpie as an optional dependency, only enforced if\nactually trying to run the xtro tests.\n\nThe wrench/jenkins tests will show up as green for now (since there are known\nfailures in the xtro tests that have to be addressed first)."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"923279245887135745","CreatedAt":"2017-10-25T20:05:00+00:00","UserScreenname":"xamarinhq","Text":"Introducing the Android SDK Manager: https://t.co/U1OxP9CeeJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":18,"RawContent":null},{"Id":"923217836167847937","CreatedAt":"2017-10-25T16:00:59+00:00","UserScreenname":"xamarinhq","Text":"Have you saved the date yet? Visit https://t.co/swPXPdFtSt and add a calendar reminder to join us live online Novem… https://t.co/uLp7HDcxD4","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":20,"FavoriteCount":10,"RawContent":null},{"Id":"923216833938935809","CreatedAt":"2017-10-25T15:57:00+00:00","UserScreenname":"xamarinhq","Text":"Try out the latest new features for #Xamarin in #VS2017 without affecting your production environment: https://t.co/6QFngIYygP","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":25,"FavoriteCount":16,"RawContent":null},{"Id":"923005188637646853","CreatedAt":"2017-10-25T01:56:00+00:00","UserScreenname":"xamarinhq","Text":"Don't miss our 11/7 webinar on building better games with #Unity3D and Microsoft #Azure! Register now to join us: https://t.co/0c8to6tPmT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":20,"FavoriteCount":15,"RawContent":null},{"Id":"922915335824478210","CreatedAt":"2017-10-24T19:58:57+00:00","UserScreenname":"xamarinhq","Text":"Check out 3 BIG new features to explore in the #XamarinForms 2.5.0 Pre-Release: https://t.co/Du28Gz40ru","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":88,"FavoriteCount":70,"RawContent":null},{"Id":"922491050886868992","CreatedAt":"2017-10-23T15:53:00+00:00","UserScreenname":"xamarinhq","Text":"Add native Android Facebook Authentication to your app using #Azure App Service in this guide from @jamesmontemagno: https://t.co/DAcKpYLHe5","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":29,"RawContent":null},{"Id":"922284943169990659","CreatedAt":"2017-10-23T02:14:00+00:00","UserScreenname":"xamarinhq","Text":"Add #pushnotifications to your Android apps with #Xamarin, #Firebase Cloud Messaging, and #Azure Notification Hubs: https://t.co/9uyWpi2qlp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":88,"FavoriteCount":38,"RawContent":null},{"Id":"921881787009249280","CreatedAt":"2017-10-21T23:32:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how ActivityTask makes async/await easier to use in your #Xamarin Android mobile apps: https://t.co/drhcfIy4ht","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":66,"FavoriteCount":30,"RawContent":null},{"Id":"921466915117260801","CreatedAt":"2017-10-20T20:03:27+00:00","UserScreenname":"xamarinhq","Text":"Get five-star app quality every time with testing from #VSMobileCenter: https://t.co/sUR6Ctm1xk https://t.co/gGQOYtNmkC","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":41,"FavoriteCount":13,"RawContent":null},{"Id":"921409932993482752","CreatedAt":"2017-10-20T16:17:01+00:00","UserScreenname":"xamarinhq","Text":"Take advantage of #ARKit, an augmented-reality mode on iOS 11 for 6S and up iPhones + 2017 iPads and iPad Pros:… https://t.co/8uG0wblORA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":33,"FavoriteCount":19,"RawContent":null},{"Id":"921089184667983872","CreatedAt":"2017-10-19T19:02:29+00:00","UserScreenname":"xamarinhq","Text":"Register now for our upcoming webinar on building better games with #Unity3D and Microsoft #Azure: https://t.co/0c8to6tPmT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":41,"FavoriteCount":35,"RawContent":null},{"Id":"921044016610922496","CreatedAt":"2017-10-19T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"Curated resources on getting up and started quickly with #XamarinForms from Program Manager @davidortinau: https://t.co/amiCZn15ns","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":10,"RawContent":null},{"Id":"920749716610207745","CreatedAt":"2017-10-18T20:33:33+00:00","UserScreenname":"xamarinhq","Text":"Update your iOS apps to reflect plugin and permission changes in iOS 11: https://t.co/9DXby5Nxsn https://t.co/jFJho4InOr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":55,"FavoriteCount":42,"RawContent":null},{"Id":"920684397212438529","CreatedAt":"2017-10-18T16:14:00+00:00","UserScreenname":"xamarinhq","Text":"Request reviews with iOS 10.3’s SKStoreReviewController: https://t.co/HgugUTrN81","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":22,"FavoriteCount":5,"RawContent":null},{"Id":"920320046701989894","CreatedAt":"2017-10-17T16:06:12+00:00","UserScreenname":"xamarinhq","Text":"Try out updates to Xamarin Live, a new Mac connection workflow, and more in the Visual Studio 2017 15.5 Preview:… https://t.co/iB8bIZkhW1","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":83,"FavoriteCount":41,"RawContent":null},{"Id":"920032724999725056","CreatedAt":"2017-10-16T21:04:29+00:00","UserScreenname":"xamarinhq","Text":"Adaptive UI with #XamarinForms: https://t.co/XZYix2Cv0j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":102,"FavoriteCount":53,"RawContent":null},{"Id":"919958111670165505","CreatedAt":"2017-10-16T16:08:00+00:00","UserScreenname":"xamarinhq","Text":"Dive into the world of build configurations to see how they can improve your build times and productivity: https://t.co/KxvabUJIue","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":26,"FavoriteCount":13,"RawContent":null},{"Id":"919747480769712128","CreatedAt":"2017-10-16T02:11:02+00:00","UserScreenname":"xamarinhq","Text":"Add “mobile developer” to your resume with @XamarinU, starting with a 30-day free trial: https://t.co/bVpjALvmoy https://t.co/fiA4quVFQb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":39,"FavoriteCount":15,"RawContent":null},{"Id":"919305335759953927","CreatedAt":"2017-10-14T20:54:06+00:00","UserScreenname":"xamarinhq","Text":"Weekend project: add some new features to your #Xamarin Android apps with our Android Support Library v26 overview:… https://t.co/49gaLayBhU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":49,"FavoriteCount":22,"RawContent":null}]}},"RunOn":"2017-10-26T05:30:39.1535246Z","RunDurationInMilliseconds":4033}