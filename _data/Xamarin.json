{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin Podcast: XAML Hot Reload Is Out! ðŸ”¥ðŸ”„","PublishedOn":"2019-07-19T18:33:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Keeping up with the latest in .NET, C#, Xamarin, and Azure is easier than ever. Co-hosts Matt Soucoup and James Montemagno cover a range of topics relevant to Xamarin developers from designing mobile...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-podcast-xaml-hot-reload/","RawContent":null},{"Title":"Recapping Xamarin Developer Summit","PublishedOn":"2019-07-16T17:52:45+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The first-ever Xamarin Developer SummitÂ hasÂ come to a close. The Xamarin team had an action-packed two days of announcements, talks, and hanging out with our community in Houston! Here is a recap of...","Href":"https://devblogs.microsoft.com/xamarin/recapping-xamarin-developer-summit/","RawContent":null},{"Title":"Snppts â€“ Beautiful UI Snippets for Xamarin.Forms","PublishedOn":"2019-07-15T19:20:23+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Guest Post: Steven Thewissen is a Xamarin developer, Microsoft MVP, and author from the Netherlands with a knack for all things graphical. He co-founded Snppts and also creates/maintains several NuGet...","Href":"https://devblogs.microsoft.com/xamarin/snppts-ui-snippets-xamarin-forms/","RawContent":null},{"Title":"Xamarin.Essentials welcomes tvOS, watchOS, and Tizen","PublishedOn":"2019-07-12T17:33:21+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"This week marked the launch of Xamarin.Essentials 1.2 packed full of new enhancements and optimizations. The main highlight is the new file preview features enabling you to send, view, and email files...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-essentials-tvos-watchos-tizen/","RawContent":null},{"Title":"Announcing XAML Hot Reload for Xamarin.Forms","PublishedOn":"2019-07-11T14:45:52+00:00","CommentsCount":30,"FacebookCount":0,"Summary":"Today at Xamarin Developer Summit, we announced XAML Hot Reload for Xamarin.Forms, which enables you to make changes to your XAML UI and see them reflected live, without requiring another build and...","Href":"https://devblogs.microsoft.com/xamarin/xaml-hot-reload/","RawContent":null},{"Title":"Xamarin Developer Summit Live Streams!","PublishedOn":"2019-07-09T17:50:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Developer Summit is right around the corner! The two-day conference starts this Thursday in Houston, Texas. It will be packed with TONS of amazing sessions and workshops for Xamarin...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-developer-summit-live-streams/","RawContent":null},{"Title":"Xamarin.Forms 4.1.0 Stable Now Available","PublishedOn":"2019-07-08T16:34:41+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today we are happy to announce Xamarin.Forms 4.1 availability on NuGet. Our 3.0.0 series of releases focused heavily on growing Xamarin.Forms by filling in the gaps. We learned that this should be...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-forms-4-1-0-stable-now-available/","RawContent":null},{"Title":"iOS 13 Preview Release Now Available","PublishedOn":"2019-07-03T17:48:38+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Today, we are excited to share our first preview release focused on support for iOS 13 and Xcode 11! With today&#8217;s preview, you can begin building applications using Xcode 11 and start...","Href":"https://devblogs.microsoft.com/xamarin/ios-13-xcode-11/","RawContent":null},{"Title":"Xamarin and .NET Community Developer Events in July","PublishedOn":"2019-07-01T19:49:51+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Jumpstart your next mobile development project by networking with your local community and getting the latest updates about Xamarin and .NET related technologies. Discover upcoming developer events...","Href":"https://devblogs.microsoft.com/xamarin/july-xamarin-net-developer-events/","RawContent":null},{"Title":"Styling for Multiple Device Resolutions","PublishedOn":"2019-06-28T18:26:56+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Guest Post: Charlin Agramonte is a Microsoft MVP and co-founder of CrossGeeks. She writes Xamarin articles in her blog http://xamgirl.com/. Find her on twitter as @Chard003.\nA few months ago we...","Href":"https://devblogs.microsoft.com/xamarin/styling-for-multiple-device-resolutions/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"10048466083","Type":"PullRequestEvent","CreatedAt":"2019-07-19T20:33:15","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3374","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] fix false warning from r8\" (#3374) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/3370\r\nContext: https://github.com/xamarin/xamarin-android/pull/3121\r\n\r\nIn 34ee4735, I introduced an incorrect warning if:\r\n\r\n* `android:minSdkVersion` >= 21\r\n* `$(AndroidEnableMultiDex)` is `True`\r\n* `$(AndroidDexTool)` is `d8`\r\n\r\nWe need to check if any `@(MultiDexMainDexList)` files were present\r\nbefore issuing the warning. r8 no longer supports custom\r\n`multidex.keep` files in some cases, so this is what the `<R8/>`\r\nMSBuild task is actually meant to warn about.\r\n\r\nI also improved the warning message a bit."},{"Id":"10048466070","Type":"IssuesEvent","CreatedAt":"2019-07-19T20:33:15","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3370","RelatedDescription":"Closed issue \"\"warning XA4306: R8 does not support `MultiDexMainDexList` files\" is shown for projects that have no @(MultiDexMainDexList) items set\" (#3370) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/commit/34ee4735646d3c6df46bb0b8369c502f0f69d7ca\r\n\r\n(I noticed this behavior while looking at the commit to think about what information to include in the draft `d16-3` release notes.)\r\n\r\n### Steps to reproduce\r\n\r\n 1. Create a new single view Android app project.\r\n\r\n 2. Build the project in the Release configuration, with multidex and R8 enabled:\r\n\r\n    ```cmd\r\n    msbuild -p:Configuration=Release -p:AndroidEnableMultiDex=true -p:AndroidLinkTool=r8 \r\n    ```\r\n\r\n### Expected behavior\r\n\r\nA new project that has no `@(MultiDexMainDexList)` items set, and no other changes apart from enabling multidex and R8, should build without any warnings related to multidex or R8.\r\n\r\n### Actual behavior\r\n\r\nThe build produces a warning about multidex and R8:\r\n\r\n```\r\nwarning XA4306: R8 does not support `MultiDexMainDexList` files when android:minSdkVersion >= 21\r\n```\r\n\r\n### Rough first guess at a fix\r\n\r\nMaybe it would be OK to move this new warning so that it's guarded by one more condition that checks if `CustomMainDexListFiles` contains any items:\r\n\r\n```diff\r\n--- a/src/Xamarin.Android.Build.Tasks/Tasks/R8.cs\r\n+++ b/src/Xamarin.Android.Build.Tasks/Tasks/R8.cs\r\n@@ -52,7 +52,8 @@ namespace Xamarin.Android.Tasks\r\n \r\n \t\t\tif (EnableMultiDex) {\r\n \t\t\t\tif (MinSdkVersion >= 21) {\r\n-\t\t\t\t\tLog.LogCodedWarning (\"XA4306\", \"R8 does not support `MultiDexMainDexList` files when android:minSdkVersion >= 21\");\r\n+\t\t\t\t\tif (CustomMainDexListFiles != null)\r\n+\t\t\t\t\t\tLog.LogCodedWarning (\"XA4306\", \"R8 does not support `@(MultiDexMainDexList)` files when android:minSdkVersion >= 21\");\r\n \t\t\t\t} else if (string.IsNullOrEmpty (MultiDexMainDexListFile)) {\r\n \t\t\t\t\tLog.LogCodedWarning (\"XA4305\", $\"MultiDex is enabled, but '{nameof (MultiDexMainDexListFile)}' was not specified.\");\r\n \t\t\t\t} else {\r\n```\r\n\r\n(For this little draft patch, I also added `@()` punctuation around `MultiDexMainDexList` in the warning message to help indicate that it is an MSBuild item name, but either way is fine by me. There's a bit of a mix in the existing warning messages, so I'm not sure which style is preferable.)\r\n\r\nWhile updating this code area, it could possibly also be handy to rename the `R8.MultiDexMainDexListFile` property to something like `R8.MultiDexMainDexListOutputFile` to help distinguish it from the `@(MultiDexMainDexList)` *input* files for anyone who is working on the code in the future. On the other hand, changing the name would change the public API of the `R8` MSBuild task. On top of that, the naming dates back to the older `<CompileToDalvik/>` and `<CreateMultiDexMainDexClassList/>` tasks, so it might only make sense to change it if it's OK to do it for all 3 tasks.\r\n\r\n### Version information\r\n\r\nXamarin.Android SDK   9.5.0.27 (d16-3/16c4494)"},{"Id":"10046539097","Type":"PullRequestEvent","CreatedAt":"2019-07-19T15:17:55","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3375","RelatedDescription":"Opened pull request \"Remove libzip and LibZipSharp\" (#3375) at xamarin/xamarin-android","RelatedBody":""},{"Id":"10045809217","Type":"PullRequestEvent","CreatedAt":"2019-07-19T13:42:44","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3374","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] fix false warning from r8\" (#3374) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/3370\r\nContext: https://github.com/xamarin/xamarin-android/pull/3121\r\n\r\nIn 34ee4735, I introduced an incorrect warning if:\r\n\r\n* `android:minSdkVersion` >= 21\r\n* `$(AndroidEnableMultiDex)` is `True`\r\n* `$(AndroidDexTool)` is `d8`\r\n\r\nWe need to check if any `@(MultiDexMainDexList)` files were present\r\nbefore issuing the warning. r8 no longer supports custom\r\n`multidex.keep` files in some cases, so this is what the `<R8/>`\r\nMSBuild task is actually meant to warn about.\r\n\r\nI also improved the warning message a bit."},{"Id":"10045723371","Type":"IssuesEvent","CreatedAt":"2019-07-19T13:31:03","Actor":"benlacey","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3373","RelatedDescription":"Opened issue \"APK build copies sqlite lib for incorrect ABI into APK, causing DllNotFoundException\" (#3373) at xamarin/xamarin-android","RelatedBody":"We're facing an issue with our projects, when deployed to an x86 emulator and attempting to use SQLite the app fails to load the `libe_sqlite.so` because the ARM version of the library has been packaged by Xamarin Android in the `lib/x86` folder of the APK instead of the correct x86 version.\r\n\r\nI have managed to reduce the problem down to a simple repro app, which is attached.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Build and deploy the attached repro project in `Debug | x86` configuration to an x86 Android emulator\r\n\r\nReproducing project here:\r\n[bugrepro_nativelibfailure.zip](https://github.com/xamarin/xamarin-android/files/3411233/bugrepro_nativelibfailure.zip)\r\n\r\n### Expected Behavior\r\n\r\nYou should see 'Started OK' in the middle of the activity\r\n\r\n### Actual Behavior\r\n\r\nAttempting to access the SQLite native library (via a call to Akavache) fails, and the exception is shown in the activity (System.DllNotFoundException: e_sqlite3)\r\n\r\n### Investigation Notes\r\n\r\nIt seems that in the BuildApk task, even though SupportedAbis = x86, the task copies the `armeabi` version of `libe_sqlite.so` into the x86 target directory, leading to the `Apk already contains the item` warnings seen in the deploy logs when it tries to copy the correct x86 version.\r\nIt also attempts to incorrectly copy the `x86_64` version onto the same `x86` target file.\r\n\r\nUnzipping the APK and checking the included lib confirms that the `lib/x86/libe_sqlite.so` file is indeed the `armeabi` version:\r\n\r\n```\r\nunzip com.audiogum.newapp.dev.apk \r\nfile lib/x86/libe_sqlite3.so \r\nlib/x86/libe_sqlite3.so: ELF 32-bit LSB shared object ARM, EABI5 version 1 (SYSV), dynamically linked, interpreter /system/bin/linker, stripped\r\n```\r\n\r\n### Version Information\r\n\r\n```\r\n=== Visual Studio Professional 2019 for Mac ===\r\n\r\nVersion 8.1.5 (build 9)\r\nInstallation UUID: 6fee0024-dcfc-4914-83ec-91ad57558c5e\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 5.6.0.25 (d16-0 / 50f75273)\r\n\r\n\tPackage version: 518010028\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 5.18.1.28 (2018-08/223ea7ef92e) (64-bit)\r\n\tPackage version: 518010028\r\n\r\n=== NuGet ===\r\n\r\nVersion: 5.0.2.5988\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.11\r\n\t2.1.9\r\n\t2.1.8\r\n\t2.1.7\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.1\r\n\t1.0.4\r\nSDK: /usr/local/share/dotnet/sdk/2.1.700/Sdks\r\nSDK Versions:\r\n\t2.1.700\r\n\t2.1.505\r\n\t2.1.504\r\n\t2.1.503\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.18.1/lib/mono/msbuild/Current/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.10\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Updater ===\r\n\r\nVersion: 11\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.2.1 (14490.122)\r\nBuild 10E1001\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.10.0.157 (Visual Studio Professional)\r\nHash: 6bd94753\r\nBranch: d16-1\r\nBuild date: 2019-06-12 17:28:48-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.3.0.23 (Visual Studio Professional)\r\nCommit: HEAD/d0b48056f\r\nAndroid SDK: /Users/blacey/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t5.0 (API level 21)\r\n\t\t5.1 (API level 22)\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.1\r\nSDK Build Tools Version: 28.0.3\r\n\r\nBuild Information: \r\nMono: mono/mono/2018-08@3a07bd426d3\r\nJava.Interop: xamarin/java.interop/d16-1@5ddc3e3\r\nLibZipSharp: grendello/LibZipSharp/d16-1@44de300\r\nLibZip: nih-at/libzip/rel-1-5-1@b95cf3f\r\nProGuard: xamarin/proguard/master@905836d\r\nSQLite: xamarin/sqlite/3.27.1@8212a2d\r\nXamarin.Android Tools: xamarin/xamarin-android-tools/d16-1@acabd26\r\n\r\n=== Microsoft Mobile OpenJDK ===\r\n\r\nJava SDK: /Users/blacey/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_8.0.25\r\n1.8.0-25\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 1.2.0.44\r\nHash: aac645b\r\nBranch: remotes/origin/d16-1\r\nBuild date: 2019-05-29 19:55:24 UTC\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.10.0.157 (Visual Studio Professional)\r\nHash: 6bd94753\r\nBranch: d16-1\r\nBuild date: 2019-06-12 17:28:47-0400\r\n\r\n=== Xamarin Designer ===\r\n\r\nVersion: 16.1.0.467\r\nHash: f1657e133\r\nBranch: remotes/origin/d16-1-new-document-model\r\nBuild date: 2019-06-18 21:57:42 UTC\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 801050009\r\nGit revision: bd0ab28ba941b19b39322247db020dcd0fb305d0\r\nBuild date: 2019-07-03 17:15:21+00\r\nBuild branch: release-8.1\r\nXamarin extensions: 8cc25b5cb090e6c23b62a7901000c299977eb08d\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.4\r\nDarwin 18.5.0 Darwin Kernel Version 18.5.0\r\n    Mon Mar 11 20:40:32 PDT 2019\r\n    root:xnu-4903.251.3~3/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nBrute Clean 1.1\r\n```\r\n\r\n### Log File\r\n\r\nFull diagnostic log for deployment process is attached.  See line 8917 for the BuildApk task output.\r\n[deploy_log.txt](https://github.com/xamarin/xamarin-android/files/3411237/deploy_log.txt)\r\n\r\nLogcat output also attached:\r\n[logcat.txt](https://github.com/xamarin/xamarin-android/files/3411239/logcat.txt)\r\n\r\n\r\n"},{"Id":"10044932712","Type":"PullRequestEvent","CreatedAt":"2019-07-19T11:22:03","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3364","RelatedDescription":"Merged pull request \"[linker] Make sure we mark *Invoker types\" (#3364) at xamarin/xamarin-android","RelatedBody":"Fixes https://github.com/xamarin/xamarin-android/issues/3263\r\n\r\nLooks like\r\nhttps://github.com/xamarin/xamarin-android/commit/5b945abb2e1f0fe1a9ab6589993c970869c4a752\r\nintroduced a new regression, where in some cases we were not marking\r\nthe *Invoker type anymore, as [this line](https://github.com/xamarin/xamarin-android/commit/5b945abb2e1f0fe1a9ab6589993c970869c4a752#diff-144727b152107ec306fbe284bd5902e3L60)\r\nis gone.\r\n\r\nThis is fixed by marking the *Invoker types in MarkJavaObjects step."},{"Id":"10044932637","Type":"IssuesEvent","CreatedAt":"2019-07-19T11:22:03","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3263","RelatedDescription":"Closed issue \"Link assemblies causes app crashes if you have an EditText in VS2019 Preview 2\" (#3263) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Add an EditText\r\n2. Choose TextChanged. (Example:  `txtSearch.TextChanged += TxtSearch_TextChanged;`)\r\n3. Choose Linking with either \"Sdk Assemblies Only\" or \"Sdk and User Assemblies\".\r\n4. Execute the program.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n\r\nBe able to execute the TextChanged on Linking with either \"Sdk Assemblies Only\" or \"Sdk and User Assemblies\".\r\n\r\n### Actual Behavior\r\n\r\nApp crashes because it cannot load ITextWatcherInvoker.\r\n\r\n### Version Information\r\n\r\nWindows 10, May Update.\r\nVisual Studio 2019 Preview 2.\r\n\r\n### Log File\r\n\r\n> System.TypeLoadException: 'Could not load type 'Android.Text.ITextWatcherInvoker' from assembly 'Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null'.'\r\n\r\n![Annotation 2019-06-20 003519](https://user-images.githubusercontent.com/1666156/59806029-54449600-92f3-11e9-9df5-b3c453facd90.png)\r\n\r\n**P.S.**\r\n\r\nIt's working in Visual Studio for Mac.\n\n> VS bug [#947890](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/947890)"},{"Id":"10044356750","Type":"IssuesEvent","CreatedAt":"2019-07-19T09:48:19","Actor":"KSemenenko","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3372","RelatedDescription":"Opened issue \"Xamarin.Android gone AOT and LLVM checkboxes.\" (#3372) at xamarin/xamarin-android","RelatedBody":"I suddenly found that I can not turn on AOT in the settings.\r\nHow could this happen?\r\n\r\n![miss_aot](https://user-images.githubusercontent.com/4385716/61526536-3c138400-aa23-11e9-880b-8b468d3463ec.png)\r\n\r\nMicrosoft Visual Studio Community 2019\r\nVersion 16.1.6\r\nVisualStudio.16.Release/16.1.6+29102.190\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2019   00435-60000-00000-AA589\r\nMicrosoft Visual C++ 2019\r\n\r\nADL Tools Service Provider   1.0\r\nThis package contains services used by Data Lake tools\r\n\r\nApplication Insights Tools for Visual Studio Package   9.1.00429.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2019   16.1.429.50124\r\nASP.NET and Web Tools 2019\r\n\r\nASP.NET Web Frameworks and Tools 2019   16.1.429.50124\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   16.1.429.50124\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.9000.0\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Functions and Web Jobs Tools   16.1.429.50124\r\nAzure Functions and Web Jobs Tools\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.3.9000.0\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   3.1.1-beta4-19281-06+58a4b1e79aea28115e66b06f850c83a3f1fcb6d3\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.1.77 (master@24013d5)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nJetBrains ReSharper Ultimate 2019.1.2   Build 191.0.20190603.142841\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright Â© 2019 JetBrains, Inc.\r\n\r\nJustDecompilePackage2017 Extension   1.0\r\nJustDecompilePackage2017 Visual Studio Extension Detailed Info\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.3.9000.0\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.3.9000.0\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   2.5\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.3.9000.0\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 0x10 - v2.9.20419.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   16.1.1 (2473f22)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   5.1.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit https://docs.nuget.org/\r\n\r\nProductivity Power Tools 2017/2019   16.0\r\nInstalls the individual extensions of Productivity Power Tools 2017/2019\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   16.0.61904.23160\r\nMicrosoft SQL Server Data Tools\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   16.0.10506.2004\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   3.1.1-beta4-19281-06+58a4b1e79aea28115e66b06f850c83a3f1fcb6d3\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.4 for F# 4.6   16.1.0-beta.19253.3+42526fe359672a05fd562dc16a91a43d0fe047a7\r\nMicrosoft Visual F# Tools 10.4 for F# 4.6\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Kubernetes   1.0\r\nVisual Studio Tools for Kubernetes\r\n\r\nVisual Studio Tools for Unity   4.1.1.0\r\nVisual Studio Tools for Unity\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   16.1.0.545 (d16-1@db7c858e8)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   16.1.0.418 (remotes/origin/d16-1@5b958bb10)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   16.2.112 (4db4af4)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.3.0.23 (HEAD/d0b48056f)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n    Mono: mono/mono/2018-08@3a07bd426d3\r\n    Java.Interop: xamarin/java.interop/d16-1@5ddc3e3\r\n    LibZipSharp: grendello/LibZipSharp/d16-1@44de300\r\n    LibZip: nih-at/libzip/rel-1-5-1@b95cf3f\r\n    ProGuard: xamarin/proguard/master@905836d\r\n    SQLite: xamarin/sqlite/3.27.1@8212a2d\r\n    Xamarin.Android Tools: xamarin/xamarin-android-tools/d16-1@acabd26\r\n\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.10.0.157 (6bd9475)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n"},{"Id":"10044111402","Type":"PullRequestEvent","CreatedAt":"2019-07-19T09:13:22","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3371","RelatedDescription":"Opened pull request \"[WIP] Remove Mono submodule\" (#3371) at xamarin/xamarin-android","RelatedBody":"**DO NOT MERGE**\r\n\r\nTODO:\r\n\r\n  [ ] Linux Mono archive must have Mono.Linker sources added\r\n  [ ] Mono archive must have the required license files added (currently the affected items are disabled when generating the TPN)\r\n\r\nOne of the goals behind the Mono SDK/archive was to enable product builds\r\nwithout having the entire Mono source present which means it should be possible\r\nto remove Mono git submodule and build entire Xamarin.Android without any\r\nissues. At the same time, we want to keep the ability to build Mono from source,\r\nif necessary, for situations when a developer works on the BCL or the runtime\r\nitself and there's no appropriate binary archive present. To that effect, this\r\ncommit implements the following:\r\n\r\n  * Remove Mono submodule\r\n  * Put Mono repo reference to the `.external` file\r\n  * Make distinction between \"commercial\" and \"regular\" bits in the `.external`\r\n    file so that we don't attempt to check out everything mentioned in there in\r\n    situations when a developer doesn't have access to the commercial bits.\r\n  * Use Mono linker sources from the archive\r\n  * Remove `zlib-helper.c` from the `libmonodroid` build - the API implemented\r\n    in there is no longer used by Mono.\r\n  * `Xamarin.Android.Cecil.dll` and `Xamarin.Android.Cecil.Mdb.dll` are no\r\n    longer built from source. Instead we use `Cecil` to reshape `Mono.Cecil` and\r\n    conjure the two renamed and re-signed assemblies.\r\n  * All the code which used `Xamarin.Android.Cecil` project reference now simply\r\n    references the conjured asseblies (which are also added to the bundle)\r\n  * Third Party Notices are generated from licenses found in the Mono archive."},{"Id":"10043638620","Type":"IssuesEvent","CreatedAt":"2019-07-19T08:02:22","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3367","RelatedDescription":"Closed issue \"[aot][armeabi-v7a]Android-App crashes when AOT is in use\" (#3367) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nRun the Project below in Release-Configuration on armeabi-v7a  architecture.\r\n\r\n[AOTTest.zip](https://github.com/xamarin/xamarin-android/files/3406102/AOTTest.zip)\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nThe TestApp should be started and show the MainActivity.\r\n\r\n### Actual Behavior\r\nThe App crashes before MainActivity is shown and doesn't start.\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n=== Visual Studio Community 2019 for Mac ===\r\n\r\nVersion 8.1.5 (build 9)\r\nInstallation UUID: 0d7b598b-59f1-4777-916c-2f38603ed113\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 5.6.0.25 (d16-0 / 50f75273)\r\n\r\n\tPackage version: 518010028\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 5.18.1.28 (2018-08/223ea7ef92e) (64-bit)\r\n\tPackage version: 518010028\r\n\r\n=== NuGet ===\r\n\r\nVersion: 5.0.2.5988\r\n\r\n=== .NET Core ===\r\n\r\nLaufzeit: /usr/local/share/dotnet/dotnet\r\nLaufzeitversionen:\r\n\t2.1.11\r\n\t2.1.9\r\n\t2.1.8\r\n\t2.1.2\r\n\t1.1.1\r\n\t1.0.4\r\nSDK: /usr/local/share/dotnet/sdk/2.1.700/Sdks\r\nSDK-Versionen:\r\n\t2.1.700\r\n\t2.1.505\r\n\t2.1.504\r\n\t2.1.302\r\n\t1.0.3\r\nMSBuild-SDKs: /Library/Frameworks/Mono.framework/Versions/5.18.1/lib/mono/msbuild/Current/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.10\r\nSpeicherort: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Updater ===\r\n\r\nVersion: 11\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.2.1 (14490.122)\r\nBuild 10E1001\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.10.0.157 (Visual Studio Community)\r\nHash: 6bd94753\r\nBranch: d16-1\r\nBuild date: 2019-06-12 17:28:48-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.3.0.23 (Visual Studio Community)\r\nCommit:HEAD/d0b48056f\r\nAndroid SDK: /Users/sawatzky_d/Library/Android/sdk\r\n\tUnterstÃ¼tzte Android-Versionen:\r\n\t\t7.1 (API-Ebene 25)\r\n\t\t8.0 (API-Ebene 26)\r\n\t\t8.1 (API-Ebene 27)\r\n\r\nVersion von SDK Tools: 26.1.1\r\nVersion der SDK-Plattformtools: 29.0.1\r\nVersion der SDK-Buildtools: 28.0.3\r\n\r\nBuildinformationen: \r\nMono: mono/mono/2018-08@3a07bd426d3\r\nJava.Interop: xamarin/java.interop/d16-1@5ddc3e3\r\nLibZipSharp: grendello/LibZipSharp/d16-1@44de300\r\nLibZip: nih-at/libzip/rel-1-5-1@b95cf3f\r\nProGuard: xamarin/proguard/master@905836d\r\nSQLite: xamarin/sqlite/3.27.1@8212a2d\r\nXamarin.Android Tools: xamarin/xamarin-android-tools/d16-1@acabd26\r\n\r\n=== Microsoft Mobile OpenJDK ===\r\n\r\nJava SDK: /Users/sawatzky_d/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_1.8.0.25\r\n1.8.0-25\r\nAndroid Designer EPL-Code ist hier verfÃ¼gbar:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 1.2.0.44\r\nHash: aac645b\r\nBranch: remotes/origin/d16-1\r\nBuild date: 2019-05-29 19:55:24 UTC\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.10.0.157 (Visual Studio Community)\r\nHash: 6bd94753\r\nBranch: d16-1\r\nBuild date: 2019-06-12 17:28:47-0400\r\n\r\n=== Xamarin Designer ===\r\n\r\nVersion: 16.1.0.467\r\nHash: f1657e133\r\nBranch: remotes/origin/d16-1-new-document-model\r\nBuild date: 2019-06-18 21:57:42 UTC\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 801050009\r\nGit revision: bd0ab28ba941b19b39322247db020dcd0fb305d0\r\nBuild date: 2019-07-03 17:15:21+00\r\nBuild branch: release-8.1\r\nXamarin extensions: 8cc25b5cb090e6c23b62a7901000c299977eb08d\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.5\r\nDarwin 18.6.0 Darwin Kernel Version 18.6.0\r\n    Thu Apr 25 23:16:27 PDT 2019\r\n    root:xnu-4903.261.4~2/RELEASE_X86_64 x86_64\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n           \r\nadb logcat -d | pbcopy\r\n2. Paste below this comment block\r\n-->\r\n\r\n[aot_bug.log](https://github.com/xamarin/xamarin-android/files/3405931/aot_bug.log)\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->\r\n"},{"Id":"10043036812","Type":"IssuesEvent","CreatedAt":"2019-07-19T06:08:41","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3370","RelatedDescription":"Opened issue \"\"warning XA4306: R8 does not support `MultiDexMainDexList` files\" is shown for projects that have no @(MultiDexMainDexList) items set\" (#3370) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/commit/34ee4735646d3c6df46bb0b8369c502f0f69d7ca\r\n\r\n(I noticed this behavior while looking at the commit to think about what information to include in the draft `d16-3` release notes.)\r\n\r\n### Steps to reproduce\r\n\r\n 1. Create a new single view Android app project.\r\n\r\n 2. Build the project in the Release configuration, with multidex and R8 enabled:\r\n\r\n    ```cmd\r\n    msbuild -p:Configuration=Release -p:AndroidEnableMultiDex=true -p:AndroidLinkTool=r8 \r\n    ```\r\n\r\n### Expected behavior\r\n\r\nA new project that has no `@(MultiDexMainDexList)` items set, and no other changes apart from enabling multidex and R8, should build without any warnings related to multidex or R8.\r\n\r\n### Actual behavior\r\n\r\nThe build produces a warning about multidex and R8:\r\n\r\n```\r\nwarning XA4306: R8 does not support `MultiDexMainDexList` files when android:minSdkVersion >= 21\r\n```\r\n\r\n### Rough first guess at a fix\r\n\r\nMaybe it would be OK to move this new warning so that it's guarded by one more condition that checks if `CustomMainDexListFiles` contains any items:\r\n\r\n```diff\r\n--- a/src/Xamarin.Android.Build.Tasks/Tasks/R8.cs\r\n+++ b/src/Xamarin.Android.Build.Tasks/Tasks/R8.cs\r\n@@ -52,7 +52,8 @@ namespace Xamarin.Android.Tasks\r\n \r\n \t\t\tif (EnableMultiDex) {\r\n \t\t\t\tif (MinSdkVersion >= 21) {\r\n-\t\t\t\t\tLog.LogCodedWarning (\"XA4306\", \"R8 does not support `MultiDexMainDexList` files when android:minSdkVersion >= 21\");\r\n+\t\t\t\t\tif (CustomMainDexListFiles != null)\r\n+\t\t\t\t\t\tLog.LogCodedWarning (\"XA4306\", \"R8 does not support `@(MultiDexMainDexList)` files when android:minSdkVersion >= 21\");\r\n \t\t\t\t} else if (string.IsNullOrEmpty (MultiDexMainDexListFile)) {\r\n \t\t\t\t\tLog.LogCodedWarning (\"XA4305\", $\"MultiDex is enabled, but '{nameof (MultiDexMainDexListFile)}' was not specified.\");\r\n \t\t\t\t} else {\r\n```\r\n\r\n(For this little draft patch, I also added `@()` punctuation around `MultiDexMainDexList` in the warning message to help indicate that it is an MSBuild item name, but either way is fine by me. There's a bit of a mix in the existing warning messages, so I'm not sure which style is preferable.)\r\n\r\nWhile updating this code area, it could possibly also be handy to rename the `R8.MultiDexMainDexListFile` property to something like `R8.MultiDexMainDexListOutputFile` to help distinguish it from the `@(MultiDexMainDexList)` *input* files for anyone who is working on the code in the future. On the other hand, changing the name would change the public API of the `R8` MSBuild task. On top of that, the naming dates back to the older `<CompileToDalvik/>` and `<CreateMultiDexMainDexClassList/>` tasks, so it might only make sense to change it if it's OK to do it for all 3 tasks.\r\n\r\n### Version information\r\n\r\nXamarin.Android SDK   9.5.0.27 (d16-3/16c4494)"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"10049335120","Type":"IssuesEvent","CreatedAt":"2019-07-20T00:11:22","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6939","RelatedDescription":"Opened issue \"[Bug] Replacing all Material Visual Renderers fails if the assemblies are scanned in the \"wrong\" order\" (#6939) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nBecause the Material Renderers use ExportRenderer and are registered during the assembly scanning phase then whatever Assembly gets scanned second wins\r\n\r\n#### Possible fixes\r\n-  Actually make the Init call on iOS do something and register the renderers by hand\r\n- Force all known Xamarin Forms assemblies to get scanned first in the Registrar\r\n- Somehow use RenderWith so when it's requested on demand it reaches into the Material library and uses it. Not sure how to make this work efficiently though\r\n- ????\r\n\r\n### Steps to Reproduce\r\n\r\n1.  git clone https://github.com/aubiyko/XamarinFormsMaterialTest\r\n2.  Notice that the iOS renderer used to just replace Button never runs\r\n\r\n```C#\r\n[assembly: ExportRenderer(typeof(Button), typeof(MaterialCustomButtonRenderer), new[] { typeof(VisualMarker.MaterialVisual) })]\r\n```\r\n\r\n\r\n### Expected Behavior\r\nMaterialCustomButtonRenderer should run\r\n\r\n### Actual Behavior\r\nMaterialCustomButtonRenderer doesn't run\r\n\r\n### Basic Information\r\n\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  Only noticed this on iOS most likely because it's randomly unlucky\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/aubiyko/XamarinFormsMaterialTest"},{"Id":"10048927661","Type":"IssuesEvent","CreatedAt":"2019-07-19T22:03:20","Actor":"jamesmontemagno","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6938","RelatedDescription":"Opened issue \"[Enhancement] Visual Material - ImageButton\" (#6938) at xamarin/Xamarin.Forms","RelatedBody":"## Summary\r\nIt would be nice to use Material on \"ImageButton\" so we get a better drop shadow and ripple effect on the button. The default one looks good, but Material looks better :)\r\n\r\n## API Changes\r\nAdd Visual=\"Material\" on ImageButton\r\n\r\n## Intended Use Case\r\n![image](https://user-images.githubusercontent.com/1676321/61567968-49863980-aa36-11e9-8744-5c27e4f98551.png)\r\n\r\nhere i was using a frame for the circle, but imagebutton works better, but misses out on the features I added in the request.\r\n"},{"Id":"10048277358","Type":"IssuesEvent","CreatedAt":"2019-07-19T19:59:27","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6937","RelatedDescription":"Opened issue \"[Bug] Image on Button or ImageButton distorts when swapped\" (#6937) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nWhen swapping out the Source Image on the attached project the image will occasionally distort. If you click it enough times it'll return back to normal.\r\n\r\n### Steps to Reproduce\r\n\r\n1.  Run attached project\r\n2. click on the heart a few times and you will see sometimes it distorts\r\n\r\n### Expected Behavior\r\nThe image should always stay the same height/width\r\n\r\n### Actual Behavior\r\nThe image when changing stretches and occasionally doesn't return to normal\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.3\r\n- Last known good version: I tested as far back as 3.4 and the issue still presented itself there\r\n  - Android:  API 23\r\n\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/5375137/61561935-69652f80-aa2d-11e9-96e3-89f0414373a5.png)\r\n\r\n\r\n### Reproduction Link\r\n\r\n[ImageSizesWeirdWhenChanged.zip](https://github.com/xamarin/Xamarin.Forms/files/3412491/ImageSizesWeirdWhenChanged.zip)\r\n"},{"Id":"10048196066","Type":"PullRequestEvent","CreatedAt":"2019-07-19T19:45:14","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6936","RelatedDescription":"Opened pull request \"[C] force update size on View updated\" (#6936) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n<!-- Describe your changes here. -->\r\nwhen a ViewCell View property is updated, the actual rendered cell is blank\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\nfixes HotReload\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"10048171911","Type":"PullRequestEvent","CreatedAt":"2019-07-19T19:40:42","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6935","RelatedDescription":"Opened pull request \"[Build] Share package version with cake\" (#6935) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nWrites a file with the version so cake script can use it.\r\n\r\n### Issues Resolved ### \r\n\r\n### Testing Procedure ###\r\nRun pack see if provides the metadata on package version\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"10048123627","Type":"IssuesEvent","CreatedAt":"2019-07-19T19:31:48","Actor":"NickeManarin","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6934","RelatedDescription":"Opened issue \"[Bug] Can't use xml:space=\"preserve\" in ResourceDictionary\" (#6934) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nWhile trying to use the `xml:space=\"preserve\"` attribute, the app will crash.\r\n\r\n_(Not sure if it's a bug or it was simply not in spec)_\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a separated resource dictionary like so:\r\n```\r\n<ResourceDictionary xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n                    xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n                    xml:space=\"preserve\">\r\n\r\n    <x:String x:Key=\"S.Space\"> Space before and after </x:String>\r\n</ResourceDictionary>\r\n```\r\n2. Add to the main `App.xaml` file as a merged dictionary.\r\n3. Access the `string` resource in the app and debug it.\r\n\r\n### Expected Behavior\r\nThe resource will be loaded with its spaces correctly.\r\n\r\n### Actual Behavior\r\nThe app crashes with this message (at the `App.xaml.g.cs`):\r\n```\r\nUnhandled Exception:\r\nXamarin.Forms.Xaml.XamlParseException: Position 3:21. Property space is not found or does not have an accessible getter occurred\r\n```\r\n\r\n```\r\n07-19 16:24:53.717 D/Mono    (28575): DllImport attempting to load: '/system/lib64/liblog.so'.\r\n07-19 16:24:53.718 D/Mono    (28575): DllImport loaded library '/system/lib64/liblog.so'.\r\n07-19 16:24:53.719 D/Mono    (28575): DllImport searching in: '/system/lib64/liblog.so' ('/system/lib64/liblog.so').\r\n07-19 16:24:53.719 D/Mono    (28575): Searching for '__android_log_print'.\r\n07-19 16:24:53.719 D/Mono    (28575): Probing '__android_log_print'.\r\n07-19 16:24:53.719 D/Mono    (28575): Found as '__android_log_print'.\r\n07-19 16:24:53.726 I/MonoDroid(28575): UNHANDLED EXCEPTION:\r\n07-19 16:24:53.733 I/MonoDroid(28575): Xamarin.Forms.Xaml.XamlParseException: Position 3:21. Property space is not found or does not have an accessible getter\r\n07-19 16:24:53.734 I/MonoDroid(28575):   at Xamarin.Forms.Xaml.ApplyPropertiesVisitor.GetPropertyValue (System.Object xamlElement, Xamarin.Forms.Xaml.XmlName propertyName, Xamarin.Forms.Xaml.HydrationContext context, System.Xml.IXmlLineInfo lineInfo, System.Object& targetProperty) [0x00095] in D:\\a\\1\\s\\Xamarin.Forms.Xaml\\ApplyPropertiesVisitor.cs:390 \r\n07-19 16:24:53.734 I/MonoDroid(28575):   at Xamarin.Forms.Xaml.ApplyPropertiesVisitor.TryAddToProperty (System.Object element, Xamarin.Forms.Xaml.XmlName propertyName, System.Object value, System.String xKey, System.Xml.IXmlLineInfo lineInfo, Xamarin.Forms.Xaml.Internals.XamlServiceProvider serviceProvider, Xamarin.Forms.Xaml.HydrationContext context, System.Exception& exception) [0x00004] in D:\\a\\1\\s\\Xamarin.Forms.Xaml\\ApplyPropertiesVisitor.cs:643 \r\n07-19 16:24:53.734 I/MonoDroid(28575):   at Xamarin.Forms.Xaml.ApplyPropertiesVisitor.SetPropertyValue (System.Object xamlelement, Xamarin.Forms.Xaml.XmlName propertyName, System.Object value, System.Object rootElement, Xamarin.Forms.Xaml.INode node, Xamarin.Forms.Xaml.HydrationContext context, System.Xml.IXmlLineInfo lineInfo) [0x000f0] in D:\\a\\1\\s\\Xamarin.Forms.Xaml\\ApplyPropertiesVisitor.cs:356 \r\n07-19 16:24:53.734 I/MonoDroid(28575):   at Xamarin.Forms.Xaml.ApplyPropertiesVisitor.Visit (Xamarin.Forms.Xaml.ValueNode node, Xamarin.Forms.Xaml.INode parentNode) [0x0007b] in D:\\a\\1\\s\\Xamarin.Forms.Xaml\\ApplyPropertiesVisitor.cs:59 \r\n07-19 16:24:53.734 I/MonoDroid(28575):   at Xamarin.Forms.Xaml.ValueNode.Accept (Xamarin.Forms.Xaml.IXamlNodeVisitor visitor, Xamarin.Forms.Xaml.INode parentNode) [0x00000] in D:\\a\\1\\s\\Xamarin.Forms.Xaml\\XamlNode.cs:86 \r\n07-19 16:24:53.734 I/MonoDroid(28575):   at Xamarin.Forms.Xaml.FillResourceDictionariesVisitor.Visit (Xamarin.Forms.Xaml.ValueNode node, Xamarin.Forms.Xaml.INode parentNode) [0x0002d] in D:\\a\\1\\s\\Xamarin.Forms.Xaml\\FillResourceDictionariesVisitor.cs:31 \r\n07-19 16:24:53.734 I/MonoDroid(28575):   at Xamarin.Forms.Xaml.ValueNode.Accept (Xamarin.Forms.Xaml.IXamlNodeVisitor visitor, Xamarin.Forms.Xaml.INode parentNode) [0x00000] in D:\\a\\1\\s\\Xamarin.Forms.Xaml\\XamlNode.cs:86 \r\n07-19 16:24:53.734 I/MonoDroid(28575):   at Xamarin.Forms.Xaml.RootNode.Accept (Xamarin.Forms.Xaml.IXamlNodeVisitor visitor, Xamarin.Forms.Xaml.INode parentNode) [0x00044] in D:\\a\\1\\s\\Xamarin.Forms.Xaml\\XamlNode.cs:200 \r\n07-19 16:24:53.734 I/MonoDroid(28575):   at Xamarin.Forms.Xaml.XamlLoader.Visit (Xamarin.Forms.Xaml.RootNode rootnode, Xamarin.Forms.Xaml.HydrationContext visitorContext, System.Boolean useDesignProperties) [0x0007e] in D:\\a\\1\\s\\Xamarin.Forms.Xaml\\XamlLoader.cs:212 \r\n07-19 16:24:53.734 I/MonoDroid(28575):   at Xamarin.Forms.Xaml.XamlLoader.Load (System.Object view, System.String xaml, System.Boolean useDesignProperties) [0x00077] in D:\\a\\1\\s\\Xamarin.Forms.Xaml\\XamlLoader.cs:96 \r\n07-19 16:24:53.734 I/MonoDroid(28575):   at Xamarin.Forms.Xaml.XamlLoader.Load (System.Object view, System.String xaml) [0x00000] in D:\\a\\1\\s\\Xamarin.Forms.Xaml\\XamlLoader.cs:73 \r\n07-19 16:24:53.734 I/MonoDroid(28575):   at Xamarin.Forms.Xaml.Extensions.LoadFromXaml[TXaml] (TXaml view, System.String xaml) [0x00000] in D:\\a\\1\\s\\Xamarin.Forms.Xaml\\ViewExtensions.cs:42 \r\n07-19 16:24:53.734 I/MonoDroid(28575):   at Xamarin.Forms.Xaml.ResourcesLoader.CreateFromResource[T] (System.String resourcePath, System.Reflection.Assembly assembly, System.Xml.IXmlLineInfo lineInfo) [0x000b1] in D:\\a\\1\\s\\Xamarin.Forms.Xaml\\ResourcesLoader.cs:35 \r\n07-19 16:24:53.734 I/MonoDroid(28575):   at Xamarin.Forms.ResourceDictionary.SetAndLoadSource (System.Uri value, System.String resourcePath, System.Reflection.Assembly assembly, System.Xml.IXmlLineInfo lineInfo) [0x00063] in D:\\a\\1\\s\\Xamarin.Forms.Core\\ResourceDictionary.cs:72 \r\n07-19 16:24:53.734 I/MonoDroid(28575):   at MyApp.App.InitializeComponent () [0x00012]\r\n```\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.1.0.581479\r\n- Last known good version: n/a\r\n- IDE: VS for Windows\r\n- Platform Target Frameworks: \r\n  - iOS:  not tested\r\n  - Android: Android Pie\r\n  - UWP:  not tested \r\n- Android Support Library Version: 28\r\n- Nuget Packages: ?\r\n- Affected Devices: Nokia 6.1 Plus\r\n\r\n### Reproduction Link\r\n\r\nNot yet...\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"10048418584","Type":"PullRequestEvent","CreatedAt":"2019-07-19T20:24:52","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6618","RelatedDescription":"Merged pull request \"[UIKit] Update bindings to Xcode 11 beta 4\" (#6618) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"10048414079","Type":"PullRequestEvent","CreatedAt":"2019-07-19T20:24:05","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6619","RelatedDescription":"Merged pull request \"[AuthenticationServices] Fix ASAuthorization and ASAuthorizationRequest\" (#6619) at xamarin/xamarin-macios","RelatedBody":"Apple returns an internal wrapper object depending on the context the API\r\nis used for the following properties\r\n\r\n* `ASAuthorization.Provider`\r\n* `ASAuthorization.Credential`\r\n* `ASAuthorizationRequest.Provider`\r\n\r\nThe provider objects have a common interface `IASAuthorizationProvider`\r\nand the Credential objects have` IASAuthorizationCredential` since the\r\nobjects that implement these protocols inherit from `NSObject` and Apple\r\nreturns the internal wrapper object we cannot have the runtime do the\r\nright cast for us so we expose a generic API constrained to\r\n\r\n* `NSObject, IASAuthorizationProvider`\r\n* `NSObject, IASAuthorizationCredential`\r\n\r\nRespectively so now we are able to do something like\r\n\r\n```csharp\r\nGetCredential<ASAuthorizationAppleIdCredential> ();\r\n```\r\n\r\nNo unit test added because this requires special entitlements but\r\nthis is working as expected in an internal sample that it is being\r\nworked on.\r\n\r\n<img width=\"854\" alt=\"sample\" src=\"https://user-images.githubusercontent.com/204671/61506304-a12d9200-a9af-11e9-8208-27b2a44e4f55.png\">\r\n"},{"Id":"10047967073","Type":"PullRequestEvent","CreatedAt":"2019-07-19T19:03:47","Actor":"tj-devel709","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6624","RelatedDescription":"Opened pull request \"[PhotosUI] Add Xcode 11 Beta 1 Binding \" (#6624) at xamarin/xamarin-macios","RelatedBody":"No changes in beta 2-4"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1152295154507833347","CreatedAt":"2019-07-19T19:12:28+00:00","UserScreenname":"xamarinhq","Text":"Keep up with the latest in .NET, C#, Xamarin, and Azure with Co-hosts Matt Soucoup and James Montemagno. This monthâ€¦ https://t.co/RMbOmc6RZE","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":23,"FavoriteCount":6,"RawContent":null},{"Id":"1151246383837585408","CreatedAt":"2019-07-16T21:45:01+00:00","UserScreenname":"xamarinhq","Text":"Thank You! The first Xamarin Developer Summit was a huge success. This post recaps all the great news and developmeâ€¦ https://t.co/TNaPa2uXX6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":86,"FavoriteCount":35,"RawContent":null},{"Id":"1151185104460537857","CreatedAt":"2019-07-16T17:41:31+00:00","UserScreenname":"xamarinhq","Text":"On this week's #Xamarin Essential API of the week, we take a look at the Phone Dialer API which enables your app toâ€¦ https://t.co/TCMRVbhW8X","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":21,"FavoriteCount":11,"RawContent":null},{"Id":"1149695456684982272","CreatedAt":"2019-07-12T15:02:11+00:00","UserScreenname":"xamarinhq","Text":"Stick around after the @XamDevSummit Keynote to hear about \"Building https://t.co/3QxhuBuvHc from source\" byâ€¦ https://t.co/6b0vNDHyzx","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":27,"FavoriteCount":10,"RawContent":null},{"Id":"1149674546556915713","CreatedAt":"2019-07-12T13:39:06+00:00","UserScreenname":"xamarinhq","Text":"Day 2 is here! Watch the live @XamDevSummit keynote and explore Microsoft's complete mobile DevOps offering withâ€¦ https://t.co/TpKv78eFbD","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":29,"FavoriteCount":10,"RawContent":null},{"Id":"1149421147064295424","CreatedAt":"2019-07-11T20:52:11+00:00","UserScreenname":"xamarinhq","Text":"Get all the \"Partly Cloudy â€“ Tips &amp; Tricks to Using #Azure to Its Fullest in #Mobile Apps\" with @CodeMillMatt at 16â€¦ https://t.co/OWINsa15lf","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":10,"FavoriteCount":1,"RawContent":null},{"Id":"1149415035241926656","CreatedAt":"2019-07-11T20:27:54+00:00","UserScreenname":"xamarinhq","Text":"Catch @JamesMontemagno live at @XamDevSummit \"Crafting Real-Time Mobile Apps with SignalR\"  https://t.co/AGklkmnbyU","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":19,"FavoriteCount":7,"RawContent":null},{"Id":"1149390372851896321","CreatedAt":"2019-07-11T18:49:54+00:00","UserScreenname":"xamarinhq","Text":"Live at 14:05 CT, join @Pureween to \"Streamline &amp; Simplify Events with Reactive Extensions\" at @XamDevSummit! Folloâ€¦ https://t.co/pplpgXzjJe","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":16,"FavoriteCount":2,"RawContent":null},{"Id":"1149358581940129793","CreatedAt":"2019-07-11T16:43:34+00:00","UserScreenname":"xamarinhq","Text":"Watch @SweekritiS share \"Page Object Pattern and UITest Best Practices\" #LIVE at @XamDevSummit at 13:05 CT! Just usâ€¦ https://t.co/4pSIzUXclE","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":14,"FavoriteCount":0,"RawContent":null},{"Id":"1149336299280773120","CreatedAt":"2019-07-11T15:15:02+00:00","UserScreenname":"xamarinhq","Text":"Today at Xamarin Developer Summit, we announced XAML Hot Reload for Xamarin Forms.\n\nNow you can make changes to youâ€¦ https://t.co/AhFwLxKNFz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":164,"FavoriteCount":81,"RawContent":null},{"Id":"1149331380104564736","CreatedAt":"2019-07-11T14:55:29+00:00","UserScreenname":"xamarinhq","Text":"ICYMI, we now have a preview release focused on supporting iOS 13 and Xcode 11. Now you can build applications usinâ€¦ https://t.co/La5Jlgs0Kh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":8,"FavoriteCount":4,"RawContent":null},{"Id":"1148665630306000896","CreatedAt":"2019-07-09T18:50:02+00:00","UserScreenname":"xamarinhq","Text":"We're live streaming the Xamarin Developer Summit!\n\nVirtually attend the conference starting Thursday, July 11thâ€¦ https://t.co/Kh76XrlNVo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":77,"FavoriteCount":39,"RawContent":null},{"Id":"1148317583004852224","CreatedAt":"2019-07-08T19:47:01+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin team at this years largest #Xamarin conference, the Xamarin Developer Summit! July 11-12 in Houstoâ€¦ https://t.co/5rZ4bINXkB","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":49,"FavoriteCount":16,"RawContent":null},{"Id":"1148273170136403975","CreatedAt":"2019-07-08T16:50:32+00:00","UserScreenname":"xamarinhq","Text":"ICYMI, Xamarin Forms 4.1.0 Stable is now available. It has dozens of quality improvements, a new CheckBox control,â€¦ https://t.co/R3yD5qr9qm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":86,"FavoriteCount":44,"RawContent":null},{"Id":"1146463951594459137","CreatedAt":"2019-07-03T17:01:20+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":9,"FavoriteCount":2,"RawContent":null},{"Id":"1146144741622505472","CreatedAt":"2019-07-02T19:52:55+00:00","UserScreenname":"xamarinhq","Text":"Jumpstart your next mobile development project by networking with your local community and getting the latest updatâ€¦ https://t.co/JeIcDMSyUr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":32,"FavoriteCount":8,"RawContent":null},{"Id":"1145780868323168256","CreatedAt":"2019-07-01T19:47:01+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin team at this years largest #Xamarin conference, the Xamarin Developer Summit! July 11-12 in Houstoâ€¦ https://t.co/ghYOrkuhhd","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":20,"FavoriteCount":7,"RawContent":null},{"Id":"1144685402965643277","CreatedAt":"2019-06-28T19:14:01+00:00","UserScreenname":"xamarinhq","Text":"We realized that making UI *look* good is not enough; it has to be truly adaptive. See how to handle this by usingâ€¦ https://t.co/CtEZskZmJ9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":115,"FavoriteCount":39,"RawContent":null},{"Id":"1144326789239644160","CreatedAt":"2019-06-27T19:29:01+00:00","UserScreenname":"xamarinhq","Text":"This weekâ€™s Xamarin Essential API, we look at the Email API; enabling you to open a pre-populated e-mail (with attaâ€¦ https://t.co/oaob7atjW7","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":35,"FavoriteCount":15,"RawContent":null}]}},"RunOn":"2019-07-20T05:31:06.1842569Z","RunDurationInMilliseconds":5289}