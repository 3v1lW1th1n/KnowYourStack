{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1, released in 1999 and 2006...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11078838213","Type":"PullRequestEvent","CreatedAt":"2019-12-13T00:35:57","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7768","RelatedDescription":"Opened pull request \"Add support for a Usabilla feedback button on every page\" (#7768) at NuGet/NuGetGallery","RelatedBody":"This is behind feature flag `NuGetGallery.UsabillaEveryPage`.\r\n\r\nProgress on https://github.com/NuGet/NuGetGallery/issues/7385.\r\n\r\n![image](https://user-images.githubusercontent.com/94054/70759998-156d2700-1cfd-11ea-98d6-ed45a3244db8.png)\r\n\r\nThe survey questions can be changed from the Usabilla portal.\r\n\r\n![image](https://user-images.githubusercontent.com/94054/70760028-3766a980-1cfd-11ea-8729-c97db7a4ffcd.png)\r\n\r\nNote that when the modal opens and the page content does not fill the viewport (i.e. there is no vertical scroll bar, the footer jumps up). I have not found a workaround and there is similar behavior on other websites:\r\n\r\n![image](https://user-images.githubusercontent.com/94054/70760084-5ebd7680-1cfd-11ea-85ee-344937f6ab3c.png)\r\n\r\n"},{"Id":"11077935033","Type":"PullRequestEvent","CreatedAt":"2019-12-12T21:46:55","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7767","RelatedDescription":"Merged pull request \"[Token scanning-Phase 1] Email should cc to Gallery Owner. \" (#7767) at NuGet/NuGetGallery","RelatedBody":"We want to cc the email to Gallery Owner (Support) to track the messages. \r\nHandle: https://github.com/nuget/engineering/issues/2898"},{"Id":"11077347762","Type":"PullRequestEvent","CreatedAt":"2019-12-12T20:22:46","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7767","RelatedDescription":"Opened pull request \"[Token scanning-Phase 1] Email should cc to Gallery Owner. \" (#7767) at NuGet/NuGetGallery","RelatedBody":"We want to cc the email to Gallery Owner (Support) to track the messages. "},{"Id":"11076205874","Type":"IssuesEvent","CreatedAt":"2019-12-12T17:46:30","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7716","RelatedDescription":"Closed issue \"Reduce search load by rethinking the \"is indexed\" check\" (#7716) at NuGet/NuGetGallery","RelatedBody":"Today, the \"is indexed\" check has the following properties:\r\n\r\n- Cached (for 30 seconds)\r\n- Executed for all available package versions\r\n  - no matter the age (even if it is months or years old)\r\n  - even if it is unlisted (which is probably fine)\r\n- Executed for unauthenticated requests\r\n\r\n![a](https://user-images.githubusercontent.com/94054/69982501-7a4ca400-14e9-11ea-8523-53dd0d847f07.png)\r\n\r\nWe can re-evaluate pretty much everything here. For example:\r\n\r\n1. Only show it to the owner of the package\r\n   - This is a bit of a take-back but since indexing times are a minority of the package's lifetime it's probably not interesting for consumers\r\n1. Only check for the first day of the package's \"life\" (probably since last edited)\r\n1. Increase cache duration\r\n\r\nRelated to https://github.com/NuGet/Engineering/issues/2773."},{"Id":"11076124948","Type":"IssuesEvent","CreatedAt":"2019-12-12T17:35:46","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7747","RelatedDescription":"Closed issue \"Application Insights is broken in NuGetGallery\" (#7747) at NuGet/NuGetGallery","RelatedBody":"This is as of ServerCommon 2.60.0. It's possible 2.59.0 is also affected. 2.58.0 is last known good.\r\n\r\nChecked the following tables: \r\n\r\n- traces\r\n- requests\r\n- dependencies\r\n- customMetrics\r\n\r\nChecked the following apps:\r\n\r\n- NuGetGallery\r\n- DatabaseMigration.Gallery (DatabaseMigrationsTools)"},{"Id":"11076085053","Type":"IssuesEvent","CreatedAt":"2019-12-12T17:30:30","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7689","RelatedDescription":"Closed issue \"Use MVC routes to point Curated feed routes to V2 controller\" (#7689) at NuGet/NuGetGallery","RelatedBody":"Curated feeds have been removed for quite some time now. To reduce code bloat and to share the server-side (in-memory) endpoint caches between V2 controller and Curated V2 controller, we can try to make all of the curated V2 routes point to the main V2 controller.\r\n\r\nThis would:\r\n\r\na) reduce memory consumption because the endpoint cache is per Controller/action.\r\nb) make non-existent curated feeds appear the same as the microsoftdotnet framework, i.e. a curated feed containing all packages\r\n\r\nWe could reduce the code footprint of curated feeds down to just the route names!\r\n\r\nUse this query to fetch distinct route patterns to test after the change:\r\n```\r\nrequests\r\n| where timestamp > ago(90d)\r\n| where name startswith \"GET OData\"\r\n| extend parsedUrl = parse_url(url)\r\n| extend host = tostring(parsedUrl[\"Host\"])\r\n| extend path = tostring(parsedUrl[\"Path\"])\r\n| extend afterHost = substring(url, indexof(url, host) + strlen(host))\r\n| extend afterPath = substring(afterHost, indexof(afterHost, path) + strlen(path))\r\n| extend normalizedPath = replace(@\"\\(Id='?[^',]*'?(,Version='?[^'\\)]*'?)?\\)\", \"(Id='ID',Version='VERSION')\", path)\r\n| summarize sum(itemCount), any(afterHost) by name, normalizedPath\r\n| order by sum_itemCount desc\r\n```"},{"Id":"11070100418","Type":"PullRequestEvent","CreatedAt":"2019-12-12T03:19:57","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7742","RelatedDescription":"Merged pull request \"[Token scanning-Phase 1-5] Email\" (#7742) at NuGet/NuGetGallery","RelatedBody":"Send the email to the customer about the revocation. \r\nLack test coverage and test the recommended ways among Windows/Linux/Mac. \r\n\r\nSend email -> Audit -> Commit to DB\r\nIf anything goes wrong, just click the button and try again. If we send the email at the last step, the email will not be able to send automatically once the DB commit is done. Because the UI only provides the choice to do the revocation if it has not be revoked. \r\n\r\nHandle: https://github.com/nuget/engineering/issues/2831\r\n\r\nSample email: @karann-msft \r\n![image](https://user-images.githubusercontent.com/41028779/70286469-24ddf480-1780-11ea-860e-ea1aa184eae4.png)\r\n\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11079345251","Type":"IssuesEvent","CreatedAt":"2019-12-13T02:39:01","Actor":"SotoiGhost","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8694","RelatedDescription":"Closed issue \"Adding a NuGet package to Visual Studio does not add .targets and .props files of package dependencies\" (#8694) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nIt seems that **.targets** and **.props** files of dependencies packages are not being added correctly to the **project.assets.json** file or to **Foo.csproj.nuget.g.props** and **Foo.csproj.nuget.g.targets** files. These files are added until you explicitly add the NuGet package to the project.\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nThis happens with Visual Studio 2019 16.3 on Windows, Visual Studio for Mac Version 8.3.3 (build 8), also with Mono's MSBuild when using /t:restore the nuget.g.props and nuget.g.targets files do not contain dependencies.\r\n\r\nNuGet version: 5.3.0.6192\r\n\r\ndotnet.exe --version (if appropriate): 3.0.100\r\n\r\nVS version (if appropriate): Visual Studio 2019 16.3 on Windows, Visual Studio for Mac Version 8.3.3 (build 8)\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): macOS Mojave 10.14.6 (18G103)\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nTest case: [AdMobTest.zip](https://github.com/NuGet/Home/files/3725941/AdMobTest.zip)\r\n\r\nSteps to reproduce the error:\r\n\r\n1. Open the test case.\r\n2. Add the `Xamarin.Firebase.iOS.Analytics` package.\r\n3. Build.\r\n\r\nWhen it fails, open the **AdMobTest.csproj.nuget.g.targets** and it will be just 1 import when it should be 3 imports due to dependencies. \r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\n[log.txt](https://github.com/NuGet/Home/files/3726527/log.txt)\r\n\r\nThe workaround for this by now is to add NuGet dependencies explicitly to your project."},{"Id":"11079188188","Type":"IssuesEvent","CreatedAt":"2019-12-13T02:00:20","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8927","RelatedDescription":"Opened issue \"Add more settings tests - completely cover project\\sln level support across products\" (#8927) at NuGet/Home","RelatedBody":"Add more settings tests - completely cover project\\sln level support across products"},{"Id":"11078645161","Type":"IssuesEvent","CreatedAt":"2019-12-12T23:53:14","Actor":"Whiletru3","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8926","RelatedDescription":"Opened issue \"nuspec with dll, native and content in output folder\" (#8926) at NuGet/Home","RelatedBody":"Hello\r\n\r\nI try to create a nuget package with existing dlls and content files\r\n\r\nI have to reference one dll (c++/cli), add some native dlls and copy to output and add one folder with files to output path. I read the nuspec documentation ( https://docs.microsoft.com/en-us/nuget/reference/nuspec ) but it is unclear...\r\n\r\nHere is the folder structure :\r\nbin\\xxx*.dll -> all the binaries c++/cli and native \r\nresources\\*.* -> all the content files\r\n\r\nafter install of nuget package, it should :\r\n- reference xxxnet.dll (c++/cli) in project\r\n- copy all native dlls in output path\r\n- copy the folder resources with all the files in output path\r\n\r\nHere is my current nuspec file :\r\n\r\n```\r\n<?xml version=\"1.0\"?>\r\n<package  xmlns=\"http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd\">\r\n  <metadata>    \r\n    <id>xxx.x64</id>\r\n    <version>15.5.3.3</version>\r\n    <title>xxx toolkit</title>\r\n    <authors>xxx</authors>\r\n    <owners>xxx</owners>\r\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <description>xxx x64 Windows</description>\r\n    <releaseNotes></releaseNotes>\r\n    <copyright>2019</copyright>\r\n    <tags></tags>\r\n    <references>\r\n        <reference file=\"xxxnet.dll\" />\r\n    </references>\r\n    <!-- <contentFiles> -->\r\n        <!-- <files include=\"ressources\\*.*\"  buildAction=\"None\" copyToOutput=\"true\" /> -->\r\n        <!-- <files include=\"bin\\xxx*.dll\" exclude=\"bin\\xxxnet.dll\" flatten=\"true\" buildAction=\"None\" copyToOutput=\"true\" /> -->\r\n    <!-- </contentFiles> -->\r\n  </metadata>\r\n  <files>\r\n    <file src=\"bin\\xxxnet.dll\" target=\"lib\\any\" />\r\n    <file src=\"resources\\*.*\"  target=\"content\\resources\"  />\r\n    <file src=\"bin\\xxx*.dll\" exclude=\"bin\\xxxnet.dll\" target=\"content\" />\r\n  </files>\r\n</package>\r\n```\r\nI already tried contentFiles, references but it doesn't work and now i'm lost.\r\nAny example whould be great\r\n\r\nThanks"},{"Id":"11078076368","Type":"IssuesEvent","CreatedAt":"2019-12-12T22:08:02","Actor":"bmajik","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8925","RelatedDescription":"Opened issue \"vs/nuget/nugetaction telemetry doesn't log info about currently installed packages\" (#8925) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): VS UI\r\n\r\nNuGet version (x.x.x.xxx): 5.5.0.0\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate): Dev16\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Win10 1909\r\n\r\nWorked before? If so, with which NuGet version: No\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Use VS UI to add/remove/update packages from either a dotnet core or bigdotnet project\r\n\r\n2. Use telemetry monitor to watch for vs/nuget/nugetaction event\r\n\r\nExpected: a property of some kind on the event showing richer information about the packages already installed when the user chose to modify the installed packageset somehow.  Specificallly, hashes of the package names and package versions. \r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nAny project will show the issue\r\n\r\n"},{"Id":"11077116022","Type":"IssuesEvent","CreatedAt":"2019-12-12T19:50:31","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8924","RelatedDescription":"Opened issue \"Improving search by providing package recommendations\" (#8924) at NuGet/Home","RelatedBody":"Deliver spec to explore business/technical options.\nClient side and/or Server side?\netc..."},{"Id":"11076283515","Type":"IssuesEvent","CreatedAt":"2019-12-12T17:57:04","Actor":"a-einstein","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8923","RelatedDescription":"Opened issue \"Migration to PackageReference fails on GUI test NuGets\" (#8923) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: VS UI.\r\n'Migrate packages.config to PackageReference' on a packages.config of a Test project.\r\n\r\nNuGet version: 5.4.0\r\n\r\ndotnet.exe --version: 4.8\r\n\r\nVS version: 16.4.1.\r\n\r\nOS version: Windows 10 version 1909 build 18363.476\r\n\r\nWorked before? If so, with which NuGet version:\r\nYes, on other projects.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n0. I have this package file.\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<packages>\r\n  <package id=\"Appium.WebDriver\" version=\"4.1.1\" targetFramework=\"net48\" />\r\n  <package id=\"Castle.Core\" version=\"4.4.0\" targetFramework=\"net472\" />\r\n  <package id=\"DotNetSeleniumExtras.PageObjects\" version=\"3.11.0\" targetFramework=\"net472\" />\r\n  <package id=\"Microsoft.CodeAnalysis.FxCopAnalyzers\" version=\"2.9.8\" targetFramework=\"net48\" developmentDependency=\"true\" />\r\n  <package id=\"Microsoft.CodeAnalysis.VersionCheckAnalyzer\" version=\"2.9.8\" targetFramework=\"net48\" developmentDependency=\"true\" />\r\n  <package id=\"Microsoft.CodeQuality.Analyzers\" version=\"2.9.8\" targetFramework=\"net48\" developmentDependency=\"true\" />\r\n  <package id=\"Microsoft.NetCore.Analyzers\" version=\"2.9.8\" targetFramework=\"net48\" developmentDependency=\"true\" />\r\n  <package id=\"Microsoft.NetFramework.Analyzers\" version=\"2.9.8\" targetFramework=\"net48\" developmentDependency=\"true\" />\r\n  <package id=\"Newtonsoft.Json\" version=\"12.0.3\" targetFramework=\"net48\" />\r\n  <package id=\"Selenium.Support\" version=\"3.141.0\" targetFramework=\"net472\" />\r\n  <package id=\"Selenium.WebDriver\" version=\"3.141.0\" targetFramework=\"net472\" />\r\n  <package id=\"VS.QualityTools.UnitTestFramework\" version=\"15.0.27323.2\" targetFramework=\"net472\" />\r\n</packages>\r\n```\r\n1. Call the migrator. I get a good analysis as it seems.\r\n\r\n2. Apply. \r\n- I do not get a report. \r\n- The package files disappears.\r\n- The difference on the project file shows only removals.\r\n- Project does not build.\r\n\r\n\r\n### Sample Project\r\nVery helpful if you can zip a project and paste into this issue!\r\nDid not succeed.\r\n\r\n\r\n\r\n"},{"Id":"11075050178","Type":"IssuesEvent","CreatedAt":"2019-12-12T15:34:05","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8916","RelatedDescription":"Closed issue \"Build:  environment variable values are truncated\" (#8916) at NuGet/Home","RelatedBody":"Build tasks [like this](https://github.com/NuGet/NuGet.Client/blob/342da27fbd736f79620fd99cf8a9a2671adba75d/build/vsts_build.yaml#L131) print out environment variables, but the longer environment variable values are truncated."},{"Id":"11071100985","Type":"IssuesEvent","CreatedAt":"2019-12-12T07:11:08","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8885","RelatedDescription":"Closed issue \"Apex test creating Netstandard2.0 project will fail without NuGetFallbackFolder\" (#8885) at NuGet/Home","RelatedBody":"According to [doc](https://docs.microsoft.com/en-us/dotnet/core/build/distribution-packaging#disk-layout), NuGetFallbackFolder is only used prior to .NET Core 3.0.\r\nSome of our Apex tests create netstandard2.0 project and then restore with empty feed in NuGet.Config.  When there is no lower version(<3.0) .NET Core on our CI machine, those tests will fail, for Netstandard.Library (and it's dependency microsoft.netcore.platforms) could not be resolved from NuGetFallbackFolder.\r\n\r\n\r\n"},{"Id":"11070810354","Type":"IssuesEvent","CreatedAt":"2019-12-12T06:14:33","Actor":"LightVolk","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8922","RelatedDescription":"Opened issue \"How to upgrade local repository from .net core 2.2 to .net core 3.*?\" (#8922) at NuGet/Home","RelatedBody":"I have local nuget repository wich contains over 800 packages. Version of .net core is 2.2.\r\nI have script that can push existing packages into this repo. Packages must be at my local computer.\r\n\r\nSo, how can i download all .net core 3.* sdk packages to my computer? If so, i can easy push all of this packages into my local repository.\r\n\r\nThank you!"},{"Id":"11069566790","Type":"IssuesEvent","CreatedAt":"2019-12-12T01:18:39","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8921","RelatedDescription":"Opened issue \"18 tests in TrustedSignerActionsProviderTests are disabled for netcore, we need to enable them.\" (#8921) at NuGet/Home","RelatedBody":"18 tests in TrustedSignerActionsProviderTests are disabled for netcore.\r\nWe need to enable the test and the APIs it depends on, for netcoreapp5.0, to make xplat verification/signing have a better coverage of tests."},{"Id":"11069553568","Type":"IssuesEvent","CreatedAt":"2019-12-12T01:15:36","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8920","RelatedDescription":"Opened issue \"RestoreCommand_PathTooLongException is disabled for netcore, we need to enable it\" (#8920) at NuGet/Home","RelatedBody":"RestoreCommand_PathTooLongException is disabled for netcore.\r\nWe need to enable the test.\r\n\r\nThere's an related issue: https://github.com/NuGet/Home/issues/7588"},{"Id":"11069196363","Type":"IssuesEvent","CreatedAt":"2019-12-11T23:57:19","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8919","RelatedDescription":"Opened issue \"TimestampProviderTests is disabled for netcore, we need to enable it.\" (#8919) at NuGet/Home","RelatedBody":"TimestampProviderTests is disabled for netcore.\r\nWe need to enable the test and the APIs it depends on, for netcoreapp5.0, to make xplat verification/signing have a better coverage of tests."},{"Id":"11069188771","Type":"IssuesEvent","CreatedAt":"2019-12-11T23:55:38","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8918","RelatedDescription":"Opened issue \"SignedPackageIntegrityVerificationTests is disabled for netcore, we need to enable it.\" (#8918) at NuGet/Home","RelatedBody":"SignedPackageIntegrityVerificationTests is disabled for netcore. \r\nWe need to enable the test and the APIs it depends on, for netcoreapp5.0, to make xplat verification/signing have a better coverage of tests."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package restoâ€¦ https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":9,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We areâ€¦ https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2019-12-13T05:30:45.0409222Z","RunDurationInMilliseconds":2249}