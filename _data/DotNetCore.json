{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework October 2018 Preview of Quality Rollup","PublishedOn":"2018-10-18T20:44:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the October 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. CLR Updated Japanese dates that...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/18/net-framework-october-2018-preview-of-quality-rollup/","RawContent":null},{"Title":"Announcing .NET Core 2.2 Preview 3","PublishedOn":"2018-10-18T01:03:01+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.2 Preview 3. We have made more improvements to the overall release that we would love to get your feedback on, either in the comments or at dotnet/core #2004....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/17/announcing-net-core-2-2-preview-3/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.2 Preview 3","PublishedOn":"2018-10-17T20:10:48+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today we are making EF Core 2.2 Preview 3 available, together with a new preview of our data provider for Cosmos DB and updated spatial extensions for various providers. Preview 3 is going to be the...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/17/announcing-entity-framework-core-2-2-preview-3/","RawContent":null},{"Title":"Automating Release Notes with Azure Functions","PublishedOn":"2018-10-16T15:00:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We can all agree that tracking the progress of a project enhances productivity and is an effective way to keep everyone involved of its progress. When it comes to managing your project in Azure DevOps...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/16/automating-release-notes-with-azure-functions/","RawContent":null},{"Title":"Guidance for library authors","PublishedOn":"2018-10-15T15:00:05+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We&#8217;ve just published our first cut of the .NET Library Guidance. It&#8217;s brand new set of articles for .NET developers who want to create high-quality libraries for .NET. The guidance...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/15/guidance-for-library-authors/","RawContent":null},{"Title":"Using .NET Hardware Intrinsics API to accelerate machine learning scenarios","PublishedOn":"2018-10-10T16:00:03+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"This week&#8217;s blog post is by Brian Lui, one of our summer interns on the .NET team, who&#8217;s been hard at work. Over to Brian: Hello everyone! This summer I interned in the .NET team, working...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/10/using-net-hardware-intrinsics-api-to-accelerate-machine-learning-scenarios/","RawContent":null},{"Title":".NET Core October 2018 Update – NET Core 1.0 and 1.1","PublishedOn":"2018-10-09T23:19:23+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core October 2018 Update for 1.0 and 1.1. This update includes .NET Core 1.0.13, 1.1.10 and .NET Core SDK 1.1.11. Security CVE-2018-8292: .NET Core Information...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/","RawContent":null},{"Title":".NET Framework October 2018 Security and Quality Rollup","PublishedOn":"2018-10-09T23:09:44+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we released the October 2018 Security and Quality Rollup. Security No new security fixes.  See .NET Framework September 2018 Security and Quality Rollup for the latest security update. Quality...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-framework-october-2018-security-and-quality-rollup/","RawContent":null},{"Title":"Announcing ML.NET 0.6 (Machine Learning .NET)","PublishedOn":"2018-10-09T00:35:09+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today we’re announcing our latest monthly release: ML.NET 0.6! ML.NET is a cross-platform, open source machine learning framework for .NET developers. We want to enable every .NET developer to train...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/08/announcing-ml-net-0-6-machine-learning-net/","RawContent":null},{"Title":"Update on .NET Core 3.0 and .NET Framework 4.8","PublishedOn":"2018-10-04T16:29:57+00:00","CommentsCount":152,"FacebookCount":0,"Summary":"In May, we announced .NET Core 3.0, the next major version of .NET Core that adds support for building desktop applications using WinForms, WPF, and Entity Framework 6. We also announced some exciting...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/04/update-on-net-core-3-0-and-net-framework-4-8/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8341294365","Type":"IssuesEvent","CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Opened issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112) at dotnet/foundation","RelatedBody":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n"},{"Id":"8203056810","Type":"IssuesEvent","CreatedAt":"2018-09-02T16:49:34","Actor":"adamralph","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/111","RelatedDescription":"Opened issue \"Sourcelink location is confusing\" (#111) at dotnet/home","RelatedBody":"The README has link under the \"Cameron Taggart\" section pointing to https://github.com/ctaggart/SourceLink but the project now seems to live under the \"dotnet\" org in https://github.com/dotnet/sourcelink/ which suggests the link should be changed to that, and moved under the \"Microsoft\" section."},{"Id":"8173033759","Type":"PullRequestEvent","CreatedAt":"2018-08-27T16:21:56","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/110","RelatedDescription":"Merged pull request \"Fix - add missing comma\" (#110) at dotnet/home","RelatedBody":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix."},{"Id":"8163761410","Type":"PullRequestEvent","CreatedAt":"2018-08-24T15:35:46","Actor":"jkonicki","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/110","RelatedDescription":"Opened pull request \"Fix - add missing comma\" (#110) at dotnet/home","RelatedBody":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix."},{"Id":"8160074991","Type":"PullRequestEvent","CreatedAt":"2018-08-23T23:10:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/108","RelatedDescription":"Merged pull request \"Fix errors in projects.json\" (#108) at dotnet/home","RelatedBody":""},{"Id":"8160071932","Type":"PullRequestEvent","CreatedAt":"2018-08-23T23:09:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/109","RelatedDescription":"Merged pull request \"Add Steeltoe to the project listing\" (#109) at dotnet/home","RelatedBody":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks."},{"Id":"8159331036","Type":"PullRequestEvent","CreatedAt":"2018-08-23T20:13:18","Actor":"jkonicki","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/109","RelatedDescription":"Opened pull request \"Add Steeltoe to the project listing\" (#109) at dotnet/home","RelatedBody":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks."},{"Id":"8147233541","Type":"PullRequestEvent","CreatedAt":"2018-08-21T22:39:06","Actor":"anthonychu","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/108","RelatedDescription":"Opened pull request \"Fix errors in projects.json\" (#108) at dotnet/home","RelatedBody":""},{"Id":"8131503388","Type":"PullRequestEvent","CreatedAt":"2018-08-17T23:19:54","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/105","RelatedDescription":"Merged pull request \"Add DLR/IronPython2/IronPython3\" (#105) at dotnet/home","RelatedBody":"Add DLR/IronPython2/IronPython3 to project list."},{"Id":"8075734624","Type":"IssuesEvent","CreatedAt":"2018-08-07T07:06:40","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/home/issues/104","RelatedDescription":"Closed issue \"About still mentions CodePlex\" (#104) at dotnet/home","RelatedBody":"About still mentions CodePlex which is now in archive mode.\r\n\r\n![image](https://user-images.githubusercontent.com/4345663/42086259-e0b7d008-7b92-11e8-96c9-02ee61ddc457.png)\r\n\r\nIs this something that I can PR?"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"8394268768","Type":"IssuesEvent","CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Opened issue \"October 2018 .NET Updates\" (#89) at dotnet/announcements","RelatedBody":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)"},{"Id":"8394092294","Type":"IssuesEvent","CreatedAt":"2018-10-09T22:51:19","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/> **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n"},{"Id":"8377166566","Type":"IssuesEvent","CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Opened issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87) at dotnet/announcements","RelatedBody":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```"},{"Id":"8362210504","Type":"IssuesEvent","CreatedAt":"2018-10-03T16:11:10","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Opened issue \".NET Core 2.0 has reached end of life\" (#86) at dotnet/announcements","RelatedBody":"On October 1, 2018 .NET Core 2.0 reached end of life. This means the version channel is no longer supported and updates will no longer be provided. We recommend moving to a supported release. See our [support policy](https://www.microsoft.com/net/platform/support-policy) for more details.\r\n\r\nWe understand there will be needs to access end of life versions so downloads and Docker images will remain available. \r\n\r\n* 2.0 downloads will still be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). You will see notifications on the site indicating the end of life status. \r\n* 2.0 links have been removed from the [microsoft/donet Docker page](https://hub.docker.com/r/microsoft/dotnet/) though images will remain on the system.\r\n\r\n"},{"Id":"8279098039","Type":"IssuesEvent","CreatedAt":"2018-09-18T01:10:24","Actor":"spshant","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Opened issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85) at dotnet/announcements","RelatedBody":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8446672937","Type":"IssuesEvent","CreatedAt":"2018-10-19T04:02:58","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/4465","RelatedDescription":"Closed issue \"ARM64: Funclet calling convention\" (#4465) at dotnet/coreclr","RelatedBody":"The funclet argument order used on x64 - first arg is establisher frame first, exception object second - allows for more compatibility between the various runtimes. We should change ARM64 to use the same order (it is passing the exception object first currently).\n\r\ncategory:cq\r\ntheme:runtime\r\nskill-level:intermediate\r\ncost:small"},{"Id":"8446608753","Type":"PullRequestEvent","CreatedAt":"2018-10-19T03:38:26","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20481","RelatedDescription":"Merged pull request \"Delete redundant framework API tests\" (#20481) at dotnet/coreclr","RelatedBody":"Contributes to https://github.com/dotnet/coreclr/issues/12782"},{"Id":"8446396775","Type":"IssuesEvent","CreatedAt":"2018-10-19T02:23:34","Actor":"ArtBlnd","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/20486","RelatedDescription":"Opened issue \"Future support for super-scalar, auto vectorization.\" (#20486) at dotnet/coreclr","RelatedBody":"Current RyuJIT does not support local variable duplication based on super-scalar. or auto vectorization.\r\nIf you have is any discussion or informations. Please feel free to write here. \r\n\r\nTo-do Lists.\r\n1. local variable duplication support for super-scalar if loop is simple enough. and also with full unsafe ALUs.\r\n2. Implement more cases for estimate range checks. make it unsafe ALUs.\r\n3. Implement auto vectorization for unrolled Vector<T> first. and also for unrolled normal ALUs after.\r\n\r\n\r\n"},{"Id":"8446240163","Type":"PullRequestEvent","CreatedAt":"2018-10-19T01:28:22","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20485","RelatedDescription":"Opened pull request \"[WIP] Fix DevDiv issue with JitStressRegs=0x3 on arm32.\" (#20485) at dotnet/coreclr","RelatedBody":"Fixes DevDiv_707061."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8446676261","Type":"PullRequestEvent","CreatedAt":"2018-10-19T04:04:20","Actor":"KevinRansom","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10199","RelatedDescription":"Opened pull request \"Update F# to match VS2017.9 rtm release of F# tools\" (#10199) at dotnet/cli","RelatedBody":"Update to match VS2017.9 F# Tools.\r\n\r\nThe VS insertion is approved:   565dc659 Merged PR 146806: F# 'dev15.9/20181017.6' insertion into rel/d15.9...\r\n\r\n/cc:  @livarcocc, @nguerrera \r\n\r\n"},{"Id":"8445997378","Type":"PullRequestEvent","CreatedAt":"2018-10-19T00:01:35","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10198","RelatedDescription":"Opened pull request \"Merge release/2.2.1xx to release/2.2.2xx\" (#10198) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8445493058","Type":"IssuesEvent","CreatedAt":"2018-10-18T21:42:13","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10197","RelatedDescription":"Closed issue \"support --interactive credential usage for dotnet sln add when adding csproj's with custom build sdks\" (#10197) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\ncreate a custom build sdk\r\npublish the nupkg to an authenticated feed\r\nreference the sdk/ver in a csproj\r\nadd the csproj to a sln using \"dotnet sln add <csprojpath>\r\n\r\n## Expected  behavior\r\ncredentials are used, or --interactive can be supplied, to download the sdk nupkg\r\n\r\n## Actual behavior\r\nerror output stating sdk can't be found\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"8445379696","Type":"PullRequestEvent","CreatedAt":"2018-10-18T21:18:39","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10168","RelatedDescription":"Merged pull request \"Fix typos in cli-ux-guidelines.md\" (#10168) at dotnet/cli","RelatedBody":"Fix some types in cli-ux-guidelines.md\r\n\r\nskipciplease\r\n"},{"Id":"8445344602","Type":"IssuesEvent","CreatedAt":"2018-10-18T21:11:33","Actor":"karkatic","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10197","RelatedDescription":"Opened issue \"support --interactive credential usage for dotnet sln add when adding csproj's with custom build sdks\" (#10197) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\ncreate a custom build sdk\r\npublish the nupkg to an authenticated feed\r\nreference the sdk/ver in a csproj\r\nadd the csproj to a sln using \"dotnet sln add <csprojpath>\r\n\r\n## Expected  behavior\r\ncredentials are used, or --interactive can be supplied, to download the sdk nupkg\r\n\r\n## Actual behavior\r\nerror output stating sdk can't be found\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"8445242759","Type":"PullRequestEvent","CreatedAt":"2018-10-18T20:52:31","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/cli/pull/10191","RelatedDescription":null,"RelatedBody":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8445242624","Type":"PullRequestEvent","CreatedAt":"2018-10-18T20:52:30","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/10191","RelatedDescription":"Closed pull request \"Merge release/2.2.2xx to master\" (#10191) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8445200101","Type":"PullRequestEvent","CreatedAt":"2018-10-18T20:44:47","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10190","RelatedDescription":"Merged pull request \"Merge release/2.2.1xx to release/2.2.2xx\" (#10190) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8445188529","Type":"PullRequestEvent","CreatedAt":"2018-10-18T20:42:57","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10189","RelatedDescription":"Merged pull request \"Merge release/2.1.5xx to release/2.2.1xx\" (#10189) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8445718680","Type":"PullRequestEvent","CreatedAt":"2018-10-18T22:36:08","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/907","RelatedDescription":"Merged pull request \"Add IsRefLikeAttribute and mark types accordingly\" (#907) at dotnet/standard","RelatedBody":"Extracted from https://github.com/dotnet/standard/pull/819."},{"Id":"8445466749","Type":"PullRequestEvent","CreatedAt":"2018-10-18T21:36:35","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/906","RelatedDescription":"Merged pull request \"Add IsReadOnlyAtrribute and mark types accordingly\" (#906) at dotnet/standard","RelatedBody":"Extracted from https://github.com/dotnet/standard/pull/819."}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8446664125","Type":"IssuesEvent","CreatedAt":"2018-10-19T03:59:41","Actor":"donnyv","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/32608","RelatedDescription":"Closed issue \"Issue with sending commands using process.StandardInput.Write on MacOS\" (#32608) at dotnet/corefx","RelatedBody":"I'm having a weird problem where once a Terminal process is launched it will not accept anymore commands.\r\nhttps://stackoverflow.com/questions/52638733/process-standardinput-write-is-not-writing-to-the-terminal-on-macos-using-net-c"},{"Id":"8446625740","Type":"PullRequestEvent","CreatedAt":"2018-10-19T03:44:53","Actor":"ericstj","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/32901","RelatedDescription":"Merged pull request \"Switch from BuildTools packaging to Arcade packaging\" (#32901) at dotnet/corefx","RelatedBody":""},{"Id":"8446615705","Type":"PullRequestEvent","CreatedAt":"2018-10-19T03:41:06","Actor":"safern","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/32860","RelatedDescription":"Merged pull request \"ToolboxItems_port_to_Primitives\" (#32860) at dotnet/corefx","RelatedBody":"ToolboxItem, ToolboxUser types are ported to Corefx. These types are required for Winforms design assemblies."},{"Id":"8446594718","Type":"IssuesEvent","CreatedAt":"2018-10-19T03:33:04","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/31181","RelatedDescription":"Reopened issue \"Port remainder of Microsoft.VisualBasic\" (#31181) at dotnet/corefx","RelatedBody":"This tracks porting to .NET Core the rest of the types in Microsoft.VisualBasic, now that we've published the original sources.\r\n\r\nContributions are welcome! The porting process is essentially\r\n\r\n1. Pick some types.\r\n1. Get the original .NET Framework code from [referencesource](https://github.com/Microsoft/referencesource/tree/master/Microsoft.VisualBasic)\r\n1. Add it to the [src project](https://github.com/dotnet/corefx/blob/master/src/Microsoft.VisualBasic/src/Microsoft.VisualBasic.vbproj), make it compile. Fix style to match style guidelines, update license headers to match existing code.\r\n1. Add the API to the [ref](https://github.com/dotnet/corefx/blob/master/src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs). [Here's an example ](https://gist.github.com/danmosemsft/88da57da7f11a9a3345abb5ec508d5e7) of a complete ref generated from the .NET Framework binary.\r\n1. Write tests, add to the [tests project](https://github.com/dotnet/corefx/blob/master/src/Microsoft.VisualBasic/tests/Microsoft.VisualBasic.Tests.csproj), and make them pass.\r\n1. Put up a PR then we can check the type off.\r\n\r\n[Here](https://github.com/dotnet/corefx/commit/5a6f230836006184c923b8c0e38631225c172e33) is an example change that ported some more of Strings.\r\n\r\nTo track progress, here is a list of classes/structs that aren't in .NET Core (or are present, but missing some members). I am not listing the members nor any enums: that detail is here: https://gist.github.com/danmosemsft/d34ec1055c4c23aefcd047089538d3a1\r\n \r\n**namespace Microsoft.VisualBasic**\r\n- [ ] Collection\r\n- [x] ComClassAttribute\r\n- [ ] Constants\r\n- [ ] ControlChars\r\n- [ ] Conversion\r\n- [ ] DateAndTime\r\n- [ ] ErrObject\r\n- [ ] FileSystem\r\n- [ ] Financial\r\n- [ ] Globals\r\n- [x] HideModuleNameAttribute\r\n- [x] Information\r\n- [ ] Interaction  (*)\r\n- [x] MyGroupCollectionAttribute\r\n- [ ] SpcInfo\r\n- [ ] Strings\r\n- [ ] TabInfo\r\n- [x] VBFixedArrayAttribute\r\n- [ ] VBFixedStringAttribute\r\n- [ ] VBMath\r\n\r\n**namespace Microsoft.VisualBasic.ApplicationServices**\r\n- [ ] ApplicationBase\r\n- [ ] AssemblyInfo\r\n- [ ] BuiltInRoleConverter\r\n- [ ] CantStartSingleInstanceException\r\n- [ ] ConsoleApplicationBase\r\n- [ ] NoStartupFormException\r\n- [x] StartupEventArgs\r\n- [x] StartupNextInstanceEventArgs\r\n- [x] UnhandledExceptionEventArgs\r\n- [ ] User\r\n- [ ] WebUser\r\n- [ ] WindowsFormsApplicationBase (*)\r\n \r\n**namespace Microsoft.VisualBasic.CompilerServices**\r\n- [x] BooleanType\r\n- [ ] ByteType\r\n- [ ] CharArrayType\r\n- [ ] CharType\r\n- [ ] Conversions\r\n- [ ] DateType\r\n- [x] DecimalType\r\n- [x] DesignerGeneratedAttribute\r\n- [x] DoubleType\r\n- [ ] ExceptionUtils\r\n- [ ] FlowControl\r\n- [ ] HostServices\r\n- [ ] IncompleteInitialization\r\n- [ ] IntegerType\r\n- [ ] InternalErrorException\r\n- [ ] LateBinding\r\n- [ ] LikeOperator\r\n- [ ] LongType\r\n- [ ] NewLateBinding\r\n- [ ] ObjectFlowControl\r\n- [ ] ForLoopControl\r\n- [ ] ObjectType\r\n- [ ] Operators\r\n- [x] OptionCompareAttribute\r\n- [x] OptionTextAttribute\r\n- [ ] ProjectData\r\n- [ ] ShortType\r\n- [ ] SingleType\r\n- [x] StandardModuleAttribute\r\n- [ ] StaticLocalInitFlag\r\n- [ ] StringType\r\n- [ ] Utils\r\n- [x] Versioned\r\n\r\n**namespace Microsoft.VisualBasic.Devices**\r\n- [ ] Audio (*)\r\n- [ ] Clock\r\n- [ ] Computer\r\n- [ ] ComputerInfo\r\n- [ ] Keyboard (*)\r\n- [ ] Mouse (*)\r\n- [ ] Network (* - progress dialog)\r\n- [x] NetworkAvailableEventArgs\r\n- [ ] Ports\r\n- [ ] ServerComputer\r\n\r\n**namespace Microsoft.VisualBasic.FileIO**\r\n- [ ] FileSystem\r\n- [ ] MalformedLineException\r\n- [ ] SpecialDirectories\r\n- [ ] TextFieldParser\r\n\r\n**namespace Microsoft.VisualBasic.Logging**\r\n- [ ] AspLog\r\n- [ ] FileLogTraceListener (*)\r\n- [ ] Log\r\n\r\n**namespace Microsoft.VisualBasic.MyServices**\r\n- [ ] ClipboardProxy (*)\r\n- [ ] FileSystemProxy\r\n- [ ] RegistryProxy\r\n- [ ] SpecialDirectoriesProxy\r\n\r\n**namespace Microsoft.VisualBasic.MyServices.Internal**\r\n- [ ] ContextValue<T>\r\n\r\nA few types may not be portable yet because of dependency issues - either they depend on something that isn't quite yet in .NET Core (principally Windows Forms) or that is, but is in a higher dependency level (Windows Forms again). I have marked some of these with (*). This problem can be solved but I suggest that we skip these for the moment.\r\n\r\nccing folks who have expressed interest in the past: this is now unblocked.\r\n@KathleenDollard @OmarTawfik @karelz @jaredpar \r\n@amshekar @bbowyersmyth @iainnicol @EdwinEngelen @kaiukdevelopment @ocdtrekkie @ericmutter @MohammadHamdyGhanem"},{"Id":"8446594035","Type":"IssuesEvent","CreatedAt":"2018-10-19T03:32:48","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/31181","RelatedDescription":"Closed issue \"Port remainder of Microsoft.VisualBasic\" (#31181) at dotnet/corefx","RelatedBody":"This tracks porting to .NET Core the rest of the types in Microsoft.VisualBasic, now that we've published the original sources.\r\n\r\nContributions are welcome! The porting process is essentially\r\n\r\n1. Pick some types.\r\n1. Get the original .NET Framework code from [referencesource](https://github.com/Microsoft/referencesource/tree/master/Microsoft.VisualBasic)\r\n1. Add it to the [src project](https://github.com/dotnet/corefx/blob/master/src/Microsoft.VisualBasic/src/Microsoft.VisualBasic.vbproj), make it compile. Fix style to match style guidelines, update license headers to match existing code.\r\n1. Add the API to the [ref](https://github.com/dotnet/corefx/blob/master/src/Microsoft.VisualBasic/ref/Microsoft.VisualBasic.cs). [Here's an example ](https://gist.github.com/danmosemsft/88da57da7f11a9a3345abb5ec508d5e7) of a complete ref generated from the .NET Framework binary.\r\n1. Write tests, add to the [tests project](https://github.com/dotnet/corefx/blob/master/src/Microsoft.VisualBasic/tests/Microsoft.VisualBasic.Tests.csproj), and make them pass.\r\n1. Put up a PR then we can check the type off.\r\n\r\n[Here](https://github.com/dotnet/corefx/commit/5a6f230836006184c923b8c0e38631225c172e33) is an example change that ported some more of Strings.\r\n\r\nTo track progress, here is a list of classes/structs that aren't in .NET Core (or are present, but missing some members). I am not listing the members nor any enums: that detail is here: https://gist.github.com/danmosemsft/d34ec1055c4c23aefcd047089538d3a1\r\n \r\n**namespace Microsoft.VisualBasic**\r\n- [ ] Collection\r\n- [x] ComClassAttribute\r\n- [ ] Constants\r\n- [ ] ControlChars\r\n- [ ] Conversion\r\n- [ ] DateAndTime\r\n- [ ] ErrObject\r\n- [ ] FileSystem\r\n- [ ] Financial\r\n- [ ] Globals\r\n- [x] HideModuleNameAttribute\r\n- [x] Information\r\n- [ ] Interaction  (*)\r\n- [x] MyGroupCollectionAttribute\r\n- [ ] SpcInfo\r\n- [ ] Strings\r\n- [ ] TabInfo\r\n- [x] VBFixedArrayAttribute\r\n- [ ] VBFixedStringAttribute\r\n- [ ] VBMath\r\n\r\n**namespace Microsoft.VisualBasic.ApplicationServices**\r\n- [ ] ApplicationBase\r\n- [ ] AssemblyInfo\r\n- [ ] BuiltInRoleConverter\r\n- [ ] CantStartSingleInstanceException\r\n- [ ] ConsoleApplicationBase\r\n- [ ] NoStartupFormException\r\n- [x] StartupEventArgs\r\n- [x] StartupNextInstanceEventArgs\r\n- [x] UnhandledExceptionEventArgs\r\n- [ ] User\r\n- [ ] WebUser\r\n- [ ] WindowsFormsApplicationBase (*)\r\n \r\n**namespace Microsoft.VisualBasic.CompilerServices**\r\n- [x] BooleanType\r\n- [ ] ByteType\r\n- [ ] CharArrayType\r\n- [ ] CharType\r\n- [ ] Conversions\r\n- [ ] DateType\r\n- [x] DecimalType\r\n- [x] DesignerGeneratedAttribute\r\n- [x] DoubleType\r\n- [ ] ExceptionUtils\r\n- [ ] FlowControl\r\n- [ ] HostServices\r\n- [ ] IncompleteInitialization\r\n- [ ] IntegerType\r\n- [ ] InternalErrorException\r\n- [ ] LateBinding\r\n- [ ] LikeOperator\r\n- [ ] LongType\r\n- [ ] NewLateBinding\r\n- [ ] ObjectFlowControl\r\n- [ ] ForLoopControl\r\n- [ ] ObjectType\r\n- [ ] Operators\r\n- [x] OptionCompareAttribute\r\n- [x] OptionTextAttribute\r\n- [ ] ProjectData\r\n- [ ] ShortType\r\n- [ ] SingleType\r\n- [x] StandardModuleAttribute\r\n- [ ] StaticLocalInitFlag\r\n- [ ] StringType\r\n- [ ] Utils\r\n- [x] Versioned\r\n\r\n**namespace Microsoft.VisualBasic.Devices**\r\n- [ ] Audio (*)\r\n- [ ] Clock\r\n- [ ] Computer\r\n- [ ] ComputerInfo\r\n- [ ] Keyboard (*)\r\n- [ ] Mouse (*)\r\n- [ ] Network (* - progress dialog)\r\n- [x] NetworkAvailableEventArgs\r\n- [ ] Ports\r\n- [ ] ServerComputer\r\n\r\n**namespace Microsoft.VisualBasic.FileIO**\r\n- [ ] FileSystem\r\n- [ ] MalformedLineException\r\n- [ ] SpecialDirectories\r\n- [ ] TextFieldParser\r\n\r\n**namespace Microsoft.VisualBasic.Logging**\r\n- [ ] AspLog\r\n- [ ] FileLogTraceListener (*)\r\n- [ ] Log\r\n\r\n**namespace Microsoft.VisualBasic.MyServices**\r\n- [ ] ClipboardProxy (*)\r\n- [ ] FileSystemProxy\r\n- [ ] RegistryProxy\r\n- [ ] SpecialDirectoriesProxy\r\n\r\n**namespace Microsoft.VisualBasic.MyServices.Internal**\r\n- [ ] ContextValue<T>\r\n\r\nA few types may not be portable yet because of dependency issues - either they depend on something that isn't quite yet in .NET Core (principally Windows Forms) or that is, but is in a higher dependency level (Windows Forms again). I have marked some of these with (*). This problem can be solved but I suggest that we skip these for the moment.\r\n\r\nccing folks who have expressed interest in the past: this is now unblocked.\r\n@KathleenDollard @OmarTawfik @karelz @jaredpar \r\n@amshekar @bbowyersmyth @iainnicol @EdwinEngelen @kaiukdevelopment @ocdtrekkie @ericmutter @MohammadHamdyGhanem"},{"Id":"8446462130","Type":"PullRequestEvent","CreatedAt":"2018-10-19T02:45:43","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/32906","RelatedDescription":"Opened pull request \"Update System.Runtime.InteropServices owners\" (#32906) at dotnet/corefx","RelatedBody":""},{"Id":"8446386386","Type":"IssuesEvent","CreatedAt":"2018-10-19T02:19:53","Actor":"terrajobst","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/32905","RelatedDescription":"Opened issue \"Should `Memory<T>` implement `IEqutable<T>`?\" (#32905) at dotnet/corefx","RelatedBody":"In the [.NET Standard]() review of `Span<T>` @marek-safar wrote:\r\n\r\n> Why it does not implement `IEquatable<T>` ?\r\n> ...\r\n> Well, if it's hard why do you have `public bool Equals(System.Memory<T> other)` ? I think it'd make sense to have the interface here if the implementation is there too.\r\n\r\nIt seems us providing a strongly typed `Equals` method but not implementing `IEquatable<T>` seems odd.\r\n\r\n@KrzysztofCwalina @stephentoub @GrabYourPitchforks @jkotas"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"8446881431","Type":"PullRequestEvent","CreatedAt":"2018-10-19T05:29:30","Actor":"jasonmalinowski","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/26931","RelatedDescription":"Merged pull request \"Free-threaded project system APIs\" (#26931) at dotnet/roslyn","RelatedBody":"This produces a new free-threaded, well factored API for adding projects to the VisualStudioWorkspace. The core type is the VisualStudioProject which is a free-threaded API that you can use to push information over. CSharpProjectShim, VisualBasicProject and CPSProject each have an instance of VisualStudioProject that they push things through.\r\n\r\nThis also introduces a proper batching API: any consumer of VisualStudioProject may call CreateBatchScope() which means all future operations are put a single batch that will be applied at once in a single workspace change. Multiple calls to CreateBatchScope just stack: it only applies when all scopes are closed. You could think of the behavior as roughly analogous to an SQL transaction, except with no rollback capabilities. A batch is only per-project: a batch started on one project doesn't impact another project. There is no concept of a cross-project batch, short of just starting two independent batches and completing them at the same time (which creates two workspace changes.)\r\n\r\nThe inheritance model here is now smaller. CSharpProjectShim and VisualBasicProject inherit from AbstractLegacyProject, but that's it. CPSProject now inherits nothing, and AbstractProject is here purely for TypeScript back-compat until they're moved onto the new APIs. The expectation is F# and TypeScript both move to VisualStudioProject, which we make public in some form. Then AbstractProject will go away.\r\n\r\nAbstractLegacyProject (which is used for csproj and vbproj) still is tied to the UI thread, but the ties should now be more limited and better understood. The primary tangles right now are having to fetch a few things from IVsHierarchies, namely some project properties and the folder structure. The plan for now is AbstractLegacyProject-derived projects will still be called on the UI thread, and we'll determine a new API to remove those remaining issues for them (or just move them onto VisualStudioProject.)\r\n\r\nThe threading guarantee given to all consumers of VisualStudioProject is it can be called from any thread, and no synchronous calls to the UI thread may be done at that time. There are a few places where we asynchronously kick off work to inspect the running document table, but those are async and should never block.\r\n\r\nThere is a lock hierarchy now instituted: each VisualStudioProject has a lock which it takes when any method is called on it, this is to ensure straightforward synchronization of it's data for things like batch start/stopping, what's in the batch, etc. There is also a lock in VisualStudioWorkspaceImpl that is acquired when actually modifying the workspace, which is done through an internal ApplyChangeToWorkspace method so it can be called from VisualStudioProject more easily. It is permissible for a VisualStudioProject to call ApplyChangeToWorkspace to acquire the VisualStudioWorkspaceImpl lock. It is _not_ permissible for a lock holder of VisualStudioWorkspaceImpl's lock to acquire any project lock. To this end, some project-to-project tracking information is held in VisualStudioWorkspaceImpl to avoid mistakes -- although the data is a \"per project\" concept, putting it in the project would cause people to take a project lock and risk deadlocks."},{"Id":"8446810321","Type":"PullRequestEvent","CreatedAt":"2018-10-19T05:00:34","Actor":"AlekseyTs","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30616","RelatedDescription":"Opened pull request \"Address a number of issues around generic type substitution and nullability.\" (#30616) at dotnet/roslyn","RelatedBody":"Fixes #28684.\r\nFixes #29837.\r\nFixes #30001.\r\nFixes #30052.\r\nFixes #30054.\r\nFixes #30068.\r\nFixes #30072.\r\nFixes #30178.\r\nFixes #30220."},{"Id":"8446767510","Type":"PullRequestEvent","CreatedAt":"2018-10-19T04:42:26","Actor":"cston","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30585","RelatedDescription":"Merged pull request \"Change feature name to 'nullable reference types'\" (#30585) at dotnet/roslyn","RelatedBody":"Fixes #30555."},{"Id":"8446525025","Type":"PullRequestEvent","CreatedAt":"2018-10-19T03:07:44","Actor":"Scott-Caldwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30615","RelatedDescription":"Opened pull request \"Include GetAwaiter() extension method namespace in AddImport suggestions\" (#30615) at dotnet/roslyn","RelatedBody":"This PR expands the Add Import feature to include addition of a namespace that contains a `GetAwaiter()` extension method for an awaited expression.\r\n\r\n![image](https://user-images.githubusercontent.com/2829282/47195595-94014b00-d32a-11e8-91e9-ec38f6c18965.png)\r\n\r\nFixes #29313."},{"Id":"8446518874","Type":"PullRequestEvent","CreatedAt":"2018-10-19T03:05:33","Actor":"edwinfrc","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30614","RelatedDescription":"Opened pull request \"Dev15.8 preview4\" (#30614) at dotnet/roslyn","RelatedBody":"@"},{"Id":"8446501351","Type":"PullRequestEvent","CreatedAt":"2018-10-19T02:59:37","Actor":"CyrusNajmabadi","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/28029","RelatedDescription":"Closed pull request \"Run code cleanup providers in parallel.\" (#28029) at dotnet/roslyn","RelatedBody":"This PR implements the algorithm discussed here: https://github.com/dotnet/roslyn/issues/28012#issuecomment-398640195\r\n\r\nSpecifically, we will run code cleanup providers in parallel.  Then we will attempt to use the results from as many of hte cleanup providers as possible.  If we fail to merge in any results from some cleanup providers, we will then run that batch of failed-providers in parallel again until we have no more work to do.\r\n\r\nI recommend looking at this PR commit by commit as i extract code out of one type to place elsewhere.\r\n\r\nhttps://github.com/dotnet/roslyn/pull/28029/files?w=1  will make this PR easier to review."},{"Id":"8446496883","Type":"PullRequestEvent","CreatedAt":"2018-10-19T02:58:02","Actor":"edwinfrc","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30613","RelatedDescription":"Closed pull request \"Dev15 rc ri\" (#30613) at dotnet/roslyn","RelatedBody":""},{"Id":"8446496676","Type":"PullRequestEvent","CreatedAt":"2018-10-19T02:57:58","Actor":"edwinfrc","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30613","RelatedDescription":"Opened pull request \"Dev15 rc ri\" (#30613) at dotnet/roslyn","RelatedBody":""},{"Id":"8446489006","Type":"PullRequestEvent","CreatedAt":"2018-10-19T02:55:09","Actor":"edwinfrc","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30612","RelatedDescription":"Closed pull request \"Dev/jcouv/update docs\" (#30612) at dotnet/roslyn","RelatedBody":""},{"Id":"8446488551","Type":"PullRequestEvent","CreatedAt":"2018-10-19T02:55:01","Actor":"edwinfrc","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30612","RelatedDescription":"Opened pull request \"Dev/jcouv/update docs\" (#30612) at dotnet/roslyn","RelatedBody":""},{"Id":"8446486640","Type":"PullRequestEvent","CreatedAt":"2018-10-19T02:54:24","Actor":"edwinfrc","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30611","RelatedDescription":"Closed pull request \"Dev/jaredpar/sdk\" (#30611) at dotnet/roslyn","RelatedBody":""},{"Id":"8446486256","Type":"PullRequestEvent","CreatedAt":"2018-10-19T02:54:16","Actor":"edwinfrc","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30611","RelatedDescription":"Opened pull request \"Dev/jaredpar/sdk\" (#30611) at dotnet/roslyn","RelatedBody":""},{"Id":"8446483300","Type":"PullRequestEvent","CreatedAt":"2018-10-19T02:53:13","Actor":"edwinfrc","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30610","RelatedDescription":"Closed pull request \"Remove TestUtilities.FX45\" (#30610) at dotnet/roslyn","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8446658147","Type":"PullRequestEvent","CreatedAt":"2018-10-19T03:57:18","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6473","RelatedDescription":"Merged pull request \"Do not filter InternalCall and RuntimeImplemented methods\" (#6473) at dotnet/corert","RelatedBody":"This fixes a regression reported in Gitter. This code path has been wrong for a while, but it was masked behind some other code I deleted last week.\r\n\r\nInternalCall and RuntimeImplemented methods are not very different from regular methods in CoreRT (we provide IL for some of them). Filtering them out here meant that we lost some generic tracking (shadow methods) for `Invoke` methods on delegates."},{"Id":"8446654880","Type":"PullRequestEvent","CreatedAt":"2018-10-19T03:56:01","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6469","RelatedDescription":"Merged pull request \"CppCodeGen: fix emitting code for object node\" (#6469) at dotnet/corert","RelatedBody":"This patch fixes problem with missing 1-byte data fields."},{"Id":"8446117983","Type":"PullRequestEvent","CreatedAt":"2018-10-19T00:44:00","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corert/pull/6469","RelatedDescription":null,"RelatedBody":"This patch fixes problem with missing 1-byte data fields."},{"Id":"8446117825","Type":"PullRequestEvent","CreatedAt":"2018-10-19T00:43:58","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/6469","RelatedDescription":"Closed pull request \"CppCodeGen: fix emitting code for object node\" (#6469) at dotnet/corert","RelatedBody":"This patch fixes problem with missing 1-byte data fields."},{"Id":"8446044682","Type":"PullRequestEvent","CreatedAt":"2018-10-19T00:17:53","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6473","RelatedDescription":"Opened pull request \"Do not filter InternalCall and RuntimeImplemented methods\" (#6473) at dotnet/corert","RelatedBody":"This fixes a regression reported in Gitter. This code path has been wrong for a while, but it was masked behind some other code I deleted last week.\r\n\r\nInternalCall and RuntimeImplemented methods are not very different from regular methods in CoreRT (we provide IL for some of them). Filtering them out here meant that we lost some generic tracking (shadow methods) for `Invoke` methods on delegates."},{"Id":"8446044176","Type":"PullRequestEvent","CreatedAt":"2018-10-19T00:17:44","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6472","RelatedDescription":"Opened pull request \"Limit exposure to delegate DynamicInvoke thunk\" (#6472) at dotnet/corert","RelatedBody":"The DynamicInvoke thunk is special because they're shared with reflection invoke. They're not instance methods on delegate like the rest of the invoke thunks.\r\n\r\nI noticed we were accidentally reporting them from `GetAllMethods` on delegate types even though they're not instance methods. Moving the handling of these to `DelegateThunks` to prevent exposure from places that don't expect them and limit the special casing to a single file (DelegateThunks was already special casing them)."},{"Id":"8445604577","Type":"IssuesEvent","CreatedAt":"2018-10-18T22:07:27","Actor":"sidgo28","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/6471","RelatedDescription":"Opened issue \"Crashes on Xamarin UWP plaguing my app and I can do nothing about it\" (#6471) at dotnet/corert","RelatedBody":"> realms::realm::__c__displayclass48_0 _writeasync_b__3()\r\n> stowed_exception 80131500: stowed_exception\r\n\r\n```\r\ncombase.dll\r\nRoOriginateLanguageException() error.cpp:1522\r\nSystem.Private.Interop.dll\r\nSystem::Runtime::InteropServices::ExceptionHelpers OriginateLanguageException() ExceptionHelpers.cs:115\r\nSystem.Private.Interop.dll\r\nSystem::Runtime::InteropServices::ExceptionHelpers ReportUnhandledError() ExceptionHelpers.cs:883\r\nSystem.Private.Interop.dll\r\nInternal::Interop::InteropCallbacks ReportUnhandledError() InteropCallbacks.cs:17\r\nSystem.Private.WinRTInterop.CoreLib\r\nInternal::WinRT::Interop::WinRTCallbacks ReportUnhandledError() Interop.WinRT.cs:390\r\nSharedLibrary.dll\r\nSystem::RuntimeExceptionHelpers ReportUnhandledException() RuntimeExceptionHelpers.cs:153\r\nSharedLibrary.dll\r\nInternal::Runtime::Augments::RuntimeAugments ReportUnhandledException() RuntimeAugments.cs:874\r\nSharedLibrary.dll\r\nSystem::Threading::WinRTSynchronizationContext::Invoker InvokeCore$catch$0() SynchronizationContext.WinRT.cs:93\r\nmrt100_app.dll\r\nRhpCallCatchFunclet() exceptionhandling.asm:437\r\nmrt100_app.dll\r\nSystem::Runtime::EH DispatchEx() ExceptionHandling.cs:761\r\nmrt100_app.dll\r\nSystem::Runtime::EH RhThrowEx() ExceptionHandling.cs:627\r\nmrt100_app.dll\r\nRhpThrowEx() exceptionhandling.asm:191\r\nSharedLibrary.dll\r\nSystem::Runtime::ExceptionServices::ExceptionDispatchInfo Throw() ExceptionDispatchInfo.cs:61\r\nSharedLibrary.dll\r\nSystem::Runtime::CompilerServices::AsyncMethodBuilderCore::__c _ThrowAsync_b__7_0() AsyncMethodBuilder.cs:926\r\nSharedLibrary.dll\r\nSystem::Threading::ContextCallback Invoke() Invoke:15732480\r\nSharedLibrary.dll\r\nSystem::Threading::WinRTSynchronizationContext::Invoker InvokeCore() SynchronizationContext.WinRT.cs:83\r\nSharedLibrary.dll\r\nSystem::Threading::WinRTSynchronizationContext::Invoker Invoke() SynchronizationContext.WinRT.cs:74\r\nSharedLibrary.dll\r\nSystem::Threading::ContextCallback InvokeOpenStaticThunk() InvokeOpenStaticThunk:15732480\r\nRealm.dll\r\nRealms::Realm::__c__DisplayClass48_0 _WriteAsync_b__3() Realm.cs:699\r\nOneKeep.McgInterop.dll\r\nWindows::Foundation::DeferralCompletedHandler Invoke() Invoke:15732480\r\nOneKeep.McgInterop.dll\r\n__Interop::ReverseComStubs Stub_4() Stub_4:15732480\r\nOneKeep.McgInterop.dll\r\nWindows::UI::Core::DispatchedHandler__Impl::Vtbl Invoke__n() Invoke__n:15732480\r\nWindows.UI.dll\r\nWindows::UI::Core::CDispatcher ProcessInvokeItem() dispatcher.cpp:1268\r\nWindows.UI.dll\r\nWindows::UI::Core::CDispatcher ProcessMessage() dispatcher.cpp:350\r\nWindows.UI.dll\r\nWindows::UI::Core::CDispatcher WaitAndProcessMessagesInternal() dispatcher.cpp:1959\r\nWindows.UI.dll\r\nWindows::UI::Core::CDispatcher WaitAndProcessMessages() dispatcher.cpp:461\r\ntwinapi.appcore.dll\r\n_lambda_476a253d60a149be58fa202b506b2c7b_ operator() coreapplicationview.cpp:1201\r\nSHCore.dll\r\n_WrapperThreadProc() thread.cpp:321\r\nkernel32.dll\r\nBaseThreadInitThunk() thread.c:64\r\nntdll.dll\r\nRtlUserThreadStart() rtlstrt.c:998\r\n```\r\n\r\nHi. I'm using Realm DB in my app, and as you can see in the stack trace, the WriteAsync method is the one crashing:\r\n\r\n ```\r\n       public Task WriteAsync(Action<Realm> action)\r\n        {\r\n            // Can't use async/await due to mono inliner bugs\r\n            ThrowIfDisposed();\r\n\r\n            Argument.NotNull(action, nameof(action));\r\n\r\n            // If we are on UI thread will be set but often also set on long-lived workers to use Post back to UI thread.\r\n            if (SynchronizationContext.Current != null)\r\n            {\r\n                async Task doWorkAsync()\r\n                {\r\n                    var scheduler = TaskScheduler.FromCurrentSynchronizationContext();\r\n                    await Task.Run(() =>\r\n                    {\r\n                        using (var realm = GetInstance(Config))\r\n                        {\r\n                            realm.Write(() => action(realm));\r\n                        }\r\n                    });\r\n                    var didRefresh = await RefreshAsync();\r\n                    System.Diagnostics.Debug.Assert(didRefresh);\r\n                }\r\n                return doWorkAsync();\r\n            }\r\n            else\r\n            {\r\n                // If running on background thread, execute synchronously.\r\n                Write(() => action(this));\r\n                return Task.CompletedTask;\r\n            }\r\n        }\r\n```\r\n\r\nThe problem is, I don't understand at all why since the crash occurs inside the `InvokeCore` method of `WinRTSynchronizationContext.Invoker`:\r\n\r\n  ```\r\n          private void InvokeCore()\r\n            {\r\n                SynchronizationContext prevSyncCtx = SynchronizationContext.CurrentExplicit;\r\n                try\r\n                {\r\n                    m_callback(m_state);\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    //\r\n                    // If we let exceptions propagate to CoreDispatcher, it will swallow them with the idea that someone will\r\n                    // observe them later using the IAsyncInfo returned by CoreDispatcher.RunAsync.  However, we ignore\r\n                    // that IAsyncInfo, because there's nothing Post can do with it (since Post returns void).\r\n                    // So, we report these as unhandled exceptions.\r\n                    //\r\n                    RuntimeAugments.ReportUnhandledException(ex);\r\n                }\r\n                finally\r\n                {\r\n                    SynchronizationContext.SetSynchronizationContext(prevSyncCtx);\r\n                }\r\n            }\r\n```\r\n\r\nSo can you please suggest what is going wrong? Thank you.\r\n"},{"Id":"8445359223","Type":"PullRequestEvent","CreatedAt":"2018-10-18T21:14:29","Actor":"stephentoub","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6470","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,coreclr\" (#6470) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub"},{"Id":"8441983399","Type":"PullRequestEvent","CreatedAt":"2018-10-18T11:58:04","Actor":"dotnet-maestro-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6470","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#6470) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"8441960659","Type":"PullRequestEvent","CreatedAt":"2018-10-18T11:53:42","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6468","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#6468) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"8446738591","Type":"PullRequestEvent","CreatedAt":"2018-10-19T04:30:09","Actor":"dotnet-automerge-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2592","RelatedDescription":"Merged pull request \"Merge release/2.2.2xx to master\" (#2592) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8446661507","Type":"PullRequestEvent","CreatedAt":"2018-10-19T03:58:39","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2591","RelatedDescription":"Merged pull request \"Merge release/2.2.1xx to release/2.2.2xx\" (#2591) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8446264903","Type":"IssuesEvent","CreatedAt":"2018-10-19T01:37:00","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/2523","RelatedDescription":"Closed issue \"Builds broken because package signature file entry is invalid\" (#2523) at dotnet/sdk","RelatedBody":"As discussed [on this appveyor forum](https://help.appveyor.com/discussions/problems/16600-appveyor-suddenly-totally-broken), AppVeyor builds recently started breaking for me.  Feodor Fitsner kindly came up with a minimal repro that suggests that the .NET Core 2.1 packages on nuget.org have bad signatures.\r\n\r\n**Repro**\r\n\r\nCreate a test-nuget.csproj file with these contents:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFrameworks>netcoreapp1.0;netcoreapp2.0;netcoreapp2.1</TargetFrameworks>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nRename or remove your `%userprofile%\\.nuget\\packages` folder.\r\n\r\nRestore packages for `test-nuget.csproj` *using msbuild*:\r\n\r\n```ps1\r\nmsbuild /t:restore /p:RestoreDisableParallel=true,TreatWarningsAsErrors=true\r\n```\r\n\r\nThis produces these errors:\r\n\r\n```\r\n  Restoring packages for D:\\temp\\test-nuget\\test-nuget.csproj...\r\n<snip/>\r\n  Installing Microsoft.NETCore.DotNetAppHost 2.0.0.\r\n  Installing Microsoft.NETCore.App 2.1.0.\r\nD:\\temp\\test-nuget\\test-nuget.csproj : error NU3005: The package signature file entry is invalid. The central directory header field 'compression method' has an in\r\nvalid value (8).\r\n  Installing Microsoft.NETCore.DotNetHostPolicy 2.1.0.\r\nD:\\temp\\test-nuget\\test-nuget.csproj : error NU3005: The package signature file entry is invalid. The central directory header field 'compression method' has an in\r\nvalid value (8).\r\n  Installing Microsoft.NETCore.Platforms 2.1.0.\r\nD:\\temp\\test-nuget\\test-nuget.csproj : error NU3005: The package signature file entry is invalid. The central directory header field 'compression method' has an in\r\nvalid value (8).\r\n  Installing Microsoft.NETCore.Targets 2.1.0.\r\nD:\\temp\\test-nuget\\test-nuget.csproj : error NU3005: The package signature file entry is invalid. The central directory header field 'compression method' has an in\r\nvalid value (8).\r\n  Installing NETStandard.Library 2.0.3.\r\n  Installing Microsoft.NETCore.DotNetHostResolver 2.1.0.\r\nD:\\temp\\test-nuget\\test-nuget.csproj : error NU3005: The package signature file entry is invalid. The central directory header field 'compression method' has an in\r\nvalid value (8).\r\n  Installing Microsoft.NETCore.DotNetAppHost 2.1.0.\r\nD:\\temp\\test-nuget\\test-nuget.csproj : error NU3005: The package signature file entry is invalid. The central directory header field 'compression method' has an in\r\nvalid value (8).\r\n  Generating MSBuild file D:\\temp\\test-nuget\\obj\\test-nuget.csproj.nuget.g.props.\r\n  Generating MSBuild file D:\\temp\\test-nuget\\obj\\test-nuget.csproj.nuget.g.targets.\r\n  Restore failed in 32.27 sec for D:\\temp\\test-nuget\\test-nuget.csproj.\r\n```\r\n\r\nInterestingly, this only repros while there are multiple target frameworks specified. Reducing it to just `netcoreapp2.1` eliminates the error."},{"Id":"8446138149","Type":"PullRequestEvent","CreatedAt":"2018-10-19T00:51:20","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2594","RelatedDescription":"Opened pull request \"Enable dependency flow\" (#2594) at dotnet/sdk","RelatedBody":"@alexperovich For review\r\n\r\nFixes dotnet/cli#10129"},{"Id":"8446085269","Type":"PullRequestEvent","CreatedAt":"2018-10-19T00:32:17","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2582","RelatedDescription":"Merged pull request \"Merge release/2.1.5xx to release/2.2.1xx\" (#2582) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8444194813","Type":"IssuesEvent","CreatedAt":"2018-10-18T17:43:37","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/2593","RelatedDescription":"Closed issue \"For .Net Core 3.0, in \"Application\" tab of project properties page, the highest optional \"Target framework\" is “.NET Core 2.2”, not \".NET Core 3.0\". \" (#2593) at dotnet/sdk","RelatedBody":"_From @YunWeiaa on October 18, 2018 6:51_\n\n### Description:\r\n1. After installing .net core SDK 3.0.100-alpha1-009676 with Runtime 3.0.0-preview1-27016-04 against d16.0stg\r\n2. I create a new .net core project via VS and open property pages, the default TFM is \".NET Core 2.1\". \r\n3. If I want to change the higher target fx, it only has “.NET Core 2.2”, not \".NET Core 3.0\". \r\n![default netcore](https://user-images.githubusercontent.com/33921754/47135902-8cb74e80-d2e4-11e8-9038-1059d7a90726.jpg)\r\n4. When I manually change the target fx to 2.2, it shows the error `NU1103: Unable to find a stable package Microsoft.NETCore.App with version (>= 2.2.0)` as below:\r\n![net30](https://user-images.githubusercontent.com/33921754/47136247-b15ff600-d2e5-11e8-899e-0d02c3700df9.png)\r\n\r\n### Test Environment:\r\nD16.0stg/28216.3001 (16.0 preview 1.0) + CLI/SDK [3.0.100-alpha1-009676](https://dotnetcli.blob.core.windows.net/dotnet/Sdk/master/dotnet-sdk-latest-win-x64.exe)\r\ndotnet --info:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-alpha1-009676\r\n Commit:    e5ae52d155\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-alpha1-009676\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview1-27016-04\r\n  Commit:  3b8753ee45\r\n\r\n.NET Core SDKs installed:\r\n  1.1.11 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500-preview-009335 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-alpha1-009676 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 3.0.0-alpha1-10062 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-alpha1-10062 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.DesktopUI.App 3.0.0-alpha-27006-1 [C:\\Program Files\\dotnet\\shared\\Microsoft.DesktopUI.App]\r\n  Microsoft.NETCore.App 1.0.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview1-27016-04 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n```\n\n_Copied from original issue: dotnet/project-system#4137_"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1053032574933581824","CreatedAt":"2018-10-18T21:18:24+00:00","UserScreenname":"dotnet","Text":".NET Framework October 2018 Preview of Quality Rollup\n\nhttps://t.co/P6vAFbZLAa","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":7,"RawContent":null},{"Id":"1052575934572843009","CreatedAt":"2018-10-17T15:03:53+00:00","UserScreenname":"dotnet","Text":"Our @terrajobst is teaching how to build a compiler, LIVE on Youtube and Twitch.  Tune in at:… https://t.co/oTbrZVriwS","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":6,"RawContent":null},{"Id":"1052246548917182465","CreatedAt":"2018-10-16T17:15:01+00:00","UserScreenname":"dotnet","Text":"Say “Yes” to NoSQL for .NET SQL Developers - https://t.co/9L0O2wVz9h - @JeremyLikness intros relational database de… https://t.co/F8R8WVGDja","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":78,"FavoriteCount":32,"RawContent":null},{"Id":"1052189959078248450","CreatedAt":"2018-10-16T13:30:09+00:00","UserScreenname":"dotnet","Text":"Check out Jeff's show this morning and learn about .NET, Visual Studio Code, and Linux-based development with .NET… https://t.co/I6gUbWmajc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":27,"FavoriteCount":9,"RawContent":null},{"Id":"1049807908173574144","CreatedAt":"2018-10-09T23:44:44+00:00","UserScreenname":"dotnet","Text":"Blogged -- .NET Framework October 2018 Security and Quality Rollup https://t.co/tLgVdVbM4L","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":25,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2018-10-19T05:30:32.9918629Z","RunDurationInMilliseconds":8853}