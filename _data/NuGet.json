{"Data":{"Blog":{"FeedItems":[{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null},{"Title":"NuGet Summer 2018 Roadmap","PublishedOn":"2018-07-02T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This blog post provides insights into the NuGet team plans for the upcoming quarter (July &#8211; Sep 2018). In the March 2018 NuGet Spring 2018 Roadmap, we had outlined Package Signing,...","Href":"https://devblogs.microsoft.com/nuget/nuget-summer-2018-roadmap/","RawContent":null},{"Title":"Introducing signed package submissions to NuGet.org","PublishedOn":"2018-05-22T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In September 2017, we announced our plans to improve the security of the NuGet ecosystem by introducing the ability for package authors to sign packages. Today, we want to announce support for any...","Href":"https://devblogs.microsoft.com/nuget/introducing-signed-package-submissions/","RawContent":null},{"Title":"NuGet.org will only support MSA/AAD starting June 1st, 2018","PublishedOn":"2018-05-15T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We had previously announced the deprecation of NuGet.org&#8217;s home-grown authentication in favor of Microsoft accounts (MSA) that will allow us to add support for additional security systems such...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-only-support-msa-aad-starting-june/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"10041729400","Type":"PullRequestEvent","CreatedAt":"2019-07-19T00:01:23","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7357","RelatedDescription":"Merged pull request \"Small documentation fix\" (#7357) at NuGet/NuGetGallery","RelatedBody":"At some point the method signature diverged from the documentation, this brings back the parity and the ability to navigate to method definition in VS."},{"Id":"10041621917","Type":"IssuesEvent","CreatedAt":"2019-07-18T23:34:21","Actor":"mogah","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7336","RelatedDescription":"Closed issue \"[GitHub Usage] Make feature public\" (#7336) at NuGet/NuGetGallery","RelatedBody":"Make sure Anand and Kaitlin are okay with it, then make it public! "},{"Id":"10041621772","Type":"IssuesEvent","CreatedAt":"2019-07-18T23:34:19","Actor":"mogah","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7335","RelatedDescription":"Closed issue \"[GitHub Usage] Author the blog post\" (#7335) at NuGet/NuGetGallery","RelatedBody":"Author the blog post with LoÃ¯c and Anand.\n- Tweet\n  - Announce it\n  - Ask for feedback\n- Blog post\n  - How the job works\n  - Why we made this (what's the customer win?)\n  - Ask for feedback\n  - How can you run it yourself (link to a Readme.md?)"},{"Id":"10041620482","Type":"IssuesEvent","CreatedAt":"2019-07-18T23:33:58","Actor":"mogah","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7359","RelatedDescription":"Opened issue \"[GitHub Usage] Add telemetry to the GitHubIndexer Job\" (#7359) at NuGet/NuGetGallery","RelatedBody":"Add the following metrics for telemetry.\n\nper repo:\n\ttotalDuration\n\tfindDuration --> numberOfFiles\n\tcheckoutDuration --> numberOfFiles\n \ntotalSearchDuration --> totalReposCount\n\t\nExample telem: https://github.com/NuGet/NuGet.Jobs/blob/master/src/Monitoring.RebootSearchInstance/TelemetryService.cs"},{"Id":"10041575844","Type":"IssuesEvent","CreatedAt":"2019-07-18T23:22:50","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7358","RelatedDescription":"Opened issue \"[Status] Make it easy to identify deployed code\" (#7358) at NuGet/NuGetGallery","RelatedBody":"### Problem description\r\nIt is difficult to identify what source code is deployed to the status service.\r\n\r\n### Solution\r\nThe Gallery puts the commit hash in an HTML comment. Azure Search has \"deployment label\" and puts commit hash in `/search/diag` endpoint.\r\n\r\n### Pending work\r\n\r\n* [ ] Expose the commit hash somewhere (like an HTML comment)\r\n* [ ] Add a deployment label to trace back to the deployment's build\r\n"},{"Id":"10041427777","Type":"PullRequestEvent","CreatedAt":"2019-07-18T22:48:48","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7356","RelatedDescription":"Merged pull request \"Move search timeout from HttpClient to Polly timeout policy\" (#7356) at NuGet/NuGetGallery","RelatedBody":"When a timeout occurs, consider this as an error for the circuit breaker.\r\nProgress on https://github.com/NuGet/NuGetGallery/issues/7119\r\n\r\nPreviously everyone would always encounter the timeout case on USNC and the circuit breaker would never open.\r\n"},{"Id":"10040505690","Type":"PullRequestEvent","CreatedAt":"2019-07-18T20:07:07","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7357","RelatedDescription":"Opened pull request \"Small documentation fix\" (#7357) at NuGet/NuGetGallery","RelatedBody":"At some point the method signature diverged from the documentation, this brings back the parity and the ability to navigate to method definition in VS."},{"Id":"10039462775","Type":"PullRequestEvent","CreatedAt":"2019-07-18T17:26:21","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7356","RelatedDescription":"Opened pull request \"Move search timeout from HttpClient to Polly timeout policy\" (#7356) at NuGet/NuGetGallery","RelatedBody":"When a timeout occurs, consider this as an error for the circuit breaker.\r\nProgress on https://github.com/NuGet/NuGetGallery/issues/7119\r\n\r\nPreviously everyone would always encounter the timeout case on USNC and the circuit breaker would never open.\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"10042649369","Type":"IssuesEvent","CreatedAt":"2019-07-19T04:17:48","Actor":"Jun-GY","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8353","RelatedDescription":"Opened issue \"vs nuget settings  binding Redirects and Project binding Redirects What is the relationship?\" (#8353) at NuGet/Home","RelatedBody":"\r\nvs nuget settings  binding Redirects and Project binding Redirects What is the relationship?"},{"Id":"10041640345","Type":"IssuesEvent","CreatedAt":"2019-07-18T23:39:03","Actor":"vsfeedback","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8352","RelatedDescription":"Opened issue \"Crash when consolodating nuget packages\" (#8352) at NuGet/Home","RelatedBody":"Using VS nuget GUI to consolodate different versions of a package crashes the instance of VS. Occurs in 2017, 2019 and 2019 int preview.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/608137/crash-when-consolodating-nuget-packages.html\nVSTS ticketId: 918791_\n_These are the original issue comments:_\n\nFiona Niu[MSFT] on 6/17/2019, 01:10 AM (31 days ago): <p>Thank you for taking the time to log this issue!</p><p> I've tried to reproduce and investigate using the description, and attachments already provided. Unfortunately those aren't enough and more information is needed in order to investigate it further.</p><p> The easiest way to provide all the information is to use the Visual Studio Feedback Tool. This will ensure that we collect the needed information for you without worrying about what to provide (recording, dump file or ETL trace).</p><p> Since this issue is now marked as Need More Info, that workflow is enabled in the Feedback Tool:</p><ul><li> Open Visual Studio Feedback tool.</li><li>Click the banner letting you know that you have problems requesting your attention.</li><li>Click this problem from the list</li><li>Click &quot;View their request and respond&quot; from the problem details banner</li><li>Add a comment, in the Attachments/Record: click Start Recording</li><li>When the Steps Recorder tool appears, perform the steps that reproduce the problem.</li><li>When you're done, choose the Stop Record button.</li><li>Wait a few minutes for Visual Studio to collect and package the information that you recorded.</li><li>Submit. You will be able to see the comment on Developer Community. For security reasons, your files come directly to us and don't appear on Developer Community.</li></ul><p> For the full instructions, please see: <a target=\"_blank\"> https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017?view=vs-2017#when-further-information-is-needed-need-more-info </a>  . For information about what data is collected, see <a target=\"_blank\"> https://docs.microsoft.com/en-us/visualstudio/ide/developer-community-privacy?view=vs-2017#data-we-collect </a>  </p><p> We look forward to hearing from you!</p>\n\nbrynhr [MSFT] on 6/17/2019, 02:25 AM (31 days ago): <p>Recording of crash attached. Please let me know if it uploaded.</p>\n\nFiona Niu[MSFT] on 6/17/2019, 06:48 PM (30 days ago): <p>Thanks a lot for providing the information. We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n_These are the original issue solutions:_\n(no solutions)"},{"Id":"10041460435","Type":"IssuesEvent","CreatedAt":"2019-07-18T22:55:56","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8351","RelatedDescription":"Opened issue \"Telemetry:  datetime values use culture-specific formats\" (#8351) at NuGet/Home","RelatedBody":"[`TelemetryActivity`](https://github.com/NuGet/NuGet.Client/blob/d70e1f5475c9915f10ac4503553972d9bb988ce9/src/NuGet.Core/NuGet.Common/Telemetry/TelemetryActivity.cs#L65) and [`ActionEventBase`](https://github.com/NuGet/NuGet.Client/blob/d70e1f5475c9915f10ac4503553972d9bb988ce9/src/NuGet.Core/NuGet.PackageManagement/Telemetry/ActionEventBase.cs#L31) both call [`DateTimeOffset.ToString()`] which creates a culture-specific representation of a `DateTimeOffset` value.\r\n\r\nThis change standardizes telemetry datetime values to follow a standard ISO 8601 format (`yyyy-MM-ddTHH:mm:ss.fffffffZ`)."},{"Id":"10041390469","Type":"IssuesEvent","CreatedAt":"2019-07-18T22:40:50","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8345","RelatedDescription":"Closed issue \"Test:  flaky package signing tests\" (#8345) at NuGet/Home","RelatedBody":"Some package signing tests are flaky because they rely on an environment variable having a particular value, but that value may be changed by concurrent execution of another test.  An example failure is [`NuGet.Packaging.Test.ClientPolicyContextTests.GetClientPolicy_ReadsAndParsesTrustedSigners`](https://github.com/NuGet/NuGet.Client/blob/c4106cd050215296adda4560ccad5ce81f3883d7/test/NuGet.Core.Tests/NuGet.Packaging.Test/SigningTests/ClientPolicyContextTests.cs#L142):\r\n```\r\n  Expected object to be Online, but found Offline.\r\n  Stack Trace:\r\n     at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message) in C:\\projects\\fluentassertions-vf06b\\Src\\FluentAssertions.Net45\\Execution\\XUnit2TestFramework.cs:line 32\r\n     at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args) in C:\\projects\\fluentassertions-vf06b\\Src\\Core\\Execution\\AssertionScope.cs:line 197\r\n     at FluentAssertions.Primitives.ObjectAssertions.Be(Object expected, String because, Object[] becauseArgs) in C:\\projects\\fluentassertions-vf06b\\Src\\Core\\Primitives\\ObjectAssertions.cs:line 41\r\n     at NuGet.Packaging.Test.ClientPolicyContextTests.GetClientPolicy_ReadsAndParsesTrustedSigners() in E:\\A\\_work\\50\\s\\test\\NuGet.Core.Tests\\NuGet.Packaging.Test\\SigningTests\\ClientPolicyContextTests.cs:line 145\r\n```"},{"Id":"10041167704","Type":"IssuesEvent","CreatedAt":"2019-07-18T21:55:31","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8348","RelatedDescription":"Closed issue \"Test:  NuGet.Tests.Apex.NuGetUITestCase.UninstallPackageFromUI is flaky\" (#8348) at NuGet/Home","RelatedBody":"This is the currently our most flaky test."},{"Id":"10041159742","Type":"IssuesEvent","CreatedAt":"2019-07-18T21:54:06","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8349","RelatedDescription":"Closed issue \"SemVer2 should have better prerelease package recommendations\" (#8349) at NuGet/Home","RelatedBody":"See: \r\n\r\nhttps://docs.microsoft.com/en-us/nuget/reference/package-versioning#pre-release-versions\r\nhttps://docs.microsoft.com/en-us/nuget/reference/package-versioning#semantic-versioning-200\r\n\r\nhttps://docs.microsoft.com/en-us/nuget/create-packages/prerelease-packages#semantic-versioning\r\n\r\n\r\nIn a couple of places in these articles we make a recommendation that customers should author their prerelease versions like `1.0.0-preview1`. \r\n\r\nWhen using semver2, customers should use `1.0.0-preview.1` for more predictable sorting instead of leading 0s. \r\n\r\nSee: \r\n\r\n```\r\nAs shown, the version without any suffix will always take precedence over pre-release versions. Note also that if you use numerical suffixes with pre-release tags that might use double-digit numbers (or more), use leading zeroes as in beta01 and beta05 to ensure that they sort correctly when the numbers get larger.\r\n``` \r\n\r\nfrom \r\nhttps://docs.microsoft.com/en-us/nuget/create-packages/prerelease-packages#semantic-versioning\r\n\r\n//cc @Mikejo5000 "},{"Id":"10041109402","Type":"IssuesEvent","CreatedAt":"2019-07-18T21:44:56","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8350","RelatedDescription":"Opened issue \"Use insert_final_newline in .editorconfig\" (#8350) at NuGet/Home","RelatedBody":"I like files ending with a new line. Makes git diffs nicer :)"},{"Id":"10040957971","Type":"IssuesEvent","CreatedAt":"2019-07-18T21:18:54","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8342","RelatedDescription":"Closed issue \"Add automation for inserting into Core-SDK\" (#8342) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nOur Release Pipeline should have a new step to insert into the new [.NET Core-SDK Repo](https://github.com/dotnet/core-sdk)"},{"Id":"10040942311","Type":"IssuesEvent","CreatedAt":"2019-07-18T21:16:11","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8349","RelatedDescription":"Opened issue \"SemVer2 should have better prerelease package recommendations\" (#8349) at NuGet/Home","RelatedBody":"See: \r\n\r\nhttps://docs.microsoft.com/en-us/nuget/reference/package-versioning#pre-release-versions\r\nhttps://docs.microsoft.com/en-us/nuget/reference/package-versioning#semantic-versioning-200\r\n\r\nhttps://docs.microsoft.com/en-us/nuget/create-packages/prerelease-packages#semantic-versioning\r\n\r\n\r\nIn a couple of places in these articles we make a recommendation that customers should author their prerelease versions like `1.0.0-preview1`. \r\n\r\nWhen using semver2, customers should use `1.0.0-preview.1` for more predictable sorting instead of leading 0s. \r\n\r\nSee: \r\n\r\n```\r\nAs shown, the version without any suffix will always take precedence over pre-release versions. Note also that if you use numerical suffixes with pre-release tags that might use double-digit numbers (or more), use leading zeroes as in beta01 and beta05 to ensure that they sort correctly when the numbers get larger.\r\n``` \r\n\r\nfrom \r\nhttps://docs.microsoft.com/en-us/nuget/create-packages/prerelease-packages#semantic-versioning\r\n\r\n//cc @Mikejo5000 "},{"Id":"10040812212","Type":"IssuesEvent","CreatedAt":"2019-07-18T20:54:57","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8097","RelatedDescription":"Closed issue \"Test:  NuGet.Tests.Apex.NuGetUITestCase.InstallPackageToProjectsFromUI timed out\" (#8097) at NuGet/Home","RelatedBody":"In build 5.2.0.7171 test `NuGet.Tests.Apex.NuGetUITestCase.InstallPackageToProjectsFromUI` timed out:\r\n```\r\n     NuGet.Tests.Apex.NuGetUITestCase.InstallPackageToProjectsFromUI\r\n     NuGet.Tests.Apex: [Long Running Test] 'NuGet.Tests.Apex.NuGetUITestCase.InstallPackageToProjectsFromUI', Elapsed: 00:05:13\r\n     NuGet.Tests.Apex: [Long Running Test] 'NuGet.Tests.Apex.NuGetUITestCase.InstallPackageToProjectsFromUI', Elapsed: 00:10:14\r\n     NuGet.Tests.Apex: [Long Running Test] 'NuGet.Tests.Apex.NuGetUITestCase.InstallPackageToProjectsFromUI', Elapsed: 00:15:14\r\n     NuGet.Tests.Apex: [Long Running Test] 'NuGet.Tests.Apex.NuGetUITestCase.InstallPackageToProjectsFromUI', Elapsed: 00:20:14\r\n     NuGet.Tests.Apex: [Long Running Test] 'NuGet.Tests.Apex.NuGetUITestCase.InstallPackageToProjectsFromUI', Elapsed: 00:25:14\r\n     NuGet.Tests.Apex: [Long Running Test] 'NuGet.Tests.Apex.NuGetUITestCase.InstallPackageToProjectsFromUI', Elapsed: 00:30:14\r\nAttempting to cancel the build...\r\n```"},{"Id":"10040809981","Type":"IssuesEvent","CreatedAt":"2019-07-18T20:54:36","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8348","RelatedDescription":"Opened issue \"Test:  NuGet.Tests.Apex.NuGetUITestCase.UninstallPackageFromUI is flaky\" (#8348) at NuGet/Home","RelatedBody":"This is the currently our most flaky test."},{"Id":"10040805951","Type":"IssuesEvent","CreatedAt":"2019-07-18T20:53:59","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8347","RelatedDescription":"Opened issue \"Insertion of 5.3.0-preview2.6103\" (#8347) at NuGet/Home","RelatedBody":"VS:\r\n- [ ] Insertion PR: [192086](https://devdiv.visualstudio.com/DevDiv/_git/VS/pullrequest/192086)\r\n\r\n.NET Core 2.1\r\n- [ ] \r\n\r\n.NET Core 2.2\r\n- [ ] \r\n\r\n.NET Core 3.0\r\n- [ ] "},{"Id":"10039745038","Type":"IssuesEvent","CreatedAt":"2019-07-18T18:11:40","Actor":"devlead","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8346","RelatedDescription":"Opened issue \"Suggestion: Add \"tag\" attribute to nuspec respository element\" (#8346) at NuGet/Home","RelatedBody":"Currently you can reference git respository specific branch and / or commit, for example:\r\n```xml\r\n<?xml version=\"1.0\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2016/06/nuspec.xsd\">\r\n    <metadata>\r\n        ...\r\n        <repository type=\"git\" url=\"https://github.com/NuGet/NuGet.Client.git\" branch=\"dev\" commit=\"e1c65e4524cd70ee6e22abe33e6cb6ec73938cb3\" />\r\n        ...\r\n    </metadata>\r\n</package>\r\n```\r\n\r\nAs a commit can be referenced from  multiple tags, to be able to connect a package commit to a specific release it would be really use full to also have a `tag` attribute, for example:\r\n```xml\r\n<?xml version=\"1.0\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2016/06/nuspec.xsd\">\r\n    <metadata>\r\n        ...\r\n        <repository type=\"git\" url=\"https://github.com/NuGet/NuGet.Client.git\" branch=\"dev\" commit=\"a84f3d21844519ed64b9b5bf74d3782ad89551b9\" tag=\"5.3.0.6103\" />\r\n        ...\r\n    </metadata>\r\n</package>\r\n```"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1124053944269983745","CreatedAt":"2019-05-02T20:51:58+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfvqkS is currently degraded and some pages might take too long to load. We are investigating theâ¦ https://t.co/j3saBGKARZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1121348019914334210","CreatedAt":"2019-04-25T09:39:36+00:00","UserScreenname":"nuget","Text":"Thanks for your contribution. https://t.co/RDrP9LnHU3","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":26,"FavoriteCount":3,"RawContent":null},{"Id":"1116042504854335488","CreatedAt":"2019-04-10T18:17:22+00:00","UserScreenname":"nuget","Text":"We have just published the NuGet Roadmap for Spring 2019. Check it out now! \nhttps://t.co/gt7qR0S3wV","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":18,"RawContent":null},{"Id":"1115380341353537538","CreatedAt":"2019-04-08T22:26:10+00:00","UserScreenname":"nuget","Text":"Alert ð¨: Package publishing to @NuGet.org is taking more time than expected. The team is currently investigating thâ¦ https://t.co/EuaZ7gBehM","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":1,"FavoriteCount":6,"RawContent":null}]}},"RunOn":"2019-07-19T05:30:45.4017894Z","RunDurationInMilliseconds":2177}