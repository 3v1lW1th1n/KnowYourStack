{"Data":{"Blog":{"FeedItems":[{"Title":"Migrating a Sample WPF App to .NET Core 3 (Part 2)","PublishedOn":"2019-06-10T15:23:35+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In part 1 of this blog series, I began the process of porting a sample WPF app to .NET Core. In that post, I described the .NET Core migration process as having four steps:\nWe previously went through...","Href":"https://devblogs.microsoft.com/dotnet/migrating-a-sample-wpf-app-to-net-core-3-part-2/","RawContent":null},{"Title":"Migrating a Sample WPF App to .NET Core 3 (Part 1)","PublishedOn":"2019-06-10T15:22:01+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Olia recently wrote a post about how to port a WinForms app from .NET Framework to .NET Core. Today, I&#8217;d like to follow that up by walking through the steps to migrate a sample WPF app to .NET...","Href":"https://devblogs.microsoft.com/dotnet/migrating-a-sample-wpf-app-to-net-core-3-part-1/","RawContent":null},{"Title":"Supporting the community with WF and WCF OSS projects","PublishedOn":"2019-06-07T17:06:06+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"At the Build conference in May 2019, we mentioned that, after we add WinForms, WPF and Entity Framework 6 to .NET Core 3.0, we do not plan to add any more of the technologies from .NET Framework to...","Href":"https://devblogs.microsoft.com/dotnet/supporting-the-community-with-wf-and-wcf-oss-projects/","RawContent":null},{"Title":"Porting desktop apps to .NET Core","PublishedOn":"2019-05-28T16:00:55+00:00","CommentsCount":31,"FacebookCount":0,"Summary":"Since I&#8217;ve been working with the community on porting desktop applications from .NET Framework to .NET Core, I&#8217;ve noticed that there are two camps of folks: some want a very simple and...","Href":"https://devblogs.microsoft.com/dotnet/porting-desktop-apps-to-net-core/","RawContent":null},{"Title":"The F# development home on GitHub is now dotnet/fsharp","PublishedOn":"2019-05-20T18:16:50+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"TL;DR We&#8217;ve moved the F# GitHub repository from microsoft/visualfsharp to dotnet/fsharp, as specified in the corresponding RFC.\nF# has a somewhat strange history in its name and brand. If we...","Href":"https://devblogs.microsoft.com/dotnet/the-f-development-home-on-github-is-now-dotnet-fsharp/","RawContent":null},{"Title":"Create Interactive .NET Documentation with Try .NET","PublishedOn":"2019-05-16T20:01:47+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"When it comes to developers&#8217; documentation, it is essential that we capture their interest and lead them down the path of success as soon as possible. Across multiple languages, developer...","Href":"https://devblogs.microsoft.com/dotnet/creating-interactive-net-documentation/","RawContent":null},{"Title":"Performance Improvements in .NET Core 3.0","PublishedOn":"2019-05-15T19:17:00+00:00","CommentsCount":41,"FacebookCount":0,"Summary":"Back when we were getting ready to ship .NET Core 2.0, I wrote a blog post exploring some of the many performance improvements that had gone into it. I enjoyed putting it together so much and received...","Href":"https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-core-3-0/","RawContent":null},{"Title":"Default implementations in interfaces","PublishedOn":"2019-05-14T23:47:18+00:00","CommentsCount":46,"FacebookCount":0,"Summary":"Default implementations in interfaces\nWith last week&#8217;s posts Announcing .NET Core 3.0 Preview 5 and Visual Studio 2019 version 16.1 Preview 3, the last major feature of C# 8.0 is now available...","Href":"https://devblogs.microsoft.com/dotnet/default-implementations-in-interfaces/","RawContent":null},{"Title":".NET Core May 2019 Updates – 1.0.16, 1.1.14, 2.1.11 and 2.2.5","PublishedOn":"2019-05-14T19:06:45+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core May 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on updated packages.\nNOTE: If you are a Visual...","Href":"https://devblogs.microsoft.com/dotnet/net-core-may-2019/","RawContent":null},{"Title":".NET Framework May 2019 Security and Quality Rollup","PublishedOn":"2019-05-14T18:29:22+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the May 2019 Cumulative Update, Security and Quality Rollup, and Security Only Update.\nSecurity\nCVE-2019-0820 – Denial of Service Vulnerability\nA denial of service...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9596433106","Type":"PullRequestEvent","CreatedAt":"2019-05-09T18:35:22","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Merged pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."},{"Id":"9583176004","Type":"PullRequestEvent","CreatedAt":"2019-05-08T04:08:41","Actor":"mitchelsellers","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Opened pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."},{"Id":"9560620210","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:10:38","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Merged pull request \"Add AngleSharp\" (#143) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9560610143","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:08:41","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Merged pull request \"add links to ML.NET docs\" (#141) at dotnet/foundation","RelatedBody":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects"},{"Id":"9560608015","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:08:15","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Merged pull request \"Add DotVVM\" (#144) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9557840000","Type":"PullRequestEvent","CreatedAt":"2019-05-03T12:47:26","Actor":"tomasherceg","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Opened pull request \"Add DotVVM\" (#144) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9523802619","Type":"PullRequestEvent","CreatedAt":"2019-04-27T20:23:58","Actor":"FlorianRappl","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Opened pull request \"Add AngleSharp\" (#143) at dotnet/foundation","RelatedBody":"cc @jongalloway "}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9625371249","Type":"IssuesEvent","CreatedAt":"2019-05-14T19:27:47","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/115","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#115) at dotnet/announcements","RelatedBody":"The following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9625048568","Type":"IssuesEvent","CreatedAt":"2019-05-14T18:38:24","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#114) at dotnet/announcements","RelatedBody":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9624436763","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:06:25","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624425934","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624413462","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"9795602468","Type":"PullRequestEvent","CreatedAt":"2019-06-11T04:33:02","Actor":"jkoritzinsky","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25055","RelatedDescription":"Merged pull request \"Switch P/Invokes into libcoreclr for the PAL to QCalls\" (#25055) at dotnet/coreclr","RelatedBody":"Fixes #25016 "},{"Id":"9795602453","Type":"IssuesEvent","CreatedAt":"2019-06-11T04:33:01","Actor":"jkoritzinsky","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25016","RelatedDescription":"Closed issue \"Segfault for project built with `-r linux-x64` running with corerun\" (#25016) at dotnet/coreclr","RelatedBody":"To reproduce:\r\n\r\n* Create a checkout of coreclr and run `./build.sh && ./build-test.sh -generatelayoutonly`.\r\n* Create a sample .net project:\r\n\r\n**cs.csproj**:\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\n**Program.cs**:\r\n\r\n```cs\r\nusing System;\r\n\r\npublic class Program\r\n{\r\n    public static void Main(string[] args)\r\n    {\r\n        Console.WriteLine(\"Hello\");\r\n    }\r\n}\r\n```\r\n\r\n* Build with `dotnet publish -r linux-x64`\r\n* Run with:\r\n    CORE_ROOT=\"/path/to/coreclr/bin/tests/Linux.x64.Debug/Tests/Core_Root\"\r\n    /path/to/coreclr/bin/tests/Linux.x64.Debug/Tests/Core_Root/corerun bin/Debug/netcoreapp3.0/linux-x64/cs.dll\r\n\r\nThere will be a segmentation fault.\r\nThere is no segmentation fault when publishing without `-r linux-x64`, and no corresponding problem on windows.\r\n(Also no problem without the `Console.WriteLine` call.)\r\n\r\nDebugging into it with lldb, `target modules list` shows that there are two versions of libcoreclr.so in existence -- one from core_root, and one from the local directory. It looks like one of these has initialized `palEnvironment`, but the other has not."},{"Id":"9795599451","Type":"IssuesEvent","CreatedAt":"2019-06-11T04:32:02","Actor":"noahfalk","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25046","RelatedDescription":"Closed issue \"EventPipe: Stacks for sampling events are being discarded\" (#25046) at dotnet/coreclr","RelatedBody":"Running the stack sampling provider produces events that have no stacks. This appears to be a recent regression between Preview5 and Preview6 and I tracked it to this line:\r\n\r\nhttps://github.com/dotnet/coreclr/blob/master/src/vm/eventpipesession.cpp#L311\r\n\r\nThe line should read:\r\n\r\nm_pBufferManager->WriteEvent(pThread, *this, event, payload, pActivityId, pRelatedActivityId, **pEventThread, pStack**)\r\n\r\ncc @dotnet/dotnet-diag "},{"Id":"9795574503","Type":"IssuesEvent","CreatedAt":"2019-06-11T04:24:02","Actor":"noahfalk","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/21827","RelatedDescription":"Closed issue \"Add MinEventTime and MaxEventTime to the EventBlock in the NetPerf File Format\" (#21827) at dotnet/coreclr","RelatedBody":"The `EventBlock` object that is part of the NetPerf file format as[ described here](https://github.com/Microsoft/perfview/blob/e45ac230931864436cbcf37bb0d26b918c075e10/src/TraceEvent/EventPipe/EventPipeFormat.md#next-objects--the-eventblock-object), can include two additional fields to allow filtering of the data in the file.\r\n\r\nIf we add `MinEventTime` and `MaxEventTime` then a reader can iterate through the blocks and ignore the events they don't care about. This is very useful in a continuous production profiling scenario where the event data is being written to a single file, but you only care about a subset of the data for your transaction of interest be that a database query or http request and you can quickly get to it by skipping the data."},{"Id":"9795455251","Type":"IssuesEvent","CreatedAt":"2019-06-11T03:47:28","Actor":"cshung","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25069","RelatedDescription":"Opened issue \"Skip ForceGC if it is not necessary\" (#25069) at dotnet/coreclr","RelatedBody":"Suppose I have a long-running application (e.g. ASP.NET Core), after taking a heap dump using the ForceGC keyword, the next session should not trigger a ForceGC behavior.\r\n\r\n**Repro**\r\n\r\n1. Create a .NET Core 3 console application that blocks on `Console.ReadLine()`.\r\n2. Launch it under a native debugger\r\n3. Set a breakpoint on `ETW::GCLog::ForceGC`\r\n4. Launch `dotnet-trace` with the ForceGC keyword enabled\r\n5. Launch another `dotnet-trace` with the ForceGC keyword disabled\r\n\r\n**Expected**: The second session does not hit the `ForceGC` breakpoint.\r\n**Actual**: The second session does hit the `ForceGC` breakpoint.\r\n\r\n@dotnet/dotnet-diag "},{"Id":"9795304498","Type":"IssuesEvent","CreatedAt":"2019-06-11T03:03:40","Actor":"noahfalk","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/20555","RelatedDescription":"Closed issue \"Address Thread Scalability in EventPipe Traces\" (#20555) at dotnet/coreclr","RelatedBody":"Currently the way EventPipe's StackSampler works is that every millisecond it stops each thread and takes a stack trace.  \r\n\r\nThis works well when there are a modest number of threads (say < 100), but comes excessive in both collection overhead and file size overhead when the number of threads is large (e.g. > 500).\r\n\r\nI don't have the example handy anymore but it is not hard to replicate (simply have a app that has say 500 sleeping threads among other activities).     It is a real-world problem because it is not uncommon for users to have at least 100s of threads in a process.   \r\n\r\nThe rough solution is to avoid crawling threads that are blocked since the last sample, at least most of the time.   This could be done by modifying the TransitionFrame that has a bit that starts out 0 when it is initialized, that we can later set.   Thus we set it when we track the thread, and if it remains set we know it was not popped .   This allows us to skip threads that are no 'moving' quickly (and not log them).    This cuts both cost and (more importantly) file size.  We now only log threads that are not blocked.  \r\n\r\n@noahfalk  @brianrob @jorive"},{"Id":"9795160398","Type":"IssuesEvent","CreatedAt":"2019-06-11T02:24:15","Actor":"noahfalk","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/20751","RelatedDescription":"Closed issue \"Optimize the size of the EventPipe buffer\" (#20751) at dotnet/coreclr","RelatedBody":"Currently we don't try to do any size optimization on the events put in the EventPipe.   In particular we allocate 16 byte entries for related activity IDs (which are almost always 0), and (more importantly) we store stacks as list of 64 byte quantities.   \r\n\r\nToday we use a fair bit of memory (1GB), for this and we could cut this substantially (e.g. by half or more), if we did even modest optimizations (Delta compress stacks, omit unused related activity IDs etc.    This would both save memory and be more cache friendly.   \r\n\r\nFor stacks, ideally we could 'intern' them (giving stacks IDs and reusing the 'tails' of the stacks),  This will have a DRAMATIC effect on size, and it is what ETW does (so we kind of know the tradeoff is worth it).  \r\n\r\n@noahfalk "},{"Id":"9795066704","Type":"IssuesEvent","CreatedAt":"2019-06-11T01:58:19","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25068","RelatedDescription":"Opened issue \"[Test failed] tracing_eventcounter._pollingcounter_pollingcounter_._pollingcounter_pollingcounter_sh\" (#25068) at dotnet/coreclr","RelatedBody":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-outerloop-jitstress/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190609.1/workItem/PayloadGroup0/analysis/xunit/tracing_eventcounter._pollingcounter_pollingcounter_~2F_pollingcounter_pollingcounter_sh\r\n\r\n**Failed tests:**\r\ntracing_eventcounter._pollingcounter_pollingcounter_._pollingcounter_pollingcounter_sh\r\n\r\n**Log:**\r\n```\r\nReturn code:      1\r\nRaw output file:      /root/helix/work/workitem/tracing/eventcounter/Reports/tracing.eventcounter/pollingcounter/pollingcounter.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n/root/helix/work/correlation/corerun pollingcounter.exe ''\r\nTest Failed\r\nExpected: 100\r\nActual: 1\r\nEND EXECUTION - FAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=/root/helix/work/correlation\r\n> /root/helix/work/workitem/tracing/eventcounter/pollingcounter/pollingcounter.sh\r\nExpected: True\r\nActual:   False\r\n```\r\n"},{"Id":"9795055164","Type":"IssuesEvent","CreatedAt":"2019-06-11T01:55:06","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/25067","RelatedDescription":"Opened issue \"[Test failed] ilasm_System._Runtime_CompilerServices_MethodImplOptionsTests_MethodImplOptionsTests_._Runtime_CompilerServices_MethodImplOptionsTests_MethodImplOptionsTests_sh\" (#25067) at dotnet/coreclr","RelatedBody":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-outerloop-jitstress/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190609.1/workItem/PayloadGroup0/analysis/xunit/ilasm_System._Runtime_CompilerServices_MethodImplOptionsTests_MethodImplOptionsTests_~2F_Runtime_CompilerServices_MethodImplOptionsTests_MethodImplOptionsTests_sh\r\n\r\n**Failed tests:**\r\nilasm_System._Runtime_CompilerServices_MethodImplOptionsTests_MethodImplOptionsTests_._Runtime_CompilerServices_MethodImplOptionsTests_MethodImplOptionsTests_sh\r\n\r\n**Log:**\r\n```\r\nStack overflow.\r\n/root/helix/work/workitem/ilasm/System/Runtime/CompilerServices/MethodImplOptionsTests/MethodImplOptionsTests.sh: line 252: 10806 Aborted                 (core dumped) $LAUNCHER $ExePath \\\"${CLRTestExecutionArguments[@]}\\\"\r\n\r\nReturn code:      1\r\nRaw output file:      /root/helix/work/workitem/ilasm/System/Reports/ilasm.System/Runtime/CompilerServices/MethodImplOptionsTests/MethodImplOptionsTests.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n/root/helix/work/correlation/corerun MethodImplOptionsTests.exe ''\r\nAggressiveOptimizationTest\r\n\r\nAssembling 'MiAggressiveOptimization.il'  to DLL --> 'MiAggressiveOptimization.dll'\r\nSource file is ANSI\r\n\r\nAssembled method Program::Main\r\nCreating PE file\r\n\r\nEmitting classes:\r\nClass 1:\\tProgram\r\n\r\nEmitting fields and methods:\r\nGlobal \\t\r\nClass 1\\tMethods: 1;\\t\r\n\r\nEmitting events and properties:\r\nGlobal \\t\r\nClass 1\\t\r\nWriting PE file\r\nOperation completed successfully\r\nExpected: 100\r\nActual: 134\r\nEND EXECUTION - FAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=/root/helix/work/correlation\r\n> /root/helix/work/workitem/ilasm/System/Runtime/CompilerServices/MethodImplOptionsTests/MethodImplOptionsTests.sh\r\nExpected: True\r\nActual:   False\r\n```"},{"Id":"9794964392","Type":"PullRequestEvent","CreatedAt":"2019-06-11T01:29:45","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25066","RelatedDescription":"Opened pull request \"Delete dead code\" (#25066) at dotnet/coreclr","RelatedBody":""}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"9795246729","Type":"IssuesEvent","CreatedAt":"2019-06-11T02:47:40","Actor":"friedrich-brunzema","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/11524","RelatedDescription":"Opened issue \"dotnet publish -f netcoreapp2.2 mysolution.sln should publish netcoreapp2.2 targets in solution but not generate errors for .netstandard2.2 projects in solution\" (#11524) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n1. Create 3 projects\r\n   - dotnet new classlib\r\n   - dotnet new nunit\r\n   - dotnet new console\r\n2. Link all 3 projects into a .sln file (t.sln)\r\n3. Both nunit and console project reference classlib as project reference\r\n4. run: dotnet publish -f netcoreapp2.2 t.sln\r\n\r\n## Expected  behavior\r\nNo errors, Netcore projects (nunit, console) publish to the publish folder for both projects.  Class library does not publish, because -f netcoreapp2.2 was selected, not netstandard2.2. Also -- dotnet publish -f netstandard t.sln publishes only the class lib with its dependencies.\r\nNo empty classlib/bin/Debug/netcoreapp2.2 folder present\r\nDuring the build, a message is shown that project classlib is not being published, because it does not match the requested target framework type.\r\n \r\n## Actual behavior\r\nError message is shown in RED.  Note that both netcore projects do publish correctly with the dependencies present.\r\nEmpty ./classlib/bin/Debug/netcoreapp2.2 is created.\r\n\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 49.54 ms for /Users/Friedrich/tmp/t/unittest/unittest.csproj.\r\n  Restore completed in 49.09 ms for /Users/Friedrich/tmp/t/netcore/netcore.csproj.\r\n  Restore completed in 49.09 ms for /Users/Friedrich/tmp/t/classlib/classlib.csproj.\r\n/usr/local/share/dotnet/sdk/2.2.105/Sdks/Microsoft.NET.Sdk/targets/Microsoft.PackageDependencyResolution.targets(208,5): error NETSDK1005: Assets file '/Users/Friedrich/tmp/t/classlib/obj/project.assets.json' doesn't have a target for '.NETCoreApp,Version=v2.2'. Ensure that restore has run and that you have included 'netcoreapp2.2' in the TargetFrameworks for your project. [/Users/Friedrich/tmp/t/classlib/classlib.csproj]\r\n  classlib -> /Users/Friedrich/tmp/t/classlib/bin/Debug/netstandard2.0/classlib.dll\r\n  netcore -> /Users/Friedrich/tmp/t/netcore/bin/Debug/netcoreapp2.2/netcore.dll\r\n  netcore -> /Users/Friedrich/tmp/t/netcore/bin/Debug/netcoreapp2.2/publish/\r\n  unittest -> /Users/Friedrich/tmp/t/unittest/bin/Debug/netcoreapp2.2/unittest.dll\r\n  unittest -> /Users/Friedrich/tmp/t/unittest/bin/Debug/netcoreapp2.2/publish/\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.105\r\n Commit:    7cecb35b92\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.2.105/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.3\r\n  Commit:  6b8ad509b6\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0-preview2-003148 [/usr/local/share/dotnet/sdk]\r\n  1.0.0-preview2-1-003177 [/usr/local/share/dotnet/sdk]\r\n  1.0.0-preview3-004056 [/usr/local/share/dotnet/sdk]\r\n  1.0.0-preview4-004233 [/usr/local/share/dotnet/sdk]\r\n  1.0.1 [/usr/local/share/dotnet/sdk]\r\n  2.0.0-preview1-005977 [/usr/local/share/dotnet/sdk]\r\n  2.0.0-preview2-006497 [/usr/local/share/dotnet/sdk]\r\n  2.0.0 [/usr/local/share/dotnet/sdk]\r\n  2.1.4 [/usr/local/share/dotnet/sdk]\r\n  2.1.101 [/usr/local/share/dotnet/sdk]\r\n  2.1.302 [/usr/local/share/dotnet/sdk]\r\n  2.2.103 [/usr/local/share/dotnet/sdk]\r\n  2.2.105 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.4 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0-preview1-002111-00 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0-preview2-25407-01 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"9794784633","Type":"IssuesEvent","CreatedAt":"2019-06-11T00:34:18","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/11523","RelatedDescription":"Opened issue \"Improvements to global.json.\" (#11523) at dotnet/cli","RelatedBody":"This epic tracks the work for improving the SDK versioning in global.json."},{"Id":"9794784041","Type":"IssuesEvent","CreatedAt":"2019-06-11T00:34:09","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/11522","RelatedDescription":"Opened issue \"Review global.json design document.\" (#11522) at dotnet/cli","RelatedBody":""}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"9792006912","Type":"IssuesEvent","CreatedAt":"2019-06-10T16:19:02","Actor":"vixisoft","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1242","RelatedDescription":"Opened issue \"ExcludeFromCodeCoverageAttribute should have Justification property\" (#1242) at dotnet/standard","RelatedBody":"Hi,\r\n\r\nWe are trying to build our Organisation Framework for DotNetCore and while we tried to test everything, some of the methods cannot be tested directly. (EF Core Wrapper mainly)\r\n\r\nSo we added the Attribute ExcludeFromCodeCoverage but we are not satisfied with the attribute.\r\n\r\nFirst, it doesn't have any Justification property so it not clear for other person why this has been added. ( Missing expertise to test ?, Cannot be tested ?, why !)\r\n\r\nSecond, it cannot be inherited because its marked as sealed class...\r\n\r\nThere is no way we can use this attribute to help others ?\r\nTelling them why this is in place?\r\n\r\nWe put the justification in the summary at the moment but i feel it's the worse place to put it...\r\n\r\nBecause:\r\n- it's added to the documentation when it shouldn't.\r\n- Someone can erase the summary because it has been refactored or anything and kill the justification. If it was in Justification property of the attribute we could at leat keep it safe until we judge that it can be removed and tested!\r\n\r\nCan you modify this attribute? \r\nOr how can i add this justification without putting it in the summary of the method / class ?"},{"Id":"9790643648","Type":"PullRequestEvent","CreatedAt":"2019-06-10T13:16:45","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1241","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1241) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190609.5\r\n- **Date Produced**: 6/10/2019 12:19 AM\r\n- **Commit**: 7e56d8bd8b224d834b782a98bfd7035f71c3f547\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19309.5\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19309.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19309.5\r\n\r\n"},{"Id":"9790574213","Type":"PullRequestEvent","CreatedAt":"2019-06-10T13:06:39","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1241","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1241) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190609.5\r\n- **Date Produced**: 6/10/2019 12:19 AM\r\n- **Commit**: 7e56d8bd8b224d834b782a98bfd7035f71c3f547\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19309.5\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19309.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19309.5\r\n\r\n"},{"Id":"9790256440","Type":"PullRequestEvent","CreatedAt":"2019-06-10T12:14:25","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1240","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1240) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190609.1\r\n- **Date Produced**: 6/9/2019 12:42 PM\r\n- **Commit**: 45361625125cdd3119050a852bd73163ca4b73f4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19309.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19309.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19309.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19309.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19309.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19309.1\r\n\r\n"},{"Id":"9790201603","Type":"PullRequestEvent","CreatedAt":"2019-06-10T12:04:19","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1240","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1240) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190609.1\r\n- **Date Produced**: 6/9/2019 12:42 PM\r\n- **Commit**: 45361625125cdd3119050a852bd73163ca4b73f4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19309.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19309.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19309.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19309.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19309.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19309.1\r\n\r\n"},{"Id":"9786021280","Type":"PullRequestEvent","CreatedAt":"2019-06-09T13:13:58","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1239","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1239) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190609.1\r\n- **Date Produced**: 6/9/2019 11:19 AM\r\n- **Commit**: 48c3adf8ad0256689375060437c2e6262d5e805a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19309.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19309.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19309.1\r\n\r\n"},{"Id":"9786002269","Type":"PullRequestEvent","CreatedAt":"2019-06-09T13:03:53","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1239","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1239) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190609.1\r\n- **Date Produced**: 6/9/2019 11:19 AM\r\n- **Commit**: 48c3adf8ad0256689375060437c2e6262d5e805a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19309.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19309.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19309.1\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"9795769832","Type":"PullRequestEvent","CreatedAt":"2019-06-11T05:22:58","Actor":"bartonjs","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/38439","RelatedDescription":"Opened pull request \"Add S.S.C.Pkcs and S.S.C.Cng netstandard2.1 ref and lib\" (#38439) at dotnet/corefx","RelatedBody":"The netstandard2.1 ref is equivalent to the netcoreapp3.0 ref in these two\r\nOOB packages.\r\n\r\nRef changes:\r\n\r\nCng:\r\n* Adds DSACng and ECDiffieHellmanCng (and related types)\r\n\r\nPkcs:\r\n* Adds RSA-OAEP option to CmsRecipient\r\n* Adds custom private key option to CmsSigner\r\n* Adds custom private key decrypt option to EnvelopedCms\r\n* Adds Pkcs12Info and Pkcs12Builder (and associated types)\r\n* Adds Pkcs8PrivateKeyInfo\r\n* Adds RFC3161 timestamp types\r\n* Adds AddCertificate/RemoveCertificate to SignedCms\r\n* Adds AddUnsignedAttribute/RemoveUnsignedAttribute to SignerInfo\r\n* Adds SignatureAlgorithm/GetSignature to SignerInfo\r\n* Adds MatchesCertificate to SubjectIdentifier\r\n\r\nImpl changes:\r\n\r\nCng:\r\n* The netstandard2.1 impl is a generated PNSE, the real impl is inbox on Windows.\r\n\r\nPkcs:\r\n* The impls are the same as the netcoreapp3.0 impls, but are required\r\nbecause netstandard2.0 is a better match for netstandard2.1 than netcoreapp3.0 is.\r\n\r\nFixes #36062."},{"Id":"9795679376","Type":"PullRequestEvent","CreatedAt":"2019-06-11T04:57:00","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/38308","RelatedDescription":"Merged pull request \"[3.0 Bug fix]Fix JsonSerializer.WriteAsync\" (#38308) at dotnet/corefx","RelatedBody":"fixes https://github.com/dotnet/corefx/issues/38294\r\n\r\nProblem found, `continueWriting` is evaluated after `flush data` check.\r\nI don't know if it's ok add `Outerloop` test @davidfowl will test data always available?\r\nThe bug depends on data format flushThreshold and bytes pending.\r\n\r\ncc @rynowak @steveharter @ahsonkhan @JeremyKuhne"},{"Id":"9795679355","Type":"IssuesEvent","CreatedAt":"2019-06-11T04:57:00","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/38294","RelatedDescription":"Closed issue \"Writing large JsonElement via JsonSerializer.WriteAsync hangs\" (#38294) at dotnet/corefx","RelatedBody":"There's a bug in the writing loop that causes writing a JsonElement to hang forever. Here's the sample code:\r\n\r\n```C#\r\nvar json = await new HttpClient().GetStringAsync(\"https://raw.githubusercontent.com/davidfowl/AspNetCoreDiagnosticScenarios/master/Scenarios/pokemon.json\");\r\nvar root = JsonSerializer.Parse<JsonElement>(json);\r\nvar ms = new MemoryStream();\r\nawait JsonSerializer.WriteAsync(root, root.GetType(), ms);\r\n```\r\n\r\ncc @rynowak @steveharter @ahsonkhan @JeremyKuhne "},{"Id":"9795369071","Type":"PullRequestEvent","CreatedAt":"2019-06-11T03:22:06","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/38438","RelatedDescription":"Merged pull request \"Add debug state machine tracking to GoAwayFrame_NoPendingStreams_ConnectionClosed test\" (#38438) at dotnet/corefx","RelatedBody":"As was done in a similar test in https://github.com/dotnet/corefx/pull/38345.\r\ncc: @krwq, @wfurt"},{"Id":"9795282856","Type":"IssuesEvent","CreatedAt":"2019-06-11T02:57:40","Actor":"meygnanamp","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/38394","RelatedDescription":"Closed issue \"HangFire is not Fire in IIS\" (#38394) at dotnet/corefx","RelatedBody":"Hi All,\r\nI have created a Dot Core 2.1 WebAPI. Working fine in Machine, but when I hosted in IIS it is throwing an error.\r\n\r\nI have changed the below setting and hosted in IIS.\r\n\r\n <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n    <IsServiceFabricServiceProject>True</IsServiceFabricServiceProject>\r\n    <RuntimeIdentifier>win7-x64</RuntimeIdentifier>\r\n    <TargetLatestRuntimePatch>False</TargetLatestRuntimePatch>\r\n    <AspNetCoreHostingModel>InProcess</AspNetCoreHostingModel>\r\n  </PropertyGroup>\r\n\r\n\r\n\r\nSystem.AggregateException\r\nOne or more errors occurred. (The SSL connection could not be established, see inner exception.)\r\n\r\nSystem.AggregateException: One or more errors occurred. (The SSL connection could not be established, see inner exception.) ---> System.Net.Http.HttpRequestException: The SSL connection could not be established, see inner exception. ---> System.Security.Authentication.AuthenticationException: The remote certificate is invalid according to the validation procedure.\r\n   at System.Net.Security.SslState.StartSendAuthResetSignal(ProtocolToken message, AsyncProtocolRequest asyncRequest, ExceptionDispatchInfo exception)\r\n   at System.Net.Security.SslState.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartReadFrame(Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartReadFrame(Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.PartialFrameCallback(AsyncProtocolRequest asyncRequest)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Security.SslState.ThrowIfExceptional()\r\n   at System.Net.Security.SslState.InternalEndProcessAuthentication(LazyAsyncResult lazyResult)\r\n   at System.Net.Security.SslState.EndProcessAuthentication(IAsyncResult result)\r\n   at System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult asyncResult)\r\n   at System.Net.Security.SslStream.<>c.<AuthenticateAsClientAsync>b__47_1(IAsyncResult iar)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at System.Net.Http.HttpConnectionPool.CreateConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at System.Net.Http.HttpConnectionPool.WaitForCreatedConnectionAsync(ValueTask`1 creationTask)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   --- End of inner exception stack trace ---\r\n   at HangFireJobs.Controllers.ValuesController.ScheduledJobs(String APIURL, String APIMethod) in C:\\Users\\meygnanam.p\\source\\repos\\HangFireJobs\\HangFireJobs\\Controllers\\ValuesController.cs:line 42\r\n---> (Inner Exception #0) System.Net.Http.HttpRequestException: The SSL connection could not be established, see inner exception. ---> System.Security.Authentication.AuthenticationException: The remote certificate is invalid according to the validation procedure.\r\n   at System.Net.Security.SslState.StartSendAuthResetSignal(ProtocolToken message, AsyncProtocolRequest asyncRequest, ExceptionDispatchInfo exception)\r\n   at System.Net.Security.SslState.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartReadFrame(Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartReadFrame(Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.PartialFrameCallback(AsyncProtocolRequest asyncRequest)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Security.SslState.ThrowIfExceptional()\r\n   at System.Net.Security.SslState.InternalEndProcessAuthentication(LazyAsyncResult lazyResult)\r\n   at System.Net.Security.SslState.EndProcessAuthentication(IAsyncResult result)\r\n   at System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult asyncResult)\r\n   at System.Net.Security.SslStream.<>c.<AuthenticateAsClientAsync>b__47_1(IAsyncResult iar)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at System.Net.Http.HttpConnectionPool.CreateConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at System.Net.Http.HttpConnectionPool.WaitForCreatedConnectionAsync(ValueTask`1 creationTask)\r\n   at System.Threading.Tasks.ValueTask`1.get_Result()\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n\r\nRegards,\r\nMeygnanam. P"},{"Id":"9795107257","Type":"PullRequestEvent","CreatedAt":"2019-06-11T02:09:38","Actor":"lmolkova","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/38406","RelatedDescription":"Merged pull request \"Fix review comments in #38280\" (#38406) at dotnet/corefx","RelatedBody":"See #38280"},{"Id":"9795095220","Type":"PullRequestEvent","CreatedAt":"2019-06-11T02:06:11","Actor":"davidsh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/38377","RelatedDescription":"Merged pull request \"Rework Linux/Kerberos native interop layer\" (#38377) at dotnet/corefx","RelatedBody":"The latest changes to the System.Net.Security.Native shim layer fixed a lot of important\r\nbugs for Linux Kerberos usage. But this created a new problem since SqlClient ships\r\nin out-of-band NuGet packages separate from the .NET Core runtime. SqlClient builds\r\nout of the CoreFx repo and uses the common source includes for Kerberos authentication.\r\nThis created an unexpected dependency on the System.Net.Security.Native shim layer.\r\nThe recent changes to these API signatures caused problems with different combinations\r\nof SqlClient NuGet packages and .NET Core 2.x versus .NET Core 3.0.\r\n\r\nAfter discussion with the SqlClient team, we decided to rework the changes to these\r\nnative APIs so that they would remain compatible across all .NET Core versions.\r\n\r\nLong-term, the plan is to implement #36896 to expose a Kerberos API in .NET Core which\r\ncould be used by SqlClient and other consumers.\r\n\r\nCloses #37183\r\nCloses #25205"},{"Id":"9795095204","Type":"IssuesEvent","CreatedAt":"2019-06-11T02:06:11","Actor":"davidsh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/25205","RelatedDescription":"Closed issue \"System.Data.SqlClient packaging\" (#25205) at dotnet/corefx","RelatedBody":"From https://github.com/dotnet/corefx/pull/25134#discussion_r150415393:\r\n\r\n> And for better or worse, we already have some such dependencies, e.g. System.Data.SqlClient isn't part of the .NET Runtime download but it does P/Invoke into the System.Net.Security.Native.so/dylib shim.\r\n\r\nWe either need to fix that, or we need to add a test coverage to ensure that you can mix and match different versions of .NET Core Runtime (that bundles `System.Net.Security.Native.so/dylib`) with different versions of `System.Data.SqlClient` and document/enforce the supported mixing and matching.\r\n\r\nThe packaging for `System.Data.SqlClient` is suspect in general: All build configurations in https://github.com/dotnet/corefx/blob/master/src/System.Data.SqlClient/src/Configurations.props are netstandard. How am I going to get the .NET Core shims that the implementation depends on when I install it on Mono?"},{"Id":"9795095196","Type":"IssuesEvent","CreatedAt":"2019-06-11T02:06:11","Actor":"davidsh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/37183","RelatedDescription":"Closed issue \"Out-of-band System.Data.SqlClient depends on inbox native shims\" (#37183) at dotnet/corefx","RelatedBody":"SqlClient out-of-band netstandard packages depend on .NET Core native shims:\r\n\r\nhttps://github.com/dotnet/corefx/blob/master/src/System.Data.SqlClient/src/System.Data.SqlClient.csproj#L481-L483\r\n\r\nThe native shims are not compatible between .NET Core versions, e.g. ImportPrincipalName got changed to ImportTargetName in dotnet/corefx#35383.\r\n\r\nThis leads to failures when the netstandard SqlClient package is used on a different version of .NET Core than what it was build on, e.g. https://github.com/dotnet/corert/issues/7353"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"9795649169","Type":"PullRequestEvent","CreatedAt":"2019-06-11T04:47:47","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36298","RelatedDescription":"Merged pull request \"Merge release/dev16.2-preview3 to release/dev16.2-preview3-vs-deps\" (#36298) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.2-preview3 into release/dev16.2-preview3-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-preview3-to-release/dev16.2-preview3-vs-deps\ngit reset --hard upstream/release/dev16.2-preview3-vs-deps\ngit merge upstream/release/dev16.2-preview3\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-preview3-to-release/dev16.2-preview3-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9795648940","Type":"PullRequestEvent","CreatedAt":"2019-06-11T04:47:42","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36300","RelatedDescription":"Merged pull request \"Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps\" (#36300) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.3-preview1 into release/dev16.3-preview1-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps\ngit reset --hard upstream/release/dev16.3-preview1-vs-deps\ngit merge upstream/release/dev16.3-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9795641518","Type":"PullRequestEvent","CreatedAt":"2019-06-11T04:45:17","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36303","RelatedDescription":"Opened pull request \"Merge master to features/param-nullchecking\" (#36303) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9795641247","Type":"PullRequestEvent","CreatedAt":"2019-06-11T04:45:13","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36302","RelatedDescription":"Opened pull request \"Merge master-vs-deps to features/razorSupport2\" (#36302) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master-vs-deps into features/razorSupport2.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-features/razorSupport2\ngit reset --hard upstream/features/razorSupport2\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-features/razorSupport2 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9795640994","Type":"PullRequestEvent","CreatedAt":"2019-06-11T04:45:09","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36301","RelatedDescription":"Opened pull request \"Merge master to features/lspSupport\" (#36301) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/lspSupport.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9795640759","Type":"PullRequestEvent","CreatedAt":"2019-06-11T04:45:04","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36300","RelatedDescription":"Opened pull request \"Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps\" (#36300) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.3-preview1 into release/dev16.3-preview1-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps\ngit reset --hard upstream/release/dev16.3-preview1-vs-deps\ngit merge upstream/release/dev16.3-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9795640560","Type":"PullRequestEvent","CreatedAt":"2019-06-11T04:45:00","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36299","RelatedDescription":"Opened pull request \"Merge master to master-vs-deps\" (#36299) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9795640397","Type":"PullRequestEvent","CreatedAt":"2019-06-11T04:44:57","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36298","RelatedDescription":"Opened pull request \"Merge release/dev16.2-preview3 to release/dev16.2-preview3-vs-deps\" (#36298) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.2-preview3 into release/dev16.2-preview3-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-preview3-to-release/dev16.2-preview3-vs-deps\ngit reset --hard upstream/release/dev16.2-preview3-vs-deps\ngit merge upstream/release/dev16.2-preview3\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-preview3-to-release/dev16.2-preview3-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"9794759773","Type":"PullRequestEvent","CreatedAt":"2019-06-11T00:26:50","Actor":"Suchiman","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7511","RelatedDescription":"Opened pull request \"Port GC changes from coreclr - 15\" (#7511) at dotnet/corert","RelatedBody":"This port continues https://github.com/dotnet/corert/pull/7508\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/4932d0f6fa87b9a6e3293aacd35cecedde44d87a):**\r\n- https://github.com/dotnet/coreclr/commit/dacab04a17e0cd4ed2b321be936f233cf75bb7e8 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/c1801e85024add717f518feb6a9caed60d54500f (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/5a97d8e9f14763a4ff90d14d045f0173e8d4b944 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/4685a1e008ad7cf4118e8778d89e63d87ca5b7b6 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/23fbf7e7ab231876b9d54b52bac044cdde159118 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/66009329a187634dc432854cdd7c893d972156eb (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/07f9f2f101754c38570ed75ce9a7083090769a0f (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/6100a9faf1c29b06aed3ad5bef00ce905880309d (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/cf887c943bf1dee978bc863b7481686ecee8ad83 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/cc14e6cecf6984c991fe906c9fe4b327b4f93f96 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/67f1116cea421ebbe516fafc963e213cc6f0e117 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/94359a5208206be08ff44a1fc14e0334e2af2071 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/cb8b829fd3717acc2688025341f822e4097cf5c5 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/dd80afe98f969e3a309917643c0e45e83aaa37bf (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/6e629e9ccd58be36fcc858d357cdf0811bdcb380 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/aea3b1a80d6c114e3e67bc9521bf39a8a17371d1 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/98d2b480ff9fc207f568ed2ac8dcbcb7c9d6a719 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/2c6c6c9ffe6ef40320dfce3c6e53e953485f21a6 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/d33f73f69051d2861454081bb3211615413d8ed0 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/060990945a0117cb824b9d1c1e6c3a336533a3ee (manual port)"},{"Id":"9794743463","Type":"PullRequestEvent","CreatedAt":"2019-06-11T00:21:52","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7508","RelatedDescription":"Merged pull request \"Port GC changes from coreclr - 14\" (#7508) at dotnet/corert","RelatedBody":"This port continues https://github.com/dotnet/corert/pull/7495\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/71f259caa6fe9a167be38fa2433003a4c35c9657):**\r\n- https://github.com/dotnet/coreclr/commit/d62143d4ae97833081c5f235a91dea95da4461a0 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/b25304c757219d3103f691f615b5fa70ed22e92e (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/1db91c5acd17384952d1e1f8e3079c2c8cfb78f6 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/aa13ca95d633e9251fa040533d3d5650808455c0 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/03ab0ca0f81313319f30cfd75ee56dc59d71390c (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/616fea550548af750b575f3c304d1a9b4b6ef9a6 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/9107ff1d48a2454d1ac84a8dfa97178809d8e793 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/a28b25aacdcd2adb0fdfa70bd869f53ba6565976 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/ed52a006c01a582d4d34add40c318d6f324b99ba (gc only port, except omitted cgroup conflict)\r\n- https://github.com/dotnet/coreclr/commit/46cbd93c20780bcacd9f39fe18079acf2a9f4178 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/5bb7eb68035e98e356aba68115e28ed22d3d34aa (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/36931ac7b24249201547f7ca667105014b2e4c7f (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/d559d44e02471854748763a6c7eb52cbdc56168f (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/2dfd1779ae9eebe89b223cff6fd77825301971dd (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/bd84f468ac3f82847669d49614d01eba8dd2a9a0 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/0495f7377fca88999d335757e9680052cfedc51d (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/4932d0f6fa87b9a6e3293aacd35cecedde44d87a (gc only port, omitted changes)"},{"Id":"9794742887","Type":"PullRequestEvent","CreatedAt":"2019-06-11T00:21:41","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7509","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7509) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @maryamariyan"},{"Id":"9794673511","Type":"IssuesEvent","CreatedAt":"2019-06-11T00:01:23","Actor":"timmydo","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7510","RelatedDescription":"Opened issue \"CoreRT doesn't support scratch docker image.\" (#7510) at dotnet/corert","RelatedBody":"See also #4552.\r\n\r\nI'd like to create a docker image like this. Sample dockerfile\r\n```\r\nFROM microsoft/dotnet:3.0-sdk AS build\r\nWORKDIR /app\r\nRUN apt-get update && apt-get install -y libkrb5-dev zlib1g-dev clang-3.9\r\nRUN wget https://github.com/dotnet/corert/raw/master/samples/HelloWorld/HelloWorld.csproj https://github.com/dotnet/corert/raw/master/samples/HelloWorld/Program.cs\r\nRUN dotnet restore --runtime linux-x64\r\nRUN dotnet publish -c Release -r linux-x64 -o out\r\n\r\nFROM scratch AS runtime\r\nWORKDIR /app\r\nCOPY --from=build /app/out/* /app/\r\nENTRYPOINT [\"/app/HelloWorld\"] \r\n```\r\n\r\nError: docker run --rm -it a7b54e604622\r\nstandard_init_linux.go:211: exec user process caused \"no such file or directory\"\r\n\r\nIf I change `scratch` to `alpine`:\r\n\r\n```\r\n/app # ldd HelloWorld\r\n        /lib64/ld-linux-x86-64.so.2 (0x7ffa3ddb4000)\r\nError loading shared library libstdc++.so.6: No such file or directory (needed by HelloWorld)\r\n        libdl.so.2 => /lib64/ld-linux-x86-64.so.2 (0x7ffa3ddb4000)\r\n        libm.so.6 => /lib64/ld-linux-x86-64.so.2 (0x7ffa3ddb4000)\r\n        librt.so.1 => /lib64/ld-linux-x86-64.so.2 (0x7ffa3ddb4000)\r\nError loading shared library libgcc_s.so.1: No such file or directory (needed by HelloWorld)\r\n        libpthread.so.0 => /lib64/ld-linux-x86-64.so.2 (0x7ffa3ddb4000)\r\n        libc.so.6 => /lib64/ld-linux-x86-64.so.2 (0x7ffa3ddb4000)\r\nError loading shared library ld-linux-x86-64.so.2: No such file or directory (needed by HelloWorld)\r\nError relocating HelloWorld: _Znam: symbol not found\r\nError relocating HelloWorld: _ZSt9terminatev: symbol not found\r\nError relocating HelloWorld: __cxa_begin_catch: symbol not found\r\nError relocating HelloWorld: __cxa_allocate_exception: symbol not found\r\nError relocating HelloWorld: _ZdlPvRKSt9nothrow_t: symbol not found\r\nError relocating HelloWorld: __cxa_guard_abort: symbol not found\r\nError relocating HelloWorld: __cxa_guard_release: symbol not found\r\nError relocating HelloWorld: _ZdlPv: symbol not found\r\nError relocating HelloWorld: _Znwm: symbol not found\r\nError relocating HelloWorld: _ZdaPv: symbol not found\r\nError relocating HelloWorld: _ZnamRKSt9nothrow_t: symbol not found\r\nError relocating HelloWorld: __cxa_throw: symbol not found\r\nError relocating HelloWorld: __cxa_thread_atexit: symbol not found\r\nError relocating HelloWorld: _Unwind_Resume: symbol not found\r\nError relocating HelloWorld: __cxa_guard_acquire: symbol not found\r\nError relocating HelloWorld: _ZnwmRKSt9nothrow_t: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv120__si_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv120__si_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv120__si_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv120__si_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv120__si_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv120__si_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv120__si_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv120__si_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv117__class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv117__class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv117__class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv117__class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv117__class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv117__class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv117__class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv121__vmi_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv121__vmi_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZSt7nothrow: symbol not found\r\nError relocating HelloWorld: _ZTIPKc: symbol not found\r\nError relocating HelloWorld: __gxx_personality_v0: symbol not found\r\n```\r\n\r\n"},{"Id":"9793932650","Type":"PullRequestEvent","CreatedAt":"2019-06-10T21:14:07","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7509","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7509) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9793809620","Type":"PullRequestEvent","CreatedAt":"2019-06-10T20:54:36","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corert/pull/7508","RelatedDescription":null,"RelatedBody":"This port continues https://github.com/dotnet/corert/pull/7495\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/71f259caa6fe9a167be38fa2433003a4c35c9657):**\r\n- https://github.com/dotnet/coreclr/commit/d62143d4ae97833081c5f235a91dea95da4461a0 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/b25304c757219d3103f691f615b5fa70ed22e92e (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/1db91c5acd17384952d1e1f8e3079c2c8cfb78f6 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/aa13ca95d633e9251fa040533d3d5650808455c0 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/03ab0ca0f81313319f30cfd75ee56dc59d71390c (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/616fea550548af750b575f3c304d1a9b4b6ef9a6 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/9107ff1d48a2454d1ac84a8dfa97178809d8e793 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/a28b25aacdcd2adb0fdfa70bd869f53ba6565976 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/ed52a006c01a582d4d34add40c318d6f324b99ba (gc only port, except omitted cgroup conflict)\r\n- https://github.com/dotnet/coreclr/commit/46cbd93c20780bcacd9f39fe18079acf2a9f4178 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/5bb7eb68035e98e356aba68115e28ed22d3d34aa (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/36931ac7b24249201547f7ca667105014b2e4c7f (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/d559d44e02471854748763a6c7eb52cbdc56168f (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/2dfd1779ae9eebe89b223cff6fd77825301971dd (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/bd84f468ac3f82847669d49614d01eba8dd2a9a0 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/0495f7377fca88999d335757e9680052cfedc51d (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/4932d0f6fa87b9a6e3293aacd35cecedde44d87a (gc only port, omitted changes)"},{"Id":"9793809482","Type":"PullRequestEvent","CreatedAt":"2019-06-10T20:54:34","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/7508","RelatedDescription":"Closed pull request \"Port GC changes from coreclr - 14\" (#7508) at dotnet/corert","RelatedBody":"This port continues https://github.com/dotnet/corert/pull/7495\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/71f259caa6fe9a167be38fa2433003a4c35c9657):**\r\n- https://github.com/dotnet/coreclr/commit/d62143d4ae97833081c5f235a91dea95da4461a0 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/b25304c757219d3103f691f615b5fa70ed22e92e (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/1db91c5acd17384952d1e1f8e3079c2c8cfb78f6 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/aa13ca95d633e9251fa040533d3d5650808455c0 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/03ab0ca0f81313319f30cfd75ee56dc59d71390c (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/616fea550548af750b575f3c304d1a9b4b6ef9a6 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/9107ff1d48a2454d1ac84a8dfa97178809d8e793 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/a28b25aacdcd2adb0fdfa70bd869f53ba6565976 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/ed52a006c01a582d4d34add40c318d6f324b99ba (gc only port, except omitted cgroup conflict)\r\n- https://github.com/dotnet/coreclr/commit/46cbd93c20780bcacd9f39fe18079acf2a9f4178 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/5bb7eb68035e98e356aba68115e28ed22d3d34aa (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/36931ac7b24249201547f7ca667105014b2e4c7f (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/d559d44e02471854748763a6c7eb52cbdc56168f (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/2dfd1779ae9eebe89b223cff6fd77825301971dd (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/bd84f468ac3f82847669d49614d01eba8dd2a9a0 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/0495f7377fca88999d335757e9680052cfedc51d (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/4932d0f6fa87b9a6e3293aacd35cecedde44d87a (gc only port, omitted changes)"},{"Id":"9793770033","Type":"PullRequestEvent","CreatedAt":"2019-06-10T20:48:29","Actor":"Suchiman","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7508","RelatedDescription":"Opened pull request \"Port GC changes from coreclr - 14\" (#7508) at dotnet/corert","RelatedBody":"This port continues https://github.com/dotnet/corert/pull/7495\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/71f259caa6fe9a167be38fa2433003a4c35c9657):**\r\n- https://github.com/dotnet/coreclr/commit/d62143d4ae97833081c5f235a91dea95da4461a0 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/b25304c757219d3103f691f615b5fa70ed22e92e (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/1db91c5acd17384952d1e1f8e3079c2c8cfb78f6 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/aa13ca95d633e9251fa040533d3d5650808455c0 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/03ab0ca0f81313319f30cfd75ee56dc59d71390c (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/616fea550548af750b575f3c304d1a9b4b6ef9a6 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/9107ff1d48a2454d1ac84a8dfa97178809d8e793 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/a28b25aacdcd2adb0fdfa70bd869f53ba6565976 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/ed52a006c01a582d4d34add40c318d6f324b99ba (gc only port, except omitted cgroup conflict)\r\n- https://github.com/dotnet/coreclr/commit/46cbd93c20780bcacd9f39fe18079acf2a9f4178 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/5bb7eb68035e98e356aba68115e28ed22d3d34aa (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/36931ac7b24249201547f7ca667105014b2e4c7f (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/d559d44e02471854748763a6c7eb52cbdc56168f (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/2dfd1779ae9eebe89b223cff6fd77825301971dd (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/bd84f468ac3f82847669d49614d01eba8dd2a9a0 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/0495f7377fca88999d335757e9680052cfedc51d (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/4932d0f6fa87b9a6e3293aacd35cecedde44d87a (gc only port, omitted changes)"},{"Id":"9793659881","Type":"PullRequestEvent","CreatedAt":"2019-06-10T20:31:45","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7495","RelatedDescription":"Merged pull request \"Port GC changes from coreclr - 13\" (#7495) at dotnet/corert","RelatedBody":"This port continues https://github.com/dotnet/corert/pull/7478\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/ca5b0d1caa47abdebac13233553c6e44db2e3168):**\r\n- https://github.com/dotnet/coreclr/commit/a1404cafbe1cd15a5c0cfbd4995ad97694b708bd (manual port)\r\n- https://github.com/dotnet/coreclr/commit/00ab7387d849da889ebf6aac432ec989091bacec (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/00a5ee589b565ebcd068c5851315a997848ed98c (manual port)\r\n- https://github.com/dotnet/coreclr/commit/d82fc2062925ced3fb5c479ff8db7ef61cc4f290 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/35d424404f9930620204f3cc351992c0d9bd3b8a (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/cd1f0d9ad32cacd9d2ac2998f368bc196c40754a (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/73a0bc0d549d1c8e41261891dcc2974fb8024556 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/d1bb5271192ddac3d0d31ee6168afdc3c58f55da (manual port)\r\n- https://github.com/dotnet/coreclr/commit/b67d2fa8fc8cf5b8c41f5c34b1abe31e704386c4 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/af0c1f287d31ca3a641151df60baa7371635f508 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/340b5708ce38230f1af66acf832547996aa0b2ff (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/3ff82040ea7be4f8c260b237690f2f0553c7cac6 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/6fe7effad7fddf8d5dc0b3ac3d5be5ec80e158ff (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/2bf55bc5ca8b09dd26e32a9ee259ab22fb69806b (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/8d6583e38f4e9b00ec21666225760a0df97afaec (skipped, reverted in next commit)\r\n- https://github.com/dotnet/coreclr/commit/53e0cce55692cd568a1dce218a2089146aa8e4f8 (skipped, reverts prior commit)\r\n- https://github.com/dotnet/coreclr/commit/b3859ce4debbeab0c0a04b8a519eded46bf67517 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/171837ddfef844e0f2952b9ce2df5af6bb65848a (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/488d2a70ba59c58b26aa3f4f988a42f6b8927146 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/4a6753dcacf44df6a8e91b91029e4b7a4f12d917 (skipped, cgroups changes)\r\n- https://github.com/dotnet/coreclr/commit/71f259caa6fe9a167be38fa2433003a4c35c9657 (gc only port, omitted changes)"},{"Id":"9793562343","Type":"PullRequestEvent","CreatedAt":"2019-06-10T20:16:39","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7507","RelatedDescription":"Opened pull request \"Constrained calls pt. 2 - actually add constrained type to MethodWithToken\" (#7507) at dotnet/corert","RelatedBody":"This change modifies MethodWithToken to optionally include the constrained type information and changes most places in the CPAOT compiler that were previously passing the separated triplet of MethodDesc / ModuleToken / TypeDesc to use the newly beefed up MethodWithToken.\r\n\r\nAs additional changes of note I removed the \"originalMethod\" parameter to MethodEntrypoint as it was almost unused and I deleted an orphaned method MethodGenericDictionary. I have decided to keep this change mostly mechanical to make git history cleaner.\r\n\r\nThanks\r\n\r\nTomas\r\n"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"9795403898","Type":"IssuesEvent","CreatedAt":"2019-06-11T03:32:08","Actor":"vadi2","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/3309","RelatedDescription":"Closed issue \"\"Application host will not be customised\" - meaning?\" (#3309) at dotnet/sdk","RelatedBody":"I've built an application[1] on .NET Core that runs on Windows, macOS, and Linux and I'd like to reduce the friction involved in getting it running - that is, having to install the runtime separately. I've read the [single-publish](https://github.com/dotnet/designs/blob/master/accepted/single-file/design.md) and [tried out the command](https://travis-ci.com/vadi2/Hammer/builds/114541271#L323) - but I get this warning:\r\n\r\n> The application host executable will not be customized because adding resources requires that the build be performed on Windows (excluding Nano Server).\r\n\r\nWhat does it actually mean? I'm new to the .NET world so I'm not sure what customisations is it actually talking about.\r\n\r\n[1] https://github.com/vadi2/Hammer"},{"Id":"9794862828","Type":"PullRequestEvent","CreatedAt":"2019-06-11T00:58:35","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3316","RelatedDescription":"Merged pull request \"Remove old deps file generation logic\" (#3316) at dotnet/sdk","RelatedBody":"No need to keep both old and new copies anymore.\r\n\r\nThis ends up deleting some of the DependencyContextBuilder unit test coverage, as with the new design the builder depends on the output of ResolvePackageAssets, which isn't so easy to mock."}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"454317423","IsPullRequest":true,"CreatedAt":"2019-06-11T04:33:01","Actor":"jkoritzinsky","Number":"25055","RawContent":null,"Title":"Switch P/Invokes into libcoreclr for the PAL to QCalls","State":"closed","Body":"Fixes #25016 ","Url":"https://github.com/dotnet/coreclr/pull/25055","RelatedDescription":"Closed or merged PR \"Switch P/Invokes into libcoreclr for the PAL to QCalls\" (#25055)"},{"Id":"453959062","IsPullRequest":false,"CreatedAt":"2019-06-11T04:32:01","Actor":"noahfalk","Number":"25046","RawContent":null,"Title":"EventPipe: Stacks for sampling events are being discarded","State":"closed","Body":"Running the stack sampling provider produces events that have no stacks. This appears to be a recent regression between Preview5 and Preview6 and I tracked it to this line:\r\n\r\nhttps://github.com/dotnet/coreclr/blob/master/src/vm/eventpipesession.cpp#L311\r\n\r\nThe line should read:\r\n\r\nm_pBufferManager->WriteEvent(pThread, *this, event, payload, pActivityId, pRelatedActivityId, **pEventThread, pStack**)\r\n\r\ncc @dotnet/dotnet-diag ","Url":"https://github.com/dotnet/coreclr/issues/25046","RelatedDescription":"Closed issue \"EventPipe: Stacks for sampling events are being discarded\" (#25046)"},{"Id":"454467358","IsPullRequest":false,"CreatedAt":"2019-06-11T03:47:27","Actor":"cshung","Number":"25069","RawContent":null,"Title":"Skip ForceGC if it is not necessary","State":"open","Body":"Suppose I have a long-running application (e.g. ASP.NET Core), after taking a heap dump using the ForceGC keyword, the next session should not trigger a ForceGC behavior.\r\n\r\n**Repro**\r\n\r\n1. Create a .NET Core 3 console application that blocks on `Console.ReadLine()`.\r\n2. Launch it under a native debugger\r\n3. Set a breakpoint on `ETW::GCLog::ForceGC`\r\n4. Launch `dotnet-trace` with the ForceGC keyword enabled (do not stop the session)\r\n5. Launch another `dotnet-trace` with the ForceGC keyword disabled\r\n\r\n**Expected**: The second session does not hit the `ForceGC` breakpoint.\r\n**Actual**: The second session does hit the `ForceGC` breakpoint.\r\n\r\n@dotnet/dotnet-diag ","Url":"https://github.com/dotnet/coreclr/issues/25069","RelatedDescription":"Open issue \"Skip ForceGC if it is not necessary\" (#25069)"},{"Id":"454444930","IsPullRequest":false,"CreatedAt":"2019-06-11T01:58:19","Actor":"VincentBu","Number":"25068","RawContent":null,"Title":"[Test failed] tracing_eventcounter._pollingcounter_pollingcounter_._pollingcounter_pollingcounter_sh","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-outerloop-jitstress/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190609.1/workItem/PayloadGroup0/analysis/xunit/tracing_eventcounter._pollingcounter_pollingcounter_~2F_pollingcounter_pollingcounter_sh\r\n\r\n**Failed tests:**\r\ntracing_eventcounter._pollingcounter_pollingcounter_._pollingcounter_pollingcounter_sh\r\n\r\n**Log:**\r\n```\r\nReturn code:      1\r\nRaw output file:      /root/helix/work/workitem/tracing/eventcounter/Reports/tracing.eventcounter/pollingcounter/pollingcounter.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n/root/helix/work/correlation/corerun pollingcounter.exe ''\r\nTest Failed\r\nExpected: 100\r\nActual: 1\r\nEND EXECUTION - FAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=/root/helix/work/correlation\r\n> /root/helix/work/workitem/tracing/eventcounter/pollingcounter/pollingcounter.sh\r\nExpected: True\r\nActual:   False\r\n```\r\n","Url":"https://github.com/dotnet/coreclr/issues/25068","RelatedDescription":"Open issue \"[Test failed] tracing_eventcounter._pollingcounter_pollingcounter_._pollingcounter_pollingcounter_sh\" (#25068)"},{"Id":"454444247","IsPullRequest":false,"CreatedAt":"2019-06-11T01:55:06","Actor":"VincentBu","Number":"25067","RawContent":null,"Title":"[Test failed] ilasm_System._Runtime_CompilerServices_MethodImplOptionsTests_MethodImplOptionsTests_._Runtime_CompilerServices_MethodImplOptionsTests_MethodImplOptionsTests_sh","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-outerloop-jitstress/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190609.1/workItem/PayloadGroup0/analysis/xunit/ilasm_System._Runtime_CompilerServices_MethodImplOptionsTests_MethodImplOptionsTests_~2F_Runtime_CompilerServices_MethodImplOptionsTests_MethodImplOptionsTests_sh\r\n\r\n**Failed tests:**\r\nilasm_System._Runtime_CompilerServices_MethodImplOptionsTests_MethodImplOptionsTests_._Runtime_CompilerServices_MethodImplOptionsTests_MethodImplOptionsTests_sh\r\n\r\n**Log:**\r\n```\r\nStack overflow.\r\n/root/helix/work/workitem/ilasm/System/Runtime/CompilerServices/MethodImplOptionsTests/MethodImplOptionsTests.sh: line 252: 10806 Aborted                 (core dumped) $LAUNCHER $ExePath \\\"${CLRTestExecutionArguments[@]}\\\"\r\n\r\nReturn code:      1\r\nRaw output file:      /root/helix/work/workitem/ilasm/System/Reports/ilasm.System/Runtime/CompilerServices/MethodImplOptionsTests/MethodImplOptionsTests.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n/root/helix/work/correlation/corerun MethodImplOptionsTests.exe ''\r\nAggressiveOptimizationTest\r\n\r\nAssembling 'MiAggressiveOptimization.il'  to DLL --> 'MiAggressiveOptimization.dll'\r\nSource file is ANSI\r\n\r\nAssembled method Program::Main\r\nCreating PE file\r\n\r\nEmitting classes:\r\nClass 1:\\tProgram\r\n\r\nEmitting fields and methods:\r\nGlobal \\t\r\nClass 1\\tMethods: 1;\\t\r\n\r\nEmitting events and properties:\r\nGlobal \\t\r\nClass 1\\t\r\nWriting PE file\r\nOperation completed successfully\r\nExpected: 100\r\nActual: 134\r\nEND EXECUTION - FAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=/root/helix/work/correlation\r\n> /root/helix/work/workitem/ilasm/System/Runtime/CompilerServices/MethodImplOptionsTests/MethodImplOptionsTests.sh\r\nExpected: True\r\nActual:   False\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25067","RelatedDescription":"Open issue \"[Test failed] ilasm_System._Runtime_CompilerServices_MethodImplOptionsTests_MethodImplOptionsTests_._Runtime_CompilerServices_MethodImplOptionsTests_MethodImplOptionsTests_sh\" (#25067)"},{"Id":"454439278","IsPullRequest":true,"CreatedAt":"2019-06-11T01:29:44","Actor":"jkotas","Number":"25066","RawContent":null,"Title":"Delete dead code","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25066","RelatedDescription":"Open PR \"Delete dead code\" (#25066)"},{"Id":"454437214","IsPullRequest":true,"CreatedAt":"2019-06-11T01:18:49","Actor":"tommcdon","Number":"25065","RawContent":null,"Title":"Add ICorDebugChain::GetStackRange error check","State":"open","Body":"Add an error check to ShimChain::GetStackRange to handle a rare case where the debugger stops inside of a IL_STUB_PInvoke frame being called from another IL_STUB_PInvoke frame. In the case I was able to repro the issue the leaf frame was in System.StubHelpers.InterfaceMarshaler.ClearNative, being called by Windows.Data.Xml.Dom.XmlElement.AppendChild in an UWP application.  The stackrange check is a small fix which addresses a bug where calling ICorDebugChain::GetChain on the leaf frame, then GetCaller, GetActiveFrame returns the leaf node frame the previous chain.  The stack range check causes GetChain to fail, which is handled gracefully by the debugger.","Url":"https://github.com/dotnet/coreclr/pull/25065","RelatedDescription":"Open PR \"Add ICorDebugChain::GetStackRange error check\" (#25065)"},{"Id":"454262490","IsPullRequest":true,"CreatedAt":"2019-06-11T00:22:35","Actor":"AviAvni","Number":"25054","RawContent":null,"Title":"fix generic attribute bug when generic attribute has parameters and the parameters","State":"closed","Body":"I'm checking the tests but this fixes the bug","Url":"https://github.com/dotnet/coreclr/pull/25054","RelatedDescription":"Closed or merged PR \"fix generic attribute bug when generic attribute has parameters and the parameters\" (#25054)"},{"Id":"454392608","IsPullRequest":true,"CreatedAt":"2019-06-11T00:22:14","Actor":"janvorli","Number":"25062","RawContent":null,"Title":"Fix inline tracking","State":"closed","Body":"Inline tracking didn't correctly place the right key into the\r\ninline tracking map for generics. The logic places the instantiated\r\nmethoddesc into the tracking map, and then attempts to find it by\r\nlooking up the uninstantiated form. This would generally be a silent\r\nfailure, but in unloadable assembly testing we have an assert that the\r\nCrossLoaderAllocatorHash holds as keys items from a matching\r\nLoaderAllocator.\r\n\r\nThis issue also results in an assert `key->GetLoaderAllocator() ==\r\nm_pLoaderAllocator` in CrossLoaderAllocatorHash when the code is\r\nrunning inside of a collectible AssemblyLoadContext.","Url":"https://github.com/dotnet/coreclr/pull/25062","RelatedDescription":"Closed or merged PR \"Fix inline tracking\" (#25062)"},{"Id":"454423006","IsPullRequest":true,"CreatedAt":"2019-06-11T00:02:40","Actor":"janvorli","Number":"25064","RawContent":null,"Title":"Enable lab support for coreclr tests in unloadable context","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25064","RelatedDescription":"Open PR \"Enable lab support for coreclr tests in unloadable context\" (#25064)"},{"Id":"454416651","IsPullRequest":false,"CreatedAt":"2019-06-10T23:32:34","Actor":"jashook","Number":"25063","RawContent":null,"Title":"[Release 2.1] Official build testing failures","State":"open","Body":"1. Failure in build-test.cmd\r\n\r\n```\r\n\r\n\r\nE:\\A\\_work\\636\\s\\tests\\runtest.proj(304,3): warning MSB4011: \"E:\\A\\_work\\636\\s\\bin\\obj\\BuildVersion-20190530-05.props\" cannot be imported again. It was already imported at \"E:\\A\\_work\\636\\s\\tests\\dir.props (118,3)\". This is most likely a build authoring error. This subsequent import will be ignored. \r\nE:\\A\\_work\\636\\s\\tests\\runtest.proj(304,3): warning MSB4011: \"E:\\A\\_work\\636\\s\\bin\\obj\\BuildVersion-20190530-05.props\" cannot be imported again. It was already imported at \"E:\\A\\_work\\636\\s\\tests\\dir.props (118,3)\". This is most likely a build authoring error. This subsequent import will be ignored. \r\nE:\\A\\_work\\636\\s\\tests\\publishdependency.targets(91,5): error : Lock file E:\\A\\_work\\636\\s\\tests\\src\\Common\\targeting_pack_ref\\obj\\project.assets.json couldn't be found. Run a NuGet package restore to generate this file. [E:\\A\\_work\\636\\s\\tests\\runtest.proj]\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25063","RelatedDescription":"Open issue \"[Release 2.1] Official build testing failures\" (#25063)"},{"Id":"454357252","IsPullRequest":true,"CreatedAt":"2019-06-10T22:44:30","Actor":"lpereira","Number":"25059","RawContent":null,"Title":"Use pread() to read DOS/NT headers when mapping PE files","State":"closed","Body":"Shaves off two syscalls per managed assembly load.\r\n\r\n(Other uses of the file descriptor in this function are only through memory mapping functions, and absolute offsets are used in those cases.  Not changing the file pointer isn't an issue in this case.)\r\n","Url":"https://github.com/dotnet/coreclr/pull/25059","RelatedDescription":"Closed or merged PR \"Use pread() to read DOS/NT headers when mapping PE files\" (#25059)"},{"Id":"454381269","IsPullRequest":true,"CreatedAt":"2019-06-10T21:26:37","Actor":"kouvel","Number":"25061","RawContent":null,"Title":"Track timer count and add Timer.Count","State":"open","Body":"Part of https://github.com/dotnet/corefx/issues/38422\r\n- This part is targeted for 3.0 such that the new property could be used through reflection\r\n- Exposing a public API is targeted for post-3.0","Url":"https://github.com/dotnet/coreclr/pull/25061","RelatedDescription":"Open PR \"Track timer count and add Timer.Count\" (#25061)"},{"Id":"454367321","IsPullRequest":false,"CreatedAt":"2019-06-10T20:52:40","Actor":"noahfalk","Number":"25060","RawContent":null,"Title":"PR 24853 feedback followup","State":"open","Body":"@jorive added some additional feedback to the PR just prior to being ready for checkin. I went ahead and commited, but filed this issue to track addressing those issues.","Url":"https://github.com/dotnet/coreclr/issues/25060","RelatedDescription":"Open issue \"PR 24853 feedback followup\" (#25060)"},{"Id":"453787748","IsPullRequest":true,"CreatedAt":"2019-06-10T20:18:39","Actor":"adamsitnik","Number":"25042","RawContent":null,"Title":"port #24973 into release/2.1","State":"closed","Body":"Port #24973 into release/2.1\r\n\r\nReplaces the lock which caused performance issues for our customers with a lock-free approach.\r\n\r\nBefore:\r\n\r\n![obraz](https://user-images.githubusercontent.com/6011991/59147048-bf8a9000-89f6-11e9-8179-9ca09f479b0e.png)\r\n\r\nAfter:\r\n\r\n![obraz](https://user-images.githubusercontent.com/6011991/59147052-dd57f500-89f6-11e9-9eca-8094676ed048.png)\r\n\r\nNote: in order to implement the lock-free approach I had to switch from map to an array. I used the existing concept from 3.0\r\n\r\n/cc  @wangzhaoguan @danmosemsft \r\n","Url":"https://github.com/dotnet/coreclr/pull/25042","RelatedDescription":"Closed or merged PR \"port #24973 into release/2.1\" (#25042)"},{"Id":"454336902","IsPullRequest":false,"CreatedAt":"2019-06-10T19:38:31","Actor":"crummel","Number":"25058","RawContent":null,"Title":"Source-build patches removal for CoreCLR","State":"open","Body":"Source-build has some patches that we are currently applying to your repo.  This issue tracks removing the patches.  These patches can be found at https://github.com/dotnet/source-build/tree/release/3.0/patches/coreclr.\r\n\r\nPatches that have the responsibility \"Repo\" and the Disposition \"Incorporate\" are patches that we believe are valid source-build fixes that should be moved into your repo.  Please let us know if these don't seem like good patches.  Any changes with the responsibility \"source-build\" is something that we plan to keep going forward or integrate in another way - please also let us know if you think there may be problems with those patches.\r\n\r\nPatch name | Type | Disposition | Responsibility | Notes\r\n-- | -- | -- | -- | --\r\ncoreclr/0001-Allow-separate-tool-and-SDK-directories.patch | Build | Incorporate | Repo |  \r\n\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/25058","RelatedDescription":"Open issue \"Source-build patches removal for CoreCLR\" (#25058)"},{"Id":"454320294","IsPullRequest":false,"CreatedAt":"2019-06-10T19:00:32","Actor":"MichalStrehovsky","Number":"25057","RawContent":null,"Title":"Shouldn't allow randomly placing ByRef-like fields","State":"open","Body":"We should probably prevent loading types that attempt to place byref-like fields at addresses that are not divisible by pointer size.\r\n\r\n```csharp\r\n[StructLayout(LayoutKind.Explicit)]\r\nref struct RefStruct\r\n{\r\n    [FieldOffset(0)]\r\n    public short X;\r\n    [FieldOffset(2)]\r\n    public Span<int> Y;\r\n}\r\n\r\nclass Program\r\n{\r\n    static RefStruct GetRefStruct()\r\n    {\r\n        return new RefStruct { Y = new int[1] { 42 } };\r\n    }\r\n\r\n    static void Collect()\r\n    {\r\n        GC.Collect();\r\n        GC.WaitForPendingFinalizers();\r\n        GC.Collect();\r\n    }\r\n\r\n    static void Main()\r\n    {\r\n        for (int i = 0; i < 1000; i++)\r\n            GC.KeepAlive(new int[8]);\r\n        RefStruct a = GetRefStruct();\r\n        a.X = 1234;\r\n        for (int i = 0; i < 1000; i++)\r\n            GC.KeepAlive(new int[8]);\r\n\r\n        Collect();\r\n        Console.WriteLine(a.X);\r\n        Console.WriteLine(a.Y[0]);\r\n    }\r\n}\r\n```\r\n\r\nThis will print 1234/0 instead of 1234/42 (that gets printed if you remove the `StructLayout(Explicit)`).\r\n\r\nFound while messing around with #25056.","Url":"https://github.com/dotnet/coreclr/issues/25057","RelatedDescription":"Open issue \"Shouldn't allow randomly placing ByRef-like fields\" (#25057)"},{"Id":"454318695","IsPullRequest":true,"CreatedAt":"2019-06-10T18:57:04","Actor":"MichalStrehovsky","Number":"25056","RawContent":null,"Title":"Disqualify byref-like fields from ManagedSequential layout","State":"open","Body":"Seems to do the trick to get packing ignored on ref structs.\r\n\r\nFixes #20794.","Url":"https://github.com/dotnet/coreclr/pull/25056","RelatedDescription":"Open PR \"Disqualify byref-like fields from ManagedSequential layout\" (#25056)"},{"Id":"454144264","IsPullRequest":true,"CreatedAt":"2019-06-10T15:11:05","Actor":"dotnet-maestro[bot]","Number":"25051","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190609.1\r\n- **Date Produced**: 6/9/2019 12:42 PM\r\n- **Commit**: 45361625125cdd3119050a852bd73163ca4b73f4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19309.1\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19309.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19309.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19309.1\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25051","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#25051)"},{"Id":"453922835","IsPullRequest":true,"CreatedAt":"2019-06-10T15:09:13","Actor":"mjsabby","Number":"25044","RawContent":null,"Title":"Use SIZE_T for SectionSize in RegisterFrozenSegment","State":"closed","Body":"I accidentally put SectionSize as INT32. Noticed it when our frozen segment size went over 4GB.","Url":"https://github.com/dotnet/coreclr/pull/25044","RelatedDescription":"Closed or merged PR \"Use SIZE_T for SectionSize in RegisterFrozenSegment\" (#25044)"},{"Id":"454197978","IsPullRequest":true,"CreatedAt":"2019-06-10T14:26:02","Actor":"stephentoub","Number":"25053","RawContent":null,"Title":"Update IEquatable/IComparable<T> for nullability","State":"open","Body":"We need to revise our use of nullable for `IComparable<T>` and `IEquatable<T>`:\r\n- For reference types that implement `IComparable<T>`, the implementation should use `IComparable<T?>`, e.g. `String : IComparable<String?>`, so that the type can be used in methods with a `where T : IComparable<T>` constraint: `IComparable<T>`'s contravariance then allows both `T` and `T?` to work as generic type arguments.\r\n- For reference types that implement `IEquatable<T>`, we can't take advantage of such contravariance, as by design `IEquatable<T>` is invariant (it would be a breaking change to make it contravariant, and even if it wasn't doing so is of questionable design given that equality and inheritance don't mix well).  Given the current language design, we have little option but to explicitly make any reference type implementations of `IEquatable<T>` be oblivious, and also make all `where T : IEquatable<T>` constraints be oblivious.  Otherwise, regardless nullable annotations, a developer will get a warning for using either or both of `T`/`T?` with any given method employing such a constraint.\r\n\r\n@safern, will GenAPI handle this correctly?\r\n\r\ncc: @dotnet/nullablefc, @MadsTorgersen, @gafter, @terrajobst ","Url":"https://github.com/dotnet/coreclr/pull/25053","RelatedDescription":"Open PR \"Update IEquatable/IComparable<T> for nullability\" (#25053)"},{"Id":"454150901","IsPullRequest":false,"CreatedAt":"2019-06-10T12:41:14","Actor":"ateregulov","Number":"25052","RawContent":null,"Title":"GetManifestResourceStream giving Null Reference exception ","State":"open","Body":"            using (var resourceStream = GetType().Assembly.GetManifestResourceStream(\"MyProject.MyFile.pfx\"))\r\n            using (var ms = new MemoryStream())\r\n            {\r\n                resourceStream.Position = 0;\r\n                resourceStream.CopyTo(ms);\r\n                ...\r\n            }\r\n\r\nThis code work on my Ubuntu 18 server with dotnet version 2.2.103\r\n\r\nBut I have error on dotnet version 2.2.300:\r\n\r\nUnhandled Exception: System.ArgumentNullException: Value cannot be null.","Url":"https://github.com/dotnet/coreclr/issues/25052","RelatedDescription":"Open issue \"GetManifestResourceStream giving Null Reference exception \" (#25052)"},{"Id":"453994094","IsPullRequest":false,"CreatedAt":"2019-06-10T04:35:26","Actor":"VincentBu","Number":"25050","RawContent":null,"Title":"Assert failure: 'sz == _idCodeSize'","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-outerloop-jitstress2-jitstressregs/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190609.1/workItem/JIT.Regression.CLR-x86-JIT.V1-M09-M11/analysis/xunit/JIT_Regression._CLR_x86_JIT_V1_M09_5_PDC_b25463_b25463_b25463_~2F_CLR_x86_JIT_V1_M09_5_PDC_b25463_b25463_b25463_cmd\r\n\r\n**Failed tests:**\r\nJIT_Regression._CLR_x86_JIT_V1_M09_5_PDC_b25463_b25463_b25463_._CLR_x86_JIT_V1_M09_5_PDC_b25463_b25463_b25463_cmd\r\n\r\n**Log:**\r\n```\r\nAssert failure(PID 3192 [0x00000c78], Thread: 408 [0x0198]): Assertion failed 'sz == _idCodeSize' in 'ILGEN_0x7122ba20:main():int' (IL size 171)\r\n\r\n    File: f:\\\\workspace\\\\_work\\\\1\\\\s\\\\src\\\\jit\\\\emit.h Line: 888\r\n    Image: C:\\\\dotnetbuild\\\\work\\\\6c91f97e-ceba-49f1-b03d-10156f43cafe\\\\Payload\\\\CoreRun.exe\r\n\r\nReturn code:      1\r\nRaw output file:      C:\\\\dotnetbuild\\\\work\\\\6c91f97e-ceba-49f1-b03d-10156f43cafe\\\\Work\\\\c71234d0-eff6-4156-98e3-78836636de0c\\\\Exec\\\\JIT\\\\Regression\\\\Reports\\\\JIT.Regression\\\\CLR-x86-JIT\\\\V1-M09.5-PDC\\\\b25463\\\\b25463\\\\b25463.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n \\\"C:\\\\dotnetbuild\\\\work\\\\6c91f97e-ceba-49f1-b03d-10156f43cafe\\\\Payload\\\\corerun.exe\\\" b25463.exe \r\nExpected: 100\r\nActual: -1073740286\r\nEND EXECUTION - FAILED\r\nFAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=C:\\\\dotnetbuild\\\\work\\\\6c91f97e-ceba-49f1-b03d-10156f43cafe\\\\Payload\r\n> C:\\\\dotnetbuild\\\\work\\\\6c91f97e-ceba-49f1-b03d-10156f43cafe\\\\Work\\\\c71234d0-eff6-4156-98e3-78836636de0c\\\\Exec\\\\JIT\\\\Regression\\\\CLR-x86-JIT\\\\V1-M09.5-PDC\\\\b25463\\\\b25463\\\\b25463.cmd\r\nExpected: True\r\nActual:   False\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25050","RelatedDescription":"Open issue \"Assert failure: 'sz == _idCodeSize'\" (#25050)"},{"Id":"453965799","IsPullRequest":false,"CreatedAt":"2019-06-10T01:45:52","Actor":"VincentBu","Number":"25049","RawContent":null,"Title":"Assert failure: Consistency check failed: AV in clr at this callstack","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-outerloop-gcstress-extra/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190608.1/workItem/JIT/analysis/xunit/JIT_Performance._CodeQuality_BenchmarksGame_regex_redux_regex_redux_5_regex_redux_5_~2F_CodeQuality_BenchmarksGame_regex_redux_regex_redux_5_regex_redux_5_cmd\r\n\r\n**Failed tests:**\r\nJIT_Performance._CodeQuality_BenchmarksGame_regex_redux_regex_redux_5_regex_redux_5_._CodeQuality_BenchmarksGame_regex_redux_regex_redux_5_regex_redux_5_cmd\r\n\r\n**Log:**\r\n```\r\nAssert failure(PID 3820 [0x00000eec], Thread: 836 [0x0344]): Consistency check failed: AV in clr at this callstack:\r\n------\r\nCORECLR! GetCLRRuntimeHost + 0x5C3910 (0x7313f330)\r\n<no module>! <no symbol> + 0x0 (0x04e6b33b)\r\n<no module>! <no symbol> + 0x0 (0x04e6b2ce)\r\n<no module>! <no symbol> + 0x0 (0x08f24deb)\r\n<no module>! <no symbol> + 0x0 (0x08f24d18)\r\n<no module>! <no symbol> + 0x0 (0x08f242cd)\r\n<no module>! <no symbol> + 0x0 (0x082dedae)\r\n<no module>! <no symbol> + 0x0 (0x079ff540)\r\n<no module>! <no symbol> + 0x0 (0x082da446)\r\n<no module>! <no symbol> + 0x0 (0x082da3c6)\r\n<no module>! <no symbol> + 0x0 (0x08f23523)\r\n<no module>! <no symbol> + 0x0 (0x082da1c2)\r\n<no module>! <no symbol> + 0x0 (0x082d9b3e)\r\n<no module>! <no symbol> + 0x0 (0x082d97f2)\r\n<no module>! <no symbol> + 0x0 (0x082d9404)\r\n<no module>! <no symbol> + 0x0 (0x082d932b)\r\n<no module>! <no symbol> + 0x0 (0x082d6bfb)\r\nCORECLR! GetCLRRuntimeHost + 0x266BB9 (0x72de25d9)\r\nCORECLR! GetCLRRuntimeHost + 0x266D36 (0x72de2756)\r\n-----\r\n.AV on tid=0x344 (836), cxr=0910E3F0, exr=0910E3A0\r\nFAILED: false\r\n\r\nCORECLR! coreclr_shutdown_2 + 0xAADA (0x72b4828a)\r\nCORECLR! GetCLRRuntimeHost + 0x2D64E (0x72ba906e)\r\nCORECLR! GetCLRRuntimeHost + 0x2D2B4 (0x72ba8cd4)\r\nCORECLR! GetCLRRuntimeHost + 0x2D25E (0x72ba8c7e)\r\nCORECLR! GetCLRRuntimeHost + 0x2D888 (0x72ba92a8)\r\nNTDLL! LdrSetAppCompatDllRedirectionCallback + 0x1CB63 (0x779304c3)\r\nNTDLL! RtlUnwind + 0x1BA (0x778f051a)\r\nNTDLL! KiUserExceptionDispatcher + 0xF (0x77900fff)\r\n<no module>! <no symbol> + 0x0 (0x04e6b33b)\r\n<no module>! <no symbol> + 0x0 (0x04e6b2ce)\r\n    File: f:\\\\workspace\\\\_work\\\\1\\\\s\\\\src\\\\vm\\\\excep.cpp Line: 7601\r\n    Image: C:\\\\dotnetbuild\\\\work\\\\9b9a56fc-7ac1-4b06-9241-faeab9e86a1c\\\\Payload\\\\CoreRun.exe\r\n\r\n\r\nReturn code:      1\r\nRaw output file:      C:\\\\dotnetbuild\\\\work\\\\9b9a56fc-7ac1-4b06-9241-faeab9e86a1c\\\\Work\\\\85330283-2dc8-4728-8b9e-6f908e4b4b25\\\\Exec\\\\JIT\\\\Performance\\\\Reports\\\\JIT.Performance\\\\CodeQuality\\\\BenchmarksGame\\\\regex-redux\\\\regex-redux-5\\\\regex-redux-5.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n \\\"C:\\\\dotnetbuild\\\\work\\\\9b9a56fc-7ac1-4b06-9241-faeab9e86a1c\\\\Payload\\\\corerun.exe\\\" regex-redux-5.exe \r\nExpected: 100\r\nActual: -1073740286\r\nEND EXECUTION - FAILED\r\nFAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=C:\\\\dotnetbuild\\\\work\\\\9b9a56fc-7ac1-4b06-9241-faeab9e86a1c\\\\Payload\r\n> C:\\\\dotnetbuild\\\\work\\\\9b9a56fc-7ac1-4b06-9241-faeab9e86a1c\\\\Work\\\\85330283-2dc8-4728-8b9e-6f908e4b4b25\\\\Exec\\\\JIT\\\\Performance\\\\CodeQuality\\\\BenchmarksGame\\\\regex-redux\\\\regex-redux-5\\\\regex-redux-5.cmd\r\nExpected: True\r\nActual:   False\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25049","RelatedDescription":"Open issue \"Assert failure: Consistency check failed: AV in clr at this callstack\" (#25049)"},{"Id":"453965194","IsPullRequest":false,"CreatedAt":"2019-06-10T01:41:27","Actor":"VincentBu","Number":"25048","RawContent":null,"Title":"Assert failure: _safePointDecoder.IsSafePoint(curOffs)","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-outerloop-gcstress-extra/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190608.1/workItem/baseservices.threading/analysis/xunit/baseservices_threading._interlocked_compareexchange_compareexchangeobject_compareexchangeobject_~2F_interlocked_compareexchange_compareexchangeobject_compareexchangeobject_sh\r\n\r\n**Failed tests**\r\nbaseservices_threading._interlocked_compareexchange_compareexchangeobject_compareexchangeobject_._interlocked_compareexchange_compareexchangeobject_compareexchangeobject_sh\r\n\r\n**Log:**\r\n```\r\nAssert failure(PID 1564 [0x0000061c], Thread: 1978 [0x07ba]): _safePointDecoder.IsSafePoint(curOffs)\r\n    File: /__w/4/s/src/vm/eetwain.cpp Line: 5015\r\n    Image: /root/helix/work/correlation/corerun\r\n\r\n/root/helix/work/workitem/baseservices/threading/interlocked/compareexchange/compareexchangeobject/compareexchangeobject.sh: line 252:  1564 Aborted                 (core dumped) $LAUNCHER $ExePath \\\"${CLRTestExecutionArguments[@]}\\\"\r\n\r\nReturn code:      1\r\nRaw output file:      /root/helix/work/workitem/baseservices/threading/Reports/baseservices.threading/interlocked/compareexchange/compareexchangeobject/compareexchangeobject.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\r\n/root/helix/work/correlation/corerun compareexchangeobject.exe ''\r\nExpected: 100\r\nActual: 134\r\nEND EXECUTION - FAILED\r\nTest Harness Exitcode is : 1\r\nTo run the test:\r\n> set CORE_ROOT=/root/helix/work/correlation\r\n> /root/helix/work/workitem/baseservices/threading/interlocked/compareexchange/compareexchangeobject/compareexchangeobject.sh\r\nExpected: True\r\nActual:   False\r\n```\r\n","Url":"https://github.com/dotnet/coreclr/issues/25048","RelatedDescription":"Open issue \"Assert failure: _safePointDecoder.IsSafePoint(curOffs)\" (#25048)"},{"Id":"453962302","IsPullRequest":true,"CreatedAt":"2019-06-10T01:20:31","Actor":"Marusyk","Number":"25047","RawContent":null,"Title":"Change exception throwing in Path.GetRelativePath","State":"open","Body":"Related to https://github.com/dotnet/corefx/issues/38197\r\n\r\nPlease review.\r\nThank you in advance","Url":"https://github.com/dotnet/coreclr/pull/25047","RelatedDescription":"Open PR \"Change exception throwing in Path.GetRelativePath\" (#25047)"},{"Id":"453943067","IsPullRequest":true,"CreatedAt":"2019-06-09T21:45:37","Actor":"danmosemsft","Number":"25045","RawContent":null,"Title":"Show nested exceptions more clearly","State":"open","Body":"Possible fix for https://github.com/dotnet/corefx/issues/37816\r\n\r\n### Changes made\r\n1. Put messages from nested inner exceptions on their own line. This is to avoid the 600 char+ lines.\r\n1. Format inner exceptions in a central place. This also fixes a bug in AggregateException where it would output one inner exception twice.\r\n1. Indent output from inner exceptions. This is to make it clear which contain which.\r\n1. Remove dividing markers for compactness. This is because indent makes them unnecessary.\r\n\r\n### Did not change\r\n1. Existing message content. This means that AggregateException's message still aggregates all interior messages to whatever length. (I did tweak ArgumentException message to be a single line though)\r\n1. Existing ordering of outer->inner messages followed by inner->outer stacks. In the deepest part of the indentation the innermost exception message and stack are still together.\r\n\r\n### Examples\r\n\r\nShould change [this](https://github.com/dotnet/corefx/issues/37815#issue-446260820) from #37815 into more like [this](https://gist.github.com/danmosemsft/bd374185bec6db4ebaaa7092ed73f239) which removes duplication and draws the eye to the innermost exception, which in this case is the root cause.\r\n\r\nAlso [this](https://gist.github.com/danmosemsft/7f40cd33d91d55602403f2d383096e33) from #38293 to [this](https://gist.github.com/danmosemsft/536a74c5516328c9ecad2a5272182fbd). Again, half as long and it's easy to see which stack goes with which message.\r\n\r\nOutput of [this test program](https://gist.github.com/danmosemsft/03f6c6086f2d6937790bd8800cbee4f4) was [this](https://gist.github.com/danmosemsft/c24a671ce7d3623ad616e7fd94929042) is now [this](https://gist.github.com/danmosemsft/aeb8488430e9c30136ae3b799f545c80).\r\n\r\nThoughts?","Url":"https://github.com/dotnet/coreclr/pull/25045","RelatedDescription":"Open PR \"Show nested exceptions more clearly\" (#25045)"},{"Id":"453798613","IsPullRequest":true,"CreatedAt":"2019-06-08T14:41:19","Actor":"Dotnet-GitSync-Bot","Number":"25043","RawContent":null,"Title":"Mirror changes from dotnet/corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**\n\n cc @MichalStrehovsky","Url":"https://github.com/dotnet/coreclr/pull/25043","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert\" (#25043)"},{"Id":"453769437","IsPullRequest":false,"CreatedAt":"2019-06-08T14:15:44","Actor":"AndreasTruetschel","Number":"25041","RawContent":null,"Title":"System.InvalidProgramException when stackalloc'ing a span of ints","State":"closed","Body":"I run into a `System.InvalidProgramException` when I try to stackalloc a `Span<int>` via\r\n```\r\nSpan<int> columnWidths = stackalloc int[dataDebuggerPreview.ColumnView.Length];\r\n```\r\nThis occurs on Windows 10 (x64) with .Net Core 3.0 preview 5.  \r\n\r\nRepro:  \r\n[TaxiFarePrediction.zip](https://github.com/dotnet/coreclr/files/3268322/TaxiFarePrediction.zip)\r\n\r\nMemory-dump:  \r\n[TaxiFarePrediction_MemDump.zip](https://github.com/dotnet/coreclr/files/3268323/TaxiFarePrediction.zip)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/25041","RelatedDescription":"Closed issue \"System.InvalidProgramException when stackalloc'ing a span of ints\" (#25041)"},{"Id":"453768223","IsPullRequest":true,"CreatedAt":"2019-06-08T07:50:42","Actor":"mikedn","Number":"25040","RawContent":null,"Title":"Update JIT dumps in RyuJIT overview doc","State":"open","Body":"I've set out to update the JIT dumps but I also fixed some out of date info such as notes about long gone `TreeNodeInfo`, since it was near by.","Url":"https://github.com/dotnet/coreclr/pull/25040","RelatedDescription":"Open PR \"Update JIT dumps in RyuJIT overview doc\" (#25040)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"454455448","IsPullRequest":false,"CreatedAt":"2019-06-11T02:47:40","Actor":"friedrich-brunzema","Number":"11524","RawContent":null,"Title":"dotnet publish -f netcoreapp2.2 mysolution.sln should publish netcoreapp2.2 targets in solution but not generate errors for .netstandard2.2 projects in solution","State":"open","Body":"## Steps to reproduce\r\n1. Create 3 projects\r\n   - dotnet new classlib\r\n   - dotnet new nunit\r\n   - dotnet new console\r\n2. Link all 3 projects into a .sln file (t.sln)\r\n3. Both nunit and console project reference classlib as project reference\r\n4. run: dotnet publish -f netcoreapp2.2 t.sln\r\n\r\n## Expected  behavior\r\nNo errors, Netcore projects (nunit, console) publish to the publish folder for both projects.  Class library does not publish, because -f netcoreapp2.2 was selected, not netstandard2.2. Also -- dotnet publish -f netstandard t.sln publishes only the class lib with its dependencies.\r\nNo empty classlib/bin/Debug/netcoreapp2.2 folder present\r\nDuring the build, a message is shown that project classlib is not being published, because it does not match the requested target framework type.\r\n \r\n## Actual behavior\r\nError message is shown in RED.  Note that both netcore projects do publish correctly with the dependencies present.\r\nEmpty ./classlib/bin/Debug/netcoreapp2.2 is created.\r\n\r\nMicrosoft (R) Build Engine version 15.9.20+g88f5fadfbe for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 49.54 ms for /Users/Friedrich/tmp/t/unittest/unittest.csproj.\r\n  Restore completed in 49.09 ms for /Users/Friedrich/tmp/t/netcore/netcore.csproj.\r\n  Restore completed in 49.09 ms for /Users/Friedrich/tmp/t/classlib/classlib.csproj.\r\n/usr/local/share/dotnet/sdk/2.2.105/Sdks/Microsoft.NET.Sdk/targets/Microsoft.PackageDependencyResolution.targets(208,5): error NETSDK1005: Assets file '/Users/Friedrich/tmp/t/classlib/obj/project.assets.json' doesn't have a target for '.NETCoreApp,Version=v2.2'. Ensure that restore has run and that you have included 'netcoreapp2.2' in the TargetFrameworks for your project. [/Users/Friedrich/tmp/t/classlib/classlib.csproj]\r\n  classlib -> /Users/Friedrich/tmp/t/classlib/bin/Debug/netstandard2.0/classlib.dll\r\n  netcore -> /Users/Friedrich/tmp/t/netcore/bin/Debug/netcoreapp2.2/netcore.dll\r\n  netcore -> /Users/Friedrich/tmp/t/netcore/bin/Debug/netcoreapp2.2/publish/\r\n  unittest -> /Users/Friedrich/tmp/t/unittest/bin/Debug/netcoreapp2.2/unittest.dll\r\n  unittest -> /Users/Friedrich/tmp/t/unittest/bin/Debug/netcoreapp2.2/publish/\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.105\r\n Commit:    7cecb35b92\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.2.105/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.3\r\n  Commit:  6b8ad509b6\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0-preview2-003148 [/usr/local/share/dotnet/sdk]\r\n  1.0.0-preview2-1-003177 [/usr/local/share/dotnet/sdk]\r\n  1.0.0-preview3-004056 [/usr/local/share/dotnet/sdk]\r\n  1.0.0-preview4-004233 [/usr/local/share/dotnet/sdk]\r\n  1.0.1 [/usr/local/share/dotnet/sdk]\r\n  2.0.0-preview1-005977 [/usr/local/share/dotnet/sdk]\r\n  2.0.0-preview2-006497 [/usr/local/share/dotnet/sdk]\r\n  2.0.0 [/usr/local/share/dotnet/sdk]\r\n  2.1.4 [/usr/local/share/dotnet/sdk]\r\n  2.1.101 [/usr/local/share/dotnet/sdk]\r\n  2.1.302 [/usr/local/share/dotnet/sdk]\r\n  2.2.103 [/usr/local/share/dotnet/sdk]\r\n  2.2.105 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.4 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0-preview1-002111-00 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0-preview2-25407-01 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11524","RelatedDescription":"Open issue \"dotnet publish -f netcoreapp2.2 mysolution.sln should publish netcoreapp2.2 targets in solution but not generate errors for .netstandard2.2 projects in solution\" (#11524)"},{"Id":"454429140","IsPullRequest":false,"CreatedAt":"2019-06-11T00:34:17","Actor":"peterhuene","Number":"11523","RawContent":null,"Title":"Improvements to global.json.","State":"open","Body":"This epic tracks the work for improving the SDK versioning in global.json.","Url":"https://github.com/dotnet/cli/issues/11523","RelatedDescription":"Open issue \"Improvements to global.json.\" (#11523)"},{"Id":"454429106","IsPullRequest":false,"CreatedAt":"2019-06-11T00:34:09","Actor":"peterhuene","Number":"11522","RawContent":null,"Title":"Review global.json design document.","State":"open","Body":"Issue to track the review of the proposed changes to global.json for SDK versioning.","Url":"https://github.com/dotnet/cli/issues/11522","RelatedDescription":"Open issue \"Review global.json design document.\" (#11522)"},{"Id":"454421574","IsPullRequest":false,"CreatedAt":"2019-06-10T23:55:56","Actor":"StephenWeatherford","Number":"11521","RawContent":null,"Title":"dotnet-install.cmd fails if install path contains a space","State":"open","Body":"## Steps to reproduce\r\nOn Windows, run this:\r\n```\r\ndotnet-install.cmd -InstallDir \"c:\\Users\\<user>\\AppData\\Roaming\\Code - Insiders\\User\\globalStorage\\ms-vscode.sample-extension\\.dotnet\\2.2.0\" -Runtime dotnet -Version 2.2.0\r\n```\r\n\r\n## Expected  behavior\r\nShould install\r\n\r\n## Actual behavior\r\nGives an error:\r\n```\r\nArchitecture not supported. If you think this is a bug, please report it at https://github.com/dotnet/cli/issues\r\n```\r\n\r\nThe path is correctly interpreted by the batch file, but PowerShell is getting a corrupted value for the $Archtecture parameter (`\"Insiders\\User\\globalStorage\\ms-vscode.sample-extension\\.dotnet\\2.2.0\"`)\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700-preview-009597 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700-preview-009601 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009677 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.105 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download","Url":"https://github.com/dotnet/cli/issues/11521","RelatedDescription":"Open issue \"dotnet-install.cmd fails if install path contains a space\" (#11521)"},{"Id":"452954384","IsPullRequest":true,"CreatedAt":"2019-06-10T20:31:46","Actor":"v-zbsail","Number":"11500","RawContent":null,"Title":"LOC CHECKIN | dotnet/cli master | 20190606","State":"closed","Body":"- If this PR should not run tests add text \"skip[REMOVE_THIS]ci[REMOVE_THIS]please\" (remove the marked text, no quotes).\r\n- Add description for changes you are making.\r\n- If there is an issue related to this PR, add the reference.\r\n","Url":"https://github.com/dotnet/cli/pull/11500","RelatedDescription":"Closed or merged PR \"LOC CHECKIN | dotnet/cli master | 20190606\" (#11500)"},{"Id":"454354479","IsPullRequest":false,"CreatedAt":"2019-06-10T20:21:32","Actor":"crummel","Number":"11520","RawContent":null,"Title":"CLI should not use stage0 SDK for reference assemblies","State":"open","Body":"CLI currently uses the stage0 SDK in its build for reference assemblies.  In source-build, CoreFX is always built before CLI, so CLI can use up-to-date reference assemblies from there instead.\r\n\r\ncc @dseefeld","Url":"https://github.com/dotnet/cli/issues/11520","RelatedDescription":"Open issue \"CLI should not use stage0 SDK for reference assemblies\" (#11520)"},{"Id":"454336101","IsPullRequest":false,"CreatedAt":"2019-06-10T19:36:40","Actor":"jjxtra","Number":"11519","RawContent":null,"Title":"Cannot publish self contained of an exe that references another exe project","State":"open","Body":"## Steps to reproduce\r\nCreate two csproj, both exe console application\r\nHave one csproj reference the other\r\nAttempt to: dotnet publish -r linux-64 --self-contained -o ./publish\r\nYou will get a runtime identifier error, even though -r is passed\r\nNow set a <RuntimeIdentifier> to the referenced exe project in the csproj to 'win-x86'.\r\nNow run the dotnet publish command from above again. It works.\r\n\r\nSeems like a bug in the publish command to me.\r\n\r\nCommit that fixed it: https://github.com/DigitalRuby/IPBan/commit/2ae556ab5acdaef8f1e2805cb643c2afd6d1fc7f\r\n\r\nI have other private repo with an exe that references this project. Could not get dotnet publish to work until I added a runtimeidentifier to the csproj. Weird.\r\n\r\nFor reference, here is my publish command:\r\n`dotnet publish PrivateService.csproj -f netcoreapp2.2 -o ./package/linux-x64 -c Release -r linux-x64 --self-contained true`\r\n\r\nPrivateService.csproj is an exe that references IPBan.csproj.","Url":"https://github.com/dotnet/cli/issues/11519","RelatedDescription":"Open issue \"Cannot publish self contained of an exe that references another exe project\" (#11519)"},{"Id":"454335953","IsPullRequest":false,"CreatedAt":"2019-06-10T19:36:20","Actor":"crummel","Number":"11518","RawContent":null,"Title":"Source-build patch removal for CLI","State":"open","Body":"Source-build has some patches that we are currently applying to your repo.  This issue tracks removing the patches.  These patches can be found at https://github.com/dotnet/source-build/tree/release/3.0/patches/cli.\r\n\r\nPatches that have the responsibility \"Repo\" and the Disposition \"Incorporate\" are patches that we believe are valid source-build fixes that should be moved into your repo.  Please let us know if these don't seem like good patches.  Any changes with the responsibility \"source-build\" is something that we plan to keep going forward or integrate in another way - please also let us know if you think there may be problems with those patches.\r\n\r\n\r\nPatch name | Type | Disposition | Responsibility | Notes\r\n-- | -- | -- | -- | --\r\ncli/0001-Implement-PVP-repo-API.patch | Flow | Incorporate | Repo |  \r\ncli/0002-Exclude-test-projects-from-source-build.patch | ProjRemoval | Incorporate | Repo |  \r\ncli/0003-Add-repo-specific-target-emptying-file.patch | Build | Incorporate | Repo |  \r\ncli/0004-Consolidate-Newtonsoft.Json-versions.patch | No-op | Remove | source-build | Rebased after CLI took the fix but due to a whitespace diff this patch   remained although it does nothing.\r\ncli/0005-Disable-signing.patch | Build | Unknown | source-build | Tomas suggested that we should be able to open-sign things in   source-build.  Needs investigation.\r\ncli/0006-Remove-keys-from-InternalsVisibleTo.patch | Build | Unknown | source-build | This shouldn't be necessary if CLI correctly doesn't build tests in   source-build.  Could be either of our   problems.\r\ncli/0007-Consolidate-CommandLine-versions.patch | Bug | RepoRemoval | Repo | This was an additional workaround for the cli-migrate signing issue and   should go away when that does.\r\ncli/0008-Add-LangVersion-to-CLI.patch | ToolCompat | Remove | source-build |  \r\ncli/0009-Revert-to-using-Newtonsoft.Json.patch | ToolCompat | Remove | source-build |  \r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11518","RelatedDescription":"Open issue \"Source-build patch removal for CLI\" (#11518)"},{"Id":"453605768","IsPullRequest":true,"CreatedAt":"2019-06-10T17:38:11","Actor":"livarcocc","Number":"11508","RawContent":null,"Title":"Re-enabling the fedora 27 leg.","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11508","RelatedDescription":"Closed or merged PR \"Re-enabling the fedora 27 leg.\" (#11508)"},{"Id":"453891585","IsPullRequest":true,"CreatedAt":"2019-06-10T12:43:10","Actor":"dotnet-maestro[bot]","Number":"11514","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190608.1\r\n- **Date Produced**: 6/8/2019 12:46 PM\r\n- **Commit**: 7788b6e7602502abcb56e8d0e00c498ad4ae5664\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19308.1\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190609.1\r\n- **Date Produced**: 6/9/2019 12:45 PM\r\n- **Commit**: b4a3c0ac00cb996590ce71edca4755202ec4a3c7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19309.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11514","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11514)"},{"Id":"454137769","IsPullRequest":true,"CreatedAt":"2019-06-10T12:41:19","Actor":"dotnet-maestro[bot]","Number":"11517","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190609.1\r\n- **Date Produced**: 6/9/2019 12:42 PM\r\n- **Commit**: 45361625125cdd3119050a852bd73163ca4b73f4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19309.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11517","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11517)"},{"Id":"453996036","IsPullRequest":true,"CreatedAt":"2019-06-10T04:47:06","Actor":"vagisha-nidhi","Number":"11516","RawContent":null,"Title":"Updating TP version to 16.2 preview","State":"open","Body":"Release: [https://github.com/microsoft/vstest/releases/tag/v16.2.0-preview-20190606-02](https://github.com/microsoft/vstest/releases/tag/v16.2.0-preview-20190606-02)\r\n","Url":"https://github.com/dotnet/cli/pull/11516","RelatedDescription":"Open PR \"Updating TP version to 16.2 preview\" (#11516)"},{"Id":"453920142","IsPullRequest":false,"CreatedAt":"2019-06-09T17:32:23","Actor":"wli3","Number":"11515","RawContent":null,"Title":"Change all aspnet feed","State":"open","Body":"the feed is out of date and aspnet no longer publish to it\r\nhttps://github.com/dotnet/sdk/blob/4005bb6a11e492e03f784b5bde9ed5e438224374/src/Tests/Microsoft.NET.TestFramework/NuGetConfigWriter.cs#L13 \r\n\r\nThis is the update to date list\r\nhttps://github.com/aspnet/AspNetCore/blob/master/docs/DailyBuilds.md","Url":"https://github.com/dotnet/cli/issues/11515","RelatedDescription":"Open issue \"Change all aspnet feed\" (#11515)"},{"Id":"453891253","IsPullRequest":true,"CreatedAt":"2019-06-09T12:36:05","Actor":"dotnet-maestro[bot]","Number":"11513","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190608.1\r\n- **Date Produced**: 6/8/2019 12:50 PM\r\n- **Commit**: 747a1bdf2a74a486fb075045cb2384fa89a7983c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19308.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11513","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11513)"},{"Id":"453820473","IsPullRequest":false,"CreatedAt":"2019-06-08T18:11:15","Actor":"hoyho","Number":"11512","RawContent":null,"Title":"dotnet restore not resolving content/contentfiles","State":"open","Body":"## Steps to reproduce\r\n1. create a nuget pack by running `dotnet pack xxx.csproj`\r\nhere is the xxx.csproj\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n    <!--\r\n    <OutputType>exe</OutputType>\r\n   -->\r\n    <PackageId>WegouSharp</PackageId>\r\n    <Version>0.0.2</Version>\r\n    <Authors>Hoyho</Authors>\r\n    <Company>here2say</Company>\r\n    <Title>wechat public account scrawler helper</Title>\r\n    <Owners>Hoyho</Owners>\r\n    <RepositoryUrl>https://github.com/hoyho/WeGouSharp</RepositoryUrl>\r\n    <Description>a powerful spider tool for wechat official account</Description>\r\n\r\n\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Autofac\" Version=\"4.8.0\" />\r\n    <PackageReference Include=\"CoreCompat.System.Drawing\" Version=\"1.0.0-beta006\" />\r\n    <PackageReference Include=\"HtmlAgilityPack\" Version=\"1.6.11\" />\r\n    <PackageReference Include=\"log4net\" Version=\"2.0.8\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration\" Version=\"2.0.2\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration.Binder\" Version=\"2.0.2\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration.Json\" Version=\"2.0.1\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.DependencyInjection\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"11.0.1-beta3\" />\r\n    <PackageReference Include=\"Selenium.WebDriver\" Version=\"3.141.0\" />\r\n    <PackageReference Include=\"OpenCvSharp3-AnyCPU\" Version=\"3.3.1.20171117\" />\r\n    <PackageReference Include=\"System.Text.Encoding.CodePages\" Version=\"4.5.0\" />\r\n    <PackageReference Include=\"RestSharp\" Version=\"106.3.1\" />\r\n    <!--\r\n            <PackageReference Include=\"OpenCvSharp3-WithoutDll\" Version=\"3.3.1.20171117\" /> \r\n        -->\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <Content Include=\"log4net.config\" >\r\n    <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory> \r\n      <Pack>true</Pack>\r\n    </Content>\r\n  </ItemGroup>\r\n\r\n  \r\n\r\n  <ItemGroup>\r\n    <Content Include=\"Resource\\**\" >\r\n    <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory> \r\n      <Pack>true</Pack>\r\n    </Content>\r\n  </ItemGroup>\r\n\r\n  \r\n  \r\n  <ItemGroup>\r\n    <None Update=\"wegousharpsettings.json\" CopyToOutputDirectory=\"PreserveNewest\" Pack=\"true\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n// successful to generate a nupkg with desired content files\r\nunzip the package\r\n```bash\r\n tree\r\n.\r\n├── WegouSharp.nuspec\r\n├── [Content_Types].xml\r\n├── _rels\r\n├── content\r\n│   ├── Resource\r\n│   │   ├── firefox_linux\r\n│   │   │   └── readme.txt\r\n│   │   ├── firefox_mac\r\n│   │   │   └── readme.txt\r\n│   │   ├── firefox_windows\r\n│   │   │   └── readme.txt\r\n│   │   └── geckodriver\r\n│   │       ├── linux\r\n│   │       │   ├── geckodriver\r\n│   │       │   ├── geckodriver.sh\r\n│   │       │   └── prune.sh\r\n│   │       ├── mac\r\n│   │       │   ├── geckodriver\r\n│   │       │   ├── geckodriver.sh\r\n│   │       │   └── prune.sh\r\n│   │       └── windows\r\n│   │           └── geckodriver.exe\r\n│   ├── log4net.config\r\n│   └── wegousharpsettings.json\r\n├── contentFiles\r\n│   └── any\r\n│       └── netstandard2.0\r\n│           ├── Resource\r\n│           │   ├── firefox_linux\r\n│           │   │   └── readme.txt\r\n│           │   ├── firefox_mac\r\n│           │   │   └── readme.txt\r\n│           │   ├── firefox_windows\r\n│           │   │   └── readme.txt\r\n│           │   └── geckodriver\r\n│           │       ├── linux\r\n│           │       │   ├── geckodriver\r\n│           │       │   ├── geckodriver.sh\r\n│           │       │   └── prune.sh\r\n│           │       ├── mac\r\n│           │       │   ├── geckodriver\r\n│           │       │   ├── geckodriver.sh\r\n│           │       │   └── prune.sh\r\n│           │       └── windows\r\n│           │           └── geckodriver.exe\r\n│           ├── log4net.config\r\n│           └── wegousharpsettings.json\r\n├── lib\r\n│   └── netstandard2.0\r\n│       └── WeGouSharp.dll\r\n└── package\r\n    └── services\r\n        └── metadata\r\n            └── core-properties\r\n                └── db2a29ba32c1405288e17306384292a9.psmdcp\r\n\r\n```\r\nIt also have a new nuspec file:\r\n\r\n`❯ cat WegouSharp.nuspec.txt`\r\n\r\n```xml\r\n﻿<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd\">\r\n  <metadata>\r\n    <id>WegouSharp</id>\r\n    <version>0.0.1</version>\r\n    <title>wechat public account scrawler helper</title>\r\n    <authors>Hoyho</authors>\r\n    <owners>Hoyho</owners>\r\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <description>a powerful spider tool for wechat official account</description>\r\n    <repository url=\"https://github.com/hoyho/WeGouSharp\" />\r\n    <dependencies>\r\n      <group targetFramework=\".NETStandard2.0\">\r\n        <dependency id=\"Autofac\" version=\"4.8.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"CoreCompat.System.Drawing\" version=\"1.0.0-beta006\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"HtmlAgilityPack\" version=\"1.6.11\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"Microsoft.Extensions.Configuration\" version=\"2.0.2\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"Microsoft.Extensions.Configuration.Binder\" version=\"2.0.2\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"Microsoft.Extensions.Configuration.Json\" version=\"2.0.1\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"Microsoft.Extensions.DependencyInjection\" version=\"2.0.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"Newtonsoft.Json\" version=\"11.0.1-beta3\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"OpenCvSharp3-AnyCPU\" version=\"3.3.1.20171117\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"RestSharp\" version=\"106.3.1\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"Selenium.WebDriver\" version=\"3.141.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"System.Text.Encoding.CodePages\" version=\"4.5.0\" exclude=\"Build,Analyzers\" />\r\n        <dependency id=\"log4net\" version=\"2.0.8\" exclude=\"Build,Analyzers\" />\r\n      </group>\r\n    </dependencies>\r\n    <contentFiles>\r\n      <files include=\"any/netstandard2.0/log4net.config\" buildAction=\"Content\" />\r\n      <files include=\"any/netstandard2.0/Resource/firefox_linux/readme.txt\" buildAction=\"Content\" />\r\n      <files include=\"any/netstandard2.0/Resource/firefox_mac/readme.txt\" buildAction=\"Content\" />\r\n      <files include=\"any/netstandard2.0/Resource/firefox_windows/readme.txt\" buildAction=\"Content\" />\r\n      <files include=\"any/netstandard2.0/Resource/geckodriver/linux/geckodriver\" buildAction=\"Content\" />\r\n      <files include=\"any/netstandard2.0/Resource/geckodriver/linux/geckodriver.sh\" buildAction=\"Content\" />\r\n      <files include=\"any/netstandard2.0/Resource/geckodriver/linux/prune.sh\" buildAction=\"Content\" />\r\n      <files include=\"any/netstandard2.0/Resource/geckodriver/mac/geckodriver\" buildAction=\"Content\" />\r\n      <files include=\"any/netstandard2.0/Resource/geckodriver/mac/geckodriver.sh\" buildAction=\"Content\" />\r\n      <files include=\"any/netstandard2.0/Resource/geckodriver/mac/prune.sh\" buildAction=\"Content\" />\r\n      <files include=\"any/netstandard2.0/Resource/geckodriver/windows/geckodriver.exe\" buildAction=\"Content\" />\r\n      <files include=\"any/netstandard2.0/wegousharpsettings.json\" buildAction=\"None\" />\r\n    </contentFiles>\r\n  </metadata>\r\n</package>\r\n```\r\n\r\n\r\n2. upload generated nupack file to nuget \r\nhttps://www.nuget.org/packages/WegouSharp/0.0.2\r\n\r\n3. add package an another project\r\n```bash\r\n❯ ls\r\nHostRunner.csproj Program.cs        appsettings.json  bin               demo.nuspec       log               log4net.config    obj\r\n\r\n/tmp/samples/HostRunner\r\n❯ dotnet add package WegouSharp --version 0.0.2\r\n```\r\n\r\n4. build project\r\n`dotnet build`\r\n\r\n5. list build output\r\n```bash\r\n/tmp/samples/HostRunner\r\n❯ ls bin/Debug/netcoreapp2.0\r\nHostRunner.deps.json              HostRunner.dll                    HostRunner.pdb                    HostRunner.runtimeconfig.dev.json HostRunner.runtimeconfig.json\r\n```\r\n\r\n## Expected  behavior\r\nbuild result should have the content or resource that have include in previous nupkg \r\n\r\n## Actual behavior\r\n`dotnet restore` will not include content or static resource ?\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n❯ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.107\r\n Commit:    2212cac826\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.13\r\n OS Platform: Darwin\r\n RID:         osx.10.13-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.2.107/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.5\r\n  Commit:  0a3c9209c0\r\n\r\n.NET Core SDKs installed:\r\n  2.1.401 [/usr/local/share/dotnet/sdk]\r\n  2.2.107 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11512","RelatedDescription":"Open issue \"dotnet restore not resolving content/contentfiles\" (#11512)"},{"Id":"453787341","IsPullRequest":true,"CreatedAt":"2019-06-08T12:40:57","Actor":"dotnet-maestro[bot]","Number":"11510","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190607.62\r\n- **Date Produced**: 6/8/2019 3:43 AM\r\n- **Commit**: 29999b2846623e2d96733577165968d09bc2bcc1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19307.62\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11510","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11510)"},{"Id":"453787722","IsPullRequest":true,"CreatedAt":"2019-06-08T12:40:26","Actor":"dotnet-maestro[bot]","Number":"11511","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190607.1\r\n- **Date Produced**: 6/7/2019 12:47 PM\r\n- **Commit**: e75673a5cdb9bd131d350c827f0da665e38157ce\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19307.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11511","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11511)"},{"Id":"453627489","IsPullRequest":true,"CreatedAt":"2019-06-07T19:59:05","Actor":"wli3","Number":"11509","RawContent":null,"Title":"Update user facing string","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11509","RelatedDescription":"Closed or merged PR \"Update user facing string\" (#11509)"},{"Id":"453500200","IsPullRequest":true,"CreatedAt":"2019-06-07T12:57:08","Actor":"vagisha-nidhi","Number":"11507","RawContent":null,"Title":"Updating TP version 16.2 preview","State":"open","Body":"Release: [https://github.com/microsoft/vstest/releases/tag/v16.2.0-preview-20190606-02](https://github.com/microsoft/vstest/releases/tag/v16.2.0-preview-20190606-02\r\n)","Url":"https://github.com/dotnet/cli/pull/11507","RelatedDescription":"Open PR \"Updating TP version 16.2 preview\" (#11507)"},{"Id":"453481949","IsPullRequest":true,"CreatedAt":"2019-06-07T12:46:44","Actor":"dotnet-maestro[bot]","Number":"11506","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190606.1\r\n- **Date Produced**: 6/6/2019 12:48 PM\r\n- **Commit**: bfe390329cbacd6e4911f234d0bb0f75a4986544\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19306.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11506","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11506)"},{"Id":"453480131","IsPullRequest":true,"CreatedAt":"2019-06-07T12:41:48","Actor":"dotnet-maestro[bot]","Number":"11505","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190606.2\r\n- **Date Produced**: 6/7/2019 2:40 AM\r\n- **Commit**: de72490d26acee011e22f40113209323976980e0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19306.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11505","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11505)"},{"Id":"452993142","IsPullRequest":true,"CreatedAt":"2019-06-07T12:36:17","Actor":"dotnet-maestro[bot]","Number":"11501","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190605.13\r\n- **Date Produced**: 6/6/2019 5:54 AM\r\n- **Commit**: d05c046913964e880be08b804e7249f297617c2f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19305.13\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190606.12\r\n- **Date Produced**: 6/6/2019 9:47 PM\r\n- **Commit**: a1805103791e43031355e11c0d037bca803a9593\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19306.12\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11501","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11501)"},{"Id":"452847724","IsPullRequest":true,"CreatedAt":"2019-06-06T21:06:13","Actor":"jayaranigarg","Number":"11497","RawContent":null,"Title":"TestPlatform insertion 16.1.1 to be inserted in 16.1 servicing branch","State":"closed","Body":"Release : https://github.com/Microsoft/vstest/releases/tag/v16.1.1\r\n","Url":"https://github.com/dotnet/cli/pull/11497","RelatedDescription":"Closed or merged PR \"TestPlatform insertion 16.1.1 to be inserted in 16.1 servicing branch\" (#11497)"},{"Id":"452850293","IsPullRequest":true,"CreatedAt":"2019-06-06T19:14:24","Actor":"jayaranigarg","Number":"11498","RawContent":null,"Title":"Tp insertion 16.1.1 to 16.1 servicing branch","State":"closed","Body":"Release : https://github.com/Microsoft/vstest/releases/tag/v16.1.1\r\n","Url":"https://github.com/dotnet/cli/pull/11498","RelatedDescription":"Closed or merged PR \"Tp insertion 16.1.1 to 16.1 servicing branch\" (#11498)"},{"Id":"453026676","IsPullRequest":false,"CreatedAt":"2019-06-06T13:19:45","Actor":"seesharper","Number":"11504","RawContent":null,"Title":"dotnet restore using RID causes \"empty\" project.assets.json file (netcoreapp3.0)","State":"open","Body":"First a little bit of background. \r\nI am one of the collaborators over at the [dotnet-script](https://github.com/filipw/dotnet-script) repo.\r\n\r\nWe use `dotnet restore` as a way of getting a list of dependencies we need to execute a script. \r\n\r\nSo we basically generate a csproj file behind the scenes that looks like this.\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nThen we do a runtime specific restore \r\n\r\n```\r\ndotnet restore -r osx-x64\r\n```\r\n\r\nThis generates the `project.assets.json` file we need to read out the dependencies.\r\n\r\nCompilation deps are listed in the file as \r\n\r\n```\r\n \"ref/netcoreapp2.1/Microsoft.CSharp.dll\": {},\r\n  \"ref/netcoreapp2.1/Microsoft.VisualBasic.dll\": {},\r\n  \"ref/netcoreapp2.1/Microsoft.Win32.Primitives.dll\": {},\r\n  \"ref/netcoreapp2.1/System.AppContext.dll\": {},\r\n  and so on \r\n```\r\n\r\nSame for runtime deps\r\n\r\n```\r\n \"runtimes/osx-x64/lib/netcoreapp2.1/Microsoft.CSharp.dll\": {},\r\n \"runtimes/osx-x64/lib/netcoreapp2.1/Microsoft.VisualBasic.dll\": {},\r\n  \"runtimes/osx-x64/lib/netcoreapp2.1/Microsoft.Win32.Primitives.dll\": {},\r\n  \"runtimes/osx-x64/lib/netcoreapp2.1/Microsoft.Win32.Registry.dll\": {},\r\n```\r\n\r\nBasically all the deps coming from `Microsoft.NetCore.App`\r\n\r\n> Note: We use the `LockFile` class from `NuGet.ProjectModel` to read the file. \r\n\r\nOkay so here is the problem we are facing.\r\nif we change the target framework to `netcoreapp3.0`, the `project.assets.json` file no longer gets populated with these dependencies. \r\n\r\nSo given the following project file\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n  </PropertyGroup>\r\n</Project>\r\n\r\n```\r\n\r\nand then `dotnet restore -r osx-x64`\r\n\r\nWhat we see here is that all the compile deps and runtime deps are \"missing\" from the `project.assets.json` file.\r\n\r\n```\r\n{\r\n  \"version\": 3,\r\n  \"targets\": {\r\n    \".NETCoreApp,Version=v3.0\": {},\r\n    \".NETCoreApp,Version=v3.0/osx-x64\": {}\r\n  },\r\n  \"libraries\": {},\r\n  \"projectFileDependencyGroups\": {\r\n    \".NETCoreApp,Version=v3.0\": []\r\n  },\r\n  \"packageFolders\": {\r\n    \"/Users/bernhardrichter/.nuget/packages/\": {},\r\n    \"/usr/local/share/dotnet/sdk/NuGetFallbackFolder\": {}\r\n  },\r\n  \"project\": {\r\n    \"version\": \"1.0.0\",\r\n    \"restore\": {\r\n      \"projectUniqueName\": \"/Users/bernhardrichter/GitHub/Console30/Console30.csproj\",\r\n      \"projectName\": \"Console30\",\r\n      \"projectPath\": \"/Users/bernhardrichter/GitHub/Console30/Console30.csproj\",\r\n      \"packagesPath\": \"/Users/bernhardrichter/.nuget/packages/\",\r\n      \"outputPath\": \"/Users/bernhardrichter/GitHub/Console30/obj/\",\r\n      \"projectStyle\": \"PackageReference\",\r\n      \"fallbackFolders\": [\r\n        \"/usr/local/share/dotnet/sdk/NuGetFallbackFolder\"\r\n      ],\r\n      \"configFilePaths\": [\r\n        \"/Users/bernhardrichter/.nuget/NuGet/NuGet.Config\"\r\n      ],\r\n      \"originalTargetFrameworks\": [\r\n        \"netcoreapp3.0\"\r\n      ],\r\n      \"sources\": {\r\n        \"https://api.nuget.org/v3/index.json\": {},\r\n        \"https://dotnetfeed.blob.core.windows.net/aspnet-aspnetcore-tooling/index.json\": {},\r\n        \"https://dotnetfeed.blob.core.windows.net/aspnet-aspnetcore/index.json\": {},\r\n        \"https://dotnetfeed.blob.core.windows.net/aspnet-entityframeworkcore/index.json\": {},\r\n        \"https://dotnetfeed.blob.core.windows.net/aspnet-extensions/index.json\": {},\r\n        \"https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json\": {},\r\n        \"https://dotnetfeed.blob.core.windows.net/dotnet-windowsdesktop/index.json\": {}\r\n      },\r\n      \"frameworks\": {\r\n        \"netcoreapp3.0\": {\r\n          \"projectReferences\": {}\r\n        }\r\n      },\r\n      \"warningProperties\": {\r\n        \"warnAsError\": [\r\n          \"NU1605\"\r\n        ]\r\n      }\r\n    },\r\n    \"frameworks\": {\r\n      \"netcoreapp3.0\": {\r\n        \"imports\": [\r\n          \"net461\"\r\n        ],\r\n        \"assetTargetFallback\": true,\r\n        \"warn\": true,\r\n        \"downloadDependencies\": [\r\n          {\r\n            \"name\": \"Microsoft.AspNetCore.App.Runtime.osx-x64\",\r\n            \"version\": \"[3.0.0-preview5-19227-01, 3.0.0-preview5-19227-01]\"\r\n          },\r\n          {\r\n            \"name\": \"Microsoft.WindowsDesktop.App.Ref\",\r\n            \"version\": \"[3.0.0-preview5-27626-15, 3.0.0-preview5-27626-15]\"\r\n          },\r\n          {\r\n            \"name\": \"runtime.osx-x64.Microsoft.NETCore.App\",\r\n            \"version\": \"[3.0.0-preview5-27626-15, 3.0.0-preview5-27626-15]\"\r\n          },\r\n          {\r\n            \"name\": \"runtime.osx-x64.Microsoft.NETCore.DotNetHostPolicy\",\r\n            \"version\": \"[3.0.0-preview5-27626-15, 3.0.0-preview5-27626-15]\"\r\n          },\r\n          {\r\n            \"name\": \"runtime.osx-x64.Microsoft.NETCore.DotNetHostResolver\",\r\n            \"version\": \"[3.0.0-preview5-27626-15, 3.0.0-preview5-27626-15]\"\r\n          }\r\n        ],\r\n        \"frameworkReferences\": [\r\n          \"Microsoft.NETCore.App\"\r\n        ]\r\n      }\r\n    },\r\n    \"runtimes\": {\r\n      \"osx-x64\": {\r\n        \"#import\": []\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nWith target framework set to `netcoreapp2.1` the `project.assets.json`file gets populated with all the resolved deps as \"expected\".\r\n\r\nIs there any way to achieve the same behaviour with target framework set to `netcoreapp3.0`?\r\n\r\nWe have discovered though, that if we explicitly add a package reference to `Microsoft.NetCore.App [3.0.0-preview5-27626-15]`, things are back to \"normal\".\r\n\r\nWe would very much like to avoid to adding this reference explicitly as we then need to know the .Net Core runtime version.\r\n\r\nAny input/workaround on this would be greatly appreciated.\r\n\r\n\r\n\r\n\r\n## Steps to reproduce \r\n\r\nCreate a new console app (netcoreapp3.0)\r\n\r\n```\r\ndotnet new console\r\ndotnet restore -r osx-x64\r\n```\r\n\r\n## Expected  behavior\r\n\r\n`project.assets.json` file to be populated with resolved runtime and compilation deps\r\n\r\n## Actual behavior\r\n\r\n`project.assets.json` files contains no runtime and compilation deps.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.0.100-preview5-011568/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  2.1.301 [/usr/local/share/dotnet/sdk]\r\n  2.1.402 [/usr/local/share/dotnet/sdk]\r\n  2.1.505 [/usr/local/share/dotnet/sdk]\r\n  2.2.100 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview-010184 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview3-010431 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview5-011568 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-19075-0444 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27324-5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11504","RelatedDescription":"Open issue \"dotnet restore using RID causes \"empty\" project.assets.json file (netcoreapp3.0)\" (#11504)"},{"Id":"452995907","IsPullRequest":true,"CreatedAt":"2019-06-06T12:53:26","Actor":"dotnet-maestro[bot]","Number":"11503","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190605.1\r\n- **Date Produced**: 6/5/2019 12:50 PM\r\n- **Commit**: b79e48cf431a036c82006bdef28a516beb87d03d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19305.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11503","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11503)"},{"Id":"452993353","IsPullRequest":true,"CreatedAt":"2019-06-06T12:42:22","Actor":"dotnet-maestro[bot]","Number":"11502","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190605.5\r\n- **Date Produced**: 6/6/2019 1:52 AM\r\n- **Commit**: ec0d2190853afd6c6a8a410d7dc386a9f1ca391b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19305.5\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11502","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11502)"},{"Id":"452858504","IsPullRequest":false,"CreatedAt":"2019-06-06T06:45:25","Actor":"forki","Number":"11499","RawContent":null,"Title":"Allow dotnet commands to bypass the global.json version check","State":"open","Body":"Sometimes users or more importantly CI servers don't have the correct dotnet SDK installed.\r\nWe wrote FAKE install scripts that would take care of installing the correct SDK version during the build. Unfortunately even `dotnet tool` requires to have exactly the specified version available. So we have chicken and egg situation. We can't download the tool that would fix the SDK version conflict since the downloader already requires the correct SDK. What I'd like to see is:\r\n\r\n1) `dotnet tool install --any-sdk-version --tool-path tools fake-cli`\r\n2) `tools\\fake.exe build --target Build`\r\n3) --> FAKE runs and installs the correct SDK with it's own functionality\r\n\r\nAs written above 1) is already failing since dotnet tool requires the SDK version from `global.json`\r\n\r\n## Workaround\r\n\r\n1) Install `fake-cli` package with Paket or NuGet\r\n2) `dotnet \"packages\\build\\Fake-Cli\\tools\\netcoreapp2.1\\any\\fake-cli.dll\" build --target Build`\r\n\r\nNote how this dotnet command does not requirer the correct SDK version.\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11499","RelatedDescription":"Open issue \"Allow dotnet commands to bypass the global.json version check\" (#11499)"},{"Id":"452773345","IsPullRequest":true,"CreatedAt":"2019-06-06T05:11:58","Actor":"livarcocc","Number":"11496","RawContent":null,"Title":"Update SDK to 2.2.400-preview-64205-02","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11496","RelatedDescription":"Closed or merged PR \"Update SDK to 2.2.400-preview-64205-02\" (#11496)"},{"Id":"452773026","IsPullRequest":true,"CreatedAt":"2019-06-06T05:11:46","Actor":"livarcocc","Number":"11495","RawContent":null,"Title":"Updating SDK to 2.1.800-preview-64205-01","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11495","RelatedDescription":"Closed or merged PR \"Updating SDK to 2.1.800-preview-64205-01\" (#11495)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"454251339","IsPullRequest":false,"CreatedAt":"2019-06-10T16:19:02","Actor":"vixisoft","Number":"1242","RawContent":null,"Title":"ExcludeFromCodeCoverageAttribute should have Justification property","State":"open","Body":"Hi,\r\n\r\nWe are trying to build our Organisation Framework for DotNetCore and while we tried to test everything, some of the methods cannot be tested directly. (EF Core Wrapper mainly)\r\n\r\nSo we added the Attribute ExcludeFromCodeCoverage but we are not satisfied with the attribute.\r\n\r\nFirst, it doesn't have any Justification property so it not clear for other person why this has been added. ( Missing expertise to test ?, Cannot be tested ?, why !)\r\n\r\nSecond, it cannot be inherited because its marked as sealed class...\r\n\r\nThere is no way we can use this attribute to help others ?\r\nTelling them why this is in place?\r\n\r\nWe put the justification in the summary at the moment but i feel it's the worse place to put it...\r\n\r\nBecause:\r\n- it's added to the documentation when it shouldn't.\r\n- Someone can erase the summary because it has been refactored or anything and kill the justification. If it was in Justification property of the attribute we could at leat keep it safe until we judge that it can be removed and tested!\r\n\r\nCan you modify this attribute? \r\nOr how can i add this justification without putting it in the summary of the method / class ?","Url":"https://github.com/dotnet/standard/issues/1242","RelatedDescription":"Open issue \"ExcludeFromCodeCoverageAttribute should have Justification property\" (#1242)"},{"Id":"454161356","IsPullRequest":true,"CreatedAt":"2019-06-10T13:16:44","Actor":"dotnet-maestro[bot]","Number":"1241","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190609.5\r\n- **Date Produced**: 6/10/2019 12:19 AM\r\n- **Commit**: 7e56d8bd8b224d834b782a98bfd7035f71c3f547\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19309.5\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19309.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19309.5\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1241","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1241)"},{"Id":"454137194","IsPullRequest":true,"CreatedAt":"2019-06-10T12:14:25","Actor":"dotnet-maestro[bot]","Number":"1240","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190609.1\r\n- **Date Produced**: 6/9/2019 12:42 PM\r\n- **Commit**: 45361625125cdd3119050a852bd73163ca4b73f4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19309.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19309.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19309.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19309.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19309.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19309.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1240","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1240)"},{"Id":"453895716","IsPullRequest":true,"CreatedAt":"2019-06-09T13:13:58","Actor":"dotnet-maestro[bot]","Number":"1239","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190609.1\r\n- **Date Produced**: 6/9/2019 11:19 AM\r\n- **Commit**: 48c3adf8ad0256689375060437c2e6262d5e805a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19309.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19309.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19309.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1239","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1239)"},{"Id":"453891137","IsPullRequest":true,"CreatedAt":"2019-06-09T12:09:21","Actor":"dotnet-maestro[bot]","Number":"1238","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190608.1\r\n- **Date Produced**: 6/8/2019 12:50 PM\r\n- **Commit**: 747a1bdf2a74a486fb075045cb2384fa89a7983c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19308.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19308.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19308.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19308.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19308.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19308.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1238","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1238)"},{"Id":"453791889","IsPullRequest":true,"CreatedAt":"2019-06-08T13:12:04","Actor":"dotnet-maestro[bot]","Number":"1237","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190607.10\r\n- **Date Produced**: 6/8/2019 7:24 AM\r\n- **Commit**: 20ba99aaf60ba91180f304211b096e1147564a7c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19307.10\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19307.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19307.10\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1237","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1237)"},{"Id":"453787233","IsPullRequest":true,"CreatedAt":"2019-06-08T12:14:16","Actor":"dotnet-maestro[bot]","Number":"1236","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190607.62\r\n- **Date Produced**: 6/8/2019 3:43 AM\r\n- **Commit**: 29999b2846623e2d96733577165968d09bc2bcc1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19307.62\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19307.62\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19307.62\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19307.62\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19307.62\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19307.62\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1236","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1236)"},{"Id":"453504450","IsPullRequest":true,"CreatedAt":"2019-06-07T13:16:47","Actor":"dotnet-maestro[bot]","Number":"1235","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190606.9\r\n- **Date Produced**: 6/7/2019 5:48 AM\r\n- **Commit**: de1da50fc5f972348aba2fa40ff14e1cbadb13de\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19306.9\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19306.9\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19306.9\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1235","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1235)"},{"Id":"453479367","IsPullRequest":true,"CreatedAt":"2019-06-07T12:24:35","Actor":"dotnet-maestro[bot]","Number":"1234","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190606.12\r\n- **Date Produced**: 6/6/2019 9:47 PM\r\n- **Commit**: a1805103791e43031355e11c0d037bca803a9593\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19306.12\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19306.12\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19306.12\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19306.12\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19306.12\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19306.12\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1234","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1234)"},{"Id":"453020508","IsPullRequest":true,"CreatedAt":"2019-06-06T13:17:28","Actor":"dotnet-maestro[bot]","Number":"1233","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190606.1\r\n- **Date Produced**: 6/6/2019 10:50 AM\r\n- **Commit**: 71aec681dd1247979e7956372abae8bbc02c9546\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19306.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19306.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19306.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1233","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1233)"},{"Id":"452992389","IsPullRequest":true,"CreatedAt":"2019-06-06T12:14:38","Actor":"dotnet-maestro[bot]","Number":"1232","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190605.13\r\n- **Date Produced**: 6/6/2019 5:54 AM\r\n- **Commit**: d05c046913964e880be08b804e7249f297617c2f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19305.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19305.13\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19305.13\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19305.13\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19305.13\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19305.13\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1232","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1232)"},{"Id":"450570292","IsPullRequest":true,"CreatedAt":"2019-06-06T05:06:01","Actor":"terrajobst","Number":"1219","RawContent":null,"Title":"Add HttpResponseMessage.TrailingHeaders","State":"closed","Body":"Fixes #1144\r\n\r\n/cc @JamesNK @davidfowl @davidsh @karelz ","Url":"https://github.com/dotnet/standard/pull/1219","RelatedDescription":"Closed or merged PR \"Add HttpResponseMessage.TrailingHeaders\" (#1219)"},{"Id":"452490563","IsPullRequest":true,"CreatedAt":"2019-06-05T13:16:16","Actor":"dotnet-maestro[bot]","Number":"1231","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190605.1\r\n- **Date Produced**: 6/5/2019 11:29 AM\r\n- **Commit**: 656ccfbbef3a0d75c02e17b7477122a658b92557\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19305.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19305.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19305.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1231","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1231)"},{"Id":"452464354","IsPullRequest":true,"CreatedAt":"2019-06-05T12:14:49","Actor":"dotnet-maestro[bot]","Number":"1230","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190604.23\r\n- **Date Produced**: 6/5/2019 4:12 AM\r\n- **Commit**: c9ab9c47d6c66fb9ad89e331900e06bed7463904\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19304.23\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1230","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1230)"},{"Id":"451078421","IsPullRequest":true,"CreatedAt":"2019-06-05T00:46:32","Actor":"dotnet-maestro[bot]","Number":"1224","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190531.5\r\n- **Date Produced**: 5/31/2019 10:53 PM\r\n- **Commit**: c901850aa1e175c124da771863dacc763743a520\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19281.5\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190601.2\r\n- **Date Produced**: 6/1/2019 1:04 PM\r\n- **Commit**: 8fd0b50b9d689e8d87ab202f11b7c9fbe81271c4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19301.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190602.2\r\n- **Date Produced**: 6/2/2019 1:09 PM\r\n- **Commit**: e6a5d5f970bb872451c6310ae34eda31041fb552\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19302.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190604.1\r\n- **Date Produced**: 6/4/2019 8:16 AM\r\n- **Commit**: d2599acd9703ef747dfb4329ec3e3beff182e755\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19304.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1224","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1224)"},{"Id":"451983344","IsPullRequest":true,"CreatedAt":"2019-06-04T13:12:14","Actor":"dotnet-maestro[bot]","Number":"1229","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190603.11\r\n- **Date Produced**: 6/4/2019 8:34 AM\r\n- **Commit**: 6d5959cbc7d489406f8f85dba0a42f06d4a0ea9b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19303.11\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19303.11\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19303.11\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1229","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1229)"},{"Id":"451725417","IsPullRequest":false,"CreatedAt":"2019-06-03T23:00:31","Actor":"wpatter6","Number":"1228","RawContent":null,"Title":"Hosting environment or server.mappath in .net framework","State":"open","Body":"Hi, I'm building a nuget package that will be used in both .NET Framework 4.6.2+ and dotnet core MVC type applications.\r\n\r\nThere is some functionality I'm providing that requires knowing the web root path.  Within the dotnet core world, I'm able to access the hosting environment and get the web root from there. \r\n\r\nBut how can this be done for framework 4.6.2+ applications, without the hosting environment, Server.MapPath or some equivalent?  Is it possible?  \r\n\r\nI'm currently using `Directory.GetCurrentDirectory() + @\"..\\..\\\";` but this is obviously quite hacky and only supports the default hosting configuration.\r\n\r\nThanks","Url":"https://github.com/dotnet/standard/issues/1228","RelatedDescription":"Open issue \"Hosting environment or server.mappath in .net framework\" (#1228)"},{"Id":"449369049","IsPullRequest":false,"CreatedAt":"2019-06-03T13:58:00","Actor":"llolic","Number":"1214","RawContent":null,"Title":"System.IO.FileNotFoundException: 'Could not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. The system cannot find the file specified.","State":"closed","Body":"I am getting \"System.IO.FileNotFoundException: 'Could not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. The system cannot find the file specified.'\"\r\nI have made an application in vs 2019 that currently just has a textbox, a textblock, and a button. When I run it, the error is shown for the following line: \"rootFrame.Navigate(typeof(MainPage), e.Arguments);\"\r\n\r\nDoes anyone know how to fix this error?","Url":"https://github.com/dotnet/standard/issues/1214","RelatedDescription":"Closed issue \"System.IO.FileNotFoundException: 'Could not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. The system cannot find the file specified.\" (#1214)"},{"Id":"451464633","IsPullRequest":true,"CreatedAt":"2019-06-03T12:58:57","Actor":"dotnet-maestro[bot]","Number":"1227","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190603.1\r\n- **Date Produced**: 6/3/2019 10:38 AM\r\n- **Commit**: 0eed4042f056b4d9f6f4d1bf2918e234d67a6f88\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19303.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19303.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19303.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1227","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1227)"},{"Id":"451188035","IsPullRequest":true,"CreatedAt":"2019-06-02T12:49:02","Actor":"dotnet-maestro[bot]","Number":"1226","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190601.4\r\n- **Date Produced**: 6/2/2019 6:27 AM\r\n- **Commit**: 9813f2de83c5f4b270b7cbb34f7117f80d402f4d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19301.4\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19301.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19301.4\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1226","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1226)"},{"Id":"451082070","IsPullRequest":true,"CreatedAt":"2019-06-01T12:54:30","Actor":"dotnet-maestro[bot]","Number":"1225","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190531.7\r\n- **Date Produced**: 5/31/2019 11:58 PM\r\n- **Commit**: b4fa2006c2e9757e4446e3fdad413bdbf265eedc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19281.7\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19281.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19281.7\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1225","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1225)"},{"Id":"450941804","IsPullRequest":true,"CreatedAt":"2019-05-31T22:52:40","Actor":"dotnet-maestro-bot","Number":"1221","RawContent":null,"Title":"[automated] Merge branch 'master' => 'release/3.0'","State":"closed","Body":"I detected changes in the master branch which have not been merged yet to release/3.0. I'm a robot and am configured to help you automatically keep release/3.0 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on master by the following committers:\n\n* @wtgodbe\n* @dotnet-maestro[bot]\n* @ericstj\n* @terrajobst\n* @ViktorHofer\n* @JohnTortugo\n* @joperezr\n* @mmitche\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout master\r\ngit pull --ff-only\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit merge --no-ff master\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/master-to-release/3.0'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/standard/pull/1221","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'master' => 'release/3.0'\" (#1221)"},{"Id":"450951486","IsPullRequest":true,"CreatedAt":"2019-05-31T19:59:28","Actor":"safern","Number":"1222","RawContent":null,"Title":"Revert \"Add bulk operations to Collection<T>\"","State":"closed","Body":"Due to: https://github.com/dotnet/corefx/issues/38085\r\n\r\ncc: @terrajobst @wtgodbe @karelz ","Url":"https://github.com/dotnet/standard/pull/1222","RelatedDescription":"Closed or merged PR \"Revert \"Add bulk operations to Collection<T>\"\" (#1222)"},{"Id":"450955142","IsPullRequest":true,"CreatedAt":"2019-05-31T19:49:00","Actor":"wtgodbe","Number":"1223","RawContent":null,"Title":"Update branding to preview7 in master","State":"closed","Body":"CC @terrajobst @mmitche ","Url":"https://github.com/dotnet/standard/pull/1223","RelatedDescription":"Closed or merged PR \"Update branding to preview7 in master\" (#1223)"},{"Id":"449798213","IsPullRequest":true,"CreatedAt":"2019-05-31T17:00:11","Actor":"dotnet-maestro[bot]","Number":"1216","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190528.7\r\n- **Date Produced**: 5/29/2019 4:03 AM\r\n- **Commit**: c7d48ca7732b7717e84d8375588d83866104ef58\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19278.7\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19278.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19278.7\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190529.8\r\n- **Date Produced**: 5/30/2019 8:05 AM\r\n- **Commit**: e23119d577e644d2c2a25419c88c1181681358e0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19279.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19279.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19279.8\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190531.1\r\n- **Date Produced**: 5/31/2019 9:51 AM\r\n- **Commit**: 82408cd90f4d4573d502e8df2ca437b35e6a37f7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19281.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19281.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19281.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1216","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1216)"},{"Id":"450765638","IsPullRequest":true,"CreatedAt":"2019-05-31T12:14:07","Actor":"dotnet-maestro[bot]","Number":"1220","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190530.2\r\n- **Date Produced**: 5/30/2019 5:22 PM\r\n- **Commit**: 7c50d548001a83a18449ad4dda370122ede5fbf6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19280.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1220","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1220)"},{"Id":"450273832","IsPullRequest":true,"CreatedAt":"2019-05-30T12:36:19","Actor":"dotnet-maestro[bot]","Number":"1218","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190529.5\r\n- **Date Produced**: 5/30/2019 3:41 AM\r\n- **Commit**: fb62c6377a6bd163af2a7516260f064498942585\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19279.5\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1218","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1218)"},{"Id":"450026795","IsPullRequest":true,"CreatedAt":"2019-05-29T22:45:51","Actor":"ericstj","Number":"1217","RawContent":null,"Title":"Source build fixes","State":"closed","Body":"Use GenFacades instead of GenAPI and remove GenAPI and APICompat from source build.","Url":"https://github.com/dotnet/standard/pull/1217","RelatedDescription":"Closed or merged PR \"Source build fixes\" (#1217)"},{"Id":"449768348","IsPullRequest":true,"CreatedAt":"2019-05-29T12:16:21","Actor":"dotnet-maestro[bot]","Number":"1215","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190528.1\r\n- **Date Produced**: 5/28/2019 6:41 PM\r\n- **Commit**: 11f90a2a260422201895de58e57170131ab4efe7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19278.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19278.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19278.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19278.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19278.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1215","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1215)"},{"Id":"449247865","IsPullRequest":true,"CreatedAt":"2019-05-28T12:54:12","Actor":"dotnet-maestro[bot]","Number":"1213","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190527.2\r\n- **Date Produced**: 5/27/2019 11:45 PM\r\n- **Commit**: d58a8ade31b4731759c92df00d0f6398c52f3d83\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19277.2\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19277.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19277.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1213","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1213)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"454485904","IsPullRequest":true,"CreatedAt":"2019-06-11T05:22:57","Actor":"bartonjs","Number":"38439","RawContent":null,"Title":"Add S.S.C.Pkcs and S.S.C.Cng netstandard2.1 ref and lib","State":"open","Body":"The netstandard2.1 ref is equivalent to the netcoreapp3.0 ref in these two\r\nOOB packages.\r\n\r\nRef changes:\r\n\r\nCng:\r\n* Adds DSACng and ECDiffieHellmanCng (and related types)\r\n\r\nPkcs:\r\n* Adds RSA-OAEP option to CmsRecipient\r\n* Adds custom private key option to CmsSigner\r\n* Adds custom private key decrypt option to EnvelopedCms\r\n* Adds Pkcs12Info and Pkcs12Builder (and associated types)\r\n* Adds Pkcs8PrivateKeyInfo\r\n* Adds RFC3161 timestamp types\r\n* Adds AddCertificate/RemoveCertificate to SignedCms\r\n* Adds AddUnsignedAttribute/RemoveUnsignedAttribute to SignerInfo\r\n* Adds SignatureAlgorithm/GetSignature to SignerInfo\r\n* Adds MatchesCertificate to SubjectIdentifier\r\n\r\nImpl changes:\r\n\r\nCng:\r\n* The netstandard2.1 impl is a generated PNSE, the real impl is inbox on Windows.\r\n\r\nPkcs:\r\n* The impls are the same as the netcoreapp3.0 impls, but are required\r\nbecause netstandard2.0 is a better match for netstandard2.1 than netcoreapp3.0 is.\r\n\r\nFixes #36062.","Url":"https://github.com/dotnet/corefx/pull/38439","RelatedDescription":"Open PR \"Add S.S.C.Pkcs and S.S.C.Cng netstandard2.1 ref and lib\" (#38439)"},{"Id":"454436927","IsPullRequest":true,"CreatedAt":"2019-06-11T03:22:05","Actor":"stephentoub","Number":"38438","RawContent":null,"Title":"Add debug state machine tracking to GoAwayFrame_NoPendingStreams_ConnectionClosed test","State":"closed","Body":"As was done in a similar test in https://github.com/dotnet/corefx/pull/38345.\r\ncc: @krwq, @wfurt","Url":"https://github.com/dotnet/corefx/pull/38438","RelatedDescription":"Closed or merged PR \"Add debug state machine tracking to GoAwayFrame_NoPendingStreams_ConnectionClosed test\" (#38438)"},{"Id":"454436460","IsPullRequest":false,"CreatedAt":"2019-06-11T01:14:48","Actor":"antoinebj","Number":"38437","RawContent":null,"Title":"Specify for which URL component to encode in DefaultUrlEncoder","State":"open","Body":"Currently, the `System.Text.Encodings.Web.DefaultUrlEncoder` class forces a set of forbidden characters that is the intersection of what is not permitted in various components of the URL.\r\nThat is regardless of what was specified as allowed in the TextEncoderSettings that can be injected through the constructor.\r\n\r\nIn my use case, I'd like to encode for the query string only. For example, I would benefit from the `:` not being encoded, which is allowed in query strings. However, that character is being encoded, because a URL component other than the query string disallows it.\r\n\r\nWould it be possible to enhance the `DefaultUrlEncoder` in one or more of the following ways?\r\n\r\n1. To take a hint of which URL component is being passed for encoding, and leave acceptable characters for that component untouched (e.g. the colon character for query strings)\r\n\r\nOR\r\n\r\n2. To honor the TextEncoderSettings to truly override what is allowed or forbidden\r\n\r\nOR/AND\r\n\r\n3. To make it public and non-sealed in order to be able to override its behavior (in particular the `WillEncode` and `FindFirstCharacterToEncode` methods)","Url":"https://github.com/dotnet/corefx/issues/38437","RelatedDescription":"Open issue \"Specify for which URL component to encode in DefaultUrlEncoder\" (#38437)"},{"Id":"454410772","IsPullRequest":true,"CreatedAt":"2019-06-11T01:01:21","Actor":"HongGit","Number":"38429","RawContent":null,"Title":"Update System.Runtime.Caching owner to Steve","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/38429","RelatedDescription":"Closed or merged PR \"Update System.Runtime.Caching owner to Steve\" (#38429)"},{"Id":"454431170","IsPullRequest":false,"CreatedAt":"2019-06-11T00:45:47","Actor":"jlestercastro","Number":"38436","RawContent":null,"Title":"Cannot consume scoped service from singleton","State":"open","Body":"Hello, someone who can help me to fix this error.\r\nI always got \"System.InvalidOperationException: 'Cannot consume scoped service 'Lib.Data.LibContext' from singleton 'Lib.Data.RepositoryFactory'.'\"\r\n\r\nWhere my Startup.cs is:\r\n\r\n![image](https://user-images.githubusercontent.com/39945211/59235640-ec23ef00-8c24-11e9-94ec-f82856450f05.png)\r\n\r\nAnd my StartupHelper.cs is : \r\n\r\n![image](https://user-images.githubusercontent.com/39945211/59235665-0a89ea80-8c25-11e9-8405-1b84ede97741.png)\r\n\r\nAnd i always got this error when i debug the project\r\n\r\n![image](https://user-images.githubusercontent.com/39945211/59235699-40c76a00-8c25-11e9-9fe9-0fb9a642a317.png)\r\n\r\n\r\nSomeone can help me to fix this error.\r\nThank you in advance.\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/38436","RelatedDescription":"Open issue \"Cannot consume scoped service from singleton\" (#38436)"},{"Id":"454428838","IsPullRequest":false,"CreatedAt":"2019-06-11T00:32:35","Actor":"buyaa-n","Number":"38435","RawContent":null,"Title":"Struct with an object not parsed successfully","State":"open","Body":"Before adding ` SimpleTestClass MySampleTestClass { get; set; }` property to the SimpleTestStruct struct and json test was running successfully, after adding object type JsonSerializer cannot parse it anymore Exception: `System.NotSupportedException : Collection was of a fixed size.`\r\n```csharp\r\n[Fact]\r\npublic static void ReadStructObjectValueTest()\r\n{\r\n    string json = \"{\\\"MyInt16\\\":1,\\\"MyInt32\\\":2,\\\"MyInt64\\\":3,\\\"MyUInt16\\\":4,\\\"MyUInt32\\\":5,\\\"MyUInt64\\\":6,\\\"MyByte\\\":7,\\\"MySByte\\\":8,\\\"MyChar\\\":\\\"a\\\",\\\"MyString\\\":\\\"Hello\\\",\\\"MyDecimal\\\":3.3,\\\"MyBooleanTrue\\\":true,\" +\r\n      \"\\\"MyBooleanFalse\\\":false,\\\"MySingle\\\":1.1,\\\"MyDouble\\\":2.2,\\\"MyDateTime\\\":\\\"2019-01-30T12:01:02Z\\\",\\\"MyDateTimeOffset\\\":\\\"2019-01-30T12:01:02+01:00\\\",\\\"MyEnum\\\":2,\\\"MyInt64Enum\\\":-9223372036854775808,\" +\r\n      \"\\\"MyUInt64Enum\\\":18446744073709551615,\\\"MySampleStruct\\\":{\\\"One\\\":11,\\\"Two\\\":1.9999},\\\"MySampleTestClass\\\":{\\\"MyInt16\\\":0,\\\"MyInt32\\\":0,\\\"MyInt64\\\":0,\\\"MyUInt16\\\":0,\\\"MyUInt32\\\":0,\\\"MyUInt64\\\":0,\\\"MyByte\\\":0,\" +\r\n      \"\\\"MySByte\\\":0,\\\"MyChar\\\":\\\"\\\\u0000\\\",\\\"MyString\\\":\\\"Hello\\\",\\\"MyDecimal\\\":0,\\\"MyBooleanTrue\\\":false,\\\"MyBooleanFalse\\\":false,\\\"MySingle\\\":0,\\\"MyDouble\\\":3.14,\\\"MyDateTime\\\":\\\"0001-01-01T00:00:00\\\",\" +\r\n      \"\\\"MyDateTimeOffset\\\":\\\"0001-01-01T00:00:00+00:00\\\",\\\"MyEnum\\\":0,\\\"MyInt64Enum\\\":0,\\\"MyUInt64Enum\\\":0,\\\"MyInt16Array\\\":null,\\\"MyInt32Array\\\":[1],\\\"MyInt64Array\\\":null,\\\"MyUInt16Array\\\":null,\\\"MyUInt32Array\\\":null,\" +\r\n      \"\\\"MyUInt64Array\\\":null,\\\"MyByteArray\\\":null,\\\"MySByteArray\\\":null,\\\"MyCharArray\\\":null,\\\"MyStringArray\\\":null,\\\"MyDecimalArray\\\":null,\\\"MyBooleanTrueArray\\\":null,\\\"MyBooleanFalseArray\\\":null,\\\"MySingleArray\\\":null,\" +\r\n      \"\\\"MyDoubleArray\\\":null,\\\"MyDateTimeArray\\\":null,\\\"MyDateTimeOffsetArray\\\":null,\\\"MyEnumArray\\\":null,\\\"MyInt16TwoDimensionArray\\\":null,\\\"MyInt16TwoDimensionList\\\":null,\\\"MyInt16ThreeDimensionArray\\\":null,\" +\r\n      \"\\\"MyInt16ThreeDimensionList\\\":null,\\\"MyStringList\\\":null,\\\"MyStringIEnumerableT\\\":null,\\\"MyStringIListT\\\":null,\\\"MyStringICollectionT\\\":null,\\\"MyStringIReadOnlyCollectionT\\\":null,\\\"MyStringIReadOnlyListT\\\":null,\" +\r\n      \"\\\"MyStringToStringDict\\\":null,\\\"MyStringToStringIDict\\\":null,\\\"MyStringToStringIReadOnlyDict\\\":null,\\\"MyStringToStringImmutableDict\\\":null,\\\"MyStringToStringIImmutableDict\\\":null,\\\"MyStringToStringImmutableSortedDict\\\":null,\" +\r\n      \"\\\"MyStringStackT\\\":null,\\\"MyStringQueueT\\\":null,\\\"MyStringHashSetT\\\":null,\\\"MyStringLinkedListT\\\":null,\\\"MyStringSortedSetT\\\":null,\\\"MyStringIImmutableListT\\\":null,\\\"MyStringIImmutableStackT\\\":null,\\\"MyStringIImmutableQueueT\\\":null,\" +\r\n      \"\\\"MyStringIImmutableSetT\\\":null,\\\"MyStringImmutableHashSetT\\\":null,\\\"MyStringImmutableListT\\\":null,\\\"MyStringImmutableStackT\\\":null,\\\"MyStringImmutablQueueT\\\":null,\\\"MyStringImmutableSortedSetT\\\":null,\\\"MyListOfNullString\\\":null},\" +\r\n      \"\\\"MySampleStructWithObject\\\":{\\\"One\\\":0,\\\"Class1\\\":null},\\\"MySampleStructWithStructAndObject\\\":{\\\"One\\\":0,\\\"Struct1\\\":{\\\"One\\\":0,\\\"Two\\\":0},\\\"Class1\\\":null},\\\"MyInt16Array\\\":[1],\\\"MyInt32Array\\\":[2],\\\"MyInt64Array\\\":[3],\" +\r\n      \"\\\"MyUInt16Array\\\":[4],\\\"MyUInt32Array\\\":[5],\\\"MyUInt64Array\\\":[6],\\\"MyByteArray\\\":\\\"Bw==\\\",\\\"MySByteArray\\\":[8],\\\"MyCharArray\\\":[\\\"a\\\"],\\\"MyStringArray\\\":[\\\"Hello\\\"],\\\"MyDecimalArray\\\":[3.3],\\\"MyBooleanTrueArray\\\":[true],\" +\r\n      \"\\\"MyBooleanFalseArray\\\":[false],\\\"MySingleArray\\\":[1.1],\\\"MyDoubleArray\\\":[2.2],\\\"MyDateTimeArray\\\":[\\\"2019-01-30T12:01:02Z\\\"],\\\"MyDateTimeOffsetArray\\\":[\\\"2019-01-30T12:01:02+01:00\\\"],\\\"MyEnumArray\\\":[2],\\\"MyStringList\\\":[\\\"Hello\\\"],\" +\r\n      \"\\\"MyStringIEnumerableT\\\":[\\\"Hello\\\"],\\\"MyStringIListT\\\":[\\\"Hello\\\"],\\\"MyStringICollectionT\\\":[\\\"Hello\\\"],\\\"MyStringIReadOnlyCollectionT\\\":[\\\"Hello\\\"],\\\"MyStringIReadOnlyListT\\\":[\\\"Hello\\\"]}\";\r\n    \r\n    SimpleTestStruct obj3 = JsonSerializer.Parse<SimpleTestStruct>(json);\r\n}\r\n\r\npublic struct SimpleTestStruct : ITestClass\r\n{\r\n    public short MyInt16 { get; set; }\r\n    public int MyInt32 { get; set; }\r\n    public long MyInt64 { get; set; }\r\n    ...\r\n    public SampleStruct MySampleStruct { get; set; }\r\n    public SimpleTestClass MySampleTestClass { get; set; }\r\n    ...\r\n}\r\n\r\npublic class SimpleTestClass : ITestClass\r\n{\r\n    public short MyInt16 { get; set; }\r\n    public int MyInt32 { get; set; }\r\n    ...   \r\n    public SampleEnum MyEnum { get; set; }\r\n    public SampleInt64Enum MyInt64Enum { get; set; }\r\n}\r\n\r\nSystem.NotSupportedException : Collection was of a fixed size.\r\nStack Trace:\r\n/_/src/System.Private.CoreLib/src/System/Array.CoreCLR.cs(482,0): at System.SZArrayHelper.Add[T](T value)\r\nD:\\dotnet\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonSerializer.Read.HandleArray.cs(264,0): \r\nat System.Text.Json.JsonSerializer.ApplyValueToEnumerable[TProperty](TProperty& value, ReadStack& state, Utf8JsonReader& reader)\r\nD:\\dotnet\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonPropertyInfoNotNullable.cs(67,0) : \r\nat System.Text.Json.JsonPropertyInfoNotNullable`3.ReadEnumerable(JsonTokenType tokenType, ReadStack& state, Utf8JsonReader& reader)\r\nD:\\dotnet\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonPropertyInfoNotNullable.cs(25,0)  : \r\nat System.Text.Json.JsonPropertyInfoNotNullable`3.Read(JsonTokenType tokenType, ReadStack& state, Utf8JsonReader& reader)\r\nD:\\dotnet\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonSerializer.Read.HandleValue.cs(28,0): \r\nat System.Text.Json.JsonSerializer.HandleValue(JsonTokenType tokenType, JsonSerializerOptions options, Utf8JsonReader& reader, ReadStack& state)\r\nD:\\dotnet\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonSerializer.Read.cs(48,0): \r\nat System.Text.Json.JsonSerializer.ReadCore(JsonSerializerOptions options, Utf8JsonReader& reader, ReadStack& readStack)\r\nD:\\dotnet\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonSerializer.Read.Helpers.cs(22,0) : \r\nat System.Text.Json.JsonSerializer.ReadCore(Type returnType, JsonSerializerOptions options, Utf8JsonReader& reader)\r\nD:\\dotnet\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonSerializer.Read.String.cs(74,0): \r\nat System.Text.Json.JsonSerializer.ParseCore(String json, Type returnType, JsonSerializerOptions options)\r\nD:\\dotnet\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonSerializer.Read.String.cs(31,0): \r\nat System.Text.Json.JsonSerializer.Parse[TValue](String json, JsonSerializerOptions options)\r\nD:\\dotnet\\corefx\\src\\System.Text.Json\\tests\\Serialization\\Object.ReadTests.cs(312,0): \r\nat System.Text.Json.Serialization.Tests.ObjectTests.ReadStructObjectValueTest()\r\n```","Url":"https://github.com/dotnet/corefx/issues/38435","RelatedDescription":"Open issue \"Struct with an object not parsed successfully\" (#38435)"},{"Id":"454427495","IsPullRequest":true,"CreatedAt":"2019-06-11T00:25:33","Actor":"safern","Number":"38434","RawContent":null,"Title":"Add nullable annotations to System.Diagnostics.Tracing ref","State":"open","Body":"Yet to be reviewed in API Review\r\n\r\ncc: @dotnet/nullablefc @jkotas ","Url":"https://github.com/dotnet/corefx/pull/38434","RelatedDescription":"Open PR \"Add nullable annotations to System.Diagnostics.Tracing ref\" (#38434)"},{"Id":"454426065","IsPullRequest":true,"CreatedAt":"2019-06-11T00:18:12","Actor":"ericstj","Number":"38433","RawContent":null,"Title":"Make it so GenAPI is only used during online source build","State":"open","Body":"Fixes #38035 \r\n\r\nTested by building CoreFx specifying DotNetBuildFromSource & DotNetSourceBuildIntermediatePath.\r\n\r\nDeleted artifacts.\r\n\r\nBuilt again specifying DotNetBuildFromSource & DotNetSourceBuildIntermediatePath & OfflineBuild.\r\n","Url":"https://github.com/dotnet/corefx/pull/38433","RelatedDescription":"Open PR \"Make it so GenAPI is only used during online source build\" (#38433)"},{"Id":"454423190","IsPullRequest":true,"CreatedAt":"2019-06-11T00:03:31","Actor":"safern","Number":"38432","RawContent":null,"Title":"Add nullable annotations to System.Diagnostics.Tools ref","State":"open","Body":"Yet to be reviewed in API Review\r\n\r\ncc: @dotnet/nullablefc @jkotas ","Url":"https://github.com/dotnet/corefx/pull/38432","RelatedDescription":"Open PR \"Add nullable annotations to System.Diagnostics.Tools ref\" (#38432)"},{"Id":"454416240","IsPullRequest":true,"CreatedAt":"2019-06-10T23:30:42","Actor":"pgovind","Number":"38431","RawContent":null,"Title":"Improve default handling in ReadOnlySequence.Slice","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/35254\r\n\r\nThe null dereference was because we now allow nullable objects in SequencePosition. Once I fixed that, there's still the issue of what `default(SequencePosition)._object` should be. If the expectation is that the default start position is 0, it makes sense that `default(SequencePosition)._object = Start`?\r\n\r\nAlso, this is my first patch in corefx, so I'd appreciate comments on the new test and its location. Also, this seems like a small change, but how do folks generally measure the performance impacts of new changes? ","Url":"https://github.com/dotnet/corefx/pull/38431","RelatedDescription":"Open PR \"Improve default handling in ReadOnlySequence.Slice\" (#38431)"},{"Id":"454413227","IsPullRequest":true,"CreatedAt":"2019-06-10T23:23:13","Actor":"Anipik","Number":"38430","RawContent":null,"Title":" Checking if the eventlog registry key is actually an eventlog","State":"closed","Body":".Net considers that the subkeys under the event log registry key is a \"eventlog\" which is not the case anymore. So we are just filtering out the eventlog entries if we cnt open it.\r\n\r\n\r\n@tarekgh i verified that the release handle is being called by close handle. ","Url":"https://github.com/dotnet/corefx/pull/38430","RelatedDescription":"Closed or merged PR \" Checking if the eventlog registry key is actually an eventlog\" (#38430)"},{"Id":"454409591","IsPullRequest":true,"CreatedAt":"2019-06-10T23:02:22","Actor":"safern","Number":"38428","RawContent":null,"Title":"Add nullable annotations to System.Diagnostics.StackTrace ref","State":"open","Body":"Yet to be reviewed in API Review.\r\n\r\ncc: @dotnet/nullablefc @jkotas ","Url":"https://github.com/dotnet/corefx/pull/38428","RelatedDescription":"Open PR \"Add nullable annotations to System.Diagnostics.StackTrace ref\" (#38428)"},{"Id":"454401643","IsPullRequest":true,"CreatedAt":"2019-06-10T22:32:08","Actor":"safern","Number":"38427","RawContent":null,"Title":"Add nullable annotations to System.Diagnostics.Debug ref","State":"open","Body":"Yet to be reviewed in API Review\r\n\r\ncc: @dotnet/nullablefc @jkotas ","Url":"https://github.com/dotnet/corefx/pull/38427","RelatedDescription":"Open PR \"Add nullable annotations to System.Diagnostics.Debug ref\" (#38427)"},{"Id":"454401058","IsPullRequest":false,"CreatedAt":"2019-06-10T22:30:00","Actor":"sdmaclea","Number":"38426","RawContent":null,"Title":"WIP API Proposal - AssemblyBuilder.DefineDynamicAssembly for AssemblyLoadContext","State":"open","Body":"https://docs.microsoft.com/en-us/dotnet/api/system.reflection.emit.assemblybuilder.definedynamicassembly?view=netcore-3.0\r\n\r\n`AssemblyBuilder` is implemented as a type of `RuntimeAssembly`, but there seems to be no mechanism to create it directly in a specific `AssemblyLoadContext`.\r\n\r\nI assume we need at least one mechanism.\r\n\r\nThis issue is highly similar to that described in #36236\r\n\r\nIf we chose a similar solution, we would need 2 changes.\r\n1. Make existing APIs sensitive to AssemblyLoadContext.CurrentContextualReflectionContext \r\n2. Add new explicit APIs\r\n\r\nWe may be able to support 1 above in 3.0 as this may be a simple PR.\r\nIt would be nice to add the new APIs for 3.1, but this may not meet the shiproom approval process\r\n\r\n/cc @vitek-karas @jkotas @cablooshe @elinor-fung @jeffschwMSFT @sbomer \r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/38426","RelatedDescription":"Open issue \"WIP API Proposal - AssemblyBuilder.DefineDynamicAssembly for AssemblyLoadContext\" (#38426)"},{"Id":"454400947","IsPullRequest":false,"CreatedAt":"2019-06-10T22:29:41","Actor":"Gnbrkm41","Number":"38425","RawContent":null,"Title":"`System.Drawing.Common.Bitmap` throws `ArgumentException` instead of `ObjectDisposedException` when attempted to access properties","State":"open","Body":"* Runtime Ver.: .NET Core 3.0 P5 27626-15\r\n  * System.Drawing.Common package Ver.: 4.6.0-preview5-19224.8\r\n* OS Ver.: Windows 10 Home (Build No. 18912)\r\n\r\nConsider the following code:\r\n```cs\r\nSystem.Drawing.Common.Bitmap bm = new Bitmap(100, 100);\r\nbm.Dispose();\r\nint width = bm.Width;\r\n```\r\n\r\nNormally I'd expect this to throw `ObjectDisposedException` as the object is being used after its disposal. However, on both .NET Core and Framework, this results in `ArgumentException` being thrown instead:\r\n```\r\nParameter is not valid.\r\nStack trace:\r\n   at System.Drawing.Image.get_Width()\r\n   at dotnet_trace.Program.Main(String[] args) in C:\\Users\\gotos\\source\\repos\\ConsoleApp21\\ConsoleApp21\\Program.cs:line 13\r\n```\r\n\r\nIt seems rather absurd to see getter (which gets no parameter) throwing ArgumentException; Is this a design decision? Is there any plans to fix this to throw correct exception instead, given that it's more of a Windows component & port of .NET Framework (Mono?) therefore potentially it being a 'breaking change'?","Url":"https://github.com/dotnet/corefx/issues/38425","RelatedDescription":"Open issue \"`System.Drawing.Common.Bitmap` throws `ArgumentException` instead of `ObjectDisposedException` when attempted to access properties\" (#38425)"},{"Id":"454394850","IsPullRequest":true,"CreatedAt":"2019-06-10T22:08:29","Actor":"stephentoub","Number":"38424","RawContent":null,"Title":"Fix several comparison issues in ConcurrentBag","State":"open","Body":"A failed assert now and again in CI highlighted that we weren't properly accounting for overflows in ConcurrentBag.  In a variety of cases we compare the head position to the tail position, e.g. `head < tail` to determine if there are items in the queue, but in some situations when a position is temporarily updated, head can temporarily progress beyond tail, and if it does and wraps around due to overflow, we can end up in a situation where the condition passes even though it shouldn't.  This fixes all of the comparisons to do the subtraction and compare to 0, to avoid the overflow issue.\r\n\r\nSeparately, TrySteal had an inverted condition that was checking whether the queue contained at least 2 elements rather than checking whether it contained <= 2.  Also fixed that by inverting the check, along with doing the comparison appropriately per the above.\r\n\r\nFixes https://github.com/dotnet/corefx/issues/33500\r\ncc: @kouvel, @tarekgh ","Url":"https://github.com/dotnet/corefx/pull/38424","RelatedDescription":"Open PR \"Fix several comparison issues in ConcurrentBag\" (#38424)"},{"Id":"454337347","IsPullRequest":false,"CreatedAt":"2019-06-10T21:46:26","Actor":"crummel","Number":"38412","RawContent":null,"Title":"Source-build patch removal for CoreFX","State":"closed","Body":"Source-build has some patches that we are currently applying to your repo.  This issue tracks removing the patches.  These patches can be found at https://github.com/dotnet/source-build/tree/release/3.0/patches/corefx.\r\n\r\nPatches that have the responsibility \"Repo\" and the Disposition \"Incorporate\" are patches that we believe are valid source-build fixes that should be moved into your repo.  Please let us know if these don't seem like good patches.  Any changes with the responsibility \"source-build\" is something that we plan to keep going forward or integrate in another way - please also let us know if you think there may be problems with those patches.\r\n\r\nPatch name | Type | Disposition | Responsibility | Notes\r\n-- | -- | -- | -- | --\r\ncorefx/0001-Remove-publishing-package-that-source-build-doesn-t-.patch | Build | Incorporate | Repo |  ","Url":"https://github.com/dotnet/corefx/issues/38412","RelatedDescription":"Closed issue \"Source-build patch removal for CoreFX\" (#38412)"},{"Id":"454382016","IsPullRequest":true,"CreatedAt":"2019-06-10T21:28:28","Actor":"kouvel","Number":"38423","RawContent":null,"Title":"Expose and test Timer.Count","State":"open","Body":"- Depends on https://github.com/dotnet/coreclr/pull/25061\r\n- Fixes https://github.com/dotnet/corefx/issues/38422","Url":"https://github.com/dotnet/corefx/pull/38423","RelatedDescription":"Open PR \"Expose and test Timer.Count\" (#38423)"},{"Id":"454380158","IsPullRequest":false,"CreatedAt":"2019-06-10T21:23:43","Actor":"kouvel","Number":"38422","RawContent":null,"Title":"[API review] Add Timers.Count","State":"open","Body":"From https://github.com/dotnet/coreclr/issues/20372#issuecomment-497013866:\r\n\r\n```c#\r\nnamespace System.Threading\r\n{\r\n    public sealed class Timer\r\n    {\r\n        /// <summary>\r\n        /// Gets the number of timers that are currently scheduled.\r\n        /// </summary>\r\n        public static long Count { get; }\r\n    }\r\n}\r\n```\r\n\r\nEnables tracking the number of timers currently scheduled.\r\n- Used `long` instead of `int` because this API is somewhat similar in nature to `ThreadPool.PendingWorkItemCount` and the choice there was to use `long`","Url":"https://github.com/dotnet/corefx/issues/38422","RelatedDescription":"Open issue \"[API review] Add Timers.Count\" (#38422)"},{"Id":"454377799","IsPullRequest":false,"CreatedAt":"2019-06-10T21:17:45","Actor":"hyspace","Number":"38421","RawContent":null,"Title":"Discuss: Any plan to let System.Private.Uri following WHATWG URL Standard?","State":"open","Body":"Hi all,\r\n\r\nWe noticed that `System.Private.Uri` is not following [the WHATWG living standard of URL](https://url.spec.whatwg.org/), which results in some different parsing result comparing to major browsers.\r\n\r\nFor [example](https://url.spec.whatwg.org/#example-url-parsing):\r\n```cs\r\nUri.TryCreate(\"http:////example.com///\", UriKind.Absolute, out var uri)\r\n```\r\nwill return `false`, but the *Standard* is considering `http:////example.com///` as valid input and will correct it to `http://example.com///`.\r\nIf you try this example URL in any major browser you will get same result as *Standard* defined.\r\n\r\nThis type of difference made it difficult to use *.NET* and *C#* in web browsing related scenarios, like Crawlers or HTML Parsers.\r\n\r\nThe [AngleSharp](https://github.com/AngleSharp/AngleSharp) project is one of the most commonly used *C#* HTML Parser. Today, they have to implement their own `Url` Class to be able to parse URL in the way *Stardard* defined. I think it will be much better if *C#* core library can handle it correctly.\r\n\r\nAlone with the *Standard*, there is a [set of test cases about URL](https://github.com/web-platform-tests/wpt/blob/master/url/resources/urltestdata.json) for browsers or web developers to verify their implementation of the *Standard*. Today `System.Private.Uri` is failing many tests from it, including the example above.\r\n\r\nIs there any plan to let `System.Private.Uri` following WHATWG URL Standard?","Url":"https://github.com/dotnet/corefx/issues/38421","RelatedDescription":"Open issue \"Discuss: Any plan to let System.Private.Uri following WHATWG URL Standard?\" (#38421)"},{"Id":"454376200","IsPullRequest":true,"CreatedAt":"2019-06-10T21:13:58","Actor":"Dotnet-GitSync-Bot","Number":"38420","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"open","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @maryamariyan","Url":"https://github.com/dotnet/corefx/pull/38420","RelatedDescription":"Open PR \"Mirror changes from dotnet/coreclr\" (#38420)"},{"Id":"454374666","IsPullRequest":true,"CreatedAt":"2019-06-10T21:10:05","Actor":"tannergooding","Number":"38419","RawContent":null,"Title":"Allow a precision to be specified for the 'G' format in Utf8Formatter","State":"open","Body":"This resolves https://github.com/dotnet/corefx/issues/38416\r\n\r\n#### Description\r\n\r\nRemoves an artificial limitation in the Utf8Formatter that was preventing a precision from being given for the 'G' format specifier.\r\n\r\n#### Customer Impact\r\n\r\nTaking this fix will allow users utilizing System.Text.Json on .NET Framework or .NET Core versions prior to 3.0 to serialize single-precision or double-precision floating-point values in a manner which allows them to be roundtripped to the original value when deserializing.\r\n\r\n#### Regression\r\n\r\nNo\r\n\r\n#### Packaging Reviewed\r\n\r\nTBD\r\n\r\n#### Risk\r\n\r\nMinimal. The Utf8Formatter for `float`/`double` is merely forwarding to the `float.ToString` and `double.ToString` implementation. The same change (but allowing any format specifier) was already taken for .NET Core 3.0.","Url":"https://github.com/dotnet/corefx/pull/38419","RelatedDescription":"Open PR \"Allow a precision to be specified for the 'G' format in Utf8Formatter\" (#38419)"},{"Id":"454368879","IsPullRequest":false,"CreatedAt":"2019-06-10T20:56:11","Actor":"ahsonkhan","Number":"38418","RawContent":null,"Title":"The UTF-8 BOM within a file should be ignored when calling JsonSerializer.ReadAsync","State":"open","Body":"Similar to other APIs within the JSON stack that accept a stream (such as `JsonDocument.ParsAsync`), the `JsonSerializer.ReadAsync` should ignore the [UTF-8 BOM](https://en.wikipedia.org/wiki/Byte_order_mark#UTF-8) at the beginning of the stream (if one exists).\r\n\r\n\r\n\r\nCurrently, we throw an exception since that is invalid JSON:\r\n```text\r\nSystem.Text.Json.Serialization.Tests.StreamTests.ReadLargeFile [FAIL]\r\n        System.Text.Json.JsonException : '0xEF' is an invalid start of a value. Path: $ | LineNumber: 0 | BytePositionInLine: 0.\r\n        ---- System.Text.Json.JsonReaderException : '0xEF' is an invalid start of a value. LineNumber: 0 | BytePositionInLine: 0.\r\n        Stack Trace:\r\n          E:\\GitHub\\Fork\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\ThrowHelper.Serialization.cs(105,0): at System.Text.Json.ThrowHelper.ReThrowWithPath(JsonException exception, String path)\r\n          E:\\GitHub\\Fork\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonSerializer.Read.cs(118,0): at System.Text.Json.JsonSerializer.ReadCore(JsonSerializerOptions options, Utf8JsonReader& reader, ReadStack& readStack)\r\n          E:\\GitHub\\Fork\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonSerializer.Read.Stream.cs(211,0): at System.Text.Json.JsonSerializer.ReadCore(JsonReaderState& readerState, Boolean isFinalBlock, Span`1 buffer, JsonSerializerOptions options, ReadStack& readStack)\r\n          E:\\GitHub\\Fork\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonSerializer.Read.Stream.cs(144,0): at System.Text.Json.JsonSerializer.ReadAsync[TValue](Stream utf8Json, Type returnType, JsonSerializerOptions options, CancellationToken cancellationToken)\r\n          /_/src/System.Private.CoreLib/shared/System/Threading/Tasks/ValueTask.cs(759,0): at System.Threading.Tasks.ValueTask`1.get_Result()\r\n          E:\\GitHub\\Fork\\corefx\\src\\System.Text.Json\\tests\\Serialization\\Stream.ReadTests.cs(30,0): at System.Text.Json.Serialization.Tests.StreamTests.ReadLargeFile()\r\n          --- End of stack trace from previous location where exception was thrown ---\r\n          ----- Inner Stack Trace -----\r\n          E:\\GitHub\\Fork\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\ThrowHelper.cs(233,0): at System.Text.Json.ThrowHelper.ThrowJsonReaderException(Utf8JsonReader& json, ExceptionResource resource, Byte nextByte, ReadOnlySpan`1 bytes)\r\n          E:\\GitHub\\Fork\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Reader\\Utf8JsonReader.cs(1086,0): at System.Text.Json.Utf8JsonReader.ConsumeValue(Byte marker)\r\n          E:\\GitHub\\Fork\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Reader\\Utf8JsonReader.cs(954,0): at System.Text.Json.Utf8JsonReader.ReadFirstToken(Byte first)\r\n          E:\\GitHub\\Fork\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Reader\\Utf8JsonReader.cs(869,0): at System.Text.Json.Utf8JsonReader.ReadSingleSegment()\r\n          E:\\GitHub\\Fork\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Reader\\Utf8JsonReader.cs(258,0): at System.Text.Json.Utf8JsonReader.Read()\r\n          E:\\GitHub\\Fork\\corefx\\src\\System.Text.Json\\src\\System\\Text\\Json\\Serialization\\JsonSerializer.Read.cs(33,0): at System.Text.Json.JsonSerializer.ReadCore(JsonSerializerOptions options, Utf8JsonReader& reader, ReadStack& readStack)\r\n```\r\n\r\nFor example:\r\nhttps://github.com/dotnet/corefx/blob/dae07b7c0ef23d528baf60ce4f84e6b61c22ceb6/src/System.Text.Json/src/System/Text/Json/Document/JsonDocument.Parse.cs#L689\r\n\r\ncc @steveharter, @bartonjs ","Url":"https://github.com/dotnet/corefx/issues/38418","RelatedDescription":"Open issue \"The UTF-8 BOM within a file should be ignored when calling JsonSerializer.ReadAsync\" (#38418)"},{"Id":"454368069","IsPullRequest":true,"CreatedAt":"2019-06-10T20:54:22","Actor":"safern","Number":"38417","RawContent":null,"Title":"Add nullable annotations to System.Runtime.Loader ref","State":"open","Body":"Yet to be reviewed on API Review.\r\n\r\ncc: @dotnet/nullablefc @jkotas ","Url":"https://github.com/dotnet/corefx/pull/38417","RelatedDescription":"Open PR \"Add nullable annotations to System.Runtime.Loader ref\" (#38417)"},{"Id":"454368062","IsPullRequest":false,"CreatedAt":"2019-06-10T20:54:22","Actor":"tannergooding","Number":"38416","RawContent":null,"Title":"Allow a precision to be provided for the 'G' format in UTF8Formatter","State":"open","Body":"Full framework and .NET Core prior to 3.0 have different floating-point formatting behavior as compared to .NET Core 3.0 or higher. In particular, they do not produce roundtrippable strings by default.\r\n\r\nIn order to provide the best possible results for roundtripping and consistency between the UTF8 and UTF16 formatters, the UTF8Formatter should be fixed to allow a precision to be given for the 'G' format specifier.\r\n\r\nThis will allow System.Text.Json to use \"G17\" when serializing double-precision floating-point values on Full Framework and .NET Core versions prior to 3.0. This is the same format specifier that is used in System.Xml, Newtonsoft.Json, and most other serializers.\r\n* \"G17\" is used because \"R\" (the roundtrip format specifier), on Full Framework and .NET Core versions prior to 3.0, has some bugs that cause it to not always return a roundtrippable result.","Url":"https://github.com/dotnet/corefx/issues/38416","RelatedDescription":"Open issue \"Allow a precision to be provided for the 'G' format in UTF8Formatter\" (#38416)"},{"Id":"454363283","IsPullRequest":false,"CreatedAt":"2019-06-10T20:42:57","Actor":"ericstj","Number":"38415","RawContent":null,"Title":"Package Testing spends a ton of time downloading packages","State":"open","Body":"See https://github.com/dotnet/corefx/pull/38357#issuecomment-500575247\r\n\r\nI've reproduced this locally and see similar times 1+ minutes.  If I delete all the assets files and rebuild, then I see much faster times all less than a couple seconds.\r\n\r\nSo we should look into this to see how we can avoid all this redundant downloading to speed up the tests.\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/38415","RelatedDescription":"Open issue \"Package Testing spends a ton of time downloading packages\" (#38415)"},{"Id":"454352293","IsPullRequest":false,"CreatedAt":"2019-06-10T20:16:00","Actor":"buyaa-n","Number":"38414","RawContent":null,"Title":"JsonSerializer not parsing correctly struct with nested object","State":"open","Body":"JsonSerializer not parsing struct with nested object. Here in json all values of SimpleTestStruct is set including all arrays, collections but those reference type values are not set in parsed object (all value types are set correctly in parsed object). \r\nNote: this test runs successfully if SimpleTestStruct doesn't include `SampleStructWithObject MySampleStructWithObject { get; set; }` property\r\n```csharp\r\n[Fact]\r\npublic static void ReadStructObjectValueTest()\r\n{\r\n    json = \"{\\\"MyInt16\\\":1,\\\"MyInt32\\\":2,\\\"MyInt64\\\":3,\\\"MyUInt16\\\":4,\\\"MyUInt32\\\":5,\\\"MyUInt64\\\":6,\\\"MyByte\\\":7,\\\"MySByte\\\":8,\\\"MyChar\\\":\\\"a\\\",\\\"MyString\\\":\\\"Hello\\\",\\\"MyDecimal\\\":3.3,\" +\r\n      \"\\\"MyBooleanTrue\\\":true,\\\"MyBooleanFalse\\\":false,\\\"MySingle\\\":1.1,\\\"MyDouble\\\":2.2,\\\"MyDateTime\\\":\\\"2019-01-30T12:01:02Z\\\",\\\"MyDateTimeOffset\\\":\\\"2019-01-30T12:01:02+01:00\\\",\\\"MyEnum\\\":2,\" +\r\n      \"\\\"MyInt64Enum\\\":-9223372036854775808,\\\"MyUInt64Enum\\\":18446744073709551615,\\\"MySampleStruct\\\":{\\\"One\\\":11,\\\"Two\\\":1.9999},\\\"MySampleStructWithObject\\\":{\\\"One\\\":33,\\\"Class1\\\":{\\\"MyInt16\\\":0,\" +\r\n      \"\\\"MyInt32\\\":0,\\\"MyInt64\\\":0,\\\"MyUInt16\\\":0,\\\"MyUInt32\\\":0,\\\"MyUInt64\\\":0,\\\"MyByte\\\":0,\\\"MySByte\\\":0,\\\"MyChar\\\":\\\"\\\\u0000\\\",\\\"MyString\\\":\\\"Hello\\\",\\\"MyDecimal\\\":0,\\\"MyBooleanTrue\\\":false,\" +\r\n      \"\\\"MyBooleanFalse\\\":false,\\\"MySingle\\\":0,\\\"MyDouble\\\":3.14,\\\"MyDateTime\\\":\\\"0001-01-01T00:00:00\\\",\\\"MyDateTimeOffset\\\":\\\"0001-01-01T00:00:00+00:00\\\",\\\"MyEnum\\\":0,\\\"MyInt64Enum\\\":0,\\\"MyUInt64Enum\\\":0,\" +\r\n      \"\\\"MyInt16Array\\\":null,\\\"MyInt32Array\\\":null,\\\"MyInt64Array\\\":null,\\\"MyUInt16Array\\\":null,\\\"MyUInt32Array\\\":null,\\\"MyUInt64Array\\\":null,\\\"MyByteArray\\\":null,\\\"MySByteArray\\\":null,\\\"MyCharArray\\\":null,\" +\r\n      \"\\\"MyStringArray\\\":null,\\\"MyDecimalArray\\\":null,\\\"MyBooleanTrueArray\\\":null,\\\"MyBooleanFalseArray\\\":null,\\\"MySingleArray\\\":null,\\\"MyDoubleArray\\\":null,\\\"MyDateTimeArray\\\":null,\\\"MyDateTimeOffsetArray\\\":null,\" +\r\n      \"\\\"MyEnumArray\\\":null,\\\"MyInt16TwoDimensionArray\\\":null,\\\"MyInt16TwoDimensionList\\\":null,\\\"MyInt16ThreeDimensionArray\\\":null,\\\"MyInt16ThreeDimensionList\\\":null,\\\"MyStringList\\\":null,\\\"MyStringIEnumerableT\\\":null,\" +\r\n      \"\\\"MyStringIListT\\\":null,\\\"MyStringICollectionT\\\":null,\\\"MyStringIReadOnlyCollectionT\\\":null,\\\"MyStringIReadOnlyListT\\\":null,\\\"MyStringToStringDict\\\":null,\\\"MyStringToStringIDict\\\":null,\" +\r\n       \"\\\"MyStringToStringIReadOnlyDict\\\":null,\\\"MyStringToStringImmutableDict\\\":null,\\\"MyStringToStringIImmutableDict\\\":null,\\\"MyStringToStringImmutableSortedDict\\\":null,\\\"MyStringStackT\\\":null,\\\"MyStringQueueT\\\":null,\" +\r\n       \"\\\"MyStringHashSetT\\\":null,\\\"MyStringLinkedListT\\\":null,\\\"MyStringSortedSetT\\\":null,\\\"MyStringIImmutableListT\\\":null,\\\"MyStringIImmutableStackT\\\":null,\\\"MyStringIImmutableQueueT\\\":null,\\\"MyStringIImmutableSetT\\\":null,\" +\r\n       \"\\\"MyStringImmutableHashSetT\\\":null,\\\"MyStringImmutableListT\\\":null,\\\"MyStringImmutableStackT\\\":null,\\\"MyStringImmutablQueueT\\\":null,\\\"MyStringImmutableSortedSetT\\\":null,\\\"MyListOfNullString\\\":null}},\\\"MyInt16Array\\\":[1],\" +\r\n       \"\\\"MyInt32Array\\\":[2],\\\"MyInt64Array\\\":[3],\\\"MyUInt16Array\\\":[4],\\\"MyUInt32Array\\\":[5],\\\"MyUInt64Array\\\":[6],\\\"MyByteArray\\\":\\\"Bw==\\\",\\\"MySByteArray\\\":[8],\\\"MyCharArray\\\":[\\\"a\\\"],\\\"MyStringArray\\\":[\\\"Hello\\\"],\" +\r\n       \"\\\"MyDecimalArray\\\":[3.3],\\\"MyBooleanTrueArray\\\":[true],\\\"MyBooleanFalseArray\\\":[false],\\\"MySingleArray\\\":[1.1],\\\"MyDoubleArray\\\":[2.2],\\\"MyDateTimeArray\\\":[\\\"2019-01-30T12:01:02Z\\\"],\\\"MyDateTimeOffsetArray\\\":[\\\"2019-01-30T12:01:02+01:00\\\"],\" +\r\n       \"\\\"MyEnumArray\\\":[2],\\\"MyStringList\\\":[\\\"Hello\\\"],\\\"MyStringIEnumerableT\\\":[\\\"Hello\\\"],\\\"MyStringIListT\\\":[\\\"Hello\\\"],\\\"MyStringICollectionT\\\":[\\\"Hello\\\"],\\\"MyStringIReadOnlyCollectionT\\\":[\\\"Hello\\\"],\\\"MyStringIReadOnlyListT\\\":[\\\"Hello\\\"]}\";\r\n\r\n    SimpleTestStruct obj3 = JsonSerializer.Parse<SimpleTestStruct>(json);\r\n    obj3.Verify();\r\n}\r\n    public struct SampleStructWithObject\r\n    {\r\n        public int One { get; set; }\r\n        public SimpleTestClass Class1 { get; set; }\r\n    }\r\n\r\n    public struct SimpleTestStruct : ITestClass\r\n    {\r\n        public short MyInt16 { get; set; }\r\n        public int MyInt32 { get; set; }\r\n        public long MyInt64 { get; set; }\r\n        …\r\n        public SampleUInt64Enum MyUInt64Enum { get; set; }\r\n        public SampleStruct MySampleStruct { get; set; }\r\n        public SampleStructWithObject MySampleStructWithObject { get; set; }\r\n        public short[] MyInt16Array { get; set; }\r\n        public int[] MyInt32Array { get; set; }\r\n        public long[] MyInt64Array { get; set; }\r\n        …\r\n     }\r\n\r\n    public class SimpleTestClass : ITestClass\r\n    {\r\n        public short MyInt16 { get; set; }\r\n        public int MyInt32 { get; set; }\r\n        public long MyInt64 { get; set; }\r\n        ...\r\n        public SampleEnum MyEnum { get; set; }\r\n        public SampleInt64Enum MyInt64Enum { get; set; }\r\n        public SampleUInt64Enum MyUInt64Enum { get; set; }\r\n        public short[] MyInt16Array { get; set; }\r\n        public int[] MyInt32Array { get; set; }\r\n        public long[] MyInt64Array { get; set; }\r\n        …\r\n    }\r\n System.Text.Json.Serialization.Tests.ObjectTests.ReadStructObjectValueTest [FAIL]\r\n System.NullReferenceException : Object reference not set to an instance of an object.\r\n```","Url":"https://github.com/dotnet/corefx/issues/38414","RelatedDescription":"Open issue \"JsonSerializer not parsing correctly struct with nested object\" (#38414)"},{"Id":"454339031","IsPullRequest":true,"CreatedAt":"2019-06-10T19:43:47","Actor":"ahsonkhan","Number":"38413","RawContent":null,"Title":"Adding a document to highlight supported capabilities within the .NET Json stack for v1.","State":"open","Body":"cc @joshfree, @steveharter, @bartonjs, @terrajobst, @glennc, @rynowak, @pranavkm, @BrennanConroy, @davidfowl, @KrzysztofCwalina, @stephentoub  ","Url":"https://github.com/dotnet/corefx/pull/38413","RelatedDescription":"Open PR \"Adding a document to highlight supported capabilities within the .NET Json stack for v1.\" (#38413)"},{"Id":"454336054","IsPullRequest":true,"CreatedAt":"2019-06-10T19:36:34","Actor":"MarcoRossignoli","Number":"38411","RawContent":null,"Title":"[DRAFT]Issue with upaired surrogate conversion to utf16","State":"open","Body":"investigating https://github.com/dotnet/corefx/issues/38178\r\nTry to run on CI it works on my local\r\n\r\ncc: @maryamariyan ","Url":"https://github.com/dotnet/corefx/pull/38411","RelatedDescription":"Open PR \"[DRAFT]Issue with upaired surrogate conversion to utf16\" (#38411)"},{"Id":"454335416","IsPullRequest":true,"CreatedAt":"2019-06-10T19:35:42","Actor":"MarcoRossignoli","Number":"38410","RawContent":null,"Title":"[DRAFT]Issue with upaired surrogate conversion to utf16","State":"closed","Body":"Try to run on CI it works on my local.\r\n\r\ncc: @maryamariyan ","Url":"https://github.com/dotnet/corefx/pull/38410","RelatedDescription":"Closed or merged PR \"[DRAFT]Issue with upaired surrogate conversion to utf16\" (#38410)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"454478190","IsPullRequest":true,"CreatedAt":"2019-06-11T04:47:47","Actor":"dotnet-bot","Number":"36298","RawContent":null,"Title":"Merge release/dev16.2-preview3 to release/dev16.2-preview3-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.2-preview3 into release/dev16.2-preview3-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.2-preview3-to-release/dev16.2-preview3-vs-deps\ngit reset --hard upstream/release/dev16.2-preview3-vs-deps\ngit merge upstream/release/dev16.2-preview3\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.2-preview3-to-release/dev16.2-preview3-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36298","RelatedDescription":"Closed or merged PR \"Merge release/dev16.2-preview3 to release/dev16.2-preview3-vs-deps\" (#36298)"},{"Id":"454478216","IsPullRequest":true,"CreatedAt":"2019-06-11T04:47:42","Actor":"dotnet-bot","Number":"36300","RawContent":null,"Title":"Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.3-preview1 into release/dev16.3-preview1-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps\ngit reset --hard upstream/release/dev16.3-preview1-vs-deps\ngit merge upstream/release/dev16.3-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36300","RelatedDescription":"Closed or merged PR \"Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps\" (#36300)"},{"Id":"454478273","IsPullRequest":true,"CreatedAt":"2019-06-11T04:45:17","Actor":"dotnet-bot","Number":"36303","RawContent":null,"Title":"Merge master to features/param-nullchecking","State":"open","Body":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36303","RelatedDescription":"Open PR \"Merge master to features/param-nullchecking\" (#36303)"},{"Id":"454478254","IsPullRequest":true,"CreatedAt":"2019-06-11T04:45:12","Actor":"dotnet-bot","Number":"36302","RawContent":null,"Title":"Merge master-vs-deps to features/razorSupport2","State":"open","Body":"\nThis is an automatically generated pull request from master-vs-deps into features/razorSupport2.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-features/razorSupport2\ngit reset --hard upstream/features/razorSupport2\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-features/razorSupport2 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36302","RelatedDescription":"Open PR \"Merge master-vs-deps to features/razorSupport2\" (#36302)"},{"Id":"454478233","IsPullRequest":true,"CreatedAt":"2019-06-11T04:45:08","Actor":"dotnet-bot","Number":"36301","RawContent":null,"Title":"Merge master to features/lspSupport","State":"open","Body":"\nThis is an automatically generated pull request from master into features/lspSupport.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36301","RelatedDescription":"Open PR \"Merge master to features/lspSupport\" (#36301)"},{"Id":"454478199","IsPullRequest":true,"CreatedAt":"2019-06-11T04:45:00","Actor":"dotnet-bot","Number":"36299","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36299","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#36299)"},{"Id":"454478134","IsPullRequest":true,"CreatedAt":"2019-06-11T04:44:41","Actor":"dotnet-bot","Number":"36297","RawContent":null,"Title":"Merge master-vs-deps to release/dev16.3-preview1-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master-vs-deps into release/dev16.3-preview1-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-release/dev16.3-preview1-vs-deps\ngit reset --hard upstream/release/dev16.3-preview1-vs-deps\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-release/dev16.3-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36297","RelatedDescription":"Open PR \"Merge master-vs-deps to release/dev16.3-preview1-vs-deps\" (#36297)"},{"Id":"454478103","IsPullRequest":true,"CreatedAt":"2019-06-11T04:44:33","Actor":"dotnet-bot","Number":"36296","RawContent":null,"Title":"Merge release/dev16.1-vs-deps to release/dev16.2-preview2-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.1-vs-deps into release/dev16.2-preview2-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.1-vs-deps-to-release/dev16.2-preview2-vs-deps\ngit reset --hard upstream/release/dev16.2-preview2-vs-deps\ngit merge upstream/release/dev16.1-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.1-vs-deps-to-release/dev16.2-preview2-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36296","RelatedDescription":"Open PR \"Merge release/dev16.1-vs-deps to release/dev16.2-preview2-vs-deps\" (#36296)"},{"Id":"454478074","IsPullRequest":true,"CreatedAt":"2019-06-11T04:44:23","Actor":"dotnet-bot","Number":"36295","RawContent":null,"Title":"Merge master to release/dev16.3-preview1","State":"open","Body":"\nThis is an automatically generated pull request from master into release/dev16.3-preview1.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-release/dev16.3-preview1\ngit reset --hard upstream/release/dev16.3-preview1\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-release/dev16.3-preview1 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36295","RelatedDescription":"Open PR \"Merge master to release/dev16.3-preview1\" (#36295)"},{"Id":"454440552","IsPullRequest":true,"CreatedAt":"2019-06-11T04:41:18","Actor":"JoeRobich","Number":"36291","RawContent":null,"Title":"Update Version.props for 16.2 preview 4","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/36291","RelatedDescription":"Closed or merged PR \"Update Version.props for 16.2 preview 4\" (#36291)"},{"Id":"454290640","IsPullRequest":true,"CreatedAt":"2019-06-11T03:30:07","Actor":"dotnet-bot","Number":"36280","RawContent":null,"Title":"Merge master to features/param-nullchecking","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36280","RelatedDescription":"Closed or merged PR \"Merge master to features/param-nullchecking\" (#36280)"},{"Id":"454422596","IsPullRequest":true,"CreatedAt":"2019-06-11T03:00:20","Actor":"dotnet-bot","Number":"36288","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36288","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#36288)"},{"Id":"454422611","IsPullRequest":true,"CreatedAt":"2019-06-11T03:00:14","Actor":"dotnet-bot","Number":"36289","RawContent":null,"Title":"Merge master to features/lspSupport","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/lspSupport.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36289","RelatedDescription":"Closed or merged PR \"Merge master to features/lspSupport\" (#36289)"},{"Id":"454422627","IsPullRequest":true,"CreatedAt":"2019-06-11T02:30:07","Actor":"dotnet-bot","Number":"36290","RawContent":null,"Title":"Merge master-vs-deps to features/razorSupport2","State":"closed","Body":"\nThis is an automatically generated pull request from master-vs-deps into features/razorSupport2.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-features/razorSupport2\ngit reset --hard upstream/features/razorSupport2\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-features/razorSupport2 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36290","RelatedDescription":"Closed or merged PR \"Merge master-vs-deps to features/razorSupport2\" (#36290)"},{"Id":"454451329","IsPullRequest":false,"CreatedAt":"2019-06-11T02:27:50","Actor":"vsfeedback","Number":"36294","RawContent":null,"Title":"VS2019, C# : Cannot peek inside an active peek unless the current peek target is already opened as a proper file (applies only to non-std peek target symbols)","State":"open","Body":"VSF_TYPE_MARKDOWNSteps:\n\n1. Have different files with different custom types and methods.\n2. Close them all except one that uses types/methods from other files.\n3. Peek into any such custom type or method definition.\n4. Inside that peek window, only symbols from the standard library and symbols local to the target file (of the peek) are properly highlighted and you can peek at them.\n5. If you open the file of the target of (3), the peek window in (4) should have the proper highlighting and you can peek at them properly.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/482007/vs2019-c-cannot-peek-inside-an-active-peek-unless.html\nVSTS ticketId: 814177_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 3/7/2019, 08:11 PM (95 days ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\nVisual Studio Feedback System on 3/8/2019, 00:55 AM (94 days ago): <p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\nSara Shi [MSFT] on 3/12/2019, 02:47 AM (90 days ago): <p>Thank you for your feedback! I tried to repro the issue, </p><ol>\n<li>Create a console app, add Box.cs</li><li> add reference of Box.cs in Program.cs</li><li> set caret at Box, invoke 'peek Definition'</li><li>inside the peek window, set caret at symbols ,invoke 'peek definition'<p><img src=\"https://developercommunity.visualstudio.com/storage/temp/62980-capture1.png\"></p><strong></strong><u></u><sub></sub><sup></sup></li><li>open Box.cs, we can invoke peek window.<p><img src=\"https://developercommunity.visualstudio.com/storage/temp/62981-capture2.png\"></p></li></ol><p>Could you confirm if my steps are correct and what do you mean of step 4,5? Could you provide some more detailed description or screenshots follow the attached project <a target='_blank' href=\"https://developercommunity.visualstudio.com/storage/attachments/62970-consoleappc.zip\">consoleappc.zip</a> to help us better understand this scenario? </p><p>We look forward to hearing from you!</p>\n\nMuhammad Nael [MSFT] on 3/12/2019, 06:22 AM (90 days ago): <p>Hi!</p><p>I modified the project and included it with 2 screenshots. If `Thing` in `Box` were a symbol from the .NET 'standard library' (I don't know what else to call it), it wouldn't have the same issue. The issue shows in the `Box.cs-closed` screenshot.</p><p>* Box.cs is not open. `Thing` is not highlighted and cannot be peeked into.</p><p><img src=\"https://developercommunity.visualstudio.com/storage/attachments/63049-boxcs-closed.png\"></p><p>* Box.cs is open and `Thing` is properly highlighted and reachable by peek in the peek into Box.cs from Program.cs.</p><p><img src=\"https://developercommunity.visualstudio.com/storage/attachments/63050-boxcs-opened.png\"></p>\n\nVisual Studio Feedback System on 3/12/2019, 09:35 PM (89 days ago): <p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\nVisual Studio Feedback System on 4/10/2019, 03:03 AM (61 days ago): <p>Thank you for sharing your feedback! Our teams prioritize action on product issues with broad customer impact. See details at:  https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2017#faq . In case you need answers to common questions or need assisted support, be sure to use  https://visualstudio.microsoft.com/vs/support/ . We'll keep you posted on any updates to this feedback.</p>\n\nLeon(Work) Yang on 6/4/2019, 01:35 PM (6 days ago): <strong>(private comment)</strong><p>similar issue with Mouse Click got to definition, the peek view is not recursive , I guess it's same root cause.</p><p><a target='_blank' href=\"https://developercommunity.visualstudio.com/storage/attachments/76837-mouseclickgotodefinition.png\">mouseclickgotodefinition.png</a></p>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/36294","RelatedDescription":"Open issue \"VS2019, C# : Cannot peek inside an active peek unless the current peek target is already opened as a proper file (applies only to non-std peek target symbols)\" (#36294)"},{"Id":"454446665","IsPullRequest":true,"CreatedAt":"2019-06-11T02:06:16","Actor":"ivanbasov","Number":"36293","RawContent":null,"Title":"IntelliSense not shown for overloaded methods, one with enums","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/36187","Url":"https://github.com/dotnet/roslyn/pull/36293","RelatedDescription":"Open PR \"IntelliSense not shown for overloaded methods, one with enums\" (#36293)"},{"Id":"454264308","IsPullRequest":true,"CreatedAt":"2019-06-11T01:45:13","Actor":"JoeRobich","Number":"36275","RawContent":null,"Title":"Update publish data for 16.2-preview3 snap","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/36275","RelatedDescription":"Closed or merged PR \"Update publish data for 16.2-preview3 snap\" (#36275)"},{"Id":"454440881","IsPullRequest":true,"CreatedAt":"2019-06-11T01:37:59","Actor":"JoeRobich","Number":"36292","RawContent":null,"Title":"Update Version.props for 16.3 preview 1","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/36292","RelatedDescription":"Open PR \"Update Version.props for 16.3 preview 1\" (#36292)"},{"Id":"454422512","IsPullRequest":true,"CreatedAt":"2019-06-11T00:15:33","Actor":"dotnet-bot","Number":"36287","RawContent":null,"Title":"Merge release/dev16.1-vs-deps to release/dev16.2-preview2-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.1-vs-deps into release/dev16.2-preview2-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.1-vs-deps-to-release/dev16.2-preview2-vs-deps\ngit reset --hard upstream/release/dev16.2-preview2-vs-deps\ngit merge upstream/release/dev16.1-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.1-vs-deps-to-release/dev16.2-preview2-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36287","RelatedDescription":"Closed or merged PR \"Merge release/dev16.1-vs-deps to release/dev16.2-preview2-vs-deps\" (#36287)"},{"Id":"454416079","IsPullRequest":true,"CreatedAt":"2019-06-10T23:30:03","Actor":"ryzngard","Number":"36286","RawContent":null,"Title":"Propogate nullable type information for EncapsulateFieldService ","State":"open","Body":"Fixes #30320 \t\r\n\r\nMake sure to use `WithNullability` when passing the type.\r\nAdd a test for `string?` property generation","Url":"https://github.com/dotnet/roslyn/pull/36286","RelatedDescription":"Open PR \"Propogate nullable type information for EncapsulateFieldService \" (#36286)"},{"Id":"454412142","IsPullRequest":false,"CreatedAt":"2019-06-10T23:13:13","Actor":"jcouv","Number":"36285","RawContent":null,"Title":"Test plan for \"generic attributes\"","State":"open","Body":"[Championed issue](https://github.com/dotnet/csharplang/issues/124) \r\nLatest [LDM notes](https://github.com/dotnet/csharplang/blob/master/meetings/2017/LDM-2017-02-21.md#generic-attributes).\r\n\r\n## Compiler\r\n- [ ] test consuming a generic attribute from a C# 7 compiler\r\n\r\n## Productivity\r\n- [ ] verify typing and completion behavior in IDE","Url":"https://github.com/dotnet/roslyn/issues/36285","RelatedDescription":"Open issue \"Test plan for \"generic attributes\"\" (#36285)"},{"Id":"454407714","IsPullRequest":true,"CreatedAt":"2019-06-10T22:54:57","Actor":"jcouv","Number":"36284","RawContent":null,"Title":"Adjust type of out var based on parameter state","State":"open","Body":"\r\nRelates to https://github.com/dotnet/roslyn/issues/35816 (list of work items related to nullable annotation attributes)","Url":"https://github.com/dotnet/roslyn/pull/36284","RelatedDescription":"Open PR \"Adjust type of out var based on parameter state\" (#36284)"},{"Id":"454407491","IsPullRequest":true,"CreatedAt":"2019-06-10T22:54:04","Actor":"JoeRobich","Number":"36283","RawContent":null,"Title":"Reduce dependencies","State":"open","Body":"A few issues were found when validating NuGet packages for the 16.2 preview2 release.\r\n\r\n1. It looks like Microsoft.CodeAnalysis.editorfeatures.common is missing from NuGet and is preventing me from installing Microsoft.VisualStudio.LanguageServices.3.2.0-beta2-final.nupkg as it is dependent on it. (https://github.com/dotnet/roslyn/issues/30662)\r\n2. Also I’m getting this error on upgrade that Microsoft.CodeAnalysis.FlowAnalysis.Utilities is missing (from Microsoft.CodeAnalysis.Features) as well.\r\n\r\n@tmat and @jasonmalinowski  please take a look","Url":"https://github.com/dotnet/roslyn/pull/36283","RelatedDescription":"Open PR \"Reduce dependencies\" (#36283)"},{"Id":"454360055","IsPullRequest":false,"CreatedAt":"2019-06-10T20:35:10","Actor":"vsfeedback","Number":"36282","RawContent":null,"Title":"Build is working in VS 2019, but failing using VS 2017 / .NET CLI / Rider","State":"open","Body":"VSF_TYPE_MARKDOWNI'm aware what kind of compiler is used in VS 2019. We have a situation, where build is failing on VS 2017 / .NET CLI / Rider, but is working fine on VS 2019. I have prepared a simple solution for &quot;easy to reproduce&quot; problem.\n\n1. Download Test.7z\n2. Unpack\n3. Build using:\na) VS 2019 - will work\nb) VS 2017 - will fail\nc) Rider - will fail\nd) .NET CLI (`dotnet build Test.sln`)- will fail\n\nWith following errors:\n&gt;Build FAILED.\n&gt;Class1.cs(22,18): error CS0121: The call is ambiguous between the following methods or properties: 'AsyncResultExtensionsRightOperand.Ensure(Result, Func&lt;Task&lt;bool&gt;&gt;, string)' and 'ResultExtensions.Ensure(Result, Func&lt;bool&gt;, string)' [Test\\ Test.csproj]\n&gt;    0 Warning(s)\n&gt;    1 Error(s)\n&gt;Time Elapsed 00:00:01.08\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/599156/build-is-working-in-vs-2019-but-failing-using-vs-2.html\nVSTS ticketId: 911332_\n_These are the original issue comments:_\n\nsygnowski.p on 6/7/2019, 05:29 AM (3 days ago): I've created a repository with example code in GitHub:  https://github.com/sygnowskip/build-problem \nJeff Schwartz [MSFT] on 6/7/2019, 03:36 PM (2 days ago): <p>Thank you <a rel=\"user\" href=\"https://developercommunity.visualstudio.com/users/165367/df688de8-3d38-4599-a530-0d93562c4a9e.html\" nodeid=\"165367\">@sygnowski.p</a> for the feedback and repro.  I have a few additional questions...  Are you seeing these all fail on the same machine or different machines?  What version of the SDK are you using?  (dotnet --list-sdks)</p><p>I gave your repro a try on 2.1.601 and the issue did not repro, but on 2.1.202 it did.  Have you tried updating to the latest 2.1, or 2.2 version?</p><p>https://dotnet.microsoft.com/download/dotnet-core/2.1</p>\n\nPawel Sygnowski on 6/7/2019, 11:28 PM (2 days ago): <p>I've tested it on two machines:</p><ul><li>Windows 10 with following SDKs installed:<br>2.1.300<br>2.1.403<br>2.1.500<br>2.1.505<br>2.1.700<br>2.2.100</li><li>Mojave macOS with following SDKs installed:<br>1.0.0-preview2-1-003177<br>1.0.1<br>2.0.0<br>2.1.403<br>2.1.505<br>2.2.101<br>2.2.107</li></ul>And the same issue is on both of them (also, I've asked few of my friends to build this and they have the same issue, but I don't know which SDK's they have on their machines).<br><br><p>As you suggest, I've installed the newest available .NET Core SDK - 2.2.300.</p><p>I've tested it again using the newest SDK and the results are:</p><ul><li>VS 2019 16.1.2 - build is working fine</li><li>Rider 2019.1.2 - build is working fine</li><li>.NET CLI - build is working fine</li><li>VS 2017 15.9.12 - build is still not working, with the same issue as above</li></ul>\n\nVisual Studio Feedback System on 6/9/2019, 08:19 PM (17 hours ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\nJeff Schwartz [MSFT] on 6/10/2019, 09:01 AM (4 hours ago): <p><a rel=\"user\" href=\"https://developercommunity.visualstudio.com/users/165386/444ee3ff-b973-6f10-ad3d-04c9f042ea7b.html\" nodeid=\"165386\">@Pawel Sygnowski</a> thank you for all the details.  I am glad to hear the latest SDK is working in all but VS 2017.  This question may be better answered on https://github.com/dotnet/sdk.  I am going to also move it to my colleague on the SDK team.</p>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/36282","RelatedDescription":"Open issue \"Build is working in VS 2019, but failing using VS 2017 / .NET CLI / Rider\" (#36282)"},{"Id":"454290584","IsPullRequest":true,"CreatedAt":"2019-06-10T19:30:09","Actor":"dotnet-bot","Number":"36279","RawContent":null,"Title":"Merge master-vs-deps to features/razorSupport2","State":"closed","Body":"\nThis is an automatically generated pull request from master-vs-deps into features/razorSupport2.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-features/razorSupport2\ngit reset --hard upstream/features/razorSupport2\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-features/razorSupport2 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36279","RelatedDescription":"Closed or merged PR \"Merge master-vs-deps to features/razorSupport2\" (#36279)"},{"Id":"454290524","IsPullRequest":true,"CreatedAt":"2019-06-10T19:05:39","Actor":"dotnet-bot","Number":"36277","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36277","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#36277)"},{"Id":"454290550","IsPullRequest":true,"CreatedAt":"2019-06-10T19:05:34","Actor":"dotnet-bot","Number":"36278","RawContent":null,"Title":"Merge master to features/lspSupport","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/lspSupport.\n(created from a manual run of the PR generation tool)\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36278","RelatedDescription":"Closed or merged PR \"Merge master to features/lspSupport\" (#36278)"},{"Id":"454291006","IsPullRequest":false,"CreatedAt":"2019-06-10T17:56:13","Actor":"vsfeedback","Number":"36281","RawContent":null,"Title":"VS 16.1.2 - Suppress In Source Pragma Restore Statement On Wrong Line","State":"open","Body":"VSF_TYPE_MARKDOWNWhen I use 'Suppress in source' on the `return` line in the following code: \n```\npublic class Class\n{\n    public void Test()\n    {\n        if (1 == 2)\n        {\n            return; /// &lt;see cref=&quot;Class&quot;/&gt;\n        }\n    }\n}\n```\n\nThe `pragma warning restore` line is put after the closing brace of the if statement.\n```\npublic class Class\n{\n    public void Test()\n    {\n        if (1 == 2)\n        {\n#pragma warning disable CS0162 // Unreachable code detected\n            return; /// &lt;see cref=&quot;Class&quot;/&gt;\n        }\n#pragma warning restore CS0162 // Unreachable code detected\n    }\n}\n```\n\nShouldn't it be directly after the return statement?\n```\npublic class Class\n{\n    public void Test()\n    {\n        if (1 == 2)\n        {\n#pragma warning disable CS0162 // Unreachable code detected\n            return; /// &lt;see cref=&quot;Class&quot;/&gt;\n#pragma warning restore CS0162 // Unreachable code detected\n        }\n    }\n}\n```\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/599633/vs-1612-suppress-in-source-pragma-restore-statemen.html\nVSTS ticketId: 911721_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 6/10/2019, 02:33 AM (8 hours ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\nVisual Studio Feedback System on 6/10/2019, 10:54 AM (95 sec ago): <p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/36281","RelatedDescription":"Open issue \"VS 16.1.2 - Suppress In Source Pragma Restore Statement On Wrong Line\" (#36281)"},{"Id":"454268786","IsPullRequest":false,"CreatedAt":"2019-06-10T17:01:09","Actor":"AlekseyTs","Number":"36276","RawContent":null,"Title":"Inconsistent handling of `dynamic` generic type constraint when overriding is involved.","State":"open","Body":"```\r\n#nullable enable\r\nclass TestDynamic1<T>\r\n{\r\n    public virtual void M<S>() where S : T\r\n    {\r\n    }\r\n}\r\n\r\nclass TestDynamic2 : TestDynamic1<dynamic>\r\n{\r\n    public override void M<S>()\r\n    {\r\n    }\r\n\r\n    void Test()\r\n    {\r\n        base.M<object?>();\r\n        this.M<object?>();\r\n    }\r\n}\r\n```\r\n\r\nObserved:\r\n```\r\n.cs(17,9): warning CS8631: The type 'object?' cannot be used as type parameter 'S' in the generic type or method 'TestDynamic1<dynamic>.M<S>()'. Nullability of type argument 'object?' doesn't match constraint type 'dynamic'.\r\n```\r\n\r\nExpected to get an additional similar warning for the ```this.M<object?>()``` method ```TestDynamic2.M<S>()```. Both methods have the same signatures and constraints.\r\n\r\nI think this is caused by the fact that \r\n```\r\n        public static TypeParameterBounds ResolveBounds(\r\n            this TypeParameterSymbol typeParameter,\r\n            AssemblySymbol corLibrary,\r\n            ConsList<TypeParameterSymbol> inProgress,\r\n            ImmutableArray<TypeWithAnnotations> constraintTypes,\r\n            bool inherited,\r\n            CSharpCompilation currentCompilation,\r\n            ArrayBuilder<TypeParameterDiagnosticInfo> diagnosticsBuilder,\r\n            ref ArrayBuilder<TypeParameterDiagnosticInfo> useSiteDiagnosticsBuilder)\r\n```\r\nin ConstraintsHelper filters out `dynamic` constraint. That method shouldn't filter out any constraints. The `dynamic` constraint should be filtered out or converted to `object` in the same places where we decide if `object` constraint should be filtered out or not.","Url":"https://github.com/dotnet/roslyn/issues/36276","RelatedDescription":"Open issue \"Inconsistent handling of `dynamic` generic type constraint when overriding is involved.\" (#36276)"},{"Id":"454261607","IsPullRequest":false,"CreatedAt":"2019-06-10T16:43:28","Actor":"agocke","Number":"36274","RawContent":null,"Title":"Provide API for IAssemblySymbol to retrieve type forwards","State":"open","Body":"There's already an internal API on PEModuleSymbol, GetForwardedTypes, but I don't think it's ready to be made public. We should actually do some design work to figure out how we want this API to behave.","Url":"https://github.com/dotnet/roslyn/issues/36274","RelatedDescription":"Open issue \"Provide API for IAssemblySymbol to retrieve type forwards\" (#36274)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"454427739","IsPullRequest":true,"CreatedAt":"2019-06-11T00:26:49","Actor":"Suchiman","Number":"7511","RawContent":null,"Title":"Port GC changes from coreclr - 15","State":"open","Body":"This port continues https://github.com/dotnet/corert/pull/7508\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/4932d0f6fa87b9a6e3293aacd35cecedde44d87a):**\r\n- https://github.com/dotnet/coreclr/commit/dacab04a17e0cd4ed2b321be936f233cf75bb7e8 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/c1801e85024add717f518feb6a9caed60d54500f (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/5a97d8e9f14763a4ff90d14d045f0173e8d4b944 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/4685a1e008ad7cf4118e8778d89e63d87ca5b7b6 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/23fbf7e7ab231876b9d54b52bac044cdde159118 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/66009329a187634dc432854cdd7c893d972156eb (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/07f9f2f101754c38570ed75ce9a7083090769a0f (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/6100a9faf1c29b06aed3ad5bef00ce905880309d (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/cf887c943bf1dee978bc863b7481686ecee8ad83 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/cc14e6cecf6984c991fe906c9fe4b327b4f93f96 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/67f1116cea421ebbe516fafc963e213cc6f0e117 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/94359a5208206be08ff44a1fc14e0334e2af2071 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/cb8b829fd3717acc2688025341f822e4097cf5c5 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/dd80afe98f969e3a309917643c0e45e83aaa37bf (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/6e629e9ccd58be36fcc858d357cdf0811bdcb380 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/aea3b1a80d6c114e3e67bc9521bf39a8a17371d1 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/98d2b480ff9fc207f568ed2ac8dcbcb7c9d6a719 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/2c6c6c9ffe6ef40320dfce3c6e53e953485f21a6 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/d33f73f69051d2861454081bb3211615413d8ed0 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/060990945a0117cb824b9d1c1e6c3a336533a3ee (manual port)","Url":"https://github.com/dotnet/corert/pull/7511","RelatedDescription":"Open PR \"Port GC changes from coreclr - 15\" (#7511)"},{"Id":"454365589","IsPullRequest":true,"CreatedAt":"2019-06-11T00:21:51","Actor":"Suchiman","Number":"7508","RawContent":null,"Title":"Port GC changes from coreclr - 14","State":"closed","Body":"This port continues https://github.com/dotnet/corert/pull/7495\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/71f259caa6fe9a167be38fa2433003a4c35c9657):**\r\n- https://github.com/dotnet/coreclr/commit/d62143d4ae97833081c5f235a91dea95da4461a0 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/b25304c757219d3103f691f615b5fa70ed22e92e (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/1db91c5acd17384952d1e1f8e3079c2c8cfb78f6 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/aa13ca95d633e9251fa040533d3d5650808455c0 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/03ab0ca0f81313319f30cfd75ee56dc59d71390c (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/616fea550548af750b575f3c304d1a9b4b6ef9a6 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/9107ff1d48a2454d1ac84a8dfa97178809d8e793 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/a28b25aacdcd2adb0fdfa70bd869f53ba6565976 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/ed52a006c01a582d4d34add40c318d6f324b99ba (gc only port, except omitted cgroup conflict)\r\n- https://github.com/dotnet/coreclr/commit/46cbd93c20780bcacd9f39fe18079acf2a9f4178 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/5bb7eb68035e98e356aba68115e28ed22d3d34aa (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/36931ac7b24249201547f7ca667105014b2e4c7f (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/d559d44e02471854748763a6c7eb52cbdc56168f (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/2dfd1779ae9eebe89b223cff6fd77825301971dd (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/bd84f468ac3f82847669d49614d01eba8dd2a9a0 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/0495f7377fca88999d335757e9680052cfedc51d (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/4932d0f6fa87b9a6e3293aacd35cecedde44d87a (gc only port, omitted changes)","Url":"https://github.com/dotnet/corert/pull/7508","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr - 14\" (#7508)"},{"Id":"454376259","IsPullRequest":true,"CreatedAt":"2019-06-11T00:21:41","Actor":"Dotnet-GitSync-Bot","Number":"7509","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @maryamariyan","Url":"https://github.com/dotnet/corert/pull/7509","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7509)"},{"Id":"454422699","IsPullRequest":false,"CreatedAt":"2019-06-11T00:01:23","Actor":"timmydo","Number":"7510","RawContent":null,"Title":"CoreRT doesn't support scratch docker image.","State":"open","Body":"See also #4552.\r\n\r\nI'd like to create a docker image like this. Sample dockerfile\r\n```\r\nFROM microsoft/dotnet:3.0-sdk AS build\r\nWORKDIR /app\r\nRUN apt-get update && apt-get install -y libkrb5-dev zlib1g-dev clang-3.9\r\nRUN wget https://github.com/dotnet/corert/raw/master/samples/HelloWorld/HelloWorld.csproj https://github.com/dotnet/corert/raw/master/samples/HelloWorld/Program.cs\r\nRUN dotnet restore --runtime linux-x64\r\nRUN dotnet publish -c Release -r linux-x64 -o out\r\n\r\nFROM scratch AS runtime\r\nWORKDIR /app\r\nCOPY --from=build /app/out/* /app/\r\nENTRYPOINT [\"/app/HelloWorld\"] \r\n```\r\n\r\nError: docker run --rm -it a7b54e604622\r\nstandard_init_linux.go:211: exec user process caused \"no such file or directory\"\r\n\r\nIf I change `scratch` to `alpine`:\r\n\r\n```\r\n/app # ldd HelloWorld\r\n        /lib64/ld-linux-x86-64.so.2 (0x7ffa3ddb4000)\r\nError loading shared library libstdc++.so.6: No such file or directory (needed by HelloWorld)\r\n        libdl.so.2 => /lib64/ld-linux-x86-64.so.2 (0x7ffa3ddb4000)\r\n        libm.so.6 => /lib64/ld-linux-x86-64.so.2 (0x7ffa3ddb4000)\r\n        librt.so.1 => /lib64/ld-linux-x86-64.so.2 (0x7ffa3ddb4000)\r\nError loading shared library libgcc_s.so.1: No such file or directory (needed by HelloWorld)\r\n        libpthread.so.0 => /lib64/ld-linux-x86-64.so.2 (0x7ffa3ddb4000)\r\n        libc.so.6 => /lib64/ld-linux-x86-64.so.2 (0x7ffa3ddb4000)\r\nError loading shared library ld-linux-x86-64.so.2: No such file or directory (needed by HelloWorld)\r\nError relocating HelloWorld: _Znam: symbol not found\r\nError relocating HelloWorld: _ZSt9terminatev: symbol not found\r\nError relocating HelloWorld: __cxa_begin_catch: symbol not found\r\nError relocating HelloWorld: __cxa_allocate_exception: symbol not found\r\nError relocating HelloWorld: _ZdlPvRKSt9nothrow_t: symbol not found\r\nError relocating HelloWorld: __cxa_guard_abort: symbol not found\r\nError relocating HelloWorld: __cxa_guard_release: symbol not found\r\nError relocating HelloWorld: _ZdlPv: symbol not found\r\nError relocating HelloWorld: _Znwm: symbol not found\r\nError relocating HelloWorld: _ZdaPv: symbol not found\r\nError relocating HelloWorld: _ZnamRKSt9nothrow_t: symbol not found\r\nError relocating HelloWorld: __cxa_throw: symbol not found\r\nError relocating HelloWorld: __cxa_thread_atexit: symbol not found\r\nError relocating HelloWorld: _Unwind_Resume: symbol not found\r\nError relocating HelloWorld: __cxa_guard_acquire: symbol not found\r\nError relocating HelloWorld: _ZnwmRKSt9nothrow_t: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv120__si_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv120__si_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv120__si_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv120__si_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv120__si_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv120__si_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv120__si_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv120__si_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv117__class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv117__class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv117__class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv117__class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv117__class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv117__class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv117__class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv121__vmi_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZTVN10__cxxabiv121__vmi_class_type_infoE: symbol not found\r\nError relocating HelloWorld: _ZSt7nothrow: symbol not found\r\nError relocating HelloWorld: _ZTIPKc: symbol not found\r\nError relocating HelloWorld: __gxx_personality_v0: symbol not found\r\n```\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7510","RelatedDescription":"Open issue \"CoreRT doesn't support scratch docker image.\" (#7510)"},{"Id":"453292828","IsPullRequest":true,"CreatedAt":"2019-06-10T20:31:44","Actor":"Suchiman","Number":"7495","RawContent":null,"Title":"Port GC changes from coreclr - 13","State":"closed","Body":"This port continues https://github.com/dotnet/corert/pull/7478\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/ca5b0d1caa47abdebac13233553c6e44db2e3168):**\r\n- https://github.com/dotnet/coreclr/commit/a1404cafbe1cd15a5c0cfbd4995ad97694b708bd (manual port)\r\n- https://github.com/dotnet/coreclr/commit/00ab7387d849da889ebf6aac432ec989091bacec (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/00a5ee589b565ebcd068c5851315a997848ed98c (manual port)\r\n- https://github.com/dotnet/coreclr/commit/d82fc2062925ced3fb5c479ff8db7ef61cc4f290 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/35d424404f9930620204f3cc351992c0d9bd3b8a (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/cd1f0d9ad32cacd9d2ac2998f368bc196c40754a (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/73a0bc0d549d1c8e41261891dcc2974fb8024556 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/d1bb5271192ddac3d0d31ee6168afdc3c58f55da (manual port)\r\n- https://github.com/dotnet/coreclr/commit/b67d2fa8fc8cf5b8c41f5c34b1abe31e704386c4 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/af0c1f287d31ca3a641151df60baa7371635f508 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/340b5708ce38230f1af66acf832547996aa0b2ff (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/3ff82040ea7be4f8c260b237690f2f0553c7cac6 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/6fe7effad7fddf8d5dc0b3ac3d5be5ec80e158ff (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/2bf55bc5ca8b09dd26e32a9ee259ab22fb69806b (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/8d6583e38f4e9b00ec21666225760a0df97afaec (skipped, reverted in next commit)\r\n- https://github.com/dotnet/coreclr/commit/53e0cce55692cd568a1dce218a2089146aa8e4f8 (skipped, reverts prior commit)\r\n- https://github.com/dotnet/coreclr/commit/b3859ce4debbeab0c0a04b8a519eded46bf67517 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/171837ddfef844e0f2952b9ce2df5af6bb65848a (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/488d2a70ba59c58b26aa3f4f988a42f6b8927146 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/4a6753dcacf44df6a8e91b91029e4b7a4f12d917 (skipped, cgroups changes)\r\n- https://github.com/dotnet/coreclr/commit/71f259caa6fe9a167be38fa2433003a4c35c9657 (gc only port, omitted changes)","Url":"https://github.com/dotnet/corert/pull/7495","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr - 13\" (#7495)"},{"Id":"454352531","IsPullRequest":true,"CreatedAt":"2019-06-10T20:16:38","Actor":"trylek","Number":"7507","RawContent":null,"Title":"Constrained calls pt. 2 - actually add constrained type to MethodWithToken","State":"open","Body":"This change modifies MethodWithToken to optionally include the constrained type information and changes most places in the CPAOT compiler that were previously passing the separated triplet of MethodDesc / ModuleToken / TypeDesc to use the newly beefed up MethodWithToken.\r\n\r\nAs additional changes of note I removed the \"originalMethod\" parameter to MethodEntrypoint as it was almost unused and I deleted an orphaned method MethodGenericDictionary. I have decided to keep this change mostly mechanical to make git history cleaner.\r\n\r\nThanks\r\n\r\nTomas\r\n","Url":"https://github.com/dotnet/corert/pull/7507","RelatedDescription":"Open PR \"Constrained calls pt. 2 - actually add constrained type to MethodWithToken\" (#7507)"},{"Id":"454186830","IsPullRequest":false,"CreatedAt":"2019-06-10T14:02:34","Actor":"eyupkayadarcin","Number":"7506","RawContent":null,"Title":"Internal.TypeSystem.TypeSystemException+TypeLoadException when using EntityFrameworkCore with Npgsql","State":"open","Body":"I've got a dotnet core 2.1 project . I'm getting a Internal.TypeSystem.TypeSystemException+TypeLoadException after compilation (using dotnet publish -r win-x64 -c release):\r\n\r\nInternal.TypeSystem.TypeSystemException+TypeLoadException: [TEMPORARY EXCEPTION MESSAGE] ClassLoadGeneral: Microsoft.EntityFrameworkCore.Storage.Internal.NpgsqlArrayTypeMapping, Npgsql.EntityFrameworkCore.PostgreSQL, Version=2.1.2.0, Culture=neutral, PublicKeyToken=5d8b90d52f46fda7\r\n     at Internal.TypeSystem.ThrowHelper.ThrowTypeLoadException(ExceptionStringID id, String typeName, String assemblyName)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetType(String nameSpace, String name, Boolean throwIfNotFound)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.ResolveTypeReference(TypeReferenceHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.EcmaObjectLookupHashtable.CreateValueFromKey(EntityHandle handle)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetObject(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetType(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseType(SignatureTypeCode typeCode)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseMethodSignature()\r\n     at Internal.TypeSystem.Ecma.EcmaMethod.InitializeSignature()\r\n     at ILCompiler.DependencyAnalysis.MethodMetadataNode.GetStaticDependencies(NodeFactory factory)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.GetStaticDependenciesImpl(DependencyNodeCore`1 node)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ProcessMarkStack()\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\n\r\nAnd there is any method that create automatically rd.xml file ?","Url":"https://github.com/dotnet/corert/issues/7506","RelatedDescription":"Open issue \"Internal.TypeSystem.TypeSystemException+TypeLoadException when using EntityFrameworkCore with Npgsql\" (#7506)"},{"Id":"453799443","IsPullRequest":true,"CreatedAt":"2019-06-10T13:22:26","Actor":"hamish-milne","Number":"7503","RawContent":null,"Title":"Add support for GetManifestResourceInfo","State":"closed","Body":"This just adds an implementation for `Assembly.GetManifestResourceInfo` along the lines of its sibling methods, which will allow https://github.com/aspnet/Extensions/blob/master/src/FileProviders/Embedded/src/EmbeddedFileProvider.cs from [Microsoft.Extensions.FileProviders.Embedded](https://www.nuget.org/packages/Microsoft.Extensions.FileProviders.Embedded) to work.\r\n\r\nSome questions:\r\n\r\n- This always returns a `ResourceLocation.Embedded` - is this always true?\r\n- The file makes mention of `WinRTInterop`, and includes ifdefs for WinRT support, however: https://github.com/dotnet/corert/issues/823#issuecomment-315557621 , wut?\r\n- I attempted to add a test case for Embedded Resources as a whole, however it seems the way the test projects invoke the toolchain causes them to not link embedded resources, however it works when following the steps in https://github.com/dotnet/corert/blob/master/Documentation/how-to-build-and-run-ilcompiler-in-console-shell-prompt.md - any way to make this work?","Url":"https://github.com/dotnet/corert/pull/7503","RelatedDescription":"Closed or merged PR \"Add support for GetManifestResourceInfo\" (#7503)"},{"Id":"453882867","IsPullRequest":false,"CreatedAt":"2019-06-09T10:07:51","Actor":"hez2010","Number":"7505","RawContent":null,"Title":"The code below will cause program crashing during runtime","State":"open","Body":"Bug: The code below will cause program crashing during runtime  \r\n\r\n```\r\ndotnet add package Microsoft.DotNet.ILCompiler -v 1.0.0-alpha-*\r\ndotnet publish -c Release -r win-x64\r\n```\r\n\r\n```csharp\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Diagnostics;\r\nusing System.Linq;\r\nusing System.Linq.Expressions;\r\nusing System.Runtime.CompilerServices;\r\n\r\nnamespace TypeTest\r\n{\r\n    public struct GenericNum<T> : IEquatable<T>, IComparable<T>, IComparable where T : struct\r\n    {\r\n        private static Func<T, T, T> add;\r\n        private static Func<T, T, T> sub;\r\n        private static Func<T, T, T> mul;\r\n        private static Func<T, T, T> div;\r\n        private static Func<T, T, bool> equ;\r\n        private static Func<T, T, bool> neq;\r\n        private static Func<T, T, bool> grt;\r\n        private static Func<T, T, bool> lst;\r\n        public T Value { get; set; }\r\n\r\n        public GenericNum(T value)\r\n        {\r\n            if (equ == null)\r\n            {\r\n                var p1 = Expression.Parameter(typeof(T));\r\n                var p2 = Expression.Parameter(typeof(T));\r\n                var dt = Expression.Parameter(typeof(double));\r\n                add = (Func<T, T, T>)Expression.Lambda(Expression.Add(p1, p2), p1, p2).Compile();\r\n                sub = (Func<T, T, T>)Expression.Lambda(Expression.Subtract(p1, p2), p1, p2).Compile();\r\n                mul = (Func<T, T, T>)Expression.Lambda(Expression.Multiply(p1, p2), p1, p2).Compile();\r\n                div = (Func<T, T, T>)Expression.Lambda(Expression.Divide(p1, p2), p1, p2).Compile();\r\n                equ = (Func<T, T, bool>)Expression.Lambda(Expression.Equal(p1, p2), p1, p2).Compile();\r\n                neq = (Func<T, T, bool>)Expression.Lambda(Expression.NotEqual(p1, p2), p1, p2).Compile();\r\n                grt = (Func<T, T, bool>)Expression.Lambda(Expression.GreaterThan(p1, p2), p1, p2).Compile();\r\n                lst = (Func<T, T, bool>)Expression.Lambda(Expression.LessThan(p1, p2), p1, p2).Compile();\r\n            }\r\n            Value = value;\r\n        }\r\n\r\n        public int CompareTo(T other)\r\n        {\r\n            if (lst(Value, other)) return -1;\r\n            else if (grt(Value, other)) return 1;\r\n            return 0;\r\n        }\r\n\r\n        public int CompareTo(object obj)\r\n        {\r\n            if (obj is GenericNum<T> t)\r\n            {\r\n                var other = t.Value;\r\n                if (lst(Value, other)) return -1;\r\n                else if (grt(Value, other)) return 1;\r\n            }\r\n            return 0;\r\n        }\r\n\r\n        public override bool Equals(object obj)\r\n        {\r\n            if (obj is GenericNum<T> t) return equ(this, t);\r\n            return false;\r\n        }\r\n\r\n        public override int GetHashCode() => Value.GetHashCode();\r\n\r\n        public bool Equals(T other) => equ(Value, other);\r\n\r\n        public static T operator +(GenericNum<T> left, GenericNum<T> right) => add(left.Value, right.Value);\r\n        public static T operator -(GenericNum<T> left, GenericNum<T> right) => sub(left.Value, right.Value);\r\n        public static T operator *(GenericNum<T> left, GenericNum<T> right) => mul(left.Value, right.Value);\r\n        public static T operator /(GenericNum<T> left, GenericNum<T> right) => div(left.Value, right.Value);\r\n        public static bool operator >(GenericNum<T> left, GenericNum<T> right) => grt(left.Value, right.Value);\r\n        public static bool operator <(GenericNum<T> left, GenericNum<T> right) => lst(left.Value, right.Value);\r\n        public static bool operator ==(GenericNum<T> left, GenericNum<T> right) => equ(left.Value, right.Value);\r\n        public static bool operator !=(GenericNum<T> left, GenericNum<T> right) => neq(left.Value, right.Value);\r\n\r\n        public static implicit operator T(GenericNum<T> value) => value.Value;\r\n        public static implicit operator GenericNum<T>(T value) => new GenericNum<T>(value);\r\n    }\r\n\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var r = new Random();\r\n            var x = new GenericNum<int>(r.Next()); //create\r\n            var y = new GenericNum<int>(r.Next()); //create\r\n            var p = x + y; //add\r\n            Console.WriteLine(p);\r\n            return;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\ndotnet --info:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.300\r\n Commit:    73efd5bd87\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.300\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27804-01\r\n  Commit:  fdf81c6faf\r\n\r\n.NET Core SDKs installed:\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview6-012264 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview6.19307.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview6-27804-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview6-27804-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/dotnet/corert/issues/7505","RelatedDescription":"Open issue \"The code below will cause program crashing during runtime\" (#7505)"},{"Id":"453819922","IsPullRequest":true,"CreatedAt":"2019-06-08T18:05:33","Actor":"kvittokonito","Number":"7504","RawContent":null,"Title":"Fixed errors when targeting ARM64 on Linux.","State":"open","Body":"Fixed several compilation errors found while trying to compile for ARM64 under Linux via cross-compilation.\r\n\r\nRelated to: #7500","Url":"https://github.com/dotnet/corert/pull/7504","RelatedDescription":"Open PR \"Fixed errors when targeting ARM64 on Linux.\" (#7504)"},{"Id":"453759227","IsPullRequest":true,"CreatedAt":"2019-06-08T14:14:14","Actor":"Dotnet-GitSync-Bot","Number":"7501","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @sdmaclea","Url":"https://github.com/dotnet/corert/pull/7501","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7501)"},{"Id":"453768569","IsPullRequest":true,"CreatedAt":"2019-06-08T14:11:46","Actor":"MichalStrehovsky","Number":"7502","RawContent":null,"Title":"Move Marshal class to S.P.CoreLib","State":"closed","Body":"After this change, CoreRT only uses S.P.Interop to host the interop hashtable readers. Those can't move to CoreLib because they call into the type loader.\r\n\r\nThis remove's repo's reliance on UapAot System.Runtime.Interop.\r\n\r\nI didn't touch ProjectN's version of `Marshal` and I left the `PInvokeMarshal` class in place to help with that. I guess we'll need to make a call at some point on what to do with S.P.Interop since without MCG the code in it is kind of useless.","Url":"https://github.com/dotnet/corert/pull/7502","RelatedDescription":"Closed or merged PR \"Move Marshal class to S.P.CoreLib\" (#7502)"},{"Id":"453687239","IsPullRequest":true,"CreatedAt":"2019-06-08T05:34:21","Actor":"Dotnet-GitSync-Bot","Number":"7499","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @carlossanlop","Url":"https://github.com/dotnet/corert/pull/7499","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7499)"},{"Id":"453744834","IsPullRequest":false,"CreatedAt":"2019-06-08T02:04:43","Actor":"kvittokonito","Number":"7500","RawContent":null,"Title":"ARM64 cross-compilation assembly","State":"open","Body":"I've been working on getting CoreRT to cross-compile to ARM64 from x64 and so far I've gotten 61% of the progress to compile after a LOT of painful work.\r\n\r\nHowever, I have now reached the point where ARM64 only has .asm format assembly code (for Windows, I presume?). ARM assembly is a bit out of the scope of my knowledge, unfortunately, so I'd like to know if that part has already been solved on the closed source side and, if that's the case, whether there's some hope for that \"small\" part to be released.","Url":"https://github.com/dotnet/corert/issues/7500","RelatedDescription":"Open issue \"ARM64 cross-compilation assembly\" (#7500)"},{"Id":"453222388","IsPullRequest":true,"CreatedAt":"2019-06-07T21:58:00","Actor":"trylek","Number":"7493","RawContent":null,"Title":"Preparatory change for constrained call changes pt.1: MethodEntrypoint","State":"closed","Body":"This is one of the problems I uncovered during the constrained call\r\nwork and I believe it merits separate treatment. Historically\r\nthe implementation of MethodEntrypoint was naturally one of the\r\noldest CPAOT bits and we had to iterate on its exact functionality.\r\n\r\nThe pre-existing version prior to this change had one strange aspect -\r\nsomewhat ambiguous blurring of functionality between MethodEntrypoint\r\nand ImportedMethodNode. This led to various weird situations including\r\nunintended direct method calls, infinite recursion when conditions\r\nin two methods didn't exactly match and similar fun.\r\n\r\nI have cleaned this mess up by basically moving the pre-existing\r\nfunctionality of ImportedMethodNode to MethodEntrypoint that has become\r\nthe only API dealing with creation of import cells used for calling\r\nmethods. The two flavors of import cells being created are\r\nExternalMethodImport and LocalMethodImport where the only difference\r\nbetween them is that LocalMethodImport brings in the dependency to the\r\nMethodWithGCInfo for the method and triggers its JIT compilation\r\n(which may fail when the method requires runtime JIT).\r\n\r\nI have added graceful handling for indeterminate signatures to\r\nArgIterator because the code graph changes triggered this in one\r\nof the ASP.NET assemblies and it's nice to have in general.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7493","RelatedDescription":"Closed or merged PR \"Preparatory change for constrained call changes pt.1: MethodEntrypoint\" (#7493)"},{"Id":"453648426","IsPullRequest":true,"CreatedAt":"2019-06-07T20:45:08","Actor":"Dotnet-GitSync-Bot","Number":"7498","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @safern @JeremyKuhne","Url":"https://github.com/dotnet/corert/pull/7498","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7498)"},{"Id":"453452909","IsPullRequest":false,"CreatedAt":"2019-06-07T10:50:19","Actor":"kvittokonito","Number":"7497","RawContent":null,"Title":"Windows ARM64 Support?","State":"open","Body":"With Desktop Windows 10 being available for ARM, is there any way in CoreRT to target windows-arm64? I've seen there's a method to cross-compile CoreRT on Linux but I see no references of the target of that being able to compile for Windows.","Url":"https://github.com/dotnet/corert/issues/7497","RelatedDescription":"Open issue \"Windows ARM64 Support?\" (#7497)"},{"Id":"453303038","IsPullRequest":true,"CreatedAt":"2019-06-07T05:58:31","Actor":"Dotnet-GitSync-Bot","Number":"7496","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @sywhang","Url":"https://github.com/dotnet/corert/pull/7496","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7496)"},{"Id":"453275181","IsPullRequest":true,"CreatedAt":"2019-06-07T01:24:31","Actor":"Dotnet-GitSync-Bot","Number":"7494","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7494","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7494)"},{"Id":"452691082","IsPullRequest":true,"CreatedAt":"2019-06-06T19:44:05","Actor":"trylek","Number":"7488","RawContent":null,"Title":"Diagnostic improvements in CPAOT section builder","State":"closed","Body":"I've been debugging CPAOT for almost a year. One recurring hard\r\nproblem has always been diagnosing missing items in the symbol\r\nmap that manifest as \"key not found\" exceptions during the\r\nrelocation phase.\r\n\r\nI have hit this again while debugging the constrained calls and\r\nI have realized I can mitigate the situation by slightly\r\nrearranging things - instead of the straight array of relocations\r\nthere is mostly no harm in storing directly the ObjectData refs\r\n(except for the presumably small perf penalty of one extra\r\nindirection in accessing the array of relocations). ObjectData\r\nis usually much easier to analyze in the debugger as it typically\r\ncontains a symbol definition.\r\n\r\nI have applied minor mechanical renames to put the naming in sync\r\nwith the new semantics; please let me know if you spot an omission\r\non my part.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7488","RelatedDescription":"Closed or merged PR \"Diagnostic improvements in CPAOT section builder\" (#7488)"},{"Id":"453144813","IsPullRequest":true,"CreatedAt":"2019-06-06T17:19:02","Actor":"Dotnet-GitSync-Bot","Number":"7492","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7492","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7492)"},{"Id":"452778010","IsPullRequest":true,"CreatedAt":"2019-06-06T16:11:52","Actor":"Dotnet-GitSync-Bot","Number":"7490","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @safern","Url":"https://github.com/dotnet/corert/pull/7490","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7490)"},{"Id":"452221551","IsPullRequest":false,"CreatedAt":"2019-06-06T14:21:44","Actor":"timmydo","Number":"7487","RawContent":null,"Title":"Process crashes on Linux when catching a null pointer exception from managed code","State":"closed","Body":"I have a program that does something like this:\r\n\r\n```\r\n        static void Main(string[] args)\r\n        {\r\n            // this loads a corert native library\r\n            var blah= NativeMethods.DoSomething(IntPtr.Zero, IntPtr.Zero, 10_000);\r\n            try\r\n            {\r\n                string x = null;\r\n                Console.WriteLine($\"{x.Length}\");\r\n            }\r\n            catch (System.Exception)\r\n            {\r\n            }\r\n            Console.WriteLine(\"done\");\r\n        }\r\n```\r\n\r\nwhen the null pointer exception is thrown, the corert sigsegv handler is invoked. https://github.com/dotnet/corert/blob/635cf21aca11265ded9d78d216424bd609c052f5/src/Native/Runtime/unix/HardwareExceptions.cpp#L582\r\n\r\nAround L582, the processess crashes with sigabort:\r\n\r\n```\r\ndotnet TestConsoleApp.dll\r\n*** stack smashing detected ***: dotnet terminated\r\n======= Backtrace: =========\r\n/lib/x86_64-linux-gnu/libc.so.6(+0x70bfb)[0x7fe006ea4bfb]\r\n/lib/x86_64-linux-gnu/libc.so.6(__fortify_fail+0x37)[0x7fe006f2d437]\r\n/lib/x86_64-linux-gnu/libc.so.6(__fortify_fail+0x0)[0x7fe006f2d400]\r\n/root/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/2.2.4/runtimes/linux-x64/native/libcoreclr.so(+0x4e15c7)[0x7fe00656b5c7]\r\n```\r\n","Url":"https://github.com/dotnet/corert/issues/7487","RelatedDescription":"Closed issue \"Process crashes on Linux when catching a null pointer exception from managed code\" (#7487)"},{"Id":"452995033","IsPullRequest":true,"CreatedAt":"2019-06-06T14:21:18","Actor":"janvorli","Number":"7491","RawContent":null,"Title":"Handle signals on alternate stack if previous handler required that","State":"closed","Body":"There is a problem with using CoreRT in CoreCLR process. CoreCLR sets\r\nsigsegv handler to use alternate stack, but CoreRT does not. That means\r\nthat when CoreRT registers its sigsegv handler after CoreCLR, it becomes\r\nthe handler that kernel calls and the previously registered CoreCLR\r\nhandler is called as a regular function call from this handler. And\r\nthat happens on the original stack. However the CoreCLR cannot run the\r\nhandler on the original stack and the handler crashes.\r\n\r\nThe fix is to copy the SA_ONSTACK flag of the previous handler when\r\nregistering the signal handler in CoreRT. In addition to that, this\r\nchange also copies the signal mask in this case. CoreCLR sigsegv handler\r\nmasks the activation injection signal (SIGRT_MIN) so that it doesn't\r\nhappen until the sigsegv handler switches to the original stack. This\r\nbehavior needs to be preserved.","Url":"https://github.com/dotnet/corert/pull/7491","RelatedDescription":"Closed or merged PR \"Handle signals on alternate stack if previous handler required that\" (#7491)"},{"Id":"452732949","IsPullRequest":true,"CreatedAt":"2019-06-06T00:35:58","Actor":"Dotnet-GitSync-Bot","Number":"7489","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @safern","Url":"https://github.com/dotnet/corert/pull/7489","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7489)"},{"Id":"452208062","IsPullRequest":true,"CreatedAt":"2019-06-04T23:26:43","Actor":"tannergooding","Number":"7486","RawContent":null,"Title":"Updating MicrosoftNetCompilersToolsetVersion to 3.2.0-beta3-19304-07","State":"closed","Body":"CC. @dotnet/nullablefc\r\n\r\nCoreRT side for https://github.com/dotnet/arcade/pull/2946 and https://github.com/dotnet/buildtools/pull/2257","Url":"https://github.com/dotnet/corert/pull/7486","RelatedDescription":"Closed or merged PR \"Updating MicrosoftNetCompilersToolsetVersion to 3.2.0-beta3-19304-07\" (#7486)"},{"Id":"452085003","IsPullRequest":true,"CreatedAt":"2019-06-04T18:54:04","Actor":"MichalStrehovsky","Number":"7484","RawContent":null,"Title":"Avoid custom attributes when resolving lazy pinvokes","State":"closed","Body":"We already know the DllImportSearchPath wasn't specified in the assembly - no point in looking for the custom attribute.\r\n\r\nThe custom attribute lookup was failing when reflection is disabled.","Url":"https://github.com/dotnet/corert/pull/7484","RelatedDescription":"Closed or merged PR \"Avoid custom attributes when resolving lazy pinvokes\" (#7484)"},{"Id":"452108239","IsPullRequest":true,"CreatedAt":"2019-06-04T18:53:48","Actor":"Dotnet-GitSync-Bot","Number":"7485","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @adamsitnik @Youssef1313","Url":"https://github.com/dotnet/corert/pull/7485","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7485)"},{"Id":"451695299","IsPullRequest":true,"CreatedAt":"2019-06-04T13:26:04","Actor":"Dotnet-GitSync-Bot","Number":"7483","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7483","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7483)"},{"Id":"451675402","IsPullRequest":true,"CreatedAt":"2019-06-04T06:28:15","Actor":"trylek","Number":"7482","RawContent":null,"Title":"CPAOT: token context cleanup in JIT interface","State":"closed","Body":"One of the remaining debts in CPAOT I noticed during my recent\r\ninvestigations was the notion of input module token context. This\r\nis just wrong in the presence of inlining as we may never presume\r\nthat a token originated in the input module. This simple change\r\nchanges token resolution to resolve token context modules based on\r\nthe token scope instead.\r\n\r\nWith this change we no longer need to create a dictionary of\r\nper-module CorInfoImpl instances so that we can get by with just\r\na singleton; this is the gist of the additional cleanup in\r\nReadyToRunCodegenCompilation.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7482","RelatedDescription":"Closed or merged PR \"CPAOT: token context cleanup in JIT interface\" (#7482)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"452976611","IsPullRequest":false,"CreatedAt":"2019-06-11T03:32:07","Actor":"vadi2","Number":"3309","RawContent":null,"Title":"\"Application host will not be customised\" - meaning?","State":"closed","Body":"I've built an application[1] on .NET Core that runs on Windows, macOS, and Linux and I'd like to reduce the friction involved in getting it running - that is, having to install the runtime separately. I've read the [single-publish](https://github.com/dotnet/designs/blob/master/accepted/single-file/design.md) and [tried out the command](https://travis-ci.com/vadi2/Hammer/builds/114541271#L323) - but I get this warning:\r\n\r\n> The application host executable will not be customized because adding resources requires that the build be performed on Windows (excluding Nano Server).\r\n\r\nWhat does it actually mean? I'm new to the .NET world so I'm not sure what customisations is it actually talking about.\r\n\r\n[1] https://github.com/vadi2/Hammer","Url":"https://github.com/dotnet/sdk/issues/3309","RelatedDescription":"Closed issue \"\"Application host will not be customised\" - meaning?\" (#3309)"},{"Id":"454317577","IsPullRequest":true,"CreatedAt":"2019-06-11T00:58:34","Actor":"dsplaisted","Number":"3316","RawContent":null,"Title":"Remove old deps file generation logic","State":"closed","Body":"No need to keep both old and new copies anymore.\r\n\r\nThis ends up deleting some of the DependencyContextBuilder unit test coverage, as with the new design the builder depends on the output of ResolvePackageAssets, which isn't so easy to mock.","Url":"https://github.com/dotnet/sdk/pull/3316","RelatedDescription":"Closed or merged PR \"Remove old deps file generation logic\" (#3316)"},{"Id":"454341820","IsPullRequest":false,"CreatedAt":"2019-06-10T19:50:29","Actor":"crummel","Number":"3317","RawContent":null,"Title":"Source-build patch removal for SDK.","State":"open","Body":"Source-build has some patches that we are currently applying to your repo.  This issue tracks removing the patches.  These patches can be found at https://github.com/dotnet/source-build/tree/release/3.0/patches/sdk.\r\n\r\nPatches that have the responsibility \"Repo\" and the Disposition \"Incorporate\" are patches that we believe are valid source-build fixes that should be moved into your repo.  Please let us know if these don't seem like good patches.  Any changes with the responsibility \"source-build\" is something that we plan to keep going forward or integrate in another way - please also let us know if you think there may be problems with those patches.\r\n\r\nPatch name | Type | Disposition | Responsibility | Notes\r\n-- | -- | -- | -- | --\r\nsdk/0001-Upgrade-to-netcoreapp2.1.patch | ToolCompat | Unknown | source-build | May go away with SDK uptake.  Otherwise needs investigation similar to   nuget-client/0001\r\nsdk/0002-Add-missing-PlatformAbstractions-reference.patch | Bug | Incorporate | Repo |  \r\nsdk/0003-Consolidate-versions.patch | Coherence | Incorporate | Repo |  \r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3317","RelatedDescription":"Open issue \"Source-build patch removal for SDK.\" (#3317)"},{"Id":"454300900","IsPullRequest":true,"CreatedAt":"2019-06-10T18:18:24","Actor":"vatsan-madhavan","Number":"3315","RawContent":null,"Title":"Add warnings related to Microsoft.NET.Sdk.WindowsDesktop","State":"open","Body":"Related: #3126 \r\nThis is also needed to completely fix https://github.com/dotnet/wpf/issues/866 - we still can't support support multitargeting `netcoreapp2.2`, and also to fix https://github.com/dotnet/wpf/issues/867\r\n\r\n- Adds warning strings related to `Microsoft.NET.Sdk.WindowsDesktop`\r\n- Adds a check to warn when `UseWpf` or `UseWindowsForms` is set without including `Microsoft.NET.Sdk.WindowsDesktop`","Url":"https://github.com/dotnet/sdk/pull/3315","RelatedDescription":"Open PR \"Add warnings related to Microsoft.NET.Sdk.WindowsDesktop\" (#3315)"},{"Id":"453311134","IsPullRequest":true,"CreatedAt":"2019-06-10T18:11:01","Actor":"dsplaisted","Number":"3311","RawContent":null,"Title":"Exclude Publish=\"false\" package assets from build output, don't infer Publish=\"false\" from PrivateAssets=\"all\"","State":"closed","Body":"See https://github.com/dotnet/designs/pull/78","Url":"https://github.com/dotnet/sdk/pull/3311","RelatedDescription":"Closed or merged PR \"Exclude Publish=\"false\" package assets from build output, don't infer Publish=\"false\" from PrivateAssets=\"all\"\" (#3311)"},{"Id":"453775677","IsPullRequest":false,"CreatedAt":"2019-06-08T09:32:34","Actor":"martincostello","Number":"3314","RawContent":null,"Title":"Regression in build times for Travis CI using 2.2.300 SDK","State":"open","Body":"I've noticed across several different projects I maintain that since the SDK was updated from 2.2.1xx or 2.2.2xx to 2.2.300, the time to build the projects in Travis CI has regressed by up to an order of magnitude on both Linux and macOS.\r\n\r\nHowever I'm not seeing the same regression in Azure DevOps pipelines for Linux, macOS or Windows, or AppVeyor for Windows.\r\n\r\nBelow are a selection of projects that show a build time regression immediately after merging a PR that contains a commit that updates the SDK to 2.2.300:\r\n\r\n| History | Build time pre-update | Build time post-update | Delta | PR with SDK update | Commit with SDK update |\r\n|:-:|:-:|:-:|:-:|:-:|:-:|\r\n| [project-euler](https://travis-ci.org/martincostello/project-euler/builds) | 3 min 40 sec | 37 min 13 sec | +1,015% | [#33](https://github.com/martincostello/project-euler/pull/33) | [b2c7ed3](https://github.com/martincostello/project-euler/commit/b2c7ed39e539201c6625f0d06787de42cb50abaa) |\r\n| [JustEat.StatsD](https://travis-ci.org/justeat/JustEat.StatsD/builds) |  2 min 33 sec | 12 min 19 sec | +483% | [#177](https://github.com/justeat/JustEat.StatsD/pull/177) | [4f4ac55](https://github.com/justeat/JustEat.StatsD/commit/4f4ac5505f2953efa09eef8cc304aad514e49099) |\r\n| [sqllocaldb](https://travis-ci.org/martincostello/sqllocaldb/builds) | 3 min 31 sec | 16 min 28 sec | +468% | [#88](https://github.com/martincostello/sqllocaldb/pull/88) | [671307a](https://github.com/martincostello/sqllocaldb/commit/671307a1fc216d1514f32c787aff547570408e37) |\r\n| [adventofcode](https://travis-ci.org/martincostello/adventofcode/builds) | 7 min 4 sec | 31 min 51 sec | +450% | [#72](https://github.com/martincostello/adventofcode/pull/72) | [8ecc3a7](https://github.com/martincostello/adventofcode/commit/8ecc3a77b5696e5eae735826ef510ef3599447b1) |\r\n| [JustSaying](https://travis-ci.org/justeat/JustSaying/builds) | 6 min 49 sec | 25 min 55 sec | +380% | [#545](https://github.com/justeat/JustSaying/pull/545) | [88f241c](https://github.com/justeat/JustSaying/commit/88f241c8a6bcb5768e2d57fae4aef906aacad53a) |\r\n| [httpclient-interception](https://travis-ci.org/justeat/httpclient-interception/builds) | 6 min 26 sec | 16 min 26 sec | +255% | [#85](https://github.com/justeat/httpclient-interception/pull/85) | [065c722](https://github.com/justeat/httpclient-interception/commit/065c7222669c291baf1fc75f20ce7c6f4863568c) |\r\n| [alexa-london-travel-site](https://travis-ci.org/martincostello/alexa-london-travel-site/builds) | 5 min 34 sec | 11 min 31 sec | +206% | [#267](https://github.com/martincostello/alexa-london-travel-site/pull/267) | [48b47a5](https://github.com/martincostello/alexa-london-travel-site/commit/48b47a5497e9e824fe3ba0d41ef4d9ef299773e0) |\r\n| [api](https://travis-ci.org/martincostello/api/builds) | 5 min 54 sec | 9 min 46 sec | +165% | [#112](https://github.com/martincostello/api/pull/112) | [40c1dee](https://github.com/martincostello/api/commit/40c1dee042f02e18f64c68fcdac7c4500559f907) |\r\n| [website](https://travis-ci.org/martincostello/website/builds) | 4 min 26 sec | 7 min 13 sec | +162% | [#263](https://github.com/martincostello/website/pull/263) | [3a43580](https://github.com/martincostello/website/commit/3a4358008c7022d0abf667774a26505ad9892a47) |\r\n\r\nMy hunch is that it is related to the new \"progress bar\" when running `dotnet test` which is causing the Travis agents to waste a lot of time trying to \"draw\" it because the actual test run times printed in the build output are equivalent:\r\n\r\n  * [Build before](https://travis-ci.org/martincostello/project-euler/jobs/513808297#L560) - `Time Elapsed 00:00:10.86`\r\n  * [Build after](https://travis-ci.org/martincostello/project-euler/jobs/537916269#L556) - `Time Elapsed 00:00:15.31`\r\n  * [Test before](https://travis-ci.org/martincostello/project-euler/jobs/513808297#L706) - `Test execution time: 46.8778 Seconds`\r\n  * [Test after](https://travis-ci.org/martincostello/project-euler/jobs/537916269#L700) - `Total time: 46.5308 Seconds`\r\n","Url":"https://github.com/dotnet/sdk/issues/3314","RelatedDescription":"Open issue \"Regression in build times for Travis CI using 2.2.300 SDK\" (#3314)"},{"Id":"453733086","IsPullRequest":false,"CreatedAt":"2019-06-08T00:05:53","Actor":"nguerrera","Number":"3313","RawContent":null,"Title":"DesignTimeBuild is included in ResolvePackageAssets HashSettings","State":"open","Body":"This will cause the cache to be rebuilt always when building after a design time build, or design time building after a build.\r\n\r\nThe test was updated to allow DesignTimeBuild to not be in the cache:\r\n\r\nhttps://github.com/dotnet/sdk/blob/de72490d26acee011e22f40113209323976980e0/src/Tasks/Microsoft.NET.Build.Tasks.UnitTests/GivenAResolvePackageAssetsTask.cs#L21\r\n\r\nBut it is actually written:\r\n\r\nhttps://github.com/dotnet/sdk/blob/de72490d26acee011e22f40113209323976980e0/src/Tasks/Microsoft.NET.Build.Tasks/ResolvePackageAssets.cs#L376\r\n\r\nProbably need a test that checks the opposite of the settings hash test for DesignTimeBuild: that you can change it without influencing the hash.","Url":"https://github.com/dotnet/sdk/issues/3313","RelatedDescription":"Open issue \"DesignTimeBuild is included in ResolvePackageAssets HashSettings\" (#3313)"},{"Id":"453443961","IsPullRequest":false,"CreatedAt":"2019-06-07T10:26:09","Actor":"vitek-karas","Number":"3312","RawContent":null,"Title":"What should be default RollForward for component projects","State":"open","Body":"We haven’t made an official decision on the default value for `RollForward` in our new component scenarios.\r\n\r\nTLDR;\r\nShould we use `LatestMinor` or `LatestMajor` for component projects by default.\r\n\r\nThe long version:\r\nCurrently `RollForward` is set to `Minor` (roll to closest available version while staying with the same `major.` part of the version, then roll to latest patch of that version) for all projects by default. This is the value used when no `RollForward` is specified by the SDK in `.runtimeconfig.json`. More details about `RollForward` are here and here.\r\n\r\nFor dynamically loaded components this value would come with problems. The most important one being ordering issues. For example let’s have two COM components `A 3.0 Minor` and `B 3.1 Minor` on a machine which has both `3.0` and `3.1` installed. If the native app activates B first, it will load `3.1` runtime and then when it activates A second it will just work (since A can run on `3.1`). But if the app activates A first, it would load `3.0` (closest available match to `3.0 Minor`) and then when it would try to activate B that would fail (B is not compatible with `3.0`).\r\n\r\nTo overcome this problem the `RollForward` has two settings:\r\n* `LatestMinor` – pick the highest available version with the same `major.` part of the version (so `3.0 LatestMinor` would roll to latest `3.*` version)\r\n* `LatestMajor` – pick the highest available version (all up)\r\n\r\nIf in the above scenario A would be `3.0 LatestMinor` and B would be `3.1 LatestMinor`, no matter which one got activated first, they both would load `3.1` (as the latest `3.*` available version).\r\n\r\nSo to make it easy for users and make things just work out of the box, we would like to set `RollForward` to one of the `LatestMinor`/`LatestMajor` by default on component projects.\r\nElinor has a PR out which introduces the notion of “component project”: https://github.com/dotnet/sdk/pull/3305\r\n\r\nThe question is if we should use `LatestMinor` or `LatestMajor` as the default for component projects.\r\n\r\n*`LatestMinor`:*\r\n* Pros: Higher chance of providing the expected compatibility – in general we try really hard to avoid breaking changes for minor versions, so 3.1 is expected to be fully backward compatible with 3.0. We tell people that upgrading to minor version is “safe”.\r\n* Cons: Come .NET 5 components targeting 3.0 would not run on 5.0. Basically creating an upgrade problem. Combining components targeting both 3.0 and 5.0 would fail.\r\n\r\n*`LatestMajor`:*\r\n* Pros: No upgrade problems – all components run everywhere and together.\r\n* Cons: Potentially breaking for some components as we may introduce some breaking changes between `5.0` and `3.0`. That said `classlibs` (which components are a special case of) are already assumed to work just fine even across major versions (NuGet has no notion of compatibility ranges, and will let people use `3.0` `classlibs` in `5.0` projects).\r\n\r\nSome related discussions already happened:\r\nhttps://github.com/dotnet/core-setup/issues/5870\r\nhttps://github.com/dotnet/core-setup/issues/5062\r\n\r\nThoughs?","Url":"https://github.com/dotnet/sdk/issues/3312","RelatedDescription":"Open issue \"What should be default RollForward for component projects\" (#3312)"},{"Id":"453186764","IsPullRequest":true,"CreatedAt":"2019-06-07T01:17:19","Actor":"peterhuene","Number":"3310","RawContent":null,"Title":"Fix P/Invoke signatures for the resource updater.","State":"closed","Body":"The resource updater was not specifying a CharSet for the Windows API\r\nP/Invoke signatures and therefore the ANSI versions of the APIs were\r\nbeing used.\r\n\r\nThis caused an unhandled exception when customizing the apphost on\r\nWindows when the intermediate apphost path contained Unicode characters\r\nbecause the ANSI resource updating API couldn't find the file.\r\n\r\nFixes [AB#900429](https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_workitems/edit/900429).","Url":"https://github.com/dotnet/sdk/pull/3310","RelatedDescription":"Closed or merged PR \"Fix P/Invoke signatures for the resource updater.\" (#3310)"},{"Id":"452776840","IsPullRequest":true,"CreatedAt":"2019-06-06T20:36:55","Actor":"cdmihai","Number":"3306","RawContent":null,"Title":"Update Microsoft.NETFramework.ReferenceAssemblies in TestProject","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3306","RelatedDescription":"Closed or merged PR \"Update Microsoft.NETFramework.ReferenceAssemblies in TestProject\" (#3306)"},{"Id":"452957325","IsPullRequest":true,"CreatedAt":"2019-06-06T10:36:29","Actor":"v-zbsail","Number":"3308","RawContent":null,"Title":"LOC CHECKIN | dotnet/sdk master | 20190606","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3308","RelatedDescription":"Open PR \"LOC CHECKIN | dotnet/sdk master | 20190606\" (#3308)"},{"Id":"452816272","IsPullRequest":false,"CreatedAt":"2019-06-06T03:38:50","Actor":"kkwpsv","Number":"3307","RawContent":null,"Title":"Publish a WebApplication project using `dotnet publish` will fail when it references a project with Exe outputtype","State":"open","Body":"I have two projects. One is a ConsoleApp, the other is WebApplication. And the WebApplication has a `ProjectReference` to reference the ConsoleApp.\r\n\r\nWhen I publish the WebApplication with `--runtime`, it has an error like below:\r\n\r\n> /home/lsj/test/ConsoleApp2/ConsoleApp2.csproj : error : NETSDK1061: The project was restored using Microsoft.NETCore.App version 2.1.9, but with current settings, version 2.1.0 would be used instead. To resolve this issue, make sure the same settings are used for restore and for subsequent operations such as build or publish. Typically this issue can occur if the RuntimeIdentifier property is set during build or publish but not during restore. For more information, see https://aka.ms/dotnet-runtime-patch-selection.\r\n\r\nBut when I remove the `<OutputType>Exe</OutputType>` line from the csproj of ConsoleApp, it succeeds.\r\n\r\n\r\nI have done many tests:\r\n\r\n- If I only publish the ConsoleApp with `--runtime` and `<OutputType>Exe</OutputType>`, it will success.\r\n\r\n- If I publish the WebApplication with `--runtime` and `<OutputType>Exe</OutputType>`, it will fail, no matter on Linux or Windows, no matter with .net core 2.1 or 2.2. But it will succeed with .net core 3.0. (I think it's because that there's no any .net core 3.0.x)\r\n\r\n- If I publish the WebApplication with `--runtime` and without `<OutputType>Exe</OutputType>`, it will always succeed.\r\n\r\n- If I publish the WebApplication without `--runtime` and with `<OutputType>Exe</OutputType>`, it will always succeed.\r\n","Url":"https://github.com/dotnet/sdk/issues/3307","RelatedDescription":"Open issue \"Publish a WebApplication project using `dotnet publish` will fail when it references a project with Exe outputtype\" (#3307)"},{"Id":"452773212","IsPullRequest":true,"CreatedAt":"2019-06-06T00:16:07","Actor":"elinor-fung","Number":"3305","RawContent":null,"Title":"Add property for building a library as a component","State":"open","Body":"SDK support for the hosting scenario of loading a managed component and calling into it from a native application: https://github.com/dotnet/core-setup/blob/master/Documentation/design-docs/native-hosting.md#scenarios. This hosting scenario requires a `runtimeconfig.json` file and our recommendation for components is to have a less restrictive `rollForward` setting.\r\n\r\nSetting `IsComponent=true` should result in:\r\n- `.runtimeconfig.json` being generated\r\n- `rollForward` being set to `LatestMinor` by default","Url":"https://github.com/dotnet/sdk/pull/3305","RelatedDescription":"Open PR \"Add property for building a library as a component\" (#3305)"},{"Id":"452682263","IsPullRequest":true,"CreatedAt":"2019-06-06T00:12:31","Actor":"dsplaisted","Number":"3304","RawContent":null,"Title":"Use profiles defined in FrameworkList.xml in targeting pack instead of hard-coding","State":"closed","Body":"- Update stage 0, and remove code that added information that wasn't yet in bundled versions .props file.\r\n- Use profiles defined in FrameworkList.xml in targeting pack instead of hard-coding\r\n","Url":"https://github.com/dotnet/sdk/pull/3304","RelatedDescription":"Closed or merged PR \"Use profiles defined in FrameworkList.xml in targeting pack instead of hard-coding\" (#3304)"},{"Id":"452651511","IsPullRequest":true,"CreatedAt":"2019-06-05T23:07:11","Actor":"peterhuene","Number":"3303","RawContent":null,"Title":"Resolve runtime target assets without copying for non-netcoreapp targets.","State":"closed","Body":"A [previous change](https://github.com/peterhuene/sdk/commit/545410772bb7c41d26b22dd9f3ba0cd3e8acd63e) disabled the resolution of runtime target assets when not\r\ntargeting netcoreapp by default. However, some users may want to be able to\r\ninspect the runtime target assets from their package dependencies without\r\nhaving them copied locally by default when not targeting netcoreapp.\r\n\r\nThis commit changes the previous fix by resolving the runtime target assets to\r\npopulate the `RuntimeTargetsCopyLocalItems` group, but sets the `CopyLocal`\r\nmetadata to false which prevents the items from ultimately being included in\r\nthe copy local files.  The property `CopyLocalRuntimeTargetAssets` now controls\r\nthis behavior, which defaults to `true` only when netcoreapp is the target TFM.\r\n\r\nFixes #3261.","Url":"https://github.com/dotnet/sdk/pull/3303","RelatedDescription":"Closed or merged PR \"Resolve runtime target assets without copying for non-netcoreapp targets.\" (#3303)"},{"Id":"452583102","IsPullRequest":false,"CreatedAt":"2019-06-05T15:56:25","Actor":"sbomer","Number":"3302","RawContent":null,"Title":"Mark assets from nuget packages as trimmable","State":"open","Body":"https://github.com/dotnet/sdk/pull/3231 flows `IsTrimmable` metadata from `FrameworkRefrence`s to the resolved assets. We could consider doing the same for `PackageReference`s to enable users to easily opt in to trimming assets that come from packages. Since the metadata was not originally intended as a customer-facing option, we may want to revisit this to see if it's the right way to expose such an option.\r\n\r\nFrom https://github.com/mono/linker/issues/595#issuecomment-498951483:\r\n\r\n> one of the assemblies I really would like to see reduced MahApps.Metro.IconPacks.dll is not. This DLL is 14MB but I probably use around 500KB... any way to see what happened and influence this?\r\n\r\nThis would come with the usual caveats: packages with logic that is activated by reflection, or that themselves use reflection, will likely be incompatible with trimming.","Url":"https://github.com/dotnet/sdk/issues/3302","RelatedDescription":"Open issue \"Mark assets from nuget packages as trimmable\" (#3302)"},{"Id":"451422781","IsPullRequest":true,"CreatedAt":"2019-06-05T08:52:38","Actor":"vitek-karas","Number":"3296","RawContent":null,"Title":"Add support for RollForward property","State":"closed","Body":"The `GenerateRuntimeConfigurationFiles` task now recognizes `RollForward` parameter (and it's passed from the `RollForward` property). It writes its value into the .runtimeconfig.json as the `rollForward` setting.\r\n\r\nThis implements the SDK side of the roll forward feature as described in the [runtime binding](https://github.com/dotnet/designs/blob/master/accepted/runtime-binding.md#rollforward).","Url":"https://github.com/dotnet/sdk/pull/3296","RelatedDescription":"Closed or merged PR \"Add support for RollForward property\" (#3296)"},{"Id":"451028964","IsPullRequest":true,"CreatedAt":"2019-06-04T21:18:26","Actor":"MSLukeWest","Number":"3289","RawContent":null,"Title":"Adding ResolveReferences target to PublishItemsOutputGroup dependencies","State":"closed","Body":"This is needed in order for this output group to contain output from referenced projects.","Url":"https://github.com/dotnet/sdk/pull/3289","RelatedDescription":"Closed or merged PR \"Adding ResolveReferences target to PublishItemsOutputGroup dependencies\" (#3289)"},{"Id":"451739279","IsPullRequest":true,"CreatedAt":"2019-06-04T02:30:22","Actor":"dotnet-bot","Number":"3298","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3298","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master\" (#3298)"},{"Id":"451268345","IsPullRequest":true,"CreatedAt":"2019-06-03T18:15:49","Actor":"wli3","Number":"3294","RawContent":null,"Title":"Update branding to preview 7","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3294","RelatedDescription":"Closed or merged PR \"Update branding to preview 7\" (#3294)"},{"Id":"451262824","IsPullRequest":true,"CreatedAt":"2019-06-03T18:14:34","Actor":"wli3","Number":"3293","RawContent":null,"Title":"Merge master to release/3.0.1xx for preview6","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3293","RelatedDescription":"Closed or merged PR \"Merge master to release/3.0.1xx for preview6\" (#3293)"},{"Id":"451585629","IsPullRequest":true,"CreatedAt":"2019-06-03T16:49:19","Actor":"sbomer","Number":"3297","RawContent":null,"Title":"Update link (aka.ms/illink -> aka.ms/dotnet-illink)","State":"open","Body":"Received feedback from @richlander that we usually use links of the form dotnet-*.\r\n\r\n@nguerrera PTAL","Url":"https://github.com/dotnet/sdk/pull/3297","RelatedDescription":"Open PR \"Update link (aka.ms/illink -> aka.ms/dotnet-illink)\" (#3297)"},{"Id":"451127590","IsPullRequest":false,"CreatedAt":"2019-06-03T15:30:58","Actor":"AntonPlotnikov","Number":"3291","RawContent":null,"Title":"DotNetAppHost's version info and icon","State":"closed","Body":"Hello. I need to add a version info and custom icon for DotNetAppHost? We use potable mode (Framework-dependent deployment), and there are some branding and security requirements. Unfortunately, I can add version info only to application's main assembly file (dll), not to exe file (we use RID win7-x64) during building in Visual Studio 2019. Is it any way to do this during MSBuild process?\r\n![2019-06-01_23-57-09](https://user-images.githubusercontent.com/18666703/58753548-558b5b80-84c9-11e9-9deb-c51f6890484b.png)\r\n","Url":"https://github.com/dotnet/sdk/issues/3291","RelatedDescription":"Closed issue \"DotNetAppHost's version info and icon\" (#3291)"},{"Id":"451374216","IsPullRequest":false,"CreatedAt":"2019-06-03T09:14:09","Actor":"ViktorHofer","Number":"3295","RawContent":null,"Title":"TargetExt conflicts with UseAppHost","State":"open","Body":"`TargetExt` defaults to \".dll\" on .NETCore and .NETStandard even if the `OutputType` is \".exe\": https://github.com/dotnet/sdk/blob/90e8a529be026d06fc8965d460927193aca5b005/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.BeforeCommon.targets#L74-L75\r\n\r\nStarting with \".NETCoreApp, Version=3.0\", `UseAppHost` defaults to true: https://github.com/dotnet/sdk/blob/372e67d51167792db2fdaeebf48b6d8fb962e713/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.RuntimeIdentifierInference.targets#L110\r\n\r\nThe `_NativeExecutableExtension` defaults to true as the `DefaultAppHostRuntimeIdentifier` on Windows is \"win-x64\":\r\nhttps://github.com/dotnet/sdk/blob/master/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.targets#L67\r\n\r\nThe `_GetAppHostPaths` target sets the `AppHostIntermediatePath` property (based on `_NativeExecutableExtension` which defaults to \".exe\" because auf `UseAppHost` is true) which then is added to the `None` ItemGroup determined to be copied to the output directory:\r\nhttps://github.com/dotnet/sdk/blob/master/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.targets#L491-L497\r\n\r\n![image](https://user-images.githubusercontent.com/7412651/58790220-35a28780-85f0-11e9-9e2c-7e55d80d66e6.png)\r\n\r\nThe issue is that such a file is never produced as the TargetExt defaults to \".dll\". If I got this right this means that every app \".NETCoreApp, Version=3.0\" with `OutputType` \"Exe\" fails to copy its content to the output directory. This would be big break and I'm sure this would have already been caught. I assume I'm missing something here. \r\n\r\ncc @nguerrera @dsplaisted @ericstj ","Url":"https://github.com/dotnet/sdk/issues/3295","RelatedDescription":"Open issue \"TargetExt conflicts with UseAppHost\" (#3295)"},{"Id":"451078446","IsPullRequest":true,"CreatedAt":"2019-06-01T12:04:11","Actor":"dotnet-maestro[bot]","Number":"3290","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190531.5\r\n- **Date Produced**: 5/31/2019 10:53 PM\r\n- **Commit**: c901850aa1e175c124da771863dacc763743a520\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19281.5\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190601.2\r\n- **Date Produced**: 6/1/2019 1:04 PM\r\n- **Commit**: 8fd0b50b9d689e8d87ab202f11b7c9fbe81271c4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19301.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190602.2\r\n- **Date Produced**: 6/2/2019 1:09 PM\r\n- **Commit**: e6a5d5f970bb872451c6310ae34eda31041fb552\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19302.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190604.1\r\n- **Date Produced**: 6/4/2019 8:16 AM\r\n- **Commit**: d2599acd9703ef747dfb4329ec3e3beff182e755\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19304.1\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190604.23\r\n- **Date Produced**: 6/5/2019 4:12 AM\r\n- **Commit**: c9ab9c47d6c66fb9ad89e331900e06bed7463904\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19304.23\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190605.13\r\n- **Date Produced**: 6/6/2019 5:54 AM\r\n- **Commit**: d05c046913964e880be08b804e7249f297617c2f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19305.13\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19305.13\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190606.12\r\n- **Date Produced**: 6/6/2019 9:47 PM\r\n- **Commit**: a1805103791e43031355e11c0d037bca803a9593\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19306.12\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19306.12\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190607.62\r\n- **Date Produced**: 6/8/2019 3:43 AM\r\n- **Commit**: 29999b2846623e2d96733577165968d09bc2bcc1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19307.62\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19307.62\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190608.1\r\n- **Date Produced**: 6/8/2019 12:50 PM\r\n- **Commit**: 747a1bdf2a74a486fb075045cb2384fa89a7983c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19308.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19308.1\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190609.1\r\n- **Date Produced**: 6/9/2019 12:42 PM\r\n- **Commit**: 45361625125cdd3119050a852bd73163ca4b73f4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19309.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19309.1\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3290","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#3290)"},{"Id":"450799201","IsPullRequest":false,"CreatedAt":"2019-05-31T18:06:56","Actor":"DustinCampbell","Number":"3287","RawContent":null,"Title":"Getting package assets cache messages on build with the latest master bits","State":"closed","Body":"@nguerrera, @dsplaisted: I started getting loads of messages during build in the winforms-designer repo after updating to the most recent SDK:\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012135\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(234,5):\r\nmessage NETSDK1062: Unable to use package assets cache due to I/O error . This can occur when the\r\nsame project is built more than once in parallel. Performance may be degraded,  but the build result will \r\nnot be impacted. [D:\\Projects\\winforms-designer\\src\\WinFormsSurface\\WinFormsS urface.csproj]\r\n```\r\n\r\nAre these messages possibly related to https://github.com/dotnet/sdk/pull/3268? It looks like this error comes from ResolvePackageAssets.cs and those are the most recent changes around the code that triggers this message. Setting `<DisablePackageAssetsCache>true</DisablePackageAssetsCache>` makes the messages go away, but it doesn't seem like the right fix.","Url":"https://github.com/dotnet/sdk/issues/3287","RelatedDescription":"Closed issue \"Getting package assets cache messages on build with the latest master bits\" (#3287)"},{"Id":"450829429","IsPullRequest":false,"CreatedAt":"2019-05-31T14:33:34","Actor":"atanasa","Number":"3288","RawContent":null,"Title":"dotnet publish does not warn on version conflicts with packages in the store manifest","State":"open","Body":"I have a project that depends on the `Newtonsoft.Json` package version **10.0.1**.\r\nI have a store manifest file that includes `Newtonsoft.Json` package version **10.0.3**.\r\nWhen I run `dotnet publish` the output contains the Newtonsoft.Json.dll.\r\n\r\n### Steps to reproduce:\r\n1. Create a store manifest file:\r\n```xml\r\n<StoreArtifacts>\r\n   <Package Id=\"Newtonsoft.Json\" Version=\"10.0.3\" />\r\n</StoreArtifacts>\r\n```\r\n1. Create an executable project that specifies that manifest:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"10.0.1\" />\r\n  </ItemGroup>\r\n  <PropertyGroup>\r\n    <TargetManifestFiles>manifest.xml</TargetManifestFiles>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n1. Run `dotnet publish` and observe the output of the publish\r\n\r\n### Expected:\r\nWhen I run `dotnet publish` the output should not contain Newtonsoft.Json.dll (as the version in the \"store\" is higher).\r\n\r\n**Edit by nguerrera** Above is by design as there is no unification to higher version when a package is resolved from the store at runtime. But we should have a warning when this case is triggered since it can be surprising. Changed title of bug appropriate.\r\n\r\n### Actual:\r\nWhen I run `dotnet publish` the output contains the Newtonsoft.Json.dll.\r\n\r\n**Edit by nguerrera** And there is no diagnostic that a different version is in the manifest.\r\n\r\nI've created a simple repro solution:\r\n[ReproResolvePublishedAssemblies.zip](https://github.com/dotnet/sdk/files/3241624/ReproResolvePublishedAssemblies.zip)\r\n\r\n`dotnet --info`:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.300\r\n Commit:    73efd5bd87\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.300\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.5\r\n  Commit:  0a3c9209c0\r\n```\r\n","Url":"https://github.com/dotnet/sdk/issues/3288","RelatedDescription":"Open issue \"dotnet publish does not warn on version conflicts with packages in the store manifest\" (#3288)"},{"Id":"452362994","IsPullRequest":false,"CreatedAt":"2019-03-22T10:08:51","Actor":"tommy86r","Number":"3300","RawContent":null,"Title":"Self-contained asp.net core application gives the error “This executable is not bound to a managed DLL to execute”","State":"open","Body":"# Self-contained asp.net core application gives the error “This executable is not bound to a managed DLL to execute”\r\n\r\nWhen I publish my asp.net core application as self-contained I succesfully get the myproject.exe. This exe file doesn't work if I double click on it and doesn't work if I try to run it from the cmd console. The project has been update from .net core 2.0 to 2.2\r\nThe exception is:\r\n\r\n> This executable is not bound to a managed DLL to execute. The binding value is: 'c3ab8ff13720e8ad9047dd39466b3c8974e592c2fa383d4a3960714caef0c4f2'\r\n> A fatal error was encountered. This executable was not bound to load a managed DLL.\r\n\r\nI tried to publish throught Visual Studio (using Method: File System - Target Framework: netcoreapp2.2 - Deployment Mode: self-contained - Target Runtime: win-x64) and also throught cmd console \"dotnet publish -r win-x64\". But I get the same error.\r\n\r\nI added a repo to replicate the issue (I removed almost everythings from the project, it contains only the skeleton, but it seems sufficient to replicate the issue) https://github.com/tommy86r/TempProject\r\n\r\nAl last, this is my .net core configuration:\r\n![dot-net-info](https://user-images.githubusercontent.com/12224568/54815641-c1b03e80-4c92-11e9-805d-639ce9162e64.PNG)\r\n","Url":"https://github.com/dotnet/sdk/issues/3300","RelatedDescription":"Open issue \"Self-contained asp.net core application gives the error “This executable is not bound to a managed DLL to execute”\" (#3300)"},{"Id":"452364411","IsPullRequest":false,"CreatedAt":"2019-03-13T07:55:02","Actor":"pavlexander","Number":"3301","RawContent":null,"Title":"Wrong assembly is being referenced in solution","State":"open","Body":"# Wrong assembly is being referenced in solution\r\n\r\nWhen trying to reference 1.0.4. version of an assembly - 1.0.1 version of file is being used.. Despite the fact, that project settings are pointing to the correct DLL. As the result - the solution is still compiled with 1.0.1 version.\r\n\r\n# General\r\n## Specs\r\n\r\nOS:\r\n\r\n* OS Name\tMicrosoft Windows 10 Enterprise\r\n* Version 10.0.16299 Build 16299\r\n\r\nVS:\r\n\r\n* Microsoft Visual Studio Professional 2017 \r\n* Version 15.9.7\r\n* VisualStudio.15.Release/15.9.7+28307.423\r\n* Microsoft .NET Framework\r\n* Version 4.7.02556\r\n\r\ndotnet --version\r\n\r\n* 2.2.104\r\n\r\n## Prerequisites\r\n\r\nCheckout the solution from my repo: \r\n\r\nhttps://github.com/pavlexander/dotnetbugs/tree/master/Bugs/12032019_WrongAssemblyLoaded\r\n\r\n## Steps to reproduce\r\n\r\n1. Open the solution in VisualStudio\r\n2. Right click on project, \"Add -> Reference\".\r\n3. Browse for file in directory: \"..12032019_WrongAssemblyLoaded\\WrongAssemblyLoaded\\DebugTests.Common.NugetWithPdb.1.0.4\\lib\\netstandard2.0\\DebugTests.Common.NugetWithPdb2.dll\"\r\nProceed with adding of a reference.\r\n**Note that file from 1.0.4 is selected.** \r\n4. Right click on project, click \"Edit WrongAssemblyLoaded.csproj\"\r\n5. Verify that correct assembly is specified:\r\n\r\n```\r\n  <ItemGroup>\r\n    <Reference Include=\"DebugTests.Common.NugetWithPdb\">\r\n      <HintPath>DebugTests.Common.NugetWithPdb.1.0.4\\lib\\netstandard2.0\\DebugTests.Common.NugetWithPdb2.dll</HintPath>\r\n    </Reference>\r\n  </ItemGroup>\r\n```\r\n\r\n6. Now, in VisualStudio, expand the tree of the project -> Dependencies -> Assemblies, find the assembly that you referenced and check the path.\r\n\r\n**Expected result:**\r\n\r\nAssembly from 1.0.4 folder is used\r\n\r\n**Actual result:**\r\n\r\n..\\dotnetbugs\\Bugs\\12032019_WrongAssemblyLoaded\\WrongAssemblyLoaded\\DebugTests.Common.NugetWithPdb.1.0.1\\lib\\netstandard2.0\\DebugTests.Common.NugetWithPdb.dll\r\n\r\nAnd this is the issue. Assembly of version \"1.0.1\" is used in project, despite even the fact that in project settings \"1.0.4\" version is specified. If you try and build the solution now, in the output folder you will also see the \"1.0.1\" version. I don't think this is related to Visual Studio in any way. Because, even if you try to use the `dotnet build` command directly - it will also put the same wrong dll into an output directory. \r\n","Url":"https://github.com/dotnet/sdk/issues/3301","RelatedDescription":"Open issue \"Wrong assembly is being referenced in solution\" (#3301)"},{"Id":"451752075","IsPullRequest":false,"CreatedAt":"2018-06-29T10:44:56","Actor":"petroemil","Number":"3299","RawContent":null,"Title":"Define InternalsVisibleTo \"attributes\" in the csproj file","State":"open","Body":"Many of the AssemblyInfo.cs file's content are already generated from the project file, meaning in many (or more like most) cases we don't need to have an AssemblyInfo.cs file in our projects. \r\n\r\nThere is one quite frequently used assembly level attribute though that still has to be defined as a traditional attribute - the `InternalsVisibleToAttribute`.\r\n\r\nIt would be nice if this could also be defined from the project file, which would also mean we could easily define it in a solution level props file, enabling all projects implicitly to see their `internal`s from the test project(s).","Url":"https://github.com/dotnet/sdk/issues/3299","RelatedDescription":"Open issue \"Define InternalsVisibleTo \"attributes\" in the csproj file\" (#3299)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1138214322503426048","CreatedAt":"2019-06-10T22:40:16+00:00","UserScreenname":"dotnet","Text":"On this week's #ASPNET Community Standup, we'll be talking to @danroth27 about the Blazing Pizza demo he showed at… https://t.co/EoPKEmeHPX","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":28,"FavoriteCount":12,"RawContent":null},{"Id":"1137047014795911168","CreatedAt":"2019-06-07T17:21:48+00:00","UserScreenname":"dotnet","Text":"We're happy to support Core WF and Core WCF open source projects https://t.co/4hjysrl1X8 https://t.co/JWwVvdv01f","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":140,"FavoriteCount":72,"RawContent":null},{"Id":"1136678589007519744","CreatedAt":"2019-06-06T16:57:48+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":11,"FavoriteCount":2,"RawContent":null},{"Id":"1136485660875878400","CreatedAt":"2019-06-06T04:11:11+00:00","UserScreenname":"dotnet","Text":"Are you a Visual Basic developer? Are you interested in compilers? Make sure to watch @DualBrain's live stream wher… https://t.co/kcXhvWp7yZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":34,"FavoriteCount":11,"RawContent":null},{"Id":"1136040221730934785","CreatedAt":"2019-06-04T22:41:10+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":14,"FavoriteCount":6,"RawContent":null},{"Id":"1135955901439971328","CreatedAt":"2019-06-04T17:06:06+00:00","UserScreenname":"dotnet","Text":"A Microsoft Build 2019, @LadyNaggaga showed us a new way to learn .NET using Try .NET\n\nhttps://t.co/KnbAuDyRzr #dotnet #dotnetcore","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":40,"FavoriteCount":9,"RawContent":null},{"Id":"1134142130094346245","CreatedAt":"2019-05-30T16:58:49+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":5,"FavoriteCount":1,"RawContent":null},{"Id":"1133749843564740608","CreatedAt":"2019-05-29T15:00:01+00:00","UserScreenname":"dotnet","Text":"ML .NET Model Lifecycle with Azure DevOps CI/CD pipelines\nhttps://t.co/zlCqa4I8vn https://t.co/K17nKopaZn","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":36,"FavoriteCount":25,"RawContent":null},{"Id":"1133746063792205826","CreatedAt":"2019-05-29T14:45:00+00:00","UserScreenname":"dotnet","Text":"In 15 minutes, watch @terrajobst adding return statements and control flow analysis to his compiler project. https://t.co/guh6xtpdbd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":7,"RawContent":null}]}},"RunOn":"2019-06-11T05:30:41.2680235Z","RunDurationInMilliseconds":15388}