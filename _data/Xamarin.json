{"Data":{"Blog":{"FeedItems":[{"Title":"Add Cloud Storage to Xamarin Apps with Azure Blob Storage","PublishedOn":"2018-03-16T18:17:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Cloud Storage has become a must-have feature for mobile apps. It gives developers the ability to store large files in the cloud and securely distribute them to all mobile app users. Moving these large...","Href":"https://blog.xamarin.com/xamarin-plus-azure-blob-cloud-storage/","RawContent":null},{"Title":"Xamarin Joins docs.microsoft.com","PublishedOn":"2018-03-14T17:22:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we&#8217;re beginning a new chapter in mobile developer documentation: Xamarin docs are now live on docs.microsoft.com/xamarin! Here are a few highlights of the new documentation experience:...","Href":"https://blog.xamarin.com/xamarin-joins-docs-microsoft-com/","RawContent":null},{"Title":"Podcast: Visual Studio 2017 version 15.6, AR with UrhoSharp, and ML with CoreML","PublishedOn":"2018-03-12T18:43:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I discuss the fun new features in the Visual Studio 2017 version 15.6 stable release, including macOS environment setup and iOS WiFi...","Href":"https://blog.xamarin.com/podcast-visual-studio-2017-version-15-6-ar-urhosharp-ml-coreml/","RawContent":null},{"Title":"Contributing to Xamarin.iOS and Xamarin.Mac","PublishedOn":"2018-03-08T19:41:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Two years ago this month, we made some exciting announcements about the future of Xamarin. One of those announcements detailed the open sourcing of the Xamarin.iOS and Xamarin.Mac SDK. Open source is...","Href":"https://blog.xamarin.com/contributing-to-xamarin-ios-xamarin-mac/","RawContent":null},{"Title":"Visual Studio 2017 Version 15.6 Now Available!","PublishedOn":"2018-03-06T20:17:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Our last release, Visual Studio 2017 version 15.5, featured awesome new updates, such as the iOS Remoted Simulator becoming available to all developers, live XAML previewing in Android emulators with...","Href":"https://blog.xamarin.com/visual-studio-2017-version-15-6-now-available/","RawContent":null},{"Title":"Mobile Developer Events in March","PublishedOn":"2018-03-01T19:05:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Around the world, Xamarin and .NET user groups are meeting up to learn and discuss the latest news on exciting releases, tooling, and updates with Xamarin and related technologies. This March, you can...","Href":"https://blog.xamarin.com/mobile-developer-events-march/","RawContent":null},{"Title":"The New, Feature-Packed UrhoSharp 1.8","PublishedOn":"2018-02-28T19:34:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"UrhoSharp is a .NET API for building 3D experiences in your apps. A .NET binding to the Urho3D engine, it allows developers to write cross-platform code targeting Android, iOS, Windows and macOS with...","Href":"https://blog.xamarin.com/announcing-urhosharp-1-8-release/","RawContent":null},{"Title":"New Xamarin University Course: Navigation Patterns in Xamarin.Forms (XAM205)","PublishedOn":"2018-02-26T19:10:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms, a popular choice for cross-platform Xamarin apps, has two stacks. It&#8217;s common to implement navigation by pushing and popping Pages on a stack, but the two stacks are intended for...","Href":"https://blog.xamarin.com/xamarin-forms-navigation-patterns-xam205/","RawContent":null},{"Title":"Add Tizen Projects to Your Xamarin.Forms Applications","PublishedOn":"2018-02-23T19:24:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a special guest post from Jay Cho of the Samsung Tizen team. It&#8217;s been a while since the first preview version of Tizen .NET was released. Thanks to the newest release, developing...","Href":"https://blog.xamarin.com/add-tizen-projects-xamarin-forms-apps/","RawContent":null},{"Title":"Create and Host tvOS TVML Apps with Azure and Xamarin","PublishedOn":"2018-02-22T20:30:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Creating amazing tvOS TVML apps doesn&#8217;t have to be hard. In this blog post, I&#8217;ll go over the many similarities tvOS has to iOS and show you how to create a sample quiz app using UIKit that...","Href":"https://blog.xamarin.com/create-tvos-tvml-apps-azure-xamarin/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7397927262","Type":"IssuesEvent","CreatedAt":"2018-03-19T02:41:23","Actor":"knocte","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1441","RelatedDescription":"Opened issue \"Deploying to emulator (or to device via USB) doesn't honor \"Required permissions\" list in AndroidManifest.xml\" (#1441) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Develop your XamarinAndroid app that accesses some service on the internet.\r\n2. Run it on your emulator.\r\nCurrent results A: it works fine.\r\n3. Run it on your device deploying via USB with Visual Studio for Mac\r\nCurrent results B: see it works fine.\r\n4. Create .APK file for it\r\n5. Copy the .APK file to your phone's SD card.\r\n6. Use the file explorer on your phone to install the .APK file.\r\n7. Run the application inside your phone.\r\nCurrent results C: it hangs when trying to access any service on the internet. Developer can be very confused (it's much difficult to debug the app in this state that in previous deployment methods).\r\n\r\n\r\n### Expected Behavior\r\nExpected results A: it should fail to access to the internet because developer hasn't enabled INTERNET permission on the AndroidManifest.xml. (Ideally this gives some exception in the log.)\r\nExpected results B: it should fail to access to the internet because developer hasn't enabled INTERNET permission on the AndroidManifest.xml. (Ideally this gives some exception in the log.)\r\n\r\n### Version Information\r\n\r\n```\r\nVisual Studio Community 2017 for Mac\r\nVersion 7.4 (build 1033)\r\nInstallation UUID: fd06ff65-69de-47ae-8b99-ddf257032b7c\r\nRuntime:\r\n\tMono 5.8.0.129 (2017-10/835a98d8559) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 508000129\r\n\r\nNuGet\r\nVersion: 4.3.1.4445\r\n\r\n.NET Core\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.8.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\nXamarin.Profiler\r\nVersion: 1.6.1\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\nApple Developer Tools\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\nXamarin.Mac\r\nVersion: 4.2.0.20 (Visual Studio Community)\r\n\r\nXamarin.iOS\r\nVersion: 11.8.0.20 (Visual Studio Community)\r\nHash: 1c6f300e\r\nBranch: d15-6\r\nBuild date: 2018-02-07 23:42:40-0500\r\n\r\nXamarin.Android\r\nVersion: 8.2.0.15 (Visual Studio Community)\r\nAndroid SDK: /Users/andres/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t7.1 (API level 25)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 26.0.2\r\nSDK Build Tools Version: 26.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\nXamarin Inspector\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\nBuild Information\r\nRelease ID: 704001033\r\nGit revision: 053991068f3c88497d3e5cc52fe7fdf57c28b62f\r\nBuild date: 2018-02-28 05:02:28-05\r\nXamarin addins: cc3283953e0af0b8bfab1bdfdf847d9e403c4606\r\nBuild lane: monodevelop-lion-d15-6\r\n\r\nOperating System\r\nMac OS X 10.13.1\r\nDarwin 17.2.0 Darwin Kernel Version 17.2.0\r\n    Fri Sep 29 18:27:05 PDT 2017\r\n    root:xnu-4570.20.62~3/RELEASE_X86_64 x86_64\r\n\r\nEnabled user installed addins\r\nInternet of Things (IoT) development (Preview) 7.1\r\n```\r\n\r\n### Log File\r\n\r\nN/A\r\n\r\n"},{"Id":"7394546340","Type":"PullRequestEvent","CreatedAt":"2018-03-17T12:31:22","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1440","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Install FSharp.Core 4.3.1\" (#1440) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/mono/mono/issues/7511\r\nFixes: https://github.com/xamarin/xamarin-android/issues/1438\r\n\r\nContext: https://github.com/xamarin/xamarin-android/pull/1289\r\n\r\nPR #1289 bumps xamarin-android to use the mono/2018-02 branch, and is\r\nencountering an error when executing the\r\n`Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckResourceDesignerIsCreated()`\r\ntest, with the following error:\r\n\r\n\t/Users/builder/jenkins/workspace/xamarin-android-pr-builder/xamarin-android/bin/Debug/lib/xamarin.android/xbuild/Xamarin/Android/Xamarin.Android.Common.targets: error : Error executing task GenerateResourceDesigner: Could not load file or assembly 'FSharp.Core, Version=4.3.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies.\r\n\tError executing task GenerateResourceDesigner: System.IO.FileNotFoundException: Could not load file or assembly 'FSharp.Core, Version=4.3.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies.\r\n\tFile name: 'FSharp.Core, Version=4.3.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\t  at System.CodeDom.Compiler.CodeDomProvider.CreateGenerator (System.IO.TextWriter output) [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-02/external/bockbuild/builds/mono-x64/external/corefx/src/System.CodeDom/src/System/CodeDom/Compiler/CodeDomProvider.cs:123\r\n\t  at Xamarin.Android.Tasks.GenerateResourceDesigner.WriteFile (System.String file, System.CodeDom.CodeTypeDeclaration resources, System.String language, System.Boolean isFSharp, System.Boolean isCSharp) [0x0012a] in /Users/builder/jenkins/workspace/xamarin-android-pr-builder/xamarin-android/src/Xamarin.Android.Build.Tasks/Tasks/GenerateResourceDesigner.cs:217\r\n\t  at Xamarin.Android.Tasks.GenerateResourceDesigner.Execute () [0x0065b] in /Users/builder/jenkins/workspace/xamarin-android-pr-builder/xamarin-android/src/Xamarin.Android.Build.Tasks/Tasks/GenerateResourceDesigner.cs:155\r\n\t  at Microsoft.Build.BuildEngine.TaskEngine.Execute () [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-02/external/bockbuild/builds/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/TaskEngine.cs:134\r\n\t  at Microsoft.Build.BuildEngine.BuildTask.Execute () [0x0008d] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-02/external/bockbuild/builds/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/BuildTask.cs:101\r\n\r\nThe mono/2018-02 branch bumps the `FSharp.Core.dll` assembly that is\r\ndistributed with mono to have an assembly version of 4.4.1.\r\n\r\nThe `FSharp.Compiler.CodeDom` NuGet package that\r\n`Xamarin.Android.Build.Tasks.dll` references requires FSharp.Core\r\n4.3.1, hence the `FileNotFoundException`.\r\n\r\nThe (hopeful) fix? Install the required `FSharp.Core.dll` version, so\r\nthat `FSharp.Compiler.CodeDom` can work as desired."},{"Id":"7393703345","Type":"PullRequestEvent","CreatedAt":"2018-03-17T00:51:01","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1439","RelatedDescription":"Opened pull request \"[create-vsix] Create a separate package for unstable frameworks\" (#1439) at xamarin/xamarin-android","RelatedBody":"**Background**\r\n\r\nIt's Android preview time!\r\n\r\nEven better, we have support for building API-P bindings within around\r\na week of the Google announcement, via 8ce25376.\r\n\r\nThis raises a question: How does this binding get *used*?\r\n\r\nHistorically, we haven't been very good at this: various bits of code\r\nneeded to know *all* of the API levels (to associate with\r\n`$(TargetFrameworkVersion)` values and Ids and names and...), which\r\nmeant that the only way the preview binding could be used was to have\r\na preview release of the *entire development stack*: Xamarin.Android,\r\nIDE, build-tools, the works.\r\n\r\nInvariably we didn't have a \"preview\" release of the new binding until\r\nafter it was API-stable (or close to it), and the IDEs have been\r\nupdated, all of which would be *months* after the announcement.\r\n\r\nCommit 8942eca0 envisioned a New World Order™ in which the mapping\r\nbetween API level and `$(TargetFrameworkVersion)`/etc. could be more\r\n*dynamic*, based on `AndroidApiInfo.xml` files probed at process and\r\nIDE startup, to *simplify* what it takes to use binding assemblies.\r\n\r\nThis support, mutated in various forms, is already in the IDEs (though\r\na preview IDE may be needed).\r\n\r\nWith foundational support, we can now try the next bit: update\r\n`create-vsix.csproj` so that it can generate one of two packages:\r\n\r\n 1. A `Xamarin.Android.Sdk-OSS-*.vsix` file which contains *only* the\r\n    stable API level bindings.\r\n\r\n 2. An optional `Xamarin.Android.Sdk-OSS-*-UnstableFrameworks.vsix`\r\n    file which contains *only* the ***unstable*** API bindings.\r\n\r\nThe idea is that the first package can be the \"normal\" release\r\npackage, while the second package can be installed \"side-by-side\" with\r\nthe first pacakge.\r\n\r\nFurthermore, the *intent* is that the `-UnstableFrameworks` package\r\ncould be installed side-by-side with *any* Xamarin.Android.Sdk\r\npackage. Ideally, this means that it could be installed alongside the\r\ncurrent *stable* Xamarin.Android SDK package, with no ill effects.\r\n\r\nThe target workflow is thus:\r\n\r\n 1. Developer has Xamarin.Android SDK installed on their machine.\r\n\r\n 2. Developer downloads and installs the `-UnstableFrameworks`\r\n    package from:\r\n\r\n        https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/lastSuccessfulBuild/Azure/\r\n\r\n 3. Developer restarts their IDE.\r\n\r\n 4. Developer edits the `.csproj` of their project, and sets the\r\n    `$(TargetFrameworkVersion)` value to the value of the unstable API\r\n    binding, e.g. `v8.1.99`.\r\n\r\n    *Note*: It may instead be possible to change things from within\r\n    the IDE. Some specifics are not yet sorted out.\r\n\r\n 5. The next build of the project uses the preview/unstable API level.\r\n\r\nWith luck, this should allow us to provide \"usable\" (if broken!\r\nthey're not API stable!) for testing on an improved timeframe.\r\n\r\n**Implementation**\r\n\r\nHack up `create-vsix.csproj` and company to support a new MSBuild\r\nproperty: `$(UnstableFrameworks)` (default False). When True, the\r\noutput package name is changed to have a `-UnstableFrameworks` suffix,\r\nthe package ID is changed, the installation directory is changed...\r\n*Lots* of things are changed, including the package contents.\r\n\r\nThe \"normal\" package is altered so that it *only* contains Stable\r\nframework bindings. (This is a change from before, in which *all*\r\nframework bindings were included.)\r\n\r\nThe \"unstable\" package contains only non-Stable framework bindings.\r\n\r\nThe `make create-vsix` Makefile target and `HaveUnstableFrameworks`\r\ntarget within `build-tools/scripts/Info.targets` work together to only\r\nbuild the `-UnstableFrameworks.vsix` package if there *are* unstable\r\nframeworks to package. If there are no unstable packages, no\r\n`-UnstableFrameworks` package is created."},{"Id":"7393172590","Type":"IssuesEvent","CreatedAt":"2018-03-16T21:31:36","Actor":"luhenry","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1438","RelatedDescription":"Opened issue \"Cannot find FSharp.Core or one of its dependencies during testing \" (#1438) at xamarin/xamarin-android","RelatedBody":"`Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckResourceDesignerIsCreated.Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckResourceDesignerIsCreated` is failing for the `mono:2018-02` integration\r\n\r\n**Error:**\r\n\r\n```\r\n/Users/builder/jenkins/workspace/xamarin-android-pr-builder/xamarin-android/bin/Debug/lib/xamarin.android/xbuild/Xamarin/Android/Xamarin.Android.Common.targets: error : Error executing task GenerateResourceDesigner: Could not load file or assembly 'FSharp.Core, Version=4.3.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies.\r\nError executing task GenerateResourceDesigner: System.IO.FileNotFoundException: Could not load file or assembly 'FSharp.Core, Version=4.3.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies.\r\nFile name: 'FSharp.Core, Version=4.3.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n  at System.CodeDom.Compiler.CodeDomProvider.CreateGenerator (System.IO.TextWriter output) [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-02/external/bockbuild/builds/mono-x64/external/corefx/src/System.CodeDom/src/System/CodeDom/Compiler/CodeDomProvider.cs:123 \r\n  at Xamarin.Android.Tasks.GenerateResourceDesigner.WriteFile (System.String file, System.CodeDom.CodeTypeDeclaration resources, System.String language, System.Boolean isFSharp, System.Boolean isCSharp) [0x0012a] in /Users/builder/jenkins/workspace/xamarin-android-pr-builder/xamarin-android/src/Xamarin.Android.Build.Tasks/Tasks/GenerateResourceDesigner.cs:217 \r\n  at Xamarin.Android.Tasks.GenerateResourceDesigner.Execute () [0x0065b] in /Users/builder/jenkins/workspace/xamarin-android-pr-builder/xamarin-android/src/Xamarin.Android.Build.Tasks/Tasks/GenerateResourceDesigner.cs:155 \r\n  at Microsoft.Build.BuildEngine.TaskEngine.Execute () [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-02/external/bockbuild/builds/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/TaskEngine.cs:134 \r\n  at Microsoft.Build.BuildEngine.BuildTask.Execute () [0x0008d] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-02/external/bockbuild/builds/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/BuildTask.cs:101 \r\n```\r\n\r\n**Logs:**\r\n\r\nhttps://jenkins.mono-project.com/job/xamarin-android-pr-builder/2618/testReport/junit/Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest/CheckResourceDesignerIsCreated/Xamarin_Android_Build_Tests_AndroidUpdateResourcesTest_CheckResourceDesignerIsCreated_False_FSharp____Debug/\r\nhttps://jenkins.mono-project.com/job/xamarin-android-pr-builder/2618/testReport/junit/Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest/CheckResourceDesignerIsCreated/Xamarin_Android_Build_Tests_AndroidUpdateResourcesTest_CheckResourceDesignerIsCreated_True_FSharp____Debug/\r\n\r\n**Issue** (as figured out by @jonpryor at https://github.com/mono/mono/issues/7511#issuecomment-371679320)**:**\r\n\r\nThe current code should be using the [`FSharp.Compiler.CodeDom` NuGet package](https://www.nuget.org/packages/FSharp.Compiler.CodeDom/), which has a reference on `FSharp.Core.dll` v4.3.1.0.\r\n\r\nFixes https://github.com/mono/mono/issues/7511\r\n\r\nhttps://github.com/mono/mono/issues/6842 https://github.com/xamarin/xamarin-android/pull/1289"},{"Id":"7392216065","Type":"PullRequestEvent","CreatedAt":"2018-03-16T17:54:20","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1437","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] DesignTimeBuild Improvements [WIP\" (#1437) at xamarin/xamarin-android","RelatedBody":""},{"Id":"7392058083","Type":"PullRequestEvent","CreatedAt":"2018-03-16T17:23:04","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1433","RelatedDescription":"Merged pull request \"Reformat AndroidClientHandler test sources [whitespace only commit]\" (#1433) at xamarin/xamarin-android","RelatedBody":"The formatting was totally messy, make it conform to the XA coding style"},{"Id":"7391831517","Type":"PullRequestEvent","CreatedAt":"2018-03-16T16:39:21","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1436","RelatedDescription":"Opened pull request \"[msbuild] default value for JavaMaximumHeapSize\" (#1436) at xamarin/xamarin-android","RelatedBody":"Fixes #1415\r\n\r\nCommonly Xamarin.Android apps on Windows require the `JavaMaximumHeapSize`\r\nproperty to be set, in order to make it past the `CompileToDalvik`\r\nMSBuild task that invokes `dx.jar`. Passing `java.exe` a value of\r\n`-Xmx1G` mitigates the `java.lang.OutOfMemoryError`.\r\n\r\nWe have been getting reports of this happening for File->New Project\r\ntemplates, so it seems to be time to default the value to `1G` if it\r\nis not set.\r\n\r\nChanges:\r\n- Set `JavaMaximumHeapSize` in `Xamarin.Android.Common.targets` if unset\r\n- Removed places `JavaMaximumHeapSize` was required to be set for\r\nsome unit tests to pass on Windows\r\n- Update documentation\r\n\r\nConcerns:\r\n\r\nAt one time, a default value for `JavaMaximumHeapSize` was attempted,\r\nonly to get reports of an error such as:\r\n\r\n    While trying to start a Java application with a maximum heap size of\r\n    1GB, you receive the following error:\r\n    \"JVMJ9VM015W Initialization error for library j9gc24(2): Failed to\r\n    instantiate heap; 1G requested\r\n    Could not create the Java virtual machine.\r\n\r\nHopefully, this was something that was happening for older JDK versions in\r\nthe past on Windows."},{"Id":"7391792470","Type":"PullRequestEvent","CreatedAt":"2018-03-16T16:31:52","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1432","RelatedDescription":"Closed pull request \"[Xamarin.Android.Build.Tasks] Ignore Assemblies which use `@(AndroidAarLibrary)`\" (#1432) at xamarin/xamarin-android","RelatedBody":"This is a slight modification to our Aar support. We have a\r\nsituation where some versions of the components use the\r\nnew `@(AndroidAarLibrary)` ItemGroup to extract resources.\r\nBUT (and its a big one).. It also cotnains the old style\r\nembedded resource archive!\r\n\r\nSo what ends up happening is we extract the resources TWICE!\r\nSo what the component team need is a way to tell our build\r\nsystem to ignore certain assemblies since they have Aar files.\r\nRather than trying to do some weird path matching logic which\r\nwill no doubt fail we introduce a new Item Group `@(_LibraryProjects)`.\r\n\r\nThis new item group is populated in  the new `_CollectLibraryProjects`\r\ntarget from the existing `@(ReferencePath);@(ReferenceDependencyPaths)`.\r\nThe component team can then run a target after the `_CollectLibraryProjects`\r\ntarget to remove the problem assemblies from the resource\r\nextraction process.\r\n\r\n\t<Target Name=\"_Foo\" AfterTargets=\"_CollectLibraryProjects\">\r\n\t\t<ItemGroup>\r\n\t\t\t<_LibraryProject Remove=\"%(_LibraryProject.Identity)\" Condition=\" '%(_LibraryProject.Filename)' == 'foo.dll'\" />\r\n\t\t</ItemGroup>\r\n\t</Target>\r\n\r\nThis new item group will only be used in `_ResolveLibraryProjectImports`\r\nand `_BuildAdditionalResourceCache`. So removing the assembly will\r\nhave no effect on the building or deplopyment of the application."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7397834853","Type":"IssuesEvent","CreatedAt":"2018-03-19T02:01:59","Actor":"AceCoderLaura","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2127","RelatedDescription":"Opened issue \"Error On Setting CarouselPage.IsEnabled to false\" (#2127) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nInstances of the CarouselPage cannot have their IsEnabled property set to 'false'.\r\n\r\n### Steps to Reproduce\r\n1. Instantiate a CarouselPage.\r\n2. Set it's IsEnabled property to 'false'.\r\n3. Observe exception.\r\n\r\n### Expected Behavior\r\nThe CarouselPage should appear disabled.\r\n\r\n### Actual Behavior\r\nA NullReferenceException is thrown.\r\n\r\n### Basic Information\r\n- Version with issue: 2.5.0.280555\r\n- Last known good version: Unknown\r\n- IDE: VS 2017\r\n- Platform Target Frameworks:\r\n  - UWP: 16299\r\n- Nuget Packages:\r\nGoogle.Apis.Calendar.v3             {1.32.2.1146}          \r\nNETStandard.Library                 {2.0.1}                \r\nXamarin.Forms                       {2.5.0.280555}         \r\nXamarin.Forms                       {2.5.0.280555}         \r\nXamarin.Forms                       {2.5.0.280555}         \r\nMicrosoft.NETCore.UniversalWindo... {6.0.7}                \r\nXamarin.Forms                       {2.5.0.280555}         \r\n\r\n### Reproduction Link\r\nhttps://bitbucket.org/ChristianFindlay/xamarin-forms-scratch\r\nRun the project and click the carousel page option."},{"Id":"7396118474","Type":"IssuesEvent","CreatedAt":"2018-03-18T08:17:57","Actor":"Puneetk207","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2126","RelatedDescription":"Opened issue \"AppCompat Theme not working for Dialog.Alert on pre Lollipop devices.\" (#2126) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description \r\nGuys after updating latest nuget packages for Forms to 2.5.0. Appcompat theme for dialog alert is not working on pre lollipop devices.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Check any alert dialog after updating to Forms 2.5 on pre-lollipop devices. \r\n\r\n### Expected Behavior\r\nAfter applying appcompat theme dialog alert should be appear as material design alert on pre lollipop devices.\r\n\r\n### Actual Behavior\r\nAfter applying appcompat theme dialog alert not changed to material design alert.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5\r\n- Last known good version: 2.3\r\n- IDE: VS for Mac\r\n- Platform Target Frameworks: <!-- All that apply --> Android \r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices: pre-lollipop devices\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7398043341","Type":"PullRequestEvent","CreatedAt":"2018-03-19T03:29:25","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3780","RelatedDescription":"Opened pull request \"[GameplayKit] Fix naming of GKNoise.DisplaceX\" (#3780) at xamarin/xamarin-macios","RelatedBody":"Fixes xamarin/xamarin-macios#3716\r\n\r\nGKNoise.DisplaceX suggests that displacement can only be done\r\nalong one axis which is not true, according to documentation\r\nyou use the 3 (x, y, x) noise objects.\r\n\r\nThe following API suggestions where considered:\r\n\r\n```csharp\r\nGKNoise.Displace (xDisplacementNoise, yDisplacementNoise, zDisplacementNoise);\r\nGKNoise.DisplaceWithNoises (x, y, z);\r\n```\r\n\r\nAnd I think just using `Displace` as the method name and let each\r\nof the parameters clearly state their intent is best."},{"Id":"7397972193","Type":"PullRequestEvent","CreatedAt":"2018-03-19T03:00:11","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3779","RelatedDescription":"Opened pull request \"[AppKit] Adds [NullAllowed] to NSGridCell.ContentView\" (#3779) at xamarin/xamarin-macios","RelatedBody":"Fixes xamarin/xamarin-macios#3777\r\n\r\nThe Objective-C definition is:\r\n\r\n```\r\n@property (strong,nullable) __kindof NSView *contentView;\r\n```"},{"Id":"7397953493","Type":"PullRequestEvent","CreatedAt":"2018-03-19T02:52:07","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3778","RelatedDescription":"Opened pull request \"[AppKit] Adds [NullAllowed] to NSTableView.RegisterNib\" (#3778) at xamarin/xamarin-macios","RelatedBody":"Fixes xamarin/xamarin-macios#3776"},{"Id":"7397899781","Type":"IssuesEvent","CreatedAt":"2018-03-19T02:29:57","Actor":"wjk","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3777","RelatedDescription":"Opened issue \"NSGridCell.ContentView setter lacks NullAllowedAttribute\" (#3777) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Get an `NSGridCell` instance and try to set its `ContentView` to `null`.\r\n2. Observe the exception.\r\n\r\n### Expected Behavior\r\n\r\nSDK says this property is nullable. Therefore, a `nil` value should be passed to Cocoa.\r\n\r\n### Actual Behavior\r\n\r\n`ArgumentNullException` is thrown.\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.4 (build 1033)\r\nInstallation UUID: 2f7490c4-93db-429d-9511-4b9317c93fbc\r\nRuntime:\r\n\tMono 5.8.0.129 (2017-10/835a98d8559) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 508000129\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.8.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.1\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nNot Installed\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.2.0.20 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.8.0.20 (Visual Studio Community)\r\nHash: 1c6f300e\r\nBranch: d15-6\r\nBuild date: 2018-02-07 23:42:40-0500\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 704001033\r\nGit revision: 053991068f3c88497d3e5cc52fe7fdf57c28b62f\r\nBuild date: 2018-02-28 05:02:28-05\r\nXamarin addins: cc3283953e0af0b8bfab1bdfdf847d9e403c4606\r\nBuild lane: monodevelop-lion-d15-6\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.3\r\nDarwin 17.4.0 Darwin Kernel Version 17.4.0\r\n    Sun Dec 17 09:19:54 PST 2017\r\n    root:xnu-4570.41.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nEditorConfig 1.1\r\nEto.Forms Support Addin 2.4.0.0\r\nAddinMaker 1.4.2\r\nInternet of Things (IoT) development (Preview) 7.1\r\n```\r\n"},{"Id":"7394370393","Type":"IssuesEvent","CreatedAt":"2018-03-17T10:13:00","Actor":"Kimosabe","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3776","RelatedDescription":"Opened issue \"NSTableView RegisterNib throws exception\" (#3776) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Call NSTableView.RegisterNib(null, identifier);\r\n\r\n### Expected Behavior\r\nAccording to [documentation](https://developer.apple.com/documentation/appkit/nstableview/1524297-registernib?language=objc), previously registered nib is removed.\r\n\r\n### Actual Behavior\r\nArgumentNullException: value cannot be null. Parameter name: nib\r\n"},{"Id":"7393286647","Type":"PullRequestEvent","CreatedAt":"2018-03-16T22:03:36","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3764","RelatedDescription":"Merged pull request \"[link sdk] Tweak test to work when running as an extension.\" (#3764) at xamarin/xamarin-macios","RelatedBody":"Also improve corresponding asserts to show the actual/expected values."},{"Id":"7393281219","Type":"PullRequestEvent","CreatedAt":"2018-03-16T22:01:57","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3763","RelatedDescription":"Merged pull request \"[generator/registrar] Add support for blocks in static protocol members. Fixes #41226.\" (#3763) at xamarin/xamarin-macios","RelatedBody":"Add support for blocks in static protocol members by adding another field to\nthe [ProtocolMember] attribute that specifies the block proxy type.\n\nFixes https://bugzilla.xamarin.com/show_bug.cgi?id=41226."},{"Id":"7392879256","Type":"IssuesEvent","CreatedAt":"2018-03-16T20:20:27","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3762","RelatedDescription":"Closed issue \"IWKNavigationDelegate has two interface methods, only show one code completion method\" (#3762) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1.   mvWebView.NavigationDelegate = this;\r\n2.   IWKNavigationDelegate\r\n3.  decidePolicy\r\n4.  decidePolicy\r\n\r\n### Expected Behavior\r\n\r\n[Export(\"webView:decidePolicyForNavigationResponse:decisionHandler:\")]\r\n[Export(\"webView:decidePolicyForNavigationAction:decisionHandler:\")]\r\n\r\n```\r\n[Export(\"webView:decidePolicyForNavigationResponse:decisionHandler:\")]\r\npublic void DecidePolicy(WKWebView webView, WKNavigationResponse navigationResponse, Action<WKNavigationResponsePolicy> decisionHandler)\r\n{\r\n   throw new System.NotImplementedException();\r\n}\r\n```\r\n```\r\n[Export(\"webView:decidePolicyForNavigationAction:decisionHandler:\")]\r\npublic void DecidePolicy(WKWebView webView, WKNavigationAction navigationAction, Action<WKNavigationActionPolicy> decisionHandler)\r\n{\r\n    throw new System.NotImplementedException();\r\n}\r\n```\r\n### Actual Behavior\r\n\r\n[Export(\"webView:decidePolicyForNavigationResponse:decisionHandler:\")]\r\n[Export(\"webView:decidePolicyForNavigationResponse:decisionHandler:\")]\r\n\r\n```\r\n[Export(\"webView:decidePolicyForNavigationResponse:decisionHandler:\")]\r\npublic void DecidePolicy(WKWebView webView, WKNavigationResponse navigationResponse, Action<WKNavigationResponsePolicy> decisionHandler)\r\n{\r\n   throw new System.NotImplementedException();\r\n}\r\n```\r\n```\r\n[Export(\"webView:decidePolicyForNavigationResponse:decisionHandler:\")]\r\npublic void DecidePolicy(WKWebView webView, WKNavigationResponse navigationResponse, Action<WKNavigationResponsePolicy> decisionHandler)\r\n{\r\n   throw new System.NotImplementedException();\r\n}\r\n```\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.4 (build 1033)\r\nInstallation UUID: 891dc29f-4210-4ba9-a91b-9564b6fea41d\r\nRuntime:\r\n\tMono 5.8.0.129 (2017-10/835a98d8559) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 508000129\r\n\r\n=== NuGet ===\r\n\r\n版本: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\n运行时: /usr/local/share/dotnet/dotnet\r\n运行时版本:\r\n\t2.0.5\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK 版本:\r\n\t2.1.4\r\n\t2.0.0\r\nMSBuild SDK: /Library/Frameworks/Mono.framework/Versions/5.8.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\n版本: 1.6.1\r\n位置:/Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.Android ===\r\n\r\n版本: 8.2.0.15 (Visual Studio Community)\r\nAndroid SDK: /Users/ttlgzmac6/Library/Developer/Xamarin/android-sdk-macosx\r\n\t受支持的 Android 版本:\r\n\t\t2.3   (API 级别 10)\r\n\t\t4.0.3 (API 级别 15)\r\n\t\t4.4   (API 级别 19)\r\n\t\t5.0   (API 级别 21)\r\n\t\t6.0   (API 级别 23)\r\n\t\t7.0   (API 级别 24)\r\n\t\t7.1   (API 级别 25)\r\n\t\t8.1   (API 级别 27)\r\n\r\nSDK 工具版本: 25.2.5\r\nSDK 平台工具版本: 27.0.1\r\nSDK 生成工具版本: 27.0.0\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL 代码在此处提供:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.2.0.20 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.8.0.20 (Visual Studio Community)\r\nHash: 1c6f300e\r\nBranch: d15-6\r\nBuild date: 2018-02-07 23:42:40-0500\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 704001033\r\nGit revision: 053991068f3c88497d3e5cc52fe7fdf57c28b62f\r\nBuild date: 2018-02-28 05:02:28-05\r\nXamarin addins: cc3283953e0af0b8bfab1bdfdf847d9e403c4606\r\nBuild lane: monodevelop-lion-d15-6\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.0\r\nDarwin 17.0.0 Darwin Kernel Version 17.0.0\r\n    Thu Aug 24 21:48:19 PDT 2017\r\n    root:xnu-4570.1.46~2/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\n\n> VS bug [#585126](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/585126)"},{"Id":"7392877497","Type":"IssuesEvent","CreatedAt":"2018-03-16T20:20:04","Actor":"ballanyousef","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3775","RelatedDescription":"Opened issue \"The iOS Designer requires an active connection to a Mac server. Please connect to a Mac to enable the designer\" (#3775) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"975467903750426626","CreatedAt":"2018-03-18T20:24:06+00:00","UserScreenname":"xamarinhq","Text":"Check out Android Emulator version 27.0.2, now featuring \"Quick Boot\" to launch the emulator in just a few seconds:… https://t.co/oyG6oJ6UN2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":119,"FavoriteCount":49,"RawContent":null},{"Id":"975154821358608384","CreatedAt":"2018-03-17T23:40:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to deliver rich media experiences with the #XamarinForms Video Player: https://t.co/ndy3yvDDNk https://t.co/jHWAbLK0zw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":19,"RawContent":null},{"Id":"974742352538558464","CreatedAt":"2018-03-16T20:21:01+00:00","UserScreenname":"xamarinhq","Text":"Add cloud storage to your #Xamarin apps with #Azure Blob Storage: https://t.co/g1O7qUdDb7 https://t.co/KYZ5XlPeGr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":16,"RawContent":null},{"Id":"974673649277001729","CreatedAt":"2018-03-16T15:48:01+00:00","UserScreenname":"xamarinhq","Text":"Add sound to your #XamarinForms app with the open-source SimpleAudioPlayer #NuGet plugin: https://t.co/r8NSFRpl33 https://t.co/dtAlgRSysQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":59,"FavoriteCount":15,"RawContent":null},{"Id":"974310000062533632","CreatedAt":"2018-03-15T15:43:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to make your #XamarinForms apps adaptive based on screen size, device type, and orientation: https://t.co/XZYix2Cv0j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":13,"RawContent":null},{"Id":"973975762419224577","CreatedAt":"2018-03-14T17:34:52+00:00","UserScreenname":"xamarinhq","Text":"#Xamarin joins https://t.co/zGGlEXOMrE! Learn more: https://t.co/dYZuo1IFIk https://t.co/a0BJMelbL9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":127,"FavoriteCount":66,"RawContent":null},{"Id":"973950886191030273","CreatedAt":"2018-03-14T15:56:01+00:00","UserScreenname":"xamarinhq","Text":"Get started with the #XamarinAndroid Device Manager Preview: https://t.co/4cTyPaFfMb https://t.co/HF0W9uigKU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":26,"FavoriteCount":16,"RawContent":null},{"Id":"973590055234228224","CreatedAt":"2018-03-13T16:02:12+00:00","UserScreenname":"xamarinhq","Text":"The #CSharp developer’s guide to shipping better apps with #VSAppCenter: https://t.co/jU0cnONnM8 https://t.co/5UiJzLeMBf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":73,"FavoriteCount":37,"RawContent":null},{"Id":"973272277876752385","CreatedAt":"2018-03-12T18:59:28+00:00","UserScreenname":"xamarinhq","Text":"Start your week off with the @XamarinPodcast, featuring discussion of #VS2017 version 15.6, AR with UrhoSharp, and… https://t.co/xgDtF4E72X","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":19,"FavoriteCount":8,"RawContent":null},{"Id":"973226616020176896","CreatedAt":"2018-03-12T15:58:01+00:00","UserScreenname":"xamarinhq","Text":"CoreML Programming with Xamarin.Mac and F#: https://t.co/vI7JuxjkWa https://t.co/MkadlSMfqL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":10,"RawContent":null},{"Id":"972993579109974016","CreatedAt":"2018-03-12T00:32:01+00:00","UserScreenname":"xamarinhq","Text":"The open source suite of SmartHotel360 reference apps includes mobile and desktop apps for business travelers, a we… https://t.co/i9MWn6ypXY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":141,"FavoriteCount":45,"RawContent":null},{"Id":"972643544832856065","CreatedAt":"2018-03-11T01:21:06+00:00","UserScreenname":"xamarinhq","Text":"Get started with the #Xamarin Live Player for iOS: https://t.co/jQnSvYwtB1 https://t.co/sa0DV2n2aD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":96,"FavoriteCount":56,"RawContent":null},{"Id":"972152285550862336","CreatedAt":"2018-03-09T16:49:01+00:00","UserScreenname":"xamarinhq","Text":"Build a simple #XamarinForms chat app that leverages and connects to an https://t.co/y9erV6ivVL Core #WebSocket:… https://t.co/hDELQELDqc","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":147,"FavoriteCount":56,"RawContent":null},{"Id":"971835801377091585","CreatedAt":"2018-03-08T19:51:25+00:00","UserScreenname":"xamarinhq","Text":"Learn how you can contribute to Xamarin.iOS and Xamarin.Mac—no code necessary! Get started: https://t.co/XU5OJkcXCt https://t.co/FGappPLbxT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":72,"FavoriteCount":26,"RawContent":null},{"Id":"971796730722377729","CreatedAt":"2018-03-08T17:16:10+00:00","UserScreenname":"xamarinhq","Text":"An introduction to #tvOS with #Xamarin: https://t.co/A5jZpraqm1 https://t.co/Qafo4W8L3m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":17,"FavoriteCount":5,"RawContent":null},{"Id":"971430573867720704","CreatedAt":"2018-03-07T17:01:11+00:00","UserScreenname":"xamarinhq","Text":"Learn how to turn on automatic signing that allows #VS4Mac to take care of generating and using the required signin… https://t.co/snE707bjji","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":11,"RawContent":null},{"Id":"971119957894418433","CreatedAt":"2018-03-06T20:26:55+00:00","UserScreenname":"xamarinhq","Text":"#VS2017 version 15.6 is now available! Get all the details on this exciting release: https://t.co/QIxlfX9I7F","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":35,"RawContent":null},{"Id":"971068644288540672","CreatedAt":"2018-03-06T17:03:01+00:00","UserScreenname":"xamarinhq","Text":"Simplified app signing with secure files in #VSTS: https://t.co/O5XooxuL40 https://t.co/b0oYm5btmK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":16,"RawContent":null},{"Id":"970709776488419328","CreatedAt":"2018-03-05T17:17:00+00:00","UserScreenname":"xamarinhq","Text":"DataBinding Power Moves You May Not Be Using (Yet), with @davidortinau: https://t.co/VpucH7m8z9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":18,"RawContent":null}]}},"RunOn":"2018-03-19T05:30:43.0546592Z","RunDurationInMilliseconds":4554}