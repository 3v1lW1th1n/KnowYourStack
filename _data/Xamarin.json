{"Data":{"Blog":{"FeedItems":[{"Title":"Creating Cloud-Connected Mobile Apps with Xamarin + Azure","PublishedOn":"2018-03-19T17:56:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In Case You Missed It A few weeks ago, we announced “Your Guide to Azure Services for Apps Built with Xamarin” on the Visual Studio blog to help you identify which cloud-connected services in Azure...","Href":"https://blog.xamarin.com/cloud-connected-apps-xamarin-azure/","RawContent":null},{"Title":"Add Cloud Storage to Xamarin Apps with Azure Blob Storage","PublishedOn":"2018-03-16T18:17:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Cloud Storage has become a must-have feature for mobile apps. It gives developers the ability to store large files in the cloud and securely distribute them to all mobile app users. Moving these large...","Href":"https://blog.xamarin.com/xamarin-plus-azure-blob-cloud-storage/","RawContent":null},{"Title":"Xamarin Joins docs.microsoft.com","PublishedOn":"2018-03-14T17:22:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we&#8217;re beginning a new chapter in mobile developer documentation: Xamarin docs are now live on docs.microsoft.com/xamarin! Here are a few highlights of the new documentation experience:...","Href":"https://blog.xamarin.com/xamarin-joins-docs-microsoft-com/","RawContent":null},{"Title":"Podcast: Visual Studio 2017 version 15.6, AR with UrhoSharp, and ML with CoreML","PublishedOn":"2018-03-12T18:43:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I discuss the fun new features in the Visual Studio 2017 version 15.6 stable release, including macOS environment setup and iOS WiFi...","Href":"https://blog.xamarin.com/podcast-visual-studio-2017-version-15-6-ar-urhosharp-ml-coreml/","RawContent":null},{"Title":"Contributing to Xamarin.iOS and Xamarin.Mac","PublishedOn":"2018-03-08T19:41:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Two years ago this month, we made some exciting announcements about the future of Xamarin. One of those announcements detailed the open sourcing of the Xamarin.iOS and Xamarin.Mac SDK. Open source is...","Href":"https://blog.xamarin.com/contributing-to-xamarin-ios-xamarin-mac/","RawContent":null},{"Title":"Visual Studio 2017 Version 15.6 Now Available!","PublishedOn":"2018-03-06T20:17:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Our last release, Visual Studio 2017 version 15.5, featured awesome new updates, such as the iOS Remoted Simulator becoming available to all developers, live XAML previewing in Android emulators with...","Href":"https://blog.xamarin.com/visual-studio-2017-version-15-6-now-available/","RawContent":null},{"Title":"Mobile Developer Events in March","PublishedOn":"2018-03-01T19:05:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Around the world, Xamarin and .NET user groups are meeting up to learn and discuss the latest news on exciting releases, tooling, and updates with Xamarin and related technologies. This March, you can...","Href":"https://blog.xamarin.com/mobile-developer-events-march/","RawContent":null},{"Title":"The New, Feature-Packed UrhoSharp 1.8","PublishedOn":"2018-02-28T19:34:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"UrhoSharp is a .NET API for building 3D experiences in your apps. A .NET binding to the Urho3D engine, it allows developers to write cross-platform code targeting Android, iOS, Windows and macOS with...","Href":"https://blog.xamarin.com/announcing-urhosharp-1-8-release/","RawContent":null},{"Title":"New Xamarin University Course: Navigation Patterns in Xamarin.Forms (XAM205)","PublishedOn":"2018-02-26T19:10:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms, a popular choice for cross-platform Xamarin apps, has two stacks. It&#8217;s common to implement navigation by pushing and popping Pages on a stack, but the two stacks are intended for...","Href":"https://blog.xamarin.com/xamarin-forms-navigation-patterns-xam205/","RawContent":null},{"Title":"Add Tizen Projects to Your Xamarin.Forms Applications","PublishedOn":"2018-02-23T19:24:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a special guest post from Jay Cho of the Samsung Tizen team. It&#8217;s been a while since the first preview version of Tizen .NET was released. Thanks to the newest release, developing...","Href":"https://blog.xamarin.com/add-tizen-projects-xamarin-forms-apps/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7400040749","Type":"IssuesEvent","CreatedAt":"2018-03-19T12:37:15","Actor":"knocte","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1442","RelatedDescription":"Opened issue \"Cannot enable \"INTERNET\" permission on AndroidManifest.xml dialog\" (#1442) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Open a solution where you have a xamarin-android project, with VSforMac.\r\n2. Right click on the project -> Options.\r\n3. On the left panel, click on Build->Android Application.\r\n4. On the 'Required permissions' listview, scroll until you see the [ ] INTERNET checkbox\r\n5. Check the [x] INTERNET checkbox to be enabled.\r\n5. Close dialog.\r\n(Effect: the .csproj gets changed with a change like the represented in this diff:\r\n```\r\n \t<uses-sdk android:minSdkVersion=\"15\" />\r\n+\t<uses-permission android:name=\"android.permission.INTERNET\" />\r\n \t<application android:label=\"gwallet\" android:icon=\"@drawable/icon\"></application>\r\n </manifest>\r\n```\r\n6. Perform steps 2, 3, 4 again.\r\n\r\n### Expected Behavior\r\nYou should see the [ ] INTERNET checkbox checked ([x]).\r\n\r\n### Actual Behavior\r\nYou see two [ ] INTERNET checkboxes, one checked and with red colour, and one unchecked. If you hover over the one in red, you see the text:\r\n```\r\nandroid.permission.INTERNET\r\nUnknown Permission\r\n```\r\nSee also screenshot:\r\n![screen shot 2018-03-19 at 12 18 01 pm](https://user-images.githubusercontent.com/331303/37595849-2c077cee-2bb5-11e8-9af1-1585c3cf18d4.png)\r\n\r\n\r\n### Version Information\r\n```\r\nVisual Studio Community 2017 for Mac\r\nVersion 7.4 (build 1033)\r\nInstallation UUID: fd06ff65-69de-47ae-8b99-ddf257032b7c\r\nRuntime:\r\n\tMono 5.8.0.129 (2017-10/835a98d8559) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 508000129\r\n\r\nNuGet\r\nVersion: 4.3.1.4445\r\n\r\n.NET Core\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.8.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\nXamarin.Profiler\r\nVersion: 1.6.1\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\nApple Developer Tools\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\nXamarin.Mac\r\nVersion: 4.2.0.20 (Visual Studio Community)\r\n\r\nXamarin.iOS\r\nVersion: 11.8.0.20 (Visual Studio Community)\r\nHash: 1c6f300e\r\nBranch: d15-6\r\nBuild date: 2018-02-07 23:42:40-0500\r\n\r\nXamarin.Android\r\nVersion: 8.2.0.15 (Visual Studio Community)\r\nAndroid SDK: /Users/andres/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t7.1 (API level 25)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 26.0.2\r\nSDK Build Tools Version: 26.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\nXamarin Inspector\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\nBuild Information\r\nRelease ID: 704001033\r\nGit revision: 053991068f3c88497d3e5cc52fe7fdf57c28b62f\r\nBuild date: 2018-02-28 05:02:28-05\r\nXamarin addins: cc3283953e0af0b8bfab1bdfdf847d9e403c4606\r\nBuild lane: monodevelop-lion-d15-6\r\n\r\nOperating System\r\nMac OS X 10.13.1\r\nDarwin 17.2.0 Darwin Kernel Version 17.2.0\r\n    Fri Sep 29 18:27:05 PDT 2017\r\n    root:xnu-4570.20.62~3/RELEASE_X86_64 x86_64\r\n\r\nEnabled user installed addins\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n```\r\n\r\n### Log File\r\nN/A?\r\n"},{"Id":"7397927262","Type":"IssuesEvent","CreatedAt":"2018-03-19T02:41:23","Actor":"knocte","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1441","RelatedDescription":"Opened issue \"Deploying to emulator (or to device via USB) doesn't honor \"Required permissions\" list in AndroidManifest.xml\" (#1441) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Develop your XamarinAndroid app that accesses some service on the internet.\r\n2. Run it on your emulator.\r\nCurrent results A: it works fine.\r\n3. Run it on your device deploying via USB with Visual Studio for Mac\r\nCurrent results B: see it works fine.\r\n4. Create .APK file for it\r\n5. Copy the .APK file to your phone's SD card.\r\n6. Use the file explorer on your phone to install the .APK file.\r\n7. Run the application inside your phone.\r\nCurrent results C: it hangs when trying to access any service on the internet. Developer can be very confused (it's much difficult to debug the app in this state that in previous deployment methods).\r\n\r\n\r\n### Expected Behavior\r\nExpected results A: it should fail to access to the internet because developer hasn't enabled INTERNET permission on the AndroidManifest.xml. (Ideally this gives some exception in the log.)\r\nExpected results B: it should fail to access to the internet because developer hasn't enabled INTERNET permission on the AndroidManifest.xml. (Ideally this gives some exception in the log.)\r\n\r\n### Version Information\r\n\r\n```\r\nVisual Studio Community 2017 for Mac\r\nVersion 7.4 (build 1033)\r\nInstallation UUID: fd06ff65-69de-47ae-8b99-ddf257032b7c\r\nRuntime:\r\n\tMono 5.8.0.129 (2017-10/835a98d8559) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 508000129\r\n\r\nNuGet\r\nVersion: 4.3.1.4445\r\n\r\n.NET Core\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.8.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\nXamarin.Profiler\r\nVersion: 1.6.1\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\nApple Developer Tools\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\nXamarin.Mac\r\nVersion: 4.2.0.20 (Visual Studio Community)\r\n\r\nXamarin.iOS\r\nVersion: 11.8.0.20 (Visual Studio Community)\r\nHash: 1c6f300e\r\nBranch: d15-6\r\nBuild date: 2018-02-07 23:42:40-0500\r\n\r\nXamarin.Android\r\nVersion: 8.2.0.15 (Visual Studio Community)\r\nAndroid SDK: /Users/andres/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t7.1 (API level 25)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 26.0.2\r\nSDK Build Tools Version: 26.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\nXamarin Inspector\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\nBuild Information\r\nRelease ID: 704001033\r\nGit revision: 053991068f3c88497d3e5cc52fe7fdf57c28b62f\r\nBuild date: 2018-02-28 05:02:28-05\r\nXamarin addins: cc3283953e0af0b8bfab1bdfdf847d9e403c4606\r\nBuild lane: monodevelop-lion-d15-6\r\n\r\nOperating System\r\nMac OS X 10.13.1\r\nDarwin 17.2.0 Darwin Kernel Version 17.2.0\r\n    Fri Sep 29 18:27:05 PDT 2017\r\n    root:xnu-4570.20.62~3/RELEASE_X86_64 x86_64\r\n\r\nEnabled user installed addins\r\nInternet of Things (IoT) development (Preview) 7.1\r\n```\r\n\r\n### Log File\r\n\r\nN/A\r\n\r\n"},{"Id":"7394546340","Type":"PullRequestEvent","CreatedAt":"2018-03-17T12:31:22","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1440","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Install FSharp.Core 4.3.1\" (#1440) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/mono/mono/issues/7511\r\nFixes: https://github.com/xamarin/xamarin-android/issues/1438\r\n\r\nContext: https://github.com/xamarin/xamarin-android/pull/1289\r\n\r\nPR #1289 bumps xamarin-android to use the mono/2018-02 branch, and is\r\nencountering an error when executing the\r\n`Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckResourceDesignerIsCreated()`\r\ntest, with the following error:\r\n\r\n\t/Users/builder/jenkins/workspace/xamarin-android-pr-builder/xamarin-android/bin/Debug/lib/xamarin.android/xbuild/Xamarin/Android/Xamarin.Android.Common.targets: error : Error executing task GenerateResourceDesigner: Could not load file or assembly 'FSharp.Core, Version=4.3.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies.\r\n\tError executing task GenerateResourceDesigner: System.IO.FileNotFoundException: Could not load file or assembly 'FSharp.Core, Version=4.3.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies.\r\n\tFile name: 'FSharp.Core, Version=4.3.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n\t  at System.CodeDom.Compiler.CodeDomProvider.CreateGenerator (System.IO.TextWriter output) [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-02/external/bockbuild/builds/mono-x64/external/corefx/src/System.CodeDom/src/System/CodeDom/Compiler/CodeDomProvider.cs:123\r\n\t  at Xamarin.Android.Tasks.GenerateResourceDesigner.WriteFile (System.String file, System.CodeDom.CodeTypeDeclaration resources, System.String language, System.Boolean isFSharp, System.Boolean isCSharp) [0x0012a] in /Users/builder/jenkins/workspace/xamarin-android-pr-builder/xamarin-android/src/Xamarin.Android.Build.Tasks/Tasks/GenerateResourceDesigner.cs:217\r\n\t  at Xamarin.Android.Tasks.GenerateResourceDesigner.Execute () [0x0065b] in /Users/builder/jenkins/workspace/xamarin-android-pr-builder/xamarin-android/src/Xamarin.Android.Build.Tasks/Tasks/GenerateResourceDesigner.cs:155\r\n\t  at Microsoft.Build.BuildEngine.TaskEngine.Execute () [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-02/external/bockbuild/builds/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/TaskEngine.cs:134\r\n\t  at Microsoft.Build.BuildEngine.BuildTask.Execute () [0x0008d] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-02/external/bockbuild/builds/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/BuildTask.cs:101\r\n\r\nThe mono/2018-02 branch bumps the `FSharp.Core.dll` assembly that is\r\ndistributed with mono to have an assembly version of 4.4.1.\r\n\r\nThe `FSharp.Compiler.CodeDom` NuGet package that\r\n`Xamarin.Android.Build.Tasks.dll` references requires FSharp.Core\r\n4.3.1, hence the `FileNotFoundException`.\r\n\r\nThe (hopeful) fix? Install the required `FSharp.Core.dll` version, so\r\nthat `FSharp.Compiler.CodeDom` can work as desired."},{"Id":"7393703345","Type":"PullRequestEvent","CreatedAt":"2018-03-17T00:51:01","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1439","RelatedDescription":"Opened pull request \"[create-vsix] Create a separate package for unstable frameworks\" (#1439) at xamarin/xamarin-android","RelatedBody":"**Background**\r\n\r\nIt's Android preview time!\r\n\r\nEven better, we have support for building API-P bindings within around\r\na week of the Google announcement, via 8ce25376.\r\n\r\nThis raises a question: How does this binding get *used*?\r\n\r\nHistorically, we haven't been very good at this: various bits of code\r\nneeded to know *all* of the API levels (to associate with\r\n`$(TargetFrameworkVersion)` values and Ids and names and...), which\r\nmeant that the only way the preview binding could be used was to have\r\na preview release of the *entire development stack*: Xamarin.Android,\r\nIDE, build-tools, the works.\r\n\r\nInvariably we didn't have a \"preview\" release of the new binding until\r\nafter it was API-stable (or close to it), and the IDEs have been\r\nupdated, all of which would be *months* after the announcement.\r\n\r\nCommit 8942eca0 envisioned a New World Order™ in which the mapping\r\nbetween API level and `$(TargetFrameworkVersion)`/etc. could be more\r\n*dynamic*, based on `AndroidApiInfo.xml` files probed at process and\r\nIDE startup, to *simplify* what it takes to use binding assemblies.\r\n\r\nThis support, mutated in various forms, is already in the IDEs (though\r\na preview IDE may be needed).\r\n\r\nWith foundational support, we can now try the next bit: update\r\n`create-vsix.csproj` so that it can generate one of two packages:\r\n\r\n 1. A `Xamarin.Android.Sdk-OSS-*.vsix` file which contains *only* the\r\n    stable API level bindings.\r\n\r\n 2. An optional `Xamarin.Android.Sdk-OSS-*-UnstableFrameworks.vsix`\r\n    file which contains *only* the ***unstable*** API bindings.\r\n\r\nThe idea is that the first package can be the \"normal\" release\r\npackage, while the second package can be installed \"side-by-side\" with\r\nthe first pacakge.\r\n\r\nFurthermore, the *intent* is that the `-UnstableFrameworks` package\r\ncould be installed side-by-side with *any* Xamarin.Android.Sdk\r\npackage. Ideally, this means that it could be installed alongside the\r\ncurrent *stable* Xamarin.Android SDK package, with no ill effects.\r\n\r\nThe target workflow is thus:\r\n\r\n 1. Developer has Xamarin.Android SDK installed on their machine.\r\n\r\n 2. Developer downloads and installs the `-UnstableFrameworks`\r\n    package from:\r\n\r\n        https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/lastSuccessfulBuild/Azure/\r\n\r\n 3. Developer restarts their IDE.\r\n\r\n 4. Developer edits the `.csproj` of their project, and sets the\r\n    `$(TargetFrameworkVersion)` value to the value of the unstable API\r\n    binding, e.g. `v8.1.99`.\r\n\r\n    *Note*: It may instead be possible to change things from within\r\n    the IDE. Some specifics are not yet sorted out.\r\n\r\n 5. The next build of the project uses the preview/unstable API level.\r\n\r\nWith luck, this should allow us to provide \"usable\" (if broken!\r\nthey're not API stable!) for testing on an improved timeframe.\r\n\r\n**Implementation**\r\n\r\nHack up `create-vsix.csproj` and company to support a new MSBuild\r\nproperty: `$(UnstableFrameworks)` (default False). When True, the\r\noutput package name is changed to have a `-UnstableFrameworks` suffix,\r\nthe package ID is changed, the installation directory is changed...\r\n*Lots* of things are changed, including the package contents.\r\n\r\nThe \"normal\" package is altered so that it *only* contains Stable\r\nframework bindings. (This is a change from before, in which *all*\r\nframework bindings were included.)\r\n\r\nThe \"unstable\" package contains only non-Stable framework bindings.\r\n\r\nThe `make create-vsix` Makefile target and `HaveUnstableFrameworks`\r\ntarget within `build-tools/scripts/Info.targets` work together to only\r\nbuild the `-UnstableFrameworks.vsix` package if there *are* unstable\r\nframeworks to package. If there are no unstable packages, no\r\n`-UnstableFrameworks` package is created."},{"Id":"7393172590","Type":"IssuesEvent","CreatedAt":"2018-03-16T21:31:36","Actor":"luhenry","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1438","RelatedDescription":"Opened issue \"Cannot find FSharp.Core or one of its dependencies during testing \" (#1438) at xamarin/xamarin-android","RelatedBody":"`Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckResourceDesignerIsCreated.Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest.CheckResourceDesignerIsCreated` is failing for the `mono:2018-02` integration\r\n\r\n**Error:**\r\n\r\n```\r\n/Users/builder/jenkins/workspace/xamarin-android-pr-builder/xamarin-android/bin/Debug/lib/xamarin.android/xbuild/Xamarin/Android/Xamarin.Android.Common.targets: error : Error executing task GenerateResourceDesigner: Could not load file or assembly 'FSharp.Core, Version=4.3.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies.\r\nError executing task GenerateResourceDesigner: System.IO.FileNotFoundException: Could not load file or assembly 'FSharp.Core, Version=4.3.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies.\r\nFile name: 'FSharp.Core, Version=4.3.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n  at System.CodeDom.Compiler.CodeDomProvider.CreateGenerator (System.IO.TextWriter output) [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-02/external/bockbuild/builds/mono-x64/external/corefx/src/System.CodeDom/src/System/CodeDom/Compiler/CodeDomProvider.cs:123 \r\n  at Xamarin.Android.Tasks.GenerateResourceDesigner.WriteFile (System.String file, System.CodeDom.CodeTypeDeclaration resources, System.String language, System.Boolean isFSharp, System.Boolean isCSharp) [0x0012a] in /Users/builder/jenkins/workspace/xamarin-android-pr-builder/xamarin-android/src/Xamarin.Android.Build.Tasks/Tasks/GenerateResourceDesigner.cs:217 \r\n  at Xamarin.Android.Tasks.GenerateResourceDesigner.Execute () [0x0065b] in /Users/builder/jenkins/workspace/xamarin-android-pr-builder/xamarin-android/src/Xamarin.Android.Build.Tasks/Tasks/GenerateResourceDesigner.cs:155 \r\n  at Microsoft.Build.BuildEngine.TaskEngine.Execute () [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-02/external/bockbuild/builds/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/TaskEngine.cs:134 \r\n  at Microsoft.Build.BuildEngine.BuildTask.Execute () [0x0008d] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-02/external/bockbuild/builds/mono-x64/mcs/class/Microsoft.Build.Engine/Microsoft.Build.BuildEngine/BuildTask.cs:101 \r\n```\r\n\r\n**Logs:**\r\n\r\nhttps://jenkins.mono-project.com/job/xamarin-android-pr-builder/2618/testReport/junit/Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest/CheckResourceDesignerIsCreated/Xamarin_Android_Build_Tests_AndroidUpdateResourcesTest_CheckResourceDesignerIsCreated_False_FSharp____Debug/\r\nhttps://jenkins.mono-project.com/job/xamarin-android-pr-builder/2618/testReport/junit/Xamarin.Android.Build.Tests.AndroidUpdateResourcesTest/CheckResourceDesignerIsCreated/Xamarin_Android_Build_Tests_AndroidUpdateResourcesTest_CheckResourceDesignerIsCreated_True_FSharp____Debug/\r\n\r\n**Issue** (as figured out by @jonpryor at https://github.com/mono/mono/issues/7511#issuecomment-371679320)**:**\r\n\r\nThe current code should be using the [`FSharp.Compiler.CodeDom` NuGet package](https://www.nuget.org/packages/FSharp.Compiler.CodeDom/), which has a reference on `FSharp.Core.dll` v4.3.1.0.\r\n\r\nFixes https://github.com/mono/mono/issues/7511\r\n\r\nhttps://github.com/mono/mono/issues/6842 https://github.com/xamarin/xamarin-android/pull/1289"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7404295022","Type":"IssuesEvent","CreatedAt":"2018-03-20T03:48:03","Actor":"DineshBabuYadav","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2141","RelatedDescription":"Opened issue \"Scrolled Event notification for ScrollView is not triggered while view is panned in Xamarin Forms MAC\" (#2141) at xamarin/Xamarin.Forms","RelatedBody":"Hi Xamarin,\r\n\r\n### Description\r\nWe have found a strange issue in XF ScrollView in latest Xamarin Forms version (**v 2.5.0.280555**). In XF ScrollView, while panning the view the scrolled event is not notified. \r\n\r\nAnd, we have analysed further in the Cocoa app documentation for NSScrollView and observed that we need to return the \"IsFlipped\" override property in **NSScrollView** as **true** to scroll from top to bottom which might be issue(suspect). since, the layouts are done from bottom to top in Xamarin MAC. \r\n\r\nSo, we have extended the scrollview and defined the **IsFlipped** property in the custom scrollview's renderer mac project. But still the notification for Scrolled event is not received while panning the view upto some random extent.\r\n\r\n### Steps to Reproduce\r\n1.  Run the attached sample in Xamarin Forms MAC\r\n2. Select \"Load ScrollView\" or \"Custom ScrollView\" button\r\n3. A page with list of labels are loaded inside a stacklayout which is added into ScrollView's content.\r\n4. Perform pan action in the view to scroll the items.\r\n5. Note the scrolled event is not raised for some extent.\r\nRefer the attached video.\r\n\r\n**Please Note:**\r\nLoad ScrollView button initialises the Xamarin Form ScrollView.\r\nCustom ScrollView button initialises the custom extended ScrollView.\r\n\r\n### Expected Behavior\r\nScrolled event should be triggered at each point when scroll values are changed as like other platforms such as Android and iOS synchronously. \r\n\r\n### Actual Behavior\r\nScrolled events are not triggered upto some extent while panning the view and after that events are notified with irrespective of scroll values(x and y). (might be this is done by asynchronously due to notification centre is used in ScrollViewRenderer)\r\n\r\n### Basic Information\r\n- Version with issue: Xamarin Forms version (**v 2.5.0.280555**)\r\n- Last known good version: Issue replicates even from the 2.3 version.\r\n\r\n=== Xamarin Studio Community ===\r\n\r\nVersion 6.3 (build 864)\r\nInstallation UUID: bccf7e7d-f92c-4226-90cb-5a2028a26649\r\nRuntime:\r\n\tMono 5.8.0.129 (2017-10/835a98d8559) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 508000129\r\n\r\n=== NuGet ===\r\n\r\nVersion: 3.5.0.0\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.1\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nNot Installed\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 8.3.2 (12175)\r\nBuild 8E2002\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.2.0.20 (Xamarin Studio Community)\r\n\r\n=== Xamarin Inspector ===\r\n\r\nNot Installed\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.8.0.20 (Xamarin Studio Community)\r\nHash: 1c6f300e\r\nBranch: d15-6\r\nBuild date: 2018-02-07 23:42:40-0500\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 603000864\r\nGit revision: 6c2f6737278ccc3e81e12276d49c0d92f975f189\r\nBuild date: 2017-04-24 11:26:01-04\r\nXamarin addins: d8d46e577d8507c35260ce9d73df3c33415bb214\r\nBuild lane: monodevelop-lion-d15-1\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.12.5\r\nDarwin syncmacn11829.local 16.6.0 Darwin Kernel Version 16.6.0\r\n    Fri Apr 14 16:21:16 PDT 2017\r\n    root:xnu-3789.60.24~6/RELEASE_X86_64 x86_64\r\n\r\n\r\n### Screenshots\r\n![screen shot 2018-03-19 at 8 44 04 pm](https://user-images.githubusercontent.com/20282188/37635050-902f725c-2bb6-11e8-8b47-838687a3ab00.png)\r\n[Screen Shot 2018-03-19 at 8.44.04 PM.zip](https://github.com/xamarin/Xamarin.Forms/files/1827854/Screen.Shot.2018-03-19.at.8.44.04.PM.zip)\r\n\r\n###Video\r\n [ScrollViewIssueVideo.zip](https://github.com/xamarin/Xamarin.Forms/files/1827851/ScrollViewIssueVideo.zip)\r\n\r\n### Reproduction Link\r\n\r\n**Sample:**\r\n[NSScrollViewIssue.zip](https://github.com/xamarin/Xamarin.Forms/files/1827584/NSScrollViewIssue.zip)\r\n\r\nPlease let us know if you require further assistance.\r\n\r\nRegards,\r\nDinesh B"},{"Id":"7404063547","Type":"PullRequestEvent","CreatedAt":"2018-03-20T02:24:55","Actor":"alanag13","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2140","RelatedDescription":"Opened pull request \"Feature/1699 webview evaluate js\" (#2140) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\ncloses #1699 .\r\n\r\nAdds the ability to execute and return the result of a passed javascript string to a platform's webview.\r\n\r\nPlatform support:\r\n\r\n- [X] Android\r\n- [X] iOS\r\n- [X] macOS\r\n- [X] UWP\r\n- [X] WPF\r\n- [ ] Tizen (no native platform support)\r\n- [ ] GTK (no native platform support)\r\n\r\n### API Changes ###\r\n\r\nAdded:\r\nTask<string> WebView.EvaluateJavaScriptAsync\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [X] Rebased on top of master at time of PR\r\n- [X] Changes adhere to coding standard\r\n- [X] Consolidate commits as makes sense\r\n"},{"Id":"7403229709","Type":"IssuesEvent","CreatedAt":"2018-03-19T22:00:51","Actor":"dannypease","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2139","RelatedDescription":"Opened issue \"SearchBar not working in iOS 10\" (#2139) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nThe Xamarin Forms SearchBar does not appear when using iOS 10. It appears to be fine on iOS 11. Adding HeightRequest does not seem to work\r\n### Steps to Reproduce\r\n\r\n1. Add a SearchBar to a Xamarin Forms Content Page\r\n2. Run an iOS simulator or device in iOS 10.3\r\n3. SearchBar is not visible\r\n\r\n### Expected Behavior\r\nSearchBar should appear\r\n### Actual Behavior\r\nSearchBar does not appear\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"7403038120","Type":"IssuesEvent","CreatedAt":"2018-03-19T21:19:17","Actor":"davefxy","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2138","RelatedDescription":"Opened issue \"Getting Java.Lang.SecurityException with Forms.Maps\" (#2138) at xamarin/Xamarin.Forms","RelatedBody":"When I debug a Cross Platform Mobile App (Xamarin Forms, .Net Standard, Android) on a Samsung tablet, I get this error after the app has downloaded and begins to run. VS displays an unhandled exception : \r\nJava.Lang.SecurityException: my location requires permission ACCESS_FINE_LOCATION or ACCESS_COARSE_LOCATION\r\n\r\n Run the accompanying zipped project.\r\nIt appears the problem is a combination of using a TabbedPage and adding a single page with a map control with IsShowingUser=true. If I remove IsShowingUser option, it run just fine.\r\n\r\nEnvironment versions:\r\nHardware: Samsung Galaxy S2 (SM-T810 Android 7.0, API 24)\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.6.3\r\nVisualStudio.15.Release/15.6.3+27428.2011\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Community\r\n\r\nC# Tools   2.7.0-beta3-62707-11. Commit Hash: 75dfc9b33ed624dff3985c7435c902c3c58c0e5c\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nMono Debugging for Visual Studio   4.9.11-pre (71eb098)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27428.01\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nXamarin   4.9.0.752 (0faa808ee)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.10.58 (cee1369d0)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.2.0.16 (HEAD/a78295902)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\n[MyWorkingWithMaps_Bug Bug.zip](https://github.com/xamarin/Xamarin.Forms/files/1826992/MyWorkingWithMaps_Bug.Bug.zip)\r\n\r\n"},{"Id":"7402844609","Type":"IssuesEvent","CreatedAt":"2018-03-19T20:41:16","Actor":"Paul-Brenner-Tangoe","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2137","RelatedDescription":"Opened issue \" GridCalc is calculating incorrect height on items with column spanning\" (#2137) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nMigrating https://bugzilla.xamarin.com/show_bug.cgi?id=53561 here\r\n\r\n\"Create a grid with two columns, Auto and a Star.\r\nPlace a label in the second column.\r\nPlace a label in the first column with a span of two.\r\n\r\nThe grid calculates incorrectly on every row with an item that spans causing a really tall grid that gets confused easily especially with repeating items.\"\r\n\r\nThere was a [PR](https://github.com/xamarin/Xamarin.Forms/pull/830) to fix it, but it was rejected, and the bug report was never updated back to confirmed from in progress.\r\n\r\n### Steps to Reproduce\r\nRun app\r\nNote that the red grid is larger than it needs to be\r\n\r\n### Expected Behavior\r\nGrid is sized correctly\r\n\r\n### Actual Behavior\r\nGrid is not sized correctly\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.122203\r\n- Last known good version: N/A\r\n- IDE: VS2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  yes\r\n  - Android: yes\r\n  - UWP:  not tested\r\n- Android Support Library Version: 25\r\n- Nuget Packages: just forms\r\n- Affected Devices: tested on nexus 5x running Android 8 and iPhone 5s simulator running iOS 9.3\r\n\r\n### Reproduction Link\r\nhttps://www.dropbox.com/s/jaxby2w4iqcfffu/GridTest.zip?dl=0"},{"Id":"7402648872","Type":"IssuesEvent","CreatedAt":"2018-03-19T20:02:39","Actor":"Paul-Brenner-Tangoe","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2136","RelatedDescription":"Opened issue \"Entry / Editor and a Button. Tapping the button dismisses the keyboard\" (#2136) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nMigrating https://bugzilla.xamarin.com/show_bug.cgi?id=45723 here.\r\n\r\nOn version 2.1, tapping a Button didn't dismiss the keyboard when the focus was on an Entry or and Editor. From version 2.2 onward, tapping a Button dismisses the keyboard.\r\n\r\nThere was a [PR](https://github.com/xamarin/Xamarin.Forms/pull/560) to fix this on iOS, but it was rejected, and the bug report was never changed back to confirmed from in progress.\r\n\r\n### Steps to Reproduce\r\n\r\nLoad app.\r\nClick on an entry so that the keyboard comes up\r\nTap on a button\r\nNote that the keyboard is dismissed\r\n\r\n### Expected Behavior\r\nDevelopers have an option to choose what happens, as noted in the PR, \"This is useful in cases such as when a chat application does not need to dismiss keyboard when a Send button is hit\"\r\n\r\n### Actual Behavior\r\nOn 2.1, keyboard is not dismissed, on 2.5 it is\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.122203\r\n- Last known good version: 2.1\r\n- IDE: VS2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  yes\r\n  - Android: yes\r\n  - UWP:  not tested\r\n- Android Support Library Version: 25\r\n- Nuget Packages: just forms\r\n- Affected Devices: tested on Nexus 5x running Android 8, and iPhone 5s running iOS 11.1\r\n\r\n### Reproduction Link\r\nhttps://www.dropbox.com/s/wq6jp5rnulvtj6p/keyboardsample.zip?dl=0\r\n"},{"Id":"7402555550","Type":"PullRequestEvent","CreatedAt":"2018-03-19T19:43:55","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2135","RelatedDescription":"Opened pull request \"[iOS]Allow to change between datasource types on the UITableView\" (#2135) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nIf we are changing the DataSource of our UITableView we need to call RefreshData to refresh the re-used cells. \r\n\r\n### Bugs Fixed ###\r\n\r\n- https://bugzilla.xamarin.com/show_bug.cgi?id=56298\r\n\r\n### API Changes ###\r\n\r\n- None\r\n\r\n### Behavioral Changes ###\r\n\r\n- None\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"7402362976","Type":"IssuesEvent","CreatedAt":"2018-03-19T19:04:28","Actor":"jordan-surveycom","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2134","RelatedDescription":"Opened issue \"System.NullReferenceException ListViewRenderer+<OnScrollToRequested>d__43.MoveNext () on iOS\" (#2134) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nApp crashes with NullReferenceException when navigating away from page after attempting to scroll. I am not positive, but this may only happen on iOS 11 (all of the crash reports that we have received with this issue are from users on iOS 11).\r\n\r\nExample code:\r\n`\r\nthis.Appearing += async (object sender, EventArgs e) =>\r\n{\r\nif (this.scrollItem != null && App.IsIos && this.listView != null)\r\n{\r\nthis.listView.ScrollTo(scrollItem, ScrollToPosition.Center, false);\r\nthis.scrollItem = null;\r\n}\r\n};\r\n`\r\n\r\n[Crash Report](https://github.com/xamarin/Xamarin.Forms/files/1826516/app-24e9f53f-0e00-4ad4-bf1e-79e026c73f92-id-709a7f6b-6f10-4832-aafc-861eabc46269.txt)\r\n\r\n\r\n### Steps to Reproduce\r\n\r\n1. Call ListView.ScrollTo() on a page (within a navigation stack) in the Page.Appearing call\r\n2. Quickly navigate away from the page using the navigation arrow\r\n3. App crashes with the NullReferenceException\r\n\r\n### Expected Behavior\r\nApp doesn't crash\r\n\r\n### Actual Behavior\r\nApp hard crashes after attempting to scroll on the page after it has disappeared from view.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.280555\r\n- Last known good version: Unknown\r\n- IDE: Visual Studio for Mac Community 7.4\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11.8.0.20<!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n- Nuget Packages: Xamarin.Forms\r\n- Affected Devices: iOS devices simulator and actual devices(possibly iOS 11 only)\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7404257960","Type":"PullRequestEvent","CreatedAt":"2018-03-20T03:34:09","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3780","RelatedDescription":"Merged pull request \"[GameplayKit] Fix naming of GKNoise.DisplaceX\" (#3780) at xamarin/xamarin-macios","RelatedBody":"Fixes xamarin/xamarin-macios#3716\r\n\r\nGKNoise.DisplaceX suggests that displacement can only be done\r\nalong one axis which is not true, according to documentation\r\nyou use the 3 (x, y, x) noise objects.\r\n\r\nThe following API suggestions where considered:\r\n\r\n```csharp\r\nGKNoise.Displace (xDisplacementNoise, yDisplacementNoise, zDisplacementNoise);\r\nGKNoise.DisplaceWithNoises (x, y, z);\r\n```\r\n\r\nAnd I think just using `Displace` as the method name and let each\r\nof the parameters clearly state their intent is best."},{"Id":"7404257950","Type":"IssuesEvent","CreatedAt":"2018-03-20T03:34:09","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3716","RelatedDescription":"Closed issue \"GameplayKit.GKNoise.DisplaceX should be named Displace or DisplaceWithNoises\" (#3716) at xamarin/xamarin-macios","RelatedBody":"The function `GameplayKit.GKNoise.DisplaceX` binds `displaceXWithNoise:yWithNoise:zWithNoise:` The name `DisplaceX` incorrectly suggests that displacement can only be done along one axis. \r\n\r\n"},{"Id":"7404039625","Type":"PullRequestEvent","CreatedAt":"2018-03-20T02:16:06","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3779","RelatedDescription":"Merged pull request \"[AppKit] Adds [NullAllowed] to NSGridCell.ContentView\" (#3779) at xamarin/xamarin-macios","RelatedBody":"Fixes xamarin/xamarin-macios#3777\r\n\r\nThe Objective-C definition is:\r\n\r\n```\r\n@property (strong,nullable) __kindof NSView *contentView;\r\n```"},{"Id":"7404039617","Type":"IssuesEvent","CreatedAt":"2018-03-20T02:16:06","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3777","RelatedDescription":"Closed issue \"NSGridCell.ContentView setter lacks NullAllowedAttribute\" (#3777) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Get an `NSGridCell` instance and try to set its `ContentView` to `null`.\r\n2. Observe the exception.\r\n\r\n### Expected Behavior\r\n\r\nSDK says this property is nullable. Therefore, a `nil` value should be passed to Cocoa.\r\n\r\n### Actual Behavior\r\n\r\n`ArgumentNullException` is thrown.\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.4 (build 1033)\r\nInstallation UUID: 2f7490c4-93db-429d-9511-4b9317c93fbc\r\nRuntime:\r\n\tMono 5.8.0.129 (2017-10/835a98d8559) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 508000129\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.8.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.1\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nNot Installed\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.2.0.20 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.8.0.20 (Visual Studio Community)\r\nHash: 1c6f300e\r\nBranch: d15-6\r\nBuild date: 2018-02-07 23:42:40-0500\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 704001033\r\nGit revision: 053991068f3c88497d3e5cc52fe7fdf57c28b62f\r\nBuild date: 2018-02-28 05:02:28-05\r\nXamarin addins: cc3283953e0af0b8bfab1bdfdf847d9e403c4606\r\nBuild lane: monodevelop-lion-d15-6\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.3\r\nDarwin 17.4.0 Darwin Kernel Version 17.4.0\r\n    Sun Dec 17 09:19:54 PST 2017\r\n    root:xnu-4570.41.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nEditorConfig 1.1\r\nEto.Forms Support Addin 2.4.0.0\r\nAddinMaker 1.4.2\r\nInternet of Things (IoT) development (Preview) 7.1\r\n```\r\n"},{"Id":"7403764849","Type":"PullRequestEvent","CreatedAt":"2018-03-20T00:38:06","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3778","RelatedDescription":"Merged pull request \"[AppKit] Adds [NullAllowed] to NSTableView.RegisterNib\" (#3778) at xamarin/xamarin-macios","RelatedBody":"Fixes xamarin/xamarin-macios#3776"},{"Id":"7403764843","Type":"IssuesEvent","CreatedAt":"2018-03-20T00:38:06","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3776","RelatedDescription":"Closed issue \"NSTableView RegisterNib throws exception\" (#3776) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Call NSTableView.RegisterNib(null, identifier);\r\n\r\n### Expected Behavior\r\nAccording to [documentation](https://developer.apple.com/documentation/appkit/nstableview/1524297-registernib?language=objc), previously registered nib is removed.\r\n\r\n### Actual Behavior\r\nArgumentNullException: value cannot be null. Parameter name: nib\r\n"},{"Id":"7403448695","Type":"IssuesEvent","CreatedAt":"2018-03-19T22:56:48","Actor":"scastria","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3784","RelatedDescription":"Opened issue \"Notification service extension not working on iOS10\" (#3784) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\nMy app uses a notification extension to aggregate notifications so that, at most, there is 1 with a combined count.  It seems to be that every ios11 device I try, it works, but every ios10 device I try, it fails.  I am not sure if it is an ios issue or just that most iOS10 devices are older so maybe it is an old device issue.\r\n\r\nMy notification extension source is:\r\n\r\n        private const string NUM_ARTICLES = \"numArticles\";\r\n\r\n        public async override void DidReceiveNotificationRequest(UNNotificationRequest request, Action<UNNotificationContent> contentHandler)\r\n        {\r\n            Console.WriteLine(\"NotificationService: 1\");\r\n            ContentHandler = contentHandler;\r\n            Console.WriteLine(\"NotificationService: 2\");\r\n            _origNotification = request.Content;\r\n            Console.WriteLine(\"NotificationService: 3\");\r\n            UNUserNotificationCenter nc = UNUserNotificationCenter.Current;\r\n            //Find most recent notification article count\r\n            Console.WriteLine(\"NotificationService: 4\");\r\n            int pendingNumArticles = 0;\r\n            Console.WriteLine(\"NotificationService: 5\");\r\n            UNNotification[] dns = await nc.GetDeliveredNotificationsAsync();\r\n            Console.WriteLine(\"NotificationService: 6\");\r\n            UNNotification mostRecent = dns.OrderByDescending(n => n.Date).FirstOrDefault();\r\n            Console.WriteLine(\"NotificationService: 7\");\r\n            NSString numArticlesKey = new NSString(NUM_ARTICLES);\r\n            Console.WriteLine(\"NotificationService: 8\");\r\n            if ((mostRecent != null) && (mostRecent.Request.Content.UserInfo.ContainsKey(numArticlesKey))) {\r\n                Console.WriteLine(\"NotificationService: 9\");\r\n                pendingNumArticles = ((NSNumber)mostRecent.Request.Content.UserInfo.ObjectForKey(numArticlesKey)).Int32Value;\r\n            }\r\n\t\t\t//Remove all previous notifications\r\n            Console.WriteLine(\"NotificationService: 10\");\r\n\t\t\tnc.RemoveAllDeliveredNotifications();\r\n\t\t\t//Find article count from this notification\r\n            Console.WriteLine(\"NotificationService: 11\");\r\n\t\t\tint newNumArticles = 0;\r\n            Console.WriteLine(\"NotificationService: 12\");\r\n            if (request.Content.UserInfo.ContainsKey(numArticlesKey)) {\r\n                Console.WriteLine(\"NotificationService: 13\");\r\n                newNumArticles = ((NSNumber)request.Content.UserInfo.ObjectForKey(numArticlesKey)).Int32Value;\r\n            }\r\n            Console.WriteLine(\"NotificationService: 14\");\r\n            int aggregatedNumArticles = pendingNumArticles + newNumArticles;\r\n            //If aggregation count is just 1, then display notification as is\r\n            Console.WriteLine(\"NotificationService: 15\");\r\n            if (aggregatedNumArticles == 1) {\r\n                Console.WriteLine(\"NotificationService: 16\");\r\n                ContentHandler(_origNotification);\r\n            } else {\r\n                //Copy this notification to modify it\r\n                Console.WriteLine(\"NotificationService: 17\");\r\n                UNMutableNotificationContent aggregatedNotification = (UNMutableNotificationContent)_origNotification.MutableCopy();\r\n                Console.WriteLine(\"NotificationService: 18\");\r\n                aggregatedNotification.Title = string.Empty;\r\n                Console.WriteLine(\"NotificationService: 19\");\r\n                aggregatedNotification.Body = \"\" + aggregatedNumArticles + \" new articles published\";\r\n                Console.WriteLine(\"NotificationService: 20\");\r\n                aggregatedNotification.Badge = NSNumber.FromInt32(aggregatedNumArticles);\r\n                Console.WriteLine(\"NotificationService: 21\");\r\n                NSMutableDictionary aggregatedUserInfo = (NSMutableDictionary)_origNotification.UserInfo.MutableCopy();\r\n                Console.WriteLine(\"NotificationService: 22\");\r\n                aggregatedUserInfo[numArticlesKey] = aggregatedNotification.Badge;\r\n                Console.WriteLine(\"NotificationService: 23\");\r\n                aggregatedNotification.UserInfo = aggregatedUserInfo;\r\n                Console.WriteLine(\"NotificationService: 24\");\r\n                ContentHandler(aggregatedNotification);\r\n                Console.WriteLine(\"NotificationService: 25\");\r\n            }\r\n        }\r\n\r\nI put Console.WriteLines before every statement so that I could capture where it was dying in the device log.  The device log on an iOS10 device, shown below, shows that it is dying on this line:\r\n\r\n            NSString numArticlesKey = new NSString(NUM_ARTICLES);\r\n\r\n\r\nI read in a Xamarin bug, that maybe Xamarin.iOS has too big of a memory footprint to be used for extensions??  Is it possible the extension can not allocate memory for an NSString?  If so, why do all of my iOS11 devices work fine?\r\n\r\n### Build Logs\r\n\r\n\tMar 19 17:31:26 Gregorys-iPhone-5S apsd(PersistentConnection)[85] <Notice>: 2018-03-19 17:31:26 -0500 apsd[85]: <APSCourier: 0x10040fac0>: Received message for enabled topic 'com.ihs.energyalert' with payload '{\r\n\t\t aps =\t  {\r\n\t\t\t  alert =\t\t\t{\r\n\t\t\t\t\tbody = Body;\r\n\t\t\t\t\ttitle = Title;\r\n\t\t\t  };\r\n\t\t\t  badge = 1;\r\n\t\t\t  \"mutable-content\" = 1;\r\n\t\t\t  sound = default;\r\n\t\t };\r\n\t\t numArticles = 1;\r\n\t}' onInterface: NonCellular  for device token: NO  with priority 10\r\n\tMar 19 17:31:26 Gregorys-iPhone-5S apsd(PersistentConnection)[85] <Notice>: 2018-03-19 17:31:26 -0500 apsd[85]: <APSMessageStore: 0x1004a2830> asked to store incoming message <APSIncomingMessage: 0x1003d04b0> with guid 337F58B1-ACA3-43FC-B842-B9C1EFED5F5A environment <APSEnvironment: 0x10030fb30: production>\r\n\tMar 19 17:31:26 Gregorys-iPhone-5S apsd(PersistentConnection)[85] <Notice>: 2018-03-19 17:31:26 -0500 apsd[85]: <APSCourier: 0x10040fac0>: Calling into AWD for PushReceived\r\n\tMar 19 17:31:26 Gregorys-iPhone-5S apsd(PersistentConnection)[85] <Notice>: 2018-03-19 17:31:26 -0500 apsd[85]: <APSCourier: 0x10040fac0>: AWD for PushReceived finished\r\n\tMar 19 17:31:26 Gregorys-iPhone-5S apsd(PersistentConnection)[85] <Notice>: 2018-03-19 17:31:26 -0500 apsd[85]: <APSCourier: 0x10040fac0>: Stream processing: complete no, invalid no, length parsed 0, parameters (null)\r\n\tMar 19 17:31:26 Gregorys-iPhone-5S apsd(PersistentConnection)[85] <Notice>: 2018-03-19 17:31:26 -0500 apsd[85]: APSMessageStore - New message record [<APSIncomingMessageRecord 0x10034d960 [0x1ab883bb8]>{}] has ID [4799].\r\n\tMar 19 17:31:26 Gregorys-iPhone-5S apsd(PersistentConnection)[85] <Notice>: 2018-03-19 17:31:26 -0500 apsd[85]: <APSMessageStore: 0x1004a2830> calling completion block for incoming message 337F58B1-ACA3-43FC-B842-B9C1EFED5F5A\r\n\tMar 19 17:31:26 Gregorys-iPhone-5S apsd(PersistentConnection)[85] <Notice>: 2018-03-19 17:31:26 -0500 apsd[85]: <APSCourier: 0x10040fac0>: Sending acknowledgement message with response 0 and messageId <ebe2158d> (2367021803)\r\n\tMar 19 17:31:26 Gregorys-iPhone-5S apsd(PersistentConnection)[85] <Notice>: 2018-03-19 17:31:26 -0500 apsd[85]: <APSCourier: 0x10040fac0> Noting push - using last lq 0 and rat (null)  (instead of -2, kCTRegistrationRadioAccessTechnologyUnknown)\r\n\tMar 19 17:31:26 Gregorys-iPhone-5S apsd(PersistentConnection)[85] <Notice>: 2018-03-19 17:31:26 -0500 apsd[85]: <APSDecayTimer: 0x10031d8b0>:APSNetworkMonitor decaying cost (1500 - 0) = 1500 for 0.152008 seconds\r\n\tMar 19 17:31:26 Gregorys-iPhone-5S apsd(PersistentConnection)[85] <Notice>: 2018-03-19 17:31:26 -0500 apsd[85]: <APSDecayTimer: 0x10031d8b0>:APSNetworkMonitor addCost: 166 - _currentCost is now 1500\r\n\tMar 19 17:31:26 Gregorys-iPhone-5S apsd(PersistentConnection)[85] <Notice>: 2018-03-19 17:31:26 -0500 apsd[85]: <APSCourier: 0x10040fac0> _notifyForIncomingMessage <APSIncomingMessage: 0x1003d04b0> with guid 337F58B1-ACA3-43FC-B842-B9C1EFED5F5A\r\n\tMar 19 17:31:26 Gregorys-iPhone-5S apsd(PersistentConnection)[85] <Notice>: 2018-03-19 17:31:26 -0500 apsd[85]: Dispatching high priority message: <OS_xpc_dictionary: <dictionary: 0x1003bf660> { count = 2, transaction: 0, voucher = 0x0, contents =\r\n\t\t\"message\" => <dictionary: 0x1003c5270> { count = 1, transaction: 0, voucher = 0x0, contents =\r\n\t\t\t\"ECF19A18-7AA6-4141-B4DC-A2E5123B2B5C\" => <data: 0x1003d6cf0>: { length = 16384 bytes, contents = 0x62706c697374313513d5010000000000801200000000d97f... }\r\n\t\t}\r\n\t\t\"message-type\" => <int64: 0x1003e2020>: 30\r\n\t}>\r\n\tMar 19 17:31:26 Gregorys-iPhone-5S SpringBoard(UserNotificationsServer)[51] <Notice>: Received incoming message on topic com.ihs.energyalert\r\n\tMar 19 17:31:26 Gregorys-iPhone-5S apsd(PersistentConnection)[85] <Notice>: 2018-03-19 17:31:26 -0500 apsd[85]: Looking up connection on peer: 34b060\tfound <APSConnectionServer: 0x100475ac0>\r\n\tMar 19 17:31:26 Gregorys-iPhone-5S apsd(PersistentConnection)[85] <Notice>: 2018-03-19 17:31:26 -0500 apsd[85]: <APSCourier: 0x10040fac0> informed that <APSConnectionServer: 0x100475ac0> acknowledges incoming message with guid 337F58B1-ACA3-43FC-B842-B9C1EFED5F5A\r\n\tMar 19 17:31:26 Gregorys-iPhone-5S apsd(PersistentConnection)[85] <Notice>: 2018-03-19 17:31:26 -0500 apsd[85]: <APSMessageStore: 0x1004a2830> Removing incoming message with guid 337F58B1-ACA3-43FC-B842-B9C1EFED5F5A\r\n\tMar 19 17:31:26 Gregorys-iPhone-5S apsd(PersistentConnection)[85] <Notice>: 2018-03-19 17:31:26 -0500 apsd[85]: <APSCourier: 0x10040fac0> _schedulePendingWorkUpdate\r\n\tMar 19 17:31:26 Gregorys-iPhone-5S apsd(PersistentConnection)[85] <Notice>: 2018-03-19 17:31:26 -0500 apsd[85]: APSMessageStore - APSIncomingMessageRecordDeleteMessageForGUID 337F58B1-ACA3-43FC-B842-B9C1EFED5F5A\r\n\tMar 19 17:31:26 Gregorys-iPhone-5S assertiond[61] <Notice>: Ignoring assertion request named \"com.apple.extension.session\" from <BSProcessHandle: 0x11fd0ad90; SpringBoard:51; valid: YES> because process { pid 443; bundleID (null) } is unknown.\r\n\tMar 19 17:31:26 Gregorys-iPhone-5S SpringBoard(Foundation)[51] <Notice>: calling plugIn beginUsing:\r\n\tMar 19 17:31:26 Gregorys-iPhone-5S pkd[145] <Notice>: allowing host 51 /System/Library/CoreServices/SpringBoard.app/SpringBoard to use plug-in <private>(<private>) uuid=C7051547-5FE3-4616-AB09-6CC4A94EB730 at <private>\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S NotificationAggregation.iOS(Mono)[449] <Notice>: Found new TLS offset at 224\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S SpringBoard(Foundation)[51] <Notice>: completed calling plugIn beginUsing: for pid: 449\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S NotificationAggregation.iOS(Foundation)[449] <Notice>: in _willPerformHostCallback: block\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S mediaserverd(CoreMedia)[25] <Notice>: -CMSessionMgr- cmsmHandleApplicationStateChange: CMSession: Client com.ihs.energyalert.notifications with pid '449' is now Foreground Running. Background entitlement: NO\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S symptomsd(SymptomEvaluator)[124] <Notice>: 449 com.ihs.energyalert.notifications: ForegroundRunning (most elevated: ForegroundRunning)\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S symptomsd(SymptomEvaluator)[124] <Notice>: Entry, display name com.ihs.energyalert.notifications uuid AC301478-AA83-37AD-9688-BFEF80B676A0 pid 449 isFront 1\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S symptomsd(SymptomEvaluator)[124] <Notice>: Check for bundle name com.ihs.energyalert returns 0\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S symptomsd(SymptomEvaluator)[124] <Notice>: CFSM2 foreground (current/proposed/state) in = (0/1/2)\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S symptomsd(SymptomEvaluator)[124] <Notice>: app name com.ihs.energyalert isForeground 1  hasForegroundApps 1, current idea of foreground 0 disp (null)\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S symptomsd(SymptomEvaluator)[124] <Notice>: Going to Foreground, new flags 0x0, initial value 0x0, enabled 0\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S symptomsd(SymptomEvaluator)[124] <Notice>: Continue with bundle name com.ihs.energyalert, is front 1\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S symptomsd(SymptomEvaluator)[124] <Notice>: com.ihs.energyalert: Foreground: true\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S symptomsd(SymptomEvaluator)[124] <Notice>: Set appCompactState object 2777909 for key com.ihs.energyalert\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S symptomsd(SymptomEvaluator)[124] <Notice>: CFSM2 foreground (current/state) out = (1/1)\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S CommCenter[73] <Notice>: #I BundleID: <private> is a foreground app\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S symptomsd(SymptomEvaluator)[124] <Notice>: CFSM Current state: idle, changed: systemForeground to 1 for net type 0, eligible for alerted but constraints unsatisfied (1,0,0,0)\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S symptomsd(SymptomEvaluator)[124] <Notice>: CFSM Current state: idle, changed: systemForeground to 1 for net type 0, ineligible for committed as nil pred, wifi (0x0) cell (0x0)\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S symptomsd(SymptomEvaluator)[124] <Notice>: CFSM Relays: cell (active-no/primary-no/knowngood-no/rssithresh-ok/txthresh-ok/arp-ok/dns-ok/tcp-ok/lqm:-2/advisory:0) wifi (active/primary/knowngood/rssithresh-ok/txthresh-ok/arp-ok/dns-ok/tcp-ok/lqm:100/advisory:7)\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S NotificationAggregation.iOS(Xamarin)[449] <Notice>: NotificationService: 1\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S NotificationAggregation.iOS(Xamarin)[449] <Notice>: NotificationService: 2\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S NotificationAggregation.iOS(Xamarin)[449] <Notice>: NotificationService: 3\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S NotificationAggregation.iOS(Xamarin)[449] <Notice>: NotificationService: 4\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S NotificationAggregation.iOS(Xamarin)[449] <Notice>: NotificationService: 5\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S NotificationAggregation.iOS(Xamarin)[449] <Notice>: NotificationService: 6\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S NotificationAggregation.iOS(Xamarin)[449] <Notice>: NotificationService: 7\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S SpringBoard(PlugInKit)[51] <Notice>: connection to plug-in <private>(C7051547-5FE3-4616-AB09-6CC4A94EB730) lost\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S SpringBoard(PlugInKit)[51] <Notice>: connection to plug-in <private>(<private>) lost\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S SpringBoard(Foundation)[51] <Notice>: extension connection was interrupted\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S SpringBoard(UserNotificationsServer)[51] <Error>: Extension error whilst trying to modify push notification E4C6-7201: Error Domain=NSCocoaErrorDomain Code=4097 \"connection from pid 449\" UserInfo={NSDebugDescription=connection from pid 449}\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S SpringBoard(Foundation)[51] <Notice>: tearing down extension request for pid 0\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S SpringBoard(UserNotificationsServer)[51] <Notice>: [com.ihs.energyalert] Saving notification E4C6-7201\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S SpringBoard(UserNotificationsServer)[51] <Notice>: Saving notification list at /var/mobile/Library/SpringBoard/PushStore/com.ihs.energyalert.pushstore with 2 items\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S mediaserverd(CoreMedia)[25] <Notice>: -CMSessionMgr- cmsmHandleApplicationStateChange: CMSession: Client com.ihs.energyalert.notifications with pid '449' is now Background Suspended. Background entitlement: NO\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S mediaserverd(AudioToolbox)[25] <Notice>: 1130: pid 449(NotificationAggr)\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S SpringBoard(UserNotificationsServer)[51] <Notice>: UNSUserNotificationServerConnectionListener connection invalidated\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S symptomsd(SymptomEvaluator)[124] <Notice>: 449 com.ihs.energyalert.notifications: BackgroundTaskSuspended (most elevated: BackgroundTaskSuspended)\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S symptomsd(SymptomEvaluator)[124] <Notice>: Entry, display name com.ihs.energyalert.notifications uuid AC301478-AA83-37AD-9688-BFEF80B676A0 pid 449 isFront 0\r\n\tMar 19 17:31:27 Gregorys-iPhone-5S SpringBoard(UserNotificationsServer)[51] <Notice>: [com.ihs.energyalert] Load 0 pending notification dictionaries\r\n\r\n"},{"Id":"7403390934","Type":"PullRequestEvent","CreatedAt":"2018-03-19T22:40:54","Actor":"alexanderkyte","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3783","RelatedDescription":"Opened pull request \"Add MonoTouch support for Dedup\" (#3783) at xamarin/xamarin-macios","RelatedBody":"This is set by altering ` msbuild/Xamarin.iOS.Tasks.Core/Xamarin.iOS.Common.props` to contain ```<MtouchEnableDedup Condition=\"'$(MtouchEnableDedup)' ==''\">True</MtouchEnableDedup>```\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"975795670622892032","CreatedAt":"2018-03-19T18:06:31+00:00","UserScreenname":"xamarinhq","Text":"Learn how to create cloud-connected mobile apps with #Xamarin and Microsoft #Azure: https://t.co/NK0m1MG9yM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":27,"FavoriteCount":8,"RawContent":null},{"Id":"975467903750426626","CreatedAt":"2018-03-18T20:24:06+00:00","UserScreenname":"xamarinhq","Text":"Check out Android Emulator version 27.0.2, now featuring \"Quick Boot\" to launch the emulator in just a few seconds:… https://t.co/oyG6oJ6UN2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":192,"FavoriteCount":75,"RawContent":null},{"Id":"975154821358608384","CreatedAt":"2018-03-17T23:40:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to deliver rich media experiences with the #XamarinForms Video Player: https://t.co/ndy3yvDDNk https://t.co/jHWAbLK0zw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":74,"FavoriteCount":23,"RawContent":null},{"Id":"974742352538558464","CreatedAt":"2018-03-16T20:21:01+00:00","UserScreenname":"xamarinhq","Text":"Add cloud storage to your #Xamarin apps with #Azure Blob Storage: https://t.co/g1O7qUdDb7 https://t.co/KYZ5XlPeGr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":18,"RawContent":null},{"Id":"974673649277001729","CreatedAt":"2018-03-16T15:48:01+00:00","UserScreenname":"xamarinhq","Text":"Add sound to your #XamarinForms app with the open-source SimpleAudioPlayer #NuGet plugin: https://t.co/r8NSFRpl33 https://t.co/dtAlgRSysQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":59,"FavoriteCount":15,"RawContent":null},{"Id":"974310000062533632","CreatedAt":"2018-03-15T15:43:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to make your #XamarinForms apps adaptive based on screen size, device type, and orientation: https://t.co/XZYix2Cv0j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":55,"FavoriteCount":14,"RawContent":null},{"Id":"973975762419224577","CreatedAt":"2018-03-14T17:34:52+00:00","UserScreenname":"xamarinhq","Text":"#Xamarin joins https://t.co/zGGlEXOMrE! Learn more: https://t.co/dYZuo1IFIk https://t.co/a0BJMelbL9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":128,"FavoriteCount":67,"RawContent":null},{"Id":"973950886191030273","CreatedAt":"2018-03-14T15:56:01+00:00","UserScreenname":"xamarinhq","Text":"Get started with the #XamarinAndroid Device Manager Preview: https://t.co/4cTyPaFfMb https://t.co/HF0W9uigKU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":27,"FavoriteCount":16,"RawContent":null},{"Id":"973590055234228224","CreatedAt":"2018-03-13T16:02:12+00:00","UserScreenname":"xamarinhq","Text":"The #CSharp developer’s guide to shipping better apps with #VSAppCenter: https://t.co/jU0cnONnM8 https://t.co/5UiJzLeMBf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":73,"FavoriteCount":37,"RawContent":null},{"Id":"973272277876752385","CreatedAt":"2018-03-12T18:59:28+00:00","UserScreenname":"xamarinhq","Text":"Start your week off with the @XamarinPodcast, featuring discussion of #VS2017 version 15.6, AR with UrhoSharp, and… https://t.co/xgDtF4E72X","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":19,"FavoriteCount":8,"RawContent":null},{"Id":"973226616020176896","CreatedAt":"2018-03-12T15:58:01+00:00","UserScreenname":"xamarinhq","Text":"CoreML Programming with Xamarin.Mac and F#: https://t.co/vI7JuxjkWa https://t.co/MkadlSMfqL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":10,"RawContent":null},{"Id":"972993579109974016","CreatedAt":"2018-03-12T00:32:01+00:00","UserScreenname":"xamarinhq","Text":"The open source suite of SmartHotel360 reference apps includes mobile and desktop apps for business travelers, a we… https://t.co/i9MWn6ypXY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":141,"FavoriteCount":45,"RawContent":null},{"Id":"972643544832856065","CreatedAt":"2018-03-11T01:21:06+00:00","UserScreenname":"xamarinhq","Text":"Get started with the #Xamarin Live Player for iOS: https://t.co/jQnSvYwtB1 https://t.co/sa0DV2n2aD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":97,"FavoriteCount":57,"RawContent":null},{"Id":"972152285550862336","CreatedAt":"2018-03-09T16:49:01+00:00","UserScreenname":"xamarinhq","Text":"Build a simple #XamarinForms chat app that leverages and connects to an https://t.co/y9erV6ivVL Core #WebSocket:… https://t.co/hDELQELDqc","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":147,"FavoriteCount":57,"RawContent":null},{"Id":"971835801377091585","CreatedAt":"2018-03-08T19:51:25+00:00","UserScreenname":"xamarinhq","Text":"Learn how you can contribute to Xamarin.iOS and Xamarin.Mac—no code necessary! Get started: https://t.co/XU5OJkcXCt https://t.co/FGappPLbxT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":73,"FavoriteCount":26,"RawContent":null},{"Id":"971796730722377729","CreatedAt":"2018-03-08T17:16:10+00:00","UserScreenname":"xamarinhq","Text":"An introduction to #tvOS with #Xamarin: https://t.co/A5jZpraqm1 https://t.co/Qafo4W8L3m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":17,"FavoriteCount":5,"RawContent":null},{"Id":"971430573867720704","CreatedAt":"2018-03-07T17:01:11+00:00","UserScreenname":"xamarinhq","Text":"Learn how to turn on automatic signing that allows #VS4Mac to take care of generating and using the required signin… https://t.co/snE707bjji","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":11,"RawContent":null},{"Id":"971119957894418433","CreatedAt":"2018-03-06T20:26:55+00:00","UserScreenname":"xamarinhq","Text":"#VS2017 version 15.6 is now available! Get all the details on this exciting release: https://t.co/QIxlfX9I7F","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":35,"RawContent":null},{"Id":"971068644288540672","CreatedAt":"2018-03-06T17:03:01+00:00","UserScreenname":"xamarinhq","Text":"Simplified app signing with secure files in #VSTS: https://t.co/O5XooxuL40 https://t.co/b0oYm5btmK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":16,"RawContent":null}]}},"RunOn":"2018-03-20T05:30:41.6649811Z","RunDurationInMilliseconds":3997}