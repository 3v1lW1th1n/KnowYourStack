{"Data":{"Vue-Issues":{"Issues":[{"Id":"408630197","IsPullRequest":false,"CreatedAt":"2019-02-11T04:55:20","Actor":"srchulo","Number":"9472","RawContent":null,"Title":"v-model doesn't always bind when using v-if","State":"closed","Body":"### Version\r\n2.6.4\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/mu4q63db/1/](https://jsfiddle.net/mu4q63db/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Select a period radio button\r\n2. Hit Monthly and Daily back and forth\r\n3. Sometimes maybe select a period radio button again\r\n\r\n### What is expected?\r\nthe v-model for period should always select a radio button when being rendered\r\n\r\n### What is actually happening?\r\nSometimes, no radio button will be selected even when the corresponding v-model variable (period_month) still has its previous value.\r\n\r\n---\r\nThis is reproducible, but sometimes it can take a few clicks to get it to happen.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9472","RelatedDescription":"Closed issue \"v-model doesn't always bind when using v-if\" (#9472)"},{"Id":"408510043","IsPullRequest":false,"CreatedAt":"2019-02-11T03:22:22","Actor":"tangjinzhou","Number":"9468","RawContent":null,"Title":"slot-scope support multiple parameters","State":"closed","Body":"### What problem does this feature solve?\r\nslot-scope support multiple parameters in version 2.6.x.\r\nIt is supported in version 2.5.x.\r\nIf not supported, our component library([ant-design-vue](https://github.com/vueComponent/ant-design-vue)) has to change some API.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nlike 2.5.x\r\n```html\r\n<template slot=\"name\" slot-scope=\"text, record, index...\"></template>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9468","RelatedDescription":"Closed issue \"slot-scope support multiple parameters\" (#9468)"},{"Id":"408544041","IsPullRequest":false,"CreatedAt":"2019-02-10T21:42:37","Actor":"smellyshovel","Number":"9471","RawContent":null,"Title":"Resolve injected properties after the props initialization","State":"closed","Body":"### What problem does this feature solve?\r\nIt's [said in the API reference](https://vuejs.org/v2/api/#provide-inject) that below the version 2.2.1 injected properties actually *were* resolved after the props initialization. So it seems like I'm asking for a regression.\r\n\r\nI tried to find what formed the basis for making such a decision (to resolve them before props and data) but I haven't been able to find any related issue.\r\n\r\nI have a component `<tree-view>` that renders another component called `<tree-item>` inside. The `tree-item` may itself recursively render one or more `tree-view`s.\r\n\r\nThe `tree-view` accepts a number of options that I pass to it as props (let it be a sole option called \"mode\" for the sake of brevity):\r\n\r\n```html\r\n<tree-view\r\n    mode=\"folders\"\r\n>\r\n    ...\r\n</tree-view>\r\n```\r\n\r\nThe `tree-view` accepts it as a prop:\r\n\r\n```javascript\r\nprops: {\r\n    mode: {\r\n        default: \"all\",\r\n        validator: ...\r\n    }\r\n}\r\n```\r\n\r\nAnd I want to provide it to all the nested `tree-view`'s, so that I don't have to pass this option to the nested `tree-item` so that *only from there* it can be passed to the nested `tree-view`. But I can't do so because **the props since 2.2.1 are initialized after the injected properties**.\r\n\r\n### What does the proposed API look like?\r\nThat is what I'm trying to achieve\r\n\r\n```javascript\r\nprops: {\r\n    mode: {\r\n        default: \"all\"\r\n    }\r\n},\r\n\r\nprovide() {\r\n    return {\r\n        /*\r\n            This one works OK, this.mode is taken from the `props`\r\n        */\r\n        mode: this.mode\r\n    }\r\n},\r\n\r\ninject: {\r\n    mode: {\r\n        /*\r\n            But this one doesn't since the `props` are not yet initialized\r\n        */\r\n        default: this.mode\r\n    }\r\n}\r\n```\r\n\r\nMy point is that the root `tree-view` isn't provided with the `mode` injected property (because it's the root one obviously) so the warning \"Injection \"mode\" not found\" is thrown for each root `tree-view`. But all the nested `tree-view`'s *are* provided with the injected property \"mode\" so the provided value is taken instead of the `default` one.\r\n\r\nMay be (I'm not sure, just a guess) the proposed API will need to like something like\r\n\r\n```javascript\r\ninject() {\r\n}\r\n```\r\n\r\nThat's that the `injected` property can accept a function as its value instead of just an array or an object.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9471","RelatedDescription":"Closed issue \"Resolve injected properties after the props initialization\" (#9471)"},{"Id":"408511609","IsPullRequest":true,"CreatedAt":"2019-02-10T08:09:21","Actor":"znck","Number":"9470","RawContent":null,"Title":"fix #9467, Custom validation message in custom prop validator","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:** #9467 \r\n","Url":"https://github.com/vuejs/vue/pull/9470","RelatedDescription":"Open PR \"fix #9467, Custom validation message in custom prop validator\" (#9470)"},{"Id":"408510370","IsPullRequest":true,"CreatedAt":"2019-02-10T07:48:25","Actor":"alanchanzm","Number":"9469","RawContent":null,"Title":"refactor: remove duplicate import sources","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [x] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9469","RelatedDescription":"Open PR \"refactor: remove duplicate import sources\" (#9469)"},{"Id":"408508598","IsPullRequest":false,"CreatedAt":"2019-02-10T07:15:21","Actor":"znck","Number":"9467","RawContent":null,"Title":"Custom error message from prop validator","State":"open","Body":"### What problem does this feature solve?\r\nCurrently, if a custom validator fails, we get a console error log saying `Invalid prop: custom validator check failed for prop 'email'` which is not helpful if you're using a third-party component. The only way to find out what failed is to jump into the source code of the component and try to understand what does this custom validator do. If the custom validator can provide a custom message that immensely changes developer experience e.g. Instead of `Invalid prop: custom validator check failed for prop 'email'`, it can say, `Invalid prop: the prop 'email' should be a valid GMail address.`\r\n\r\n### What does the proposed API look like?\r\nNo change in API signature only behavior of `validator` function. If a validator function throws an error, use it as a custom message for prop validation. Also, allow `{{name}}` interpolation in error message. So the `email` can be defined as:\r\n\r\n``` js\r\n...\r\n  props: {\r\n    email: {\r\n      validator(value) {\r\n        if (!value.endsWith('@gmail.com')) throw new Error('the prop '{{name}}' should be a valid GMail address.')\r\n        return true\r\n     }\r\n   }\r\n...\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9467","RelatedDescription":"Open issue \"Custom error message from prop validator\" (#9467)"},{"Id":"408473826","IsPullRequest":true,"CreatedAt":"2019-02-10T01:15:00","Actor":"ramiy","Number":"9466","RawContent":null,"Title":"feat(shared utils): add new docs, and fix others for consistency","State":"closed","Body":"Some utility functions has docs, other don't.\r\n\r\nThis PR added missing inline docs to all the functions and update existing docs to use consistent description.\r\n\r\nWhen creating \"**is**\" functions (isPrimitive, isObject, isPromise, isRegExp),\r\nthe description should start with \"**Check whether...**\".\r\n\r\nWhen creating \"**to**\" functions (toString, toNumber, toArray, toObject),\r\nthe description should start with \"**Convert a value to...**\".\r\n\r\n----\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [x] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n","Url":"https://github.com/vuejs/vue/pull/9466","RelatedDescription":"Closed or merged PR \"feat(shared utils): add new docs, and fix others for consistency\" (#9466)"},{"Id":"408419064","IsPullRequest":false,"CreatedAt":"2019-02-09T13:01:39","Actor":"SuperDJ","Number":"9465","RawContent":null,"Title":"Props description","State":"closed","Body":"### What problem does this feature solve?\r\nI think it would be nice to be able to have some sort of description or documentation index for the props. This index can than also be displayed in the vue devtools. I think it would help other users using already build components. For example when using a framework like vuetify so they don't have to go back to the documentation of what a prop does.\r\n\r\n### What does the proposed API look like?\r\n    props: {\r\n       message: {\r\n        type: String,\r\n        description: \"Represents the the message of the notification\"\r\n      } \r\n    }\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9465","RelatedDescription":"Closed issue \"Props description\" (#9465)"},{"Id":"408192525","IsPullRequest":false,"CreatedAt":"2019-02-09T08:50:57","Actor":"petternordholm","Number":"9461","RawContent":null,"Title":"Form submitted even though button type=\"button\"","State":"closed","Body":"### Version\r\n2.6.3\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/2zr485mw50](https://codesandbox.io/s/2zr485mw50)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick on the button. The \"click count\" text should be 1 but instead it is 11. So, the form is submitted even though the original button has type=\"button\"\r\n\r\n### What is expected?\r\nThe form should not be submitted. Instead, only the button should change.\r\n\r\n### What is actually happening?\r\nForm is submitted. I guess it is due to the DOM button being reused.\r\n\r\n---\r\nThe work-around is simple. Just add prevent.stop to the click event handler.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9461","RelatedDescription":"Closed issue \"Form submitted even though button type=\"button\"\" (#9461)"},{"Id":"408273666","IsPullRequest":false,"CreatedAt":"2019-02-09T06:17:00","Actor":"NonSpicyBurrito","Number":"9462","RawContent":null,"Title":"2.6.3 broke Vue Router on Mobile Safari","State":"closed","Body":"### Version\r\n2.6.3\r\n\r\n### Reproduction link\r\n[https://github.com/NonSpicyBurrito/vueissue](https://github.com/NonSpicyBurrito/vueissue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Create a project with Vue CLI 3, manual: Babel, Vue Router, Lint\r\n2. Add simple test buttons to generated Home and About page\r\nHome.vue\r\n```html\r\n<template>\r\n  <div class=\"home\">\r\n    <button @click=\"test++\">{{test}}</button>\r\n    <br>\r\n    <img alt=\"Vue logo\" src=\"../assets/logo.png\">\r\n    <HelloWorld msg=\"Welcome to Your Vue.js App\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\nimport HelloWorld from '@/components/HelloWorld.vue'\r\n\r\nexport default {\r\n  name: 'home',\r\n  components: {\r\n    HelloWorld\r\n  },\r\n  data () {\r\n    return {\r\n      test: 100\r\n    }\r\n  }\r\n}\r\n</script>\r\n```\r\nAbout.vue\r\n```html\r\n<template>\r\n  <div class=\"about\">\r\n    <button @click=\"test++\">{{test}}</button>\r\n    <h1>This is an about pagennn</h1>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'About',\r\n  data () {\r\n    return {\r\n      test: 100\r\n    }\r\n  }\r\n}\r\n</script>\r\n```\r\nRelevant version:\r\n- Vue: 2.6.3\r\n- Vue Router: 3.0.2\r\n- iOS & Safari: 9.3.5\r\n\r\n### What is expected?\r\nTest buttons work normally on mobile Safari\r\n\r\n### What is actually happening?\r\n1. navigate to Home page, test button works\r\n2. navigate to About page, test button does not work\r\n3. navigate back to Home page, test button does not work anymore\r\n\r\n---\r\nThe same setup works as expected with Vue 2.5.22, so it's likely that something in 2.6.3 broke it.\r\nI don't know how to debug mobile Safari so I can't see the cause of it.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9462","RelatedDescription":"Closed issue \"2.6.3 broke Vue Router on Mobile Safari\" (#9462)"},{"Id":"408366242","IsPullRequest":false,"CreatedAt":"2019-02-09T01:26:54","Actor":"Gormartsen","Number":"9464","RawContent":null,"Title":"click outside case. Microtasks and addEventListener","State":"closed","Body":"### What problem does this feature solve?\r\nAbility to call method when click is outside element(component)\r\n\r\nIn 2.5.x there was simple way to do via document.addEventListener and el.contains(event.target)\r\n\r\nIt was useful specially via directive like v-click-outside=\"componentMethod\"\r\n\r\nAfter inspecting live circle in 2.6.x I found that eventListener happen after click processed inside component and event.target.parentElement is null (in case if there is inside click process that change component display)\r\n\r\nLet me peripheries it. \r\nIn case if we have a component that change it's own rendering and we listen for EventListener click on $el of the component - EventListener function receive event.target of the removed DOM element. \r\n\r\nGoing back to the root issue.\r\nHow we can simply monitor multiple elements that need to change it's own display if user clicked outside element. Like dropdown element for example.\r\n\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nHave no idea.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9464","RelatedDescription":"Closed issue \"click outside case. Microtasks and addEventListener\" (#9464)"},{"Id":"408163817","IsPullRequest":false,"CreatedAt":"2019-02-08T20:17:04","Actor":"sqal","Number":"9460","RawContent":null,"Title":"Object Rest/Spread is not fully supported in templates yet?","State":"closed","Body":"### Version\r\n2.6.3\r\n\r\n~~### Reproduction link~~\r\n\r\n### Steps to reproduce\r\n```vue\r\n<template>\r\n  <Test>\r\n    <template v-slot=\"{ foo, ...props }\">\r\n      <div>{{ foo }}</div>\r\n      <pre>{{ props }}</pre>\r\n    </template>\r\n  </Test>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'App',\r\n    components: {\r\n      Test: {\r\n        render(h) {\r\n          return h('div', this.$scopedSlots.default({\r\n            foo: 'foo',\r\n            bar: true,\r\n          }))\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n```\r\n\r\n[On vue 2.6 project's board](https://github.com/vuejs/vue/projects/4#card-15495648) there is listed support for object spread syntax in templates. It says it's enabled in vue-template-es2015-compiler@1.8, which latest version of vue-loader (15.6.2) is already using. I just created test project using vue-cli. There's ineed vue-template-es2015-compiler@1.8.2 installed in my node_modules directory, but above reproduction still does not work.\r\n\r\n### What is expected?\r\nObject rest spread should work in templates\r\n\r\n### What is actually happening?\r\nWhen attempting to compile above component, this error is being thrown:\r\n\r\n```\r\n./src/components/HelloWorld.vue?vue&type=template&id=469af010& (./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/.cache/vue-loader\",\"cacheIdentifier\":\"16addc27-vue-loader-template\"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/HelloWorld.vue?vue&type=template&id=469af010&)\r\nModule build failed (from ./node_modules/vue-loader/lib/loaders/templateLoader.js):\r\nTypeError: Cannot read property 'line' of undefined\r\n    at getSnippet (C:\\dev\\vue-cli-app\\node_modules\\vue-template-es2015-compiler\\buble.js:6077:28)\r\n    at Object.transform (C:\\dev\\vue-cli-app\\node_modules\\vue-template-es2015-compiler\\buble.js:14103:17)\r\n    at transpile (C:\\dev\\vue-cli-app\\node_modules\\vue-template-es2015-compiler\\index.js:23:20)\r\n    at actuallyCompile (C:\\dev\\vue-cli-app\\node_modules\\@vue\\component-compiler-utils\\dist\\compileTemplate.js:86:20)\r\n    at compileTemplate (C:\\dev\\vue-cli-app\\node_modules\\@vue\\component-compiler-utils\\dist\\compileTemplate.js:28:16)\r\n    at Object.module.exports (C:\\dev\\vue-cli-app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js:46:20)\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9460","RelatedDescription":"Closed issue \"Object Rest/Spread is not fully supported in templates yet?\" (#9460)"},{"Id":"408288719","IsPullRequest":false,"CreatedAt":"2019-02-08T19:19:03","Actor":"ronald-d-rogers","Number":"9463","RawContent":null,"Title":"Provide way to destroy app in SSR","State":"open","Body":"### What problem does this feature solve?\r\n\r\nThis issue is related to: https://github.com/vuejs/vue-router/issues/2606\r\nProviding a way to destroy the app or mark the SSR request as complete (maybe on `$ssrContext`) is a potential fix to this problem, though maybe not the best one.\r\n\r\nTo recap:\r\nA memory leak happens when the `router-view` is programmed to appear conditionally, and the component matching the view has a `beforeRouteEnter` guard and a callback is passed to it's `next(...)` method (e.g. `next(vm => {})`).\r\n\r\nThis will cause `vue-router` to poll every 16ms until the `router-view` materializes.\r\n\r\nIn a typical SSR application an instance of the app is created per request, which means the `router-view` will never appear, causing infinitely recursing poll methods.\r\n\r\n### What does the proposed API look like?\r\nA potential fix to this would be to detect when the app is destroyed in `vue-router`'s `poll` method, and allow the user to destroy the app that they created in `entry-server.js`.\r\n\r\nA simplified example:\r\n```javascript\r\nexport default context => {\r\n  return new Promise((resolve, reject) => {\r\n    const { app, router } = createApp(context)\r\n\r\n    const { url } = context\r\n\r\n    router.push(url)\r\n\r\n    router.onReady(() => {\r\n      resolve(app)\r\n    }, reject)\r\n  }).then(destroyApp)\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9463","RelatedDescription":"Open issue \"Provide way to destroy app in SSR\" (#9463)"},{"Id":"408114071","IsPullRequest":false,"CreatedAt":"2019-02-08T18:52:29","Actor":"pearofducks","Number":"9458","RawContent":null,"Title":"2.6.3 broke this.$slots vs. new syntax (docs need updated?)","State":"closed","Body":"### Version\r\n2.6.3\r\n\r\n### Reproduction link\r\n[https://github.com/pearofducks/vue-slot-bug-repro](https://github.com/pearofducks/vue-slot-bug-repro)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Run in dev mode\r\n- Console will log the slot used in [App.vue](https://github.com/pearofducks/vue-slot-bug-repro/blob/master/src/App.vue#L5) and defined in [NamedSlot.js](https://github.com/pearofducks/vue-slot-bug-repro/blob/master/src/NamedSlot.js#L7), and the page should contain the h1 in the slot\r\n\r\n### What is expected?\r\n`$slots.foo` should be available -- **or at least the API docs should be updated**\r\n\r\n### What is actually happening?\r\n`$slots.foo` is undefined\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9458","RelatedDescription":"Closed issue \"2.6.3 broke this.$slots vs. new syntax (docs need updated?)\" (#9458)"},{"Id":"408019765","IsPullRequest":false,"CreatedAt":"2019-02-08T14:36:32","Actor":"robertmoura","Number":"9455","RawContent":null,"Title":"nextTick and eventPropogation Issue","State":"closed","Body":"### Version\r\n2.6.3\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/qx992r339j](https://codesandbox.io/s/qx992r339j)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick the open modal button.\r\n\r\n### What is expected?\r\nThe text should display. When you click anywhere other than the text it should be removed.\r\n\r\n### What is actually happening?\r\nThe text flashes on and then off.\r\n\r\n---\r\nThe nextTick edge case described in https://gist.github.com/yyx990803/d1a0eaac052654f93a1ccaab072076dd doesn't seem to be completely fixed.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9455","RelatedDescription":"Closed issue \"nextTick and eventPropogation Issue\" (#9455)"},{"Id":"408152786","IsPullRequest":false,"CreatedAt":"2019-02-08T13:29:04","Actor":"matthiasg","Number":"9459","RawContent":null,"Title":"Invalid <progress :value=\"1/0\"></progress> breaks Vue","State":"open","Body":"### Version\r\n2.6.3\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/mgoetzke/bsku79er/7/](https://jsfiddle.net/mgoetzke/bsku79er/7/)\r\n\r\n\r\n### Steps to reproduce\r\nSee https://jsfiddle.net/mgoetzke/bsku79er/7/. Once 'Break It' is pressed the application is not updating anything anymore. A runtime exception during render essentially killed it without any good way to handle it.\r\n\r\nWhenever a progress elements value is set to NaN, the Error `TypeError: \"Value being assigned to HTMLProgressElement.value is not a finite floating-point value.\"` is being listed in the console, but somehow instead of just handling this render error (handled by standard component error handler) the component and the entire application is permanently damaged after this.\r\n\r\nOf course the developer should foresee this and write it with the appropriate defensiveness, but runtime errors inside the render function of a component should not invisibly leave the entire application in a non-reactive state. \r\n\r\nEDIT: Updated source of console message\r\n\r\n### What is expected?\r\nHandle this as a standard render exception.\r\n\r\n### What is actually happening?\r\nVue is not reactive anymore. Eg.no button has any effect anymore.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9459","RelatedDescription":"Open issue \"Invalid <progress :value=\"1/0\"></progress> breaks Vue\" (#9459)"},{"Id":"408042788","IsPullRequest":false,"CreatedAt":"2019-02-08T12:04:47","Actor":"inherithandle","Number":"9456","RawContent":null,"Title":"SyntaxError: Invalid regular expression","State":"closed","Body":"### Version\r\n2.6.3\r\n\r\n### Reproduction link\r\n[https://github.com/inherithandle/vue-webpack-simple-project](https://github.com/inherithandle/vue-webpack-simple-project)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. git clone https://github.com/inherithandle/vue-webpack-simple-project\r\n2. run \"npm install\"\r\n2. run \"npm run build\"\r\n3. open ./dist/index.html\r\n\r\n### What is expected?\r\nI expected index.html to be rendered successfully.\r\n\r\n### What is actually happening?\r\nI get the error: \"SyntaxError: invalid range in character class\"\r\n\r\n---\r\nI think it is similar to the issue #2291.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9456","RelatedDescription":"Closed issue \"SyntaxError: Invalid regular expression\" (#9456)"},{"Id":"408088959","IsPullRequest":false,"CreatedAt":"2019-02-08T10:43:20","Actor":"begueradj","Number":"9457","RawContent":null,"Title":" [Vuetify] Multiple instances of Vue detected ","State":"closed","Body":"### Version\r\n2.6.3\r\n\r\n### Reproduction link\r\n[https://github.com/begueradj/bugs/tree/master/nuxtVuetifyJest](https://github.com/begueradj/bugs/tree/master/nuxtVuetifyJest)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n```\r\nconst localVue = createLocalVue()\r\nlocalVue.use(Vuetify)\r\n```\r\n\r\n### What is expected?\r\nI expect my test to pass without any error or warning messages.\r\n\r\n### What is actually happening?\r\nThe test passes but I receive this nasty red message:\r\n\r\n```\r\n^[[999D  console.error node_modules/vuetify/dist/vuetify.js:25038                                                                                \r\n    [Vuetify] Multiple instances of Vue detected                                                                                                 \r\n    See https://github.com/vuetifyjs/vuetify/issues/4068                                                                                         \r\n                                                                                                                                                 \r\n    If you're seeing \"$attrs is readonly\", it's caused by this \r\n```\r\n\r\n---\r\n- The documentation clearly recommends to use `localVue.use(Vuetify)` so please do not suggest me to `Vue.use(Vuetify)` unless  if you are a superman able to convince me.\r\n- I am using Jest   Nuxt   Vuetify. You can try my github repository provided in the above link.\r\nBillal Begueradj.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9457","RelatedDescription":"Closed issue \" [Vuetify] Multiple instances of Vue detected \" (#9457)"},{"Id":"407327314","IsPullRequest":false,"CreatedAt":"2019-02-07T15:07:49","Actor":"brillout","Number":"9445","RawContent":null,"Title":"Re-throwing error within Vue.config.errorHanlder results in error thrown twice","State":"closed","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/h92m7pad/2/](https://jsfiddle.net/h92m7pad/2/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n - Run the app\r\n - Look at the console\r\n\r\n### What is expected?\r\nThe error is thrown once\r\n\r\n### What is actually happening?\r\nIt is thrown twice\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9445","RelatedDescription":"Closed issue \"Re-throwing error within Vue.config.errorHanlder results in error thrown twice\" (#9445)"},{"Id":"407616432","IsPullRequest":false,"CreatedAt":"2019-02-07T15:03:31","Actor":"tcastelly","Number":"9452","RawContent":null,"Title":"v-slot not used seems to exist","State":"closed","Body":"### Version\r\n2.6.3\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/shenron/xmykud6z/29/](https://jsfiddle.net/shenron/xmykud6z/29/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI have component and sub component. I want to pass slot from the parent to a child.\r\nIn this example I have `v-modal-confirm` and `v-modal`  both can display a `title` thanks to a prop or with slot.\r\n\r\nIn the line 2 of my html demo, I use a `title` prop without slot. This slot seems to be created anyway, because the default behavior to print the title in `v-modal`  is not called.\r\n\r\n### What is expected?\r\nThe default print of the slot in the `v-modal` should be visible\r\n\r\n### What is actually happening?\r\nNothing is printed\r\n\r\n---\r\nIt works with the deprecated syntax.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9452","RelatedDescription":"Closed issue \"v-slot not used seems to exist\" (#9452)"},{"Id":"407703314","IsPullRequest":false,"CreatedAt":"2019-02-07T13:36:23","Actor":"danyadev","Number":"9454","RawContent":null,"Title":"Add beforeDeactivated hook","State":"open","Body":"### What problem does this feature solve?\r\nI use :key and keep-alive tag to display chats. And in order to maintain the position of the scroll when switching between chat rooms, I need to save the scrollTop when the hook is deactivated and put it on the element when the hook is activated. But the deactivated hook is already called when the element has been removed from the DOM, so I needed a new hook - beforeDeactivated.\r\n\r\nSeriously, this hook is needed just like the others before* hooks.\r\n\r\n### What does the proposed API look like?\r\nHere, I think, everything is clear. Simple hook.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9454","RelatedDescription":"Open issue \"Add beforeDeactivated hook\" (#9454)"},{"Id":"407693661","IsPullRequest":false,"CreatedAt":"2019-02-07T13:31:25","Actor":"StephenChips","Number":"9453","RawContent":null,"Title":"cn.vuejs.org response blank page.","State":"closed","Body":"### Version\r\n2.6.3\r\n\r\n### Reproduction link\r\n[https://cn.vuejs.org/v2/guide/class-and-style.html](https://cn.vuejs.org/v2/guide/class-and-style.html)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJust to go the web page.\r\n\r\n### What is expected?\r\nFix it.\r\n\r\n### What is actually happening?\r\nI cannot visit documents.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9453","RelatedDescription":"Closed issue \"cn.vuejs.org response blank page.\" (#9453)"},{"Id":"407592588","IsPullRequest":false,"CreatedAt":"2019-02-07T10:06:12","Actor":"whats0n","Number":"9451","RawContent":null,"Title":"Can't find closest element when element is destroyed","State":"closed","Body":"### Version\r\n2.6.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/59oseLa1/2/](https://jsfiddle.net/59oseLa1/2/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nhttps://jsfiddle.net/59oseLa1/2/ - link with bug (Vue version: 2.6.2)\r\nhttps://jsfiddle.net/qh7tyad0/1/ - link without bug (Vue version: 2.5.22)\r\n\r\nJust click on button and look at console logs to see different results...\r\n\r\n### What is expected?\r\n1. itemChildClick => closest = div.item\r\n2. itemClick => closest = div.item\r\n\r\n### What is actually happening?\r\n1. itemChildClick => closest = div.item\r\n2. itemClick => closest = null\r\n\r\n---\r\nWhy is it happen in Vue 2.6.2 and why is it not happen in Vue 2.5.22?\r\nFor example:\r\nWe have modal window with dynamic autocomplete list\r\n\r\n```\r\n<div class=\"modal\" @click=\"closeOnClick\">\r\n  <div class=\"modal__container\"><Autocomplete/><div>\r\n</div>\r\n```\r\n\r\nIn our method we have\r\n\r\n```\r\ncloseOnClick (e) {\r\n  if (!e.target.closest('.modal-container')) this.close()\r\n}\r\n```\r\n\r\n'this.close' will close our modal window\r\n\r\nWith Vue 2.5.22 - we can select item from autocomplete\r\nWith Vue 2.6.2 - when we select an item we close our modal window because of 'closest of item !== modal__container'\r\nCan you explain how we can solve this problem? (we can't use v-show because items builds by some value or etc. - dynamic content)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9451","RelatedDescription":"Closed issue \"Can't find closest element when element is destroyed\" (#9451)"},{"Id":"407489084","IsPullRequest":true,"CreatedAt":"2019-02-07T00:52:07","Actor":"JakeConnors376W","Number":"9450","RawContent":null,"Title":"chore: make documentation clearer","State":"closed","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: make documentation clearer by removing redundant words.\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9450","RelatedDescription":"Closed or merged PR \"chore: make documentation clearer\" (#9450)"},{"Id":"407394588","IsPullRequest":false,"CreatedAt":"2019-02-06T20:57:37","Actor":"yyx990803","Number":"9448","RawContent":null,"Title":"Event blocking in multi-page Nw.js / Electron applications","State":"closed","Body":"https://github.com/vuejs/vue/issues/9446#issuecomment-461134977\r\n\r\nEvents in different pages in a multi-page shell app would have different timestamp starting points since they are relative to page load.","Url":"https://github.com/vuejs/vue/issues/9448","RelatedDescription":"Closed issue \"Event blocking in multi-page Nw.js / Electron applications\" (#9448)"},{"Id":"407400594","IsPullRequest":false,"CreatedAt":"2019-02-06T20:12:51","Actor":"tcastelly","Number":"9449","RawContent":null,"Title":"multiple v-slot with same name broken","State":"closed","Body":"### Version\r\n2.6.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/0e17wumz/](https://jsfiddle.net/0e17wumz/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWith new syntax it's not possible to use multiple `v-slot` with same name.\r\n\r\n### What is expected?\r\nDisplay the slots\r\n\r\n### What is actually happening?\r\nNothing is displayed\r\n\r\n---\r\n- With deprecated `slot` it works: https://jsfiddle.net/odvyztgw/\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9449","RelatedDescription":"Closed issue \"multiple v-slot with same name broken\" (#9449)"},{"Id":"407335997","IsPullRequest":false,"CreatedAt":"2019-02-06T20:04:43","Actor":"karljacques","Number":"9446","RawContent":null,"Title":"Firefox 52 ESR click handlers do not work","State":"closed","Body":"### Version\r\n2.6.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/pzumygcq//](https://jsfiddle.net/pzumygcq/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n * Download and install Firefox 52 ESR. Unsure if it is broken on other old versions of Firefox. \r\n* Click on show button (this is important, click handlers work if they are bound when `currentFlushTimestamp` is 0). \r\n * This will show a second button,  this button will increment the `count` variable every time it is clicked, except Firefox52 ESR\r\n\r\n### What is expected?\r\n`count` variable will increment\r\n\r\n### What is actually happening?\r\nClick handler is not firing. I've done some digging into the vue.js code and it seems due to this part of the code being incorrect, or at least the timestamp Firefox has for the event is incorrect:\r\n\r\n`handler = original._wrapper = function (e) {\r\n        if (e.timeStamp >= attachedTimestamp) {\r\n          return original.apply(this, arguments)\r\n        }\r\n      };`\r\n\r\nOn this version of Firefox,  e.timeStamp is less than attachedTimestamp\r\n\r\n---\r\nOur application is built on vue.js but we have a lot of users who use Firefox 52 ESR for it's compatibility with Silverlight and upgrading is not an option right now.\r\n\r\nSome further things I found when digging: \r\n`document.createEvent('Event').timeStamp` returns `1549471218936000` which means that vue will think that the event time is based on Date.now() rather than performance.now().\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9446","RelatedDescription":"Closed issue \"Firefox 52 ESR click handlers do not work\" (#9446)"},{"Id":"407327174","IsPullRequest":false,"CreatedAt":"2019-02-06T18:58:37","Actor":"DotNetGit","Number":"9444","RawContent":null,"Title":"Dynamic props not working with slots after 2.6x update.","State":"closed","Body":"### Version\r\n2.6.2\r\n\r\n### Reproduction link\r\nno link\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate component with slot, add dynamic prop \"itemName\" to slot like this:\r\n\r\n<slot :[itemName]=\"item\" name=\"item-content\" />\r\n\r\n### What is expected?\r\nDynamic prop is binded to the slot.\r\n\r\n### What is actually happening?\r\nDynamic prop is not binded to the slot.\r\n\r\n---\r\nI used the syntax below for a long time until the update 2.62:\r\n\r\n`<slot :[itemName]=\"item\" name=\"item-content\" />`\r\n\r\nAfter the update it is not working, I had to change it across all projects to the following:\r\n\r\n`<slot v-bind=\"{ [itemName]: item }\" name=\"item-content\" />`\r\n\r\nBut the docs from [here](https://github.com/vuejs/rfcs/blob/master/active-rfcs/0003-dynamic-directive-arguments.md#detailed-design) told that the first snippet has a valid syntax.\r\n\r\nWhat is wrong with dynamic props or slots or maybe with them both or just this syntax do not work anymore?\r\n\r\nRegards.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9444","RelatedDescription":"Closed issue \"Dynamic props not working with slots after 2.6x update.\" (#9444)"},{"Id":"407379754","IsPullRequest":false,"CreatedAt":"2019-02-06T18:52:02","Actor":"yekver","Number":"9447","RawContent":null,"Title":"Ability to access context from serverPrefetch","State":"open","Body":"### What problem does this feature solve?\r\nAfter vue 2.6 was released and serverPrefetch hook was introduces I lost a possibility to update `httpCode` during SSR if there was a data fetching failure.\r\n\r\n### What does the proposed API look like?\r\nProvide access to `context` from the `serverPrefetch` hook.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9447","RelatedDescription":"Open issue \"Ability to access context from serverPrefetch\" (#9447)"},{"Id":"407309334","IsPullRequest":false,"CreatedAt":"2019-02-06T16:32:17","Actor":"IlyaKhD","Number":"9443","RawContent":null,"Title":"Junk props in $scopedSlots","State":"closed","Body":"### Version\r\n2.6.0\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/5xx3jz48qn](https://codesandbox.io/s/5xx3jz48qn)\r\n\r\n### Steps to reproduce\r\n- follow the codesandbox link attached\r\n- open the App.vue\r\n- see lines 13, and 19\r\n- see console output\r\n\r\n### What is expected?\r\n$scopedSlots contains slot functions only (or empty if there are no slots at all)\r\n\r\n### What is actually happening?\r\n$scopedSlots has **_normalized** and **$stable** fields\r\n\r\n---\r\nIf these special props added to the $scopedSlots by intention - where can I find documentation on them?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9443","RelatedDescription":"Closed issue \"Junk props in $scopedSlots\" (#9443)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"408448967","IsPullRequest":false,"CreatedAt":"2019-02-09T17:00:16","Actor":"stevenadams","Number":"2611","RawContent":null,"Title":"Support for activeStyle and exactActiveStyle","State":"open","Body":"### What problem does this feature solve?\r\nComing from React and using React Router, there is support for activeStyle property. Like activeClass but a style object of styles to apply to an element when active. This helps for things like theming where the theme color is plucked from store and needs to be applied to an element when active.\r\n\r\n### What does the proposed API look like?\r\ntakes a prop activeStyle and exactActiveStyle, both type object, works identically to activeClass and exactActiveClass\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2611","RelatedDescription":"Open issue \"Support for activeStyle and exactActiveStyle\" (#2611)"},{"Id":"408321425","IsPullRequest":false,"CreatedAt":"2019-02-08T21:31:14","Actor":"CarlosOnline","Number":"2610","RawContent":null,"Title":"Dynamic route doesn't work if route parameter contains a dot followed by text.","State":"closed","Body":"### Version\r\n2.5.1\r\n\r\n### Reproduction link\r\n[https://github.com/CarlosOnline/VueRouterBug.git](https://github.com/CarlosOnline/VueRouterBug.git)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate a route with dynamic route parameter **:lab**\r\n\r\n* Start app\r\n* Navigate to MyView/**Foo** which works\r\n* Navigate to MyVew/**Number.1234** does not work\r\n\r\n\r\n\r\n```\r\n{\r\n    path: '/MyView/:lab',\r\n    component: MyView,\r\n    display: 'MyView',\r\n    meta: { title: 'MyView' }\r\n},\r\n```\r\n\r\n\r\n### What is expected?\r\nNavigate to route with dynamic parameter when no \r\n\r\n### What is actually happening?\r\nRoute is not found\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2610","RelatedDescription":"Closed issue \"Dynamic route doesn't work if route parameter contains a dot followed by text.\" (#2610)"},{"Id":"408298160","IsPullRequest":true,"CreatedAt":"2019-02-08T19:46:53","Actor":"lyonsbp","Number":"2609","RawContent":null,"Title":"Add example showing how to get HTML5 history mode working with Flask.","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2609","RelatedDescription":"Open PR \"Add example showing how to get HTML5 history mode working with Flask.\" (#2609)"},{"Id":"408267010","IsPullRequest":false,"CreatedAt":"2019-02-08T19:10:04","Actor":"jbmikk","Number":"2608","RawContent":null,"Title":"Improve function mode props with route-view attributes","State":"closed","Body":"### What problem does this feature solve?\r\nWhen passing props to the `router-view` all routed components are forced to implement the same interface if they want to use the data provided by the `router-view`.\r\n\r\nWe usually use the props as a way of avoiding coupling the components to the router. The components simply receive the props and they are not aware they come from the URL.\r\n\r\nI think it would be useful if we could decouple the components from the router-view, just the way we decouple them from the URL.\r\nI think being able to map the router-view attributes to the desired component props is more appropriate and lets our components expose the interface they need to expose, rather than the interface imposed by the router-view.\r\n\r\nI think the right place for solving this problem is the route's function mode props.\r\n\r\n### What does the proposed API look like?\r\nThe router view passes down a couple of parameters as usual:\r\n\r\n    <router-view :param1=\"value1\" :param2=\"value2\"></router-view>\r\n\r\nThe function maps the props both from the route's URL and also the `router-view` attributes.\r\nIt can also resolve conflict names between URL parameters and view parameters and determine which parameter is more important in each case.\r\n\r\n    {\r\n      path: '/test',\r\n      component: Test,\r\n      props: (route, view) => {\r\n        return {\r\n          query: route.query.q\r\n          paramA: view.attrs.param1,\r\n          paramB: view.attrs.param2 || route.query.param2\r\n        }\r\n      }\r\n    } \r\n\r\nI have done some tests with the router's code and it seems to work fine.\r\n\r\nI would like to have some feedback from the community. It is a fairly simple change. We should make sure this doesn't have any unwanted side effects, it's backwards compatible and there isn't a better way to do it.\r\n\r\nHere's a branch with a test I made and it worked for me: https://github.com/jbmikk/vue-router/commits/view-parameter-for-props\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2608","RelatedDescription":"Closed issue \"Improve function mode props with route-view attributes\" (#2608)"},{"Id":"408176071","IsPullRequest":false,"CreatedAt":"2019-02-08T14:30:15","Actor":"rocka","Number":"2607","RawContent":null,"Title":"abstract mode's router.back() was aborted when there are 2 same routes in history stack","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/Rocka/bhu5vkn8/3/](https://jsfiddle.net/Rocka/bhu5vkn8/3/)\r\n\r\n### Steps to reproduce\r\n1. Click `10. artist`\r\n2. Hit button `togglePlayer`\r\n3. Click `10. artist`\r\n4. Hit button `back` 2 times\r\n\r\n### What is expected?\r\nroute back to `/search`\r\n\r\n### What is actually happening?\r\nnothing happend, route and route-view do not change\r\n\r\n---\r\n'cause I didn't figure out how to determine wether the route is going forward or backword, I decided to use `abstract` mode and traverse the router stack to find out which direction the route is going, then hit into this bug. The demo works fine if change router's mode to `hash` or `history`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2607","RelatedDescription":"Open issue \"abstract mode's router.back() was aborted when there are 2 same routes in history stack\" (#2607)"},{"Id":"404807174","IsPullRequest":true,"CreatedAt":"2019-02-08T07:05:06","Actor":"kazupon","Number":"2602","RawContent":null,"Title":"update ja docs","State":"closed","Body":"ping @ktsn \r\nCould you review it please? 🙏 ","Url":"https://github.com/vuejs/vue-router/pull/2602","RelatedDescription":"Closed or merged PR \"update ja docs\" (#2602)"},{"Id":"407467218","IsPullRequest":false,"CreatedAt":"2019-02-06T22:49:21","Actor":"ronald-d-rogers","Number":"2606","RawContent":null,"Title":"SSR memory leak in poll method","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/ronald_d_rogers/5mxdpkLj/2/](https://jsfiddle.net/ronald_d_rogers/5mxdpkLj/2/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nMake `router-view` appearance conditional based on some variable (or simply have it not appear):\r\n```html\r\n<div id=\"app\">\r\n  <div v-if=\"condition\">\r\n    <router-view />\r\n  </div>\r\n</div>\r\n```\r\n\r\nEnsure that the component that matches the route has a `beforeRouteEnter` guard, where a function is passed to the `next(...)` method (e.g. `next(vm => {}`):\r\n```es6\r\nexport default {\r\n  beforeRouteEnter(to, from, next) {\r\n    // Poll happens only if you pass in a function to next(...)\r\n    next(vm => {})\r\n  }\r\n}\r\n```\r\n\r\nVisit that route.\r\n```sh\r\ncurl http://localhost:8080/route\r\n```\r\n\r\nA poll will happen infinitely until `router-view` is created.\r\n\r\nIn a typical SSR application where an app is created per request, it will never be created. \r\nThe end result is a memory leak with an event loop filled with poll's every 16ms.\r\n\r\nIn the reproduction JS Fiddle, a leak occurs every time you press the `SSR Request` button.\r\nIf you set `dontLeak` to true, the leak stops.\r\n\r\nThe leak can be verified in the JS Fiddle by clicking on the `SSR Request` button a few times (say 20 times), opening Chrome Developer Tools, going to the Performance tab, and in the recording looking at the contents of \"Frame\".\r\n\r\n![capture](https://user-images.githubusercontent.com/4047399/52432208-e338da80-2ad7-11e9-9632-7e56eb414e3b.JPG)\r\n\r\nHere is an example repo as well:\r\nhttps://github.com/ronald-d-rogers/vue-router-ssr-memory-leak\r\n\r\n### What is expected?\r\nA new poll does not recurse infinitely for every SSR request.\r\n\r\n### What is actually happening?\r\nA new poll recurses infinitely for every SSR request.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2606","RelatedDescription":"Open issue \"SSR memory leak in poll method\" (#2606)"},{"Id":"406924907","IsPullRequest":false,"CreatedAt":"2019-02-05T21:14:03","Actor":"soyersoyer","Number":"2605","RawContent":null,"Title":"Typescript: `Location` interface typing for query should include null","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/guide/essentials/navigation.html](https://router.vuejs.org/guide/essentials/navigation.html)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWhen programmatically navigating on vue router, pass through a dictionary with a param as null. E.g.\r\n\r\n```json\r\n{\r\n  \"foo\": null\r\n}\r\n```\r\n\r\n### What is expected?\r\nTypes are expected to work.\r\nThe url should be ?foo.\r\n\r\n### What is actually happening?\r\nIt works, but with an error:\r\n\r\nType '{ foo: null; }' is not assignable to type 'Dictionary<string | string[]>'.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2605","RelatedDescription":"Closed issue \"Typescript: `Location` interface typing for query should include null\" (#2605)"},{"Id":"406758040","IsPullRequest":false,"CreatedAt":"2019-02-05T12:26:27","Actor":"pikax","Number":"2604","RawContent":null,"Title":"Passing new params to the current route when props=true, doesn't update router-view","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/k50j5wn8or](https://codesandbox.io/s/k50j5wn8or)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- set mode to history\r\n- Add a route with `props: true` \r\n- Add props to that route component\r\n- App.vue beforeMount, add a `router.replace` or `router.push` with a the route `name` and `params` object.\r\n- If the route path is the same as the current route, it won't update the route\r\n\r\n### What is expected?\r\nUpdating the component props down based on params\r\n\r\n### What is actually happening?\r\nroute component defaults props\r\n\r\n---\r\nNot sure if this is the expected behaviour, even using ` <router-view :key=\"$route.fullPath\"></router-view>` doesn't do much because of the `params` don't affect the path.\r\n\r\nEncounter this when sending the app to `Error` page with custom props but when I refreshed was getting the expected values or times no props being passed.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2604","RelatedDescription":"Closed issue \"Passing new params to the current route when props=true, doesn't update router-view\" (#2604)"},{"Id":"405301212","IsPullRequest":false,"CreatedAt":"2019-01-31T15:34:59","Actor":"WisdomEye","Number":"2603","RawContent":null,"Title":"v-if mutating router-link to","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://gist.github.com/WisdomEye/d5b8169550ac06c3062490e51061a1e8](https://gist.github.com/WisdomEye/d5b8169550ac06c3062490e51061a1e8)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJust add an li using v-if, and then try change the value of variable, in the example bellow update start with value 0, I can add a button to increment or decrement it, and get error about mutating :for from router-link.\r\n\r\n\t<li v-if=\"update\" id=\"dashboard-menu-top-updates\">\r\n\t\t<router-link :to=\"{ name: 'Update' }\" :exact=\"$route.name === 'Update'\">Atualizações</router-link>\r\n\t</li>\r\n\r\n### What is expected?\r\nThe expected is render or remove the element without errors about mutating \":to\" from router-link\r\n\r\n### What is actually happening?\r\nThe li is correctly rendered as wished, but make a lot of erros on console about mutating \":to\" from router-link.\r\n\r\nError:\r\n\r\n[Vue warn]: Avoid mutating a prop directly since the value will be overwritten whenever the parent component re-renders. Instead, use a data or computed property based on the prop's value. Prop being mutated: \"to\"\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2603","RelatedDescription":"Closed issue \"v-if mutating router-link to\" (#2603)"},{"Id":"404175057","IsPullRequest":false,"CreatedAt":"2019-01-29T09:25:39","Actor":"avele","Number":"2601","RawContent":null,"Title":"Keep previous component until next mounted","State":"closed","Body":"### What problem does this feature solve?\r\nI want the ability to change the router-view component only when the next one is mounted. For instance, the next router-view component could be mounted separately with ```display: none```, and after the \"mounted\" event I would make the new component visible and destroy the previous component.\r\n\r\nCurrently I can only show a spinner or an overlay while the new component is loading, but I can't keep the previous component on the screen.\r\n\r\nMy usecase is similar to github repository tabs\r\n![github tabs](https://user-images.githubusercontent.com/34437766/51894559-8f384280-23c1-11e9-9637-3fc10ae17fa4.gif)\r\nI want to mimic the standard, non-SPA browser behavior.\r\n\r\n### What does the proposed API look like?\r\nA prop for ```<router-view>,``` perhaps \"preload\" or \"changeOnMounted\".\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2601","RelatedDescription":"Closed issue \"Keep previous component until next mounted\" (#2601)"},{"Id":"403528797","IsPullRequest":true,"CreatedAt":"2019-01-27T15:14:57","Actor":"Alex-Sokolov","Number":"2599","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"ref: https://github.com/vuejs/vue-router/commit/c3e587238a4e6d4e650e762b3442b286fcb9fe36#diff-e3e2a9bfd88566b05001b02a3f51d286","Url":"https://github.com/vuejs/vue-router/pull/2599","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#2599)"},{"Id":"403531058","IsPullRequest":false,"CreatedAt":"2019-01-27T11:32:03","Actor":"rominf","Number":"2600","RawContent":null,"Title":"beforeEnter next callback is not called","State":"closed","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/2ykhv8jq/](https://jsfiddle.net/2ykhv8jq/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate a route with `beforeEnter` handler which calls `next` with a callback function.\r\n\r\nIn jsfiddle.net click the button and check the console.\r\n\r\n### What is expected?\r\n\"Am i called\" and the `vm` should be present. \r\n\r\n### What is actually happening?\r\nLine with \"Am i called\" is not present.\r\n\r\n---\r\nCode borrowed from https://github.com/vuejs/vue-router/issues/737#issuecomment-446565958\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2600","RelatedDescription":"Closed issue \"beforeEnter next callback is not called\" (#2600)"},{"Id":"402747012","IsPullRequest":true,"CreatedAt":"2019-01-24T15:02:10","Actor":"jcoyne","Number":"2598","RawContent":null,"Title":"Update vue-router version to match package.json","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2598","RelatedDescription":"Closed or merged PR \"Update vue-router version to match package.json\" (#2598)"},{"Id":"402626070","IsPullRequest":false,"CreatedAt":"2019-01-24T09:56:40","Actor":"cybermerlin","Number":"2597","RawContent":null,"Title":"hey guys, I have trouble with dynamic imports in routes","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/issues/215#issuecomment-456791509](https://github.com/vuejs/vue-router/issues/215#issuecomment-456791509)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nhttps://github.com/vuejs/vue-router/issues/215#issuecomment-456791509\r\n\r\npls, watch on the screenshot\r\n\r\n### What is expected?\r\ngood work\r\n\r\n### What is actually happening?\r\nnot work\r\n\r\n---\r\nhttps://github.com/vuejs/vue-router/issues/215#issuecomment-456791509\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2597","RelatedDescription":"Closed issue \"hey guys, I have trouble with dynamic imports in routes\" (#2597)"},{"Id":"402529730","IsPullRequest":false,"CreatedAt":"2019-01-24T08:23:24","Actor":"mice33","Number":"2596","RawContent":null,"Title":"Vue-router not work properly when the onload event of window not triggered","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/mice33/router-demo](https://github.com/mice33/router-demo)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1.run dev && visit website  \r\n2.click 'go to h2' link  \r\n3.click 'go back' link, can't go back now when the onload event of window not triggered\r\n\r\n### What is expected?\r\n3.click 'go back' link, can go back\r\n\r\n### What is actually happening?\r\n3.click 'go back' link, can't go back\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->\r\n\r\nSame problem #2320 ","Url":"https://github.com/vuejs/vue-router/issues/2596","RelatedDescription":"Closed issue \"Vue-router not work properly when the onload event of window not triggered\" (#2596)"},{"Id":"402518493","IsPullRequest":false,"CreatedAt":"2019-01-24T07:49:51","Actor":"ovarte","Number":"2594","RawContent":null,"Title":"vue-router and axios 拦截器一起使用 出现的异步问题","State":"closed","Body":"### Version\r\n2.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/jwdtae9u/3/](https://jsfiddle.net/jwdtae9u/3/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n详见JSFiddle。通过后端返回的数据，判断是登录状态或者管理员或者进入维护，或者强制进入公告，但是异步问题，请问怎么解决呢\r\n\r\n### What is expected?\r\n通过后端返回的数据，判断是登录状态或者管理员或者进入维护，或者强制进入公告，但是异步问题，axios 里的next()不生效。请问怎么解决呢\r\n\r\n### What is actually happening?\r\n通过后端返回的数据，判断是登录状态或者管理员或者进入维护，或者强制进入公告，但是异步问题，axios 里的next()不生效。\r\n\r\n---\r\n怎么解决 vue-router和 axios 拦截器 一起使用的问题呢 非常感谢\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2594","RelatedDescription":"Closed issue \"vue-router and axios 拦截器一起使用 出现的异步问题\" (#2594)"},{"Id":"402529161","IsPullRequest":false,"CreatedAt":"2019-01-24T03:41:50","Actor":"mice33","Number":"2595","RawContent":null,"Title":"Vue-router not work properly when the onload event of window not triggered","State":"closed","Body":"Demo: https://github.com/mice33/router-demo\r\n\r\nChrome 70\r\n\r\ncan't from 'h2' page go back 'Hello World' page when the onload event of window not triggered\r\n\r\nsteps:\r\n1. run dev && visit website\r\n2. click 'go to h2' link\r\n3. click 'go back' link, can't go back now when the onload event of window not triggered\r\n\r\nlink #2320 ","Url":"https://github.com/vuejs/vue-router/issues/2595","RelatedDescription":"Closed issue \"Vue-router not work properly when the onload event of window not triggered\" (#2595)"},{"Id":"401790731","IsPullRequest":false,"CreatedAt":"2019-01-22T14:29:48","Actor":"yegorLitvinov","Number":"2593","RawContent":null,"Title":"replaceState Error when path starts with // and scrollBehavior is set","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://github.com/yegorLitvinov/vue-router-bug](https://github.com/yegorLitvinov/vue-router-bug)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSet scrollBehavior property in router config. Put two forward slashes into beginning of the url (e.g. http://localhost:8081//about)\r\n\r\n### What is expected?\r\nNo errors in console\r\n\r\n### What is actually happening?\r\nIn firefox: SecurityError: The operation is insecure.\r\nIn Chrome: Uncaught DOMException: Failed to execute 'replaceState' on 'History': A history state object with URL 'http://about/' cannot be created in a document with origin 'http://localhost:8081' and URL 'http://localhost:8081//about'\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2593","RelatedDescription":"Open issue \"replaceState Error when path starts with // and scrollBehavior is set\" (#2593)"},{"Id":"401651538","IsPullRequest":true,"CreatedAt":"2019-01-22T08:34:55","Actor":"zrh122","Number":"2592","RawContent":null,"Title":"fix(router-view): add condition to see whether the tree is inactive (fix #2552)","State":"open","Body":"close #2552\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2592","RelatedDescription":"Open PR \"fix(router-view): add condition to see whether the tree is inactive (fix #2552)\" (#2592)"},{"Id":"401560199","IsPullRequest":true,"CreatedAt":"2019-01-22T01:15:28","Actor":"Sayegh7","Number":"2591","RawContent":null,"Title":"Warn about root paths without a leading slash (fix #2550)","State":"open","Body":"close #2550\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nThis PR creates the following warning message when a root route exists without a leading slash:\r\n<img width=\"583\" alt=\"screen shot 2019-01-22 at 3 12 15 am\" src=\"https://user-images.githubusercontent.com/13800170/51506192-b2785600-1df3-11e9-8ef0-7607ac68aa2b.png\">\r\n\r\nThis facilitates the debugging process as the current behavior does not generate any warnings or errors.","Url":"https://github.com/vuejs/vue-router/pull/2591","RelatedDescription":"Open PR \"Warn about root paths without a leading slash (fix #2550)\" (#2591)"},{"Id":"401548570","IsPullRequest":true,"CreatedAt":"2019-01-22T00:02:47","Actor":"zigomir","Number":"2590","RawContent":null,"Title":"feat: add browser ESM build","State":"open","Body":"POC\r\n\r\nfixes https://github.com/vuejs/vue-router/issues/2589\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2590","RelatedDescription":"Open PR \"feat: add browser ESM build\" (#2590)"},{"Id":"401532763","IsPullRequest":false,"CreatedAt":"2019-01-21T22:37:34","Actor":"zigomir","Number":"2589","RawContent":null,"Title":"Browser ES module build","State":"open","Body":"### What problem does this feature solve?\r\nNow with https://github.com/vuejs/vue/pull/7110 in place and https://github.com/vuejs/vuex/pull/1401 we should probably expose `vue-router` ES module build (minified and non–minifed) so that develpers can use main three vue libraries with `<script type=\"module>` and without any build step.\r\n\r\nWould you merge a PR that solves that?\r\n\r\n\r\n### What does the proposed API look like?\r\nNo changes\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2589","RelatedDescription":"Open issue \"Browser ES module build\" (#2589)"},{"Id":"401382250","IsPullRequest":true,"CreatedAt":"2019-01-21T14:39:41","Actor":"pfeiferbit","Number":"2588","RawContent":null,"Title":"docs: add descriptions for parseQuery / stringifyQuery","State":"open","Body":"This clears up what the implementor of these functions has to expect.\r\n\r\n---\r\n\r\nStumbled across this while trying to use the [qs](https://www.npmjs.com/package/qs) package for `parseQuery` and `stringifyQuery` since I work with a PHP backend that relies on `foo[bar][baz]=qux` syntax with a strict RFC-3986 encoding.\r\n\r\nWording could probably be better since English ain't my primary language.\r\n\r\nGreetings","Url":"https://github.com/vuejs/vue-router/pull/2588","RelatedDescription":"Open PR \"docs: add descriptions for parseQuery / stringifyQuery\" (#2588)"},{"Id":"401250071","IsPullRequest":true,"CreatedAt":"2019-01-21T09:53:43","Actor":"bbbbx","Number":"2587","RawContent":null,"Title":"docs: make title more understandable","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\nThe title does not match the body description.\r\n","Url":"https://github.com/vuejs/vue-router/pull/2587","RelatedDescription":"Closed or merged PR \"docs: make title more understandable\" (#2587)"},{"Id":"401127483","IsPullRequest":true,"CreatedAt":"2019-01-20T18:53:21","Actor":"Aferz","Number":"2586","RawContent":null,"Title":"feat(transition): Using router push/replace instead of private history functions","State":"open","Body":"I've found myself overriding the main Router to be able to control the `.back` method to prevent the user clicks on my app button a leaves the application. Check this example:\r\n\r\n```javascript\r\nclass Router extends VueRouter {\r\n  constructor (...args) {\r\n    super(...args)\r\n\r\n    this.counter = 0\r\n  }\r\n\r\n  push (location, ...args) {\r\n    super.push(location, ...args)\r\n\r\n    this.counter++\r\n  }\r\n\r\n  go (n) {\r\n    if (this.counter + n < 0) {\r\n      super.replace({ name: 'home.feed' })\r\n    } else {\r\n      super.go(n)\r\n    }\r\n\r\n    this.counter += n\r\n  }\r\n}\r\n```\r\n\r\nThanks to this approach, product links can be shared without worring the back button that linked pages contain will destroy the application once pressed. (The same behaviour as Twitter PWA)\r\n\r\n---\r\n\r\nWhat I mean is the `beforeEach` guard is not respecting the overriden methods (push, replace, etc...), because it uses the `history` driver directly when it has to redirect to a route, instead of using the router instance.\r\n\r\nThis could be taken as a _Breaking Change_ for users like me that decided to wrap the router in their own classes, but I honestly think that this usage of the router is outside of the scope of the vue-router maintainers.\r\n\r\nWhat do you all think?","Url":"https://github.com/vuejs/vue-router/pull/2586","RelatedDescription":"Open PR \"feat(transition): Using router push/replace instead of private history functions\" (#2586)"},{"Id":"400645992","IsPullRequest":false,"CreatedAt":"2019-01-18T09:43:00","Actor":"zpcalan","Number":"2585","RawContent":null,"Title":"vue-router 调用push跳转路由后，界面的js动画不生效，要手动刷新下界面才会生效","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2585","RelatedDescription":"Closed issue \"vue-router 调用push跳转路由后，界面的js动画不生效，要手动刷新下界面才会生效\" (#2585)"},{"Id":"400532266","IsPullRequest":false,"CreatedAt":"2019-01-18T08:36:39","Actor":"igorveremsky","Number":"2584","RawContent":null,"Title":"router-view mounted lifehook?","State":"closed","Body":"### What problem does this feature solve?\r\nI use preloader at my spa and want to hide it only if page DOM ready, for not clone code to mounted lifehook of all my routes components will be good to have general mounted lifehook for `router-view` \r\n\r\n### What does the proposed API look like?\r\n```js\r\nRouter.viewMounted(() => {\r\n\t// do some on router view mounted\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2584","RelatedDescription":"Closed issue \"router-view mounted lifehook?\" (#2584)"},{"Id":"400231452","IsPullRequest":true,"CreatedAt":"2019-01-17T11:58:02","Actor":"SetSplin","Number":"2583","RawContent":null,"Title":"fix(create-matcher): \"cannot assign to read only property path\"","State":"closed","Body":"In create-matcher.js in match function location was marked as constant. That course as error described here (https://github.com/vuejs/vue-router/issues/1381)\r\n","Url":"https://github.com/vuejs/vue-router/pull/2583","RelatedDescription":"Closed or merged PR \"fix(create-matcher): \"cannot assign to read only property path\"\" (#2583)"},{"Id":"400009896","IsPullRequest":false,"CreatedAt":"2019-01-16T21:39:40","Actor":"trainiac","Number":"2582","RawContent":null,"Title":"Ability to set and reference redirectParams","State":"open","Body":"### What problem does this feature solve?\r\nIn order to issue a 301 redirect vs a 302 redirect in vue router there is no easy way to do that in userland.  Currently you have to write a custom redirect function and throw an error with the information that you need.\r\n\r\n```\r\n{ \r\n  path: '/old-path': \r\n  redirect() => {\r\n    const error = new Error('Permanent Redirect')\r\n    error.redirect = {\r\n      code: 301,\r\n      url: '/new-path',\r\n    }\r\n    throw error\r\n  }\r\n}\r\n```\r\n\r\n### What does the proposed API look like?\r\nIn your redirects you can define\r\n```js\r\n{ \r\n  path: '/old-path': \r\n  redirect: '/new-path', \r\n  redirectParams: { \r\n    responseCode: 301 \r\n  } \r\n}\r\n```\r\n\r\nAnd in a `beforeEach` handler you could reference the meta info\r\n```\r\nrouter.beforeEach((to, from, next) => {\r\n   to.redirectedFrom === '/old-path'\r\n   to.redirectParams.responseCode === 301\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2582","RelatedDescription":"Open issue \"Ability to set and reference redirectParams\" (#2582)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"405256578","IsPullRequest":true,"CreatedAt":"2019-02-10T09:25:00","Actor":"Alex-Sokolov","Number":"1499","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"ref: https://github.com/vuejs/vuex/pull/1484","Url":"https://github.com/vuejs/vuex/pull/1499","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1499)"},{"Id":"407854625","IsPullRequest":false,"CreatedAt":"2019-02-07T19:14:43","Actor":"ianwalter","Number":"1504","RawContent":null,"Title":"watch instance method behavior is inconsistent between Vue and Vuex","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://github.com/ianwalter/vuex-issue](https://github.com/ianwalter/vuex-issue)\r\n\r\n### Steps to reproduce\r\n1. Register a watcher in a component with a callback function that prints the new data value and old data value\r\n2. Register a watcher on a store instance with a callback function that prints the new data value and old data value\r\n\r\n### What is expected?\r\nThat when both watchers are triggered, both of them print the new data value and the old data value.\r\n\r\n### What is actually happening?\r\nThe component watcher prints the new data value and old data value, while the store watcher only prints the new data value (state) and an empty object (getters, if you haven't defined any). \r\n\r\n---\r\nBefore reading the Vuex documentation more closely, I assumed that this method behaved in the same way as it does in a component. Returning getters to the store watcher callback seems to me like returning computed in the component watcher callback. I think the old state data is more valuable too, especially since it could provide the initial state as the old data, something you can't get in an alternative way (like subscribing to mutations which only gives you the new state as well).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1504","RelatedDescription":"Open issue \"watch instance method behavior is inconsistent between Vue and Vuex\" (#1504)"},{"Id":"407825529","IsPullRequest":false,"CreatedAt":"2019-02-07T17:59:59","Actor":"ianwalter","Number":"1503","RawContent":null,"Title":"Add a subscribeModule instance method","State":"open","Body":"### What problem does this feature solve?\r\nVuex doesn't provide a way for plugins to be notified when modules are added to the store dynamically through `registerModule`. This means that there can be changes in the state tree that are impossible for plugins to know about through the existing subscription methods like `subscribe` and `subscribeAction`. A common use case would be a plugin that saves the Vuex state to local storage. When a module is added through `registerModule`, the local storage plugin will not be able to store it's initial state to local storage.\r\n\r\n### What does the proposed API look like?\r\n`subscribeModule(handler: Function)`\r\n\r\nSubscribe to `registerModule`/`unregisterModule` events. The handler is called with a module object and a namespace when the module is registered. The module object is null when unregistered:\r\n\r\n```js\r\nstore.subscribeModule((mod, namespace) => {\r\n  if (mod) {\r\n    console.log(mod)\r\n  } else {\r\n    console.log(namespace)\r\n  }\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1503","RelatedDescription":"Open issue \"Add a subscribeModule instance method\" (#1503)"},{"Id":"407229198","IsPullRequest":false,"CreatedAt":"2019-02-06T13:13:41","Actor":"SumNeuron","Number":"1502","RawContent":null,"Title":"DOCUMENTATION REQUEST: how to publish vuex module on npm. how to publish sfc component library and vuex module on npm","State":"open","Body":"### What problem does this feature solve?\r\nVuex modules, in theory, are divorced of their vue components which access them. One could take the module, register it and (re)make components to utilize the vuex module as desired. However, in (perhaps poor) practice, vuex modules and vue components are often made concurrently; namely, the components serve as the api to the store and it is expected that inclusion of the vue components come _with_ the vuex module.\r\n\r\nHowever turning a vuex module and library of sfcs into reusable chunks does not seem to be straight forward.\r\n\r\nThe expected behavior would be using the vue-cli to create a new project with a vuex store.\r\nthe store would be moved to its own directory:\r\n\r\n```\r\nsrc/\r\n-- store/\r\n---- modules/\r\n------ moduleA/\r\n-------- actions.js\r\n-------- state.js\r\n-------- mutations.js\r\n-------- getters.js\r\n-------- store.js \r\n...\r\n```\r\n\r\nAll components under `src/components` (or nested directories) would be exposed so users could import each constitute component\r\nAll modules under `src/store/modules` would be exposed so users could just import the module if desired \r\n\r\n\r\n### What does the proposed API look like?\r\n```\r\n# install library\r\nnpm install vuex-vue-sfc-library\r\n\r\n# inside app.vue or some other component\r\n// import the vuex modules and components that access the modules \r\nimport {moduleA, nestedComponentB, conglomerateComponentA} from 'vuex-vue-sfc-library\r\n\r\nexport default {\r\n    components: {\r\n        nestedComponentB, conglomerateComponentA\r\n    },\r\n    created() {\r\n        this.$store.registerModule('moduleA', moduleA)\r\n    }\r\n\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1502","RelatedDescription":"Open issue \"DOCUMENTATION REQUEST: how to publish vuex module on npm. how to publish sfc component library and vuex module on npm\" (#1502)"},{"Id":"406055885","IsPullRequest":true,"CreatedAt":"2019-02-03T05:46:08","Actor":"tuxinghuan","Number":"1501","RawContent":null,"Title":"docs(zh):fix a small typo","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1501","RelatedDescription":"Open PR \"docs(zh):fix a small typo\" (#1501)"},{"Id":"405681673","IsPullRequest":false,"CreatedAt":"2019-02-01T12:29:01","Actor":"dcrystalj","Number":"1500","RawContent":null,"Title":"Confusing namespaced api","State":"open","Body":"### What problem does this feature solve?\r\nThe most confusing thing when using namespaced vuex is inconsistant api with state and getters.\r\n\r\nExample:\r\nto access state \r\n`this.$store.state.user.name`\r\n\r\nto access getter\r\n`this.$store.getters['user/fullName']`\r\n\r\nThis is so confusing for me and my coworkers. Is there reason to have this inconsistency?\r\n\r\n\r\n\r\nProblem occurs when you try to watch getters\r\nexample:\r\n```\r\nwatch: {\r\n  '$store.state.user.name': {\r\n    handler(name) {\r\n      console.log(name)\r\n    },\r\n  },\r\n  '$store.getters[user/fullName]': { // not working\r\n    handler(fullName) {\r\n      console.log(fullName)\r\n    },\r\n  },\r\n}\r\n```\r\nCurrent solution Is to use mapGetters() helper for getters only. Why? because of weird api.\r\nPlease note that we try to avoid mapGetters, mapState helpers... due to explicitly in large app\r\n\r\n### What does the proposed API look like?\r\nAdd api for getters same as is for state.\r\n\r\nExample:\r\n`$store.gettters.user.fullName`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1500","RelatedDescription":"Open issue \"Confusing namespaced api\" (#1500)"},{"Id":"404720187","IsPullRequest":true,"CreatedAt":"2019-01-31T13:42:34","Actor":"kazupon","Number":"1497","RawContent":null,"Title":"update ja docs","State":"closed","Body":"/ping @ktsn  🙏 ","Url":"https://github.com/vuejs/vuex/pull/1497","RelatedDescription":"Closed or merged PR \"update ja docs\" (#1497)"},{"Id":"398365001","IsPullRequest":true,"CreatedAt":"2019-01-31T13:11:02","Actor":"fsblemos","Number":"1484","RawContent":null,"Title":"docs: complement preserveState information","State":"closed","Body":"It is not very clear the purpose of `preserveState` option in the docs. \r\n\r\n[This comment](https://github.com/vuejs/vuex/issues/1130#issuecomment-356612119) clarified the behavior, so I included in a dedicated `preserveState` subsection.","Url":"https://github.com/vuejs/vuex/pull/1484","RelatedDescription":"Closed or merged PR \"docs: complement preserveState information\" (#1484)"},{"Id":"397545948","IsPullRequest":true,"CreatedAt":"2019-01-31T11:18:22","Actor":"periscuelo","Number":"1481","RawContent":null,"Title":"docs: Update to version 3.1.0 [pt-br]","State":"closed","Body":"I made one update to be equal to english version explanation.\r\n@ktsn Can you review / merge it?\r\n\r\nThanks","Url":"https://github.com/vuejs/vuex/pull/1481","RelatedDescription":"Closed or merged PR \"docs: Update to version 3.1.0 [pt-br]\" (#1481)"},{"Id":"404724217","IsPullRequest":false,"CreatedAt":"2019-01-30T11:22:55","Actor":"Yxjhasadream","Number":"1498","RawContent":null,"Title":"How to assign a value to the state ，I tried it ,  but there seems to be something wrong","State":"closed","Body":"I want to assign a value to the state under the root instance, but it seems to have failed, and does anyone know where it's wrong to operate? \r\n(我想在根实例下给state赋值，但是好像失败了，有人知道是哪儿操作不对吗？ )\r\n\r\n![image](https://user-images.githubusercontent.com/35222088/51978122-37363480-24c4-11e9-8d15-18e3cfbe20d0.png)\r\n\r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1498","RelatedDescription":"Closed issue \"How to assign a value to the state ，I tried it ,  but there seems to be something wrong\" (#1498)"},{"Id":"395016740","IsPullRequest":true,"CreatedAt":"2019-01-30T09:31:05","Actor":"angeliski","Number":"1476","RawContent":null,"Title":"docs: Removed english from translated guide [pt-br]","State":"closed","Body":"Hi!\r\nI noticed a english paragraph forgotten  in the guide translated,\r\nthe pr is just to fix.","Url":"https://github.com/vuejs/vuex/pull/1476","RelatedDescription":"Closed or merged PR \"docs: Removed english from translated guide [pt-br]\" (#1476)"},{"Id":"404307621","IsPullRequest":true,"CreatedAt":"2019-01-30T09:09:02","Actor":"Jinjiang","Number":"1495","RawContent":null,"Title":"docs(zh): new subscribeAction options","State":"closed","Body":"https://github.com/vuejs/vuex/compare/da22a6e...48263f8\r\n/ping @justineo","Url":"https://github.com/vuejs/vuex/pull/1495","RelatedDescription":"Closed or merged PR \"docs(zh): new subscribeAction options\" (#1495)"},{"Id":"404581823","IsPullRequest":true,"CreatedAt":"2019-01-30T03:09:09","Actor":"magicdawn","Number":"1496","RawContent":null,"Title":"support jsdelivr npm cdn like vue package does","State":"open","Body":"see difference here:\r\n\r\n- https://cdn.jsdelivr.net/npm/vue/package.json\r\n- https://cdn.jsdelivr.net/npm/vuex/package.json","Url":"https://github.com/vuejs/vuex/pull/1496","RelatedDescription":"Open PR \"support jsdelivr npm cdn like vue package does\" (#1496)"},{"Id":"403435496","IsPullRequest":false,"CreatedAt":"2019-01-26T12:03:22","Actor":"VanquisherMe","Number":"1494","RawContent":null,"Title":"解决 SSR 场景中 cookie 穿透 问题","State":"open","Body":"### What problem does this feature solve?\r\nSSR 场景中 cookie 穿透问题，在服务器入口，创建store的时候可以添加，自定函数，这样我就可以判断是服务端还是客户端来决定 异步请求的逻辑，并且在actions 第一个参数 context，添加上这个自定义函数的对象，就可以在store actions的时候拿到这个请求函数，如此可以完美解决 SSR 场景中 服务端无非带cookie 的问题\r\n\r\n### What does the proposed API look like?\r\n new Vuex.Store({\r\n    method:{\r\n        request(){\r\n           ...请求函数\r\n        }\r\n    }\r\n  });\r\n\r\nactions:{\r\n    getuser({ method }){  method.request(\"url\") }\r\n}\r\n\r\nthis.$store.method.request(\"url\")\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1494","RelatedDescription":"Open issue \"解决 SSR 场景中 cookie 穿透 问题\" (#1494)"},{"Id":"402616222","IsPullRequest":false,"CreatedAt":"2019-01-24T09:32:52","Actor":"super918180","Number":"1493","RawContent":null,"Title":"I can't export all state from namespace module, I can only export one by one.","State":"open","Body":"### What problem does this feature solve?\r\nuse mapState with namespace and no state params expprt all state in namespace\r\n\r\n### What does the proposed API look like?\r\nmapState('namespace')\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1493","RelatedDescription":"Open issue \"I can't export all state from namespace module, I can only export one by one.\" (#1493)"},{"Id":"402611473","IsPullRequest":false,"CreatedAt":"2019-01-24T09:20:54","Actor":"super918180","Number":"1492","RawContent":null,"Title":"I can't  export all state from namespace module, I can only export one by one.","State":"closed","Body":"\r\n![image](https://user-images.githubusercontent.com/20025505/51667964-18372e80-1ffc-11e9-92ee-298f979fd8c0.png)\r\nI can't  export all state from namespace module, I can only export one by one.","Url":"https://github.com/vuejs/vuex/issues/1492","RelatedDescription":"Closed issue \"I can't  export all state from namespace module, I can only export one by one.\" (#1492)"},{"Id":"402347190","IsPullRequest":false,"CreatedAt":"2019-01-23T17:22:06","Actor":"GbAlien","Number":"1491","RawContent":null,"Title":"Optional attribute declared as required on typescript declaration","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/dev/types/index.d.ts](https://github.com/vuejs/vuex/blob/dev/types/index.d.ts)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nTest a mutation without payload on typescript\r\n\r\n### What is expected?\r\nTypescript not complain about missing payload\r\n\r\n### What is actually happening?\r\nTypescript complains about missing payload\r\n\r\n---\r\nchange: \r\n\r\nexport type Mutation<S\\> = (state: S, payload: any) => any;\r\n\r\nto:\r\n\r\nexport type Mutation<S\\> = (state: S, payload?: any) => any;\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1491","RelatedDescription":"Open issue \"Optional attribute declared as required on typescript declaration\" (#1491)"},{"Id":"400419899","IsPullRequest":true,"CreatedAt":"2019-01-18T08:42:24","Actor":"Alex-Sokolov","Number":"1488","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1488","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1488)"},{"Id":"400557628","IsPullRequest":false,"CreatedAt":"2019-01-18T03:28:36","Actor":"indirectlylit","Number":"1490","RawContent":null,"Title":"validators and type checks for mutations","State":"open","Body":"### What problem does this feature solve?\r\n\r\nIn vue, prop validation during development is a great way to catch bugs early. A similar feature would be useful for Vuex mutations.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\n\r\n```javascript\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    budget: 0,\r\n    people: {},\r\n  },\r\n  mutations: {\r\n    setBudget: {\r\n      mutation(state, value) {\r\n        state.budget = value;\r\n      },\r\n      type: Number,\r\n    },\r\n    addPerson: {\r\n      mutation(state, value) {\r\n        state.people[value.id] = value;\r\n      },\r\n      type: Object,\r\n      validator(value) {\r\n        return value.id && value.name && value.age;\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1490","RelatedDescription":"Open issue \"validators and type checks for mutations\" (#1490)"},{"Id":"400471802","IsPullRequest":false,"CreatedAt":"2019-01-17T21:31:33","Actor":"jmplahitko","Number":"1489","RawContent":null,"Title":"ActionSubscribersObject.after() hook will not be called if action results in a rejected promise","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://codepen.io/jmplahitko/pen/EGzMPG](https://codepen.io/jmplahitko/pen/EGzMPG)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWith console open:\r\nClick Resolved button: before hook consoles, action consoles, after hook consoles.\r\nClick Rejected button: before hook consoles, action consoles, after hook does not console.\r\n\r\n### What is expected?\r\nIf an action results in a rejected promise (for instance, in the case where an HTTP call results in an error), ActionSubscribersObject.after() hooks should still be called. \r\n\r\n### What is actually happening?\r\nIf an action results in a rejected promise, ActionSubscribersObject.after() hooks are not called. \r\n\r\n---\r\nThis was found when integrating with the new ActionSubscribersObject for turning spinners on and off. In the case of an HTTP call resulting in an error, spinners don't go away. Hope this helps.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1489","RelatedDescription":"Open issue \"ActionSubscribersObject.after() hook will not be called if action results in a rejected promise\" (#1489)"},{"Id":"400328191","IsPullRequest":true,"CreatedAt":"2019-01-17T15:25:51","Actor":"Sharpie360","Number":"1487","RawContent":null,"Title":"docs: added wording for rootState access in module mutations","State":"open","Body":"Added content for accessing Store rootState in module mutations by passing through action. included example code snippets that are well explained and brief. Using this pattern in my current project.","Url":"https://github.com/vuejs/vuex/pull/1487","RelatedDescription":"Open PR \"docs: added wording for rootState access in module mutations\" (#1487)"},{"Id":"399771919","IsPullRequest":false,"CreatedAt":"2019-01-16T11:46:35","Actor":"ascolshubhu","Number":"1486","RawContent":null,"Title":"Vuex: Weird question on weird behavior of vuex. I need at least one mutation and a commit to update or assign to my store objects","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nI'm trying to set token to my store.token I know this is not a best option without using mutation but I'm doing something like this:\r\n\r\n```\r\nmethods : {\r\n        molestor(){\r\n            const self = this;\r\n            this.$store.state.token = \"new token\";\r\n            this.$store.state.cleavage= \"yes\";\r\n            this.$store.commit('settoken', \"somethingrandom\");\r\n        },  \r\n}\r\n```\r\nThen on my store.js:\r\n\r\n```\r\nexport const store = new Vuex.Store({\r\n    state : {\r\n        token : '',\r\n\r\n    },\r\n    mutations : {\r\n        settoken(state,token){\r\n            console.log(token);\r\n        }\r\n    }\r\n});\r\n```\r\nRight now it works fine... it sets up. But when I remove the mutation from store.js or remove the commit on my molester() it wont assign the value to token. Why is this happening?","Url":"https://github.com/vuejs/vuex/issues/1486","RelatedDescription":"Closed issue \"Vuex: Weird question on weird behavior of vuex. I need at least one mutation and a commit to update or assign to my store objects\" (#1486)"},{"Id":"399312235","IsPullRequest":false,"CreatedAt":"2019-01-15T11:56:19","Actor":"mrkstwrt","Number":"1485","RawContent":null,"Title":"Unable to override types/vue.d.ts","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/dev/types/vue.d.ts](https://github.com/vuejs/vuex/blob/dev/types/vue.d.ts)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n`types/vue.d.ts` contains the following\r\n\r\n```\r\ndeclare module \"vue/types/options\" {\r\n  interface ComponentOptions<V extends Vue> {\r\n    store?: Store<any>;\r\n  }\r\n}\r\n\r\ndeclare module \"vue/types/vue\" {\r\n  interface Vue {\r\n    $store: Store<any>;\r\n  }\r\n}\r\n```\r\n\r\n### What is expected?\r\nI feel like it should be possible to override this with `store?: Store<MyState>` and `$store: Store<MyState>` to allow `this.$store` etc. on the Vue instance to be fully typed.\r\n\r\n### What is actually happening?\r\nYou can't redeclare an interface property, so trying to do so will result in a TypeScript error.\r\n\r\n---\r\nIt feels like if you go to all the effort of fully typing out your whole vuex store it's rendered pretty much useless if your app makes heavy use of `this.$store.state.foo`. This is especially an issue for me because I use nuxt and do a lot with `$store` in the `asyncData` functions. I've searched around for a fix or a workaround but not come up with much. Is there something I am missing here?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1485","RelatedDescription":"Open issue \"Unable to override types/vue.d.ts\" (#1485)"},{"Id":"397755794","IsPullRequest":true,"CreatedAt":"2019-01-10T10:14:56","Actor":"lishihong","Number":"1483","RawContent":null,"Title":"Revert 1457 patch 1","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1483","RelatedDescription":"Closed or merged PR \"Revert 1457 patch 1\" (#1483)"},{"Id":"397745237","IsPullRequest":true,"CreatedAt":"2019-01-10T09:40:39","Actor":"lishihong","Number":"1482","RawContent":null,"Title":"Update index.js","State":"closed","Body":"test","Url":"https://github.com/vuejs/vuex/pull/1482","RelatedDescription":"Closed or merged PR \"Update index.js\" (#1482)"},{"Id":"396165778","IsPullRequest":false,"CreatedAt":"2019-01-07T10:20:13","Actor":"SebastianS90","Number":"1480","RawContent":null,"Title":"Store getters do not re-evaluate on dynamic module registration","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/ll6zjklq97](https://codesandbox.io/s/ll6zjklq97)\r\n\r\n### Steps to reproduce\r\n- Open the CodeSandbox\r\n- Click \"Register Module\"\r\n\r\n### What is expected?\r\nAll four values should switch to true\r\n\r\n### What is actually happening?\r\nOnly the values based on watchers from the component switch to true\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1480","RelatedDescription":"Closed issue \"Store getters do not re-evaluate on dynamic module registration\" (#1480)"},{"Id":"395304196","IsPullRequest":false,"CreatedAt":"2019-01-02T16:31:37","Actor":"brophdawg11","Number":"1479","RawContent":null,"Title":"registerModule causing unneccesary getter evaluations","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/kkrn0zojqr](https://codesandbox.io/s/kkrn0zojqr)\r\n\r\n### Steps to reproduce\r\n* Open the code sandbox\r\n* Open the console\r\n* Reload the sandbox and note the log of \"Running Getter\"\r\n* Click `Register Module`\r\n* Note that \"Running Getter\" is logged again, even though state.foo hasn't changed\r\n\r\n### What is expected?\r\nJust like normal reactivity, I wouldn't expect the `foo` getter to re-run unless one of it's dependencies (`state.foo`) was changed.\r\n\r\n### What is actually happening?\r\nCalling `registerModule` causes getters to re-execute regardless\r\n\r\n---\r\nThis is more noticeable and more problematic if the getters return non-primitives, since they can then trigger re-renders down the component tree\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1479","RelatedDescription":"Open issue \"registerModule causing unneccesary getter evaluations\" (#1479)"},{"Id":"395119125","IsPullRequest":true,"CreatedAt":"2019-01-01T23:03:14","Actor":"haversnail","Number":"1478","RawContent":null,"Title":"Fix: add `devtools` to StoreOptions interface","State":"open","Body":"Updates `StoreOptions` type to include the [`devtools`](https://vuex.vuejs.org/api/#devtools) option, resolving TypeScript error when option is included in store constructor.","Url":"https://github.com/vuejs/vuex/pull/1478","RelatedDescription":"Open PR \"Fix: add `devtools` to StoreOptions interface\" (#1478)"},{"Id":"395077834","IsPullRequest":true,"CreatedAt":"2019-01-01T12:17:21","Actor":"hkthai","Number":"1477","RawContent":null,"Title":"docs & examples: rewrite state object to functions everywhere","State":"open","Body":"## Overview\r\nRewrite state, object to function everywhere.\r\n\r\n## Details\r\nTo avoid shared state on the server side, we should change our state from object to functions everywhere.\r\n\r\n## Related Pages\r\n[stack overflow](https://stackoverflow.com/questions/49557177/vuex-state-returned-as-function-or-object-literal)\r\n\r\n\r\nIf it is wrong, please close this pr:bow:","Url":"https://github.com/vuejs/vuex/pull/1477","RelatedDescription":"Open PR \"docs & examples: rewrite state object to functions everywhere\" (#1477)"},{"Id":"394976929","IsPullRequest":false,"CreatedAt":"2018-12-31T14:48:24","Actor":"mbana","Number":"1475","RawContent":null,"Title":"[vuex] unknown getter: accessing nested property fails with mapGetters but works with this.$store","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/banaio/vue_js_samples/tree/master/vuex_accessing_nested_property_bug](https://github.com/banaio/vue_js_samples/tree/master/vuex_accessing_nested_property_bug)\r\n\r\n### Steps to reproduce\r\n```sh\r\ngit clone git@github.com:banaio/vue_js_samples.git\r\ncd vue_js_samples\r\ncd vuex_accessing_nested_property_bug\r\nyarn install\r\nyarn serve\r\nopen http://localhost:8080/\r\n```\r\n\r\n### What is expected?\r\nWe should see the message `{ \"level_3_field\": \"level_3_field_value\" }` twice, however it\r\nappears only once. Please see the screenshot.\r\n\r\n### What is actually happening?\r\nThe message `{ \"level_3_field\": \"level_3_field_value\" }` appears only once. As per this screenshot:\r\n\r\n![Image of broken](https://raw.githubusercontent.com/banaio/vue_js_samples/master/vuex_accessing_nested_property_bug/broken.png)\r\n\r\n---\r\n\r\nWhen `state`, see [https://github.com/banaio/vue_js_samples/blob/master/vuex_accessing_nested_property_bug/src/store.js](https://github.com/banaio/vue_js_samples/blob/master/vuex_accessing_nested_property_bug/src/store.js), is defined as:\r\n\r\n```js\r\n  state: {\r\n    level_1: {\r\n      level_2: {\r\n        level_3: {\r\n          level_3_field: 'level_3_field_value',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  getters: {\r\n    level_1: (state) => state.level_1,\r\n  },\r\n```\r\n\r\nAnd used as, see [https://github.com/banaio/vue_js_samples/blob/master/vuex_accessing_nested_property_bug/src/components/HelloWorld.vue](https://github.com/banaio/vue_js_samples/blob/master/vuex_accessing_nested_property_bug/src/components/HelloWorld.vue),\r\nthe `level_3_broken` does not work, but the `level_3_working` seems to work:\r\n\r\n```js\r\n  computed: {\r\n    ...mapGetters({\r\n      level_3_broken: 'level_1.level_2.level_3',\r\n    }),\r\n    level_3_working() {\r\n      return this.$store.getters['level_1']['level_2'].level_3;\r\n    },\r\n  },\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1475","RelatedDescription":"Closed issue \"[vuex] unknown getter: accessing nested property fails with mapGetters but works with this.$store\" (#1475)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-02-11T05:30:58.9172812Z","RunDurationInMilliseconds":2129}