{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin.Forms 3.4.0: Say Hello to ImageButton","PublishedOn":"2018-11-15T19:17:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of our long-term goal to have more frequent releases, we’re pleased to announce the release of Xamarin.Forms 3.4.0. As always, this release contains even more bug fixes and most notably,...","Href":"https://blog.xamarin.com/xamarin-forms-3-4-0-say-hello-to-imagebutton/","RawContent":null},{"Title":"Twitch Workshop: Build Your First Mobile App with C#, Xamarin, and the Cloud","PublishedOn":"2018-11-14T18:45:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Have you been clamoring to get started with mobile development using C# and Xamarin? What if you could attend a full day workshop from the comfort of your house or in a conference room with some...","Href":"https://blog.xamarin.com/twitch-workshop-build-your-first-mobile-app/","RawContent":null},{"Title":"Gorilla Player: A Tool to Craft Beautiful XAML UIs for Xamarin.Forms","PublishedOn":"2018-11-08T21:00:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post contributed by Leonardo Rodríguez Viacava. Leo is co-founder and CTO of UXDivers, creators of Grial UIKit and Gorilla Player. UXDivers specializes in designing and coding engaging...","Href":"https://blog.xamarin.com/gorilla-player-a-tool-to-craft-beautiful-xaml-uis-for-xamarin-forms/","RawContent":null},{"Title":"Xamarin and .NET Community Events in November","PublishedOn":"2018-11-01T16:01:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Here are just a few of the awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page. There you will...","Href":"https://blog.xamarin.com/xamarin-and-net-community-events-in-november/","RawContent":null},{"Title":"Xamarin.Forms and Zeplin: Speed Up Your Design to Development Process","PublishedOn":"2018-10-23T18:53:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This guest post was contributed by Arnstein Johansen, a Norwegian software engineer interested in mobile and web development. He works for Itema AS, a consultant agency in Trondheim, Norway and a...","Href":"https://blog.xamarin.com/xamarin-forms-and-zeplin-speed-up-your-design-to-development-process/","RawContent":null},{"Title":"Xamarin.Forms 3.3.0: Little Things, Huge Difference","PublishedOn":"2018-10-18T19:06:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin.Forms team has been working closely with our open-source community to help fill in the “little things”. Things you’ve told us are important to building your mobile apps and being supremely...","Href":"https://blog.xamarin.com/xamarin-forms-3-3-0-little-things-huge-difference/","RawContent":null},{"Title":"Complex Animations in Xamarin.Forms using Finite State Machine","PublishedOn":"2018-10-16T17:32:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This guest post was contributed by Slava Chernikoff, a Principal Engineer at Binwell. Microsoft MVP and Xamarin Certified experienced mobile cross-platform and native developer. Also, a previously...","Href":"https://blog.xamarin.com/complex-animations-xamarin-forms-using-finite-state-machine/","RawContent":null},{"Title":"Protect your Xamarin.Android Apps at Runtime with Dotfuscator","PublishedOn":"2018-10-12T18:34:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest blog by Bill Leach. Bill is CTO and co-founder of PreEmptive Solutions, makers of Dotfuscator and DashO application protection tools. Protecting Your Xamarin.Android Apps In a previous...","Href":"https://blog.xamarin.com/protect-xamarin-android-apps-dotfuscator/","RawContent":null},{"Title":"Upgrade Your App with Sentiment Analysis","PublishedOn":"2018-10-04T05:00:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Understanding the sentiment of an email or text message can be difficult. Someone may send a message, intending for it to be encouraging, but it may be accidentally interpreted as mean or...","Href":"https://blog.xamarin.com/upgrade-your-app-with-sentiment-analysis/","RawContent":null},{"Title":"Mobile Developer Events in October","PublishedOn":"2018-10-01T19:00:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":".NET Conf Local Events Watch all the live sessions from .NET Conf right on Channel 9! With a wide selection of content by feature speakers from the community and .NET product teams, take this...","Href":"https://blog.xamarin.com/mobile-developer-events-in-october/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8603894254","Type":"PullRequestEvent","CreatedAt":"2018-11-16T18:16:15","Actor":"lewurm","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2440","RelatedDescription":"Opened pull request \"[do-not-merge] use a 5.16 debug build\" (#2440) at xamarin/xamarin-android","RelatedBody":"hopefully helps to identify the msbuild hang with mono\r\n\r\nContext: https://github.com/mono/mono/pull/11706 & https://github.com/xamarin/xamarin-android/pull/2357\r\n\r\n/cc @luhenry "},{"Id":"8603891031","Type":"PullRequestEvent","CreatedAt":"2018-11-16T18:15:32","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2439","RelatedDescription":"Opened pull request \"[mono-sdks] <DownloadUri/> should not run during design-time builds\" (#2439) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/2350\r\n\r\nMost of the logic in `mono-runtimes.csproj` was happening during\r\n`CoreCompile`. The problem with this is that design-time builds in\r\nVisual Studio runs `CoreCompile`. The `Task.Wait` in `<DownloadUri/>`\r\ncauses a hang.\r\n\r\nThe easy fix is to just run these targets in `mono-runtimes` during\r\n`Build` instead of `CoreCompile`."},{"Id":"8603495579","Type":"IssuesEvent","CreatedAt":"2018-11-16T16:59:19","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2395","RelatedDescription":"Closed issue \"Cookie Container not working on Xamarin.Android\" (#2395) at xamarin/xamarin-android","RelatedBody":"We just made a library as Data Access Object for our Web Service using .NET 4.5 Framework.\r\nThat library will be used for different platforms, like Winform, Console app, Asp.net, and XAMARIN ANDROID.\r\n\r\nWe have a problem with the COOKIE CONTAINER when our Xamarin app on Android uses the library, the cookie container does not send the cookies to the server, but when we test with Console App, it works pretty fine. "},{"Id":"8603391922","Type":"PullRequestEvent","CreatedAt":"2018-11-16T16:42:01","Actor":"luhenry","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2431","RelatedDescription":"Merged pull request \"[monodroid] Remove dependency on `$(MonoSourceFullPath)/support/{zlib-helper,nl}.c`\" (#2431) at xamarin/xamarin-android","RelatedBody":""},{"Id":"8602952650","Type":"IssuesEvent","CreatedAt":"2018-11-16T15:32:51","Actor":"michaelkolovrat","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2438","RelatedDescription":"Opened issue \"Breakpoints not being hit on debug\" (#2438) at xamarin/xamarin-android","RelatedBody":"Hello,\r\nI have an issue with breakpoints not being hit in debug mode. Tried unchecking the 'Build with MSBuild instead of xbuild' box in my VS Preferences but then I get a following error:\r\n\r\n**src/packages/Xamarin.GooglePlayServices.Basement.60.1142.1/build/MonoAndroid80/Xamarin.GooglePlayServices.Basement.targets (SetupGoogleServicesJson target) ->\r\n\r\n: error : Error initializing task ConvertToAbsolutePath: Not registered task ConvertToAbsolutePath.**\r\n\r\nAfter removing the entire package from the csproj file (Import Project/Condition snippet), another error is triggered:\r\n\r\n**/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets (_ResolveAssemblies target) ->\r\n\r\n: error : Could not load file or assembly 'NuGet.Common, Version=4.6.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35' or one of its dependencies.\r\n\r\nat Xamarin.Android.Tasks.ResolveAssemblies.b__44_0 () [0x0000e] in <96027da06dd5411688a31011072e256f>:0 \r\nat System.Threading.Tasks.Task.InnerInvoke () [0x0000f] in /Users/builder/jenkins/workspace/build-package-osx-mono/2017-12/external/bockbuild/builds/mono-x64/mcs/class/referencesource/mscorlib/system/threading/Tasks/Task.cs:2886 \r\nat System.Threading.Tasks.Task.Execute () [0x00010] in /Users/builder/jenkins/workspace/build-package-osx-mono/2017-12/external/bockbuild/builds/mono-x64/mcs/class/referencesource/mscorlib/system/threading/Tasks/Task.cs:2509**\r\n\r\n\r\nAny idea as to how to resolve this?\r\n\r\nThanks!\r\n\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.5.4 (build 3)\r\nInstallation UUID: b66baa90-5b21-4648-9e17-18bcecd3a526\r\nRuntime:\r\n\tMono 5.10.1.57 (2017-12/ea8a24b1bbf) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 510010057\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Version: 2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.0.0/Sdks\r\nSDK Version: 2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.1\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.3.2 (Visual Studio Community)\r\nAndroid SDK: /Users/mkolovrat/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 25.2.5\r\nSDK Platform Tools Version: 26.0.2\r\nSDK Build Tools Version: 26.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.0 (13247)\r\nBuild 9A235\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 3.8.1.0 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.12.0.4 (Visual Studio Community)\r\nHash: 64fece5f\r\nBranch: d15-7\r\nBuild date: 2018-05-29 20:00:44-0400\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705040003\r\nGit revision: 6ae731889c896d6733efb8ff5117f5bf5b17b509\r\nBuild date: 2018-07-19 13:07:45-04\r\nXamarin addins: 417fed09624e1e1f76ab0a11e8b97ffd8bbf91e1\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.12.6\r\nDarwin 16.7.0 Darwin Kernel Version 16.7.0\r\n    Mon Nov 13 21:56:25 PST 2017\r\n    root:xnu-3789.72.11~1/RELEASE_X86_64 x86_64\r\n\r\n\r\n"},{"Id":"8602848925","Type":"IssuesEvent","CreatedAt":"2018-11-16T15:16:16","Actor":"lfarthing","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2437","RelatedDescription":"Opened issue \"Android.Telecom.InCallService SetAudioRoute(int route)\" (#2437) at xamarin/xamarin-android","RelatedBody":"In Mono.Android (v7.0) Android.Telecom.InCallService, the SetAudioRoute method is accepting an incorrect parameter, this receive `int route` instead of `VideoQuality route`. \r\n\r\nhttps://github.com/xamarin/xamarin-android/blob/f9a7cfc0da2f51b2c3006550fad2e25fbd23be5a/src/Mono.Android/methodmap.csv#L1898\r\n\r\n[https://developer.android.com/reference/android/telecom/InCallService#setAudioRoute(int)](url)"},{"Id":"8602416958","Type":"PullRequestEvent","CreatedAt":"2018-11-16T14:05:20","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2436","RelatedDescription":"Opened pull request \"[xa-prep-tasks] use JdkInfo to find JavaSdkDirectory\" (#2436) at xamarin/xamarin-android","RelatedBody":"On Windows, if you have Microsoft OpenJDK installed, you currently\r\nneeded a `Configuration.Override.props` such as:\r\n\r\n    <Project>\r\n      <PropertyGroup>\r\n        <JavaSdkDirectory>C:\\Program Files (x86)\\Java\\jdk1.8.0_161</JavaSdkDirectory>\r\n      </PropertyGroup>\r\n    </Project>\r\n\r\nThe Xamarin.Android build can't currently work with Microsoft OpenJDK,\r\nbecause it is missing header files.\r\n\r\nI've updated the `JdkInfo` MSBuild task to match a similar task in\r\nJava.Interop. It now validates that JDKs are < 8.0, and contain valid\r\nheader files.\r\n\r\nNow I am able to build Xamarin.Android on a Windows machine with\r\nmultiple JDKs and it picks the correct one."},{"Id":"8599335615","Type":"IssuesEvent","CreatedAt":"2018-11-16T01:34:22","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2435","RelatedDescription":"Opened issue \"Use a field for GC references\" (#2435) at xamarin/xamarin-android","RelatedBody":"Currently, the Java Callable Wrappers use an `ArrayList` and methods to help mirror the object graph from the Mono GC to the Android GC:\r\n\r\n```java\r\n/* partial */ class Example {\r\n    ArrayList<Object> managedReferences = new ArrayList<Object>();\r\n    public void monodroidAddReference (Object o) {\r\n        managedReferences.add (o);\r\n    }\r\n    public void monodroidClearReferences () {\r\n        managedReferences.clear ();\r\n    }\r\n}\r\n```\r\n\r\n`monodroidAddReference()` and `monodroidClearReferences()` are called via JNI within `osbridge.cc`:\r\n\r\nhttps://github.com/xamarin/xamarin-android/blob/c38c58e9c5634819845350e9e687186c0808a781/src/monodroid/jni/osbridge.cc#L581\r\n\r\nAn idea occurred to me: what if instead of invoking `monodroidAddReference()`/etc., we instead used a *field*?\r\n\r\n```java\r\n/* partial */ class Example {\r\n    Object []managedReferences;\r\n}\r\n```\r\n\r\nThis would reduce Java-side memory allocations (no `ArrayList<Object>`), and would alter the number of JNI invocations needed, from *`num_xrefs`* `JNIEnv::CallVoidMethod()` invocations to *`num_xrefs`* calls to `JNIEnv::SetObjectArrayElement()` + *1* `JNIEnv::SetObjectField()`.  (*Presumably* `JNIEnv::SetObjectArrayElement()` will be faster than `JNIEnv::CallVoidMethod()`.)\r\n\r\nhttps://github.com/xamarin/xamarin-android/blob/c38c58e9c5634819845350e9e687186c0808a781/src/monodroid/jni/osbridge.cc#L798-L806"},{"Id":"8598007094","Type":"IssuesEvent","CreatedAt":"2018-11-15T20:25:48","Actor":"alexanderkyte","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2434","RelatedDescription":"Opened issue \"Add support for dedup\" (#2434) at xamarin/xamarin-android","RelatedBody":"Mono added support for deduplication of AOT'ed code a while back. It leads to a noticeable reduction in binary size. It's currently being used with WebAssembly and it's being integrated into xamarin-macios\r\n\r\nIt requires minor changes to the build integration to work.\r\n\r\nIt works by making two passes\r\n1) In the first pass, all code that can't be duplicated is emitted.\r\n2) In the second pass, all of the potentially duplicated code, for all of the input assemblies, is placed in a single aot module that acts as a \"container\" or \"dummy\" assembly for them. \r\n\r\nThe iOS integration of it is here: https://github.com/xamarin/xamarin-macios/pull/3783 . This should provide a concrete example of how to add this support. \r\n\r\n1) Create another assembly during the build that's empty (we'll call it DummyName.dll)\r\n2) Create phase 1 above by aoting with `--aot=dedup-skip`\r\n3) Create phase 2 by aoting with a single mono invocation and all assemblies passed (including the dummy), and `--aot=dedup-include=DummyName.dll`\r\n4) Make sure DummyName.dll is bundled/registered/loaded before main is run.\r\n\r\nThe rest should be handled by the loading machinery. We mark the DummyName.dll.so as a special aot module and do all of the fixes to code finding once it's loaded.  \r\n"},{"Id":"8596371921","Type":"IssuesEvent","CreatedAt":"2018-11-15T15:50:23","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2433","RelatedDescription":"Opened issue \"Update AndroidSdkBuildToolsVersion \" (#2433) at xamarin/xamarin-android","RelatedBody":"For sanity/consistency, [`$(AndroidSdkBuildToolsVersion)`](https://github.com/xamarin/xamarin-android/blob/c38c58e9c5634819845350e9e687186c0808a781/src/Xamarin.Android.Build.Tasks/Xamarin.Android.Common.targets), `$(AndroidSdkPlatformToolsVersion)`, and `$(AndroidSdkToolsVersion)` should be updated to be consistent with the latest supported `$(TargetFrameworkVersion)`.  As we now support v9.0 (API-28), these properties should be updated to use the 28 versions of these packages, e.g. build-tools 28.0.3:\r\n\r\nhttps://developer.android.com/studio/releases/build-tools\r\n\r\nAddtionally, we should update the [`HowToAddNewApiLevel.md`](https://github.com/xamarin/xamarin-android/blob/master/Documentation/workflow/HowToAddNewApiLevel.md) docs should be updated to mention that these properties should be updated when a new API level is added."},{"Id":"8591837355","Type":"IssuesEvent","CreatedAt":"2018-11-14T23:31:18","Actor":"Joe-Sewell-PreEmptive","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2432","RelatedDescription":"Opened issue \"Build error when MainActivity's base class' name is a Java reserved word\" (#2432) at xamarin/xamarin-android","RelatedBody":"C# code that uses a Java reserved word as an identifier for the main activity or the base class thereof will cause a Java compiler error.\r\n\r\nWhile the steps below demonstrate how to most easily see the errors, the issue was brought to my attention by a [StackOverflow question](https://stackoverflow.com/questions/53291247/vague-dotfuscator-error-on-xamarin-android-app) regarding [the Xamarin integration](https://blog.xamarin.com/protecting-xamarin-apps-dotfuscator/) of a protection tool I develop, Dotfuscator. (**Note**: I am filing this issue on behalf of my employer, PreEmptive Solutions, a Xamarin partner.)\r\n\r\nIn this case, Dotfuscator's renaming obfuscation changes the (simple) name of the base class of an activity to `do`. Because Dotfuscator operates on compiled .NET assemblies, this is normally not an issue for non-library projects (`do` is a reserved word in C#, but not in the .NET intermediate language), but Xamarin.Android appears to be creating Java types to match this renamed .NET type, and `do` being a reserved word in Java is causing the build errors.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new Android project (the attached reproduction uses the `Visual C# -> Android -> Android App (Xamarin) template`).\r\n2. Add a new class, `do` (escaped as `@do` in C#), which has the base class `Android.Support.V7.App.AppCompatActivity`.\r\n3. Change the base class of `MainActivity` to `@do`.\r\n4. Build.\r\n\r\n[XamarinAndroidKeywords.zip](https://github.com/xamarin/xamarin-android/files/2582998/XamarinAndroidKeywords.zip)\r\n\r\n### Expected Behavior\r\n\r\nThe build succeeds.\r\n\r\n### Actual Behavior\r\n\r\nThe build errors with Java compiler errors, such as the following in the `obj\\Debug\\MonoAndroid81\\android\\src\\md5c30be36ca273ec2d8db66341a5aebd89\\MainActivity.java` file:\r\n\r\n```\r\nerror: <identifier> expected\r\n\textends md5c30be36ca273ec2d8db66341a5aebd89.do\r\nerror: illegal start of type\r\n\timplements\tXamarinAndroidKeywords\r\nerror: ';' expected\r\n\t\tmono.android.IGCUserPeer\r\n```\r\n\r\n### Version Information\r\n\r\nMicrosoft Visual Studio Professional 2017 \r\nVersion 15.8.9\r\nVisualStudio.15.Release/15.8.9+28010.2050\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Professional\r\n\r\nVisual C++ 2017   00369-60000-00001-AA049\r\nMicrosoft Visual C++ 2017\r\n\r\nApplication Insights Tools for Visual Studio Package   8.13.10627.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.8.05085.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nAzure App Service Tools v3.0.0   15.8.05023.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.9.0-beta8-63208-01\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nDotfuscator Community Edition   5.38.0.8617-8d4ef2c1e\r\nPreEmptive Protection - Dotfuscator CE\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJetBrains ReSharper Ultimate 2017.3.3    Build 111.0.20180302.65130\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2018 JetBrains, Inc.\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.11.11-pre (8fb558f)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProject System Tools   1.0\r\nTools for working with C#, VisualBasic, and F# projects.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61808.07020\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.8.20822.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.9.0-beta8-63208-01\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 55a3dc3231c95c77f81ee53f7d29152029da7408.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28010.2046\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.11.0.779 (d15-8@ff915e800)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.15.12 (d7ff6f39c)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.118 (4217ee9)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.0.0.19 (HEAD/a8a3b0ec7)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.1.0.15 (cbfb047)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n### Log File\r\n\r\n[XamarinAndroidKeywords-buildlog.txt](https://github.com/xamarin/xamarin-android/files/2583023/XamarinAndroidKeywords-buildlog.txt)"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8605639502","Type":"IssuesEvent","CreatedAt":"2018-11-17T02:04:56","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4430","RelatedDescription":"Closed issue \"Binding not working in titleview using xamarin.forms ios but works in android\" (#4430) at xamarin/Xamarin.Forms","RelatedBody":"I am using xamarin.forms (3.3.0.967583) version for developing application. In one of my page I am displaying dynamic content to label inside titleview using mvvm binding. It works fine in android but not in ios. I also see other related issues but not helping. See below sample code.\r\n\r\n`<NavigationPage.TitleView>\r\n        <StackLayout HorizontalOptions=\"Start\" VerticalOptions=\"Center\" Margin=\"0\" Padding=\"{OnPlatform iOS='25,0,0,0', Android=0}\">\r\n            <Label Text=\"{Binding SelectedProduct.Title,Mode=TwoWay}\" TextColor=\"White\" FontSize=\"{StaticResource LargeFontSize}\" FontFamily=\"{StaticResource OpenSansRegular}\" VerticalTextAlignment=\"Center\" />\r\n        </StackLayout>\r\n    </NavigationPage.TitleView>`"},{"Id":"8605628091","Type":"IssuesEvent","CreatedAt":"2018-11-17T01:58:24","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4437","RelatedDescription":"Closed issue \"MasterDetailPage default icon not showing up in iOS\" (#4437) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nI have Xamarin.Forms project. I am making `MasterDetailPage`. It is working as expected in Android but when it comes to iOS, not showing default hamburgur icon at top left.  This is my code below\r\n\r\n```\r\n<MasterDetailPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n             xmlns:local=\"clr-namespace:TestProjectXamarin\" \r\n             xmlns:Vms=\"clr-namespace:TestProjectXamarin.ViewModel\"      \r\n             x:Class=\"TestProjectXamarin.MainPage\">\r\n    <MasterDetailPage.Master >\r\n        <ContentPage  Title=\"Master page\" BackgroundColor=\"Red\">\r\n            <StackLayout BackgroundColor=\"Red\">\r\n                <StackLayout Margin=\"25,10,25,0\" Padding=\"0,30,0,0\">\r\n                    <Image  BackgroundColor=\"Accent\" Aspect=\"AspectFill\" Source=\"Enrich.png\"></Image>\r\n                </StackLayout>\r\n                <StackLayout  Margin=\"20,10,20,0\" >\r\n                    <Button  Margin=\"20,5,20,0\"   Command=\"{Binding CommandMenu1}\"  HorizontalOptions=\"FillAndExpand\" Text=\"Games\"></Button>\r\n                    <Button  Margin=\"20,0,20,0\"  Command=\"{Binding CommandMovies}\"  HorizontalOptions=\"FillAndExpand\" Text=\"Movies\"></Button>\r\n                    <Button  Margin=\"20,0,20,0\"   HorizontalOptions=\"FillAndExpand\" Text=\"Setting\"></Button>\r\n                </StackLayout>\r\n            </StackLayout>\r\n        </ContentPage>\r\n    </MasterDetailPage.Master>\r\n    <MasterDetailPage.Detail>\r\n        <ContentPage>\r\n            <StackLayout>\r\n            </StackLayout>\r\n        </ContentPage>\r\n    </MasterDetailPage.Detail>\r\n        \r\n</MasterDetailPage>\r\n\r\n```\r\n\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create Xamarin.Forms project make `MasterDetailPage` \r\n2. Use code above.\r\n3. \r\n\r\n### Expected Behavior\r\nExpecting humbuger icon for iOS application\r\n### Actual Behavior\r\nInstead of showing hamburger icon, showing Title of `MasterDetailPage`\r\n### Basic Information\r\n\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.8.9\r\nVisualStudio.15.Release/15.8.9+28010.2050\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Enterprise\r\n\r\nApplication Insights Tools for Visual Studio Package   8.13.10627.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nC# Tools   2.9.0-beta8-63208-01\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nMono Debugging for Visual Studio   4.11.11-pre (8fb558f)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28010.2046\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.11.0.779 (d15-8@ff915e800)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.15.12 (d7ff6f39c)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.118 (4217ee9)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.0.0.19 (HEAD/a8a3b0ec7)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.1.0.15 (cbfb047)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n\r\n- Affected Devices: iPhone 6s plus iOS 12.1\r\n\r\n### Screenshots\r\n![humburger](https://user-images.githubusercontent.com/19743421/48611253-df4f5d80-e9ab-11e8-9b30-8210d4a06769.png)\r\n\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"8605618675","Type":"IssuesEvent","CreatedAt":"2018-11-17T01:52:54","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4441","RelatedDescription":"Closed issue \"iOS tabbed page shows edit button after screen rotation\" (#4441) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nDuring a manual monkey test we discovered that on iOS the tabbed page's overflow menu sometimes shows an \"Edit\" button which is not functional.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a tabbed page with more than 5 sub pages\r\n2. Open the app in portrait\r\n3. Open the overflow menu (notice the absence of an \"edit\" button)\r\n4. Rotate the phone in landscape (The overflow menu now also closes which is undesirable on itself)\r\n5. Open the overflow menu again (It now shows a non functional edit button)\r\n\r\n### Expected Behavior\r\nNo edit button\r\n\r\n### Actual Behavior\r\nA edit button\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.3\r\n- Last known good version: - \r\n- IDE: VS 2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  12.1\r\n- Affected Devices: iPhone\r\n\r\n### Screenshots\r\n\r\nHere two screenshots, one before rotation and one after rotation\r\n\r\n#### Before rotation\r\n![image](https://user-images.githubusercontent.com/1906639/48620757-782cab80-e9a1-11e8-9a17-28f33cb5b643.png)\r\n\r\n#### After rotation\r\n![image](https://user-images.githubusercontent.com/1906639/48620787-94304d00-e9a1-11e8-9093-fd6eed92e949.png)\r\n\r\n"},{"Id":"8605601310","Type":"IssuesEvent","CreatedAt":"2018-11-17T01:43:31","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4418","RelatedDescription":"Closed issue \"IsVisiblity of Entry is not working inside the Custom Renderer of Grid\" (#4418) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nI have Custom class for Grid and Entry.\r\n\r\nCustom Grid has been added on the Xaml page. \r\n\r\nWhen using the Custom Renderer for the Grid, im using the Custom Entry on it. When using the IsVisiblity property of it. it is not working.\r\n\r\nNote:  Where as the IsEnabled property worked.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run the sample.\r\n2. You can notify the Entry with red back ground.\r\n\r\n### Expected Behavior\r\nEntry is visible on the screen.\r\n\r\n### Actual Behavior\r\nEntry should not viewed on the screen.\r\n\r\nYou can download the sample for the same from this link : \r\n[Sample.zip](https://github.com/xamarin/Xamarin.Forms/files/2583792/Sample.zip)\r\n\r\n"},{"Id":"8605576793","Type":"IssuesEvent","CreatedAt":"2018-11-17T01:30:26","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4432","RelatedDescription":"Closed issue \"Swipe Gesture fires twice on UWP for Right/Left\" (#4432) at xamarin/Xamarin.Forms","RelatedBody":"\r\n[TestSwipeGesture.zip](https://github.com/xamarin/Xamarin.Forms/files/2586267/TestSwipeGesture.zip)\r\n<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nSwiping Left or Right (not Up or Down) causes the swipe event to fire twice.\r\n\r\n### Steps to Reproduce\r\nSee attached example.\r\nCreate a view in a form (I used a Box View) and attach 4 Swipe recognizers, 1 for each direction.\r\nHandle the Swipe event by incrementing a counter and displaying the count on the screen.\r\n\r\n### Expected Behavior\r\n\r\nThe count should increase by 1 for each swipe.\r\n\r\n### Actual Behavior\r\n\r\nCount increases by 2 for Right/Left swipes (on UWP, works fine on Android, not tested on ioS)\r\n\r\n### Basic Information\r\n\r\n- Version with issue:  Xamarin.Forms 3.3.0.967583\r\n- Last known good version:\r\n- IDE: VS2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  Windows 10.0 Build 16299\r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\nSee attached\r\n"},{"Id":"8605387735","Type":"IssuesEvent","CreatedAt":"2018-11-17T00:07:44","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4413","RelatedDescription":"Closed issue \"DatePicker.MinimumDate misbehaves when data-bound\" (#4413) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nWhen a DataPicker's MinimumDate property is bound to a DateTime property on a page, and that property's value is assigned in code, the DatePicker's Date property is incorrectly assigned the value as well.\r\n\r\nAssigning MinimumDate in code, without a binding, works fine.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Set up a DatePicker with Date bound to property D and MinimumDate bound to property MD\r\n2. Assign D = 11/23/2018\r\n3. Assign MD=11/15/2018\r\n\r\nObserve that D is incorrectly set to 11/15/2018.\r\n\r\n### Expected Behavior\r\n\r\nMinimumDate should only influence Date when less then Date.\r\n\r\n### Actual Behavior\r\n\r\nDate is reset to MinimumDate even when greater than Date.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.3.0.967583\r\n- Last known good version: ?\r\n- IDE: VS 2017 15.9\r\n- Platform Target Frameworks:\r\n  - Android: 9.0\r\n- Android Support Library Version: 27.0.2.1\r\n- Nuget Packages: Many\r\n- Affected Devices: Android\r\n\r\n### Screenshots\r\n\r\n### Reproduction Link\r\n\r\nSame issue as https://github.com/xamarin/Xamarin.Forms/issues/3556#issuecomment-432304334\r\n"},{"Id":"8605337358","Type":"IssuesEvent","CreatedAt":"2018-11-16T23:49:36","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4394","RelatedDescription":"Reopened issue \"[iOS] ListView cannot reset selected status\" (#4394) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nListView cannot reset selected status\r\n[UnselectedListView.zip](https://github.com/xamarin/Xamarin.Forms/files/2577065/UnselectedListView.zip)\r\n\r\n### Steps to Reproduce\r\nas in my simple demo\r\n\r\n1. click to select a item, which will become selected, and it shows SelectedBackgroundView \r\n2. and click **same** item again,  it try to clear selected status by `ItemsListView.SelectedItem = null;`\r\n3. then it should clear SelectedBackgroundView, however, it doesn't\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.3.0.967583\r\n- IDE: VS\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n\r\n### Reproduction Link\r\n\r\n[UnselectedListView.zip](https://github.com/xamarin/Xamarin.Forms/files/2577065/UnselectedListView.zip)\r\n\r\n### Reason:\r\n\r\n1.  ListViewDataSource will set _selectionFromNative to true, when clicked on an item.\r\nhttps://github.com/xamarin/Xamarin.Forms/blob/master/Xamarin.Forms.Platform.iOS/Renderers/ListViewRenderer.cs#L1124\r\n2. and reset it to false when SelectedItem Changed.\r\nhttps://github.com/xamarin/Xamarin.Forms/blob/master/Xamarin.Forms.Platform.iOS/Renderers/ListViewRenderer.cs#L1064\r\n3. however, if click on **same** item,  SelectedItem is not changed, and it doesn't have chance to reset _selectionFromNative to false.\r\n4.  if ItemsListView.SelectedItem = null then, because of _selectionFromNative is still true, it will prevent _uiTableView.DeselectRow() to executed in the same method OnItemSelected.\r\nhttps://github.com/xamarin/Xamarin.Forms/blob/master/Xamarin.Forms.Platform.iOS/Renderers/ListViewRenderer.cs#L1092\r\n5. thus, it cannot reset selected status, even SelectedItem is set to null."}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8605687532","Type":"IssuesEvent","CreatedAt":"2018-11-17T02:36:05","Actor":"juepiezhongren","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5135","RelatedDescription":"Reopened issue \"Latest xamarin.ios and vs4mac cause build trouble\" (#5135) at xamarin/xamarin-macios","RelatedBody":"no such problem for previous xamarin.ios sdk and vs4mac\r\n\r\nMTOUCH : error MT2002: Failed to resolve \"System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder\" reference from \"System.Threading.Tasks.Extensions, Version=4.2.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\"\r\n\r\nVS mac : \r\nXamarin.iOS\r\nVersion: 12.2.1.10 (Visual Studio Community)\r\nHash: f2a05edd\r\nBranch: d15-9\r\nBuild date: 2018-10-31 18:55:57-0400\r\n"},{"Id":"8605686980","Type":"IssuesEvent","CreatedAt":"2018-11-17T02:35:44","Actor":"juepiezhongren","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5135","RelatedDescription":"Closed issue \"Latest xamarin.ios and vs4mac cause build trouble\" (#5135) at xamarin/xamarin-macios","RelatedBody":"no such problem for previous xamarin.ios sdk and vs4mac\r\n\r\nMTOUCH : error MT2002: Failed to resolve \"System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder\" reference from \"System.Threading.Tasks.Extensions, Version=4.2.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\"\r\n\r\nVS mac : \r\nXamarin.iOS\r\nVersion: 12.2.1.10 (Visual Studio Community)\r\nHash: f2a05edd\r\nBranch: d15-9\r\nBuild date: 2018-10-31 18:55:57-0400\r\n"},{"Id":"8604621330","Type":"IssuesEvent","CreatedAt":"2018-11-16T20:46:39","Actor":"Aguilex","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5127","RelatedDescription":"Closed issue \"iOS designer in visual studio 15.9.0\" (#5127) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Install Xamarin + Visual studion 15.9 (verry fresh version)\r\n2. Connect to an mac\r\n2. Try to open iOS designer (I used a storyboard file)\r\n\r\n### Expected Behavior\r\nThe designer opens and I an edit\r\n\r\n### Actual Behavior\r\n![image](https://user-images.githubusercontent.com/1906639/48479707-6532a380-e808-11e8-9da4-77faa2d06edf.png)\r\n\r\n### Environment\r\nMicrosoft Visual Studio Professional 2017 \r\nVersion 15.9.0\r\nVisualStudio.15.Release/15.9.0+28307.53\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Professional\r\n\r\nVisual C++ 2017   00369-60000-00001-AA405\r\nMicrosoft Visual C++ 2017\r\n\r\n.NET Portability Analyzer   1.1.10808.0\r\nEvaluates portability of assemblies across .NET platforms.\r\n\r\nADL Tools Service Provider   1.0\r\nThis package contains services used by Data Lake tools\r\n\r\nAnkhSVN - Subversion Support for Visual Studio   2.7.12815.35086\r\nAnkhSVN - Subversion Support for Visual Studio 2.7.12815.35086 \r\n * Ankh.Package 2.7.12815.35086\r\n * Subversion 1.9.5 via SharpSvn 1.9005.3940.224\r\n * Git/LibGit2 0.24.0 via SharpGit 0.2401.1116.230\r\n\r\nSharpSvn is linked to: Apr 1.5.2, Apr-util 1.5.4, Cyrus Sasl 2.1.26, eXpat 2.2.0, LibSSH2 1.8.0, OpenSSL 1.0.2k  26 Jan 2017, Serf 1.3.9, SQLite 3.17.0, Subversion 1.9.5-SharpSvn, Utf8proc 1.1.5, ZLib 1.2.8\r\nSharpSvn is optionally linked to: Berkeley DB 4.4.20, SharpPlink 0.67.0(SharpSvn)\r\n\r\nSharpGit is linked to: Apr 1.5.1, Apr-Util 1.5.4, eXpat 2.1.0, Libgit2 0.24.0, LibSSH2 1.7.0, OpenSSL 1.0.2h  3 May 2016, Subversion 1.9.3, Utf8proc 1.1.5, ZLib 1.2.8\r\n\r\nASP.NET and Web Tools 2017   15.9.04012.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Blazor Language Services   0.5.1-rtm-10384\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60913.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.9.03024.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.5001.4\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Functions and Web Jobs Tools   15.9.02046.0\r\nAzure Functions and Web Jobs Tools\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.3.5001.4\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nCookiecutter   15.9.18254.1\r\nProvides tools for finding, instantiating and customizing templates in cookiecutter format.\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.3.5001.4\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.3.5001.4\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   2.4\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.3.5001.4\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10730.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.13.11-pre (400cfb1)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython   15.9.18254.1\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - Django support   15.9.18254.1\r\nProvides templates and integration for the Django web framework.\r\n\r\nPython - IronPython support   15.9.18254.1\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   15.9.18254.1\r\nProfiling support for Python projects.\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResXManager   1.28.1304.0\r\nManage localization of all ResX-Based resources in one place. Shows all resources of a solution and let's you edit the strings and their localizations in a well-arranged data grid.\r\n\r\nSlowCheetah - XML config transforms   1.0\r\nThis package enables you to transform your app.config or any other XML file based on the build configuration. It also adds additional tooling to help you create XML transforms.\r\n\r\nSQL Server Data Tools   15.1.61810.11040\r\nMicrosoft SQL Server Data Tools\r\n\r\nTest Adapter for Boost.Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Boost.Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTest Adapter for Google Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Google Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   15.9.20918.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 6e26c5bacc8c4201e962f5bdde0a177f82f88691.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28301.59\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWiX Toolset Visual Studio Extension   0.9.21.62588\r\nWiX Toolset Visual Studio Extension version 0.9.21.62588\r\nCopyright (c) .NET Foundation and contributors. All rights reserved.\r\n\r\nXamarin   4.12.3.69 (d15-9@15fcf6b03)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.16.4 (128ba449c)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Live Reload   0.3.27 (remotes/origin/dev@207abf7)\r\nProvides live reload capabilities for Xamarin XAML.\r\n\r\nXamarin Templates   1.1.127 (e975299)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.1.0.38 (HEAD/61d16aa23)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.2.1.10 (f2a05ed)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n\r\n### iOS Designer Logs\r\n[2018-11-14 12:17:19.6] INFO: IDE notified that the list of assemblies referenced has changed\r\n[2018-11-14 12:17:19.6] INFO: Not uploading assemblies because there is no remote session\r\n[2018-11-14 12:18:37.6] PERF: Deployment time: 11789ms\r\n[2018-11-14 12:18:38.4] INFO: Last login: Wed Nov 14 12:10:57 2018\r\n\r\n[2018-11-14 12:18:38.4] INFO:  /Library/Frameworks/Mono.framework/Commands/mono64 /Users/jvergeer/Library/Caches/Xamarin/XMA/Agents/Designer/agent-128ba449cfdfbb78efcd87c831a9fd807dae2e5d/CSProxyHost.exe; echo \"<<<<< Designer Remote Agent EOS >>>>>\";\r\n[2018-11-14 12:18:38.8] INFO: Joriss-Mac-mini:~ jvergeer$  /Library/Frameworks/Mono.framework/Commands/mono64 /Users/jvergeer/Library/Caches/Xamarin/XMA/Agents/Designer/agent-128ba449cfdfbb78efcd87c831a9fd807dae2e5d/CSProxyHost.exe; echo \"<<<<< Designer Remote Agent EOS >>>>>\";\r\n[2018-11-14 12:18:38.8] INFO: Initializing CSProxyHost StdOut\r\n[2018-11-14 12:18:38.8] INFO: Initializing CSProxyHost StdErr\r\n[2018-11-14 12:18:39.0] INFO: 2018-11-14 12:18:39.096 mono64[9413:55226] \r\n[2018-11-14 12:18:39.0] INFO: Unhandled Exception:\r\n[2018-11-14 12:18:39.0] INFO: System.MissingMethodException: string[] string.Split(char,System.StringSplitOptions)\r\n[2018-11-14 12:18:39.0] INFO:   at Registrar.Registrar+ObjCType.Add (Registrar.Registrar+ObjCMethod method, System.Collections.Generic.List`1[System.Exception]& exceptions) [0x00019] in <8bd87b64da7f487db4b141d49d248114>:0 \r\n[2018-11-14 12:18:39.0] INFO:   at Registrar.Registrar.RegisterTypeUnsafe (System.Type type, System.Collections.Generic.List`1[System.Exception]& exceptions) [0x01181] in <8bd87b64da7f487db4b141d49d248114>:0 \r\n[2018-11-14 12:18:39.0] INFO:   at Registrar.Registrar.RegisterType (System.Type type, System.Collections.Generic.List`1[System.Exception]& exceptions) [0x00013] in <8bd87b64da7f487db4b141d49d248114>:0 \r\n[2018-11-14 12:18:39.0] INFO:   at Registrar.DynamicRegistrar.Register (System.Type type) [0x00003] in <8bd87b64da7f487db4b141d49d248114>:0 \r\n[2018-11-14 12:18:39.0] INFO:   at ObjCRuntime.Class.Register (System.Type type) [0x00001] in <8bd87b64da7f487db4b141d49d248114>:0 \r\n[2018-11-14 12:18:39.0] INFO:   at ObjCRuntime.Runtime.RegisterAssembly (System.Reflection.Assembly a) [0x0016a] in <8bd87b64da7f487db4b141d49d248114>:0 \r\n[2018-11-14 12:18:39.0] INFO:   at ObjCRuntime.Runtime.RegisterAssembly (System.IntPtr a) [0x00007] in <8bd87b64da7f487db4b141d49d248114>:0 \r\n[2018-11-14 12:18:39.0] INFO:   at ObjCRuntime.Runtime.register_assembly (System.IntPtr assembly, System.Int32& exception_gchandle) [0x00005] in <8bd87b64da7f487db4b141d49d248114>:0 \r\n[2018-11-14 12:18:39.0] INFO: --- End of stack trace from previous location where exception was thrown ---\r\n[2018-11-14 12:18:39.0] INFO:   at (wrapper managed-to-native) System.Object.wrapper_native_0x10dbd9c40()\r\n[2018-11-14 12:18:39.0] INFO:   at ObjCRuntime.Runtime.EnsureInitialized () [0x0004b] in <8bd87b64da7f487db4b141d49d248114>:0 \r\n[2018-11-14 12:18:39.0] INFO:   at AppKit.NSApplication.Init () [0x00016] in <8bd87b64da7f487db4b141d49d248114>:0 \r\n[2018-11-14 12:18:39.0] INFO:   at CSProxyHost.MainClass.Main (System.String[] args) [0x000b0] in <859b10803c674bad953a45c2be47ba13>:0 \r\n[2018-11-14 12:18:39.0] INFO: [ERROR] FATAL UNHANDLED EXCEPTION: System.MissingMethodException: string[] string.Split(char,System.StringSplitOptions)\r\n[2018-11-14 12:18:39.0] INFO:   at Registrar.Registrar+ObjCType.Add (Registrar.Registrar+ObjCMethod method, System.Collections.Generic.List`1[System.Exception]& exceptions) [0x00019] in <8bd87b64da7f487db4b141d49d248114>:0 \r\n[2018-11-14 12:18:39.0] INFO:   at Registrar.Registrar.RegisterTypeUnsafe (System.Type type, System.Collections.Generic.List`1[System.Exception]& exceptions) [0x01181] in <8bd87b64da7f487db4b141d49d248114>:0 \r\n[2018-11-14 12:18:39.0] INFO:   at Registrar.Registrar.RegisterType (System.Type type, System.Collections.Generic.List`1[System.Exception]& exceptions) [0x00013] in <8bd87b64da7f487db4b141d49d248114>:0 \r\n[2018-11-14 12:18:39.0] INFO:   at Registrar.DynamicRegistegister (System.Type type) [0x00001] in <8bd87b64da7f487db4b141d49d248114>:0 \r\n[2018-11-14 12:18:39.0] INFO:   at ObjCRuntime.Runtimrar.Register (System.Type type) [0x00003] in <8bd87b64da7f487db4b141d49d248114>:0 \r\n[2018-11-14 12:18:39.0] INFO:   at ObjCRuntime.Class.Re.RegisterAssembly (System.Reflection.Assembly a) [0x0016a] in <8bd87b64da7f487db4b141d49d248114>:0 \r\n[2018-11-14 12:18:39.0] INFO:   at ObjCRuntime.Runtime.RegisterAssembly (System.IntPtr a) [0x00007] in <8bd87b64da7f487db4b141d49d248114>:0 \r\n[2018-11-14 12:18:39.0] INFO:   at ObjCRuntime.Runtime.register_assembly (System.IntPtr assembly, System.Int32& exception_gchandle) [0x00005] in <8bd87b64da7f487db4b141d49d248114>:0 \r\n[2018-11-14 12:18:39.0] INFO: --- End of stack trace from previous location where exception was thrown ---\r\n[2018-11-14 12:18:39.0] INFO:   at (wrapper managed-to-native) System.Object.wrapper_native_0x10dbd9c40()\r\n[2018-11-14 12:18:39.0] INFO:   at ObjCRuntime.Runtime.EnsureInitialized () [0x0004b] in <8bd87b64da7f487db4b141d49d248114>:0 \r\n[2018-11-14 12:18:39.0] INFO:   at AppKit.NSApplication.Init () [0x00016] in <8bd87b64da7f487db4b141d49d248114>:0 \r\n[2018-11-14 12:18:39.0] INFO:   at CSProxyHost.MainClass.Main (System.String[] args) [0x000b0] in <859b10803c674bad953a45c2be47ba13>:0 \r\n[2018-11-14 12:18:39.0] INFO: <<<<< Designer Remote Agent EOS >>>>>\r\n[2018-11-14 12:18:39.6] ERROR: Could not connect to the remote mac:\r\nSystem.IO.EndOfStreamException: The DesignerAgent crashed before it initialized\r\n   at MonoTouch.Design.Client.SshAgentLauncher.StartCSProxyHost(SshClient client, String csproxyHostPath) in E:\\A\\_work\\28\\s\\Xamarin.Designer.iOS\\MonoTouch.Design.Client\\Connection\\SshAgentLauncher.cs:line 116\r\n   at MonoTouch.Design.Client.SshAgentLauncher.LaunchAsync(ConnectionInfo info, String csproxyHostDirectory, CancellationToken token) in E:\\A\\_work\\28\\s\\Xamarin.Designer.iOS\\MonoTouch.Design.Client\\Connection\\SshAgentLauncher.cs:line 78\r\n   at MonoTouch.Design.Client.SshAgentLauncher.<>c__DisplayClass6_0.<LaunchAsync>b__0() in E:\\A\\_work\\28\\s\\Xamarin.Designer.iOS\\MonoTouch.Design.Client\\Connection\\SshAgentLauncher.cs:line 42\r\n   at System.Threading.Tasks.Task`1.InnerInvoke()\r\n   at System.Threading.Tasks.Task.Execute()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at MonoTouch.Design.Client.SshAgentLauncher.<LaunchAsync>d__6.MoveNext() in E:\\A\\_work\\28\\s\\Xamarin.Designer.iOS\\MonoTouch.Design.Client\\Connection\\SshAgentLauncher.cs:line 42\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at MonoTouch.Design.Client.RemoteDesignerAgent.<CreateConnectionAsync>d__16.MoveNext() in E:\\A\\_work\\28\\s\\Xamarin.Designer.iOS\\MonoTouch.Design.Client\\Connection\\RemoteDesignerAgent.cs:line 48\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Xamarin.VisualStudio.IOS.Designer.MonoTouchDesignerPane.<InitializeAsync>d__70.MoveNext() in E:\\A\\_work\\28\\s\\Xamarin.Designer.VisualStudio\\src\\VisualStudio.IOS.Designer\\Editor\\MonoTouchDesignerPane.cs:line 771\r\n\r\n\r\n\r\nFrom the looks of it, it looks like that there is an mono version mismatch as `System.MissingMethodException: string[] string.Split(char,System.StringSplitOptions)` required mono 5.14 (from other issues). But Visual Studio forces an installation of mono 5.12l.\r\n\r\nCould it be related to an issue with a similar exception: #4384\n\n> VS bug [#729609](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/729609)"},{"Id":"8604505633","Type":"PullRequestEvent","CreatedAt":"2018-11-16T20:21:07","Actor":"lewurm","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5136","RelatedDescription":"Opened pull request \"Bump to mono:2018-06\" (#5136) at xamarin/xamarin-macios","RelatedBody":"Commit list for mono/mono:\r\n\r\n* mono/mono@bb3ae37d71a [interp] attempt to intrinsify again after a method is resolved regarding generics (#11715)\r\n* mono/mono@78eb5303e85 [2018-06] [aot] image is usable without debug flag when interpreter is used (#11711)\r\n* mono/mono@54cc205dd93 [2018-06] [crash] Remove duplicated il_offset (#11703)\r\n* mono/mono@279ac406e74 [2018-06] [runtime] Fix the size calculation in mono_debug_add_method (). (#11686)\r\n* mono/mono@1ac52d18274 [2018-06] [llvm] bump for armhf callingconv fix (#11610)\r\n\r\nDiff: https://github.com/mono/mono/compare/eee1d634e8b256a6e51bf8a8cf2feac4015fb1bc...bb3ae37d71a0993a09abc59a0d8255c074dc885b\r\n\r\n\r\nThis includes fixes for two problems reported by @Clancey when running his gMusic app with the interpreter."},{"Id":"8604232319","Type":"PullRequestEvent","CreatedAt":"2018-11-16T19:24:36","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5128","RelatedDescription":"Merged pull request \"Move tests to use new tool xibuild and thus fix msbuild tests\" (#5128) at xamarin/xamarin-macios","RelatedBody":"Move tests to use new tool xibuild and thus fix msbuild tests\r\n\r\nAdd xibuild, new wrapper tool to run msbuild or managed executables.\r\nAnd move to using that and thus fix the msbuild tests.\r\n\r\nMSBuild supports fallback paths for projects imported using\r\n`$(MSBuildExtensionsPath)`, but these must be specified explicitly in\r\nthe app.config of the main executable. There was a PR to allow use of\r\nproperties for this in the app.config, but that was not accepted\r\nupstream.\r\n\r\nThis is required for being able to:\r\n\r\n1. build projects with msbuild against the in-tree XI/XM build output\r\n2. and to run nunit tests against the same.\r\n\r\nFor this we introduce a new tool, `xibuild`, based on XA's `xabuild`.\r\nThis supports the fallback paths to be specified via the environment variable\r\n`MSBuildExtensionsPathFallbackPathsOverride`[1].\r\nIt essentially operates in 3 modes:\r\n\r\n- `xibuild -c /path/to/foo.exe`\r\n\tGenerates /path/to/foo.exe.config with the fallback paths inserted into that.\r\n\r\n- `xibuild -- /v:diag /path/to/project.csproj`\r\n\tRuns msbuild with the arguments after `--` with a custom app.config based on\r\n\t`MSBuild.dll.config`, with the fallback paths correctly inserted.\r\n\tThis is in a temporary file and the original config file is not touched.\r\n\r\n- `xibuild -t -- /path/to/managed_tool.exe args`\r\n\tGenerates `/path/to/managed_tool.exe.config` based on `MSBuild.dll.config` with\r\n\tthe fallback paths inserted, and runs `managed_tool.exe` with the arguments.\r\n\tThe default is to overwrite the config file.\r\n\tBut there is also a switch to merge it with an existing config file.\r\n\r\n--\r\n1. Value of the environment variable $MSBuildExtensionsPathFallbackPathsOverride\r\nis prepended to any existing list of search paths in `MSBuild.dll.config`, IOW,\r\nit takes precedence. So, the order of lookup becomes:\r\n\r\n  - Value of the property `$(MSBuildExtensionsPath)`\r\n  - Value of the environment variable `$MSBuildExtensionsPathFallbackPathsOverride`\r\n  - /Library/Frameworks/Mono.framework/External/xbuild on macOS"},{"Id":"8603967829","Type":"PullRequestEvent","CreatedAt":"2018-11-16T18:31:41","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4914","RelatedDescription":"Merged pull request \"[Tests] Add a new iOS app to run the xunit and nunit tests\" (#4914) at xamarin/xamarin-macios","RelatedBody":"Created a new application based on the work done by the android team to be able to run the xunit and nunit tests on iOS. This app will use the already built dlls from mono, will load the tests and will execute the tests.\r\n\r\nThis allows to:\r\n\r\n1. Do not create a template per namespace. We will be able to glob the test files and add them as requirements.\r\n2. Do not compile the tests, mono will take care.\r\n3. Do not need to update the tests dir every time we want to add a new test.\r\n4. Run both nunit and xunit tests."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1063457672048058371","CreatedAt":"2018-11-16T15:44:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing the release of Xamarin.Forms 3.4.0 w/ even more bug fixes and another new highly requested feature, an I… https://t.co/EJadLHYi73","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":119,"FavoriteCount":70,"RawContent":null},{"Id":"1063145593562902528","CreatedAt":"2018-11-15T19:03:56+00:00","UserScreenname":"xamarinhq","Text":"Build and deploy #ethereum smart contracts using the new @trufflesuite extension for #VSCode from @MSFTBlockchain… https://t.co/nEbiFUYaM2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":29,"FavoriteCount":11,"RawContent":null},{"Id":"1062819180100100099","CreatedAt":"2018-11-14T21:26:53+00:00","UserScreenname":"xamarinhq","Text":"Want to get started w/ mobile dev using C# &amp; #Xamarin? We've got a Twitch Workshop for that.\n\nComing Friday, Nov 16… https://t.co/ce2vH9dC4t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":106,"FavoriteCount":55,"RawContent":null},{"Id":"1058039721652297729","CreatedAt":"2018-11-01T16:55:01+00:00","UserScreenname":"xamarinhq","Text":"Get all the links you need for the world-wide, community-run mobile dev engagements happening for the Xamarin &amp;… https://t.co/eiJXYtWfvG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":22,"RawContent":null},{"Id":"1053027600086552576","CreatedAt":"2018-10-18T20:58:38+00:00","UserScreenname":"xamarinhq","Text":"TY2 you &amp; the Xamarin.Forms team we've filled in some of the features you’ve told us are important to building your… https://t.co/lwqRjrIFEi","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":28,"RawContent":null},{"Id":"1052217100041945088","CreatedAt":"2018-10-16T15:18:00+00:00","UserScreenname":"xamarinhq","Text":"A full day of community-driven sessions on cross-platform mobile application development with Xamarin, DevOps with… https://t.co/07SVz6rgLT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":18,"RawContent":null},{"Id":"1050824055014744064","CreatedAt":"2018-10-12T19:02:32+00:00","UserScreenname":"xamarinhq","Text":"Now, in #VisualStudio 15.8, Dotfuscator Community can help protect your https://t.co/FGIvdxOrYa Apps at Runtime by… https://t.co/iPm1GjIrpS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":27,"RawContent":null},{"Id":"1050447051228631040","CreatedAt":"2018-10-11T18:04:28+00:00","UserScreenname":"xamarinhq","Text":"With Xamarin.Forms, the UI and app logic for your app resides in a single codebase and you get to use a single IDE… https://t.co/SMq0XwjtKL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":36,"RawContent":null},{"Id":"1047580523881799680","CreatedAt":"2018-10-03T20:13:54+00:00","UserScreenname":"xamarinhq","Text":"Do both types of testing with your Visual Studio App Center CI/CD pipeline - cover the Data Access Layer with unit… https://t.co/6y14u8p3lQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":31,"RawContent":null},{"Id":"1046875654631886850","CreatedAt":"2018-10-01T21:33:00+00:00","UserScreenname":"xamarinhq","Text":"Microsoft named a leader in 2018 analyst reports on mobile app development. Get complimentary access to reports fro… https://t.co/EWg450kHpI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":30,"RawContent":null},{"Id":"1041764665536196609","CreatedAt":"2018-09-17T19:03:45+00:00","UserScreenname":"xamarinhq","Text":"...released to NuGet today, Xamarin.Forms 3.2.0. We've kicked off another round of updates, and this time we tackle… https://t.co/zyFILHsEUu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":201,"FavoriteCount":109,"RawContent":null},{"Id":"1039264258511527936","CreatedAt":"2018-09-10T21:28:02+00:00","UserScreenname":"xamarinhq","Text":"Watch #dotNETConf Live! The 3-day virtual developer conference co-organized by the .NET community and Microsoft is… https://t.co/bM5JCj7M0h","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":54,"RawContent":null},{"Id":"1037778121582419970","CreatedAt":"2018-09-06T19:02:39+00:00","UserScreenname":"xamarinhq","Text":"Get started with AI without being a machine learning or data science expert... New on the Xamarin Blog: Using Objec… https://t.co/uwpu4pUWFj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":92,"FavoriteCount":46,"RawContent":null},{"Id":"1035572899996987397","CreatedAt":"2018-08-31T16:59:54+00:00","UserScreenname":"xamarinhq","Text":"Xamarin and .NET Developer Events in September\nHere are all the links you'll need to get involved.… https://t.co/YJAa83E61y","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":36,"RawContent":null}]}},"RunOn":"2018-11-17T05:30:54.0527252Z","RunDurationInMilliseconds":3918}