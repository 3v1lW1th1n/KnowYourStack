{"Data":{"GitHub":{"Issues":[{"Id":"541521752","IsPullRequest":true,"CreatedAt":"2019-12-24T22:24:04","Actor":"hughbe","Number":"2557","RawContent":null,"Title":"Extract TableLayoutControlCollection from TableLayoutPanel.cs","State":"closed","Body":"## Proposed Changes\r\n- Extract TableLayoutControlCollection from TableLayoutPanel.cs\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2557)","Url":"https://github.com/dotnet/winforms/pull/2557","RelatedDescription":"Closed or merged PR \"Extract TableLayoutControlCollection from TableLayoutPanel.cs\" (#2557)"},{"Id":"541713749","IsPullRequest":true,"CreatedAt":"2019-12-24T22:18:08","Actor":"hughbe","Number":"2560","RawContent":null,"Title":"Remove dead code from TableLayoutSettings","State":"closed","Body":"## Proposed Changes\r\n- Remove TableLayoutSettings.IsValid\r\n- Remove dead null check in StyleConverter.ConvertTo\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2560)","Url":"https://github.com/dotnet/winforms/pull/2560","RelatedDescription":"Closed or merged PR \"Remove dead code from TableLayoutSettings\" (#2560)"},{"Id":"542172198","IsPullRequest":true,"CreatedAt":"2019-12-24T16:33:27","Actor":"hughbe","Number":"2572","RawContent":null,"Title":"Add DataGridView selected collection tests","State":"open","Body":"## Proposed Changes\r\n- Add DataGridView selected collection tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2572)","Url":"https://github.com/dotnet/winforms/pull/2572","RelatedDescription":"Open PR \"Add DataGridView selected collection tests\" (#2572)"},{"Id":"542125917","IsPullRequest":true,"CreatedAt":"2019-12-24T13:14:23","Actor":"hughbe","Number":"2571","RawContent":null,"Title":"Remove Control.GetVisibleCore","State":"open","Body":"## Explanation\r\n- GetVisibleCore is defined as an `internal virtual` method, but it is never overriden\r\n- Therefore, we can get rid of it entirely and collapse it into `Control.Visible` and replace all callers of `GetVisibleCore` to `Visible`\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2571)","Url":"https://github.com/dotnet/winforms/pull/2571","RelatedDescription":"Open PR \"Remove Control.GetVisibleCore\" (#2571)"},{"Id":"542122557","IsPullRequest":true,"CreatedAt":"2019-12-24T13:01:48","Actor":"dotnet-maestro[bot]","Number":"2570","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191223.1\r\n- **Date Produced**: 12/23/2019 2:06 PM\r\n- **Commit**: 84f3b4a8520b9e6d50afece47fa1adf4de8ec292\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19623.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19623.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19623.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19623.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2570)","Url":"https://github.com/dotnet/winforms/pull/2570","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#2570)"},{"Id":"542084788","IsPullRequest":true,"CreatedAt":"2019-12-24T10:40:36","Actor":"hughbe","Number":"2569","RawContent":null,"Title":"Move files to the right folder","State":"open","Body":"## Proposed Changes\r\n- Move files to the right folder\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2569)","Url":"https://github.com/dotnet/winforms/pull/2569","RelatedDescription":"Open PR \"Move files to the right folder\" (#2569)"},{"Id":"541947901","IsPullRequest":true,"CreatedAt":"2019-12-24T00:59:16","Actor":"hughbe","Number":"2568","RawContent":null,"Title":"Add ControlAccessibleObject tests","State":"open","Body":"## Proposed Changes\r\n- Add ControlAccessibleObject tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2568)","Url":"https://github.com/dotnet/winforms/pull/2568","RelatedDescription":"Open PR \"Add ControlAccessibleObject tests\" (#2568)"},{"Id":"541871851","IsPullRequest":true,"CreatedAt":"2019-12-23T19:11:32","Actor":"hughbe","Number":"2567","RawContent":null,"Title":"Add StatusStrip tests","State":"open","Body":"## Proposed Changes\r\n- Add StatusStrip tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2567)","Url":"https://github.com/dotnet/winforms/pull/2567","RelatedDescription":"Open PR \"Add StatusStrip tests\" (#2567)"},{"Id":"541830573","IsPullRequest":true,"CreatedAt":"2019-12-23T16:55:34","Actor":"hughbe","Number":"2566","RawContent":null,"Title":"Cleanup ListControl tests","State":"open","Body":"## Proposed Changes\r\nWas going to write some test for subclasses of `ListControl` but noticed the tests were a bit messy - not disposing/using `WinFormsFact` etc. so went through and cleaned up the test class\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2566)","Url":"https://github.com/dotnet/winforms/pull/2566","RelatedDescription":"Open PR \"Cleanup ListControl tests\" (#2566)"},{"Id":"541799941","IsPullRequest":true,"CreatedAt":"2019-12-23T15:27:58","Actor":"hughbe","Number":"2565","RawContent":null,"Title":"Add Microsoft.DotNet.RemoteExecutor package reference to tests","State":"open","Body":"This is needed for various tests that test Application.RenderWithVisualStyles, because calling `Application.UseVisualStyles` poisons the whole test process, meaning that all subsequent tests will be run in visual style enabled mode. Since we want to avoid one test affecting any others, these sorts of tests should be run in their own process.\r\n\r\nI'm submitting this on its own since PRs using this could take some time and arcade package updates makes it an absolute nightmare to add new package references as there will be an almost daily merge conflict!\r\n\r\nSee #2564\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2565)","Url":"https://github.com/dotnet/winforms/pull/2565","RelatedDescription":"Open PR \"Add Microsoft.DotNet.RemoteExecutor package reference to tests\" (#2565)"},{"Id":"541776625","IsPullRequest":true,"CreatedAt":"2019-12-23T14:24:47","Actor":"hughbe","Number":"2564","RawContent":null,"Title":"WIP: Clear ComCtlSupportsVisualStyles initialization status when enabling visual styles","State":"open","Body":"Depends on #2565 \r\n\r\nThe implementation of `Application.RenderWithVisualStyles` is the following:\r\n```cs\r\npublic static bool RenderWithVisualStyles\r\n    => ComCtlSupportsVisualStyles && VisualStyleRenderer.IsSupported;\r\n```\r\n\r\nThe implementation of `Application.ComCtlSupportsVisualStyles` is the following:\r\n```cs\r\n/// <summary>\r\n///  Typically, you shouldn't need to use this directly - use RenderWithVisualStyles instead.\r\n/// </summary>\r\ninternal static bool ComCtlSupportsVisualStyles\r\n{\r\n    get\r\n    {\r\n        if (!s_comCtlSupportsVisualStylesInitialized)\r\n        {\r\n            s_comCtlSupportsVisualStyles = InitializeComCtlSupportsVisualStyles();\r\n            s_comCtlSupportsVisualStylesInitialized = true;\r\n        }\r\n        return s_comCtlSupportsVisualStyles;\r\n    }\r\n}\r\n\r\nprivate static bool InitializeComCtlSupportsVisualStyles()\r\n{\r\n    if (UseVisualStyles)\r\n    {\r\n        // At this point, we may not have loaded ComCtl6 yet, but it will eventually be loaded,\r\n        // so we return true here. This works because UseVisualStyles, once set, cannot be\r\n        // turned off.\r\n        return true;\r\n    }\r\n\r\n    // To see if we are comctl6, we look for a function that is exposed only from comctl6\r\n    // we do not call DllGetVersion or any direct p/invoke, because the binding will be\r\n    // cached.\r\n    //\r\n    // GetModuleHandle  returns a handle to a mapped module without incrementing its\r\n    // reference count.\r\n    IntPtr hModule = Kernel32.GetModuleHandleW(Libraries.Comctl32);\r\n    if (hModule != IntPtr.Zero)\r\n    {\r\n        return Kernel32.GetProcAddress(hModule, \"ImageList_WriteEx\") != IntPtr.Zero;\r\n    }\r\n\r\n    // Load comctl since GetModuleHandle failed to find it\r\n    hModule = Kernel32.LoadLibraryFromSystemPathIfAvailable(Libraries.Comctl32);\r\n    if (hModule == IntPtr.Zero)\r\n    {\r\n        return false;\r\n    }\r\n\r\n    return Kernel32.GetProcAddress(hModule, \"ImageList_WriteEx\") != IntPtr.Zero;\r\n}\r\n```\r\n\r\nNotice that `Application.ComCtlSupportsVisualStyles` caches the result. This can cause problems when we call `Application.EnableVisualStyles()`.\r\n\r\nOnce `Application.EnableVisualStyles()` is enabled, we expect `Application.ComCtlSupportsVisualStyles` to be true (because we just enabled visual styles). `Application.RenderWithVisualStyles` would be true as a result.\r\n\r\nHowever, in the following case this does not work, as the result of `Application.ComCtlSupportsVisualStyles` is cached to `false` even though we enabled visual styles.\r\n```cs\r\nAssert.False(Application.RenderWithVisualStyles); // Commenting this out makes the assertion work.\r\nApplication.UseVisualStyles();\r\nAssert.True(Application.RenderWithVisualStyles);\r\n```\r\n\r\nWe can fix this by resetting the variable indicating whether `Application.ComCtlSupportsVisualStyles` is initialised, namely `s_comCtlSupportsVisualStylesInitialized`\r\n\r\nRelated #2556 #2555 #2555\r\n/cc @weltkante @sharwell \r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2564)","Url":"https://github.com/dotnet/winforms/pull/2564","RelatedDescription":"Open PR \"WIP: Clear ComCtlSupportsVisualStyles initialization status when enabling visual styles\" (#2564)"},{"Id":"541761254","IsPullRequest":true,"CreatedAt":"2019-12-23T13:43:04","Actor":"hughbe","Number":"2563","RawContent":null,"Title":"Fix NullReferenceException serializing TableLayoutSettings for controls without name","State":"open","Body":"## Proposed Changes\r\n- Fix NullReferenceException serializing TableLayoutSettings for controls without name\r\n\r\nThe problem is that we would not set the `ControlInformation.Name` property so throw NRE serializing it\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2563)","Url":"https://github.com/dotnet/winforms/pull/2563","RelatedDescription":"Open PR \"Fix NullReferenceException serializing TableLayoutSettings for controls without name\" (#2563)"},{"Id":"541745099","IsPullRequest":true,"CreatedAt":"2019-12-23T13:22:00","Actor":"dotnet-maestro[bot]","Number":"2561","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191222.1\r\n- **Date Produced**: 12/22/2019 3:04 PM\r\n- **Commit**: 163d551438aa5a1fdae12b8405651f894e841211\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19622.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19622.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19622.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19622.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2561)","Url":"https://github.com/dotnet/winforms/pull/2561","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2561)"},{"Id":"541746302","IsPullRequest":true,"CreatedAt":"2019-12-23T13:05:21","Actor":"hughbe","Number":"2562","RawContent":null,"Title":"Extract TableLayoutSettings classes","State":"open","Body":"## Proposed Changes\r\n- Extract TableLayoutSettings classes\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2562)","Url":"https://github.com/dotnet/winforms/pull/2562","RelatedDescription":"Open PR \"Extract TableLayoutSettings classes\" (#2562)"},{"Id":"541710240","IsPullRequest":true,"CreatedAt":"2019-12-23T11:19:37","Actor":"hughbe","Number":"2559","RawContent":null,"Title":"WIP: Add TableLayoutPanel tests","State":"open","Body":"## Proposed Changes\r\n- Add TableLayoutPanel tests\r\n\r\nDepends on https://github.com/dotnet/winforms/pull/2563\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2559)","Url":"https://github.com/dotnet/winforms/pull/2559","RelatedDescription":"Open PR \"WIP: Add TableLayoutPanel tests\" (#2559)"},{"Id":"541635669","IsPullRequest":true,"CreatedAt":"2019-12-23T08:09:59","Actor":"gpetrou","Number":"2558","RawContent":null,"Title":"Move GetDesktopWindow and GetForegroundWindow to Interop User32","State":"open","Body":"## Proposed changes\r\n\r\n- Move GetDesktopWindow and GetForegroundWindow to Interop User32.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2558)","Url":"https://github.com/dotnet/winforms/pull/2558","RelatedDescription":"Open PR \"Move GetDesktopWindow and GetForegroundWindow to Interop User32\" (#2558)"},{"Id":"541463761","IsPullRequest":true,"CreatedAt":"2019-12-23T04:45:50","Actor":"kpreisser","Number":"2551","RawContent":null,"Title":"Fix wrong argument in Interop.Gdi32.BitBlt","State":"closed","Body":"Fixes #2525\r\n\r\n\r\n## Proposed changes\r\n\r\n- Fix wrong argument passed to the native `BitBlt` function, which was introduced with #2144.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- ToolStrip will be drawn correctly.\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n![grafik](https://user-images.githubusercontent.com/13289184/71323698-62f44b80-24d6-11ea-90d4-38ddebd26d27.png)\r\n\r\n\r\n### After\r\n![grafik](https://user-images.githubusercontent.com/13289184/71323685-39d3bb00-24d6-11ea-883e-71315b03a2f1.png)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing by using sample project from #2525\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   5.0.100-alpha1-015777\r\n Commit:    cea32db3f2\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-015777\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0-alpha.1.19564.1\r\n  Commit:  c77948d92a\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100-alpha1-015777 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2551)","Url":"https://github.com/dotnet/winforms/pull/2551","RelatedDescription":"Closed or merged PR \"Fix wrong argument in Interop.Gdi32.BitBlt\" (#2551)"},{"Id":"541499047","IsPullRequest":true,"CreatedAt":"2019-12-22T20:44:21","Actor":"hughbe","Number":"2556","RawContent":null,"Title":"WIP: Add ListViewInsertionMark ComCtl32 tests and Cleanup ListViewInsertionMark interop","State":"open","Body":"## Proposed Changes\r\n- Add ListViewInsertionMark ComCtl32 tests\r\n- Cleanup ListViewInsertionMark interop (extracted from #2459 with cleanup)\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2556)","Url":"https://github.com/dotnet/winforms/pull/2556","RelatedDescription":"Open PR \"WIP: Add ListViewInsertionMark ComCtl32 tests and Cleanup ListViewInsertionMark interop\" (#2556)"},{"Id":"541489059","IsPullRequest":true,"CreatedAt":"2019-12-22T18:58:30","Actor":"hughbe","Number":"2555","RawContent":null,"Title":"WIP: Cleanup LVGROUPW interop and fix HeaderAlignment refresh bugList view group tests","State":"open","Body":"## Proposed Changes\r\n- Fix setting ListViewGroup.HeaderAlignment if the handle is already created\r\n- Avoid marshalling using `Marshal.PtrToStringAuto` and instead pin a `string`\r\n- Add tests to make sure we are calling into comctl32 correctly\r\n\r\nFixes https://github.com/dotnet/winforms/issues/2554\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2555)","Url":"https://github.com/dotnet/winforms/pull/2555","RelatedDescription":"Open PR \"WIP: Cleanup LVGROUPW interop and fix HeaderAlignment refresh bugList view group tests\" (#2555)"},{"Id":"541486954","IsPullRequest":false,"CreatedAt":"2019-12-22T18:37:48","Actor":"hughbe","Number":"2554","RawContent":null,"Title":"Setting ListViewGroup.HorizontalAlignment does not work once handle is created","State":"open","Body":"E.g. with the following form\r\n![image](https://user-images.githubusercontent.com/1275900/71325761-7b219600-24e9-11ea-8b95-879f17c64404.png)\r\n\r\nSetting `listView1.Groups[0].HeaderAlignment = HorizontalAlignment.Left;` causes no update to the alignment of the group.\r\n\r\nHowever, calling 'RecreateHandle` on the `ListView` does fix this.\r\n\r\nThe fix would be make the setter of `ListViewGroup.HeaderAlignment` recreate the handle: i.e.\r\n```cs\r\n\r\n        /// <summary>\r\n        ///  The alignment of the group header.\r\n        /// </summary>\r\n        [DefaultValue(HorizontalAlignment.Left)]\r\n        [SRCategory(nameof(SR.CatAppearance))]\r\n        public HorizontalAlignment HeaderAlignment\r\n        {\r\n            get => _headerAlignment;\r\n            set\r\n            {\r\n                if (!ClientUtils.IsEnumValid(value, (int)value, (int)HorizontalAlignment.Left, (int)HorizontalAlignment.Center))\r\n                {\r\n                    throw new InvalidEnumArgumentException(nameof(value), (int)value, typeof(HorizontalAlignment));\r\n                }\r\n\r\n                if (_headerAlignment != value)\r\n                {\r\n                    _headerAlignment = value;\r\n                    ListView?.RecreateHandleInternal();\r\n                }\r\n            }\r\n        }\r\n```\r\n\r\n![Screen Recording 2019-12-22 at 06 35 pm](https://user-images.githubusercontent.com/1275900/71325794-e10e1d80-24e9-11ea-97b3-85e079776c21.gif)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/2554","RelatedDescription":"Open issue \"Setting ListViewGroup.HorizontalAlignment does not work once handle is created\" (#2554)"},{"Id":"541476484","IsPullRequest":true,"CreatedAt":"2019-12-22T16:58:01","Actor":"hughbe","Number":"2553","RawContent":null,"Title":"Improve tests for FlowLayoutPanel/FlowLayoutSettings","State":"open","Body":"## Proposed Changes\r\n- Improve tests for FlowLayoutPanel/FlowLayoutSettings\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2553)","Url":"https://github.com/dotnet/winforms/pull/2553","RelatedDescription":"Open PR \"Improve tests for FlowLayoutPanel/FlowLayoutSettings\" (#2553)"},{"Id":"541473553","IsPullRequest":true,"CreatedAt":"2019-12-22T16:35:48","Actor":"hughbe","Number":"2552","RawContent":null,"Title":"Cleanup and improve ComponentEditorPage testing","State":"open","Body":"## Proposed Changes\r\n- Cleanup and improve ComponentEditorPage testing\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2552)","Url":"https://github.com/dotnet/winforms/pull/2552","RelatedDescription":"Open PR \"Cleanup and improve ComponentEditorPage testing\" (#2552)"},{"Id":"541456202","IsPullRequest":true,"CreatedAt":"2019-12-22T14:11:49","Actor":"kpreisser","Number":"2550","RawContent":null,"Title":"Fix incorrect call to GetTextColor in Interop.Gdi32.SetBkColor","State":"open","Body":"Fixes #2523\r\nFixes #2524\r\n\r\n//cc @hughbe \r\n\r\n## Proposed changes\r\n\r\n- Fix `Interop.Gdi32.SetBkColor` to correctly call `SetBkColor` rather than `GetTextColor`, which has been broken with #1922.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Background Color will be applied correctly, e.g. in PropertyGrid.\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n-\r\n\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n![bgcolor-before](https://user-images.githubusercontent.com/13289184/71322853-b19ce800-24cc-11ea-989a-f2a4f018a683.png)\r\n\r\n\r\n### After\r\n![bgcolor-after](https://user-images.githubusercontent.com/13289184/71322856-b82b5f80-24cc-11ea-80f1-0b3419bddec0.png)\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing using sample code from #2523 and #2524\r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   5.0.100-alpha1-015777\r\n Commit:    cea32db3f2\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-015777\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0-alpha.1.19564.1\r\n  Commit:  c77948d92a\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100-alpha1-015777 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2550)","Url":"https://github.com/dotnet/winforms/pull/2550","RelatedDescription":"Open PR \"Fix incorrect call to GetTextColor in Interop.Gdi32.SetBkColor\" (#2550)"},{"Id":"541448143","IsPullRequest":true,"CreatedAt":"2019-12-22T13:16:49","Actor":"dotnet-maestro[bot]","Number":"2549","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191221.1\r\n- **Date Produced**: 12/21/2019 2:08 PM\r\n- **Commit**: 67fdc011dac2750c6a5374a78539091c1806b8a4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19621.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19621.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19621.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19621.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2549)","Url":"https://github.com/dotnet/winforms/pull/2549","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2549)"},{"Id":"541445597","IsPullRequest":true,"CreatedAt":"2019-12-22T12:37:05","Actor":"hughbe","Number":"2548","RawContent":null,"Title":"Add ToolStripContentPanel tests and related Panel subclasses","State":"open","Body":"## Proposed Changes\r\n- Add ToolStripContentPanel tests and related Panel subclasses\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2548)","Url":"https://github.com/dotnet/winforms/pull/2548","RelatedDescription":"Open PR \"Add ToolStripContentPanel tests and related Panel subclasses\" (#2548)"},{"Id":"541330002","IsPullRequest":true,"CreatedAt":"2019-12-21T14:01:29","Actor":"hughbe","Number":"2547","RawContent":null,"Title":"Cleanup IDocHostUIHandler","State":"open","Body":"## Proposed Changes\r\n- Cleanup IDocHostUIHandler\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2547)","Url":"https://github.com/dotnet/winforms/pull/2547","RelatedDescription":"Open PR \"Cleanup IDocHostUIHandler\" (#2547)"},{"Id":"541328943","IsPullRequest":true,"CreatedAt":"2019-12-21T13:49:31","Actor":"hughbe","Number":"2546","RawContent":null,"Title":"Cleanup IProvidePropertyBuilder","State":"open","Body":"## Proposed Changes\r\n- Cleanup IProvidePropertyBuilder\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2546)","Url":"https://github.com/dotnet/winforms/pull/2546","RelatedDescription":"Open PR \"Cleanup IProvidePropertyBuilder\" (#2546)"},{"Id":"541324712","IsPullRequest":true,"CreatedAt":"2019-12-21T13:16:57","Actor":"dotnet-maestro[bot]","Number":"2545","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191220.1\r\n- **Date Produced**: 12/20/2019 2:28 PM\r\n- **Commit**: d0fecb826dee1a24c0d2c9136476a79bed22ed41\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19620.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19620.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19620.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19620.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2545)","Url":"https://github.com/dotnet/winforms/pull/2545","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2545)"},{"Id":"541281295","IsPullRequest":false,"CreatedAt":"2019-12-21T04:27:53","Actor":"chylex","Number":"2544","RawContent":null,"Title":"Fix MenuStrip hover & click behavior in unfocused windows","State":"open","Body":"(split off from #2476)\r\n\r\nThis issue addresses two differences between native MainMenu and MenuStrip controls when the window is unfocused.\r\n\r\n### Issue 1 : Hovering menu items highlights them in an unfocused window\r\nNative control on the right side only highlights hovered items when the window is focused. This also causes confusion with issue 2.\r\n\r\n![unfocused](https://user-images.githubusercontent.com/3685160/71302833-64c3ef00-23b0-11ea-9846-001262d4af04.png)\r\n\r\n### Issue 2 : Clicking a menu item in unfocused window does not open it\r\nTo reproduce, open the test project which opens 2 windows as seen on the screenshot above, click the taskbar or another window to unfocus them, and then click **Item 1** in each window. You will see that:\r\n\r\n* In the **FormStripSystem** window which uses a MenuStrip, clicking highlights the window but does not open the menu. State after clicking:\r\n![focusedstrip](https://user-images.githubusercontent.com/3685160/71302930-b1f49080-23b1-11ea-98b8-6b62a38c3c4e.png)\r\n\r\n* In the **FormNative** window which uses a native MainMenu, clicking both highlights the window and immediately opens the menu. State after clicking:\r\n![focusednative](https://user-images.githubusercontent.com/3685160/71302939-d3ee1300-23b1-11ea-8859-78f97636a412.png)\r\n\r\nThe behavior of MenuStrip should be changed to match the native control.\r\n\r\nAs I said in https://github.com/dotnet/winforms/issues/2476#issuecomment-567316912, I tested several applications with both native MainMenu and completely custom menu controls, all of which follow the native Windows behavior, so the non-standard behavior of MenuStrip is likely confusing to Windows users.\r\n\r\n### Test Project\r\n\r\n[winforms.zip](https://github.com/dotnet/winforms/files/3990977/winforms.zip)","Url":"https://github.com/dotnet/winforms/issues/2544","RelatedDescription":"Open issue \"Fix MenuStrip hover & click behavior in unfocused windows\" (#2544)"},{"Id":"541278743","IsPullRequest":false,"CreatedAt":"2019-12-21T04:01:28","Actor":"chylex","Number":"2543","RawContent":null,"Title":"Make appearance of MenuStrip & ContextMenuStrip look native when RenderMode = System","State":"open","Body":"(split off from #2476)\r\n\r\n### Windows 7\r\n\r\nSee #2476 for screenshots if needed.\r\n\r\n### Windows 10\r\n\r\n| Native | Strip (RenderMode = System) |\r\n| --- | --- |\r\n| ![NativeMenu10](https://user-images.githubusercontent.com/3685160/70310185-5a7dee80-180f-11ea-9ae7-f970c6b69bbe.png) | ![StripSystemMenu10](https://user-images.githubusercontent.com/3685160/70310193-5eaa0c00-180f-11ea-9f91-48f14507a707.png) |\r\n| ![NativeContext10](https://user-images.githubusercontent.com/3685160/70308793-57353380-180c-11ea-8005-d8035212a269.png) | ![StripSystemContext10](https://user-images.githubusercontent.com/3685160/70308811-5f8d6e80-180c-11ea-9296-dc97f56403c3.png) |\r\n| ![a](https://user-images.githubusercontent.com/3685160/71302072-76ed5f80-23a7-11ea-9ae8-6e962c33e02d.png) | ![b](https://user-images.githubusercontent.com/3685160/71302073-7ce34080-23a7-11ea-9ddf-e9d30cda74aa.png) |\r\n| ![bb](https://user-images.githubusercontent.com/3685160/71302431-24ae3d80-23ab-11ea-9291-d15d91426084.png) | ![aa](https://user-images.githubusercontent.com/3685160/71302436-2b3cb500-23ab-11ea-92ba-e588d7e69c72.png) |\r\n\r\n### List of Differences\r\n\r\nIt's probably not worth matching the look of Windows 7, so I will only consider differences from the Windows 10 look.\r\n\r\nI have done measurements on 100% and 150% DPI, and marked those that change. I have not measured widths/heights of items, those seem mostly fine.\r\n\r\n- **Main Menu**\r\n  - [ ] Menu height should be (19px * DPI)\r\n  - [ ] Make menu items flush with the left and top side of the window (no padding/border between them)\r\n  - [ ] The menu background from top to bottom is (19px * DPI - 1px) of RGB(255, 255, 255), and then 1px bottom border of RGB(242, 242, 242)\r\n    - Note that item highlight overlays the bottom border and the top of sub-menus is just below the bottom border\r\n  - [ ] Set highlighted item background to RGB(204, 232, 255)\r\n  - [ ] Set highlighted item border to 1px of RGB(153, 209, 255)\r\n  - [ ] Do not invert text color of highlighted items\r\n  - [ ] Reduce left/right padding of menu items (appears to be 1px for border + (6px * DPI) of padding)\r\n- **Context Menu & Main Menu sub-menus**\r\n  - [ ] Set border color to RGB(204, 204, 204)\r\n  - [ ] Set overall background color to RGB(242, 242, 242), so that non-highlighted items and padding between items and border is this color\r\n  - [ ] Set checkmark/image column background color to RGB(240, 240, 240)\r\n  - [ ] Set highlighted item background color to RGB(144, 200, 246)\r\n  - [ ] Fix the weird white line on the left of highlighted items\r\n  - [ ] Do not invert text color of highlighted items\r\n  - [ ] Increase padding between the items and border (1px -> 2px)\r\n  - [ ] Update icon of arrow on items with sub-menus and move it up by 1 px to center it\r\n  - [ ] Make splitter 1px tall\r\n  - [ ] Set splitter color to RGB(215, 215, 215)\r\n  - [ ] Fix splitter padding (it should not leak into the checkmark/image column, and be 2px from the right border)\r\n  - [ ] Set checkmark color to RGB(51, 51, 51)\r\n  - [ ] Checkmark should have a background color RGB(144, 200, 246) when checked, or RGB(86, 176, 250) when checked and highlighted at the same time\r\n  - [ ] Sub-menus should overlap their parent menu item by 6 pixels on the left, and be flush with the top\r\n  - [ ] After highlighting an item with a sub-menu and then moving cursor to a sibling item above/below, the original highlighted item should immediately become unhighlighted\r\n    - Currently the highlight lingers until the sub-menu disappears (see last screenshot)\r\n\r\nIt's a lot ^.^ but it should make them almost completely visually indistinguishable from native controls.\r\n\r\n### (Updated) Test Project\r\n\r\n[winforms.zip](https://github.com/dotnet/winforms/files/3990977/winforms.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/2543","RelatedDescription":"Open issue \"Make appearance of MenuStrip & ContextMenuStrip look native when RenderMode = System\" (#2543)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-12-25T05:30:55.9030981Z","RunDurationInMilliseconds":667}