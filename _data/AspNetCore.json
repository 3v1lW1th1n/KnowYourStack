{"Data":{"Blog":{"FeedItems":[{"Title":"User accounts made easy with Azure","PublishedOn":"2017-10-17T21:01:45+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"One of the most common requirements for web applications is for users create accounts for the purpose of access control and personalization. While ASP.NET templates have always made it easy to create an application that uses a database you control to register and track user accounts, that introduces other complications over the long term. As... <a aria-label=\"read more about User accounts made easy with Azure\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/10/17/user-accounts-made-easy-with-azure/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/17/user-accounts-made-easy-with-azure/","RawContent":null},{"Title":"Announcing SignalR for ASP.NET Core Alpha 2","PublishedOn":"2017-10-09T22:46:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"A few weeks ago we released the alpha1 version of SignalR for ASP.NET Core 2.0. Today we are pleased to announce a release of the alpha2 version of SignalR for ASP.NET Core 2.0. This release contains a number of changes (including API changes) and improvements. Notable Changes The JSON hub protocol now uses camel casing... <a aria-label=\"read more about Announcing SignalR for ASP.NET Core Alpha 2\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/10/09/announcing-signalr-for-asp-net-core-alpha-2/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/09/announcing-signalr-for-asp-net-core-alpha-2/","RawContent":null},{"Title":"Announcing SignalR (alpha) for ASP.NET Core 2.0","PublishedOn":"2017-09-14T23:41:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are glad to announce an alpha release of SignalR for ASP.NET Core 2.0. This is the first official preview release of a new SignalR that is compatible with ASP.NET Core. It consists of a server component, a .NET client targeting .NET Standard 2.0 and a JavaScript/TypeScript client. What’s New? SignalR for ASP.NET Core... <a aria-label=\"read more about Announcing SignalR (alpha) for ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/","RawContent":null},{"Title":"Welcome to the New Blog Template for ASP.NET Developers","PublishedOn":"2017-09-08T17:59:41+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"By Juliet Daniel, Lucas Isaza, and Uma Lakshminarayan Have you always wanted to build a blog or other web application but haven&#8217;t had the time or educational resources to learn? With our blog template, available in our GitHub repo, you can create your web application fast and effortlessly, and even learn to master the new... <a aria-label=\"read more about Welcome to the New Blog Template for ASP.NET Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/","RawContent":null},{"Title":"Getting Started with Windows Containers","PublishedOn":"2017-09-07T19:51:33+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Containers provide a way of running an application in a controlled environment, isolated from other applications running on the machine, and from the underlying infrastructure. They are a cost-effective way of abstracting away the machine, ensuring that the application runs in the same conditions, from development, to test, to production. Containers started in Linux, as... <a aria-label=\"read more about Getting Started with Windows Containers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/","RawContent":null},{"Title":"ASP.NET Core 2.0 Features","PublishedOn":"2017-08-25T16:30:07+00:00","CommentsCount":22,"FacebookCount":0,"Summary":"Last week we announced the release of ASP.NET Core 2.0 and described some top new features, including Razor Pages, new and updated templates, and Application Insights integration. In this blog post we are going to dig into more details of features in 2.0. This list is not exhaustive or in any particular order, but highlights... <a aria-label=\"read more about ASP.NET Core 2.0 Features\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0","PublishedOn":"2017-08-14T16:01:14+00:00","CommentsCount":45,"FacebookCount":0,"Summary":"The ASP.NET team is proud to announce general availability of ASP.NET Core 2.0.  This release features compatibility with .NET Core 2.0, tooling support in Visual Studio 2017 version 15.3, and the new Razor Pages user-interface design paradigm.  For a full list of updates, you can read the release notes and you can check the list... <a aria-label=\"read more about Announcing ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/","RawContent":null},{"Title":"Development time IIS support for ASP.NET Core Applications","PublishedOn":"2017-07-14T01:56:39+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"With a recent update to Visual Studio 2017, we have added support for debugging ASP.NET Core applications against IIS. This blog post will walk you through enabling this feature and setting up your project to use this feature. Getting Started To get started: You need to install Visual Studio 2017 (version 15.3) Preview (it will... <a aria-label=\"read more about Development time IIS support for ASP.NET Core Applications\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/","RawContent":null},{"Title":"WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication","PublishedOn":"2017-06-28T23:00:07+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With the recent update to the WCF Service Reference tool in the VS Marketplace, support has been added for downloading metadata for a web service where the metadata exchange (MEX) endpoint has been secured with IIS authentication. The purpose of MEX endpoints is to allow clients to discover the service capabilities, including security aspects of... <a aria-label=\"read more about WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/","RawContent":null},{"Title":"Introducing ASP.NET Core 2.0 Preview 2","PublishedOn":"2017-06-28T17:02:15+00:00","CommentsCount":41,"FacebookCount":0,"Summary":"At Build 2017, we released an initial preview version of ASP.NET Core 2.0.  Over the last two months we have incorporated your feedback and added a number of new features.  We now have a Preview 2 version of the ASP.NET Core 2.0 framework and Visual Studio tools for you to try.  In this post, we... <a aria-label=\"read more about Introducing ASP.NET Core 2.0 Preview 2\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6761803809","Type":"IssuesEvent","CreatedAt":"2017-10-25T04:11:57","Actor":"huyjack178","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2256","RelatedDescription":"Opened issue \"Using ASP.NET MVC Customed AuthorizeAttribute in ASP.NET Core\" (#2256) at aspnet/Home","RelatedBody":"I have Authorization Attribute like this\r\n\r\n```\r\n    public class CustomAuthAttribute : AuthorizeAttribute\r\n    {\r\n            public override void OnAuthorization(AuthorizationContext filterContext)\r\n            {\r\n                base.OnAuthorization(filterContext);\r\n                ...\r\n            \r\n            }\r\n    }\r\n```\r\n\r\nI want to use this attribute in new site that uses ASP.NET Core MVC Controller/Action.\r\nI have tried to configure in Startup.cs like this\r\n\r\n```\r\n     services.AddMvc(options =>\r\n     {\r\n          options.Filters.Add((new CustomAuthAttribute());\r\n     });\r\n```\r\n\r\nBut it can not resolve the type IFilterMetadata. Anyone can help me? Thank you"},{"Id":"6760662409","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:27:42","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2255","RelatedDescription":"Closed issue \"System.Web.HttpRequest.UrlReferrer throws exception\" (#2255) at aspnet/Home","RelatedBody":"Hi, according to the source code below, UrlReferrer catches HttpException. For example if you send the url like \"http://localhost\" (with quotes), throws System.UriFormatException: 'Invalid URI: The URI scheme is not valid.'\r\n\r\nhttps://github.com/Microsoft/referencesource/blob/master/System.Web/HttpRequest.cs#L1967"},{"Id":"6756299475","Type":"IssuesEvent","CreatedAt":"2017-10-24T06:21:01","Actor":"asalih","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2255","RelatedDescription":"Opened issue \"System.Web.HttpRequest.UrlReferrer throws exception\" (#2255) at aspnet/Home","RelatedBody":"Hi, according to the source code below, UrlReferrer catches HttpException. For example if you send the url like \"http://localhost\" (with quotes), throws System.UriFormatException: 'Invalid URI: The URI scheme is not valid.'\r\n\r\nhttps://github.com/Microsoft/referencesource/blob/master/System.Web/HttpRequest.cs#L1967"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"6761546831","Type":"PullRequestEvent","CreatedAt":"2017-10-25T02:29:01","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1055","RelatedDescription":"Opened pull request \"Removing Connected event from TestConnection\" (#1055) at aspnet/SignalR","RelatedBody":""},{"Id":"6761198117","Type":"IssuesEvent","CreatedAt":"2017-10-25T00:09:34","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1054","RelatedDescription":"Opened issue \"Exceptions thrown in Redis events should be caught and logged\" (#1054) at aspnet/SignalR","RelatedBody":"If an exception is thrown in a Redis event handler it will just disappear without a trace. E.g. if deserializing [a message throws](https://github.com/aspnet/SignalR/blob/30e7422407760d0d56361f76b73c5930875a03d3/src/Microsoft.AspNetCore.SignalR.Redis/RedisHubLifetimeManager.cs#L123) no one will be able to tell what happened."},{"Id":"6761186228","Type":"IssuesEvent","CreatedAt":"2017-10-25T00:04:55","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1053","RelatedDescription":"Opened issue \"When a streaming method on the server side cannot be resolved the client receives an invalid message\" (#1053) at aspnet/SignalR","RelatedBody":"When a client invokes a streaming method but the method cannot be resolved the server returns a Completion message because it can't tell that the target method is supposed to be a streaming method. Since the client used `StreamAsync` to invoke this method it throws an exception because Streaming methods are supposed to be invoked with a StreamCompletion message and not Completion message. "},{"Id":"6760705732","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:38:15","Actor":"ppumkin","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1052","RelatedDescription":"Opened issue \"Connection with the server was terminated abnormally\" (#1052) at aspnet/SignalR","RelatedBody":"I am using the SignalR console application client and sometimes, due to the Hub website being updated the signalR .NET client will throw this error.\r\n\r\nThe connection with the server was terminated abnormally\r\n\r\nStack\r\n```\r\n at System.Net.WebSockets.WinHttpWebSocket.SendAsync(ArraySegment`1 buffer, WebSocketMessageType messageType, Boolean endOfMessage, CancellationToken cancellationToken)\r\n   at System.Net.WebSockets.WebSocketHandle.SendAsync(ArraySegment`1 buffer, WebSocketMessageType messageType, Boolean endOfMessage, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Sockets.Client.WebSocketsTransport.<SendMessages>d__18.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Sockets.Client.HttpConnection.<SendAsyncCore>d__51.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Sockets.Client.HttpConnection.<SendAsync>d__50.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.<SendInvocation>d__31.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.<InvokeAsyncCore>d__27.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.<InvokeAsync>d__26.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnectionExtensions.<InvokeAsync>d__33`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at POEUtility.Workers.SignalRChangeHubWorker.<DoWorkAsync>d__8.MoveNext() in C:\\Projects\\Other\\POEUtility\\POEUtility.Workers\\SignalRChangeHubWorker.cs:line 90\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at POEUtility.Console.Program.<WorkerLoop>d__5.MoveNext() in C:\\Projects\\Other\\POEUtility\\POEUtility.Console\\Program.cs:line 77\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at POEUtility.Console.Program.<MainAsync>d__4.MoveNext() in \r\n```\r\n\r\n\r\nWhen this happens, the Closed event does **NOT** fire. So the connection variable still thinks it is connected and the next time I send a message I get the following **infamous** error.\r\n\r\nObject reference not set to an instance of an object.\r\n\r\nstack\r\n\r\n```\r\nat Microsoft.AspNetCore.SignalR.Client.HubConnection.<SendInvocation>d__31.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.<InvokeAsyncCore>d__27.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.<InvokeAsync>d__26.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnectionExtensions.<InvokeAsync>d__33`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at POEUtility.Workers.SignalRChangeHubWorker.<DoWorkAsync>d__8.MoveNext() in C:\\Projects\\Other\\POEUtility\\POEUtility.Workers\\SignalRChangeHubWorker.cs:line 90\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at POEUtility.Console.Program.<WorkerLoop>d__5.MoveNext() in C:\\Projects\\Other\\POEUtility\\POEUtility.Console\\Program.cs:line 80\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at POEUtility.Console.Program.<MainAsync>d__4.MoveNext() in \r\n```\r\n\r\n\r\nAt this point I do not know if the connection is active or not active? There are no properties available to tell me what state the connection is in.\r\n\r\nWorkaround:\r\n\r\nI suppose I can catch all exceptions, dump the connection and try to recreate it for next use. \r\n"},{"Id":"6760672945","Type":"PullRequestEvent","CreatedAt":"2017-10-24T21:30:14","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1037","RelatedDescription":"Merged pull request \"Enable reconnect for Redis connection by default\" (#1037) at aspnet/SignalR","RelatedBody":"For now if you try to send when the redis connection is down you'll get something like:\r\n```\r\nError: No connection is available to service this operation:\r\nPUBLISH ChatSample.Hubs.Chat; SocketFailure on 127.0.0.1:6379/Subscription,\r\norigin: Error, input-buffer: 0, outstanding: 0, last-read: 1s ago, last-write: 1s ago,\r\nunanswered-write: 21077s ago, keep-alive: 60s, pending: 0, state: Connecting,\r\nlast-heartbeat: never, last-mbeat: -1s ago, global: 1s ago\r\n```\r\nand we won't keep a queue or anything around.\r\n\r\nWe'll probably want to change the error returned in the future."},{"Id":"6760157874","Type":"PullRequestEvent","CreatedAt":"2017-10-24T19:37:10","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1051","RelatedDescription":"Opened pull request \"[Redis] Add functional test support\" (#1051) at aspnet/SignalR","RelatedBody":"Recreating, wouldn't let me reopen\r\nRequires #1037 to be in before merging."},{"Id":"6759812393","Type":"PullRequestEvent","CreatedAt":"2017-10-24T18:23:59","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1048","RelatedDescription":"Closed pull request \"[Redis] Add functional test support\" (#1048) at aspnet/SignalR","RelatedBody":"Only added a single test as proof-of-concept.\r\n\r\nRequires #1037 to be in before merging."}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"6761555375","Type":"IssuesEvent","CreatedAt":"2017-10-25T02:32:15","Actor":"Cuiqs76","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6990","RelatedDescription":"Closed issue \"razor page as partial view throw error\" (#6990) at aspnet/Mvc","RelatedBody":"my _layout as below:\r\n`<body>\r\n    <div>\r\n       @await Html.PartialAsync(\"_LayoutHeader\") \r\n        <div class=\"row\">\r\n            <div>\r\n                <div class=\"row\">\r\n                    @RenderBody()\r\n                </div>\r\n            </div>\r\n        </div>\r\n</div>`\r\n\r\nrenderbody will load index view.  the index and _LayoutHeader view are razor pages.\r\n\r\nwhen run throw error:\r\nAn unhandled exception occurred while processing the request.\r\nInvalidOperationException: The model item passed into the ViewDataDictionary is of type 'Yiko.Ent.WebRazorPages.Pages.Home.IndexModel', but this ViewDataDictionary instance requires a model item of type 'Yiko.Ent.WebRazorPages.Pages._LayoutHeaderModel'.\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.EnsureCompatible(object value) "},{"Id":"6761109097","Type":"IssuesEvent","CreatedAt":"2017-10-24T23:36:26","Actor":"danroth27","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6725","RelatedDescription":"Reopened issue \".NET Core 2.0 new Razor project on Windows 8.1 build fails with error CS1646 in _ViewStart.cshtml\" (#6725) at aspnet/Mvc","RelatedBody":"_From @gregbradley on August 21, 2017 6:26_\n\nAfter installing DotNet Core 2.0.0 on a Windows 8.1 machine and creating a new Razor project (dotnet new razor) the project fails to build. Have tried also creating the project using Visual Studio 2017 with the same result. Also tried on another Windows 8.1 machine with the same result.\r\n\r\nBuild FAILED.\r\n\r\nPages\\_ViewStart.cshtml(1,1): error CS1646: Keyword, identifier, or string expected after verbatim specifier: @ [D:\\DP\\Core20\\Core20.csproj]\r\nPages\\_ViewStart.cshtml(1,2): error CS1022: Type or namespace definition, or end-of-file expected [D:\\DP\\Core20\\Core20.csproj]\r\nPages\\_ViewStart.cshtml(2,12): error CS1022: Type or namespace definition, or end-of-file expected [D:\\DP\\Core20\\Core20.csproj]\r\nPages\\_ViewStart.cshtml(3,1): error CS1022: Type or namespace definition, or end-of-file expected [D:\\DP\\Core20\\Core20.csproj]\r\nPages\\_ViewStart.cshtml(2,5): error CS0116: A namespace cannot directly containmembers such as fields or methods [D:\\DP\\Core20\\Core20.csproj]\r\n    0 Warning(s)\r\n    5 Error(s)\n\n_Copied from original issue: dotnet/core#875_"},{"Id":"6758986248","Type":"IssuesEvent","CreatedAt":"2017-10-24T15:41:57","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6967","RelatedDescription":"Closed issue \"Seems IEnumerable has special casing when checking view's declared model compatibility\" (#6967) at aspnet/Mvc","RelatedBody":"Say I have a view with the following\r\n```c#\r\n@model IEnuermable<Animal>\r\n```\r\nand I have a controller which passes a List[Cat] object, this will work\r\n\r\nif I change to IList I get a model is not compatible error.\r\n```c#\r\n@model IList<Animal>\r\n```"},{"Id":"6758387993","Type":"IssuesEvent","CreatedAt":"2017-10-24T14:04:18","Actor":"desmondgc","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6993","RelatedDescription":"Closed issue \"Cannot find reference assembly 'System.AppContext.dll' file for package System.AppContext.Reference\" (#6993) at aspnet/Mvc","RelatedBody":"In an ASP.NET Core 2.0 project targeting .NET Framework 4.7.1, we encountered the following exception at startup on developer workstations:\r\n\r\n```\r\nSystem.InvalidOperationException: Cannot find reference assembly 'System.AppContext.dll' file for package System.AppContext.Reference\r\n   at Microsoft.Extensions.DependencyModel.Resolution.ReferenceAssemblyPathResolver.TryResolveAssemblyPaths(CompilationLibrary library, List`1 assemblies)\r\n   at Microsoft.Extensions.DependencyModel.Resolution.CompositeCompilationAssemblyResolver.TryResolveAssemblyPaths(CompilationLibrary library, List`1 assemblies)\r\n   at Microsoft.Extensions.DependencyModel.CompilationLibrary.ResolveReferencePaths(ICompilationAssemblyResolver resolver, List`1 assemblies)\r\n   at Microsoft.Extensions.DependencyModel.CompilationLibrary.ResolveReferencePaths()\r\n   at Microsoft.AspNetCore.Mvc.ApplicationParts.AssemblyPart.<>c.<GetReferencePaths>b__8_0(CompilationLibrary library)\r\n   at System.Linq.Enumerable.<SelectManyIterator>d__17`2.MoveNext()\r\n   at Microsoft.AspNetCore.Mvc.Razor.Compilation.MetadataReferenceFeatureProvider.PopulateFeature(IEnumerable`1 parts, MetadataReferenceFeature feature)\r\n   at Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.PopulateFeature[TFeature](TFeature feature)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorReferenceManager.GetCompilationReferences()\r\n   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorReferenceManager.get_CompilationReferences()\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.LazyMetadataReferenceFeature.get_References()\r\n   at Microsoft.CodeAnalysis.Razor.CompilationTagHelperFeature.GetDescriptors()\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorTagHelperBinderPhase.ExecuteCore(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorEnginePhaseBase.Execute(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorEngine.Process(RazorCodeDocument document)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorTemplateEngine.GenerateCode(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CompileAndEmit(String relativePath)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CreateCacheEntry(String normalizedPath)\r\n```\r\n\r\nThe site worked as expected when targeting net461 and net47. Interestingly, the site worked as expected targeting net471 when deployed on a web server (runtime vs SDK?)\r\n\r\nThe resolution was to include a reference to Microsoft.AspNetCore.Mvc.Razor.ViewCompilation, like so:\r\n\r\n```\r\n<PackageReference Include=\"Microsoft.AspNetCore.Mvc.Razor.ViewCompilation\" Version=\"2.0.0\" PrivateAssets=\"All\" />\r\n```\r\n\r\n(Because we target full framework, we cannot reference the Microsoft.AspNetCore.All metapackage.)"},{"Id":"6758382849","Type":"IssuesEvent","CreatedAt":"2017-10-24T14:03:25","Actor":"desmondgc","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6993","RelatedDescription":"Opened issue \"Cannot find reference assembly 'System.AppContext.dll' file for package System.AppContext.Reference\" (#6993) at aspnet/Mvc","RelatedBody":"In an ASP.NET Core 2.0 project targeting .NET Framework 4.7.1, we encountered the following exception at startup on developer workstations:\r\n\r\n```\r\nSystem.InvalidOperationException: Cannot find reference assembly 'System.AppContext.dll' file for package System.AppContext.Reference\r\n   at Microsoft.Extensions.DependencyModel.Resolution.ReferenceAssemblyPathResolver.TryResolveAssemblyPaths(CompilationLibrary library, List`1 assemblies)\r\n   at Microsoft.Extensions.DependencyModel.Resolution.CompositeCompilationAssemblyResolver.TryResolveAssemblyPaths(CompilationLibrary library, List`1 assemblies)\r\n   at Microsoft.Extensions.DependencyModel.CompilationLibrary.ResolveReferencePaths(ICompilationAssemblyResolver resolver, List`1 assemblies)\r\n   at Microsoft.Extensions.DependencyModel.CompilationLibrary.ResolveReferencePaths()\r\n   at Microsoft.AspNetCore.Mvc.ApplicationParts.AssemblyPart.<>c.<GetReferencePaths>b__8_0(CompilationLibrary library)\r\n   at System.Linq.Enumerable.<SelectManyIterator>d__17`2.MoveNext()\r\n   at Microsoft.AspNetCore.Mvc.Razor.Compilation.MetadataReferenceFeatureProvider.PopulateFeature(IEnumerable`1 parts, MetadataReferenceFeature feature)\r\n   at Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.PopulateFeature[TFeature](TFeature feature)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorReferenceManager.GetCompilationReferences()\r\n   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorReferenceManager.get_CompilationReferences()\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.LazyMetadataReferenceFeature.get_References()\r\n   at Microsoft.CodeAnalysis.Razor.CompilationTagHelperFeature.GetDescriptors()\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorTagHelperBinderPhase.ExecuteCore(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorEnginePhaseBase.Execute(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorEngine.Process(RazorCodeDocument document)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorTemplateEngine.GenerateCode(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CompileAndEmit(String relativePath)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CreateCacheEntry(String normalizedPath)\r\n```\r\n\r\nThe site worked as expected when targeting net461 and net47. Interestingly, the site worked as expected targeting net471 when deployed on a web server (runtime vs SDK?)\r\n\r\nThe resolution was to include a reference to Microsoft.AspNetCore.Mvc.Razor.ViewCompilation, like so:\r\n\r\n```\r\n<PackageReference Include=\"Microsoft.AspNetCore.Mvc.Razor.ViewCompilation\" Version=\"2.0.0\" PrivateAssets=\"All\" />\r\n```\r\n\r\n(Because we target full framework, we cannot reference the Microsoft.AspNetCore.All metapackage.)"},{"Id":"6758230628","Type":"IssuesEvent","CreatedAt":"2017-10-24T13:37:21","Actor":"epic2001","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6992","RelatedDescription":"Opened issue \"AddApplicationPart with loaded Assembly throw \"Cannot find compilation library location for package\"\" (#6992) at aspnet/Mvc","RelatedBody":"Hi, I want to add external mvc controllers and compiled views to my asp.net core mvc webapp like plugin.\r\n\r\nThis sample code (in Startup Configuration) throw \"InvalidOperationException: Cannot find compilation library location for package 'WebAI'\":\r\n```\r\n            var dllFullPath = @\"C:\\_\\WebAI.dll\";\r\n            var assembly = AssemblyLoadContext.Default.LoadFromAssemblyPath(dllFullPath);\r\n            services.AddMvc()\r\n                 .AddApplicationPart(assembly);\r\n```\r\n\r\nFollowing the workaround at [https://github.com/dotnet/core-setup/issues/2981#issuecomment-322572374](url) I got the same exception:\r\n```\r\n            var dllFullPath = @\"C:\\_\\WebAI.dll\";\r\n            var assembly = AssemblyLoadContext.Default.LoadFromAssemblyPath(dllFullPath);\r\n            services.AddMvc()\r\n                 .ConfigureApplicationPartManager(manager =>\r\n                 {\r\n                     var oldMetadataReferenceFeatureProvider = manager.FeatureProviders.First(f => f is MetadataReferenceFeatureProvider);\r\n                     manager.FeatureProviders.Remove(oldMetadataReferenceFeatureProvider);\r\n                     manager.FeatureProviders.Add(new ReferencesMetadataReferenceFeatureProvider());\r\n                 })\r\n                 .AddApplicationPart(assembly);\r\n```\r\n\r\nThank you!\r\n"},{"Id":"6756716372","Type":"IssuesEvent","CreatedAt":"2017-10-24T08:14:40","Actor":"marcusien","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6991","RelatedDescription":"Opened issue \"Get the metadata from the resolved type instead of declared type\" (#6991) at aspnet/Mvc","RelatedBody":"Hi,\r\n\r\nI introduced my issue in this solution : https://github.com/marcusien/MetadataIssue\r\n\r\nI got a view that expect a model as at least a ViewModelBase\r\nBut, of course, I could have a ViewModel which inherits from this ViewModelBase (in my case ChildViewModel)\r\nIn the Index controller action, I return the view Index.cshtml with a new instance of ChildViewModel\r\n\r\nIn the ViewModelBase, i got a virtual property that is decorated by an attribute. This attribute can be redefine in the ChildViewModel by overriding the virtual property in the ChildViewModel.\r\n\r\nI'm trying to get the value of this attribute inside a TagHelper by checking the ValidatorMetadata. I succeed to get the attribute but it returns the attribute value declared in the ViewModelBase (which is the declared type in the razor view) instead of the actual ViewModel (which is ChildViewModel as provided by the controller action).\r\n\r\nAs you can see in my project, I can do a workaround for this case in my TagHelper but it's not a long term solution cause we need to implement a workaround in each part of the code which can know this kind of problem"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"6760730809","Type":"PullRequestEvent","CreatedAt":"2017-10-24T21:44:28","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1240","RelatedDescription":"Closed pull request \"Fix comment of variance time for Rfc6238\" (#1240) at aspnet/Identity","RelatedBody":"Since the `timestep` in `Rfc6238AuthenticationService` is 3 minutes, variance time for validation should be 9 minutes."},{"Id":"6760714295","Type":"PullRequestEvent","CreatedAt":"2017-10-24T21:40:25","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1419","RelatedDescription":"Merged pull request \"use WebHost.CreateDefaultBuilder in IdentitySample.Mvc\" (#1419) at aspnet/Identity","RelatedBody":"so that it picks up the logging config from the `appsettings.json`"},{"Id":"6755165506","Type":"PullRequestEvent","CreatedAt":"2017-10-23T22:53:17","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1481","RelatedDescription":"Opened pull request \"Fix issue with AddEntityFrameworkStores and user only store\" (#1481) at aspnet/Identity","RelatedBody":"Fixes https://github.com/aspnet/Identity/issues/1480\r\n\r\nAlso patches test hole, the existing tests were using the store classes directly, rather than exercising the AddEntityFrameworkStores reflection logic so this code was never hit.\r\n\r\n@ajcvickers "},{"Id":"6755156586","Type":"IssuesEvent","CreatedAt":"2017-10-23T22:50:34","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1480","RelatedDescription":"Opened issue \"AddEntityFrameworkStores with only User specifies too many generic arguments\" (#1480) at aspnet/Identity","RelatedBody":"Reported by https://github.com/aspnet/Identity/pull/1479\r\n"},{"Id":"6751897477","Type":"PullRequestEvent","CreatedAt":"2017-10-23T11:29:51","Actor":"KhuongNtrd","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1479","RelatedDescription":"Opened pull request \" remove roleType while make UserOnlyStore\" (#1479) at aspnet/Identity","RelatedBody":""},{"Id":"6749174271","Type":"IssuesEvent","CreatedAt":"2017-10-22T15:59:24","Actor":"CarbonFactory","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1478","RelatedDescription":"Opened issue \"ASP.NET Core 2.0 Identity Expiration\" (#1478) at aspnet/Identity","RelatedBody":"There is a cookie with the name \".AspNetCore.Identity.Application\" added after I login the user and it's expiration time is set to 14 days from now, `2017-11-05T15:52:03.669Z`\r\n\r\n````\r\n services.AddIdentity<ApplicationUser, ApplicationRole>()\r\n                .AddEntityFrameworkStores<ApplicationDbContext>()\r\n                .AddUserManager<ApplicationUserManager>()\r\n                .AddSignInManager<ApplicationSignInManagerr>()\r\n                .AddDefaultTokenProviders();\r\n\r\n\r\nservices.AddMvc(opts =>\r\n            {\r\n                opts.Filters.AddService(typeof(AjaxAntiforgeryCookieResultFilter));\r\n            })\r\n services\r\n                .AddAuthentication()\r\n                .AddJwtBearer(options =>\r\n                {\r\n                    options.RequireHttpsMetadata = false;\r\n                    options.SaveToken = true;\r\n                    options.TokenValidationParameters = tokenValidationParameters;\r\n                    options.Events = jwtBearerEvents;\r\n                });\r\n\r\n            services.ConfigureApplicationCookie(options =>\r\n            {\r\n                options.AccessDeniedPath = new PathString(\"/login\");\r\n                options.LoginPath = new PathString(\"/login\");\r\n                options.Cookie.Expiration = TimeSpan.FromMinutes(1);\r\n            });\r\n\r\n            services.AddAuthorization();\r\n\r\n````\r\n\r\nAbove is the related part of the code for brevity.\r\n\r\nHow do I ensure that after 10 mins, if the user refreshes the webpage, he is logged out and re-directed to login.\r\n\r\nThe `ConfigureApplicationCookie` values seem to be ignored."}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"6761836133","Type":"IssuesEvent","CreatedAt":"2017-10-25T04:27:02","Actor":"shravan2x","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2131","RelatedDescription":"Closed issue \"Handling BadHttpRequestException\" (#2131) at aspnet/KestrelHttpServer","RelatedBody":"I have an MVC action to upload files. For this, I use `await HttpContext.Request.Body.ReadAsync(buffer, 0, buffer.Length)` in a loop and then return an `Ok()` at the end.\r\n\r\nThis works fine, except when a client closes the connection before the upload is complete. When this happens, the `ReadAsync` method throws a `BadHttpRequestException`. In my action, I would like to handle this exception, mark the upload as failed in the database and then just return. However, I'm not sure what the right type to return would be. Returning null throws another `InvalidOperationException` with the message \"Cannot return null from an action method with a return type of 'Microsoft.AspNetCore.Mvc.IActionResult'\".\r\n\r\nHow could I return from an action while indicating to MVC to just not respond at all?\r\n\r\n**EDIT**: Returning an `Ok()` seems to not throw an exception, but is this the right behavior?"},{"Id":"6761142287","Type":"PullRequestEvent","CreatedAt":"2017-10-24T23:48:34","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2133","RelatedDescription":"Opened pull request \"Better handle Socket transport accept errors\" (#2133) at aspnet/KestrelHttpServer","RelatedBody":"Also don't log server-aborted connections as errors."},{"Id":"6760990615","Type":"PullRequestEvent","CreatedAt":"2017-10-24T22:56:33","Actor":"anurse","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2132","RelatedDescription":"Opened pull request \"add event names to Logging messages\" (#2132) at aspnet/KestrelHttpServer","RelatedBody":"I was in KestrelTrace and noticed that we haven't done the \"Update all use of EventID to include Event Names\" update to this repo. So I ran my VsVim macro on these files (see @davidfowl , VsVim is great) and created this PR :). Pretty mild update, shouldn't affect anything functional except that events now include a name as well as an integer Id."},{"Id":"6760989490","Type":"IssuesEvent","CreatedAt":"2017-10-24T22:56:13","Actor":"shravan2x","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2131","RelatedDescription":"Opened issue \"Handling BadHttpRequestException\" (#2131) at aspnet/KestrelHttpServer","RelatedBody":"I have an MVC action to upload files. For this, I use `await HttpContext.Request.Body.ReadAsync(buffer, 0, buffer.Length)` and then return an `Ok()` at the end without an issue.\r\n\r\nThis works fine, except when a client closes an issue before the upload is complete. When this happens, the `ReadAsync` method throws a `BadHttpRequestException`. In my action, I would like to handle this exception, mark the upload as failed in the database and then just return. However, I'm not sure what the right type to return would be. Returning null throws another `InvalidOperationException` with the message \"Cannot return null from an action method with a return type of 'Microsoft.AspNetCore.Mvc.IActionResult'\".\r\n\r\nHow could I return from an action while indicating to MVC to just not respond at all?"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"6761211089","Type":"PullRequestEvent","CreatedAt":"2017-10-25T00:14:30","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1736","RelatedDescription":"Opened pull request \"React to API feedback on VisualStudioRazorParser.\" (#1736) at aspnet/Razor","RelatedBody":"- Changed `ReparseAsync` to be `QueueReparse`. It's now async void to not give the misconception that it blocks until a reparse has been completed.\r\n- Removed `IContextChangedListener`. People can get the same effect of the interface by retrieving the document tracker interface via the `RazorEditorFactoryService` and then when its context changes getting the parser.\r\n- Exposed `TryGetParser` to aid in replacing `IContextChangedListener`.\r\n- Updated tests to not rely on `IContextChangedListener`."},{"Id":"6761051559","Type":"IssuesEvent","CreatedAt":"2017-10-24T23:16:39","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1735","RelatedDescription":"Opened issue \"Transition RazorTextViewConnectionListener to use ITextViewConnectionListener\" (#1735) at aspnet/Razor","RelatedBody":"It currently depends on the WpfTextViewConnectionListener. This is windows specific; therefore, we should go with an interface that works in VS for mac."},{"Id":"6760181547","Type":"PullRequestEvent","CreatedAt":"2017-10-24T19:42:30","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1734","RelatedDescription":"Opened pull request \"Make AtDirectiveCompletionPoint resilient to null owners.\" (#1734) at aspnet/Razor","RelatedBody":"- Added a test to verify the new owner == null case.\r\n\r\n#1733"},{"Id":"6759613883","Type":"IssuesEvent","CreatedAt":"2017-10-24T17:43:16","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1718","RelatedDescription":"Closed issue \"Harvest editor settings from the project and trigger project changes accordingly.\" (#1718) at aspnet/Razor","RelatedBody":"Today the editor settings are hard coded today. We need to enable the ability to read from the editor settings directly or indirectly and then trigger project change/updates to force reparses for Razor documents."},{"Id":"6759611787","Type":"PullRequestEvent","CreatedAt":"2017-10-24T17:42:51","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1732","RelatedDescription":"Merged pull request \"Add EditorSettings management to workspaces.\" (#1732) at aspnet/Razor","RelatedBody":"- Built a design where there's a singleton `EditorSettingsManager` that handles the \"current\" settings state in the world. When it detects that settings have changed via an update method being called it dispatches a `Changed` event.\r\n- Exposed editor settings on the document tracker. When the editor settings change the document tracker dispatches to any listeners that its context has changed.\r\n- Added tests to validate all the various settings management.\r\n\r\n#1718"},{"Id":"6755311594","Type":"IssuesEvent","CreatedAt":"2017-10-23T23:43:23","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1733","RelatedDescription":"Opened issue \"Protect against NREs in DirectiveCompletionProvider\" (#1733) at aspnet/Razor","RelatedBody":"Today we attempt to locate the owner of a change and if its `null` we NRE. That NRE crashes VS.\r\n\r\nShould fix this for the 15.5 release and then port back to latest."},{"Id":"6754901629","Type":"PullRequestEvent","CreatedAt":"2017-10-23T21:39:16","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1722","RelatedDescription":"Merged pull request \"Manage VisualStudioRazorParser lifetime.\" (#1722) at aspnet/Razor","RelatedBody":"- Exposed `VisualStudioRazorParser`, `DocumentStructureChangedEventArgs` and `ICanHasContextChangedListener` as ways to consume the new parser for a Razor document.\r\n- Split the `VisualStudioRazorParser` into an abstract base and an implementation to avoid internal constructors.\r\n- Changed the parser and corresponding smart indenter to take in document trackers, template engine factories and parser context change listeners. Of these additions the parser context change listeners will be deprecated once we own the TagHelper discovery mechanisms.\r\n- Changed how the parser manages its internal parsing life cycle. It now creates template engines when the document tracker tells it to. So when project changes happen or new documents are opened the parser will re-instantiate its internal parsers to ensure that they're parsing against the correct configurations.\r\n- Split the `VisualStudioDocumentTrackerFactory` into a provider and a factory. The provider exposes the old `GetTracker` methods where the factory is the text view connection listener implementation.\r\n- Changed the code document provider to now use the parser provider in order to locate code documents associated with buffers. Prior to this that logic was hard coded.\r\n- Removed old template engine reconstruction logic in the document tracker now that the parser owns that piece.\r\n\r\n#1630"}],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"6760798601","Type":"IssuesEvent","CreatedAt":"2017-10-24T22:00:58","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/67","RelatedDescription":"Closed issue \"External Logins does not set the Email\" (#67) at aspnet/Templates","RelatedBody":"- Enable Facebook Login\n- Login using Facebook for the first time\n- Email field is blank. It should be set from what we got from Facebook\n"},{"Id":"6760789807","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:58:48","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/86","RelatedDescription":"Closed issue \"Identity: Consider less generic name for ManageController\" (#86) at aspnet/Templates","RelatedBody":"Manage is a very generic name and you would probably expect http://abcdefg/Manage to be about managing something from your applications business domain rather than user accounts.\n\nManageAccount would probably be a better name.\n"},{"Id":"6760785159","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:57:37","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/115","RelatedDescription":"Closed issue \"Need more templates\" (#115) at aspnet/Templates","RelatedBody":"MVC 6 project templates should include a test project template. And the main ASP.NET 5 Preview Templates / Web Application or ... / Empty templates should have a few more sub-options, enabling for example addition and removal of XML support, creation of a minimal MVC project, or adding in EF (without choosing Individual User Accounts authentication).\n\nHopefully this will allow the new project dialogue to enable the options shown below -- plus a few options specific to MVC 6.\n![disabled project features](https://cloud.githubusercontent.com/assets/6431421/8257821/2a76a606-1665-11e5-8e75-cdb21473f6a1.png)\n"},{"Id":"6760779940","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:56:18","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/104","RelatedDescription":"Closed issue \"OrgAuth: Account Controller should return void\" (#104) at aspnet/Templates","RelatedBody":"Since https://github.com/aspnet/Mvc/issues/2409 is fixed. We should change the AccountController for SSO/ MultiOrg to return void\n"},{"Id":"6760777806","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:46","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/120","RelatedDescription":"Closed issue \"Template feedback\" (#120) at aspnet/Templates","RelatedBody":"Porting from MVC repo https://github.com/aspnet/Mvc/issues/2637\n"},{"Id":"6760775251","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:10","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/137","RelatedDescription":"Closed issue \"Need a SPA template\" (#137) at aspnet/Templates","RelatedBody":""},{"Id":"6760770959","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:54:08","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/365","RelatedDescription":"Closed issue \"Poor user and dev experience in Identity email confirmation\" (#365) at aspnet/Templates","RelatedBody":"There are two issues using the default template for identity when using email confirmation.\n\nFollowing the guide here: http://docs.asp.net/en/latest/security/authentication/accconfirm.html\n\nPoor user experience: When you click \"Register\" it sends the email off, but just redirects the user to the Home controller. Redirecting to something else to indicate they have to confirm their account would be a better example. Perhaps the default template should have such a view OOTB.\n\nPoor dev experience: When logging in with an external account (lets say Facebook) if the account doesn't exist you get thrown into AccountController.ExternalLoginConfirmation, great. This screen requires an email, so you complete the registration then you're logged in but never shoots off the email confirmation link here. Perhaps a commented out section in this action to deal with this would improve the dev experience here.\n"},{"Id":"6760770378","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:59","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/382","RelatedDescription":"Closed issue \"MVC Template Should Apply ResponseCache Attribute to Error Action\" (#382) at aspnet/Templates","RelatedBody":"HomeController.Error() should be updated:\n\n```\n    [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]\n    public IActionResult Error()\n    {\n        return View();\n    }\n```\n\nThere is no good scenario where you would want errors to be cached, either on the client or via a proxy, or to have error information stored in such caches (especially if it might contain sensitive information in stack traces, etc.).\n"},{"Id":"6760769801","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:51","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/406","RelatedDescription":"Closed issue \"Add a flow for changing email in the Manage page\" (#406) at aspnet/Templates","RelatedBody":"Porting from ASP.NET Identity repo https://github.com/aspnet/Identity/issues/727\n"},{"Id":"6760769204","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:42","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/423","RelatedDescription":"Closed issue \"Don't create Project_Readme.html for ASP.NET 5 Empty\" (#423) at aspnet/Templates","RelatedBody":"I created an empty project for both ASP.NET 4 and ASP.NET 5. The ASP.NET 5 project had a Project_Readme.html and the ASP.NET 4 one did not. I'm not aware if that was on purpose or not, but we should be consistent with the empty projects. I think we should not add the Project_Readme.html for all Empty projects.\n"},{"Id":"6760768174","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:28","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/444","RelatedDescription":"Closed issue \"Support On-Premises option for Work & School Accounts\" (#444) at aspnet/Templates","RelatedBody":"Support this for Web APIs and Web Apps.\n"},{"Id":"6760767634","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:19","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/451","RelatedDescription":"Closed issue \"ValidationSummary.All should be replaced with ModelOnly\" (#451) at aspnet/Templates","RelatedBody":"All the views in the Accounts folder use\n`<div asp-validation-summary=\"ValidationSummary.All\" class=\"text-danger\"></div>`\n\nThey should just use \n`<div asp-validation-summary=\"ValidationSummary.ModelOnly\" class=\"text-danger\"></div>`\n\nSo you get each error twice. \n\n![image](https://cloud.githubusercontent.com/assets/3605364/13896326/ae916ee2-ed2b-11e5-8bf5-f9ad5246e82c.png)\n"},{"Id":"6760767057","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:11","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/490","RelatedDescription":"Closed issue \"Show external providers on the Register page\" (#490) at aspnet/Templates","RelatedBody":"The individual auth template has a login page and a register page. Login shows a password login and external providers. Register only shows a password login. Register should also show external providers, as this is where new users will go to sign-up.\n"},{"Id":"6760766431","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:02","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/492","RelatedDescription":"Closed issue \"Add tests to project templates\" (#492) at aspnet/Templates","RelatedBody":"Hi,\n\nTesting is unfortunately a part of most of our jobs. I don't know if it is already planned/done but in visual studio when I create a new ASP.NET MVC 6 (or is it Core 1 ? Not sure) there are no tests. This is particularly annoying for the template including user accounts. I spent a few hours writing tests for the included templates.\n\nI was wondering whether other people would be interested ?\n"}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"6704265290","Type":"IssuesEvent","CreatedAt":"2017-10-11T19:06:00","Actor":"StefH","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/877","RelatedDescription":"Closed issue \"VS 2017 RC : How to define a multi framework project ?\" (#877) at aspnet/Tooling","RelatedBody":"I've this **csproj** file:\r\n\r\n```xml\r\n<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" />\r\n  <PropertyGroup>\r\n    <TargetFrameworks>netstandard1.3</TargetFrameworks>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Compile Include=\"**\\*.cs\" />\r\n    <EmbeddedResource Include=\"**\\*.resx\" />\r\n  </ItemGroup>\r\n  <ItemGroup Condition=\" '$(TargetFramework)' == 'netstandard1.3' \">\r\n    <PackageReference Include=\"JetBrains.Annotations\">\r\n      <Version>10.2.1</Version>\r\n    </PackageReference>\r\n    <PackageReference Include=\"NETStandard.Library\">\r\n      <Version>1.6.1</Version>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Microsoft.NET.Sdk\">\r\n      <Version>1.0.0-alpha-20161104-2</Version>\r\n      <PrivateAssets>All</PrivateAssets>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Newtonsoft.Json\">\r\n      <Version>9.0.1</Version>\r\n    </PackageReference>\r\n  </ItemGroup>\r\n  <Import Project=\"$(MSBuildToolsPath)\\Microsoft.CSharp.targets\" />\r\n</Project>\r\n```\r\n\r\nWhich produces this error:\r\n```bash\r\nRestoring NuGet packages...\r\nTo prevent NuGet from restoring packages during build, open the Visual Studio Options dialog, click on the Package Manager node and uncheck 'Allow NuGet to download missing packages during build.'\r\nError occurred while restoring NuGet packages: Invalid restore input. Invalid target framework 'unsupported'. Input files: C:\\temp\\ClassLibrary1\\ClassLibrary1.csproj.\r\n1>------ Rebuild All started: Project: ClassLibrary1, Configuration: Debug Any CPU ------\r\n1>Build started 2016-11-23 07:43:43.\r\n1>Target DispatchToInnerBuilds:\r\n1>  Target _CheckForInvalidConfigurationAndPlatform:\r\n1>    C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets(733,5): error : The OutputPath property is not set for project 'ClassLibrary1.csproj'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='Debug'  Platform='AnyCPU'.  This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.\r\n1>  Done building target \"_CheckForInvalidConfigurationAndPlatform\" in project \"ClassLibrary1.csproj\" -- FAILED.\r\n1>\r\n1>  Done building project \"ClassLibrary1.csproj\" -- FAILED.\r\n1>\r\n1>Build FAILED.\r\n```"},{"Id":"6635483866","Type":"IssuesEvent","CreatedAt":"2017-09-25T22:47:03","Actor":"mlorbetske","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/829","RelatedDescription":"Closed issue \"(package.json) Namespaced packages do not display version & details on hover-over\" (#829) at aspnet/Tooling","RelatedBody":"(latest) VStudio 2015 Update **3**\n\n![image](https://cloud.githubusercontent.com/assets/2574412/19649471/eadc6be0-99d3-11e6-9d8e-565003f9e2cd.png)\n\nWhen hovering over Namespaced packages (@whatever/), version numbers and details are labeled as \"Uknown\".\n\nAlso intellisense comes out as \"Unknown\" as well when typing in the version area to the right.\n![image](https://cloud.githubusercontent.com/assets/2574412/19649727/e3f93e56-99d4-11e6-81e8-a89cd21abeee.png)\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6754805124","Type":"IssuesEvent","CreatedAt":"2017-10-23T21:16:00","Actor":"Eilon","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/274","RelatedDescription":"Opened issue \"ASP.NET/EF Core 2.0.3 patch pre-release test feed\" (#274) at aspnet/Announcements","RelatedBody":"Hi, we now have a public test feed that you can use to try out the ASP.NET/EF Core 2.0.3 patch!\r\n\r\nYou can test this pre-release patch by adding the following feed to your app's or machine's NuGet.config file:\r\n* `https://dotnet.myget.org/F/aspnet-2-0-2-october2017-patch-public/api/v3/index.json`\r\n   * ![image](https://user-images.githubusercontent.com/202643/31913542-4757d2a0-b7fc-11e7-9bf7-7157bd18a6ca.png)\r\n   * (please ignore the *name* of the feed; it is incorrect 😦)\r\n\r\n## Update your project\r\n1. Open an existing .NET Core 2.0 project's CSPROJ file\r\n2. Update the version of the `Microsoft.AspNetCore.All` package from `2.0.0` to `2.0.3-*`\r\n3. Update the version of all the other `<PackageReference>` items from `2.0.0` to `2.0.1-*` (*Note: This is a different version than the `.All` package!*)\r\n4. Add the following element to the `<PropertyGroup>` at the top of the CSPROJ file:\r\n   * `<NoWarn>$(NOWARN);NU1605</NoWarn>`\r\n5. From a command line window (terminal), run `dotnet restore` to restore the pre-release patch packages into the project (or restore packages from your IDE, such as Visual Studio 2017)\r\n6. You should now be able to run your project with the pre-release patch packages\r\n\r\n## Additional resources\r\n* More info on updating NuGet packages is available here:\r\n   * https://docs.microsoft.com/en-us/nuget/consume-packages/reinstalling-and-updating-packages\r\n* The full list of fixes and changes made in this patch are available using this query:\r\n   * https://github.com/search?utf8=%E2%9C%93&q=org%3Aaspnet+is%3Aissue+is%3Aclosed+milestone%3A2.0.3&type=Issues\r\n* You can browse the list of updated packages on this gallery page:\r\n   * https://dotnet.myget.org/gallery/aspnet-2-0-2-october2017-patch-public\r\n\r\n## Feedback\r\nWe are looking for feedback on this patch. We'd like to know if you have any issues with this patch by updating your apps and libraries to the latest packages and seeing if it fixes the issues you've had, or if it introduces any new issues. If you have any issues or questions, please reply on the [discussion thread](XYZ) to let us know as soon as possible.\r\n\r\n## What's next\r\nWe will post an update when the patch is publicly available on [NuGet.org](https://nuget.org).\r\n\r\nThanks,\r\nEilon"},{"Id":"6704873205","Type":"IssuesEvent","CreatedAt":"2017-10-11T21:19:35","Actor":"jbagga","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/273","RelatedDescription":"Opened issue \"Use ContractResolver to create paths from expressions for json-patch\" (#273) at aspnet/Announcements","RelatedBody":"`JsonPatchDocumentOfT.cs` will use the `ContractResolver` provided to get paths instead of forcing to lower case.\r\n\r\nAddresses aspnet/JsonPatch#90.\r\n\r\nSee aspnet/JsonPatch for discussion.\r\n"},{"Id":"6692649574","Type":"IssuesEvent","CreatedAt":"2017-10-09T17:08:31","Actor":"Tratcher","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/271","RelatedDescription":"Opened issue \"WsFederation 2.0.0-preview1 out of band release\" (#271) at aspnet/Announcements","RelatedBody":"WsFederation preview support is now available for ASP.NET Core 2.0.0. The Microsoft.AspNetCore.Authentication.WsFederation 2.0.0-preview1 package is available at https://www.nuget.org/packages/Microsoft.AspNetCore.Authentication.WsFederation/. This is a standalone preview that targets netstandard2.0 and should work with existing ASP.NET Core 2.0.0 applications (.NET Core 2.0 or .NET 4.6.1). A non-preview ASP.NET Core 2.0.0 compatible package will follow once we’ve addressed your feedback.\r\n \r\nThe code is available at https://github.com/aspnet/security/tree/rel/2.0.0-ws-preview1 and issues can be filed at https://github.com/aspnet/security/issues. Please give us a 👍 from the reactions menu on the linked discussion post if you have successfully used this component and are ready for the final release.\r\n \r\nThis component is a port from Microsoft.Owin.Security.WsFederation and uses many of the same mechanics. It has also been updated to integrate with ASP.NET Core 2.0’s authentication model. See the samples below.\r\n \r\nAside from updating the usage pattern to match ASP.NET Core, there are also some functional changes to be aware of.\r\nA.\tThis component no longer checks every form post request for sign-in messages by default. Sign-in callbacks are restricted to the \"/signin-wsfed\" path by default. The CallbackPath can be changed to the application root “/” used by some auth providers if you also enable SkipUnrecognizedRequests to allow sharing that request path with other components.\r\nB.\tThis component no longer allows unsolicited logins by default. That WsFederation protocol feature is susceptible to XSRF attacks. See the AllowUnsolicitedLogins option to opt into that feature if your application requires it.\r\n\r\nSee https://github.com/aspnet/Security/issues/1473 for discussion.\r\n \r\nSamples:\r\n \r\nFor applications only using WsFederation (similar to using OpenIdConnect):\r\n \r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddAuthentication(sharedOptions =>\r\n            {\r\n                sharedOptions.DefaultScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n                sharedOptions.DefaultSignInScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n                sharedOptions.DefaultChallengeScheme = WsFederationDefaults.AuthenticationScheme;\r\n            })\r\n            .AddWsFederation(options =>\r\n            {\r\n                options.Wtrealm = Configuration[\"wsfed:realm\"];\r\n                options.MetadataAddress = Configuration[\"wsfed:metadata\"];\r\n            })\r\n            .AddCookie();\r\n        }\r\n \r\n        public void Configure(IApplicationBuilder app)\r\n        {\r\n           app.UseAuthentication();\r\n \r\n                         // …\r\n        }\r\n \r\nFor applications using WsFederation with Identity:\r\n \r\n            services.AddAuthentication()\r\n                .AddWsFederation(options =>\r\n                {\r\n                    options.Wtrealm = Configuration[\"wsfed:realm\"];\r\n                    options.MetadataAddress = Configuration[\"wsfed:metadata\"];\r\n                });\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"917884946324250624","CreatedAt":"2017-10-10T22:49:59+00:00","UserScreenname":"aspnet","Text":"The #aspnet Community Standup starts now - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":9,"RawContent":null},{"Id":"917877107904036865","CreatedAt":"2017-10-10T22:18:50+00:00","UserScreenname":"aspnet","Text":"Join us in a half hour (3:45 PM Pacific) for this week's #aspnet Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":3,"RawContent":null},{"Id":"915262407743647744","CreatedAt":"2017-10-03T17:08:57+00:00","UserScreenname":"aspnet","Text":"We're live at https://t.co/4Ioo9jNSN2 for the exciting #SignalR deep dive. Join us now!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":32,"FavoriteCount":22,"RawContent":null},{"Id":"915242491774869504","CreatedAt":"2017-10-03T15:49:49+00:00","UserScreenname":"aspnet","Text":"Join us for some #SignalR Core demos at 10 AM PDT (UTC-7) on #ASPNET Community Standup w/ SignalR dev @moozzyk.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":57,"FavoriteCount":26,"RawContent":null},{"Id":"912821323675529216","CreatedAt":"2017-09-26T23:28:57+00:00","UserScreenname":"aspnet","Text":"This week's community links from the #ASPNET Community Standup https://t.co/M37VVhlzcZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":8,"RawContent":null},{"Id":"912799120355581952","CreatedAt":"2017-09-26T22:00:43+00:00","UserScreenname":"aspnet","Text":"Join us at 3:45 PM Pacific (UTC+8) for the #ASPNET Community Standup. #dotNetConf recap, @SignalR and more.\nhttps://t.co/sgzsUBZksP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":22,"FavoriteCount":10,"RawContent":null}]}},"RunOn":"2017-10-25T05:30:09.7997506Z","RunDurationInMilliseconds":7970}