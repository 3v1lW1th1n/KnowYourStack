{"Data":{"Blog":{"FeedItems":[{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null},{"Title":"NuGet Summer 2018 Roadmap","PublishedOn":"2018-07-02T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This blog post provides insights into the NuGet team plans for the upcoming quarter (July &#8211; Sep 2018). In the March 2018 NuGet Spring 2018 Roadmap, we had outlined Package Signing,...","Href":"https://devblogs.microsoft.com/nuget/nuget-summer-2018-roadmap/","RawContent":null},{"Title":"Introducing signed package submissions to NuGet.org","PublishedOn":"2018-05-22T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In September 2017, we announced our plans to improve the security of the NuGet ecosystem by introducing the ability for package authors to sign packages. Today, we want to announce support for any...","Href":"https://devblogs.microsoft.com/nuget/introducing-signed-package-submissions/","RawContent":null},{"Title":"NuGet.org will only support MSA/AAD starting June 1st, 2018","PublishedOn":"2018-05-15T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We had previously announced the deprecation of NuGet.org&#8217;s home-grown authentication in favor of Microsoft accounts (MSA) that will allow us to add support for additional security systems such...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-only-support-msa-aad-starting-june/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"10070751334","Type":"IssuesEvent","CreatedAt":"2019-07-23T23:49:45","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/6757","RelatedDescription":"Closed issue \"Investigate whether we need to completely disable NullValueHandling.Ignore on all fields\" (#6757) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"10070623873","Type":"PullRequestEvent","CreatedAt":"2019-07-23T23:16:19","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7369","RelatedDescription":"Opened pull request \"Add a simple NuGetDeleteEvaluator\" (#7369) at NuGet/NuGetGallery","RelatedBody":"Add a new simple evaluator for us to use to put/test policies.\r\n\r\nthis will wait to go out until we have the Unconfirmed Deletes flowing through first."},{"Id":"10069569624","Type":"IssuesEvent","CreatedAt":"2019-07-23T20:08:31","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7322","RelatedDescription":"Closed issue \"Gallery tests fail when offline\" (#7322) at NuGet/NuGetGallery","RelatedBody":"## Describe the bug\r\nThe Gallery's tests do not pass if your computer is not connected to the internet.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Go offline\r\n1. Run `.\\buildandtest.ps1`\r\n\r\nThe [`CorrelatingHttpClientHandlerFacts`](https://github.com/NuGet/NuGetGallery/blob/25f60e3b3718bff10d7649a0990a6cd2576402cc/tests/NuGetGallery.Facts/SearchClient/CorrelatingHttpClientHandlerFacts.cs#L32) depend on the availability of nuget.org."},{"Id":"10069564407","Type":"PullRequestEvent","CreatedAt":"2019-07-23T20:07:45","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7367","RelatedDescription":"Merged pull request \"Make NuGetGallery unit tests work offline and add missing test DLLs\" (#7367) at NuGet/NuGetGallery","RelatedBody":"Address https://github.com/NuGet/NuGetGallery/issues/7322\r\n\r\nThis makes for better units tests, less flakiness, and better test runtime."},{"Id":"10069323420","Type":"PullRequestEvent","CreatedAt":"2019-07-23T19:31:55","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7368","RelatedDescription":"Opened pull request \"Initial implementation async account deletion feature flagged.\" (#7368) at NuGet/NuGetGallery","RelatedBody":"Adds support for async account deletes in gallery behind a feature flag."},{"Id":"10068896554","Type":"PullRequestEvent","CreatedAt":"2019-07-23T18:29:06","Actor":"dannyjdev","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7347","RelatedDescription":"Merged pull request \"Eliminate package title\" (#7347) at NuGet/NuGetGallery","RelatedBody":"Package title was eliminated from\r\n* DisplayPackage.cshtml\r\n* _ListPackage.cshtml\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/7149"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"10068985859","Type":"IssuesEvent","CreatedAt":"2019-07-23T18:41:59","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8366","RelatedDescription":"Closed issue \"Test:  target correct dotnet-install.sh download URL\" (#8366) at NuGet/Home","RelatedBody":"Update scripts/funcTests/runFuncTests.sh to use https://dot.net/v1/dotnet-install.sh."},{"Id":"10068567791","Type":"IssuesEvent","CreatedAt":"2019-07-23T17:40:35","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8368","RelatedDescription":"Closed issue \"Update Xamarin frameworks to map to NetStandard 2.1\" (#8368) at NuGet/Home","RelatedBody":"The mapping table in NuGet.Client needs to be updated so Xamarin frameworks can support NS2.1 libraries.\r\n\r\nSee https://github.com/NuGet/NuGet.Client/pull/2948\r\n\r\n"},{"Id":"10068368120","Type":"IssuesEvent","CreatedAt":"2019-07-23T17:11:01","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8375","RelatedDescription":"Opened issue \"Modifying Package Version sometimes causes No-Op Restore\" (#8375) at NuGet/Home","RelatedBody":"## Details about Problem\r\nCurrently we have a non-consistent repro reported by @agr where modifying the csproj externally, and changing a PackageReference version, a No-Op restore happens, when a package upgrade is expected.\r\n\r\nInteresting note:\r\nWhen the issue reproduces, running Get-Package in PMC mitigates it. After that command restore works as expected. Command produces expected output (i.e. versions listed there match the contents of .csproj).\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): \r\n\r\nNuGet version (x.x.x.xxx):\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate): VS Enterprise 2019 16.3.0 Preview 1.0 [29118.114.d16.3]\r\n\r\n## Detailed repro steps so we can see the same problem\r\n(inconsistent repro)\r\n\r\n1.  git clone https://github.com/NuGet/NuGet.Jobs.git;\r\n2.  Open solution in VS;\r\n3.  While VS is running, edit src\\Validation.Common.Job\\Validation.Common.Job.csproj in external editor: specify NuGetGallery.Core's version to be 4.4.5-agr-stg-folders-2873446. Save file;\r\n4.  Go back to VS, it suggests reloading projects, reload all;\r\n5.  Right click solution, select \"Restore NuGet packages\".\r\n"},{"Id":"10066500739","Type":"IssuesEvent","CreatedAt":"2019-07-23T13:25:35","Actor":"JBastiaan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8374","RelatedDescription":"Opened issue \"GeneratePathProperty \" (#8374) at NuGet/Home","RelatedBody":"GeneratePath property does not seem to work in my project. I want to be able to copy a documentation file that is in a package to the build output. I found the new GeneratePath property feature. But when i use it in my projectfile as seen below the property just isnt generated. \r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n    <AssemblyName>Blabla.Import.Bla.Adapter</AssemblyName>\r\n    <RootNamespace>Blabla.Import.Bla.Adapter</RootNamespace>\r\n  </PropertyGroup>\r\n\r\n  <!--Include the stylecop analyzers for the release build -->\r\n\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|AnyCPU'\">\r\n    <CodeAnalysisRuleSet>..\\_solutionItems\\StyleCop.Adapter.ruleset</CodeAnalysisRuleSet>\r\n    <DocumentationFile></DocumentationFile>\r\n  </PropertyGroup>\r\n\r\n  <!--Include the stylecop analyzers for the debug build -->\r\n\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|AnyCPU'\">\r\n    <CodeAnalysisRuleSet>..\\_solutionItems\\StyleCop.Adapter.ruleset</CodeAnalysisRuleSet>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Blabla.Adapters.Applications\" Version=\"3.0.0-beta20\" />\r\n    <PackageReference Include=\"Blabla.DataServices.Bla\" Version=\"1.0.0\" GeneratePathProperty=\"true\" />\r\n    <PackageReference Include=\"StyleCop.Analyzers.Unstable\" Version=\"1.1.1.94\">\r\n      <PrivateAssets>all</PrivateAssets>\r\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>\r\n    </PackageReference>\r\n\r\n    <None Include=\"$(PkgBlabla_DataServices_Bla)\\contentFiles\\any\\netcoreapp2.2\\Blabla.DataServices.Bla.xml\">\r\n      <Link>Blabla.DataServices.Bla.xml</Link>\r\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory>\r\n    </None>\r\n  </ItemGroup>\r\n\r\n  <!--include additional solution items -->\r\n\r\n  <ItemGroup>\r\n    <None Include=\"..\\_solutionItems\\resharper.csproj.DotSettings\" Link=\"properties\\ResharperSettings\" />\r\n    <None Include=\"..\\_solutionItems\\StyleCop.Adapter.ruleset\" Link=\"properties\\Stylecop\" />\r\n  </ItemGroup>\r\n</Project>\r\n\r\n```\r\n\r\noutput:\r\nCould not copy the file \"D:\\contentFiles\\any\\netcoreapp2.2\\Blabla.DataServices.Bla.xml\" because it was not found.\r\n"},{"Id":"10066038749","Type":"IssuesEvent","CreatedAt":"2019-07-23T12:24:32","Actor":"freelancer6969","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8373","RelatedDescription":"Opened issue \"Illegal characters in path while nuget restore\" (#8373) at NuGet/Home","RelatedBody":"I have CSharp project available on my local machine.\r\n![image](https://user-images.githubusercontent.com/53221950/61711829-9f2e4f00-ad72-11e9-8d87-e4dc57ab0494.png)\r\n\r\nHere If I do nuget `update SeleniumNUnitParam.sln` I am getting `Illegal characters in path.`\r\n\r\n![image](https://user-images.githubusercontent.com/53221950/61711963-e61c4480-ad72-11e9-9b0a-1b7baf586b34.png)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1124053944269983745","CreatedAt":"2019-05-02T20:51:58+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfvqkS is currently degraded and some pages might take too long to load. We are investigating the… https://t.co/j3saBGKARZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1121348019914334210","CreatedAt":"2019-04-25T09:39:36+00:00","UserScreenname":"nuget","Text":"Thanks for your contribution. https://t.co/RDrP9LnHU3","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":26,"FavoriteCount":3,"RawContent":null},{"Id":"1116042504854335488","CreatedAt":"2019-04-10T18:17:22+00:00","UserScreenname":"nuget","Text":"We have just published the NuGet Roadmap for Spring 2019. Check it out now! \nhttps://t.co/gt7qR0S3wV","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":18,"RawContent":null},{"Id":"1115380341353537538","CreatedAt":"2019-04-08T22:26:10+00:00","UserScreenname":"nuget","Text":"Alert 🚨: Package publishing to @NuGet.org is taking more time than expected. The team is currently investigating th… https://t.co/EuaZ7gBehM","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":1,"FavoriteCount":6,"RawContent":null}]}},"RunOn":"2019-07-24T05:30:45.7194942Z","RunDurationInMilliseconds":1838}