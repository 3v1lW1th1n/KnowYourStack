{"Data":{"Blog":{"FeedItems":[{"Title":"Help us plan the future of .NET!","PublishedOn":"2018-04-20T16:55:37+00:00","CommentsCount":53,"FacebookCount":0,"Summary":"We’re currently planning our next major .NET releases and would love to hear your feedback on how you interact with .NET Framework and .NET Core today. Please fill out the survey below and help shape...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/20/help-us-plan-the-future-of-net/","RawContent":null},{"Title":"Performance Improvements in .NET Core 2.1","PublishedOn":"2018-04-18T19:29:45+00:00","CommentsCount":39,"FacebookCount":0,"Summary":"Back before .NET Core 2.0 shipped, I wrote a post highlighting various performance improvements in .NET Core 2.0 when compared with .NET Core 1.1 and the .NET Framework. As .NET Core 2.1 is in its...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/18/performance-improvements-in-net-core-2-1/","RawContent":null},{"Title":".NET Highlights in Visual Studio 2017 version 15.7 Preview 4","PublishedOn":"2018-04-18T19:00:00+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"As you know we continue to incrementally improve Visual Studio 2017 (version 15), and our 7th significant update is currently well under way with the 4th preview shipping today. As we’re winding down...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/18/visual-studio-2017-15-7-preview-4/","RawContent":null},{"Title":".NET Core April 2018 Update","PublishedOn":"2018-04-17T23:50:13+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core April 2018 Update. This update includes .NET Core 1.0.11, 1.1.8 and 2.0.7. There are no new security fixes in this update. See April 2018 .NET Updates for other...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/17/net-core-april-2018-update/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.1 Preview 2","PublishedOn":"2018-04-11T18:02:40+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Today we’re releasing the second preview of EF Core 2.1, alongside .NET Core 2.1 Preview 2 and ASP.NET Core 2.1 Preview 2. Thank you so much to everyone who has tried our early builds and has helped...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-entity-framework-core-2-1-preview-2/","RawContent":null},{"Title":"Announcing .NET Core 2.1 Preview 2","PublishedOn":"2018-04-11T17:53:44+00:00","CommentsCount":38,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.1 Preview 2. The release is now ready for broad testing, as we get closer to a final build within the next two to three months. We&#8217;d appreciate any feedback...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2/","RawContent":null},{"Title":"Explore Azure Cosmos DB with .NET Core and MongoDB","PublishedOn":"2018-04-09T16:00:47+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Have you had to design general purpose &#8220;metadata&#8221; tables in your SQL database that basically store column names and values? Do you often serialize/de-serialize XML or JSON from your SQL...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/09/explore-cosmosdb-with-net-core-and-mongodb/","RawContent":null},{"Title":"Calling all Desktop Developers: how should UI development be improved?","PublishedOn":"2018-03-23T18:01:31+00:00","CommentsCount":66,"FacebookCount":0,"Summary":"The user interface (UI) of any application is critical in making your app convenient and efficient for the folks using it. When developing applications for Enterprise use, a good UI can shave time off...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/23/calling-all-desktop-developers-how-should-ui-development-be-improved/","RawContent":null},{"Title":".NET Framework 4.7.2 Developer Pack Early Access build 3056 is available!","PublishedOn":"2018-03-08T23:22:13+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are happy to share an Early Access build with the .NET Framework 4.7.2 Developer Pack. The .NET Framework 4.7.2 Developer Pack lets developers build applications that target the .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/08/net-framework-4-7-2-developer-pack-early-access-build-3056-is-available/","RawContent":null},{"Title":"F# language and tools update for Visual Studio 2017 version 15.6","PublishedOn":"2018-03-06T18:28:06+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With the release of Visual Studio 2017 version 15.6, we’re excited to share updates to the F# language and core library, F# tooling in Visual Studio, and infrastructure updates that concern OSS...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/06/f-language-and-tools-update-for-visual-studio-2017-version-15-6/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7559882384","Type":"PullRequestEvent","CreatedAt":"2018-04-20T06:42:59","Actor":"Cheesebaron","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/100","RelatedDescription":"Opened pull request \"Create mvvmcross.md\" (#100) at dotnet/home","RelatedBody":"Added MvvmCross as project"},{"Id":"7452103949","Type":"PullRequestEvent","CreatedAt":"2018-03-29T07:03:03","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Merged pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""},{"Id":"7419410563","Type":"IssuesEvent","CreatedAt":"2018-03-22T14:02:36","Actor":"vvavrychuk","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/99","RelatedDescription":"Opened issue \"not working \"Linux Distribution\" dropdown on http://www.microsoft.com/net/learn/get-started/linux \" (#99) at dotnet/home","RelatedBody":"On the page http://www.microsoft.com/net/learn/get-started/linux dropdown \"Linux Distribution\" has no effect on the installation instruction next to him (they are always displayed for RedHat).\r\n\r\n![screenshot from 2018-03-22 16-02-19](https://user-images.githubusercontent.com/152563/37775020-6ec5778e-2dea-11e8-9ea3-b33e26c1c4e1.png)\r\n"},{"Id":"7192252734","Type":"PullRequestEvent","CreatedAt":"2018-02-03T01:30:47","Actor":"karann-msft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Opened pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7187459205","Type":"PullRequestEvent","CreatedAt":"2018-02-02T05:26:03","Actor":"mairaw","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Opened pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7545995438","Type":"IssuesEvent","CreatedAt":"2018-04-18T00:20:14","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/64","RelatedDescription":"Opened issue \"April 2018 .NET Updates\" (#64) at dotnet/announcements","RelatedBody":"# April 2018 .NET Updates\r\n\r\nThe following .NET updates were released this month. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n\r\n* No new releases. See: [.NET Framework February 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/).\r\n* [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core April 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/04/17/net-core-april-2018-update/)\r\n   * [2.0.7 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.0/2.0.7.md)\r\n   * [1.1.8 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.8.md)\r\n   * [1.0.11 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.11.md)\r\n* [.NET Core 2.1 Preview 2](https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2/)\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n* Latest .NET Core security release: [.NET Core March 2018 Update](https://github.com/dotnet/core/issues/1341)\r\n\r\n## .NET for UWP\r\n\r\n* No new releases. See: [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/).\r\n\r\n## Previous Updates\r\n\r\n* [February 2018 Security and Quality Updates](https://github.com/dotnet/announcements/issues/59)"},{"Id":"7387413694","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:18:32","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Reopened issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63) at dotnet/announcements","RelatedBody":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discusses the Transport Layer Security (TLS) best practices at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675"},{"Id":"7387391842","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:13:45","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Closed issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63) at dotnet/announcements","RelatedBody":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discussed the Transport Layer Security (TLS) best practices at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675"},{"Id":"7373349220","Type":"IssuesEvent","CreatedAt":"2018-03-13T17:01:53","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/62","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0875: Hash Collison can cause Denial of Service\" (#62) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0875: Hash Collison can cause Denial of Service\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 2.0 (including other minor and patch releases).\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in the public versions of .NET Core where a malicious file or web request could cause a denial of service (DoS) attack.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.10, 1.1.7 or 2.0.6. Developers are advised to update their .NET Core SDK to versions 1.1.8 or 2.1.101.\r\n\r\n## Discussion\r\n\r\nUse *TBD* for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nNone\r\n\r\n### Affected Software\r\n\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\nA complete list of runtimes can be discovered by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows\t| `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS\t| `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms\t| `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.10, 1.1.7 and 2.0.6, then any applications targeting the respective major/minor versions, 1.0 or 1.1 or 2.0 of .NET Core are vulnerable.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n#### How do I fix my affected application?\r\n\r\nApplications can be fixed by installing the latest .NET Core runtimes or SDKs. Typically, application servers only have runtime packages installed and developer machines have the SDKs installed. \r\nInstallers for the runtimes can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). \r\n.NET Core 1.1.8 SDK installs both versions 1.0.10 and 1.1.7 of the .NET Core runtime.\r\n\r\nIf you've built a self-contained application, you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n#### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the `application.runtime.config` file for that application. Set the framework version to the desired version and the `rollForward` property to false. These settings should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nSince the `application.runtime.config` file is an optional file, you may need to create one for each application and add it alongside the executable.\r\n\r\n### Acknowledgments\r\n[Ben Adams](https://twitter.com/ben_a_adams) of [Illyriad Games](https://www.illyriad.co.uk/)\r\n\r\n### External Links\r\n[CVE-2018-0875](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0875)\r\n\r\n### Revisions\r\n\r\nV1.0 (Mar 13, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-03-13_\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7600355565","Type":"IssuesEvent","CreatedAt":"2018-04-28T01:18:41","Actor":"mwoo-o","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/17825","RelatedDescription":"Opened issue \"SEHException occurs VS 2017 Remote Debugging on Windows  to debug Linux ASP.NET Core application\" (#17825) at dotnet/coreclr","RelatedBody":"Application Environment: Oracle Linux 7.4 (RedHat 7.4)\r\nDebugging Environment: Visual Studio Enterprise 2017 v15.6.6 on Windows\r\n.NET Core SDK Version on both Windows and Linux: 2.1.101\r\n\r\nVS is able to attach the Linux ASP .NET Core process in the debugger.  However, when trying to step over or continue the execution, SEHException occurs.  Here is the exception information:\r\n - Data: System.Collections.ListDictionaryInternal\r\n - ErrorCode/HResult: -2147467259\r\n - Message: \"External component has thrown an exception.\"\r\n\r\nWe have Microsoft sessions on site to talk about VS remote debugging for ASP.NET Core on Linux  and have documentation to describe how to do that.  However, the documentation is based on ubuntu Linux.    We follow similar steps in Oracle Linux v7.4 and encountered SEHException.  We also tried Console Application, and also encountered exception.\r\n\r\nWe need to know if VS Remote debugging on Window can debug .NET Core process in  Oracle Linux v7.1 or above.    \r\n"},{"Id":"7600312248","Type":"PullRequestEvent","CreatedAt":"2018-04-28T00:51:11","Actor":"adamsitnik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17811","RelatedDescription":"Merged pull request \"Fix jitbench\" (#17811) at dotnet/coreclr","RelatedBody":"Addressed 3 issues:\r\n1) coreclr and CoreFx were out of sync -> update dependencies.props\r\n2) Word2Vec fails on x86 sometimes with OutOfMemory -> disabled it there because it appears the behavior is by design\r\n3) CommandLineParser 2.1.1 doesn't restore anymore? -> NuGet was already rolling forward to 2.2.0 but changing it in the source removes the warning when using dotnet.exe to run JitBench"},{"Id":"7600257361","Type":"IssuesEvent","CreatedAt":"2018-04-28T00:19:37","Actor":"briansull","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/17823","RelatedDescription":"Opened issue \"Insure that any byrefs created in genCodeForIndexAddr cannot point outside of the array\" (#17823) at dotnet/coreclr","RelatedBody":"For Arm/arm64 in `CodeGen::genCodeForIndexAddr(GenTreeIndexAddr* node)` we need to insure that we don't create a byref that might point outside of the array object.\r\n\r\n"},{"Id":"7600255242","Type":"IssuesEvent","CreatedAt":"2018-04-28T00:18:26","Actor":"kouvel","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/17822","RelatedDescription":"Opened issue \"Main thread is not CoInitializeEx'ed to MTA by default\" (#17822) at dotnet/coreclr","RelatedBody":"When the attribute is not present. Forked from https://github.com/dotnet/coreclr/issues/17787. Fixes for both issues would be breaking changes and should be fixed for the next major version release (3.0)\r\n\r\nhttps://github.com/dotnet/coreclr/blob/53450d7cd4f3d73aa976d2d6be96a3bfe6c028c9/src/vm/assembly.cpp#L1804 and `SystemDomain::SetThreadAptState` would need to be fixed.\r\n\r\n[Milestone = 3.0]"},{"Id":"7600245933","Type":"PullRequestEvent","CreatedAt":"2018-04-28T00:13:34","Actor":"brianrob","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17819","RelatedDescription":"Merged pull request \"Update ARM32 Cross Build Docker Image\" (#17819) at dotnet/coreclr","RelatedBody":"Update the ARM32 cross build docker image to ubuntu-14.04-cross-e435274-20180426002420 to include #17762.\r\n\r\n@jashook, one follow-up question: Should the image values in the two changed files always be the same?  I notice that they were not prior to this change."},{"Id":"7600141665","Type":"PullRequestEvent","CreatedAt":"2018-04-27T23:24:30","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17803","RelatedDescription":"Merged pull request \"Update Windows arm32 corefx test failure exclusions\" (#17803) at dotnet/coreclr","RelatedBody":"All Windows arm32 corefx test jobs should pass with these exclusions.\r\n\r\nExisting exclusions with open issues are tagged with their issues, as for the Linux arm32 version of this file."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7600214969","Type":"IssuesEvent","CreatedAt":"2018-04-27T23:57:56","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/7791","RelatedDescription":"Closed issue \"[build] Passing a property (/property) with multiple values to msbuild isn't working\" (#7791) at dotnet/cli","RelatedBody":"I need to pass values for [`NoWarn` option](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/compiler-options/nowarn-compiler-option) to C# compiler. Previously with msbuild it was being passed as property:\r\n```\r\nmsbuild /p:NoWarn:\"1591;1573;3001;3002\"\r\n```\r\n\r\nBut with dotnet cli it doesn't work anymore.\r\nI tried both `build` and `msbuild` commands. \r\n\r\n\r\n## Steps to reproduce\r\n```\r\ndotnet.exe msbuild /property:NoWarn=1591;1573;3001;3002 mysolution.sln\r\n```\r\nor\r\n```\r\ndotnet.exe msbuild /property:NoWarn=\"1591;1573;3001;3002\" mysolution.sln\r\n```\r\nor\r\n```\r\ndotnet.exe msbuild \"/property:NoWarn=1591;1573;3001;3002\" mysolution.sln\r\n```\r\n\r\nall result in\r\n```\r\nMSBUILD : error MSB1006: Property is not valid.\r\nSwitch: 1573\r\n```\r\nWith `dotnet.exe `build` there's the same error.\r\n\r\nWhile if I set these values in csproj:\r\n```\r\n<NoWarn>1591;1573;3001;3002</NoWarn>\r\n```\r\nit works as expected (warning are being ignored)\r\n\r\n## Expected  behavior\r\nPass all warning code to the compiler.\r\n\r\n## Actual behavior\r\nFaulting with an error\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\nD:\\>dotnet --info\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.15063\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.0\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n```\r\n\r\n\r\n\r\n\r\n"},{"Id":"7600203010","Type":"PullRequestEvent","CreatedAt":"2018-04-27T23:52:03","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/9153","RelatedDescription":"Merged pull request \"Fix MSBuild invocation to quote property option values.\" (#9153) at dotnet/cli","RelatedBody":"This PR ensures that any `/property` option's value is surrounded by quotes\r\nto allow MSBuild to properly interpret special characters like semicolons.\r\n\r\nUsers familiar with MSBuild expect `/property:Name=\"Value\"` to handle\r\nsemicolons. However, since `dotnet msbuild` parses the command line first, the\r\nquotes get processed by its command line parser.  This results in\r\n`/property:Name=Value` being passed to MSBuild, which will not parse a \"Value\"\r\ncontaining a semicolon correctly.\r\n\r\nSince it is safe to always quote the property value for this option, this fix\r\nsimply ensures that the value is surrounded by quotes.\r\n\r\nThis fixes the issue for all commands that forward arguments to MSBuild.\r\n\r\nFixes #7791."},{"Id":"7599913648","Type":"PullRequestEvent","CreatedAt":"2018-04-27T22:02:02","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/9166","RelatedDescription":"Merged pull request \"Update SDK to 2.1.200-preview-62827-05\" (#9166) at dotnet/cli","RelatedBody":""},{"Id":"7599773596","Type":"PullRequestEvent","CreatedAt":"2018-04-27T21:22:10","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/9167","RelatedDescription":"Merged pull request \"Empty commit for new build.\" (#9167) at dotnet/cli","RelatedBody":"Commit to increase the build number of the CLI and avoid builds stomping on each other.\r\n"},{"Id":"7599757278","Type":"PullRequestEvent","CreatedAt":"2018-04-27T21:17:47","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/9167","RelatedDescription":"Opened pull request \"Empty commit for new build.\" (#9167) at dotnet/cli","RelatedBody":"Commit to increase the build number of the CLI and avoid builds stomping on each other.\r\n"},{"Id":"7599712444","Type":"PullRequestEvent","CreatedAt":"2018-04-27T21:06:39","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/9166","RelatedDescription":"Opened pull request \"Update SDK to 2.1.200-preview-62827-05\" (#9166) at dotnet/cli","RelatedBody":""}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7600173317","Type":"PullRequestEvent","CreatedAt":"2018-04-27T23:38:24","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/715","RelatedDescription":"Merged pull request \"Update BuildTools to preview1-02725-03 (master)\" (#715) at dotnet/standard","RelatedBody":""},{"Id":"7600172487","Type":"IssuesEvent","CreatedAt":"2018-04-27T23:38:02","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/718","RelatedDescription":"Closed issue \"Add IItemProperties, IEditableCollectionView and associated types\" (#718) at dotnet/standard","RelatedBody":"The `IItemProperties` and `IEditableCollectionView` in System.ComponentModel namespace are really great for describing data on ICollectionViewSource to handle dynamic datasources, where you don't have a pre-defined class to encapsulate a datamodel. For instance when dealing with generic data from any database table. It also avoids the need for reflection, as the IItemProperties provides the PropertyInfo you otherwise would retrieve through reflection.\r\n\r\nThese interfaces are useful for generating UI dynamically based on dynamic data models, for use with for instance DataGrids, form entries etc. By having your data collections implement these interfaces, specific platforms can use these interfaces to generate a UI for the data.\r\n\r\n\r\nDoc references:\r\n- [IItemProperties](https://docs.microsoft.com/dotnet/api/system.componentmodel.iitemproperties?view=netframework-4.7.1)\r\n- [IEditableCollectionView](https://docs.microsoft.com/dotnet/api/system.componentmodel.ieditablecollectionview?view=netframework-4.7.1)\r\n- [ItemPropertyInfo](https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.itempropertyinfo?view=netframework-4.7.1)"},{"Id":"7600144104","Type":"IssuesEvent","CreatedAt":"2018-04-27T23:25:33","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/708","RelatedDescription":"Closed issue \"Wrong reference path in NETStandard.Library.targets\" (#708) at dotnet/standard","RelatedBody":"@cannehag commented on [Thu Apr 12 2018](https://github.com/dotnet/core/issues/1440)\n\n# After installing NetStandard.Library 2.0.2, a lot of warning occur.\r\nNetStandard.Library.targets 2.0.2 have \r\n<Reference Include=\"$(MSBuildThisFileDirectory)\\ref\\Microsoft.Win32.Primitives.dll...\r\nAccording to documentation MSBuildThisFileDirectory will include a final slash, thus giving a path with double slash and the error message \r\nThe referenced component 'C:\\Users\\xxx\\.nuget\\packages\\netstandard.library\\2.0.2\\build\\netstandard2.0\\\\ref\\Microsoft.Win32.Primitives.dll could not be found'\r\n\r\nVersion 2.0.1 does not have this issue since the targets file is including *.dll from another path\r\n<ReferenceCopyLocalPaths Condition=\"'$(_NetStandardLibraryLibPath)' != ''\" Include=\"$(_NetStandardLibraryLibPath)*.dll\">\r\n\n\n---\n\n@elementalpete commented on [Mon Apr 16 2018](https://github.com/dotnet/core/issues/1440#issuecomment-381640157)\n\nI experienced the same issue after upgrading (path in warning message contains a double slash, actual path has only a single slash).  Downgrading to 2.0.1 solved the issue for now.\n\n"},{"Id":"7582285345","Type":"IssuesEvent","CreatedAt":"2018-04-25T03:12:55","Actor":"dotMorten","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/718","RelatedDescription":"Opened issue \"Add IItemProperties, IItemProperties, IEditableCollectionView and associated interfaces to standard\" (#718) at dotnet/standard","RelatedBody":"The `IItemProperties` and `IEditableCollectionView` in System.ComponentModel namespace are really great for describing data on ICollectionViewSource to handle dynamic datasources, where you don't have a pre-defined class to encapsulate a datamodel. For instance when dealing with generic data from any database table. It also avoid the need for reflection, as the IItemProperties provides the PropertyInfo you otherwise would retrieve through reflection.\r\n\r\nThese interfaces are useful for generating UI dynamically based on dynamic data models, for use with for instance DataGrids, form entries etc. By having your data collections implement these interfaces, specific platforms can use these interfaces to generate a UI for the data.\r\n\r\n\r\nDoc references:\r\n- [IItemProperties](https://docs.microsoft.com/dotnet/api/system.componentmodel.iitemproperties?view=netframework-4.7.1)\r\n- [IEditableCollectionView](https://docs.microsoft.com/dotnet/api/system.componentmodel.ieditablecollectionview?view=netframework-4.7.1)\r\n- [ItemPropertyInfo](https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.itempropertyinfo?view=netframework-4.7.1)"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7600640644","Type":"PullRequestEvent","CreatedAt":"2018-04-28T04:32:45","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/28575","RelatedDescription":"Closed pull request \"Updating CoreFx dependencies to servicing-26329-01\" (#28575) at dotnet/corefx","RelatedBody":""},{"Id":"7600640476","Type":"PullRequestEvent","CreatedAt":"2018-04-28T04:32:36","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/28535","RelatedDescription":"Closed pull request \"Update CoreClr, CoreFx to servicing-26417-01, servicing-26423-01, respectively (release/1.1.0)\" (#28535) at dotnet/corefx","RelatedBody":""},{"Id":"7600637107","Type":"IssuesEvent","CreatedAt":"2018-04-28T04:29:51","Actor":"xiaoyumu","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/29391","RelatedDescription":"Opened issue \"Got \"Specified parameter name 'Parameter1' is not valid.\" when doing batch update with SqlDataAdapter\" (#29391) at dotnet/corefx","RelatedBody":"Hi guys,\r\n\r\nI have recently using the ```System.Data.SqlClient``` of version ```4.5.0-preview2-26406-04``` to test if the batch update is supported in the latest build (Accoding to (https://docs.microsoft.com/en-us/dotnet/api/system.data.common.dbdataadapter.updatebatchsize?view=netcore-2.1#System_Data_Common_DbDataAdapter_UpdateBatchSize)) But if I set the ```UpdateBatchSize``` property of the ```SqlDataAdapter``` to a value lager than 1, like 2 or 10, an exception will throw with following message and stack trace.\r\n\r\nException: ```Specified parameter name 'Parameter1' is not valid.```\r\nStackTrace:\r\n```\r\n   at System.Data.Common.DbDataAdapter.UpdatedRowStatusErrors(RowUpdatedEventArgs rowUpdatedEvent, BatchCommandInfo[] batchCommands, Int32 commandCount)\r\n   at System.Data.Common.DbDataAdapter.UpdatedRowStatus(RowUpdatedEventArgs rowUpdatedEvent, BatchCommandInfo[] batchCommands, Int32 commandCount)\r\n   at System.Data.Common.DbDataAdapter.Update(DataRow[] dataRows, DataTableMapping tableMapping)\r\n   at System.Data.Common.DbDataAdapter.UpdateFromDataTable(DataTable dataTable, DataTableMapping tableMapping)\r\n   at System.Data.Common.DbDataAdapter.Update(DataTable dataTable)\r\n```\r\n\r\nThe program is running at a Win10Pro box with Visual Studio 2017 Community Edition.\r\n\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.5.6\r\nVisualStudio.15.Release/15.5.6+27130.2027\r\nSDK: Microsoft.NETCore.App  Version: 2.1.0-preview2-26406-04\r\n\r\nProject Target Framework\r\n```xml\r\n<PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n</PropertyGroup>\r\n```\r\n\r\nHere is the code fragment that generates this exception, it basically trying to insert multiple entities into a table which I want to do it in batch.\r\n```csharp\r\nprivate void ExecuteNonQueries(string connectionString, string sql, List<EventInfo> entities)\r\n{ \r\n    using (var connection = new SqlConnection(connectionString))\r\n    {\r\n        var adapter = new SqlDataAdapter();\r\n        var cmd = new SqlCommand(sql, connection);\r\n        cmd.Parameters.Add(new SqlParameter(\"@Level\", SqlDbType.NVarChar, 50, \"Level\"));\r\n        cmd.Parameters.Add(new SqlParameter(\"@Message\", SqlDbType.NVarChar, 500, \"Message\"));\r\n        cmd.Parameters.Add(new SqlParameter(\"@EventTime\", SqlDbType.DateTime, 0, \"EventTime\"));\r\n        cmd.UpdatedRowSource = UpdateRowSource.None;\r\n\r\n        adapter.InsertCommand = cmd;\r\n        // If I \r\n        adapter.UpdateBatchSize = 2; \r\n\r\n        adapter.Update(ConvertToTable(entities));\r\n    }\r\n}\r\n\r\nprivate DataTable ConvertToTable<TEntity>(List<TEntity> entities)\r\n{\r\n    var table = new DataTable(typeof(TEntity).Name);\r\n    foreach (var p in PropertyCache.GetPropertyInfoList(typeof(TEntity)))\r\n    {\r\n        table.Columns.Add(p.Name, p.PropertyType);\r\n    }\r\n\r\n    foreach (var entity in entities)\r\n    {\r\n        var row = table.NewRow();\r\n        foreach (var p in PropertyCache.GetPropertyInfoList(typeof(TEntity)))\r\n        {\r\n            row[p.Name] = p.GetValue(entity);\r\n        }\r\n        table.Rows.Add(row);\r\n    }\r\n\r\n    return table;\r\n}\r\n```\r\n\r\n"},{"Id":"7600632913","Type":"PullRequestEvent","CreatedAt":"2018-04-28T04:25:58","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/29366","RelatedDescription":"Merged pull request \"Increase unexpected thread wait timeout in tests\" (#29366) at dotnet/corefx","RelatedBody":"To make it more likely for a timeout in the thread to occur first and get better stack traces.\r\n\r\nCloses https://github.com/dotnet/corefx/issues/24504 until another repro."},{"Id":"7600632906","Type":"IssuesEvent","CreatedAt":"2018-04-28T04:25:58","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/24504","RelatedDescription":"Closed issue \"System.Threading.Tests.MutexTests.CrossProcess_NamedMutex_ProtectedFileAccessAtomic failed with \"Xunit.Sdk.TrueException\" in CI\" (#24504) at dotnet/corefx","RelatedBody":"Failed test: System.Threading.Tests.MutexTests.CrossProcess_NamedMutex_ProtectedFileAccessAtomic\r\n\r\nConfiguration: osx10.12_debug\r\n\r\nDetail: https://ci.dot.net/job/dotnet_corefx/job/master/job/osx10.12_debug/3255/testReport/System.Threading.Tests/MutexTests/CrossProcess_NamedMutex_ProtectedFileAccessAtomic_prefix____d3e87b891666440cbeba7116a70ac17d___/\r\n\r\nMESSAGE:\r\n~~~\r\nAssert.True() Failure\\nExpected: True\\nActual: False\r\n~~~\r\nSTACK TRACE:\r\n~~~\r\nat System.Threading.Tests.ThreadTestHelpers.<>c__DisplayClass3_0.<CreateGuardedThread>b__2() in /Users/dotnet-bot/j/workspace/dotnet_corefx/master/osx10.12_debug/src/Common/tests/System/Threading/ThreadTestHelpers.cs:line 48 \r\nat System.Threading.Tests.ThreadTestHelpers.RunTestInBackgroundThread(Action test) in /Users/dotnet-bot/j/workspace/dotnet_corefx/master/osx10.12_debug/src/Common/tests/System/Threading/ThreadTestHelpers.cs:line 100 \r\nat System.Threading.Tests.MutexTests.CrossProcess_NamedMutex_ProtectedFileAccessAtomic(String prefix) in /Users/dotnet-bot/j/workspace/dotnet_corefx/master/osx10.12_debug/src/System.Threading/tests/MutexTests.cs:line 227\r\n~~~"},{"Id":"7600548914","Type":"IssuesEvent","CreatedAt":"2018-04-28T03:24:21","Actor":"dotnet-mc-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/29390","RelatedDescription":"Opened issue \"Test failure: ThreadPoolBoundHandleTests/AllocateNativeOverlapped_PreAllocated_ReusedReturnedNativeOverlapped_OffsetLowAndOffsetHighSetToZero\" (#29390) at dotnet/corefx","RelatedBody":"Opened on behalf of @Sunny-pu\n\nThe test `ThreadPoolBoundHandleTests/AllocateNativeOverlapped_PreAllocated_ReusedReturnedNativeOverlapped_OffsetLowAndOffsetHighSetToZero` has failed.\n\nSystem.ArgumentException : Handle value: -1\\r\n    Parameter name: handle\\r\n    ---- System.ArgumentException : The handle is invalid.\\r\n    Parameter name: handle\n\n        Stack Trace:\n\n           at ThreadPoolBoundHandleTests.CreateThreadPoolBoundHandle(SafeHandle handle, String memberName, Int32 lineNumber) in E:\\A\\_work\\6\\s\\corefx\\src\\System.Threading.Overlapped\\tests\\ThreadPoolBoundHandle_Helpers.cs:line 40\n       at ThreadPoolBoundHandleTests.AllocateNativeOverlapped_PreAllocated_ReusedReturnedNativeOverlapped_OffsetLowAndOffsetHighSetToZero() in E:\\A\\_work\\6\\s\\corefx\\src\\System.Threading.Overlapped\\tests\\ThreadPoolBoundHandle_AllocateNativeOverlappedTests.cs:line 206\n    ----- Inner Stack Trace -----\n       at System.Threading.ThreadPoolBoundHandle.BindHandle(SafeHandle handle)\n       at ThreadPoolBoundHandleTests.CreateThreadPoolBoundHandle(SafeHandle handle, String memberName, Int32 lineNumber) in E:\\A\\_work\\6\\s\\corefx\\src\\System.Threading.Overlapped\\tests\\ThreadPoolBoundHandle_Helpers.cs:line 31\nBuild : Master - 20180428.01 (UWP F5 Tests)\nFailing configurations:\n- Windows.10.Arm64-arm\n  - Release\nDetails:\nhttps://mc.dot.net/#/product/netcore/master/source/official~2Fcorefx~2Fmaster~2F/type/test~2Ffunctional~2Fuwp~2F/build/20180428.01/workItem/System.Threading.Overlapped.Tests/analysis/xunit/ThreadPoolBoundHandleTests~2FAllocateNativeOverlapped_PreAllocated_ReusedReturnedNativeOverlapped_OffsetLowAndOffsetHighSetToZero"},{"Id":"7600532764","Type":"PullRequestEvent","CreatedAt":"2018-04-28T03:13:33","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/29387","RelatedDescription":"Merged pull request \"Update CoreClr, CoreFx, CoreSetup to preview1-26428-01, preview3-26428-01, preview1-26427-05, respectively (master)\" (#29387) at dotnet/corefx","RelatedBody":""},{"Id":"7600440985","Type":"PullRequestEvent","CreatedAt":"2018-04-28T02:12:36","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/29388","RelatedDescription":"Merged pull request \"Increase default value of TimeoutTime to 15m in run-test.sh\" (#29388) at dotnet/corefx","RelatedBody":"Some corefx test assemblies need more than 10 minutes to finish (e.g. `System.Runtime.Tests` dotnet/coreclr#17755, `System.Collections.Tests` in dotnet/coreclr#17754)\r\nIncreasing default value of `TimeoutTime` in `run-test.sh` to 15 minutes."},{"Id":"7600277417","Type":"PullRequestEvent","CreatedAt":"2018-04-28T00:30:31","Actor":"bartonjs","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29389","RelatedDescription":"Opened pull request \"[release/2.1] Correctly deserialize constructed octet and bit strings\" (#29389) at dotnet/corefx","RelatedBody":"When a BIT STRING or OCTET STRING is implicitly tagged using a tag from the\r\ncontext-specific, application, or private tag classes and has an indefinite length\r\nrepresentation, the outer tag is the specified tag and the inner tags are 03 or 04.\r\n\r\nIn the deserializer the correct tag was used for TryGetPrimitive[Type]Bytes, but\r\nthat returns false for indefinite length encodings (because the content bytes\r\nare not contiguous).  During the fallback to TryCopy[Type]Bytes the expected\r\ntag value was not passed along, so the read operation failed with a tag\r\nmismatch.\r\n\r\nNow we correctly pass the expected tag, so TryCopy[Type]Bytes matches the\r\nexpected outer tag and continues with the constructed encoding (definite or\r\nindefinite length) rules for the BIT STRING or OCTET STRING value.\r\n\r\nCharacter string types also have TryGetPrimitive overloads, but these aren't\r\nused in the deserializer, currently only the string-allocating forms are\r\nsupported.\r\n\r\nAddresses #29345 (in release/2.1)."},{"Id":"7600269233","Type":"PullRequestEvent","CreatedAt":"2018-04-28T00:26:11","Actor":"echesakovMSFT","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29388","RelatedDescription":"Opened pull request \"Increase default value of TimeoutTime to 15m\" (#29388) at dotnet/corefx","RelatedBody":"Some corefx test assemblies need more than 10 minutes to finish (e.g. `System.Runtime.Tests` dotnet/coreclr#17755, `System.Collections.Tests` in dotnet/coreclr#17755)\r\nIncreasing default value of `TimeoutTime` in `run-test.sh` to 15 minutes."},{"Id":"7600266705","Type":"PullRequestEvent","CreatedAt":"2018-04-28T00:24:51","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29387","RelatedDescription":"Opened pull request \"Update CoreClr, CoreSetup to preview1-26428-01, preview1-26427-05, respectively (master)\" (#29387) at dotnet/corefx","RelatedBody":""}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7600637255","Type":"PullRequestEvent","CreatedAt":"2018-04-28T04:29:58","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/26469","RelatedDescription":"Opened pull request \"Align the implementations of IAssemblySymbol.GivesAccessTo\" (#26469) at dotnet/roslyn","RelatedBody":"It now has the same semantics across languages with a shared core implementation.\r\nFixes #26459\r\n\r\nPERSONAL REVIEW ONLY\r\n"},{"Id":"7600519598","Type":"IssuesEvent","CreatedAt":"2018-04-28T03:04:38","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/26468","RelatedDescription":"Opened issue \"\"Thread was being aborted\" popups\" (#26468) at dotnet/roslyn","RelatedBody":"I'm working on branch `features/recursive-patterns` (commit f753435f10c01c1708389f6dcbc28c70c047de44) and editing/running some tests in `src\\EditorFeatures\\CSharpTest\\AutomaticCompletion\\AutomaticBraceCompletionTests.cs`.\r\n\r\nI'm getting popups with the following stack trace.\r\nI'm using `VisualStudio.15.Preview/15.7.0-pre.1.0+27512.0`.\r\n\r\nI'll try again on Monday on 15.8 preview 1.\r\n\r\n```\r\n---------------------------\r\nAssertion Failed: Abort=Quit, Retry=Debug, Ignore=Continue\r\n---------------------------\r\nThread was being aborted.\r\n\r\n\r\n\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.ForegroundNotification.ForegroundNotificationService.<ProcessAsync>d__13.MoveNext()\r\n\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.InvokeMoveNext(Object stateMachine)\r\n\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.Run()\r\n\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining, Task& currentTask)\r\n\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n\r\n   at System.Threading.Tasks.Task.Finish(Boolean bUserDelegateExecuted)\r\n\r\n   at System.Threading.Tasks.Task`1.TrySetException(Object exceptionObject)\r\n\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.SetException(Exception exception)\r\n\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetException(Exception exception)\r\n\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.ForegroundNotification.ForegroundNotificationService.<WaitForPendingWorkAsync>d__16.MoveNext()\r\n\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.InvokeMoveNext(Object stateMachine)\r\n\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.MoveNextRunner.Run()\r\n\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(Action action, Boolean allowInlining, Task& currentTask)\r\n\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n\r\n   at System.Threading.Tasks.Task`1.TrySetResult(TResult result)\r\n\r\n   at System.Threading.Tasks.Task.DelayPromise.Complete()\r\n\r\n   at System.Threading.Tasks.Task.<>c.<Delay>b__274_1(Object state)\r\n\r\n   at System.Threading.TimerQueueTimer.CallCallbackInContext(Object state)\r\n\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n\r\n   at System.Threading.TimerQueueTimer.CallCallback()\r\n\r\n   at System.Threading.TimerQueueTimer.Fire()\r\n\r\n   at System.Threading.TimerQueue.FireNextTimers()\r\n\r\n   at System.Threading.TimerQueue.AppDomainTimerCallback()\r\n\r\n\r\n---------------------------\r\nAbort   Retry   Ignore   \r\n---------------------------\r\n```"},{"Id":"7600464195","Type":"IssuesEvent","CreatedAt":"2018-04-28T02:28:15","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/26467","RelatedDescription":"Opened issue \"Assertion hit in  MakeTestsAndBindings\" (#26467) at dotnet/roslyn","RelatedBody":"\r\n```C#\r\n                    Debug.Assert(recursive.HasAnyErrors); // line 451\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/12466233/39390934-df9d446e-4a50-11e8-9bea-b190fbc20f7e.png)\r\n\r\nTagging @gafter \r\n"},{"Id":"7600308942","Type":"PullRequestEvent","CreatedAt":"2018-04-28T00:49:03","Actor":"JieCarolHu","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/26135","RelatedDescription":null,"RelatedBody":"…m source control #18199\r\n\r\n<details><summary>fix UpgradeProject crashes IDE with Unable to check out the files from source control #18199</summary>\r\n\r\n### Customer scenario\r\nWhen choose Upgrade all projects to language version 'Latest' from quick fixes, IDE crashes because of \"Unable to check out the files from source control\" \r\nThe file it tries to checkout are the TemporaryGeneratedFile_xxxx files, which get deleted and generated again when making project wide changes. Therefore the documentId changed and it cannot find the filepath for the old documentId, so it cannot checkout the file.\r\n\r\n### Bugs this fixes\r\nhttps://github.com/dotnet/roslyn/issues/18199\r\n\r\n### Workarounds, if any\r\nNo\r\n\r\n### Risk\r\nLow, just added some null checks\r\n\r\n### Performance impact\r\nLow, just added some null checks without extra allocations\r\n\r\n### Is this a regression from a previous update?\r\nNot sure\r\n\r\n### Root cause analysis\r\n\r\nHow did we miss it?  What tests are we adding to guard against it in the future?\r\n\r\n### How was the bug found?\r\nCustomer reported it\r\n\r\n### Test documentation updated?\r\nNo\r\n</details>\r\n"},{"Id":"7600307584","Type":"PullRequestEvent","CreatedAt":"2018-04-28T00:48:09","Actor":"JieCarolHu","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/26135","RelatedDescription":"Closed pull request \"fix UpgradeProject crashes IDE with Unable to check out the files fro…\" (#26135) at dotnet/roslyn","RelatedBody":"…m source control #18199\r\n\r\n<details><summary>fix UpgradeProject crashes IDE with Unable to check out the files from source control #18199</summary>\r\n\r\n### Customer scenario\r\nWhen choose Upgrade all projects to language version 'Latest' from quick fixes, IDE crashes because of \"Unable to check out the files from source control\" \r\nThe file it tries to checkout are the TemporaryGeneratedFile_xxxx files, which get deleted and generated again when making project wide changes. Therefore the documentId changed and it cannot find the filepath for the old documentId, so it cannot checkout the file.\r\n\r\n### Bugs this fixes\r\nhttps://github.com/dotnet/roslyn/issues/18199\r\n\r\n### Workarounds, if any\r\nNo\r\n\r\n### Risk\r\nLow, just added some null checks\r\n\r\n### Performance impact\r\nLow, just added some null checks without extra allocations\r\n\r\n### Is this a regression from a previous update?\r\nNot sure\r\n\r\n### Root cause analysis\r\n\r\nHow did we miss it?  What tests are we adding to guard against it in the future?\r\n\r\n### How was the bug found?\r\nCustomer reported it\r\n\r\n### Test documentation updated?\r\nNo\r\n</details>\r\n"},{"Id":"7600307580","Type":"PullRequestEvent","CreatedAt":"2018-04-28T00:48:09","Actor":"JieCarolHu","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/26135","RelatedDescription":"Closed pull request \"fix UpgradeProject crashes IDE with Unable to check out the files fro…\" (#26135) at dotnet/roslyn","RelatedBody":"…m source control #18199\r\n\r\n<details><summary>fix UpgradeProject crashes IDE with Unable to check out the files from source control #18199</summary>\r\n\r\n### Customer scenario\r\nWhen choose Upgrade all projects to language version 'Latest' from quick fixes, IDE crashes because of \"Unable to check out the files from source control\" \r\nThe file it tries to checkout are the TemporaryGeneratedFile_xxxx files, which get deleted and generated again when making project wide changes. Therefore the documentId changed and it cannot find the filepath for the old documentId, so it cannot checkout the file.\r\n\r\n### Bugs this fixes\r\nhttps://github.com/dotnet/roslyn/issues/18199\r\n\r\n### Workarounds, if any\r\nNo\r\n\r\n### Risk\r\nLow, just added some null checks\r\n\r\n### Performance impact\r\nLow, just added some null checks without extra allocations\r\n\r\n### Is this a regression from a previous update?\r\nNot sure\r\n\r\n### Root cause analysis\r\n\r\nHow did we miss it?  What tests are we adding to guard against it in the future?\r\n\r\n### How was the bug found?\r\nCustomer reported it\r\n\r\n### Test documentation updated?\r\nNo\r\n</details>\r\n"},{"Id":"7600307569","Type":"PullRequestEvent","CreatedAt":"2018-04-28T00:48:09","Actor":"JieCarolHu","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/26135","RelatedDescription":"Closed pull request \"fix UpgradeProject crashes IDE with Unable to check out the files fro…\" (#26135) at dotnet/roslyn","RelatedBody":"…m source control #18199\r\n\r\n<details><summary>fix UpgradeProject crashes IDE with Unable to check out the files from source control #18199</summary>\r\n\r\n### Customer scenario\r\nWhen choose Upgrade all projects to language version 'Latest' from quick fixes, IDE crashes because of \"Unable to check out the files from source control\" \r\nThe file it tries to checkout are the TemporaryGeneratedFile_xxxx files, which get deleted and generated again when making project wide changes. Therefore the documentId changed and it cannot find the filepath for the old documentId, so it cannot checkout the file.\r\n\r\n### Bugs this fixes\r\nhttps://github.com/dotnet/roslyn/issues/18199\r\n\r\n### Workarounds, if any\r\nNo\r\n\r\n### Risk\r\nLow, just added some null checks\r\n\r\n### Performance impact\r\nLow, just added some null checks without extra allocations\r\n\r\n### Is this a regression from a previous update?\r\nNot sure\r\n\r\n### Root cause analysis\r\n\r\nHow did we miss it?  What tests are we adding to guard against it in the future?\r\n\r\n### How was the bug found?\r\nCustomer reported it\r\n\r\n### Test documentation updated?\r\nNo\r\n</details>\r\n"},{"Id":"7600286071","Type":"PullRequestEvent","CreatedAt":"2018-04-28T00:35:15","Actor":"jaredpar","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/23980","RelatedDescription":"Merged pull request \"Remove workaround that's already included in MSBuild 15.5\" (#23980) at dotnet/roslyn","RelatedBody":"See https://github.com/Microsoft/msbuild/commit/052ad30f8f706a87e9fa9431fda1ec9c0b73893b\r\n\r\nI suppose this would need to wait until all CI systems use 15.5+ though? But since it's already RTM, maybe all checks will pass? We'll see ;)"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7600650601","Type":"PullRequestEvent","CreatedAt":"2018-04-28T04:41:19","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5754","RelatedDescription":"Opened pull request \"Fix safe handle marshaling\" (#5754) at dotnet/corert","RelatedBody":"This makes https:// requests work on Linux."},{"Id":"7600554438","Type":"IssuesEvent","CreatedAt":"2018-04-28T03:28:17","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5753","RelatedDescription":"Closed issue \"Does .Net Native support escape analysis?\" (#5753) at dotnet/corert","RelatedBody":"Since the .NET Native compiler is an AOT compiler and can see the actual implementations of all methods, it should do escape analysis to allocate some objects on stack instead of heap."},{"Id":"7600544782","Type":"PullRequestEvent","CreatedAt":"2018-04-28T03:21:28","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5752","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5752) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7600526086","Type":"IssuesEvent","CreatedAt":"2018-04-28T03:09:03","Actor":"ygc369","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5753","RelatedDescription":"Opened issue \"Does .Net Native support escape analysis?\" (#5753) at dotnet/corert","RelatedBody":"Since the .NET Native compiler is an AOT compiler and can see the actual implementations of all methods, it should do escape analysis to allocate some objects on stack instead of heap."},{"Id":"7600028658","Type":"PullRequestEvent","CreatedAt":"2018-04-27T22:40:00","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5752","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5752) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7597984103","Type":"IssuesEvent","CreatedAt":"2018-04-27T15:00:20","Actor":"daoqiang","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5751","RelatedDescription":"Opened issue \"How to compile a class library project\" (#5751) at dotnet/corert","RelatedBody":"How to compile a.Netcore class library project？\r\nOr, how to compile.Netcore class library project directly into c/c++ dynamic link library"},{"Id":"7588797670","Type":"PullRequestEvent","CreatedAt":"2018-04-26T03:45:27","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5749","RelatedDescription":"Merged pull request \"Devirtualize delegate creation to sealed virtuals\" (#5749) at dotnet/corert","RelatedBody":"These could be in sealed vtable slots."},{"Id":"7588505753","Type":"PullRequestEvent","CreatedAt":"2018-04-26T02:02:06","Actor":"sergiy-k","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5750","RelatedDescription":"Merged pull request \"Fix Exceptions in OSX\" (#5750) at dotnet/corert","RelatedBody":"After the XCode update on April 12, exceptions in CoreRT on OSX stopped working. \r\n\r\nStack unwinding through any one of the specially defined unmanaged runtime methods (in this case `RhpThrowEx`) would cause an access violation. Diagnosing this further the  `EXPORT_POINTER_TO_ADDRESS` did not correctly export a pointer, but instead just a literal value of `1`. The underlying issue was that the value `1b` in the macro was interpreted as the binary digit `1` instead of correctly identified as the label. \r\n\r\nOur CI machines don't seem to have gotten the update yet - on an updated machine, the Exceptions test fails. \r\n\r\n@janvorli @sergiy-k "},{"Id":"7588334432","Type":"PullRequestEvent","CreatedAt":"2018-04-26T00:59:32","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5750","RelatedDescription":"Opened pull request \"Fix Exceptions in OSX\" (#5750) at dotnet/corert","RelatedBody":"After the XCode update on April 12, exceptions in CoreRT on OSX stopped working. \r\n\r\nStack unwinding through any one of the specially defined unmanaged runtime methods (in this case `RhpThrowEx`) would cause an access violation. Diagnosing this further the  `EXPORT_POINTER_TO_ADDRESS` did not correctly export a pointer, but instead just a literal value of `1`. The underlying issue was that the value `1b` in the macro was interpreted as the binary digit `1` instead of correctly identified as the label. \r\n\r\nOur CI machines don't seem to have gotten the update yet - on an updated machine, the Exceptions test fails. \r\n\r\n@janvorli @sergiy-k "},{"Id":"7588317147","Type":"IssuesEvent","CreatedAt":"2018-04-26T00:52:57","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5410","RelatedDescription":"Closed issue \"Investigate moving non-GC spills to allocas\" (#5410) at dotnet/corert","RelatedBody":"Now that returns are spills, we're generating a lot of them (and we'll generate more as part of a bug fix). We should investigate whether it would work to move non-GC types in spills to allocas instead of the shadow stack as that should generate smaller code by just using WASM locals. We still need the GC types so that we can report them to the GC from the shadow stack."},{"Id":"7588301552","Type":"PullRequestEvent","CreatedAt":"2018-04-26T00:46:51","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5748","RelatedDescription":"Merged pull request \"Enable Interface dispatch for WASM\" (#5748) at dotnet/corert","RelatedBody":"@morganbr thanks for solving the conv, vtable base and init problems. Here's my changes for interface dispatch. I think it still needs null checks before callvirt is really done. It might be a good idea to make some kind of LLVM infrastructure for injecting simple exception throwing checks inline. This would also apply nicely to the IndexOutOfRangeException that needs to be thrown in the array access code."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7600154700","Type":"IssuesEvent","CreatedAt":"2018-04-27T23:30:18","Actor":"weshaggard","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2197","RelatedDescription":"Opened issue \"Assembly informational attributes not applied for .net core app\" (#2197) at dotnet/sdk","RelatedBody":"@karelz commented on [Fri Apr 27 2018](https://github.com/dotnet/core-setup/issues/4088)\n\n_From @Priya91 on April 27, 2018 1:33_\n\n**Repro:**\r\n\r\n1. Create a .net core app\r\n2. Set the following properties in the csproj\r\n\r\n```xml\r\n<PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <RuntimeIdentifier>win7-x86</RuntimeIdentifier>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n    <AssemblyTitle>Assembly Information Repro</AssemblyTitle>\r\n    <AssemblyProduct>Assembly Information Repro</AssemblyProduct>\r\n    <AssemblyDescription>Assembly Information Repro</AssemblyDescription>\r\n    <Product>Assembly Information Repro</Product>\r\n    <PublisherName>tester</Publishername>\r\n</PropertyGroup>\r\n```\r\n3. Publish the app.\r\n\r\n**Expected:**\r\nThe properties on ```<assemblyname>.exe``` are set as per the info provided in the csproj.\r\n\r\n**Actual:**\r\nThe properties are set only for ```<assemblyname>.dll```, not on the ```<assemblyname>.exe```. Note, the .exe is the one that runs, and is shown in task manager, firewall prompts, etc. So without the process information, on task manager, it doesn't have a description, and on firewall prompts, it shows the publisher as unknown.\r\n\r\n**AssemblyMetadata.dll**\r\n\r\n![image](https://user-images.githubusercontent.com/7853870/39339896-e260be6e-497f-11e8-867b-fb470122a334.png)\r\n\r\n**AssemblyMetadata.exe**\r\n\r\n![image](https://user-images.githubusercontent.com/7853870/39339877-c3c9349a-497f-11e8-85ad-64ae3f6461e0.png)\r\n\n\n_Copied from original issue: dotnet/corefx#29362_\n\n---\n\n@karelz commented on [Fri Apr 27 2018](https://github.com/dotnet/core-setup/issues/4088#issuecomment-385012366)\n\n_From @kasper3 on April 27, 2018 6:21_\n\nBelongs to https://github.com/dotnet/sdk?\n\n"},{"Id":"7599919437","Type":"PullRequestEvent","CreatedAt":"2018-04-27T22:03:29","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2196","RelatedDescription":"Opened pull request \"Add trim for path in Item\" (#2196) at dotnet/sdk","RelatedBody":"fix https://github.com/dotnet/sdk/issues/1538"},{"Id":"7599769527","Type":"PullRequestEvent","CreatedAt":"2018-04-27T21:21:03","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2195","RelatedDescription":"Merged pull request \"Support overriding MSBuildProjectExtensionsPath for a specific project via global properties\" (#2195) at dotnet/sdk","RelatedBody":"Dual check-in into release/2.1.3xx for change in #2194\r\n\r\nTwo properties are needed since global properties flow to referenced projects so there needs to be a way to specify which project the override applies to"},{"Id":"7599642449","Type":"PullRequestEvent","CreatedAt":"2018-04-27T20:50:21","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2194","RelatedDescription":"Merged pull request \"Support overriding MSBuildProjectExtensionsPath for a specific project via global properties\" (#2194) at dotnet/sdk","RelatedBody":"Two properties are needed since global properties flow to referenced projects so there needs to be a way to specify which project the override applies to\r\n\r\nPart of the fix to https://github.com/dotnet/cli/issues/9129"},{"Id":"7599534215","Type":"PullRequestEvent","CreatedAt":"2018-04-27T20:25:12","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2195","RelatedDescription":"Opened pull request \"Support overriding MSBuildProjectExtensionsPath for a specific project via global properties\" (#2195) at dotnet/sdk","RelatedBody":"Dual check-in into release/2.1.3xx for change in #2194\r\n\r\nTwo properties are needed since global properties flow to referenced projects so there needs to be a way to specify which project the override applies to"},{"Id":"7599296211","Type":"PullRequestEvent","CreatedAt":"2018-04-27T19:29:59","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2194","RelatedDescription":"Opened pull request \"Support overriding MSBuildProjectExtensionsPath for a specific project via global properties\" (#2194) at dotnet/sdk","RelatedBody":"Two properties are needed since global properties flow to referenced projects so there needs to be a way to specify which project the override applies to\r\n\r\nPart of the fix to https://github.com/dotnet/cli/issues/9129"},{"Id":"7596898098","Type":"PullRequestEvent","CreatedAt":"2018-04-27T11:27:51","Actor":"noahfalk","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2193","RelatedDescription":"Opened pull request \"Add a tiered compilation build variable\" (#2193) at dotnet/sdk","RelatedBody":"All the other runtimeconfig options have a built-in property to set them in\r\nout build targets so adding this one to follow suit."},{"Id":"7596080288","Type":"PullRequestEvent","CreatedAt":"2018-04-27T08:28:04","Actor":"v-zbsail","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2192","RelatedDescription":"Opened pull request \"LOC CHECKIN | dotnet/sdk release/2.1.3xx | 20180427\" (#2192) at dotnet/sdk","RelatedBody":null}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"989532387775205376","CreatedAt":"2018-04-26T15:51:20+00:00","UserScreenname":"dotnet","Text":"Get the Azure Quick Start Guide for .NET Developers https://t.co/ALECzXryjk","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":48,"FavoriteCount":20,"RawContent":null},{"Id":"987375741204508673","CreatedAt":"2018-04-20T17:01:35+00:00","UserScreenname":"dotnet","Text":"Help us plan the future of .NET! https://t.co/R0QoZVvXx4","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":124,"FavoriteCount":93,"RawContent":null},{"Id":"986692696507953152","CreatedAt":"2018-04-18T19:47:25+00:00","UserScreenname":"dotnet","Text":"Performance Improvements in .NET Core 2.1 https://t.co/6YMK8P99cZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":251,"FavoriteCount":152,"RawContent":null},{"Id":"986692437211987969","CreatedAt":"2018-04-18T19:46:23+00:00","UserScreenname":"dotnet","Text":"Announcing Visual Studio 2017 15.7 Preview 4 https://t.co/XYIzXNDMhn","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":63,"FavoriteCount":44,"RawContent":null},{"Id":"986400394786914304","CreatedAt":"2018-04-18T00:25:55+00:00","UserScreenname":"dotnet","Text":".NET Core April 2018 Update https://t.co/PuT2Jc7GBy","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":71,"FavoriteCount":33,"RawContent":null},{"Id":"985915431499259904","CreatedAt":"2018-04-16T16:18:50+00:00","UserScreenname":"dotnet","Text":"Join our @csharpfritz and his pair-programming guest @fiercekittenz tomorrow for some LIVE CODING and discussion ab… https://t.co/Vll8gfdlKQ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":5,"RawContent":null}]}},"RunOn":"2018-04-28T05:30:24.6938256Z","RunDurationInMilliseconds":9562}