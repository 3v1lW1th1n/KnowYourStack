{"Data":{"Angular-Issues":{"Issues":[{"Id":"563760499","IsPullRequest":true,"CreatedAt":"2020-02-12T05:19:53","Actor":"AndrewKushnir","Number":"35356","RawContent":null,"Title":"[DO NOT MERGE] test: check animations behavior in IE10","State":"open","Body":"This is a test-only PR, DO NOT MERGE.\r\n\r\nThe goal of this PR is to check whether a simple animations case passes IE10 tests on CI.","Url":"https://github.com/angular/angular/pull/35356","RelatedDescription":"Open PR \"[DO NOT MERGE] test: check animations behavior in IE10\" (#35356)"},{"Id":"563729582","IsPullRequest":true,"CreatedAt":"2020-02-12T03:39:37","Actor":"sonukapoor","Number":"35355","RawContent":null,"Title":"docs: Update doc to use `ng` firebase schematics for deployment","State":"open","Body":"Previously, the `deployment` section, was using the `firebase`\r\nCLI to deploy the angular project into firebase. With the better\r\nintegration through the `fire` schematics, it is now easier to\r\ndeploy angular applications into firebase. This commit takes\r\ncare of this, by outlined the required steps for deployment.\r\n\r\nCloses #35274\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [X] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [X] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: #35274\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/35355","RelatedDescription":"Open PR \"docs: Update doc to use `ng` firebase schematics for deployment\" (#35355)"},{"Id":"563727386","IsPullRequest":true,"CreatedAt":"2020-02-12T03:33:21","Actor":"ajitsinghkaler","Number":"35354","RawContent":null,"Title":"docs: remove service from region where it was added before it was cre…","State":"open","Body":"…ated\r\n\r\nThe message service in toh4  was created at a later point in the tutorial, it is added in a section create message service but was impoted much before it removed those imports\r\n\r\nFixes #35259\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nimport message service before it was created \r\nIssue Number: #35259\r\n\r\n\r\n## What is the new behavior?\r\nRemoved import of message service before it was created.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/35354","RelatedDescription":"Open PR \"docs: remove service from region where it was added before it was cre…\" (#35354)"},{"Id":"563708282","IsPullRequest":false,"CreatedAt":"2020-02-12T02:58:37","Actor":"kaushiksamanta","Number":"35353","RawContent":null,"Title":"Cache busting issues with angular template files","State":"open","Body":"```ng build --output-hashing=all```\r\n\r\nThis should handle cache busting by default. The compiled js-file-names contain a hash-number for every version so that files won't be cached. And the html should be included in the javascript-files. Still old template-stuff seems to be cached.","Url":"https://github.com/angular/angular/issues/35353","RelatedDescription":"Open issue \"Cache busting issues with angular template files\" (#35353)"},{"Id":"563700569","IsPullRequest":true,"CreatedAt":"2020-02-12T02:41:02","Actor":"ajitsinghkaler","Number":"35352","RawContent":null,"Title":"feat(docs-infra): add swap to web fonts so downloading does not block…","State":"open","Body":"… rendering\r\n\r\nLight house was reporting that 'Ensure text remains visible during webfont load' solution to this was adding & swap to the end o web fonts this leds to our first text showing before web-font download and improves the performance of out site link to article: https://web.dev/font-display/\\?utm_source\\=lighthouse\\&utm_medium\\=lr\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nWeb fonts block rendering. \r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nWeb fonts won't block rendering while downloading.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/35352","RelatedDescription":"Open PR \"feat(docs-infra): add swap to web fonts so downloading does not block…\" (#35352)"},{"Id":"563675259","IsPullRequest":false,"CreatedAt":"2020-02-12T01:26:17","Actor":"webtrainer-in","Number":"35351","RawContent":null,"Title":"Angular 8 vs 9 Size Comparison ","State":"open","Body":"Hi Team \r\n\r\nI have just created two default applications one with Angular 8 and another one is with Angular 8 CLI. But Angular 9 Size is more than Angular 8 as shown in below screen shot\r\n\r\n![NG8 vs NG9 Size](https://user-images.githubusercontent.com/42771352/74294411-cc206e80-4d63-11ea-9a67-f82b713fca4b.png)\r\n\r\nCould you please guide me on this, I was expecting lesser size with Angular 9.\r\n","Url":"https://github.com/angular/angular/issues/35351","RelatedDescription":"Open issue \"Angular 8 vs 9 Size Comparison \" (#35351)"},{"Id":"563593915","IsPullRequest":true,"CreatedAt":"2020-02-12T01:03:14","Actor":"kara","Number":"35349","RawContent":null,"Title":"fix(forms): change Array.reduce usage to Array.forEach","State":"closed","Body":"There is currently a bug in Chrome 80 that makes Array.reduce\r\nnot work according to spec. The functionality in forms that\r\nretrieves controls from FormGroups and FormArrays (`form.get`)\r\nrelied on Array.reduce, so the Chrome bug broke forms for\r\nmany users.\r\n\r\nThis commit refactors our forms code to rely on Array.forEach\r\ninstead of Array.reduce to fix forms while we are waiting\r\nfor the Chrome fix to go live.\r\n\r\nSee https://bugs.chromium.org/p/chromium/issues/detail?id=1049982.\r\n","Url":"https://github.com/angular/angular/pull/35349","RelatedDescription":"Closed or merged PR \"fix(forms): change Array.reduce usage to Array.forEach\" (#35349)"},{"Id":"563643759","IsPullRequest":true,"CreatedAt":"2020-02-12T00:31:33","Actor":"mhevery","Number":"35350","RawContent":null,"Title":"fix(core): correctly concatinate static and dynamic binding to `class…","State":"open","Body":"…` when shadowed\r\n\r\nFix #35335\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/35350","RelatedDescription":"Open PR \"fix(core): correctly concatinate static and dynamic binding to `class…\" (#35350)"},{"Id":"563274301","IsPullRequest":false,"CreatedAt":"2020-02-11T23:30:27","Actor":"liamdebeasi","Number":"35338","RawContent":null,"Title":"[angular 9] child pages initially added to incorrect container element in Ionic Angular apps","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\n<!-- ✍️edit: --> The issue is caused by package @angular/routing\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: Angular 8.x\r\n\r\n\r\n### Description\r\n\r\n<!-- ✍️-->\r\n\r\nWe are running into an issue with navigation on Angular 9. It seems that after the upgrade, Angular is inserting pages into the wrong container component.\r\nWe have the following DOM layout:\r\n\r\n```\r\napp-root (the main component for the Angular app)\r\n|\r\n|_____ion-app (a web component that manages Ionic utilities)\r\n|     |\r\n|_____|_____ion-router-outlet (a web component that is a wrapper around Angular's router outlet)\r\n|     |     |\r\n|_____|_____|_____app-home (the main page of our application)\r\n```\r\n\r\nClicking a button in `app-home` navigates you to `app-child`. In Angular <=8, this child page is added as a child inside of `ion-router-outlet`. With Angular 9, this page is initially added as child of `ion-app`, and then re-added as a child of `ion-router-outlet` .  This is causing issues with our users’ apps as certain components no longer work on subsequent navigations to the child page.\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n<!--\r\nPlease create and share minimal reproduction of the issue starting with this template: https://stackblitz.com/fork/angular-issue-repro2\r\n-->\r\nAngular 8 repro: https://github.com/liamdebeasi/ng8-routing-repro\r\nAngular 9 repro: https://github.com/liamdebeasi/ng9-routing-repro\r\n\r\nPlease see repo README files for steps to reproduce.\r\n\r\n<!--\r\nIf StackBlitz is not suitable for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue.\r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem. \r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\nAngular CLI: 9.0.1\r\nNode: 10.15.0\r\nOS: darwin x64\r\n\r\nAngular: 9.0.0\r\n... common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.801.3\r\n@angular-devkit/build-angular     0.900.1\r\n@angular-devkit/build-optimizer   0.900.1\r\n@angular-devkit/build-webpack     0.900.1\r\n@angular-devkit/core              9.0.1\r\n@angular-devkit/schematics        9.0.1\r\n@angular/cli                      9.0.1\r\n@ngtools/webpack                  9.0.1\r\n@schematics/angular               8.1.3\r\n@schematics/update                0.900.1\r\nrxjs                              6.5.4\r\ntypescript                        3.7.5\r\nwebpack                           4.41.2\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\nThis is an Ionic Framework v5 application, but we have not changed anything related to our routing setup with regards to Angular 9.\r\n","Url":"https://github.com/angular/angular/issues/35338","RelatedDescription":"Closed issue \"[angular 9] child pages initially added to incorrect container element in Ionic Angular apps\" (#35338)"},{"Id":"563572384","IsPullRequest":true,"CreatedAt":"2020-02-11T23:00:55","Actor":"josephperrott","Number":"35348","RawContent":null,"Title":"ci: use pipeline values to define the CI_COMMIT_RANGE","State":"open","Body":"Taken from CircleCI's [Pipeline Values](https://circleci.com/docs/2.0/pipeline-variables/#pipeline-values) example, this is the expected method for getting the values formerly found in the `CIRCLE_COMPARE_URL`","Url":"https://github.com/angular/angular/pull/35348","RelatedDescription":"Open PR \"ci: use pipeline values to define the CI_COMMIT_RANGE\" (#35348)"},{"Id":"563563773","IsPullRequest":true,"CreatedAt":"2020-02-11T22:53:13","Actor":"AndrewKushnir","Number":"35347","RawContent":null,"Title":"fix(core): better handing of ICUs outside of i18n blocks","State":"open","Body":"Currently the logic that handles ICUs located outside of i18n blocks may throw exceptions at runtime. The problem is caused by the fact that we store incorrect TNode index for previous TNode (index that includes HEADER_OFFSET) and do not store a flag whether this TNode is a parent or a sibling node. As a result, the logic that assembles the final output uses incorrect TNodes and in some cases throws exceptions (when incompatible structure is extracted from tView.data due to the incorrect index). This commit adjusts the index and captures whether TNode is a parent to make sure underlying logic manipulates correct TNode.\r\n\r\nThis PR closes https://github.com/angular/angular/issues/35299.\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Bugfix\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/35347","RelatedDescription":"Open PR \"fix(core): better handing of ICUs outside of i18n blocks\" (#35347)"},{"Id":"563467639","IsPullRequest":false,"CreatedAt":"2020-02-11T21:47:08","Actor":"bicarlsen","Number":"35345","RawContent":null,"Title":"ViewChild \"static\" doc incorrect.","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n# 📚 Docs or angular.io bug report\r\n\r\n### Description\r\n\r\nThe [documentation for ViewChild's](https://angular.io/api/core/ViewChild) `static` metadata property states \r\n> static - True to resolve query results before change detection runs, false to resolve after change detection. Defaults to false.\r\n\r\nWhich seems to impy that this is an optional argument. However, the call signature is `selector: Type<any> | Function | string, opts: { read?: any;  static: boolean;}): any;`\r\n\r\n## 🔬 Minimal Reproduction\r\nViewChild( 'selector', {} );\r\n\r\n### What's the affected URL?**\r\nhttps://angular.io/api/core/ViewChild.","Url":"https://github.com/angular/angular/issues/35345","RelatedDescription":"Closed issue \"ViewChild \"static\" doc incorrect.\" (#35345)"},{"Id":"563486278","IsPullRequest":true,"CreatedAt":"2020-02-11T21:36:36","Actor":"alxhub","Number":"35346","RawContent":null,"Title":"refactor(ivy): compute ignoreFiles for compilation on initialization …","State":"closed","Body":"…(#34792)\r\n\r\nThis commit moves the calculation of `ignoreFiles` - the set of files to be\r\nignored by a consumer of the `NgCompiler` API - from its `prepareEmit`\r\noperation to its initialization. It's now available as a field on\r\n`NgCompiler`.\r\n\r\nThis will allow a consumer to skip gathering diagnostics for `ignoreFiles`\r\nas well as skip emit.\r\n","Url":"https://github.com/angular/angular/pull/35346","RelatedDescription":"Closed or merged PR \"refactor(ivy): compute ignoreFiles for compilation on initialization …\" (#35346)"},{"Id":"563452013","IsPullRequest":false,"CreatedAt":"2020-02-11T20:17:19","Actor":"mmorgansancsoft","Number":"35344","RawContent":null,"Title":"select element's ngModel is incorrect for options added as viewchildren ","State":"open","Body":"When setting up a select html element with options added as view children, the select element outputs the option text instead of the options ngValue.\r\n\r\nFollow this stackblitz for an example.  Notice how 0 outputs its option's ngValue, while 1,2,3 output their option's text.\r\n\r\nhttps://stackblitz.com/edit/ngvalue-bug?embed=1&file=src/app/app.component.html","Url":"https://github.com/angular/angular/issues/35344","RelatedDescription":"Open issue \"select element's ngModel is incorrect for options added as viewchildren \" (#35344)"},{"Id":"563409161","IsPullRequest":true,"CreatedAt":"2020-02-11T18:57:47","Actor":"crisbeto","Number":"35343","RawContent":null,"Title":"fix(ivy): error if directive with synthetic property binding is on same node as directive that injects ViewContainerRef","State":"open","Body":"In the `loadRenderer` we make an assumption that the value will always be an `LView`, but if there's a directive on the same node which injects `ViewContainerRef` the `LView` will be wrapped in an `LContainer`. These changes add a call to unwrap the value before we try to read the value off of it.\r\n\r\nFixes #35342.\r\n","Url":"https://github.com/angular/angular/pull/35343","RelatedDescription":"Open PR \"fix(ivy): error if directive with synthetic property binding is on same node as directive that injects ViewContainerRef\" (#35343)"},{"Id":"563360611","IsPullRequest":true,"CreatedAt":"2020-02-11T17:24:30","Actor":"TidianeRol","Number":"35341","RawContent":null,"Title":"feat(forms): add a method to set a FormControl's updateOn property","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\nCurrently, the only way to set a FormControl's updateOn property is in the constructor.\r\nIssue Number: #35005\r\n\r\n\r\n## What is the new behavior?\r\nNow, with the setUpdateMethod it's possible to dynamically change the updateOn property.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/35341","RelatedDescription":"Open PR \"feat(forms): add a method to set a FormControl's updateOn property\" (#35341)"},{"Id":"563341548","IsPullRequest":true,"CreatedAt":"2020-02-11T16:54:27","Actor":"dtaylor84","Number":"35340","RawContent":null,"Title":"docs: ViewChild/ContentChild read property is not a boolean","State":"open","Body":"I still don't entirely understand what the read property is, but it's not a boolean and describing it as \"True to...\" is misleading.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/35340","RelatedDescription":"Open PR \"docs: ViewChild/ContentChild read property is not a boolean\" (#35340)"},{"Id":"563238048","IsPullRequest":false,"CreatedAt":"2020-02-11T15:56:28","Actor":"Sikatrih","Number":"35336","RawContent":null,"Title":"ngOnInit and ngOnDestroy don't works with decorators.","State":"closed","Body":"I have updated my app from angular 7 to angular  9 and now next constructions do not works any more.\r\n\r\n```ts\r\nimport { Subject } from 'rxjs';\r\n\r\nconst ON_INIT_NAME = 'ngOnInit';\r\nconst ON_DESTROY_NAME = 'ngOnDestroy';\r\n\r\nexport function Destroy(): PropertyDecorator {\r\n    return (target: any, prop: string | symbol) => {\r\n        const ngOnInitClone: (() => void) | null = target[ON_INIT_NAME];\r\n        const ngOnDestroyClone: (() => void) | null = target[ON_DESTROY_NAME];\r\n\r\n        target[ON_INIT_NAME] = function () {\r\n            this[prop] = new Subject();\r\n\r\n            if (ngOnInitClone) {\r\n                ngOnInitClone.call(this);\r\n            }\r\n        };\r\n\r\n        target[ON_DESTROY_NAME] = function () {\r\n            this[prop].next(this);\r\n            this[prop].complete();\r\n\r\n            if (ngOnDestroyClone) {\r\n                ngOnDestroyClone.call(this);\r\n            }\r\n        };\r\n    };\r\n}\r\n\r\n```\r\n","Url":"https://github.com/angular/angular/issues/35336","RelatedDescription":"Closed issue \"ngOnInit and ngOnDestroy don't works with decorators.\" (#35336)"},{"Id":"563290709","IsPullRequest":true,"CreatedAt":"2020-02-11T15:37:46","Actor":"devversion","Number":"35339","RawContent":null,"Title":"fix(core): undecorated-classes-with-decorated-fields migration does not decorate derived classes","State":"open","Body":"The `undecorated-classes-with-decorated-fields` migration has been\r\nintroduced with https://github.com/angular/angular/commit/904a2018e0d3394ad91ffb6472f8271af7845295, but misses logic for decorating derived classes\r\nof undecorated classes which use Angular features. Example scenario:\r\n\r\n```ts\r\nexport abstract class MyBaseClass {\r\n  @input() someInput = true;\r\n}\r\n\r\nexport abstract class BaseClassTwo extends MyBaseClass {}\r\n\r\n@component(...)\r\nexport class MyButton extends BaseClassTwo {}\r\n```\r\n\r\nBoth abstract classes would need to be migrated. Previously, the migration\r\nonly added `@Directive()` to `MyBaseClass`, but with this change, it\r\nalso decorates `BaseClassTwo`.\r\n\r\nThis is necessary because the Angular Compiler requires `BaseClassTwo` to\r\nhave a directive definition when it flattens the directive metadata for\r\n`MyButton` in order to perform type checking. Technically, not decorating\r\n`BaseClassTwo` does not break at runtime.\r\n\r\nWe basically want to enforce consistent use of `@Directive` to simplify the\r\nmental model. [See the migration guide](https://angular.io/guide/migration-undecorated-classes#migrating-classes-that-use-field-decorators).\r\n\r\nFixes #34376.\r\n\r\n**Note**: It should be easier and less verbose to to review the commits individually.\r\n","Url":"https://github.com/angular/angular/pull/35339","RelatedDescription":"Open PR \"fix(core): undecorated-classes-with-decorated-fields migration does not decorate derived classes\" (#35339)"},{"Id":"563252186","IsPullRequest":false,"CreatedAt":"2020-02-11T14:40:25","Actor":"cghislai","Number":"35337","RawContent":null,"Title":"service worker: Allow to override strategy for each request","State":"open","Body":"The current service worker already provides two strategies for data asset: freshness and performance. Which is great.\r\n\r\nIt would be great to be able to override the strategy used on a request basis at runtime.\r\n\r\nOur use case is as follow:\r\nWe fetch a list of referenceA from some endpoint, then for each referenceA we fetch the corresponding entityA, relying on the `performance` strategy of the service worker cache.\r\nWe display those entities in a table, and in some cell we have a component that fetch another entityB referenced from entityA.\r\nAll entitiesA displayed in the table may reference the same entityB, so we rely on the service worker cache to send a single network request for that one.\r\n\r\nNow another client updates an entityA, and the server send us back an entityAUpdateEvent. At that point, we would like to force the sw to fetch and cache a new copy of a given entityA. AFAIK, this is currently not possible.\r\n\r\nIm thinking of an header/query param like `ngsw-bypass` that would allow to override the configured strategy (so that we could use freshness in our usecase) - or just send a network request and cache it. If im not mistaken, requests sent using ngsw-bypass will not be cached. \r\n\r\nThis would probably allow other use cases like those described in #20402 as well: To implement a response that emit the cache value then the network value, you could concat/merge a request made using the performance strategy with one using the freshness strategy.","Url":"https://github.com/angular/angular/issues/35337","RelatedDescription":"Open issue \"service worker: Allow to override strategy for each request\" (#35337)"},{"Id":"563182891","IsPullRequest":false,"CreatedAt":"2020-02-11T14:11:37","Actor":"whitegoat","Number":"35332","RawContent":null,"Title":"Try to upgrade angular 8.1 to angular 9.","State":"closed","Body":"\r\n I try to upgrade angular 8.1 to angular 9.\r\n\r\n\r\n# 🐞 Bug report\r\n\r\n\r\n\r\n- [ yes] build\r\n- [yes ] serve\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: ....\r\n\r\n\r\n### Description\r\n\r\nIn tsconfig.json have added the below line\r\n\"angularCompilerOptions\": {\r\n    \"enableIvy\": true\r\n  }\r\n\r\nTry to build or server getting the error.\r\n \r\n105 export declare class TreeModule {\r\n                         ~~~~~~~~~~\r\nnode_modules/angular2-multiselect-dropdown/multiselect.component.d.ts:85:22 - error NG6002: Appears in the NgModule.imports of SessionModule, but could not be resolved to an NgModule class\r\n\r\n\r\n\r\n","Url":"https://github.com/angular/angular/issues/35332","RelatedDescription":"Closed issue \"Try to upgrade angular 8.1 to angular 9.\" (#35332)"},{"Id":"563228415","IsPullRequest":false,"CreatedAt":"2020-02-11T14:04:44","Actor":"Gretam11","Number":"35335","RawContent":null,"Title":"[ivy] 'ngClass' + 'dynamic [class] = undefined | null' completely clears out 'static class binding'","State":"open","Body":"# 🐞 bug report\r\n\r\n### Affected Package\r\nThe issue is caused by package @angular/core or @angular/common 9.0.0\r\n\r\n\r\n### Is this a regression?\r\nIt works fine when Ivy is opted-out.\r\n\r\n\r\n### Description\r\nI'm not sure whether this is a real bug, but it's indeed behavior which some libraries depend on. If the `static class binding` is specified with `NgClass` directive and with `dynamic class binding equals null or undefined`, all values from static class binding are being cleared out.\r\nIn case if any string (even empty) is specified in dynamic binding, it just merges all classes as expected.\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\nI couldn't turn on ivy on stack-blitz, so here is the link on `ng-run` of minimal reproduction:\r\nhttps://ng-run.com/edit/LKHMmMPIRiZmgFFqMt15\r\nIt's handy to turn on/off Ivy there. \r\n\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre>Angular CLI: 9.0.1\r\nNode: 12.13.0\r\nOS: win32 x64\r\n\r\nAngular: 9.0.0\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.1\r\n@angular-devkit/build-angular     0.900.1\r\n@angular-devkit/build-optimizer   0.900.1\r\n@angular-devkit/build-webpack     0.900.1\r\n@angular-devkit/core              9.0.1\r\n@angular-devkit/schematics        9.0.1\r\n@angular/cli                      9.0.1\r\n@ngtools/webpack                  9.0.1\r\n@schematics/angular               9.0.1\r\n@schematics/update                0.900.1\r\nrxjs                              6.5.4\r\ntypescript                        3.7.5\r\nwebpack                           4.41.2<code>\r\n","Url":"https://github.com/angular/angular/issues/35335","RelatedDescription":"Open issue \"[ivy] 'ngClass' + 'dynamic [class] = undefined | null' completely clears out 'static class binding'\" (#35335)"},{"Id":"563225851","IsPullRequest":false,"CreatedAt":"2020-02-11T14:00:30","Actor":"santam85","Number":"35334","RawContent":null,"Title":"Outdated i18n example","State":"open","Body":"# 📚 Docs or angular.io bug report\r\n\r\n### Description\r\n\r\nThe example i18n project referenced in the latest documentation is using old (<9) style localization configuration, and the source code does not match the documented instructions\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n### What's the affected URL?**\r\nhttps://angular.io/guide/i18n#translate-attributes\r\n\r\n### Expected vs Actual Behavior**\r\nWould have expected a section in the angular.json similar to:\r\n\r\n```\r\n\"i18n\": {\r\n      \"sourceLocale\": \"en-US\",\r\n      \"locales\": {\r\n        \"fr\": \"src/locale/messages.fr.xlf\"\r\n      }\r\n    }\r\n```","Url":"https://github.com/angular/angular/issues/35334","RelatedDescription":"Open issue \"Outdated i18n example\" (#35334)"},{"Id":"563194680","IsPullRequest":true,"CreatedAt":"2020-02-11T13:07:04","Actor":"santoshyadav198613","Number":"35333","RawContent":null,"Title":"docs: remove @angular/platform-webworker from comment","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/35333","RelatedDescription":"Open PR \"docs: remove @angular/platform-webworker from comment\" (#35333)"},{"Id":"563182502","IsPullRequest":false,"CreatedAt":"2020-02-11T12:20:22","Actor":"whitegoat","Number":"35331","RawContent":null,"Title":"Appears in the NgModule.imports of TypeModule, but itself has errors","State":"open","Body":"After upgrade to angular 8.1 to angular 9.\r\n\r\nerror \r\nexport class PageModule{ }\r\n                ~~~~~~~~~~~~~\r\nsrc/app/file-explorer.module.ts:32:14 - error NG6002: Appears in the NgModule.imports of PageModule, but itself has errors","Url":"https://github.com/angular/angular/issues/35331","RelatedDescription":"Open issue \"Appears in the NgModule.imports of TypeModule, but itself has errors\" (#35331)"},{"Id":"563160268","IsPullRequest":false,"CreatedAt":"2020-02-11T12:00:34","Actor":"micobarac","Number":"35330","RawContent":null,"Title":"Injected ngControl doesn't contain control property in Angular 9","State":"open","Body":"# 🐞 bug report\r\n\r\n### Affected Package\r\n\r\n`import { NgControl } from '@angular/forms';`\r\n\r\n\r\n### Is this a regression?\r\n\r\nI believe that this is an Ivy compiler issue\r\n\r\n### Description\r\n\r\nInjected `ngControl` doesn't contain `control` property in Angular 9.\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n```html\r\n<mat-checkbox formControlName=\"locked\" name=\"locked\" class=\"m-t-5\"\r\n[opDisabled]=\"!(isEditing && isLocked)\">\r\n<span>{{ 'User.Locked' | translate }}</span>\r\n</mat-checkbox>\r\n```\r\n\r\nThis doesn't work:\r\n\r\n```typescript\r\nimport { Directive, Input } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[opDisabled]'\r\n})\r\nexport class DisabledDirective {\r\n  @Input()\r\n  set opDisabled(condition: boolean) {\r\n    const action = condition ? 'disable' : 'enable';\r\n    this.ngControl.control[action]();\r\n  }\r\n\r\n  constructor(private ngControl: NgControl) {}\r\n}\r\n```\r\n\r\nThis works:\r\n\r\n```typescript\r\nimport { Directive, Input } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[opDisabled]'\r\n})\r\nexport class DisabledDirective {\r\n  @Input()\r\n  set opDisabled(condition: boolean) {\r\n    const action = condition ? 'disable' : 'enable';\r\n    setTimeout(() => this.ngControl.control[action]());\r\n  }\r\n\r\n  constructor(private ngControl: NgControl) {}\r\n}\r\n```\r\n\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>\r\ncore.js:5828 ERROR TypeError: Cannot read property 'disable' of undefined\r\n</code></pre>\r\n\r\nThe `control` property  is `undefined` and It looks like the it gets appended asynchronously to the injected `ngControl`, that's why the `setTimeout(() => {...})` workaround seems to work. Is this by design or is it a bug?\r\nThere is a similar issue reported [#32522](https://github.com/angular/angular/issues/32522), but locked due to inactivity, without any solutions mentioned in the comments.\r\n\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 9.0.1\r\nNode: 13.3.0\r\nOS: darwin x64\r\n\r\nAngular: 9.0.0\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, material, platform-browser\r\n... platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.1\r\n@angular-devkit/build-angular     0.900.1\r\n@angular-devkit/build-optimizer   0.900.1\r\n@angular-devkit/build-webpack     0.900.1\r\n@angular-devkit/core              9.0.1\r\n@angular-devkit/schematics        9.0.1\r\n@angular/cli                      9.0.1\r\n@angular/flex-layout              9.0.0-beta.29\r\n@ngtools/webpack                  9.0.1\r\n@schematics/angular               9.0.1\r\n@schematics/update                0.900.1\r\nrxjs                              6.5.4\r\ntypescript                        3.7.5\r\nwebpack                           4.41.2\r\n</code></pre>","Url":"https://github.com/angular/angular/issues/35330","RelatedDescription":"Open issue \"Injected ngControl doesn't contain control property in Angular 9\" (#35330)"},{"Id":"563100181","IsPullRequest":true,"CreatedAt":"2020-02-11T10:16:34","Actor":"JiaLiPassion","Number":"35329","RawContent":null,"Title":"feat: add zone configuration to typescript interface","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\nAdd all zone.js configuration to interface, so we can define those flags in `polyfills.ts` like this.\r\n\r\n```\r\nconst config = window as ZoneGlobalConfiguration;\r\nconfig.__Zone_disable_requestAnimationFrame = true;\r\n\r\n```","Url":"https://github.com/angular/angular/pull/35329","RelatedDescription":"Open PR \"feat: add zone configuration to typescript interface\" (#35329)"},{"Id":"563075029","IsPullRequest":false,"CreatedAt":"2020-02-11T09:49:59","Actor":"arti1zz","Number":"35327","RawContent":null,"Title":"Upgrade to version 9 issue","State":"closed","Body":"Hello! I'm trying to upgrade from angular 8 to 9, everything went ok, but at the end i got an issue. When running the project I'm getting: \r\n\r\n>`\\ClientApp\\vendor-es2015.js: 'with' in strict mode (195455:4)\r\n>  195453 |   Window_run: function _run(code, file) {\r\n>  195454 |     if (file) code += '\\n//@ sourceURL=' + file;\r\n> 195455 |     with(this) eval(code);\r\n         |     ^\r\n  195456 |   },\r\n  195457 |   EventHandlerBuilder_build: function build() {\r\n  195458 |     try {`\r\n\r\nNot sure, what could I try to solve this?","Url":"https://github.com/angular/angular/issues/35327","RelatedDescription":"Closed issue \"Upgrade to version 9 issue\" (#35327)"},{"Id":"563075887","IsPullRequest":false,"CreatedAt":"2020-02-11T09:33:50","Actor":"tomastrajan","Number":"35328","RawContent":null,"Title":"Support for dynamic Angular Elements / Webcomponents (with Renderers)","State":"open","Body":"# 🚀 feature request\r\n\r\n### Relevant Package\r\nThe functionality relates to the `@angular/platform-browser` package as this is the package which implements `DomRendererFactory2` and `DefaultDomRenderer2`\r\n\r\n\r\n### Description\r\nAngular Elements and Webcomponents in general represent great solution for various [real world use cases](https://angular-extensions.github.io/elements/#/docs/use-cases#sub-applications) like...\r\n* sub-applications - ability to deploy library  independently which will update all consumers without need to rebuild these consumer SPAs because lib is only referenced by url (as Angular Element bundle)\r\n* microfrontends ( runtime-configurable )\r\n\r\nUsual approach to consuming Angular Elements and Web components leaves us with 2 options:\r\n1. eager loading + standard Angular template binding `<some-element [prop]=\"value\">`\r\n2. lazy loading + imperative component creation and props / event binding `document.createElement('some-element');` ...\r\n\r\nThe library `@angular-extensions/elements` solves this by enabling both **lazy loading** and **standard Angular template binding** `<some-element *axLazyElement=\"bundle.js\" [prop]=\"value\">` and this works with both ViewEngine and IVY...\r\n\r\n### Dynamic element use case\r\nIn previous section we're committing to element being `<some-element>` by hard-coding it into template of the consumer Angular component. What if we wanted to support loading element configuration at runtime (eg from backend) to enable fully dynamic microfrontends?\r\n\r\nAs it turns out this works too (at least for the ViewEngine) so it is possible to write `<ax-lazy-element *axLazyElementDynamic=\"'some-element'; url: 'bundle.js'\" [prop]=\"value\"></ax-lazy-element>`.\r\nThe bundle will be lazy loaded, and then the element will be rendered as `<some-element>`.\r\nThe only thing needed to do that is to override value of the `tagName` in the `TemplateRef` of the `*axLazyElemendDynamic` directive and Angular will render desired element supporting our use case.\r\n\r\nNow this does NOT work with IVY since in IVY template is an function. \r\nRob @robwormald gave me hint that it should be possible to override `Renderer` (or use custom) to hook into rendering and override element there.\r\n\r\n### The Issue\r\nIt is possible to achieve that with render BUT:\r\n* currently both `DomRendererFactory2` and `DefaultDomRenderer2` are private so it is NOT possible to extend them and hence I would need to re-implement the whole renderer which sounds pretty excessive and hard to maintain\r\n* PLUS as far as I am aware the render API changed [older NRWL article](https://blog.nrwl.io/experiments-with-angular-renderers-c5f647d4fd9e) so there is no more `RootRenderer` ?\r\n\r\n### Current [solution](https://github.com/angular-extensions/elements/blob/master/projects/elements/src/lib/lazy-elements/lazy-element-dynamic/lazy-element-dynamic.directive.ts#L71-L80)\r\nPlay around with **live demo** (which serves both lib and demo and rebuilds on changes to any of them) using this one liner `git clone https://github.com/angular-extensions/elements.git elements && cd elements && npm ci && npm start` once it runs, please navigate to `Examples > Dynamic` to see it in action.\r\n\r\n\r\n```typescript\r\n@Directive({\r\n  selector: '[axLazyElementDynamic]'\r\n})\r\nexport class LazyElementDynamicDirective implements OnInit {\r\n  @Input('axLazyElementDynamic') tag: string;\r\n  @Input('axLazyElementDynamicUrl') url: string;\r\n\r\n  constructor(\r\n    @Inject(DOCUMENT) private document: Document,\r\n    private renderer: Renderer2,\r\n    private cdr: ChangeDetectorRef,\r\n    private template: TemplateRef<any>,\r\n    private elementsLoaderService: LazyElementsLoaderService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.elementsLoaderService\r\n      .loadElement(this.url)\r\n      .then(() => {\r\n        this.vcr.clear();\r\n        const originalCreateElement = this.renderer.createElement;\r\n        this.renderer.createElement = (name: string, namespace: string) => { // temporary override \r\n          if (name === 'ax-lazy-element') {\r\n            name = this.tag;\r\n          }\r\n          return this.document.createElement(name);\r\n        };\r\n        this.vcr.createEmbeddedView(this.template);\r\n        this.renderer.createElement = originalCreateElement;\r\n        this.cdr.markForCheck();\r\n      })\r\n  }\r\n}\r\n```\r\n \r\n\r\n\r\n### Describe the solution you'd like\r\nProbably being able to easily extend default renderer and being able to register it like we're used to with interceptors or control value accessors.\r\n\r\nI would like to give people option (or do it for them behind the scenes) to do\r\n```typescript\r\n@NgModule({\r\n   import: [LazyElementsModule],\r\n  providers: [{ provide: Renderer, useClass: LazyElementsRenderer }]\r\n})\r\nexport class AppModule {}\r\n\r\nexport class LazyElementsRenderer  extends DefaultDomRenderer2  {\r\n  \r\n constructor(...args) {\r\n     this.super(...args);\r\n  }\r\n\r\n  createElement() {\r\n      // override logic and change tag name if necessary\r\n  }\r\n}\r\n```\r\n\r\n\r\n### Describe alternatives you've considered\r\nI spent quite some time trying to override tag inside of template function without success \r\n","Url":"https://github.com/angular/angular/issues/35328","RelatedDescription":"Open issue \"Support for dynamic Angular Elements / Webcomponents (with Renderers)\" (#35328)"},{"Id":"563404968","IsPullRequest":false,"CreatedAt":"2020-02-10T18:52:37","Actor":"tadzik","Number":"35342","RawContent":null,"Title":"Can't attach a matTooltip to mat-expansion-panel-header since 9.0.0","State":"open","Body":"#### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Clone and run https://github.com/tadzik/angular-material-bug\r\n2. Observe the browser console\r\n\r\nAlternatively: try to attach a `matTooltip` to a `mat-expansion-panel-header`, as you could in angular/material 8.\r\n \r\n#### Expected Behavior\r\n\r\nEverything works as expected without exceptions thrown.\r\n\r\n#### Actual Behavior\r\n\r\nComponent (?) crashes:\r\n\r\n```\r\nERROR TypeError: \"renderer is undefined\"\r\n    Angular 8\r\n        isProceduralRenderer\r\n        listenerInternal\r\n        componentHostSyntheticListener\r\n        MatExpansionPanelHeader_HostBindings\r\n        invokeHostBindingsInCreationMode\r\n        invokeDirectivesHostBindings\r\n        createDirectivesInstances\r\n        elementStart\r\n    AppComponent_Template app.component.html:2\r\n    Angular 20\r\ncore.js:5828:19\r\n```\r\n\r\nRemoving the `matTooltip` on `mat-expansion-panel-header` fixes the issue – but removes the tooltip too :)\r\n\r\n#### Environment\r\n\r\n- Angular: 9\r\n- CDK/Material: 9\r\n- Browser(s): Firefox\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Ubuntu\r\n","Url":"https://github.com/angular/angular/issues/35342","RelatedDescription":"Open issue \"Can't attach a matTooltip to mat-expansion-panel-header since 9.0.0\" (#35342)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"563755194","IsPullRequest":false,"CreatedAt":"2020-02-12T05:02:52","Actor":"akmalnawfer","Number":"16944","RawContent":null,"Title":"\"ng new\" throws an error while installing dependencies,  dependency \"error-ex\" not found ","State":"open","Body":"I installed angular 9 cli, my node.js is on latest version. While I try to create a new angular project im getting the following error.\r\n\r\n/ Installing packages...npm WARN deprecated request@2.88.2: request has been deprecated, see https://github.com/request/request/issues/3142\r\nnpm ERR! code E404\r\nnpm ERR! 404 Not Found - GET https://registry.npmjs.org/error-ex\r\nnpm ERR! 404\r\nnpm ERR! 404  'error-ex@^1.3.1' is not in the npm registry.\r\nnpm ERR! 404 You should bug the author to publish it (or use the name yourself!)\r\nnpm ERR! 404 It was specified as a dependency of 'parse-json'\r\nnpm ERR! 404\r\nnpm ERR! 404 Note that you can also install from a\r\nnpm ERR! 404 tarball, folder, http url, or git url.\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     C:\\Users\\user\\AppData\\Roaming\\npm-cache\\_logs\\2020-02-12T04_52_40_200Z-debug.log\r\n× Package install failed, see above.\r\nThe Schematic workflow failed. See above.","Url":"https://github.com/angular/angular-cli/issues/16944","RelatedDescription":"Open issue \"\"ng new\" throws an error while installing dependencies,  dependency \"error-ex\" not found \" (#16944)"},{"Id":"563499162","IsPullRequest":false,"CreatedAt":"2020-02-11T21:47:02","Actor":"jaska45","Number":"16943","RawContent":null,"Title":"Add ng xi18n support for source code strings","State":"open","Body":"# 🚀 Feature request\r\n\r\nng xi18n should also extract strings from the source code files.\r\n\r\n### Command (mark with an `x`)\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [x] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Description\r\nCurrently xi18n extracts strings only from templates, not from .ts file. Starting from Angular 9 you can now localize source code string using $localize. However without the extraction support this feature is pretty useless.\r\n\r\n### Describe the solution you'd like\r\nWhen I run ng xi18n, it should extract strings from templates and .ts files.","Url":"https://github.com/angular/angular-cli/issues/16943","RelatedDescription":"Open issue \"Add ng xi18n support for source code strings\" (#16943)"},{"Id":"563437481","IsPullRequest":true,"CreatedAt":"2020-02-11T19:51:11","Actor":"alan-agius4","Number":"16942","RawContent":null,"Title":"fix(@schematics/angular) remove file extension from zone flags comment","State":"open","Body":"","Url":"https://github.com/angular/angular-cli/pull/16942","RelatedDescription":"Open PR \"fix(@schematics/angular) remove file extension from zone flags comment\" (#16942)"},{"Id":"563428885","IsPullRequest":false,"CreatedAt":"2020-02-11T19:34:47","Actor":"fluggo","Number":"16941","RawContent":null,"Title":"Angular 8 & 9: ng test loads rxjs twice with different sources","State":"open","Body":"# 🐞 Bug report\r\n\r\nThis is a bug I've tested in version 8 and version 9 with the way `ng test` bundles rxjs.\r\n\r\n### Command (mark with an `x`)\r\n\r\n- [x] test\r\n\r\n### Is this a regression?\r\n\r\nDon't know.\r\n\r\n### Description\r\n\r\nThis is based on [jasmine-marbles#44](https://github.com/synapse-wireless-labs/jasmine-marbles/issues/44). The toHaveSubscriptions function fails because it tries to compare two arrays containing SubscriptionLog objects, but these types have been imported from two different files:\r\n\r\n* `node_modules/rxjs/internal/testing/SubscriptionLog.js`\r\n* `node_modules/rxjs/_esm2015/internal/testing/SubscriptionLog.js`\r\n\r\nAs such, they don't compare equal, and that particular testing function is useless.\r\n\r\nBased on what little I've read, this has to do with the way the build optimizer selects its sources.\r\n\r\n## 🔬 Minimal Reproduction\r\nWith jasmine-marbles installed, use this test file:\r\n\r\n```typescript\r\nimport { cold } from 'jasmine-marbles';\r\nimport * as rxjs from 'rxjs';\r\nimport * as rxop from 'rxjs/operators';\r\n\r\ndescribe('sample', () => {\r\n  fit('demonstrates a problem with build-angular', () => {\r\n    const source = cold(      'a|', { a: { version: '20200203.0' } });\r\n    const HTTP_SUBS =         '^!';\r\n    const expected = cold(    'b|', { b: '20200203.0' });\r\n\r\n    const observable = source.pipe(\r\n      rxop.tap(t => console.log(t)),\r\n      rxop.map(v => v.version));\r\n\r\n    expect(observable).toBeObservable(expected);\r\n    expect(source).toHaveSubscriptions(HTTP_SUBS);\r\n  });\r\n});\r\n\r\n```\r\n\r\n## 🔥 Exception or Error\r\nJasmine reports:\r\n\r\n```\r\nError: Expected $[0] to be a kind of SubscriptionLog, but was SubscriptionLog({ subscribedFrame: 0, unsubscribedFrame: 10 }).\r\n    at <Jasmine>\r\n    at compare (http://localhost:9876/_karma_webpack_/node_modules/jasmine-marbles/es6/index.js:47:1)\r\n    at <Jasmine>\r\n```\r\n\r\n\r\n## 🌍 Your Environment\r\n\r\n```\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 8.1.3\r\nNode: 10.16.0\r\nOS: darwin x64\r\nAngular: 8.1.3\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.801.3\r\n@angular-devkit/build-angular     0.801.3\r\n@angular-devkit/build-optimizer   0.801.3\r\n@angular-devkit/build-webpack     0.801.3\r\n@angular-devkit/core              8.1.3\r\n@angular-devkit/schematics        8.1.3\r\n@angular/cdk                      8.2.3\r\n@angular/material                 8.2.3\r\n@ngtools/webpack                  8.1.3\r\n@schematics/angular               8.1.3\r\n@schematics/update                0.801.3\r\nrxjs                              6.4.0\r\ntypescript                        3.4.5\r\nwebpack                           4.35.2\r\n```\r\n\r\nI've also tested it with:\r\n\r\n```\r\nAngular CLI: 9.0.1\r\nNode: 10.16.0\r\nOS: darwin x64\r\n\r\nAngular: 9.0.0\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.1\r\n@angular-devkit/build-angular     0.900.1\r\n@angular-devkit/build-optimizer   0.900.1\r\n@angular-devkit/build-webpack     0.900.1\r\n@angular-devkit/core              9.0.1\r\n@angular-devkit/schematics        9.0.1\r\n@angular/cdk                      8.2.3\r\n@angular/cli                      9.0.1\r\n@angular/material                 8.2.3\r\n@ngtools/webpack                  9.0.1\r\n@schematics/angular               9.0.1\r\n@schematics/update                0.900.1\r\nrxjs                              6.5.4\r\ntypescript                        3.7.5\r\nwebpack                           4.41.2\r\n```","Url":"https://github.com/angular/angular-cli/issues/16941","RelatedDescription":"Open issue \"Angular 8 & 9: ng test loads rxjs twice with different sources\" (#16941)"},{"Id":"563406006","IsPullRequest":false,"CreatedAt":"2020-02-11T18:51:46","Actor":"fcrwx","Number":"16940","RawContent":null,"Title":"logger.info() messages should not be sent to stderr","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️Yes, the previous version in which this bug was not present was: ....-->\r\nNo\r\n\r\n### Description\r\n\r\n<!-- ✍️ A clear and concise description of the problem...-->\r\nlogger.info() statements from ngcc are sent to stderr causing the informational messages to be displayed (in red) as ERRORs under a maven build. Please see the rejected PR at https://github.com/angular/angular/pull/35310 which documents the incorrect behavior. The ngcc team believes this should be fixed in the cli.\r\n\r\n## 🔬 Minimal Reproduction\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue. \r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem. \r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\nIn maven's pom.xml:\r\n<pre><code>\r\n  ...\r\n  &lt;execution>\r\n    &lt;id>npm angular build&lt;/id>\r\n      &lt;goals>\r\n        &lt;goal>npm&lt;/goal>\r\n      &lt;/goals>\r\n      &lt;configuration>\r\n        &lt;arguments>run build-dev&lt;/arguments>\r\n      &lt;/configuration>\r\n  &lt;/execution>\r\n  ...\r\n\r\n</code></pre>\r\n\r\nIn package.json:\r\n<pre><code>\r\n    \"scripts\": {\r\n        ...\r\n        \"build-dev\": \"ng build\",\r\n        ...\r\n    },\r\n</code></pre>\r\n\r\n## 🔥 Exception or Error\r\nOutput from maven build:\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ✍️-->\r\n<pre><code>\r\n[INFO] > ng build\r\n[INFO]\r\n[ERROR]\r\n[ERROR] Compiling @angular/core : module as esm5\r\n[ERROR]\r\n[ERROR] Compiling @angular/common : module as esm5\r\n[ERROR]\r\n[ERROR] Compiling @angular/platform-browser : module as esm5\r\n[ERROR]\r\n[ERROR] Compiling @angular/platform-browser-dynamic : module as esm5\r\n[ERROR]\r\n...\r\n</code></pre>\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\nAngular CLI: 9.0.1\r\nNode: 12.13.1\r\nOS: darwin x64\r\n\r\nAngular: 9.0.0\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, material, platform-browser\r\n... platform-browser-dynamic, router, upgrade\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.1\r\n@angular-devkit/build-angular     0.900.1\r\n@angular-devkit/build-optimizer   0.900.1\r\n@angular-devkit/build-webpack     0.900.1\r\n@angular-devkit/core              9.0.1\r\n@angular-devkit/schematics        9.0.1\r\n@angular/cli                      9.0.1\r\n@angular/flex-layout              9.0.0-beta.29\r\n@ngtools/webpack                  9.0.1\r\n@schematics/angular               9.0.1\r\n@schematics/update                0.900.1\r\nrxjs                              6.5.4\r\ntypescript                        3.7.5\r\nwebpack                           4.41.2\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/16940","RelatedDescription":"Open issue \"logger.info() messages should not be sent to stderr\" (#16940)"},{"Id":"563398002","IsPullRequest":true,"CreatedAt":"2020-02-11T18:35:32","Actor":"alan-agius4","Number":"16939","RawContent":null,"Title":"fix(@schematics/angular): add include to type definitions in tsconfig","State":"open","Body":"Fixes #16923","Url":"https://github.com/angular/angular-cli/pull/16939","RelatedDescription":"Open PR \"fix(@schematics/angular): add include to type definitions in tsconfig\" (#16939)"},{"Id":"562636956","IsPullRequest":false,"CreatedAt":"2020-02-11T18:00:06","Actor":"kmaraz","Number":"16919","RawContent":null,"Title":"Live reloading doen't work properly with AngularCompilerPlugin since version 9","State":"closed","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\nI use custom webpack configuration (I have migrated from AngularJs a two months ago).\r\n\r\n### Is this a regression?\r\nYes, the previous version in which this bug was not present was: 8.3.25\r\n\r\n### Description\r\nLive reloading does not work in nested files. I am providing repository where it can be simulated and I will provide step by step reproduction belov.\r\n\r\n## 🔬 Minimal Reproduction\r\nPlease clone: https://github.com/kmaraz/hmr-repro\r\n\r\nRun command:\r\n```\r\nnode ./node_modules/webpack-dev-server/bin/webpack-dev-server.js --config webpack.config.js --progress --colors --mode=development\r\n```\r\n\r\nThen:\r\nWhen you edit files `index.ts` or `test.ts` - live reloading works,\r\nbut when you edit file `test2.ts` changes are not registered and live reloading does not work.\r\n\r\nAnd that's it. I have much larger application than this and I have reduced the problem to just 3 files.\r\n","Url":"https://github.com/angular/angular-cli/issues/16919","RelatedDescription":"Closed issue \"Live reloading doen't work properly with AngularCompilerPlugin since version 9\" (#16919)"},{"Id":"563082299","IsPullRequest":false,"CreatedAt":"2020-02-11T17:49:33","Actor":"JandroMejia97","Number":"16929","RawContent":null,"Title":"Module build failed (from ./node_modules/@ngtools/webpack/src/index.js)","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\n<!-- ✍️edit: --> The issue is caused by package @ngtools/webpack\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> No.\r\n\r\n\r\n### Description\r\n\r\n<!-- ✍️--> A clear and concise description of the problem...\r\nAfter updating angular version 8 to 9, when I try to execute the commands `ionic serve` or` ng serve` I get the compilation error.\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>\r\n[ng] ERROR in ./src/zone-flags.ts\r\n[ng] Module build failed (from ./node_modules/@ngtools/webpack/src/index.js):\r\n[ng] Error: /home/mejia97/Documentos/CTM/ctm-front/src/zone-flags.ts is missing from the TypeScript compilation. Please make sure it is in your tsconfig via the 'files' or 'include' property.\r\n[ng]     at AngularCompilerPlugin.getCompiledFile (/home/mejia97/Documentos/CTM/ctm-front/node_modules/@ngtools/webpack/src/angular_compiler_plugin.js:909:23)\r\n[ng]     at /home/mejia97/Documentos/CTM/ctm-front/node_modules/@ngtools/webpack/src/loader.js:41:31\r\n[ng]     at runMicrotasks (<anonymous>)\r\n[ng]     at processTicksAndRejections (internal/process/task_queues.js:97:5)\r\n</code></pre>\r\n\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 9.0.1\r\nNode: 13.7.0\r\nOS: linux x64\r\n\r\nAngular: 9.0.0\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, material, platform-browser\r\n... platform-browser-dynamic, router, service-worker\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.1\r\n@angular-devkit/build-angular     0.900.1\r\n@angular-devkit/build-optimizer   0.900.1\r\n@angular-devkit/build-webpack     0.900.1\r\n@angular-devkit/core              9.0.1\r\n@angular-devkit/schematics        9.0.1\r\n@angular/cli                      9.0.1\r\n@angular/fire                     5.4.2\r\n@ngtools/webpack                  9.0.1\r\n@schematics/angular               8.1.3\r\n@schematics/update                0.900.1\r\nrxjs                              6.5.4\r\ntypescript                        3.7.5\r\nwebpack                           4.41.2\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/16929","RelatedDescription":"Closed issue \"Module build failed (from ./node_modules/@ngtools/webpack/src/index.js)\" (#16929)"},{"Id":"563345836","IsPullRequest":true,"CreatedAt":"2020-02-11T17:00:48","Actor":"clydin","Number":"16938","RawContent":null,"Title":"fix(@angular-devkit/build-angular): provide explicit return type for extract-i18n builder","State":"open","Body":"Fixes: #16934","Url":"https://github.com/angular/angular-cli/pull/16938","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): provide explicit return type for extract-i18n builder\" (#16938)"},{"Id":"562928298","IsPullRequest":true,"CreatedAt":"2020-02-11T16:46:59","Actor":"clydin","Number":"16924","RawContent":null,"Title":"fix(@schematics/angular): migrate spec and styleext schematic options","State":"closed","Body":"Fixes: #16857","Url":"https://github.com/angular/angular-cli/pull/16924","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): migrate spec and styleext schematic options\" (#16924)"},{"Id":"562942179","IsPullRequest":true,"CreatedAt":"2020-02-11T16:46:42","Actor":"clydin","Number":"16925","RawContent":null,"Title":"fix(@angular-devkit/build-angular): only remove localize polyfill if in AOT mode","State":"closed","Body":"Fixes: #16890","Url":"https://github.com/angular/angular-cli/pull/16925","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): only remove localize polyfill if in AOT mode\" (#16925)"},{"Id":"563040375","IsPullRequest":true,"CreatedAt":"2020-02-11T16:46:20","Actor":"RiccardoBracci","Number":"16926","RawContent":null,"Title":"fix(@angular/cli): typo in error message","State":"closed","Body":"This change resolves the error in the console if the nodejs version is not supported showing the actual version instead of \"undefined\".\r\n\r\n> Node.js version *undefined* detected.\r\n> The Angular CLI requires a minimum Node.js version of either v10.13 or v12.0.","Url":"https://github.com/angular/angular-cli/pull/16926","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): typo in error message\" (#16926)"},{"Id":"563295980","IsPullRequest":true,"CreatedAt":"2020-02-11T16:45:38","Actor":"clydin","Number":"16936","RawContent":null,"Title":"fix(@angular/cli): expand locale pattern in workspace schema","State":"closed","Body":"Fixes: #16935","Url":"https://github.com/angular/angular-cli/pull/16936","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): expand locale pattern in workspace schema\" (#16936)"},{"Id":"563259721","IsPullRequest":false,"CreatedAt":"2020-02-11T16:45:38","Actor":"javiermarinros","Number":"16935","RawContent":null,"Title":"Invalid workspace config when sourceLocale is es-419","State":"closed","Body":"When `sourceLocale` is set to \"[es-419](https://github.com/angular/angular/blob/master/packages/common/locales/es-419.ts)\", the following error is thrown:\r\n\r\nAn unhandled exception occurred: Workspace config file cannot be loaded: \r\nangular.json\r\nSchema validation failed with the following errors:\r\n  Data path \".projects[''].i18n.sourceLocale\" should match pattern \"^[a-z]{2}(-[a-zA-Z]{2,})?$\".\r\n  Data path \".projects[''].i18n.sourceLocale\" should be object.\r\n  Data path \".projects[''].i18n.sourceLocale\" should match exactly one schema in oneOf.\r\n\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/16935","RelatedDescription":"Closed issue \"Invalid workspace config when sourceLocale is es-419\" (#16935)"},{"Id":"563111092","IsPullRequest":true,"CreatedAt":"2020-02-11T16:43:47","Actor":"renovate[bot]","Number":"16930","RawContent":null,"Title":"build: update webpack to version 4.41.6","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [webpack](https://togithub.com/webpack/webpack) | devDependencies | patch | [`4.41.5` -> `4.41.6`](https://renovatebot.com/diffs/npm/webpack/4.41.5/4.41.6) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>webpack/webpack</summary>\n\n### [`v4.41.6`](https://togithub.com/webpack/webpack/releases/v4.41.6)\n\n[Compare Source](https://togithub.com/webpack/webpack/compare/v4.41.5...v4.41.6)\n\n### Bugfixes\n\n-   Windows network paths are considered as absolute paths\n-   fix hanging of FlagDependencyExportsPlugin when using `export *` in a circular matter\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or if you tick the rebase/retry checkbox below.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/16930","RelatedDescription":"Closed or merged PR \"build: update webpack to version 4.41.6\" (#16930)"},{"Id":"563111230","IsPullRequest":true,"CreatedAt":"2020-02-11T16:43:33","Actor":"renovate[bot]","Number":"16931","RawContent":null,"Title":"build: update webpack to version 4.41.6","State":"closed","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [webpack](https://togithub.com/webpack/webpack) | dependencies | patch | [`4.41.5` -> `4.41.6`](https://renovatebot.com/diffs/npm/webpack/4.41.5/4.41.6) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>webpack/webpack</summary>\n\n### [`v4.41.6`](https://togithub.com/webpack/webpack/releases/v4.41.6)\n\n[Compare Source](https://togithub.com/webpack/webpack/compare/v4.41.5...v4.41.6)\n\n### Bugfixes\n\n-   Windows network paths are considered as absolute paths\n-   fix hanging of FlagDependencyExportsPlugin when using `export *` in a circular matter\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or if you tick the rebase/retry checkbox below.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/16931","RelatedDescription":"Closed or merged PR \"build: update webpack to version 4.41.6\" (#16931)"},{"Id":"563310258","IsPullRequest":true,"CreatedAt":"2020-02-11T16:06:41","Actor":"clydin","Number":"16937","RawContent":null,"Title":"fix(@angular-devkit/build-angular): generate correct filenames when targeting ESNext","State":"open","Body":"Fixes: #16906","Url":"https://github.com/angular/angular-cli/pull/16937","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): generate correct filenames when targeting ESNext\" (#16937)"},{"Id":"563060738","IsPullRequest":true,"CreatedAt":"2020-02-11T13:51:13","Actor":"sunghat","Number":"16928","RawContent":null,"Title":"https://www.mol.gov.sa/ciw/Services.aspx","State":"closed","Body":"https://www.mol.gov.sa/ciw/Services.aspx","Url":"https://github.com/angular/angular-cli/pull/16928","RelatedDescription":"Closed or merged PR \"https://www.mol.gov.sa/ciw/Services.aspx\" (#16928)"},{"Id":"563195684","IsPullRequest":false,"CreatedAt":"2020-02-11T13:08:56","Actor":"yowari","Number":"16934","RawContent":null,"Title":"Cannot build custom builder that extends the build-angular with v9","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\nHello everyone!\r\n\r\nThis is my first Angular contribution, sorry in advance for any missing details 😄\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\nYes, the previous version in which this bug was not present was: 8.3.24\r\n\r\n### Description\r\n\r\nWhen trying to build a custom Angular builder, an error occurs telling there is an incorrect import `import(\"../../../build_webpack/src\")` in `node_modules/@angular-devkit/build-angular/src/extract-i18n/index.d.ts:12:110`.\r\n\r\nI believe this can be fixed if the `execute` function explicitly defines the return type (https://github.com/angular/angular-cli/blob/master/packages/angular_devkit/build_angular/src/extract-i18n/index.ts#L54), similar error happens to me sometimes when building my Angular library,\r\n\r\nOf course, going to the `index.d.ts` file in the `node_modules` and correct import with `import(\"@angular-devkit/build-webpack\")` works.\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nhttps://github.com/yowari/custom-builder-error\r\n\r\n```\r\nnpm install\r\nnpm run build\r\n```\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>../../node_modules/@angular-devkit/build-angular/src/extract-i18n/index.d.ts:12:110 - error TS2307: Cannot find module '../../../build_webpack/src'.\r\n\r\n12 export declare function execute(options: ExtractI18nBuilderOptions, context: BuilderContext): Promise&lt;import(\"../../../build_webpack/src\").BuildResult&gt;;\r\n</code></pre>\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/16934","RelatedDescription":"Open issue \"Cannot build custom builder that extends the build-angular with v9\" (#16934)"},{"Id":"563053010","IsPullRequest":false,"CreatedAt":"2020-02-11T12:04:15","Actor":"PhuQuy","Number":"16927","RawContent":null,"Title":"@HostListener('window:scroll', ['$event']) not work anymore","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\n@HostListener('window:scroll', ['$event']) doesn't work on version 9.0.0\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: ....\r\n\r\n\r\n### Description\r\n\r\n<!-- ✍️--> A clear and concise description of the problem...\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue. \r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem. \r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ✍️-->\r\n\r\n</code></pre>\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/16927","RelatedDescription":"Closed issue \"@HostListener('window:scroll', ['$event']) not work anymore\" (#16927)"},{"Id":"562857460","IsPullRequest":false,"CreatedAt":"2020-02-10T22:06:47","Actor":"johnpapa","Number":"16923","RawContent":null,"Title":"ng update should detect typings files and added it to the appropriate tsconfig file","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🚀 Feature request\r\n\r\nI have a typings.d.ts file that no longer is included in the compilation/build. I was getting errors about not being able to find my ambient types that were in that files. I noticed the tsconfig.app.json was updated to only compile the main.ts and the polyfills. Once I added the typings.d.ts explictly, it worked.\r\n\r\nYes, it's likely not a common scenario. But It might be good to include this scenario in the `ng update` process to v9. \r\n\r\nIt would be nice if the ng update process noticed if there was a typings file and added it to the config.\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are relevant for this feature request? -->\r\n<!-- ✍️edit: -->\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [x] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n","Url":"https://github.com/angular/angular-cli/issues/16923","RelatedDescription":"Open issue \"ng update should detect typings files and added it to the appropriate tsconfig file\" (#16923)"},{"Id":"562791010","IsPullRequest":false,"CreatedAt":"2020-02-10T19:56:16","Actor":"cyrilletuzi","Number":"16922","RawContent":null,"Title":"PWA failing with v9 i18n because of absolute paths in manifest.webmanifest","State":"open","Body":"# 🐞 Bug report\r\n\r\n### Command\r\n\r\n- [x] build\r\n- [x] xi18n\r\n\r\n### Is this a regression?\r\n\r\nNo, the issue seems to be there from a long time.\r\n\r\n### Description\r\n\r\nCurrently, the `manifest.webmanifest` generated with `ng add @angular/pwa` references absolute paths for `scope` and `start_url`.\r\n\r\nIt will work fine if the app is deployed in the root directory (ie. with `<base href=\"/\">`).\r\n\r\nBut it will fails if the app is deployed in a subdirectory (ie. with `<base href=\"/en/\">`), as absolute paths won't take base href into account.\r\n\r\nSuch base hrefs are the default scenario when using the new v9 `--localize` option (CLI will set a different base href for each locale), meaning PWA and v9 i18n don't work out of the box.\r\n\r\nAs paths in `manifest.webmanifest` are part of the `dist` build, ie. from the files impacted by base href, these paths should be relative and not absolute.\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n- create an app with v9, with translations\r\n- ng add @angular/pwa\r\n- ng build --prod --localize\r\n- deploy the app\r\n- do a Lighthouse audit in Chrome: PWA checks will fail, saying service worker can't be registered as it's out of scope\r\n\r\n## 🔥 Exception or Error\r\n\r\nThe service worker won't cache the app files.\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\nAngular CLI: 9.0.1\r\nNode: 12.14.1\r\nOS: darwin x64\r\n\r\nAngular: 9.0.0\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, material, platform-browser\r\n... platform-browser-dynamic, router, service-worker\r\nIvy Workspace: Yes\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.900.1\r\n@angular-devkit/build-angular      0.900.1\r\n@angular-devkit/build-ng-packagr   0.900.1\r\n@angular-devkit/build-optimizer    0.900.1\r\n@angular-devkit/build-webpack      0.900.1\r\n@angular-devkit/core               9.0.1\r\n@angular-devkit/schematics         9.0.1\r\n@angular/cli                       9.0.1\r\n@ngtools/webpack                   9.0.1\r\n@schematics/angular                9.0.1\r\n@schematics/update                 0.900.1\r\nng-packagr                         9.0.0\r\nrxjs                               6.5.4\r\ntypescript                         3.7.5\r\nwebpack                            4.41.2\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n2 fixes possible for `scope` and `start_url`:\r\n- easy: use a relative path `./`\r\n- safer but more complicated: add base href\r\n\r\nSimilar to #16390 ","Url":"https://github.com/angular/angular-cli/issues/16922","RelatedDescription":"Open issue \"PWA failing with v9 i18n because of absolute paths in manifest.webmanifest\" (#16922)"},{"Id":"562592480","IsPullRequest":false,"CreatedAt":"2020-02-10T14:20:36","Actor":"saithis","Number":"16918","RawContent":null,"Title":"tree shaking regression with angular 9","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: \r\n@angular/cli 8.3.25 with angular 8.2.14\r\n\r\n\r\n### Description\r\n\r\n<!-- ✍️-->\r\nWe have multiple components that are all imported via a single barrel file, but not all apps use all components. One of the components uses ng2-charts, but it is only used in one app. \r\n\r\nWith angular 8 the component and its dependencies (chart.js, etc.) get tree shaked away. \r\n\r\nWith angular 9 the component with all its dependencies is included in all apps.\r\n\r\n## 🔬 Minimal Reproduction\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue. \r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem. \r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\ncheckout https://github.com/saithis/ng9-treeshaking-repo\r\nnpm install \r\nnpm run build\r\nnpm run stats\r\n\r\nif you want to compare to the angular 8 behaviour, checkout commit 5144d883a682aa3fea1776fd3d1f5aa4888a433f \r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\nAngular CLI: 9.0.1\r\nNode: 13.8.0\r\nOS: win32 x64\r\n\r\nAngular: 9.0.0\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.900.1\r\n@angular-devkit/build-angular      0.900.1\r\n@angular-devkit/build-ng-packagr   0.900.1\r\n@angular-devkit/build-optimizer    0.900.1\r\n@angular-devkit/build-webpack      0.900.1\r\n@angular-devkit/core               9.0.1\r\n@angular-devkit/schematics         9.0.1\r\n@angular/cli                       9.0.1\r\n@ngtools/webpack                   9.0.1\r\n@schematics/angular                9.0.1\r\n@schematics/update                 0.900.1\r\nng-packagr                         9.0.0\r\nrxjs                               6.5.4\r\ntypescript                         3.7.5\r\nwebpack                            4.41.2\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/16918","RelatedDescription":"Open issue \"tree shaking regression with angular 9\" (#16918)"},{"Id":"562519949","IsPullRequest":false,"CreatedAt":"2020-02-10T13:13:31","Actor":"sfabriece","Number":"16913","RawContent":null,"Title":"The update schematic for version 9 should remove entryComponents.","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🚀 Feature request\r\n\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are relevant for this feature request? -->\r\n<!-- ✍️edit: -->\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [X] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Description\r\n<!-- ✍️--> A clear and concise description of the problem or missing capability...\r\n\r\nAccording to update instructions, entryComponents are no longer needed for IVY.\r\n### Describe the solution you'd like\r\n<!-- ✍️--> If you have a solution in mind, please describe it.\r\nAdd a schematic to remove entryComponents in existing codebases.\r\n\r\n### Describe alternatives you've considered\r\n<!-- ✍️--> Have you considered any alternative solutions or workarounds?\r\n\r\nDoing it manually\r\n","Url":"https://github.com/angular/angular-cli/issues/16913","RelatedDescription":"Closed issue \"The update schematic for version 9 should remove entryComponents.\" (#16913)"},{"Id":"562473226","IsPullRequest":false,"CreatedAt":"2020-02-10T13:06:54","Actor":"div-wynk","Number":"16908","RawContent":null,"Title":"Node PrefixUnaryExpression was unexpected","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [x] build\r\n- [x] serve\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: 6\r\n\r\n\r\n### Description\r\n\r\n<!-- ✍️--> A clear and concise description of the problem...\r\nwhile upgrading angular from 6 to 7 error during build. error shows in typescript.js\r\n\r\n## 🔬 Minimal Reproduction\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nnpm run build\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue. \r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem. \r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ✍️-->\r\n\r\nERROR in : Error: Debug Failure. Unexpected node.\r\nNode PrefixUnaryExpression was unexpected.\r\n    at serializeTypeNode (/Users/b0212234/Desktop/wynk-music-desktop/node_modules/typescript/lib/typescript.js:67332:45)\r\n    at serializeTypeOfNode (/Users/b0212234/Desktop/wynk-music-desktop/node_modules/typescript/lib/typescript.js:67212:28)\r\n    at addOldTypeMetadata (/Users/b0212234/Desktop/wynk-music-desktop/node_modules/typescript/lib/typescript.js:67128:92)\r\n    at addTypeMetadata (/Users/b0212234/Desktop/wynk-music-desktop/node_modules/typescript/lib/typescript.js:67122:17)\r\n    at transformAllDecoratorsOfDeclaration (/Users/b0212234/Desktop/wynk-music-desktop/node_modules/typescript/lib/typescript.js:66957:13)\r\n    at generateClassElementDecorationExpression (/Users/b0212234/Desktop/wynk-music-desktop/node_modules/typescript/lib/typescript.js:67004:40)\r\n    at generateClassElementDecorationExpressions (/Users/b0212234/Desktop/wynk-music-desktop/node_modules/typescript/lib/typescript.js:66984:34)\r\n    at addClassElementDecorationStatements (/Users/b0212234/Desktop/wynk-music-desktop/node_modules/typescript/lib/typescript.js:66969:44)\r\n    at visitClassDeclaration (/Users/b0212234/Desktop/wynk-music-desktop/node_modules/typescript/lib/typescript.js:66279:13)\r\n    at visitTypeScript (/Users/b0212234/Desktop/wynk-music-desktop/node_modules/typescript/lib/typescript.js:66110:28)\r\n    at visitorWorker (/Users/b0212234/Desktop/wynk-music-desktop/node_modules/typescript/lib/typescript.js:65894:24)\r\n    at sourceElementVisitorWorker (/Users/b0212234/Desktop/wynk-music-desktop/node_modules/typescript/lib/typescript.js:65923:28)\r\n    at saveStateAndInvoke (/Users/b0212234/Desktop/wynk-music-desktop/node_modules/typescript/lib/typescript.js:65832:27)\r\n    at sourceElementVisitor (/Users/b0212234/Desktop/wynk-music-desktop/node_modules/typescript/lib/typescript.js:65908:20)\r\n    at visitNodes (/Users/b0212234/Desktop/wynk-music-desktop/node_modules/typescript/lib/typescript.js:63441:48)\r\n    at Object.visitLexicalEnvironment (/Users/b0212234/Desktop/wynk-music-desktop/node_modules/typescript/lib/typescript.js:63474:22)\r\n\r\n</code></pre>\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n\r\nAngular CLI: 7.3.9\r\nNode: 10.16.0\r\nOS: darwin x64\r\nAngular: 7.2.16\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... http, language-service, platform-browser\r\n... platform-browser-dynamic, platform-server, router\r\n... service-worker, upgrade\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.13.9\r\n@angular-devkit/build-angular     0.13.9\r\n@angular-devkit/build-optimizer   0.801.3\r\n@angular-devkit/build-webpack     0.13.9\r\n@angular-devkit/core              7.3.9\r\n@angular-devkit/schematics        7.3.9\r\n@angular/cli                      7.3.9\r\n@angular/pwa                      0.6.8\r\n@ngtools/webpack                  7.3.9\r\n@schematics/angular               7.3.9\r\n@schematics/update                0.13.9\r\nrxjs                              6.5.4\r\ntypescript                        3.2.4\r\nwebpack                           4.29.0\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/16908","RelatedDescription":"Closed issue \"Node PrefixUnaryExpression was unexpected\" (#16908)"},{"Id":"562539701","IsPullRequest":false,"CreatedAt":"2020-02-10T13:02:43","Actor":"SansDK","Number":"16916","RawContent":null,"Title":"[9.0.1] ng build file replacements don't work after update to v9","State":"closed","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> \r\nYes, the previous version in which this bug was not present was the latest angular-cli v8 release (v8.3.25)\r\n\r\n\r\n### Description\r\n\r\n<!-- ✍️-->I have a `config.js` file which has some settings in it, and it should be replaced by a production `config.js` when performing a production build.\r\nThis worked fine, until I upgraded to angular-cli v9. I don't get errors or warnings, but the `config.js` in the dist folder after building is the non-prod version, while I would expect the prod version.\r\n\r\nIn my `angular.json` file, I have the following:\r\n```\r\n...\r\n\"configurations\": {\r\n  \"production\": {\r\n    \"fileReplacements\": [\r\n      {\r\n        \"replace\": \"src/config.js\",\r\n        \"with\": \"src/prod/config.js\"\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nThe command `ng build --prod` doesn't cause the file to be replaced, and neither does `ng build --configuration=production`.\r\n\r\n## 🔬 Minimal Reproduction\r\n1. Create a new project with the latest Angular v8 & Angular CLI v8 release.\r\n2. Add the file replacement config & files like above.\r\n3. Run `ng build --prod`. File replacement works now.\r\n4. Update to Angular & Angular CLI 9 (run `ng update @angular/core @angular/cli`)\r\n5. Run `ng build --prod` again. The file doesn't get replaced anymore (original config.js will be present in the dist folder). ❌\r\n\r\n## 🌍 Your Environment\r\n<pre><code>Angular CLI: 9.0.1\r\nNode: 13.0.1\r\nOS: win32 x64\r\n\r\nAngular: 9.0.0\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, material, platform-browser\r\n... platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.1\r\n@angular-devkit/build-angular     0.900.1\r\n@angular-devkit/build-optimizer   0.900.1\r\n@angular-devkit/build-webpack     0.900.1\r\n@angular-devkit/core              9.0.1\r\n@angular-devkit/schematics        9.0.1\r\n@angular/cli                      9.0.1\r\n@ngtools/webpack                  9.0.1\r\n@schematics/angular               9.0.1\r\n@schematics/update                0.900.1\r\nrxjs                              6.5.4\r\ntypescript                        3.7.5\r\nwebpack                           4.41.2\r\n</code></pre>","Url":"https://github.com/angular/angular-cli/issues/16916","RelatedDescription":"Closed issue \"[9.0.1] ng build file replacements don't work after update to v9\" (#16916)"},{"Id":"562784099","IsPullRequest":false,"CreatedAt":"2020-02-10T12:49:03","Actor":"JonWallsten","Number":"16921","RawContent":null,"Title":"[IVY][9.0.0] Adding additional inputs in directive built by ng-packagr is not recognized by consuming app in watch mode","State":"open","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n- [x] build\r\n\r\n### Description\r\n\r\nWe are building a library with ng-packagr and then consuming it in our Angular 9 application.\r\nWhen I added a new input in my directive it wasn't recognized until after I stopped my build completely and started from scratch.\r\n\r\nAfter the first initial build, when in watch mode, I added the input `resizeElement`\r\n```\r\n@Directive({\r\n    selector: '[resizable]'\r\n})\r\nexport class ResizableDirective implements OnInit, OnDestroy {\r\n    @Input('resizable') containerSelector: string;\r\n    @Input('resizeElement') resizeElementSelector: string;\r\n    ...\r\n}\r\n```\r\n\r\nAfter the library was rebuilt by the watcher, and then the app was rebuilt, also by a watcher, the input was not recognized by the Angular compiler.\r\n\r\n## 🔬 Minimal Reproduction\r\nAs usual I can provide an example but it takes time. Let me know if it's needed.\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>\r\n | ERROR in packages\\web-app-edit\\src\\app\\components\\common\\condition-editor\\condition-editor.component.html:1:33 - error NG8002: Can't bind to 'resizeElement' since it isn't a known property of 'div'. |\r\n | 1 <div [resizable]=\"dialogRef.id\" [resizeElement]=\"resizeSelector\">\r\n |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n |\r\n |   packages\\web-app-edit\\src\\app\\components\\common\\condition-editor\\condition-editor.component.ts:6:18\r\n |     6     templateUrl: 'condition-editor.component.html',\r\n |                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n |     Error occurs in the template of component ConditionEditorComponent.\r\n |\r\n</code></pre>\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\nAngular CLI: 9.0.1\r\nNode: 12.14.0\r\nOS: win32 x64\r\n\r\nAngular: 9.0.0\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, platform-browser, platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.1\r\n@angular-devkit/build-optimizer   0.900.1\r\n@angular-devkit/core              9.0.1\r\n@angular-devkit/schematics        9.0.1\r\n@angular/cli                      9.0.1\r\n@angular/http                     8.0.0-beta.10\r\n@ngtools/webpack                  9.0.1\r\n@schematics/angular               9.0.1\r\n@schematics/update                0.900.1\r\nrxjs                              6.5.4\r\ntypescript                        3.7.5\r\nwebpack                           4.41.5\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/16921","RelatedDescription":"Open issue \"[IVY][9.0.0] Adding additional inputs in directive built by ng-packagr is not recognized by consuming app in watch mode\" (#16921)"},{"Id":"562783942","IsPullRequest":false,"CreatedAt":"2020-02-10T12:22:43","Actor":"JonWallsten","Number":"16920","RawContent":null,"Title":"[IVY][9.0.0] Renaming a directive in a consumed library built by ng-packagr causes error in Application when in watch mode","State":"open","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n- [x] build\r\n\r\n### Description\r\n\r\nWe are building a library with ng-packagr and then consuming it in our Angular 9 application.\r\nWhen I renamed one of the exported directives used by the application I get an error causing rendering to skip the rest of the page.\r\n\r\n![image](https://user-images.githubusercontent.com/5993909/74149261-a54d2580-4c07-11ea-8e5c-d209ab96c03e.png)\r\n\r\n![image](https://user-images.githubusercontent.com/5993909/74149593-69669000-4c08-11ea-87f5-0634b4cd5ae1.png)\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\nAs usual I can pr\r\n\r\novide an example but it takes time. Let me know if it's needed.\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>\r\nangular.js:31599 ERROR TypeError: Cannot read property 'ɵcmp' of undefined\r\n    at getComponentDef (angular.js:29620)\r\n    at extractDirectiveDef (angular.js:29446)\r\n    at Array.map (<anonymous>)\r\n    at def.directiveDefs (angular.js:29442)\r\n    at createTView (angular.js:35363)\r\n    at getOrCreateTComponentView (angular.js:35315)\r\n    at addComponentLogic (angular.js:36046)\r\n    at instantiateAllDirectives (angular.js:35890)\r\n    at createDirectivesInstances (angular.js:35283)\r\n    at ɵɵelementStart (angular.js:41965)\r\n</code></pre>\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\nAngular CLI: 9.0.1\r\nNode: 12.14.0\r\nOS: win32 x64\r\n\r\nAngular: 9.0.0\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... material, platform-browser, platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.1\r\n@angular-devkit/build-optimizer   0.900.1\r\n@angular-devkit/core              9.0.1\r\n@angular-devkit/schematics        9.0.1\r\n@angular/cli                      9.0.1\r\n@angular/http                     8.0.0-beta.10\r\n@ngtools/webpack                  9.0.1\r\n@schematics/angular               9.0.1\r\n@schematics/update                0.900.1\r\nrxjs                              6.5.4\r\ntypescript                        3.7.5\r\nwebpack                           4.41.5\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/16920","RelatedDescription":"Open issue \"[IVY][9.0.0] Renaming a directive in a consumed library built by ng-packagr causes error in Application when in watch mode\" (#16920)"},{"Id":"562494403","IsPullRequest":false,"CreatedAt":"2020-02-10T11:19:35","Actor":"yutamago","Number":"16910","RawContent":null,"Title":"CSS calc() breaks when using 3+ variable fallbacks on Ivy/Angular 9","State":"open","Body":"# 🐞 Bug report\r\n\r\n### Command\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\nYes, the previous version in which this bug was not present was: 8.2.3\r\n\r\n\r\n### Description\r\n`var(--x, var(--y, var(--z, 0)))` breaks inside of the calc-function.\r\nWhereas `var(--x, var(--y, 0))` still seems to work.\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n1) Put following class selector in any component stylesheet.\r\n```css\r\n.some-rule-lg {\r\n  --width-lg: 1px;\r\n  --width-md: 2px;\r\n  --width-sm: 3px;\r\n  --offset-lg: 4px;\r\n  --offset-md: 5px;\r\n  --offset-sm: 6px;\r\n  width: calc(var(--width-lg, var(--width-md, var(--width-sm, 0))) + var(--offset-lg, var(--offset-md, var(--offset-sm, 0))));\r\n}\r\n```\r\n\r\n2) Build using `ng build --aot --prod`\r\n\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>ERROR in Parse error on line 1: \r\nvar(--width-lg, var(--width-md, var(--width-sm, 0))) + var(--...\r\n---------------------------------------------------^\r\nExpecting end of input, \"ADD\", \"SUB\", \"MUL\", \"DIV\", got unexpected \"RPAREN\"</code></pre>\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\nAngular CLI: 9.0.1\r\nNode: 10.15.3\r\nOS: win32 x64\r\n\r\nAngular: 9.0.0\r\n... animations, cdk, common, compiler, compiler-cli, core, forms\r\n... language-service, material, material-moment-adapter\r\n... platform-browser, platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.1\r\n@angular-devkit/build-angular     0.900.1\r\n@angular-devkit/build-optimizer   0.900.1\r\n@angular-devkit/build-webpack     0.900.1\r\n@angular-devkit/core              9.0.1\r\n@angular-devkit/schematics        9.0.1\r\n@angular/cli                      9.0.1\r\n@ngtools/webpack                  9.0.1\r\n@schematics/angular               9.0.1\r\n@schematics/update                0.900.1\r\nrxjs                              6.5.4\r\ntypescript                        3.7.5\r\nwebpack                           4.41.2\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\nWe're using SCSS for our stylesheets.","Url":"https://github.com/angular/angular-cli/issues/16910","RelatedDescription":"Open issue \"CSS calc() breaks when using 3+ variable fallbacks on Ivy/Angular 9\" (#16910)"},{"Id":"562478163","IsPullRequest":false,"CreatedAt":"2020-02-10T10:49:18","Actor":"mstawick","Number":"16909","RawContent":null,"Title":"[v9] \"optimization\": true breaks sourcemaps?","State":"open","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\nYes, it was fine with v8\r\n\r\n### Description\r\nThere's a question mark, because either sourcemaps are broken, or my understanding of how they work is wrong. Here's my use case and \"investigation\".\r\n\r\nI'm using Sentry for crash-tracking and for production builds I generate source maps and upload them directly to sentry. After switching to v9, all the resolved stack traces were wrong (ie. resolved methods are something else then they should be) - it's all garbage. After going back-and-forth, I've discovered that everything works fine if I disable `optimization` flag.\r\n\r\nSo I've created a simple project (`ng new`), add a small piece of code (button + onclick handler) and generated a production build with `optimization` enabled (`ng build --prod --source-map`). I've then decoded the map file using `@bengourley/source-map-decoder` and compared mapping with the actual minified js file. Turns out column number from the mapping is nowhere close to the actual code it should point to.\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\nI've attached a reproduction. Inside is a folder `help` that contains files I've investigated - the main bundle, it's source map, decoded version, and relevant entries.\r\n\r\n[sourcemap-bug.zip](https://github.com/angular/angular-cli/files/4180334/sourcemap-bug.zip)\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\nAngular CLI: 9.0.1\r\nNode: 12.14.1\r\nOS: linux x64\r\n\r\nAngular: 9.0.0\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.1\r\n@angular-devkit/build-angular     0.900.1\r\n@angular-devkit/build-optimizer   0.900.1\r\n@angular-devkit/build-webpack     0.900.1\r\n@angular-devkit/core              9.0.1\r\n@angular-devkit/schematics        9.0.1\r\n@angular/cli                      9.0.1\r\n@ngtools/webpack                  9.0.1\r\n@schematics/angular               9.0.1\r\n@schematics/update                0.900.1\r\nrxjs                              6.5.4\r\ntypescript                        3.7.5\r\nwebpack                           4.41.2\r\n</code></pre>\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/16909","RelatedDescription":"Open issue \"[v9] \"optimization\": true breaks sourcemaps?\" (#16909)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"563632655","IsPullRequest":true,"CreatedAt":"2020-02-12T00:13:09","Actor":"mmalerba","Number":"18468","RawContent":null,"Title":"fix(cdk/text-field): fix autofill listener on Chrome 80","State":"open","Body":"fixes #18461","Url":"https://github.com/angular/components/pull/18468","RelatedDescription":"Open PR \"fix(cdk/text-field): fix autofill listener on Chrome 80\" (#18468)"},{"Id":"562217783","IsPullRequest":true,"CreatedAt":"2020-02-11T22:32:27","Actor":"zelliott","Number":"18445","RawContent":null,"Title":"fix(material/list): Selection List element should not be focusable.","State":"closed","Body":"Currently, the `MatSelectionList` `listbox` element itself receives focus on keyboard navigation. This does not follow the Listbox Design Pattern recommendation on the 1.1 ARIA practices (https://www.w3.org/TR/wai-aria-practices-1.1/#Listbox). Per their guidance:\r\n\r\n> When a single-select listbox receives focus:\r\n> * If none of the options are selected before the listbox receives focus, the first option receives focus. Optionally, the first option may be automatically selected.\r\n> * If an option is selected before the listbox receives focus, focus is set on the selected option.\r\n\r\nThis PR changes the keyboard interaction of `MatSelectionList` to follow the guidance above.\r\n\r\nI would prefer to use the \"roving tabindex\" pattern, but given the list options are content-projected, I ran into issues keeping tabindices updated without ExpressionChangedAfter... errors. Thus, I instead essentially followed the implementation used in `MatChipList`. The `listbox` element has `tabindex=\"0\"`, and the `option` elements have `tabindex=\"-1\"`. When the `listbox` is focused, it redirects focus to the proper `option` element.\r\n\r\n* When a user attempts to tab out of the selection list, the selection list's `tabindex` is temporarily set to `-1` to allow focus to escape (`MatChipList` does this as well).\r\n* When the selection list has no options, it is removed from the tab order.\r\n* The `[tabIndex]` input on `MatSelectionList` is now unused and should eventually be removed.","Url":"https://github.com/angular/components/pull/18445","RelatedDescription":"Closed or merged PR \"fix(material/list): Selection List element should not be focusable.\" (#18445)"},{"Id":"563442096","IsPullRequest":true,"CreatedAt":"2020-02-11T19:59:33","Actor":"crisbeto","Number":"18467","RawContent":null,"Title":"fix(checkbox): not handling unknown color palette","State":"open","Body":"Fixes the checkbox component not falling back to the default color, if the color is `undefined`. We need to handle this, because `ThemePalette` allows `undefined`.\r\n\r\nFixes #18465.","Url":"https://github.com/angular/components/pull/18467","RelatedDescription":"Open PR \"fix(checkbox): not handling unknown color palette\" (#18467)"},{"Id":"563329849","IsPullRequest":true,"CreatedAt":"2020-02-11T19:15:05","Actor":"IKatsuba","Number":"18463","RawContent":null,"Title":"fix(text-field): update autofill keyframes ","State":"closed","Body":"AutofillMonitor does not work after upgrading to Chrome 80, because the event 'animationstart' has stopped triggering for empty keyframes (see #18461 )","Url":"https://github.com/angular/components/pull/18463","RelatedDescription":"Closed or merged PR \"fix(text-field): update autofill keyframes \" (#18463)"},{"Id":"563398981","IsPullRequest":false,"CreatedAt":"2020-02-11T18:37:27","Actor":"Nanoboss","Number":"18466","RawContent":null,"Title":"Using [ngmodel] turns toolbar white","State":"open","Body":"#### Reproduction\r\n\r\nUse StackBlitz to reproduce your issue: https://stackblitz.com/edit/components-issue-fqdwcq (line 22  and line 33 of the exemple component.html)\r\n\r\nSteps to reproduce:\r\n1. replace Ngmodel by [Ngmodel]=\"something\"\r\n \r\n#### Expected Behavior\r\n\r\nI'm expecting nothing to change.\r\n\r\n#### Actual Behavior\r\n\r\nThe toolbar turns white.\r\n\r\n#### Environment\r\n\r\n- Angular:\r\n- CDK/Material: 6.13.6\r\n- Browser(s): \r\nChrome Version 79.0.3945.130 (Build officiel) (64 bits) \r\nSafari Version 13.0.4 (15608.4.9.1.3)\r\n\r\n- Operating System (e.g. Windows, macOS, Ubuntu):  MacOS Catalina 10.15.2 (19C57)\r\n","Url":"https://github.com/angular/components/issues/18466","RelatedDescription":"Open issue \"Using [ngmodel] turns toolbar white\" (#18466)"},{"Id":"563362351","IsPullRequest":false,"CreatedAt":"2020-02-11T17:27:24","Actor":"aitboudad","Number":"18465","RawContent":null,"Title":"[Angular 9][mat-checkbox] `undefined` color input doesn't fallback to the default color","State":"open","Body":"#### Reproduction\r\n\r\nhttps://stackblitz.com/edit/angular-eg9cyl?file=src%2Fapp%2Fcheckbox-overview-example.html\r\n \r\n#### Expected Behavior\r\n\r\nWhen the color input is undefined it should fall back to the global color.\r\n\r\n#### Actual Behavior\r\n\r\nThe checked indicator is not visible.\r\n\r\n#### Environment\r\n\r\n- Angular: 9.0\r\n- CDK/Material: 9.0\r\n- Browser(s): chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/18465","RelatedDescription":"Open issue \"[Angular 9][mat-checkbox] `undefined` color input doesn't fallback to the default color\" (#18465)"},{"Id":"563360490","IsPullRequest":false,"CreatedAt":"2020-02-11T17:24:17","Actor":"Guerric-P","Number":"18464","RawContent":null,"Title":"Type=\"button\" automatically set by matChipRemove directive","State":"open","Body":"#### Reproduction\r\n\r\nSteps to reproduce:\r\n1. Create a new project with a `<mat-chip-list><mat-chip>Some text<mat-icon matChipRemove>cancel</mat-icon></mat-chip></mat-chip-list>`\r\n2. Import bootstrap\r\n3. Start the application\r\n \r\n \r\n#### Expected Behavior\r\n\r\nI expect the close button to display properly, and I don't expect unrelated HTML attributes on the element.\r\n\r\n\r\n#### Actual Behavior\r\n\r\nThe button displays with a square around it because `matChipRemove` directive applies a `type=\"button\"` on the host element regardless of their tag name.\r\n\r\nThis renders a `<mat-icon type=\"button\">` which has no sense nor utility, and it displays with a square around it, because of this bootstrap CSS rule:\r\n\r\n```\r\n[type=button], [type=reset], [type=submit], button {\r\n    -webkit-appearance: button;\r\n}\r\n```\r\n\r\n#### Environment\r\n\r\n- Angular: 9\r\n- CDK/Material: 9\r\n- Browser(s): Chrome 79\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n\r\nRelated pull request: #18095","Url":"https://github.com/angular/components/issues/18464","RelatedDescription":"Open issue \"Type=\"button\" automatically set by matChipRemove directive\" (#18464)"},{"Id":"563227634","IsPullRequest":false,"CreatedAt":"2020-02-11T14:03:27","Actor":"AElMehdi","Number":"18462","RawContent":null,"Title":"Examples link to stackblitz are broken","State":"open","Body":"For some reason the examples [external links to stackblitz](https://run.stackblitz.com/api/angular/v1?file=src%2Fapp%2Fexpansion-overview-example.ts) are broken: `Internal Server Error in Firefox` and `Cannot GET /api/angular/v1 in Chrome`.\r\n\r\n\r\n\r\nCan be checked out in the `expansion panel`  [examples page](https://material.angular.io/components/expansion/examples), and apparently in all the other examples pages.\r\n","Url":"https://github.com/angular/components/issues/18462","RelatedDescription":"Open issue \"Examples link to stackblitz are broken\" (#18462)"},{"Id":"563198430","IsPullRequest":false,"CreatedAt":"2020-02-11T13:14:15","Actor":"IKatsuba","Number":"18461","RawContent":null,"Title":"AutofillMonitor doesn't work after upgrading to Chrome 80","State":"open","Body":"#### Reproduction\r\n\r\nhttps://stackblitz.com/edit/components-issue-eezq3t\r\n\r\nSteps to reproduce:\r\n1. Click on the input element\r\n2. Hover over suggested field options\r\n \r\n \r\n#### Expected Behavior\r\n\r\n\"isAutofilled\" appears above the input element\r\n\r\n\r\n#### Actual Behavior\r\n\r\n\"isAutofilled\" does not appear above the input element\r\n\r\n\r\n#### Environment\r\n\r\n- Angular: 8.2.14\r\n- CDK/Material: 8.2.3\r\n- Browser(s): Chrome 80\r\n- Operating System (e.g. Windows, macOS, Ubuntu): MacOS\r\n","Url":"https://github.com/angular/components/issues/18461","RelatedDescription":"Open issue \"AutofillMonitor doesn't work after upgrading to Chrome 80\" (#18461)"},{"Id":"563038305","IsPullRequest":false,"CreatedAt":"2020-02-11T08:11:34","Actor":"davidglezz","Number":"18460","RawContent":null,"Title":"PageUp and PageDown dont work in cdk/scrolling component","State":"open","Body":"#### Reproduction\r\nPageUp and PageDown dont work in cdk/scrolling component with Chrome, in firefox it works fine.\r\n\r\nhttps://material.angular.io/cdk/scrolling/overview\r\n\r\nSteps to reproduce:\r\n1. Focus some cdkScrollable example\r\n2. press the pageUp key 3 times or more\r\n \r\n#### Expected Behavior\r\nTo scroll like non-virtual scrollable panels.\r\n\r\n#### Actual Behavior\r\nPageUp stop scroll after 2 or 3 keystrokes.\r\nPageDown stop scroll sometimes.\r\n\r\n#### Environment\r\n- Angular: 8, 9\r\n- CDK/Material: 8, 9\r\n- Browser(s): Chrome \r\n- Operating System: Windows\r\n","Url":"https://github.com/angular/components/issues/18460","RelatedDescription":"Open issue \"PageUp and PageDown dont work in cdk/scrolling component\" (#18460)"},{"Id":"562917563","IsPullRequest":false,"CreatedAt":"2020-02-11T00:55:06","Actor":"TLKG","Number":"18459","RawContent":null,"Title":"Drag-and-Drop Editable Text Fields Sample ","State":"open","Body":"#### Documentation Feedback\r\n\r\n[All samples of Drag-and-Drop](https://material.angular.io/cdk/drag-drop/examples) are on read-only items. Would like to see a bi-drectional editable list of drag-and-drop sample. I'm looking for a way to implement, for [example](https://stackblitz.com/edit/angular-kwcrnh?embed=1&file=src/app/cdk-drag-drop-custom-placeholder-example.html)\r\n**Affected documentation page:** Insert a link to the affected page on material.angular.io\r\nhttps://material.angular.io/cdk/drag-drop/examples\r\n","Url":"https://github.com/angular/components/issues/18459","RelatedDescription":"Open issue \"Drag-and-Drop Editable Text Fields Sample \" (#18459)"},{"Id":"562766876","IsPullRequest":true,"CreatedAt":"2020-02-10T19:09:28","Actor":"crisbeto","Number":"18458","RawContent":null,"Title":"fix(stepper): parent stepper picking up steps from child stepper","State":"open","Body":"When we initially made some changes to handle Ivy, we made an assumption that people wouldn't nest steppers so we took one shortcut. It looks like that assumption wasn't correct so these changes make it possible to properly nest steppers again.\r\n\r\nFixes #18448.","Url":"https://github.com/angular/components/pull/18458","RelatedDescription":"Open PR \"fix(stepper): parent stepper picking up steps from child stepper\" (#18458)"},{"Id":"562761852","IsPullRequest":true,"CreatedAt":"2020-02-10T18:59:09","Actor":"devversion","Number":"18457","RawContent":null,"Title":"build: update to bazel v2.1.0","State":"open","Body":"* Updates to Bazel v2.1.0\r\n* Updates to latest rules_nodejs version.\r\n* Migrates from the no longer supported `@bazel/bazel` package to\r\n`@bazel/bazelisk`.","Url":"https://github.com/angular/components/pull/18457","RelatedDescription":"Open PR \"build: update to bazel v2.1.0\" (#18457)"},{"Id":"562760103","IsPullRequest":true,"CreatedAt":"2020-02-10T18:55:27","Actor":"jadekler","Number":"18456","RawContent":null,"Title":"add example of a mat-table with re-orderable columns","State":"open","Body":"This adds an example of how to re-order a table's columns with CDK drag drop.\r\n\r\nThis example can be seen at https://stackblitz.com/edit/mat-table-col-reorder. (I created that - it is almost 1:1) (It does not work since stackblitz doesn't have the fix for https://github.com/angular/components/issues/15948)\r\n\r\nThis has come up _numerous_ times in issues and requests:\r\n\r\n- https://stackoverflow.com/questions/53377450/reorder-mat-table-rows-with-angular-materials-drag-and-drop\r\n- https://github.com/angular/components/issues/13770\r\n- https://embed.plnkr.co/DevUDv/\r\n- https://medium.com/vendasta/wrapping-angular-material-table-styling-it-once-drag-drop-sorting-b1765c995b40\r\n(etc)\r\n\r\n*Note*: It looks like CdkDragDrop.previousIndex is never being updated. It always reports the original index - rather than the previous - of the thing being dragged. So, in this PR I've had to add a little mapping from CdkDragDrop.previousIndex -> name from column list -> actual previousIndex.\r\n\r\n*Note*: This requires a very recent version of angular that has the fix for https://github.com/angular/components/issues/15948.","Url":"https://github.com/angular/components/pull/18456","RelatedDescription":"Open PR \"add example of a mat-table with re-orderable columns\" (#18456)"},{"Id":"562733177","IsPullRequest":true,"CreatedAt":"2020-02-10T18:06:42","Actor":"devversion","Number":"18454","RawContent":null,"Title":"fix(ng-update): avoid error if project has folder ending with style extension","State":"open","Body":"Previously, we always queried for `.css` and `.scss` files in the whole\r\nworkspace. We relied on `glob` for this, but did not disable folder\r\nmatching. Hence, it could happen that in some cases the migration rule\r\ntried reading content from a directory (resulting in `EISDIR` error).\r\n\r\nAdditionally, we always queried for files in the actual workspace root.\r\nThis has downsides and is not correct because it could mean that\r\nstylesheets from other projects are accidentally read (in case of a\r\nmonorepo for example).\r\n\r\nFixes #18434.","Url":"https://github.com/angular/components/pull/18454","RelatedDescription":"Open PR \"fix(ng-update): avoid error if project has folder ending with style extension\" (#18454)"},{"Id":"562717937","IsPullRequest":false,"CreatedAt":"2020-02-10T17:36:28","Actor":"sjlskyward","Number":"18453","RawContent":null,"Title":"Have MatDrawer extend CdkScrollable","State":"open","Body":"#### Feature Description\r\n\r\nHeavy related to [#9136](https://github.com/angular/components/issues/9136). Since `.mat-drawer-inner-container` is generated, `cdkScrollable` cannot be added.By extending `CdkScrollable` would make `MatDrawer` behave like `MatDrawerContent`, which already extends `CdkScrollable`\r\n\r\n#### Use Case\r\n\r\nSubscribe to scroll events and manage scroll behavior of `MatDrawer`; this would allow `MatDrawerContent` to respond dynamically to scroll events on `MatDrawer`, and vice versa.\r\n","Url":"https://github.com/angular/components/issues/18453","RelatedDescription":"Open issue \"Have MatDrawer extend CdkScrollable\" (#18453)"},{"Id":"562684890","IsPullRequest":false,"CreatedAt":"2020-02-10T16:40:54","Actor":"Ahnert1","Number":"18452","RawContent":null,"Title":"Mat-option div being generated dynamically outside app-root and makes component unit testing difficult","State":"open","Body":"My component uses `<mat-option>`s to display some options from an API call. The `<mat-option>` div(s) appear at the root level of the application, instead of being nested in the component which it was declared.  **This makes testing extremely difficult.**  \r\n\r\nAs a workaround, I am using `document.querySelectorAll(\"mat-option\")` to locate the element(s). I'm not sure if this is good practice, and I'm also not sure how to interact with the element after that. Ideally, I would prefer to use my component's `fixture` for locating the `<mat-option>` divs.\r\n\r\nAlso now that Angular 9 is out which supports `Harnesses` for testing, I would prefer to use the following line of code for retrieving `<mat-option>s`:\r\n`const options = await loader.getAllHarnesses(MatOptionHarness);`\r\nI don't see how its possible for this line of code to **ever** work if the `<mat-option>` divs are being generated dynamically outside of the component in which it was declared (and the component being tested).","Url":"https://github.com/angular/components/issues/18452","RelatedDescription":"Open issue \"Mat-option div being generated dynamically outside app-root and makes component unit testing difficult\" (#18452)"},{"Id":"562676213","IsPullRequest":false,"CreatedAt":"2020-02-10T16:35:33","Actor":"peterlitvak","Number":"18451","RawContent":null,"Title":"How to disable mat-card's default tooltip?","State":"closed","Body":"It appears that `mat-card` has a default tooltip that is set to the content of the `mat-card-title`.\r\nLooking at the documentation there is no mentioning of any tooltip related functionality.\r\nIs there a way to disable the default tooltip behavior for the `mat-card` component? \r\n\r\n#### Environment\r\n\r\n- Angular: 7.3.7\r\n- CDK/Material: Material\r\n- Browser(s): Chrome (latest)\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS (latest)\r\n","Url":"https://github.com/angular/components/issues/18451","RelatedDescription":"Closed issue \"How to disable mat-card's default tooltip?\" (#18451)"},{"Id":"562493400","IsPullRequest":false,"CreatedAt":"2020-02-10T11:17:48","Actor":"petr-kostelansky","Number":"18450","RawContent":null,"Title":"Can't drop into same DropList in hierarchy (because DropList is filter out before call ref.connectedTo)","State":"open","Body":"I have a hierarchy of items. \r\n<img src=\"https://user-images.githubusercontent.com/33530495/74142994-446b2080-4bfa-11ea-8c20-2ac1f2616007.PNG\" width=\"300\" />\r\n\r\n**I would like to change order of item (Child item 3) in the same DropList (droplist of Parent item 1), just change order not move into another DropList. But I can not do that**, because:\r\nIn _CdkDropList_ is method __setupInputSyncSubscription(ref)_ and in this method is subscription _ref.beforeStarted.subscribe(...)_ in which is called  \r\n```\r\n            ref.connectedTo(siblings.filter((\r\n            drop => drop && drop !== this)).map(...)\r\n```\r\nbut the **filter** method filter out **.filter(drop => drop && drop !== this)** the origin DropList (**this**) of dragged item and than **I am not able to drop back into same DropList to reorder items**.\r\n\r\n***\r\n\r\nAnd I know that there is a method __updateActiveDropContainer(...)_ on _DragRef_ that is trying to handle sorting if I dropping into same DropList but this works just for Parents. Because just if \r\n\r\n```let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);```\r\n\r\n_newContainer_ is _undefined_ then sorting ((this._dropContainer))._sortItem(...)) can happend. But I want to drop back into DropList of children (Parent item 1) and I always get in _newContainer_ DropList of parents and not DropList of children (Parent item 1) because the DropList  of children (Parent item 1) was removed in **siblings.filter((drop => drop && drop !== this))** as I mentioned above.\r\n\r\nI can not place the item where red lines are cause the _this._initialContainer._getSiblingContainerFromPosition(this, x, y)_ always return DropList of children (red arrow)\r\n<img src=\"https://user-images.githubusercontent.com/33530495/74143474-281bb380-4bfb-11ea-8cd6-e3813dfc3ae1.PNG\" width=\"300\" />\r\n\r\nor DropList of Parents (red arrow)\r\n<img src=\"https://user-images.githubusercontent.com/33530495/74143665-7f218880-4bfb-11ea-9105-922f7dd49548.PNG\" width=\"300\" />\r\n\r\n\r\nCan you remove for next version the filter that removes origin DropList (droplist where dragged item was placed)? Or is there some reason why the filter is there?\r\n\r\n\r\n#### Environment\r\n\r\n- Angular: 8.2.3\r\n- CDK/Material: 8.1.3\r\n- Browser(s): Chrome Version 80.0.3987.87\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows 10\r\n","Url":"https://github.com/angular/components/issues/18450","RelatedDescription":"Open issue \"Can't drop into same DropList in hierarchy (because DropList is filter out before call ref.connectedTo)\" (#18450)"},{"Id":"562474132","IsPullRequest":false,"CreatedAt":"2020-02-10T10:42:52","Actor":"amdw","Number":"18449","RawContent":null,"Title":"Clipboard code example in Material 9.0.0 docs does not work on Firefox","State":"open","Body":"#### Documentation Feedback\r\n\r\nThe following code example from the Clipboard documentation for Angular Material 9.0.0 does not work on Firefox:\r\n\r\nhttps://github.com/angular/components/blame/a67cef6cf048166ebd1934637dbe0136c2dd345c/src/cdk/clipboard/clipboard.md#L43\r\n\r\nThe problem seems to be that Firefox does not allow Javascript applications to write to the clipboard except synchronously inside a click handler (unless special permissions have been granted):\r\n\r\nhttps://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/Interact_with_the_clipboard#Writing_to_the_clipboard\r\n\r\nTherefore, the fact that the `attempt` function is called asynchronously using `setTimeout` causes the call to fail, with a console warning message saying the copy was \"denied because it was not called from inside a short running user-generated event handler\".\r\n\r\nIt's unclear to me why the example code is written with the copy attempts done asynchronously. Running the attempts inline seems to work fine, even for a fairly substantial amount of data:\r\n\r\n```typescript\r\nlet clipboardData = 'something to copy';\r\nconst pending = this.clipboard.beginCopy(clipboardData);\r\nfor (let attempt = 0; attempt < 3; attempt++) {\r\n  const result = pending.copy();\r\n  if (result) {\r\n    console.log('Copied on attempt ' + (attempt+1));\r\n    break;\r\n  }\r\n}\r\npending.destroy();\r\n```\r\n\r\n**Affected documentation page:** \r\nhttps://material.angular.io/cdk/clipboard/overview\r\n","Url":"https://github.com/angular/components/issues/18449","RelatedDescription":"Open issue \"Clipboard code example in Material 9.0.0 docs does not work on Firefox\" (#18449)"},{"Id":"562289649","IsPullRequest":false,"CreatedAt":"2020-02-10T02:29:12","Actor":"mhosman","Number":"18448","RawContent":null,"Title":"Not able to create nested mat-stepper's since 9.0.0","State":"open","Body":"If I try to create a nested mat-stepper, all the steps of the child stepper are assigned to the parent one. This is happening since 9.0.0 update.","Url":"https://github.com/angular/components/issues/18448","RelatedDescription":"Open issue \"Not able to create nested mat-stepper's since 9.0.0\" (#18448)"},{"Id":"562249542","IsPullRequest":true,"CreatedAt":"2020-02-09T22:21:57","Actor":"CaerusKaru","Number":"18447","RawContent":null,"Title":"test(layout): remove unneeded LayoutModule","State":"open","Body":"LayoutModule is an empty `NgModule` remnant from\r\nbefore treeshakable providers were introduced. It is\r\nno longer needed in this test.","Url":"https://github.com/angular/components/pull/18447","RelatedDescription":"Open PR \"test(layout): remove unneeded LayoutModule\" (#18447)"},{"Id":"562219683","IsPullRequest":true,"CreatedAt":"2020-02-09T18:38:43","Actor":"crisbeto","Number":"18446","RawContent":null,"Title":"fix(material-experimental/mdc-tabs): not disabling all animations with noop animations module","State":"open","Body":"Fixes most of the MDC tab animations not being disabled when the `NoopAnimationsModule` is used.","Url":"https://github.com/angular/components/pull/18446","RelatedDescription":"Open PR \"fix(material-experimental/mdc-tabs): not disabling all animations with noop animations module\" (#18446)"},{"Id":"562201248","IsPullRequest":true,"CreatedAt":"2020-02-09T16:20:48","Actor":"crisbeto","Number":"18444","RawContent":null,"Title":"fix(material-experimental/popover-edit): closing instantly when opening with enter key","State":"open","Body":"We use `keydown` to open the popover edit overlay and `keyup` to close it which can lead to situations where the user opens and closes the popup immediately. Seems to have been introduced by #18194.\r\n\r\nFor reference:\r\n![demo](https://user-images.githubusercontent.com/4450522/74105694-72038b80-4b60-11ea-82ce-ef4059dd9302.gif)\r\n\r\ncc @kseamon ","Url":"https://github.com/angular/components/pull/18444","RelatedDescription":"Open PR \"fix(material-experimental/popover-edit): closing instantly when opening with enter key\" (#18444)"},{"Id":"562197023","IsPullRequest":true,"CreatedAt":"2020-02-09T15:53:28","Actor":"crisbeto","Number":"18443","RawContent":null,"Title":"fix(select): component value not in sync with control value on init","State":"open","Body":"Fixes the `MatSelect.value` property not being in sync with the `ControlValueAccessor` initial value on init.\r\n\r\nFixes #18423.","Url":"https://github.com/angular/components/pull/18443","RelatedDescription":"Open PR \"fix(select): component value not in sync with control value on init\" (#18443)"},{"Id":"562170600","IsPullRequest":true,"CreatedAt":"2020-02-09T12:41:20","Actor":"crisbeto","Number":"18442","RawContent":null,"Title":"fix(button-toggle): static checked value not being picked up","State":"open","Body":"Fixes the static checked value of a button toggle not having an effect in Ivy, because it ends up being assigned earlier than we expect. This is a side effect of the circular dependency between the toggle group and the toggle which should be cleaned up at some point, because it's not the first time it has caused issues with things going out of sync.\r\n\r\nFixes #18427.","Url":"https://github.com/angular/components/pull/18442","RelatedDescription":"Open PR \"fix(button-toggle): static checked value not being picked up\" (#18442)"},{"Id":"562027874","IsPullRequest":true,"CreatedAt":"2020-02-08T14:42:38","Actor":"crisbeto","Number":"18441","RawContent":null,"Title":"fix(progress-bar): changed after checked error on animation end event with noop animations","State":"open","Body":"If the `animationEnd` of a progress bar is used to update something in the view of an app that has disabled animations, a \"changed after checked\" error will be thrown because of the timing at which we dispatch the event. These changes work around the issue by not having separate logic for when the animations are enabled or disabled.","Url":"https://github.com/angular/components/pull/18441","RelatedDescription":"Open PR \"fix(progress-bar): changed after checked error on animation end event with noop animations\" (#18441)"},{"Id":"562022972","IsPullRequest":true,"CreatedAt":"2020-02-08T14:03:37","Actor":"crisbeto","Number":"18440","RawContent":null,"Title":"fix(material-experimental/mdc-chips): not disabling all animations when animations are disabled","State":"open","Body":"Currently the MDC chip only disables the removal animation when all animations are disabled. These changes make it so that the rest of the animations are disabled as well.","Url":"https://github.com/angular/components/pull/18440","RelatedDescription":"Open PR \"fix(material-experimental/mdc-chips): not disabling all animations when animations are disabled\" (#18440)"},{"Id":"561897934","IsPullRequest":true,"CreatedAt":"2020-02-07T22:42:10","Actor":"crisbeto","Number":"18439","RawContent":null,"Title":"chore: clean up remaining mixed mat/cdk table usages","State":"closed","Body":"A while ago all live examples that were missing Material and CDK tables were cleaned up, but there were a couple of leftovers in the dev apps. These changes clean up that last few places.","Url":"https://github.com/angular/components/pull/18439","RelatedDescription":"Closed or merged PR \"chore: clean up remaining mixed mat/cdk table usages\" (#18439)"},{"Id":"561887056","IsPullRequest":true,"CreatedAt":"2020-02-07T21:57:30","Actor":"crisbeto","Number":"18438","RawContent":null,"Title":"fix(material-experimental/mdc-form-field): scrollbar always visible on textarea in IE","State":"closed","Body":"Fixes the scroll bars of a textarea elements always being visible on IE.","Url":"https://github.com/angular/components/pull/18438","RelatedDescription":"Closed or merged PR \"fix(material-experimental/mdc-form-field): scrollbar always visible on textarea in IE\" (#18438)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-02-12T05:30:06.7885007Z","RunDurationInMilliseconds":3222}