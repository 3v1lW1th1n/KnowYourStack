{"Data":{"Blog":{"FeedItems":[{"Title":"Welcome to the New Blog Template for ASP.NET Developers","PublishedOn":"2017-09-08T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"By Juliet Daniel, Lucas Isaza, and Uma Lakshminarayan Have you always wanted to build a blog or other web application but haven&#8217;t had the time or educational resources to learn? With our blog template, available in our GitHub repo, you can create your web application fast and effortlessly, and even learn to master the new... <a aria-label=\"read more about Welcome to the New Blog Template for ASP.NET Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/","RawContent":null},{"Title":"Getting Started with Windows Containers","PublishedOn":"2017-09-07T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Containers provide a way of running an application in a controlled environment, isolated from other applications running on the machine, and from the underlying infrastructure. They are a cost-effective way of abstracting away the machine, ensuring that the application runs in the same conditions, from development, to test, to production. Containers started in Linux, as... <a aria-label=\"read more about Getting Started with Windows Containers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/","RawContent":null},{"Title":"ASP.NET Core 2.0 Features","PublishedOn":"2017-08-25T00:00:00","CommentsCount":17,"FacebookCount":0,"Summary":"Last week we announced the release of ASP.NET Core 2.0 and described some top new features, including Razor Pages, new and updated templates, and Application Insights integration. In this blog post we are going to dig into more details of features in 2.0. This list is not exhaustive or in any particular order, but highlights... <a aria-label=\"read more about ASP.NET Core 2.0 Features\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0","PublishedOn":"2017-08-14T00:00:00","CommentsCount":43,"FacebookCount":0,"Summary":"The ASP.NET team is proud to announce general availability of ASP.NET Core 2.0.  This release features compatibility with .NET Core 2.0, tooling support in Visual Studio 2017 version 15.3, and the new Razor Pages user-interface design paradigm.  For a full list of updates, you can read the release notes and you can check the list... <a aria-label=\"read more about Announcing ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/","RawContent":null},{"Title":"Development time IIS support for ASP.NET Core Applications","PublishedOn":"2017-07-14T00:00:00","CommentsCount":13,"FacebookCount":0,"Summary":"With a recent update to Visual Studio 2017, we have added support for debugging ASP.NET Core applications against IIS. This blog post will walk you through enabling this feature and setting up your project to use this feature. Getting Started To get started: You need to install Visual Studio 2017 (version 15.3) Preview (it will... <a aria-label=\"read more about Development time IIS support for ASP.NET Core Applications\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/","RawContent":null},{"Title":"WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication","PublishedOn":"2017-06-28T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With the recent update to the WCF Service Reference tool in the VS Marketplace, support has been added for downloading metadata for a web service where the metadata exchange (MEX) endpoint has been secured with IIS authentication. The purpose of MEX endpoints is to allow clients to discover the service capabilities, including security aspects of... <a aria-label=\"read more about WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/","RawContent":null},{"Title":"Introducing ASP.NET Core 2.0 Preview 2","PublishedOn":"2017-06-28T00:00:00","CommentsCount":41,"FacebookCount":0,"Summary":"At Build 2017, we released an initial preview version of ASP.NET Core 2.0.  Over the last two months we have incorporated your feedback and added a number of new features.  We now have a Preview 2 version of the ASP.NET Core 2.0 framework and Visual Studio tools for you to try.  In this post, we... <a aria-label=\"read more about Introducing ASP.NET Core 2.0 Preview 2\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers","PublishedOn":"2017-05-10T00:00:00","CommentsCount":25,"FacebookCount":0,"Summary":"The ASP.NET team is pleased to share the first preview version of the ASP.NET Core 2.0 framework.  In this post, we’ll look at the new features and changes to the web framework that were announced at the Build 2017 keynote and sessions.  We will also look at some other updates that were published for ASP.NET... <a aria-label=\"read more about Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/","RawContent":null},{"Title":"Visual Studio 2017 Tools for Azure Functions","PublishedOn":"2017-05-10T00:00:00","CommentsCount":104,"FacebookCount":0,"Summary":"Visual Studio 2017 Tools for Azure Functions are now available as part of the Azure development workload starting in the Visual Studio 2017 15.3 release. These tools: Enable creating pre-compiled C# functions that bring better cold start performance than script based functions, and opens the entire eco-system of Visual Studio tools for class libraries including code... <a aria-label=\"read more about Visual Studio 2017 Tools for Azure Functions\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/05/10/azure-function-tools-for-visual-studio-2017/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/05/10/azure-function-tools-for-visual-studio-2017/","RawContent":null},{"Title":"JWT Validation and Authorization in ASP.NET Core","PublishedOn":"2017-04-27T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Post has moved here... <a aria-label=\"read more about JWT Validation and Authorization in ASP.NET Core\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/04/27/jwt-validation-and-authorization-in-asp-net-core-2/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/04/27/jwt-validation-and-authorization-in-asp-net-core-2/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6578016594","Type":"IssuesEvent","CreatedAt":"2017-09-12T05:04:44","Actor":"LFT09KA","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2195","RelatedDescription":"Opened issue \"JUSTE 1990(E) 2.10.F06F.064Y4 -7LU2RETABLOOKap.µ-klrtlzh9oit.rdk\" (#2195) at aspnet/Home","RelatedBody":"To address your issues more quickly, please open the issue in the most appropriate repository. These are some of the most common repos:\r\n\r\nCommon ASP.NET and Entity Framework repos and projects:\r\n\r\n - Documentation: https://github.com/aspnet/Docs\r\n - MVC: https://github.com/aspnet/Mvc\r\n - Entity Framework Core: https://github.com/aspnet/EntityFramework\r\n - Entity Framework 6: https://github.com/aspnet/EntityFramework6\r\n - SignalR: https://github.com/aspnet/SignalR\r\n - ASP.NET Core in Docker: https://github.com/aspnet/aspnet-docker\r\n - Microsoft.NET.Sdk.Web: https://github.com/aspnet/websdk\r\n - Kestrel HTTP Server: https://github.com/aspnet/KestrelHttpServer\r\n - ASP.NET Katana: https://github.com/aspnet/AspNetKatana\r\n - and more! See a full list here: https://github.com/aspnet\r\n\r\nOther common projects:\r\n\r\n - NuGet: https://github.com/NuGet/home\r\n - .NET Core CLI, SDK, or runtime: https://github.com/dotnet/core\r\n - Visual Studio: https://developercommunity.visualstudio.com\r\n - Visual Studio Code: https://github.com/microsoft/vscode\r\n - Omnisharp (C# support for VS Code): https://github.com/omnisharp/omnisharp-vscode\r\n"},{"Id":"6578011806","Type":"WatchEvent","CreatedAt":"2017-09-12T05:02:21","Actor":"LFT09KA","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6577841725","Type":"ForkEvent","CreatedAt":"2017-09-12T03:40:40","Actor":"ascode","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/ascode/Home","RelatedDescription":"Forked aspnet/Home to ascode/Home","RelatedBody":null},{"Id":"6577841653","Type":"WatchEvent","CreatedAt":"2017-09-12T03:40:38","Actor":"ascode","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6577806630","Type":"ForkEvent","CreatedAt":"2017-09-12T03:25:47","Actor":"luququ","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/luququ/Home","RelatedDescription":"Forked aspnet/Home to luququ/Home","RelatedBody":null},{"Id":"6576286680","Type":"WatchEvent","CreatedAt":"2017-09-11T19:14:07","Actor":"al-hadi","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6576180900","Type":"ForkEvent","CreatedAt":"2017-09-11T18:49:39","Actor":"jdoddeap","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/jdoddeap/Home","RelatedDescription":"Forked aspnet/Home to jdoddeap/Home","RelatedBody":null},{"Id":"6575725999","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T17:05:28","Actor":"lucassklp","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2193#issuecomment-328594063","RelatedDescription":"Commented on issue \"Jwt Authorization .NET Core 2.0 always return Unauthorized (HTTP 401)\" (#2193) at aspnet/Home","RelatedBody":"No, there is not any message. That exception is only displayed into output."},{"Id":"6575505492","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T16:18:15","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2193#issuecomment-328580903","RelatedDescription":"Commented on issue \"Jwt Authorization .NET Core 2.0 always return Unauthorized (HTTP 401)\" (#2193) at aspnet/Home","RelatedBody":"Is there a message for that exception?"},{"Id":"6574431005","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T12:52:26","Actor":"lorenz31","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2103#issuecomment-328519515","RelatedDescription":"Commented on issue \"Asp.Net Core 2.0 Jwt Bearer Authentication works only for first request\" (#2103) at aspnet/Home","RelatedBody":"@f1xxxer I understand. By the way, I already got it working. I just set aside using Asp.Net Identity for the built-in registration/login and just used the reference I found a code project."},{"Id":"6573554635","Type":"WatchEvent","CreatedAt":"2017-09-11T09:14:14","Actor":"ariefabubakar","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6573428340","Type":"IssuesEvent","CreatedAt":"2017-09-11T08:45:31","Actor":"mohammad-hth","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2194","RelatedDescription":"Opened issue \"No service for type 'Microsoft.AspNetCore.Hosting.IHostingEnvironment' has been registered\" (#2194) at aspnet/Home","RelatedBody":"I have a problem when I want to fire add-migration command for an ASP MVC Core 2 project.\r\n\r\n> No service for type 'Microsoft.AspNetCore.Hosting.IHostingEnvironment' has been registered.\r\n\r\n[You can see more information in stackoverflow](https://stackoverflow.com/questions/46150730/asp-net-core-2-no-service-for-type-microsoft-aspnetcore-hosting-ihostingenviron)"},{"Id":"6573243292","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T07:58:38","Actor":"AlexOliinyk1","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2103#issuecomment-328449189","RelatedDescription":"Commented on issue \"Asp.Net Core 2.0 Jwt Bearer Authentication works only for first request\" (#2103) at aspnet/Home","RelatedBody":"@f1xxxer  can you help in this issue ? https://github.com/aspnet/Identity/issues/1422\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"6573080979","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T07:12:39","Actor":"f1xxxer","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2103#issuecomment-328438161","RelatedDescription":"Commented on issue \"Asp.Net Core 2.0 Jwt Bearer Authentication works only for first request\" (#2103) at aspnet/Home","RelatedBody":"@lorenz31 yes, i have a web api project, can't show my repo though. Any way, assuming that you have updated everything to 2nd version, in StartUp.cs you need to configure your Jwt Authentication this way:\r\n\r\n- in ConfigureServices method\r\n\r\n services.AddAuthentication(o =>\r\n            {\r\n                o.DefaultAuthenticateScheme = JwtBearerDefaults.AuthenticationScheme;\r\n                o.DefaultChallengeScheme = JwtBearerDefaults.AuthenticationScheme;\r\n            }).AddJwtBearer(options =>\r\n            {\r\n                options.Audience = \"your audience\";\r\n                options.ClaimsIssuer = \"claims issuer\";\r\n                options.TokenValidationParameters = new TokenValidationParameters\r\n                {\r\n                    ValidIssuer = \"claims issuer\",\r\n                    IssuerSigningKey = { your signing key }\r\n                };\r\n            });\r\n\r\n- in Configure\r\n\r\napp.UseAuthentication();\r\n\r\napp.UseMvc();\r\n\r\nit is important that UseAuthentication() is before UseMvc()\r\n\r\nhttps://github.com/aspnet/Announcements/issues/262 - here are some details, about Authentication changes"},{"Id":"6573009866","Type":"ForkEvent","CreatedAt":"2017-09-11T06:50:10","Actor":"abhishekd365","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/abhishekd365/Home","RelatedDescription":"Forked aspnet/Home to abhishekd365/Home","RelatedBody":null},{"Id":"6572961608","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T06:33:17","Actor":"grokky1","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2051#issuecomment-328429956","RelatedDescription":"Commented on issue \"How to disable application insights in asp.net core 2.0 preview? \" (#2051) at aspnet/Home","RelatedBody":"> davidfowl... this thread is about making app insights opt in instead of opt out\r\n\r\nAgreed, we need to focus on that, or we'll get bogged down in too many problems and not solve anything.\r\n\r\n(...folks maybe we can discuss the other problems in a new issue?)"},{"Id":"6572859138","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T05:52:42","Actor":"davidfowl","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2051#issuecomment-328423108","RelatedDescription":"Commented on issue \"How to disable application insights in asp.net core 2.0 preview? \" (#2051) at aspnet/Home","RelatedBody":"Yes but it's specifically because we didn't target ARM as a first class scenario. ARM is currently in the \"it works if you make changes category\". It won't be that way forever but to claim that application insights in the reason for the issue is just incorrect.\r\n\r\nI get that this thread is about making app insights opt in instead of opt out and we need to re-evaluate the experience, but I haven't seen any actual proof of it being the problem in anything mentioned.  I'm all for helping, I just don't like the spreading of FUD."},{"Id":"6572849092","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T05:48:19","Actor":"nzain","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2051#issuecomment-328422429","RelatedDescription":"Commented on issue \"How to disable application insights in asp.net core 2.0 preview? \" (#2051) at aspnet/Home","RelatedBody":"I agree that arm is niche, but you should not say it \"works by default\". It works by default on windows-x64  for sure. I think the \"run dotnet anywhere\" idea is great, this is the success story of java. Personally, I love dotnet and tricky embedded projects turn into \"dotnet core opportunities\". The default templates should run anywhere, right?"},{"Id":"6572831525","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T05:40:41","Actor":"davidfowl","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2051#issuecomment-328421216","RelatedDescription":"Commented on issue \"How to disable application insights in asp.net core 2.0 preview? \" (#2051) at aspnet/Home","RelatedBody":"I'll wait for more clarification as I'm confused. \r\n\r\nThe arm issue is because we don't have a runtime store for linux arm (the workaround is also posted in the issue).\r\n\r\n@Falco20019 is this the issue you're running into?\r\n\r\n"},{"Id":"6572818635","Type":"WatchEvent","CreatedAt":"2017-09-11T05:34:42","Actor":"codetian","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6572816022","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T05:33:28","Actor":"nzain","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2051#issuecomment-328420065","RelatedDescription":"Commented on issue \"How to disable application insights in asp.net core 2.0 preview? \" (#2051) at aspnet/Home","RelatedBody":"@davidfowl Exact repro here: https://github.com/dotnet/core-setup/issues/3122\r\nNo project needed, the default web template pulls application insights as a dependency. But you need an arm device for exact repro.\r\n\r\nThe Raspian repository (Raspberry Pi default Linux distro) might have a different story (if you install via `apt-get`), but I think they have the same problem. Maybe someone else can confirm this - we don't have a raspberry pi and our buildroot distro is not debian.\r\n\r\n@Falco20019 has reported that it fails on Ubuntu 16.04, too - on x64 or arm architecture? You said, it worked when you installed the SDK. Maybe you can provide some more details: what did you install before (link)? If it fails on linux-x64 too, this is easier to reproduce for people without an arm device."},{"Id":"6571788138","Type":"IssuesEvent","CreatedAt":"2017-09-10T18:40:01","Actor":"lucassklp","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2193","RelatedDescription":"Opened issue \"Jwt Authorization .NET Core 2.0 always return Unauthorized (HTTP 401)\" (#2193) at aspnet/Home","RelatedBody":"Hello there,\r\n\r\nI'm trying to do a JWT authentication in my web api application. But it always returns HTTP 401 unauthorized when i try access a route marked with **[Authorize(\"Bearer\")]**\r\n\r\nFollows the code:\r\n\r\n**Startup.cs**\r\n\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {            \r\n            services.AddDbContext<DaoContext>(options => \r\n            {\r\n                options.UseMySql(Configuration.GetConnectionString(\"DefaultConnection\"));\r\n            });\r\n\r\n\r\n            services.AddCors(config =>\r\n            {\r\n                var policy = new CorsPolicy();\r\n                policy.Headers.Add(\"*\");\r\n                policy.Methods.Add(\"*\");\r\n                policy.Origins.Add(\"*\");\r\n                policy.SupportsCredentials = true;\r\n                config.AddPolicy(\"policy\", policy);\r\n            });\r\n\r\n\r\n            services.AddAuthorization(auth =>\r\n            {\r\n                auth.AddPolicy(\"Bearer\", new AuthorizationPolicyBuilder()\r\n                    .AddAuthenticationSchemes(JwtBearerDefaults.AuthenticationScheme‌​)\r\n                    .RequireAuthenticatedUser().Build());\r\n            });\r\n\r\n            services.AddAuthentication(options =>\r\n            {\r\n                options.DefaultScheme = JwtBearerDefaults.AuthenticationScheme;\r\n            })\r\n            .AddJwtBearer(options =>\r\n            {\r\n                options.TokenValidationParameters = new TokenValidationParameters()\r\n                {\r\n                    IssuerSigningKey = new RsaSecurityKey(new RSACryptoServiceProvider(2048).ExportParameters(true)),\r\n                    ValidAudience = \"Audience\",\r\n                    ValidIssuer = \"Issuer\",\r\n                    ValidateIssuerSigningKey = true,\r\n                    ValidateLifetime = true,\r\n                    ClockSkew = TimeSpan.FromMinutes(0)\r\n                };\r\n            });\r\n\r\n            services.AddMvc();\r\n        }\r\n\r\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n        {\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n            }\r\n\r\n            app.UseExceptionHandler(appBuilder =>\r\n            {\r\n                appBuilder.Use(async (context, next) =>\r\n                {\r\n                    var error = context.Features[typeof(IExceptionHandlerFeature)] as IExceptionHandlerFeature;\r\n\r\n                    //when authorization has failed, should retrun a json message to client\r\n                    if (error != null && error.Error is SecurityTokenExpiredException)\r\n                    {\r\n                        context.Response.StatusCode = 401;\r\n                        context.Response.ContentType = \"application/json\";\r\n\r\n                        await context.Response.WriteAsync(JsonConvert.SerializeObject(new\r\n                        {\r\n                            State = \"Unauthorized\",\r\n                            Msg = \"token expired\"\r\n                        }));\r\n                    }\r\n                    //when orther error, retrun a error message json to client\r\n                    else if (error != null && error.Error != null)\r\n                    {\r\n                        context.Response.StatusCode = 500;\r\n                        context.Response.ContentType = \"application/json\";\r\n                        await context.Response.WriteAsync(JsonConvert.SerializeObject(new\r\n                        {\r\n                            State = \"Internal Server Error\",\r\n                            Msg = error.Error.Message\r\n                        }));\r\n                    }\r\n                    //when no error, do next.\r\n                    else await next();\r\n                });\r\n            });\r\n            \r\n            app.UseCors(\"policy\");\r\n            app.UseAuthentication();\r\n            app.UseMvc();\r\n        }\r\n\r\n\r\n\r\n**TokenAuthController.cs**\r\n\r\n    [Route(\"api/[controller]\")]\r\n    public class TokenAuthController : Controller\r\n    {\r\n\r\n        private UserRepository userRepository;\r\n        public TokenAuthController()\r\n        {\r\n            this.userRepository = new UserRepository();\r\n        }\r\n\r\n\r\n        [HttpPost]\r\n        public string GetAuthToken([FromBody]User user)\r\n        {\r\n            var existUser = userRepository.Login(user.Email, user.Password); //new User(); //UserStorage.Users.FirstOrDefault(u => u.Username == user.Username && u.Password == user.Password);\r\n\r\n            if (existUser != null)\r\n            {\r\n                var requestAt = DateTime.Now;\r\n                var expiresIn = requestAt.Add(TimeSpan.FromMinutes(30));\r\n                var token = GenerateToken(existUser, expiresIn);\r\n\r\n                return JsonConvert.SerializeObject(new\r\n                {\r\n                    requestAt = requestAt,\r\n                    expiresIn = TimeSpan.FromMinutes(30).TotalSeconds,\r\n                    tokeyType = \"Bearer\",\r\n                    accessToken = token\r\n                });\r\n            }\r\n            else\r\n            {\r\n                return JsonConvert.SerializeObject(new \r\n                {\r\n                    Msg = \"Username or password is invalid\"\r\n                });\r\n            }\r\n        }\r\n\r\n        private string GenerateToken(User user, DateTime expires)\r\n        {\r\n            var handler = new JwtSecurityTokenHandler();\r\n\r\n            ClaimsIdentity identity = new ClaimsIdentity(\r\n                new GenericIdentity(user.Email, \"TokenAuth\"),\r\n                new[] {\r\n                    new Claim(\"ID\", user.ID.ToString())\r\n                }\r\n            );\r\n\r\n            var securityToken = handler.CreateToken(new SecurityTokenDescriptor\r\n            {\r\n                \r\n                Issuer = \"Issuer\",\r\n                Audience = \"Audience\",\r\n                SigningCredentials = new SigningCredentials(new RsaSecurityKey(new RSACryptoServiceProvider(2048).ExportParameters(true)), SecurityAlgorithms.RsaSha256Signature),\r\n                Subject = identity,\r\n                Expires = expires,\r\n                NotBefore = DateTime.Now.Subtract(TimeSpan.FromMinutes(30))\r\n            });\r\n            return handler.WriteToken(securityToken);\r\n        }\r\n\r\n        [HttpGet]\r\n        [Authorize(\"Bearer\")]\r\n        public string GetUserInfo()\r\n        {\r\n            var claimsIdentity = User.Identity as ClaimsIdentity;\r\n\r\n            return JsonConvert.SerializeObject(new \r\n            {\r\n                UserName = claimsIdentity.Name\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n**ValuesController.cs**\r\n\r\n    [Authorize(\"Bearer\")]\r\n    [Route(\"api/[controller]\")]\r\n    public class ValuesController : Controller\r\n    {\r\n        // GET api/values\r\n        [HttpGet]\r\n        public IEnumerable<User> Get()\r\n        {\r\n            UserRepository repository = new UserRepository();\r\n            return repository.SelectAll();\r\n        }\r\n    }\r\n\r\n\r\n**HTTP Request:**\r\n\r\nThe generation of token is working, as show the image below:\r\n![image](https://user-images.githubusercontent.com/5818762/30251757-9bca0434-963c-11e7-81f9-51bfba684cd8.png)\r\n\r\nThe token is passed as Header(\"Authorization\", \"Bearer \" + token); but the code returns 401.\r\n![image](https://user-images.githubusercontent.com/5818762/30251769-c4b10ad2-963c-11e7-8346-bdc94f6596a7.png)\r\n\r\n**In output, it throws a exception when i try GET /api/values**\r\n\r\nException thrown: 'Microsoft.IdentityModel.Tokens.SecurityTokenInvalidSignatureException' in System.IdentityModel.Tokens.Jwt.dll\r\n\r\n"},{"Id":"6571756948","Type":"IssueCommentEvent","CreatedAt":"2017-09-10T18:16:46","Actor":"davidfowl","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2051#issuecomment-328361209","RelatedDescription":"Commented on issue \"How to disable application insights in asp.net core 2.0 preview? \" (#2051) at aspnet/Home","RelatedBody":"If you can provide specific repro steps or even a project with repro steps that would be great! Don't forget to specify all of the environment details (dotnet --info works well for that).\r\n\r\nThe expectation is that everything works by default (which is what we've verified). If we missed something it would be good to know. This is the first time I've seen a complaint about the \"default\" experience not working. I can't even reproduce it myself but I'm sure I'm missing some specific detail that was left out."},{"Id":"6571093263","Type":"IssueCommentEvent","CreatedAt":"2017-09-10T09:39:54","Actor":"Falco20019","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2051#issuecomment-328331329","RelatedDescription":"Commented on issue \"How to disable application insights in asp.net core 2.0 preview? \" (#2051) at aspnet/Home","RelatedBody":"I tried it on Ubuntu 16.04 and it showed a error message that the DLL is missing in the store. So it's definetly not working. I can't copy the message since I already have the SDK installed right now, but it should be pretty easy to reproduce."},{"Id":"6571090718","Type":"IssueCommentEvent","CreatedAt":"2017-09-10T09:37:27","Actor":"nzain","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2051#issuecomment-328331215","RelatedDescription":"Commented on issue \"How to disable application insights in asp.net core 2.0 preview? \" (#2051) at aspnet/Home","RelatedBody":"Not correct. Does not work, when the runtime does not have the dll (runtime\nstore). This is the case for linux-arm RID, to name one example. As others\nhave said, it fails with dll not found error.\n\nAm 10.09.2017 10:38 schrieb \"David Fowler\" <notifications@github.com>:\n\n> Yes and it works. Like I said earlier the dependency is always included,\n> and it does nothing until something lights it up.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/aspnet/Home/issues/2051#issuecomment-328328232>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ANUK-3BK2phWmuA45xY__m7nq1cbya0Tks5sg6AQgaJpZM4N0O32>\n> .\n>\n"},{"Id":"6571017433","Type":"IssueCommentEvent","CreatedAt":"2017-09-10T08:38:22","Actor":"davidfowl","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2051#issuecomment-328328232","RelatedDescription":"Commented on issue \"How to disable application insights in asp.net core 2.0 preview? \" (#2051) at aspnet/Home","RelatedBody":"Yes and it works. Like I said earlier the dependency is always included, and it does nothing until something lights it up."},{"Id":"6571014817","Type":"IssueCommentEvent","CreatedAt":"2017-09-10T08:35:48","Actor":"Falco20019","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2051#issuecomment-328328130","RelatedDescription":"Commented on issue \"How to disable application insights in asp.net core 2.0 preview? \" (#2051) at aspnet/Home","RelatedBody":"Just create a new ASP.NET Core 2.0 Web-Application using the empty template. You get a minimal csproj like this:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <Folder Include=\"wwwroot\\\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nNow publish the project to a directory and look into the generated `.deps.json` file. `Microsoft.ApplicationInsights` will be included in it, no matter what I include in the launchSettings."},{"Id":"6571011755","Type":"WatchEvent","CreatedAt":"2017-09-10T08:32:50","Actor":"t13ka","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6571008651","Type":"IssueCommentEvent","CreatedAt":"2017-09-10T08:29:59","Actor":"davidfowl","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2051#issuecomment-328327861","RelatedDescription":"Commented on issue \"How to disable application insights in asp.net core 2.0 preview? \" (#2051) at aspnet/Home","RelatedBody":"I'm not sure how the 2 things are connected. Can you provide an end to end sample with repro steps and the full error message."},{"Id":"6571006577","Type":"IssueCommentEvent","CreatedAt":"2017-09-10T08:27:52","Actor":"Falco20019","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2051#issuecomment-328327740","RelatedDescription":"Commented on issue \"How to disable application insights in asp.net core 2.0 preview? \" (#2051) at aspnet/Home","RelatedBody":"The problem, is that I only have the runtime installed on the server and therefore get an `assembly specified in the dependencies manifest was not found` message."}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"6578065324","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T05:27:22","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/848#issuecomment-328740429","RelatedDescription":"Commented on issue \"No-cache does not seem to work for IE\" (#848) at aspnet/SignalR","RelatedBody":"I can see it. No idea yet what's causing it because IE hangs due to the tight loop."},{"Id":"6578060927","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T05:25:25","Actor":"Marcelh1983","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/848#issuecomment-328740083","RelatedDescription":"Commented on issue \"No-cache does not seem to work for IE\" (#848) at aspnet/SignalR","RelatedBody":"Thanks! Can you also reproduce the ie11 long polling error? Click on a icon and wait like 1 minute. Any idea what the problem could be?"},{"Id":"6578047877","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T05:19:38","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/848#issuecomment-328739098","RelatedDescription":"Commented on issue \"No-cache does not seem to work for IE\" (#848) at aspnet/SignalR","RelatedBody":"Websockets don't work because you pass relative URL: \r\n![image](https://user-images.githubusercontent.com/1438884/30309227-1d35fc78-973f-11e7-8c74-b91e7c1cd4d4.png)\r\n\r\nI just merged a change where relative urls are resolved so you need to update the client or pass full url. \r\n\r\n"},{"Id":"6578033682","Type":"WatchEvent","CreatedAt":"2017-09-12T05:12:55","Actor":"telkomops","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/SignalR","RelatedBody":null},{"Id":"6578016473","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T05:04:41","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/848#issuecomment-328736910","RelatedDescription":"Commented on issue \"No-cache does not seem to work for IE\" (#848) at aspnet/SignalR","RelatedBody":"Can you use non-minimized version? It is easier to debug because the line number will point to the location of the error. I wonder if the issue is that the url does not start with `ws://`/`wss://`. Can you set a breakpoint on this line and see what the url is and if it does not contain the protocol (`ws`) what url was passed to the transport?"},{"Id":"6577992089","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T04:52:38","Actor":"Marcelh1983","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/848#issuecomment-328735375","RelatedDescription":"Commented on issue \"No-cache does not seem to work for IE\" (#848) at aspnet/SignalR","RelatedBody":"Other thing, but maybe that's another issue is that it uses long polling on azure:\r\n\r\n![socketfail](https://user-images.githubusercontent.com/3284645/30308566-86ec7c7c-9786-11e7-968c-50b7fce149f3.png)\r\n\r\nLocally it connects using websockets"},{"Id":"6577983904","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T04:48:35","Actor":"Marcelh1983","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/848#issuecomment-328734894","RelatedDescription":"Commented on issue \"No-cache does not seem to work for IE\" (#848) at aspnet/SignalR","RelatedBody":"Thanks for having a look. I still get the error but maybe it is related to something else. I now use the es5 javascript files from the npm package. \r\n\r\nI deployed in here: http://signalr-core-example.azurewebsites.net\r\nIn Internet Explorer 11 it hangs, if I'm using long polling it keeps sending requests to the server immediately. On Azure it freezes for a while and after a while sending these authentication requests\r\n\r\n![ie-calls](https://user-images.githubusercontent.com/3284645/30308542-61e1f740-9786-11e7-83dd-2dc579fe4bc6.png)\r\n"},{"Id":"6577953774","Type":"IssuesEvent","CreatedAt":"2017-09-12T04:33:51","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/838","RelatedDescription":"Closed issue \"Simplify javascript client wire up to http\" (#838) at aspnet/SignalR","RelatedBody":"https://github.com/davidfowl/SignalRCoreAlphaSample/blob/350420c3b075c02e2ae31431e0f698072fcfe721/Sample/wwwroot/index.html#L9-L10\r\n\r\n\r\nI think we're going to have to support defaulting the IConnection impl to HttpConnection in the javascript client.\r\n\r\nBasically this:\r\n\r\nhttps://github.com/aspnet/SignalR/blob/eec4b33cff09382285766844b8054d3e65fa1131/client-ts/Microsoft.AspNetCore.SignalR.Client.TS/HubConnection.ts#L31\r\n\r\nWe accept string url or IConnection.\r\n\r\n```typescript\r\n constructor(connection: IConnection | string, options: IHubConnectionOptions = {}) { \r\n```\r\n\r\nOn top of that, we should support relative paths that will default to document.blah (if available, we can just detect if there's a document and if not, throw for the nodejs scenario). Basically making it so we don't have to do this:\r\n\r\nhttps://github.com/davidfowl/SignalRCoreAlphaSample/blob/350420c3b075c02e2ae31431e0f698072fcfe721/Sample/wwwroot/index.html#L9\r\n\r\nDoing those 2 things will let us do:\r\n\r\n```js\r\nlet connection = new signalR.HubConnection('/chat');\r\n```"},{"Id":"6577953770","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T04:33:51","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/838#issuecomment-328733243","RelatedDescription":"Commented on issue \"Simplify javascript client wire up to http\" (#838) at aspnet/SignalR","RelatedBody":"Fixed in bb79a9760c7052622bbc5aaeabb9fe7a600b9b84 and 67b2b27ac9573d6b453cef1a53efbcc22048c12e"},{"Id":"6577952754","Type":"IssuesEvent","CreatedAt":"2017-09-12T04:33:22","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/825","RelatedDescription":"Closed issue \"Make it easier to create HubConnections in ts/js\" (#825) at aspnet/SignalR","RelatedBody":"Currently the user needs to [pass an http connection when creating HubConnection](https://github.com/aspnet/SignalR/blob/269e1d1b5e451844a7d9bb06e9a22d1473e010f4/client-ts/Microsoft.AspNetCore.SignalR.Test.Server/wwwroot/js/hubConnectionTests.js#L14). We could move this to options and create the HttpConnection for the user automatically. We could combine options so that they can pass only one options object for both HubConnection and HttpConnection. \r\n\r\nCon: It would kind of blur the separation we have between HubConnection and HttpConnection."},{"Id":"6577952748","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T04:33:22","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/825#issuecomment-328733179","RelatedDescription":"Commented on issue \"Make it easier to create HubConnections in ts/js\" (#825) at aspnet/SignalR","RelatedBody":"Fixed in bb79a9760c7052622bbc5aaeabb9fe7a600b9b84"},{"Id":"6577950431","Type":"IssuesEvent","CreatedAt":"2017-09-12T04:32:11","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/845","RelatedDescription":"Closed issue \"JS client does not work with IE9 and IE10\" (#845) at aspnet/SignalR","RelatedBody":"@moozzyk has the details."},{"Id":"6577950427","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T04:32:11","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/845#issuecomment-328733051","RelatedDescription":"Commented on issue \"JS client does not work with IE9 and IE10\" (#845) at aspnet/SignalR","RelatedBody":"Fixed in 54c71c4c103e0406e5f6b8ee39c1a3e5e93b61de"},{"Id":"6577948635","Type":"PushEvent","CreatedAt":"2017-09-12T04:31:17","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/compare/ef4da90c91d846ee5af29c32b7878da3aa76d887...05573198701292cc873765898cebacd6362ee0e0","RelatedDescription":"Pushed to refs/heads/dev at aspnet/SignalR","RelatedBody":null},{"Id":"6577946789","Type":"PullRequestEvent","CreatedAt":"2017-09-12T04:30:26","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/852","RelatedDescription":"Merged pull request \"Making MsgPack work in IE10\" (#852) at aspnet/SignalR","RelatedBody":"The tests are failing on this single thing. Once changed they pass."},{"Id":"6577946763","Type":"PushEvent","CreatedAt":"2017-09-12T04:30:25","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/compare/393ab6a4f03b68d2a55336fc7ccf8c89f7c546ae...abd669849d6ee7ef6b8854b6f3d8840757e14f47","RelatedDescription":"Pushed to refs/heads/rel/1.0.0-alpha1 at aspnet/SignalR","RelatedBody":null},{"Id":"6577946755","Type":"PullRequestEvent","CreatedAt":"2017-09-12T04:30:25","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/851","RelatedDescription":"Merged pull request \"Replacing Cache-Control header with nonce\" (#851) at aspnet/SignalR","RelatedBody":"Makes long polling work on IE10 and IE9\r\n\r\nFixes: #845"},{"Id":"6577946745","Type":"PullRequestEvent","CreatedAt":"2017-09-12T04:30:24","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/850","RelatedDescription":"Merged pull request \"Pawelka/ts hubconn create\" (#850) at aspnet/SignalR","RelatedBody":"Fixes: https://github.com/aspnet/SignalR/issues/838 and #825"},{"Id":"6577915820","Type":"PushEvent","CreatedAt":"2017-09-12T04:14:50","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/compare/f8bfcbfb88c91565c588d726abc8d40cbc82c484...abd669849d6ee7ef6b8854b6f3d8840757e14f47","RelatedDescription":"Pushed to refs/heads/pawelka/ts-IE10-msgpack at aspnet/SignalR","RelatedBody":null},{"Id":"6577911592","Type":"PushEvent","CreatedAt":"2017-09-12T04:12:40","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/compare/8cc5d93905ea46b9695ce21e856af1e4c96f3b78...54c71c4c103e0406e5f6b8ee39c1a3e5e93b61de","RelatedDescription":"Pushed to refs/heads/pawelka/ts-nonce at aspnet/SignalR","RelatedBody":null},{"Id":"6577902638","Type":"PushEvent","CreatedAt":"2017-09-12T04:08:15","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/compare/57dde640b4711cc59509f4cde82c9fde372db335...67b2b27ac9573d6b453cef1a53efbcc22048c12e","RelatedDescription":"Pushed to refs/heads/pawelka/ts-hubconn-create at aspnet/SignalR","RelatedBody":null},{"Id":"6577659656","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-12T02:26:08","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/pull/851#discussion_r138238886","RelatedDescription":"Commented on pull request \"Replacing Cache-Control header with nonce\" (#851) at aspnet/SignalR","RelatedBody":"OK"},{"Id":"6577657372","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-12T02:25:09","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/pull/850#discussion_r138238788","RelatedDescription":"Commented on pull request \"Pawelka/ts hubconn create\" (#850) at aspnet/SignalR","RelatedBody":"👍 "},{"Id":"6577654176","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-12T02:23:52","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/pull/850#discussion_r138238628","RelatedDescription":"Commented on pull request \"Pawelka/ts hubconn create\" (#850) at aspnet/SignalR","RelatedBody":"sure"},{"Id":"6577653307","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-12T02:23:28","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/pull/851#discussion_r138238581","RelatedDescription":"Commented on pull request \"Replacing Cache-Control header with nonce\" (#851) at aspnet/SignalR","RelatedBody":"why? it's not needed anymore and because the url is now different every time nothing on the way should cache anything either."},{"Id":"6577648332","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-12T02:21:37","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/pull/850#discussion_r138238383","RelatedDescription":"Commented on pull request \"Pawelka/ts hubconn create\" (#850) at aspnet/SignalR","RelatedBody":"Cannot resolve \"relative url\""},{"Id":"6577625145","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-12T02:12:12","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/pull/851#discussion_r138237469","RelatedDescription":"Commented on pull request \"Replacing Cache-Control header with nonce\" (#851) at aspnet/SignalR","RelatedBody":"Keep this?"},{"Id":"6577440987","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T00:56:28","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/848#issuecomment-328699802","RelatedDescription":"Commented on issue \"No-cache does not seem to work for IE\" (#848) at aspnet/SignalR","RelatedBody":"Closing as no repro."},{"Id":"6577440986","Type":"IssuesEvent","CreatedAt":"2017-09-12T00:56:28","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/848","RelatedDescription":"Closed issue \"No-cache does not seem to work for IE\" (#848) at aspnet/SignalR","RelatedBody":"As per: https://github.com/aspnet/SignalR/commit/325c909dffcd3cd5e7b174869a29c78d00474564#commitcomment-24230784\r\n\r\n> I'm using the latest version. I added all ts files in my project and compiled it to es5. I also tried to use the es5 files in the npm package but same result.\r\n>\r\n> I created a repository with a subset of our project, with the fallback (I commented out to test the IE longpolling error). If you start the backend and frontend you'll see IE keep sending connection requests.\r\n>\r\n> Other issue that if I enable my fallback method it still uses longpolling on Azure while it uses Websockets locally. Will deploy this example on Azure tomorrow.\r\n>\r\n> https://github.com/Marcelh1983/signalr-example\r\n> signalR service: https://github.com/Marcelh1983/signalr-example/blob/master/Frontend/src/app/shared/services/signalr.service.ts"},{"Id":"6577440340","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T00:56:12","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/848#issuecomment-328699758","RelatedDescription":"Commented on issue \"No-cache does not seem to work for IE\" (#848) at aspnet/SignalR","RelatedBody":"My bad - I did not notice that the backend server was running on port 25602.  Once I fixed I was able to run the sample in IE11 and Chrome and they communicated with each other just fine and IE did not cache xhr requests. I think you have a cached script somewhere.\r\n\r\n![image](https://user-images.githubusercontent.com/1438884/30303084-6007b9da-971a-11e7-9d9e-0a94128d67fa.png)\r\n"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"6577789370","Type":"WatchEvent","CreatedAt":"2017-09-12T03:18:31","Actor":"DrewNull","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Mvc","RelatedBody":null},{"Id":"6577451900","Type":"WatchEvent","CreatedAt":"2017-09-12T01:01:06","Actor":"yhy729","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Mvc","RelatedBody":null},{"Id":"6577375484","Type":"PushEvent","CreatedAt":"2017-09-12T00:28:30","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Mvc/compare/307bfaf7f11549702b49341ca2fa0e75db2f924f...b5902c23866008f1e6ee8e4f3ad3ab95aef23dba","RelatedDescription":"Pushed to refs/heads/kichalla/enumtype-binding at aspnet/Mvc","RelatedBody":null},{"Id":"6577346690","Type":"IssuesEvent","CreatedAt":"2017-09-12T00:16:19","Actor":"Eilon","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6803","RelatedDescription":"Closed issue \"SetMediaTypeMappingFormat doesn't recoginize first overload\" (#6803) at aspnet/Mvc","RelatedBody":"![MediaTypeHeaderValue.Parse error](https://i.imgur.com/dbB6pBU.png)\r\n"},{"Id":"6577346640","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T00:16:17","Actor":"Eilon","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6803#issuecomment-328694235","RelatedDescription":"Commented on issue \"SetMediaTypeMappingFormat doesn't recoginize first overload\" (#6803) at aspnet/Mvc","RelatedBody":"Closing because this does not appear to be a bug in MVC.\r\n\r\n@davidfowl - yeah the current situation isn't ideal, but renaming the types is a huge cost for customers. I don't think we've seen this problem much at all to justify a drastic change."},{"Id":"6577343417","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-12T00:14:51","Actor":"Eilon","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6801#discussion_r138224596","RelatedDescription":"Commented on pull request \"Added new extension methods to configure all MVC localization services\" (#6801) at aspnet/Mvc","RelatedBody":"I'm ok with any of:\r\n1. Add overloads for every combo\r\n2. Add all overloads except those that have a reasonable justification to not include\r\n\r\nI don't feel strongly about which of those two we go with."},{"Id":"6577287856","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-11T23:52:20","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6808#discussion_r138221685","RelatedDescription":"Commented on pull request \"Allow BindPropertyAttribute to be applied on PageModel\" (#6808) at aspnet/Mvc","RelatedBody":"The VS rules only complains if it's a single line statement. I can change it back if the difference is jarring."},{"Id":"6577284125","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-11T23:40:57","Actor":"ajaybhargavb","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6808#discussion_r138220037","RelatedDescription":"Commented on pull request \"Allow BindPropertyAttribute to be applied on PageModel\" (#6808) at aspnet/Mvc","RelatedBody":"propeerty => property"},{"Id":"6577284123","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-11T23:40:06","Actor":"ajaybhargavb","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6808#discussion_r138219895","RelatedDescription":"Commented on pull request \"Allow BindPropertyAttribute to be applied on PageModel\" (#6808) at aspnet/Mvc","RelatedBody":"I don't mind it but it's weird to see `get` and `set` use different code styling."},{"Id":"6577256678","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-11T23:39:48","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6808#discussion_r138219851","RelatedDescription":"Commented on pull request \"Allow BindPropertyAttribute to be applied on PageModel\" (#6808) at aspnet/Mvc","RelatedBody":"Can you add a test where this inherits from `PageModel`. It's **critical** that we don't automatically make all of the base-class properties bindable by default"},{"Id":"6577254696","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T23:39:01","Actor":"ryanbrandenburg","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6696#issuecomment-328688718","RelatedDescription":"Commented on issue \"Ability to translate all DataAnnotations without specifiing ErrorMessage\" (#6696) at aspnet/Mvc","RelatedBody":"I can't think of any technical reason why that wouldn't work, but I'm kind of wary of adding magic keys which do specific things."},{"Id":"6577186567","Type":"PullRequestEvent","CreatedAt":"2017-09-11T23:13:12","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6808","RelatedDescription":"Opened pull request \"Allow BindPropertyAttribute to be applied on PageModel\" (#6808) at aspnet/Mvc","RelatedBody":"Fixes #6653"},{"Id":"6577186161","Type":"PushEvent","CreatedAt":"2017-09-11T23:13:02","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Mvc/compare/ea9892ce82cbc45d34b0440bfe2a315eebbbf39f...29f438c08e7877e76b4b6c2018ffea01fa51c9c1","RelatedDescription":"Pushed to refs/heads/prkrishn/6653 at aspnet/Mvc","RelatedBody":null},{"Id":"6577183428","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T23:11:58","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6565#issuecomment-328684494","RelatedDescription":"Commented on issue \"TagHelperOutput extension methods for class value manipulation\" (#6565) at aspnet/Mvc","RelatedBody":"Sounds like the code has a bug. Shouldn't be possible for `HtmlEncode[[btn]]` to become `btn` before the second `AddClass(...)` call for example."},{"Id":"6577183084","Type":"PushEvent","CreatedAt":"2017-09-11T23:11:49","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Mvc/compare/693723c2cb0dbf708da2a6d5d66f3771f30df405...ea9892ce82cbc45d34b0440bfe2a315eebbbf39f","RelatedDescription":"Pushed to refs/heads/prkrishn/6653 at aspnet/Mvc","RelatedBody":null},{"Id":"6577180940","Type":"PushEvent","CreatedAt":"2017-09-11T23:10:58","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Mvc/compare/49faa38096ab5934766e1eb24e035d2e5a3519cb...693723c2cb0dbf708da2a6d5d66f3771f30df405","RelatedDescription":"Pushed to refs/heads/prkrishn/6653 at aspnet/Mvc","RelatedBody":null},{"Id":"6577178863","Type":"CreateEvent","CreatedAt":"2017-09-11T23:10:12","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Mvc/tree/prkrishn/6653","RelatedDescription":"Created branch \"prkrishn/6653\" at aspnet/Mvc","RelatedBody":null},{"Id":"6577167032","Type":"WatchEvent","CreatedAt":"2017-09-11T23:05:46","Actor":"tparviainen","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Mvc","RelatedBody":null},{"Id":"6577149415","Type":"IssuesEvent","CreatedAt":"2017-09-11T22:59:30","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/3173","RelatedDescription":"Closed issue \"Subresource Integrity TagHelper [Discuss]\" (#3173) at aspnet/Mvc","RelatedBody":"Something for ScriptTagHelper and maybe a StyleSheetTagHelper?\n\n> The website author includes an integrity attribute on JavaScript and CSS tags, specifying the cryptographic digest of the resource being loaded from the third party. When the browser fetches the resource, it computes the file's digest and compares it with the value from the integrity attribute. If the values match, the resource is loaded. Otherwise, the browser refuses to load the resource.\n\nW3C Working Draft http://www.w3.org/TR/SRI/\n\nGitHub blog on it: http://githubengineering.com/subresource-integrity/\n\nCould have a compute hash with local file type approach\n"},{"Id":"6577149364","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T22:59:30","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/issues/3173#issuecomment-328682454","RelatedDescription":"Commented on issue \"Subresource Integrity TagHelper [Discuss]\" (#3173) at aspnet/Mvc","RelatedBody":"Unclear what we could do that was correct and worked at runtime."},{"Id":"6577139163","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T22:56:09","Actor":"Elfocrash","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6565#issuecomment-328681851","RelatedDescription":"Commented on issue \"TagHelperOutput extension methods for class value manipulation\" (#6565) at aspnet/Mvc","RelatedBody":"@dougbu on this one `new HtmlString($\"{currentClassValue} {encodedClassValue}\")` shouldn't we encode `currentClassValue` as well?\r\nI noticed in the tests that if I do `AddClass(\"btn\", _encoder)` then the result is `HtmlEncode[[btn]]` but if I do `AddClass(\"btn\", _encoder)` and then `AddClass(\"btn-primary\", _encoder)` then the result is `btn HtmlEncode[[btn-primary]]` which doesn't sound correct right?\r\n\r\nAlso if my current class is `btn btn-primary` and i do a  `RemoveClass(\"btn-primary\", _encoder)` will also fail because it tries to remove `HtmlEncode[[btn-primary]]` from `btn btn-primary`."},{"Id":"6577136909","Type":"IssuesEvent","CreatedAt":"2017-09-11T22:55:23","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/3852","RelatedDescription":"Closed issue \"MVC tag helpers are inconsistent about initially `Clear()`ing content\" (#3852) at aspnet/Mvc","RelatedBody":"Moving an issue mentioned in aspnet/Razor#621 over.\n\n> There's also a bug in how MVC uses `SetContent()`: Those tag helpers currently _assume_ `Content` is empty but should be clearing what other tag helpers have done.\n\nMVC tag helpers that change `Content`, `PostContent` or `PostElement` currently fall into two groups. These groups should be brought together as much as possible, consistently handling tag helpers that run earlier.\n1. Some e.g. `FormTagHelper`, `InputTagHelper`, `RenderAtEndOfFormTagHelper`, and `ValidationSummaryTagHelper` initially append. A couple (`LabelTagHelper` and `ValidationMessageTagHelper`) check `output.IsContentModified` before calling `content.SetContent()`, which also takes previous tag helpers into account (here, giving tag helpers that run before them complete control of the content).\n2. Others e.g. `LinkTagHelper`, `ScriptTagHelper` and `TextAreaTagHelper` start with a call to `content.SetContent()` to implicitly reset that content. A couple (`CacheTagHelper` and `EnvironmentTagHelper`) explicitly call `output.SuppressOutput()` to reset _all_ output content.\n\nDespite my words in aspnet/Razor#621, my suggestion is to remove all use of `SetContent()` in MVC tag helpers. `CacheTagHelper` and `EnvironmentTagHelper` are likely special cases (because they do not target HTML 5 elements) but Group 1 seems like the winner. (Other options include using `SetContent()` everywhere or consistently using `SetContent()` for `output.Content` and `Append[Html]()` for other `TagHelperOutput` properties.)\n\n/cc @DamianEdwards \n\nSide notes:\n1. No MVC tag helpers append to a `TagHelperOutput` property more than once. But `LinkTagHelper` and `ScrpitTagHelper` have a useless `DefaultTagHelperContent` that both always add to `PostElement`. Should instead use `PostElement` throughout.\n2. Can ignore MVC tag helpers e.g. `UrlResolutionTagHelper` that only change attributes.\n3. No MVC tag helpers change `PreContent` or `PreElement`.\n4. No MVC tag helpers directly call `content.Clear()`.\n"},{"Id":"6577136905","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T22:55:23","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/issues/3852#issuecomment-328681714","RelatedDescription":"Commented on issue \"MVC tag helpers are inconsistent about initially `Clear()`ing content\" (#3852) at aspnet/Mvc","RelatedBody":"See #5713 for the `<textarea>` tag helper. Don't worry about losing the content of `<script>` elements when globbing."},{"Id":"6577114398","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T22:47:26","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/issues/4138#issuecomment-328680383","RelatedDescription":"Commented on issue \"Allow link/script tag helpers to generate cache bust for external files.\" (#4138) at aspnet/Mvc","RelatedBody":"We have chosen not to change the in-box tag helpers to read from external sites."},{"Id":"6577107977","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T22:45:13","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/issues/4157#issuecomment-328679992","RelatedDescription":"Commented on issue \"Providing Default Values for TagHelper Properties\" (#4157) at aspnet/Mvc","RelatedBody":"Given the way tag helpers work, we don't think there's anything we can do here."},{"Id":"6577107974","Type":"IssuesEvent","CreatedAt":"2017-09-11T22:45:13","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/4157","RelatedDescription":"Closed issue \"Providing Default Values for TagHelper Properties\" (#4157) at aspnet/Mvc","RelatedBody":"If I have the following tag helper for implementing [Subresource-Integrity](https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity) (Available soon [here](https://visualstudiogallery.msdn.microsoft.com/6cf50a48-fc1e-4eaf-9e82-0b2a6705ca7d) for those interested):\n\n```\n[Flags]\npublic enum SubresourceIntegrityHashAlgorithm\n{\n    SHA256 = 1,\n    SHA384 = 2,\n    SHA512 = 4\n}  \n\n[HtmlTargetElement(\"script\", Attributes = \"asp-subresource-integrity\")]\npublic class SubresourceIntegrityTagHelper : TagHelper\n{\n    [HtmlAttributeName(\"asp-subresource-integrity\")]\n    public SubresourceIntegrityHashAlgorithm HashAlgorithms { get; set; } \n        = SubresourceIntegrityHashAlgorithm.SHA256;\n\n    public override void Process(TagHelperContext context, TagHelperOutput output)\n    {\n        // ...\n    }\n}\n```\n\nI would like to use the default value I have given on the property above so that I do not have to provide the property with a value when using it:\n\n```\n<script asp-subresource-integrity src=\"...\"></script>\n```\n\nInstead of:\n\n```\n<script asp-subresource-integrity=\"SubresourceIntegrityHashAlgorithm.SHA256\" src=\"...\"></script>\n```\n\nRelated [StackOverflow](https://stackoverflow.com/questions/35623845/default-values-for-asp-net-core-taghelper-properties) question.\n"},{"Id":"6577100278","Type":"IssuesEvent","CreatedAt":"2017-09-11T22:42:35","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/5210","RelatedDescription":"Closed issue \"[Feature request] Tag helper to inject a class as a validation summary\" (#5210) at aspnet/Mvc","RelatedBody":"Like this one: https://github.com/OrchardCMS/Orchard2/blob/master/src/Orchard.DisplayManagement/TagHelpers/ValidationClassFor.cs\n\nMotivation:\nIn bootstrap, form groups need a custom class when there is a validation error in one of the inputs of the group. There is no way to inject a generic validation error class to an existing tag with the current OOB tag helpers. There are workarounds, but this need might happen often if as people try to target bootstrap with MVC.\n"},{"Id":"6577100269","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T22:42:35","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/issues/5210#issuecomment-328679519","RelatedDescription":"Commented on issue \"[Feature request] Tag helper to inject a class as a validation summary\" (#5210) at aspnet/Mvc","RelatedBody":"As discussed&hellip;"},{"Id":"6577083084","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T22:36:41","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/issues/5713#issuecomment-328678456","RelatedDescription":"Commented on issue \"TextAreaTagHelper ignores default value within textarea tags\" (#5713) at aspnet/Mvc","RelatedBody":"Seems likely the check [here](https://github.com/aspnet/Mvc/blob/c27b07ef3f8b07dfe1d1de38a8d7bf2d6a9298f4/src/Microsoft.AspNetCore.Mvc.TagHelpers/TextAreaTagHelper.cs#L68) just never applies. Our issue is making changes here without breaking back-compatibility. Agree however that this isn't consistent with the `<input/>`.\r\n\r\nOne approach would be a new property on the `<textarea>` tag helper that users can set using a tag helper initializer."},{"Id":"6577019583","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-11T22:16:19","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6807#discussion_r138206895","RelatedDescription":"Commented on pull request \"[Design] Introduce opinionated API defaults.\" (#6807) at aspnet/Mvc","RelatedBody":"We don't need this check. You already told us its a 404"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"6577669418","Type":"WatchEvent","CreatedAt":"2017-09-12T02:29:57","Actor":"390493386","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Identity","RelatedBody":null},{"Id":"6577406728","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T00:41:42","Actor":"jcmordan","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1423#issuecomment-328697789","RelatedDescription":"Commented on issue \"JWT Bearer Authentication : Set-Cookie in header response filled\" (#1423) at aspnet/Identity","RelatedBody":"@hey-red @HaoK  What do you mean by:\r\n\r\n> With JWT you will have to manage the authentication yourself. \r\n\r\nI can't use _signInManager.PasswordSignInAsync anymore? what is the alternative?"},{"Id":"6577166380","Type":"WatchEvent","CreatedAt":"2017-09-11T23:05:30","Actor":"tparviainen","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Identity","RelatedBody":null},{"Id":"6576536675","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T20:14:02","Actor":"jcmordan","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1376#issuecomment-328645336","RelatedDescription":"Commented on issue \"Using Identity with JWT Authentication\" (#1376) at aspnet/Identity","RelatedBody":"Hi, I know this is closed but I'm getting this error: \r\n\r\n```\r\nInvalidOperationException: No IAuthenticationSignInHandler is configured to handle sign in for the scheme: Identity.Application\r\nMicrosoft.AspNetCore.Authentication.AuthenticationService+<SignInAsync>d__13.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Identity.SignInManager+<SignInAsync>d__30.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Identity.SignInManager+<SignInOrTwoFactorAsync>d__52.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.Identity.SignInManager+<PasswordSignInAsync>d__33.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.Identity.SignInManager+<PasswordSignInAsync>d__34.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n```"},{"Id":"6575910351","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T17:48:06","Actor":"lugrugzo","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1421#issuecomment-328605574","RelatedDescription":"Commented on issue \"Support for two-factor when using Jwt\" (#1421) at aspnet/Identity","RelatedBody":"Are there any plans to integrate it to Jwt authentication?"},{"Id":"6575875030","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T17:40:12","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1421#issuecomment-328603369","RelatedDescription":"Commented on issue \"Support for two-factor when using Jwt\" (#1421) at aspnet/Identity","RelatedBody":"The current TFA support is only intended for cookies flows"},{"Id":"6575867654","Type":"IssuesEvent","CreatedAt":"2017-09-11T17:38:24","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1423","RelatedDescription":"Closed issue \"JWT Bearer Authentication : Set-Cookie in header response filled\" (#1423) at aspnet/Identity","RelatedBody":"Hello,\r\n\r\nI don't understand why i have a cookie filled in my response header while i use  JWT Bearer Authentication. And i can't find way how to configure correctly.\r\n\r\nWhen I authenticate on my webAPI, in my reponse i have :  \r\n`Set-Cookie: .AspNetCore.Identity.Application=CfDJ8KKk9DCF-3ZMv5e0QMpwpsulx6nT_6d68JTe0a8VPBM ...; path=/; samesite=lax; httponly\r\napi-supported-versions: 1\r\n`\r\n\r\nMy startup look like this : \r\n\r\nConfigure : \r\n\r\n```\r\napp.UseAuthentication();\r\napp.UseMvc();\r\n```\r\n\r\nConfigureServices : \r\n\r\n```\r\n           services.Configure<IdentityOptions>(options =>\r\n            {\r\n                // Password settings\r\n                options.Password.RequireDigit = true;\r\n                options.Password.RequiredLength = 16;\r\n                options.Password.RequireNonAlphanumeric = true;\r\n                options.Password.RequireUppercase = true;\r\n                options.Password.RequireLowercase = true;\r\n\r\n                // User settings\r\n                options.User.RequireUniqueEmail = true;\r\n            });\r\n\r\n            // Add framework services.\r\n            services.AddEntityFrameworkNpgsql()\r\n                .AddDbContext<ApplicationDbContext>(options => options.UseNpgsql(Configuration.GetConnectionString(\"ConnectionString\")));\r\n\r\n            services.AddIdentity<ApplicationUser, IdentityRole>()\r\n                .AddEntityFrameworkStores<ApplicationDbContext>()\r\n                .AddDefaultTokenProviders();\r\n\r\n            services.AddAuthentication(options =>\r\n                {\r\n                    options.DefaultScheme = JwtBearerDefaults.AuthenticationScheme;\r\n                    options.DefaultAuthenticateScheme = JwtBearerDefaults.AuthenticationScheme;\r\n                    options.DefaultChallengeScheme = JwtBearerDefaults.AuthenticationScheme;\r\n                })\r\n            .AddJwtBearer(options =>\r\n                {\r\n                    options.TokenValidationParameters = new AuthenticationConfiguration(Configuration).JwtTokenValidationParameters;\r\n                    options.SaveToken = true;\r\n                });\r\n\r\n```\r\n\r\nAnd for authenticate i use : \r\n```\r\nvar result = await _signInManager.PasswordSignInAsync(username, password, false, lockoutOnFailure: false);\r\n```\r\n\r\nIs there a way to have no cookie in my response header ?\r\n\r\nThx\r\n\r\n\r\n\r\n"},{"Id":"6575867644","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T17:38:23","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1423#issuecomment-328602897","RelatedDescription":"Commented on issue \"JWT Bearer Authentication : Set-Cookie in header response filled\" (#1423) at aspnet/Identity","RelatedBody":"Yep, dupe of #1376 "},{"Id":"6575813032","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T17:25:32","Actor":"hey-red","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1423#issuecomment-328599413","RelatedDescription":"Commented on issue \"JWT Bearer Authentication : Set-Cookie in header response filled\" (#1423) at aspnet/Identity","RelatedBody":"See https://github.com/aspnet/Identity/issues/1376\r\nWith JWT you will have to manage the authentication yourself. \r\n"},{"Id":"6575797572","Type":"WatchEvent","CreatedAt":"2017-09-11T17:21:54","Actor":"FlavioDias97","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Identity","RelatedBody":null},{"Id":"6574937629","Type":"IssuesEvent","CreatedAt":"2017-09-11T14:33:05","Actor":"scottsauber","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1424","RelatedDescription":"Closed issue \"Difference between User.Identity.IsAuthenticated and SignInManager.IsSignedIn(User)?\" (#1424) at aspnet/Identity","RelatedBody":"What's the difference between `User.Identity.IsAuthenticated` and using like `SignInManager.IsSignedIn(User)`?  Is there any?\r\n\r\nWhy I'm asking - I'm not a huge fan of the new `@inject` keyword in Razor, mostly because of the same reasons why a lot of the JS frameworks are trending towards a unidirectional data flow.  So in the template, in /Shared/_LoginPartial I want to replace: `@inject SignInManager<ApplicationUser> SignInManager` and `SignInManager.IsSignedIn(User)` with something that doesn't use the inject keyword and was thinking about `User.Identity.IsAuthenticated`.\r\n\r\n**I looked through the source code of `IsSignedIn` and nothing stood out.  In my testing this appears to work fine.  Just wondering if there are some edge cases I'm not realizing.**\r\n\r\nBasically I want to turn this:\r\n```csharp\r\n@inject SignInManager<ApplicationUser> SignInManager\r\n@inject UserManager<ApplicationUser> UserManager\r\n\r\n@if (SignInManager.IsSignedIn(User))\r\n{\r\n    <form asp-area=\"\" asp-controller=\"Account\" asp-action=\"Logout\" method=\"post\" id=\"logoutForm\" class=\"navbar-right\">\r\n        <ul class=\"nav navbar-nav navbar-right\">\r\n            <li>\r\n                <a asp-area=\"\" asp-controller=\"Manage\" asp-action=\"Index\" title=\"Manage\">Hello @UserManager.GetUserName(User)!</a>\r\n            </li>\r\n            <li>\r\n                <button type=\"submit\" class=\"btn btn-link navbar-btn navbar-link\">Log out</button>\r\n            </li>\r\n        </ul>\r\n    </form>\r\n}\r\nelse\r\n{\r\n    <ul class=\"nav navbar-nav navbar-right\">\r\n        <li><a asp-area=\"\" asp-controller=\"Account\" asp-action=\"Register\">Register</a></li>\r\n        <li><a asp-area=\"\" asp-controller=\"Account\" asp-action=\"Login\">Log in</a></li>\r\n    </ul>\r\n}\r\n```\r\n\r\n**Into this:**\r\n``` csharp\r\n@if (User.Identity.IsAuthenticated)\r\n{\r\n    <form asp-area=\"\" asp-controller=\"Account\" asp-action=\"Logout\" method=\"post\" id=\"logoutForm\" class=\"navbar-right\">\r\n        <ul class=\"nav navbar-nav navbar-right\">\r\n            <li>\r\n                <a asp-area=\"\" asp-controller=\"Manage\" asp-action=\"Index\" title=\"Manage\">Hello @User.Identity.Name!</a>\r\n            </li>\r\n            <li>\r\n                <button type=\"submit\" class=\"btn btn-link navbar-btn navbar-link\">Log out</button>\r\n            </li>\r\n        </ul>\r\n    </form>\r\n}\r\nelse\r\n{\r\n    <ul class=\"nav navbar-nav navbar-right\">\r\n        <li><a asp-area=\"\" asp-controller=\"Account\" asp-action=\"Register\">Register</a></li>\r\n        <li><a asp-area=\"\" asp-controller=\"Account\" asp-action=\"Login\">Log in</a></li>\r\n    </ul>\r\n}\r\n```"},{"Id":"6574926650","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T14:31:01","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1424#issuecomment-328547548","RelatedDescription":"Commented on issue \"Difference between User.Identity.IsAuthenticated and SignInManager.IsSignedIn(User)?\" (#1424) at aspnet/Identity","RelatedBody":"User.IsAuthenticated will work even if the current user identity doesn't come from ASP.NET identity (for example a bearer token, or Integrated authentication). SignInManager is Identity only."},{"Id":"6574913656","Type":"IssuesEvent","CreatedAt":"2017-09-11T14:28:38","Actor":"scottsauber","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1424","RelatedDescription":"Opened issue \"Difference between User.Identity.IsAuthenticated and SignInManager.IsSignedIn(User)?\" (#1424) at aspnet/Identity","RelatedBody":"What's the difference between `User.Identity.IsAuthenticated` and using like `SignInManager.IsSignedIn(User)`?  Is there any?\r\n\r\nWhy I'm asking - I'm not a huge fan of the new `@inject` keyword in Razor, mostly because of the same reasons why a lot of the JS frameworks are trending towards a unidirectional data flow.  So in the template, in /Shared/_LoginPartial I want to replace: `@inject SignInManager<ApplicationUser> SignInManager` and `SignInManager.IsSignedIn(User)` with something that doesn't use the inject keyword and was thinking about `User.Identity.IsAuthenticated`.\r\n\r\n**I looked through the source code of `IsSignedIn` and nothing stood out.  In my testing this appears to work fine.  Just wondering if there are some edge cases I'm not realizing.**\r\n\r\nBasically I want to turn this:\r\n```csharp\r\n@inject SignInManager<ApplicationUser> SignInManager\r\n@inject UserManager<ApplicationUser> UserManager\r\n\r\n@if (SignInManager.IsSignedIn(User))\r\n{\r\n    <form asp-area=\"\" asp-controller=\"Account\" asp-action=\"Logout\" method=\"post\" id=\"logoutForm\" class=\"navbar-right\">\r\n        <ul class=\"nav navbar-nav navbar-right\">\r\n            <li>\r\n                <a asp-area=\"\" asp-controller=\"Manage\" asp-action=\"Index\" title=\"Manage\">Hello @UserManager.GetUserName(User)!</a>\r\n            </li>\r\n            <li>\r\n                <button type=\"submit\" class=\"btn btn-link navbar-btn navbar-link\">Log out</button>\r\n            </li>\r\n        </ul>\r\n    </form>\r\n}\r\nelse\r\n{\r\n    <ul class=\"nav navbar-nav navbar-right\">\r\n        <li><a asp-area=\"\" asp-controller=\"Account\" asp-action=\"Register\">Register</a></li>\r\n        <li><a asp-area=\"\" asp-controller=\"Account\" asp-action=\"Login\">Log in</a></li>\r\n    </ul>\r\n}\r\n```\r\n\r\n**Into this:**\r\n``` csharp\r\n@if (User.Identity.IsAuthenticated)\r\n{\r\n    <form asp-area=\"\" asp-controller=\"Account\" asp-action=\"Logout\" method=\"post\" id=\"logoutForm\" class=\"navbar-right\">\r\n        <ul class=\"nav navbar-nav navbar-right\">\r\n            <li>\r\n                <a asp-area=\"\" asp-controller=\"Manage\" asp-action=\"Index\" title=\"Manage\">Hello @User.Identity.Name!</a>\r\n            </li>\r\n            <li>\r\n                <button type=\"submit\" class=\"btn btn-link navbar-btn navbar-link\">Log out</button>\r\n            </li>\r\n        </ul>\r\n    </form>\r\n}\r\nelse\r\n{\r\n    <ul class=\"nav navbar-nav navbar-right\">\r\n        <li><a asp-area=\"\" asp-controller=\"Account\" asp-action=\"Index\">Register</a></li>\r\n        <li><a asp-area=\"\" asp-controller=\"Account\" asp-action=\"Index\">Log in</a></li>\r\n    </ul>\r\n}\r\n```"},{"Id":"6574586170","Type":"ForkEvent","CreatedAt":"2017-09-11T13:25:48","Actor":"hamdiahmedamin","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/hamdiahmedamin/Identity","RelatedDescription":"Forked aspnet/Identity to hamdiahmedamin/Identity","RelatedBody":null},{"Id":"6574344433","Type":"IssuesEvent","CreatedAt":"2017-09-11T12:32:12","Actor":"N41m0r","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1423","RelatedDescription":"Opened issue \"JWT Bearer Authentication : Set-Cookie in header response filled\" (#1423) at aspnet/Identity","RelatedBody":"Hello,\r\n\r\nI don't understand why i have a cookie filled in my response header while i use  JWT Bearer Authentication. And i can't find way how to configure correctly.\r\n\r\nWhen I authenticate on my webAPI, in my reponse i have :  \r\n`Set-Cookie: .AspNetCore.Identity.Application=CfDJ8KKk9DCF-3ZMv5e0QMpwpsulx6nT_6d68JTe0a8VPBM ...; path=/; samesite=lax; httponly\r\napi-supported-versions: 1\r\n`\r\n\r\nMy startup look like this : \r\n\r\nConfigure : \r\n\r\n```\r\napp.UseAuthentication();\r\napp.UseMvc();\r\n```\r\n\r\nConfigureServices : \r\n\r\n```\r\n           services.Configure<IdentityOptions>(options =>\r\n            {\r\n                // Password settings\r\n                options.Password.RequireDigit = true;\r\n                options.Password.RequiredLength = 16;\r\n                options.Password.RequireNonAlphanumeric = true;\r\n                options.Password.RequireUppercase = true;\r\n                options.Password.RequireLowercase = true;\r\n\r\n                // User settings\r\n                options.User.RequireUniqueEmail = true;\r\n            });\r\n\r\n            // Add framework services.\r\n            services.AddEntityFrameworkNpgsql()\r\n                .AddDbContext<ApplicationDbContext>(options => options.UseNpgsql(Configuration.GetConnectionString(\"ConnectionString\")));\r\n\r\n            services.AddIdentity<ApplicationUser, IdentityRole>()\r\n                .AddEntityFrameworkStores<ApplicationDbContext>()\r\n                .AddDefaultTokenProviders();\r\n\r\n            services.AddAuthentication(options =>\r\n                {\r\n                    options.DefaultScheme = JwtBearerDefaults.AuthenticationScheme;\r\n                    options.DefaultAuthenticateScheme = JwtBearerDefaults.AuthenticationScheme;\r\n                    options.DefaultChallengeScheme = JwtBearerDefaults.AuthenticationScheme;\r\n                })\r\n            .AddJwtBearer(options =>\r\n                {\r\n                    options.TokenValidationParameters = new AuthenticationConfiguration(Configuration).JwtTokenValidationParameters;\r\n                    options.SaveToken = true;\r\n                });\r\n\r\n```\r\n\r\nAnd for authenticate i use : \r\n`\r\nvar result = await _signInManager.PasswordSignInAsync(username, password, false, lockoutOnFailure: false);\r\n`\r\n\r\nIs there a way to have no cookie in my response header ?\r\n\r\nThx\r\n\r\n\r\n\r\n"},{"Id":"6573224711","Type":"IssuesEvent","CreatedAt":"2017-09-11T07:53:42","Actor":"AlexOliinyk1","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1422","RelatedDescription":"Opened issue \"asp.net core 2.0 + angular 4  + jwt authorization \" (#1422) at aspnet/Identity","RelatedBody":"Hi All\r\n\r\nI can't find way how configure my application using bearer token authorization, I used this article as example https://wildermuth.com/2017/08/19/Two-AuthorizationSchemes-in-ASP-NET-Core-2\r\n\r\nI'm implemented it successful   on the empty application. But after moving logic to my already created asp.net core 2 and anngular  4 using angular cli. \r\n\r\nI'm got error like this '404 not found ' for more details  https://github.com/nbarbettini/SimpleTokenProvider/issues/7 \r\n![image](https://user-images.githubusercontent.com/10448723/30217173-0639af84-94be-11e7-9e0c-27ec6463e54b.png)\r\n\r\nBut when I removed authorize attribute this route working. \r\n\r\nProblem is I can't configure the server as I think, because I saw as token was passed to the server in the header. \r\n\r\n\r\nmy startup looks like this \r\n\r\n![image](https://user-images.githubusercontent.com/10448723/30217331-7be106b0-94be-11e7-9e37-98e77d68a89c.png)\r\n![image](https://user-images.githubusercontent.com/10448723/30217347-87e40c46-94be-11e7-813e-00a2ee1afee0.png)\r\n\r\n\r\n"},{"Id":"6573134814","Type":"WatchEvent","CreatedAt":"2017-09-11T07:28:40","Actor":"ileego","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Identity","RelatedBody":null},{"Id":"6573051327","Type":"IssuesEvent","CreatedAt":"2017-09-11T07:03:38","Actor":"lugrugzo","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1421","RelatedDescription":"Opened issue \"Support for two-factor when using Jwt\" (#1421) at aspnet/Identity","RelatedBody":"Here is my Startup.cs\r\n\r\n```\r\nservices\r\n                .AddAuthentication(options =>\r\n                {\r\n                    options.DefaultAuthenticateScheme = JwtBearerDefaults.AuthenticationScheme;\r\n                    options.DefaultScheme = JwtBearerDefaults.AuthenticationScheme;\r\n                    options.DefaultChallengeScheme = JwtBearerDefaults.AuthenticationScheme;\r\n                })\r\n                .AddJwtBearer(cfg =>\r\n                {\r\n                    cfg.RequireHttpsMetadata = false;\r\n                    cfg.SaveToken = true;\r\n                    cfg.TokenValidationParameters = new TokenValidationParameters\r\n                    {\r\n                        ValidIssuer = Configuration[\"Tokens:Issuer\"],\r\n                        ValidAudience = Configuration[\"Tokens:Issuer\"],\r\n                        IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(Configuration[\"Tokens:Key\"]))\r\n                    };\r\n                });\r\n```\r\n\r\nMy login action:\r\n\r\n```\r\n[HttpPost]\r\n        public async Task<object> Login([FromBody] LoginViewModel model, string returnUrl = null)\r\n        {\r\n            var result = await _signInManager.PasswordSignInAsync(model.Email, model.Password, false, false);\r\n            \r\n            if (result.Succeeded)\r\n            {\r\n                var user = await _userManager.GetUserAsync(User) ;\r\n                return GenerateToken(model.Email, user.Id);\r\n            }\r\n            \r\n            if (result.RequiresTwoFactor)\r\n            {\r\n                \r\n                var user = await _signInManager.GetTwoFactorAuthenticationUserAsync();\r\n                var result2 = await _signInManager.TwoFactorAuthenticatorSignInAsync(model.TwoFactorCode, false, false);\r\n\r\n                if (result2.Succeeded)\r\n                {\r\n                    return GenerateToken(model.Email, user.Id);\r\n                }\r\n                else\r\n                {\r\n                    return BadRequest(\"Invalid two-factor token\");\r\n                }\r\n            }\r\n            \r\n            return BadRequest(\"Invalid login attempt\");\r\n        }\r\n```\r\n\r\nGenerateToken():\r\n\r\n```\r\nprivate object GenerateToken(string email, string userId)\r\n        {\r\n            var claims = new[]\r\n            {\r\n                new Claim(JwtRegisteredClaimNames.Sub, email),\r\n                new Claim(JwtRegisteredClaimNames.Jti, Guid.NewGuid().ToString()),\r\n                new Claim(new ClaimsIdentityOptions().UserIdClaimType, userId), \r\n            };\r\n\r\n            var key = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(_config[\"Tokens:Key\"]));\r\n            var creds = new SigningCredentials(key, SecurityAlgorithms.HmacSha256);\r\n\r\n            var token = new JwtSecurityToken(\r\n                issuer: _config[\"Tokens:Issuer\"],\r\n                audience: _config[\"Tokens:Issuer\"],\r\n                claims: claims,\r\n                expires: DateTime.Now.AddDays(30),\r\n                signingCredentials: creds\r\n            );\r\n\r\n            return new JwtSecurityTokenHandler().WriteToken(token);\r\n        }\r\n```\r\n\r\nIf I enable TwoFactor for user, GetTwoFactorAuthenticationUserAsync() returns null. How can I configure?\r\n\r\nThanks."},{"Id":"6572558118","Type":"ForkEvent","CreatedAt":"2017-09-11T03:17:18","Actor":"khoarin","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/khoarin/Identity","RelatedDescription":"Forked aspnet/Identity to khoarin/Identity","RelatedBody":null},{"Id":"6571149757","Type":"IssueCommentEvent","CreatedAt":"2017-09-10T10:30:36","Actor":"kinosang","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1395#issuecomment-328333776","RelatedDescription":"Commented on issue \"Port ChangePhoneNumber fix to 2.0.1\" (#1395) at aspnet/Identity","RelatedBody":"I wanna to know when will this patch released?\r\n\r\nor should I use the nightly build before you publish it?"},{"Id":"6571093244","Type":"PullRequestEvent","CreatedAt":"2017-09-10T09:39:53","Actor":"tugberkugurlu","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1420","RelatedDescription":"Opened pull request \"Rename IUserAuthenticatorInfoStore.cs to IUserAuthenticatorKeyStore.cs\" (#1420) at aspnet/Identity","RelatedBody":"so that it matches the name of the class and makes it easier to find"},{"Id":"6571014176","Type":"WatchEvent","CreatedAt":"2017-09-10T08:35:09","Actor":"t13ka","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Identity","RelatedBody":null},{"Id":"6570611783","Type":"WatchEvent","CreatedAt":"2017-09-10T01:21:31","Actor":"alexandre-spieser","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Identity","RelatedBody":null},{"Id":"6570358710","Type":"PullRequestEvent","CreatedAt":"2017-09-09T21:01:04","Actor":"tugberkugurlu","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1419","RelatedDescription":"Opened pull request \"use WebHost.CreateDefaultBuilder in IdentitySample.Mvc\" (#1419) at aspnet/Identity","RelatedBody":"so that it picks up the logging config from the `appsettings.json`"},{"Id":"6569774903","Type":"WatchEvent","CreatedAt":"2017-09-09T13:18:43","Actor":"yuleyule66","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Identity","RelatedBody":null},{"Id":"6569382682","Type":"WatchEvent","CreatedAt":"2017-09-09T07:06:50","Actor":"pathomas","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Identity","RelatedBody":null},{"Id":"6568488165","Type":"IssueCommentEvent","CreatedAt":"2017-09-08T21:09:02","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1416#issuecomment-328214401","RelatedDescription":"Commented on issue \"How to get current user for web API request ?\" (#1416) at aspnet/Identity","RelatedBody":"And how are you getting the AAD token? What are you doing with it after? How are you sending it with each request to the api endpoint?"},{"Id":"6568006659","Type":"IssueCommentEvent","CreatedAt":"2017-09-08T18:56:44","Actor":"justin-ruffin","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1414#issuecomment-328185754","RelatedDescription":"Commented on issue \"Setting the LoginPath not working int ASP.NET Core 2.0\" (#1414) at aspnet/Identity","RelatedBody":"Try configuring \"Services.AddIdentity\" then \"Services.ConfigureApplicationCookie\" as shown below.\r\n\r\n![image](https://user-images.githubusercontent.com/24457439/30226797-2daa92cc-948c-11e7-8d69-74b906836f8c.png)\r\n"},{"Id":"6567881177","Type":"CommitCommentEvent","CreatedAt":"2017-09-08T18:19:47","Actor":"bchavez","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Identity/commit/bc757faebaa5e06a50838fcc6497c3373b1b5fb7#commitcomment-24177412","RelatedDescription":"Commented on commit \"bc757faebaa5e06a50838fcc6497c3373b1b5fb7\" at aspnet/Identity","RelatedBody":"Thanks @HaoK , corrected as part of PR: #1400 "},{"Id":"6567821596","Type":"IssuesEvent","CreatedAt":"2017-09-08T18:07:20","Actor":"Ibro","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1418","RelatedDescription":"Opened issue \"Razor Pages - Individual Auth tempalte - weird login/register errors.\" (#1418) at aspnet/Identity","RelatedBody":"When I register, it manages to create an account but fails during this line:\r\n\r\n`  var code = await _userManager.GenerateEmailConfirmationTokenAsync(user);`\r\n\r\nHere is the raw exception details:\r\n\r\nSystem.ArgumentNullException: Value cannot be null.\r\n\r\n> Parameter name: value\r\n> \r\n>    at System.IO.BinaryWriter.Write(String value)\r\n> \r\n>    at Microsoft.AspNetCore.Identity.DataProtectorTokenProvider`1.<GenerateAsync>d__11.MoveNext()\r\n> \r\n> --- End of stack trace from previous location where exception was thrown ---\r\n> \r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n> \r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n> \r\n>    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n> \r\n>    at CBN.Web.Pages.Account.RegisterModel.<OnPostAsync>d__15.MoveNext() in C:\\code\\RazorPagesSample\\Web\\Pages\\Account\\Register.cshtml.cs:line 74\r\n> \r\n> --- End of stack trace from previous location where exception was thrown ---\r\n> \r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n> \r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n> \r\n>    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n> \r\n>    at Microsoft.AspNetCore.Mvc.RazorPages.Internal.ExecutorFactory.GenericTaskHandlerMethod.<Convert>d__4`1.MoveNext()\r\n> \r\n> --- End of stack trace from previous location where exception was thrown ---\r\n> \r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n> \r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n> \r\n>    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n> \r\n>    at Microsoft.AspNetCore.Mvc.RazorPages.Internal.ExecutorFactory.GenericTaskHandlerMethod.<Execute>d__3.MoveNext()\r\n> \r\n> --- End of stack trace from previous location where exception was thrown ---\r\n> \r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n> \r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n> \r\n>    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n> \r\n>    at Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker.<InvokeHandlerMethodAsync>d__29.MoveNext()\r\n> \r\n> --- End of stack trace from previous location where exception was thrown ---\r\n> \r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n> \r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n> \r\n>    at Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker.<InvokeNextPageFilterAsync>d__31.MoveNext()\r\n> \r\n> --- End of stack trace from previous location where exception was thrown ---\r\n> \r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n> \r\n>    at Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker.Rethrow(PageHandlerExecutedContext context)\r\n> \r\n>    at Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n> \r\n>    at Microsoft.AspNetCore.Mvc.RazorPages.Internal.PageActionInvoker.<InvokeInnerFilterAsync>d__22.MoveNext()\r\n> \r\n> --- End of stack trace from previous location where exception was thrown ---\r\n> \r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n> \r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n> \r\n>    at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeNextExceptionFilterAsync>d__23.MoveNext()\r\n> \r\n> --- End of stack trace from previous location where exception was thrown ---\r\n> \r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n> \r\n>    at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ExceptionContext context)\r\n> \r\n>    at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n> \r\n>    at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeNextResourceFilter>d__22.MoveNext()\r\n> \r\n> --- End of stack trace from previous location where exception was thrown ---\r\n> \r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n> \r\n>    at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n> \r\n>    at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n> \r\n>    at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeFilterPipelineAsync>d__17.MoveNext()\r\n> \r\n> --- End of stack trace from previous location where exception was thrown ---\r\n> \r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n> \r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n> \r\n>    at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeAsync>d__15.MoveNext()\r\n> \r\n> --- End of stack trace from previous location where exception was thrown ---\r\n> \r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n> \r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n> \r\n>    at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()\r\n> \r\n> --- End of stack trace from previous location where exception was thrown ---\r\n> \r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n> \r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n> \r\n>    at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.<Invoke>d__4.MoveNext()\r\n> \r\n> --- End of stack trace from previous location where exception was thrown ---\r\n> \r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n> \r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n> \r\n>    at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.<Invoke>d__6.MoveNext()\r\n> \r\n> --- End of stack trace from previous location where exception was thrown ---\r\n> \r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n> \r\n>    at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.<Invoke>d__6.MoveNext()\r\n> \r\n> --- End of stack trace from previous location where exception was thrown ---\r\n> \r\n>    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n> \r\n>    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n> \r\n>    at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()\r\n\r\nOn login it fails on this line:\r\n`var result = await _signInManager.PasswordSignInAsync(Input.Email, Input.Password, Input.RememberMe, lockoutOnFailure: true);`\r\n\r\n```\r\npublic class Startup\r\n    {\r\n        public Startup(IConfiguration configuration)\r\n        {\r\n            Configuration = configuration;\r\n        }\r\n\r\n        private IConfiguration Configuration { get; }\r\n\r\n        // This method gets called by the runtime. Use this method to add services to the container.\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddDbContext<CbnDbContext>(options =>\r\n                options.UseSqlServer(\"Server=.;Database=CBN;Trusted_Connection=True;\"));\r\n\r\n            services.AddIdentity<User, Role>()\r\n                .AddEntityFrameworkStores<CbnDbContext>()\r\n                .AddDefaultTokenProviders();\r\n\r\n            services\r\n                .AddMvc(config =>\r\n                {\r\n                    config.Filters.Add(typeof(CbnExceptionFilterAttribute));\r\n                })\r\n                .AddRazorPagesOptions(options =>\r\n                {\r\n                    options.Conventions.AuthorizeFolder(\"/Account/Manage\");\r\n                    options.Conventions.AuthorizePage(\"/Account/Logout\");\r\n                });\r\n\r\n            services.AddAuthentication();\r\n\r\n            services.AddSingleton<IEmailSender, EmailSender>();\r\n        }\r\n\r\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\r\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n        {\r\n            app.UseDeveloperExceptionPage();\r\n            app.UseDatabaseErrorPage();\r\n\r\n            app.UseStaticFiles();\r\n\r\n            app.UseMvc(routes =>\r\n            {\r\n                routes.MapRoute(\r\n                    name: \"default\",\r\n                    template: \"{controller=Home}/{action=Index}/{id?}\");\r\n            });\r\n        }\r\n    }```\r\n\r\n\r\nDb Context:\r\n\r\n```\r\npublic class CbnDbContext : IdentityDbContext<User, Role, int>\r\n    {\r\n        public CbnDbContext(DbContextOptions<CbnDbContext> options)\r\n            : base(options)\r\n        {\r\n        }\r\n\r\n        public DbSet<Note> Notes { get; set; }\r\n        public DbSet<Tag> Tags { get; set; }\r\n        public DbSet<Category> Categories { get; set; }\r\n\r\n        public async Task<int> SaveChangesAsync(int userId, CancellationToken cancellationToken = default(CancellationToken))\r\n        {\r\n            return await base.SaveChangesAsync(cancellationToken);\r\n        }\r\n\r\n        protected override void OnModelCreating(ModelBuilder builder)\r\n        {\r\n            base.OnModelCreating(builder);\r\n\r\n            builder.Entity<User>().ToTable(nameof(Users));\r\n            builder.Entity<Role>().ToTable(nameof(Roles));\r\n            builder.Entity<IdentityRole<int>>().ToTable(\"UserRoles\");\r\n        }\r\n    }\r\n```\r\n"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"6577236307","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T23:31:46","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2052#issuecomment-328687594","RelatedDescription":"Commented on issue \"Updating toolset compiler\" (#2052) at aspnet/KestrelHttpServer","RelatedBody":"@VSadov I restarted the build"},{"Id":"6577182087","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T23:11:24","Actor":"VSadov","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2052#issuecomment-328684401","RelatedDescription":"Commented on issue \"Updating toolset compiler\" (#2052) at aspnet/KestrelHttpServer","RelatedBody":"CC @jaredpar "},{"Id":"6577151203","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T23:00:09","Actor":"VSadov","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2052#issuecomment-328682567","RelatedDescription":"Commented on issue \"Updating toolset compiler\" (#2052) at aspnet/KestrelHttpServer","RelatedBody":"Actually, I do not know how to rerun the tests..."},{"Id":"6577147780","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T22:58:54","Actor":"VSadov","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2052#issuecomment-328682352","RelatedDescription":"Commented on issue \"Updating toolset compiler\" (#2052) at aspnet/KestrelHttpServer","RelatedBody":"Please review this.\r\nThe PR is passing now. I will rerun once more - to be sure.\r\n\r\n@pakrym - It should no longer require 1.1 "},{"Id":"6577091015","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T22:39:22","Actor":"muratg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2016#issuecomment-328678956","RelatedDescription":"Commented on issue \"HTTPS binding configuration for Kestrel\" (#2016) at aspnet/KestrelHttpServer","RelatedBody":"@shirhatti where are we with this one?"},{"Id":"6577023771","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T22:17:37","Actor":"scionwest","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/639#issuecomment-328674840","RelatedDescription":"Commented on issue \"How can we change the default kestrel port when using new dotnet cli ?\" (#639) at aspnet/KestrelHttpServer","RelatedBody":"@TotzkePaul Ideally we wouldn't have to hard-code our IP/ports. This should be 100% configurable so we don't have to recompile the app if we decide to deploy the app to a different server having a different IP."},{"Id":"6576662232","Type":"WatchEvent","CreatedAt":"2017-09-11T20:43:28","Actor":"manastalukdar","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6576088349","Type":"PushEvent","CreatedAt":"2017-09-11T18:28:48","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/compare/12d7fddf2297f087c47b9421f3ab6d92952a0df3...d45cf23d9615b1af5ab2c90f1f1b74529652fbb5","RelatedDescription":"Pushed to refs/heads/cesarbs/2017 at aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6576060091","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-11T18:22:24","Actor":"pranavkm","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2056#discussion_r138151134","RelatedDescription":"Commented on pull request \"Use ConcurrentQueue in TestApplicationErrorLogger [1.1.3]\" (#2056) at aspnet/KestrelHttpServer","RelatedBody":"👍 "},{"Id":"6575183310","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-11T15:17:16","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2049#discussion_r138102603","RelatedDescription":"Commented on pull request \"[RFC] Implement IHttpSendFileFeature\" (#2049) at aspnet/KestrelHttpServer","RelatedBody":"> What ever code is writing the headers before sendfile is writing the content.\r\n\r\nUnlocking in between those calls is fine. We're just making sure the buffer isn't corrupted (i.e. 2 calls don't write to the WritableBuffer in parallel). \r\n\r\n> In general, why don't responses interleave? Does a response get packed as a \"WritableBuffer\"? Or is there some other lock?\r\n\r\nI'm not sure what you mean?"},{"Id":"6575004789","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-11T14:45:06","Actor":"tmds","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2049#discussion_r138092486","RelatedDescription":"Commented on pull request \"[RFC] Implement IHttpSendFileFeature\" (#2049) at aspnet/KestrelHttpServer","RelatedBody":"> What is WriteHeaders?\r\n\r\nWhat ever code writing the headers before sendfile is writing the content.\r\n\r\n> Nope.\r\n\r\nIn general, why don't responses interleaved? Does a response get packed as a \"WritableBuffer\"? Or is there some other lock?"},{"Id":"6574894763","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-11T14:25:16","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2049#discussion_r138086224","RelatedDescription":"Commented on pull request \"[RFC] Implement IHttpSendFileFeature\" (#2049) at aspnet/KestrelHttpServer","RelatedBody":"What is WriteHeaders?\r\n\r\n> This unlocks in-between. Can http2 interleave responses in a way that this would be an issue?\r\n\r\nNope."},{"Id":"6574708721","Type":"WatchEvent","CreatedAt":"2017-09-11T13:50:21","Actor":"ralphy15","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6574676888","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-11T13:44:00","Actor":"tmds","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2049#discussion_r138073404","RelatedDescription":"Commented on pull request \"[RFC] Implement IHttpSendFileFeature\" (#2049) at aspnet/KestrelHttpServer","RelatedBody":"If you have some code like:\r\n```\r\nWriteHeaders\r\nSendFile\r\n```\r\nThis unlocks in-between. Can http2 interleave responses in a way that this would be an issue?"},{"Id":"6574225205","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-11T12:02:52","Actor":"benaadams","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2049#discussion_r138049477","RelatedDescription":"Commented on pull request \"[RFC] Implement IHttpSendFileFeature\" (#2049) at aspnet/KestrelHttpServer","RelatedBody":"Would be automatic"},{"Id":"6573767057","Type":"WatchEvent","CreatedAt":"2017-09-11T10:02:15","Actor":"wjkang","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6573549076","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-11T09:12:56","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2049#discussion_r138017803","RelatedDescription":"Commented on pull request \"[RFC] Implement IHttpSendFileFeature\" (#2049) at aspnet/KestrelHttpServer","RelatedBody":"Today we prevent overlapping writes by locking. SendFile is basically a write."},{"Id":"6573397543","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-11T08:38:12","Actor":"tmds","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2049#discussion_r138009652","RelatedDescription":"Commented on pull request \"[RFC] Implement IHttpSendFileFeature\" (#2049) at aspnet/KestrelHttpServer","RelatedBody":"This semaphore, is that something that a user of `IHttpSendFileFeature` must manually lock/unlock to ensure the entire response doesn't interleave with other output?"},{"Id":"6572936727","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T06:23:57","Actor":"ayende","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1802#issuecomment-328428492","RelatedDescription":"Commented on issue \"ASP.NET Core Kestrel on Linux never prompts for client certificate\" (#1802) at aspnet/KestrelHttpServer","RelatedBody":"I investigate this a bit more, and I think that the main issue is here:\r\nhttps://github.com/dotnet/corefx/blob/0fd3d2c5bcb1a83e7ebd8025e4810e11e231ce03/src/Common/src/Interop/Unix/System.Security.Cryptography.Native/Interop.OpenSsl.cs#L323\r\n\r\nThe problem is that it adds all the local and user certs by default, and on the Windows side, it doesn't add anything.\r\n\r\nSending an empty list on SSL client cert basically means: \"gimme what you got\", while a list limits that.\r\n\r\nIt seems to be that sending the list (which in our tests http://issues.hibernatingrhinos.com/issue/RavenDB-8524) includes hundreds of entries is not what you want to do.\r\n\r\nThis is called here:\r\nhttps://github.com/dotnet/corefx/blob/0fd3d2c5bcb1a83e7ebd8025e4810e11e231ce03/src/Common/src/Interop/Unix/System.Security.Cryptography.Native/Interop.OpenSsl.cs#L97\r\n\r\nThis is a reals tumbling block for us. Our situation calls for the user to use any client cert and the server side will handle the validation. However, with this logic on Linux, the admin is now forced into a lot of running around and managing certs that we would really wish to avoid.\r\n\r\nAllow us to specify it would be much better, yes. Even if we need to write special code for Linux / Windows for this case, but right now this seems to be handled way too deep in the stack for us to have any sort of access to it."},{"Id":"6572352896","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T01:38:52","Actor":"vinhhrv","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1267#issuecomment-328393784","RelatedDescription":"Commented on issue \"Kestrel randomly locked and stop responding.\" (#1267) at aspnet/KestrelHttpServer","RelatedBody":"@cesarbs, i sent to your email.\r\nThanks for support."},{"Id":"6572215479","Type":"IssuesEvent","CreatedAt":"2017-09-11T00:09:14","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2059","RelatedDescription":"Closed issue \"RequestStream does not support length property even when Content-Length is set on the request\" (#2059) at aspnet/KestrelHttpServer","RelatedBody":"Hello,\r\n\r\nThe stream implementation that can be found in Request.Body does not suport Length and Position properties even when Content-Length header is set on the request. There are numerous libraries that depends on these properties. \r\n\r\n**For example,** Amazon S3 does not support chunked uploads (like Azure do!) and the client library looks for remaining Stream size (Length - Position) to set \"Content-Length\" header to the file upload request. Also, Amazon's library does not allow the size to be specified explicitly.  \r\n\r\n```csharp\r\n// this does not work just because the library don't know the length of the given stream\r\nawait s3.PutObjectAsync(new Amazon.S3.Model.PutObjectRequest {\r\n\tBucketName = \"blablabla\",\r\n\tInputStream = Request.Body,\r\n\tContentType = Request.ContentType,\r\n\tKey = file.id + \"/\" + fileName,\r\n// no property to set the length of the InputStream\r\n});\r\n```\r\n\r\nTo make it work one can copy the Request.Body stream to a new MemoryStream and use this stream to make file upload request. However, this is inefficent and would waste a lot of memory.\r\n\r\nI have implement a proxy class that implements Length property based on Content-Length header and tracks the length of the data that have been readed before as position (the latter is not implemented yet) to work around the issue https://paste.sh/0pTxO9JI#KqSZwgjvMm28ySc6AAOoLQhv\r\n\r\n```csharp\r\nInputStream = new LengthStream(Request.Body, Request.ContentLength.Value),\r\n```\r\n\r\nI hope it gets implemented in the future so my projects (and projects of other .NET developers) would look more cleaner without these workarounds."},{"Id":"6572198682","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-10T23:55:51","Actor":"benaadams","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2049#discussion_r137963855","RelatedDescription":"Commented on pull request \"[RFC] Implement IHttpSendFileFeature\" (#2049) at aspnet/KestrelHttpServer","RelatedBody":"Semaphore is allocately. Gate that works for sync and async?"},{"Id":"6572169117","Type":"IssueCommentEvent","CreatedAt":"2017-09-10T23:30:48","Actor":"buraktamturk","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2059#issuecomment-328380290","RelatedDescription":"Commented on issue \"RequestStream does not support length property even when Content-Length is set on the request\" (#2059) at aspnet/KestrelHttpServer","RelatedBody":"@Tratcher there are libraries that use Length and Position property without looking seekability on the Stream (Amazon S3 does not check whatever the stream is seekable or not). Enabling buffering just for this case would still waste resources (either on disk or memory). Length can be the value of the \"Content-Length\" header if present, Position can be a read only counter that counts how much data has been transfered on Read calls in the past.\r\n\r\nHowever, if it is against of the rules of the .NET world, feel free to close the issue."},{"Id":"6572155182","Type":"IssueCommentEvent","CreatedAt":"2017-09-10T23:18:43","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2059#issuecomment-328379424","RelatedDescription":"Commented on issue \"RequestStream does not support length property even when Content-Length is set on the request\" (#2059) at aspnet/KestrelHttpServer","RelatedBody":"By design. On the Stream API Length, Position, CanSeek, a Seek are all interrelated. https://msdn.microsoft.com/en-us/library/system.io.stream.canseek(v=vs.110).aspx The Stream contract only supports these for random access streams. The request and response streams are not random access streams, they are linear consumption streams.\r\n\r\n Consumers that require random access need to enable buffering. The EnableRewind extension can be used to help enable this. https://github.com/aspnet/HttpAbstractions/blob/87cd79d6fc54bb4abf07c1e380cd7a9498a78612/src/Microsoft.AspNetCore.Http/Internal/BufferingHelper.cs#L41"},{"Id":"6572135124","Type":"IssuesEvent","CreatedAt":"2017-09-10T23:01:51","Actor":"buraktamturk","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2059","RelatedDescription":"Opened issue \"RequestStream does not support length property even when Content-Length is set on the request\" (#2059) at aspnet/KestrelHttpServer","RelatedBody":"Hello,\r\n\r\nThe stream implementation that can be found in Request.Body does not suport Length and Position properties even when Content-Length header is set on the request. There are numerous libraries that depends on these properties. \r\n\r\n**For example,** Amazon S3 does not support chunked uploads (like Azure do!) and the client library looks for remaining Stream size (Length - Position) to set \"Content-Length\" header to the file upload request. Also, Amazon's library does not allow the size to be specified explicitly.  \r\n\r\n```csharp\r\n// this does not work just because the library don't know the length of the given stream\r\nawait s3.PutObjectAsync(new Amazon.S3.Model.PutObjectRequest {\r\n\tBucketName = \"blablabla\",\r\n\tInputStream = Request.Body,\r\n\tContentType = Request.ContentType,\r\n\tKey = file.id + \"/\" + fileName,\r\n// no property to set the length of the InputStream\r\n});\r\n```\r\n\r\nTo make it work one can copy the Request.Body stream to a new MemoryStream and use this stream to make file upload request. However, this is inefficent and would waste a lot of memory.\r\n\r\nI have implement a proxy class that implements Length property based on Content-Length header and tracks the length of the data that have been readed before as position (the latter is not implemented yet) to work around the issue https://paste.sh/0pTxO9JI#KqSZwgjvMm28ySc6AAOoLQhv\r\n\r\n```csharp\r\nInputStream = new LengthStream(Request.Body, Request.ContentLength.Value),\r\n```\r\n\r\nI hope it gets implemented in the future so my projects (and projects of other .NET developers) would look more cleaner without these workarounds."},{"Id":"6572065207","Type":"IssueCommentEvent","CreatedAt":"2017-09-10T22:03:20","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/639#issuecomment-328375315","RelatedDescription":"Commented on issue \"How can we change the default kestrel port when using new dotnet cli ?\" (#639) at aspnet/KestrelHttpServer","RelatedBody":"See https://github.com/aspnet/KestrelHttpServer/issues/1998"},{"Id":"6571888593","Type":"IssueCommentEvent","CreatedAt":"2017-09-10T19:52:23","Actor":"Nezz","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/639#issuecomment-328367218","RelatedDescription":"Commented on issue \"How can we change the default kestrel port when using new dotnet cli ?\" (#639) at aspnet/KestrelHttpServer","RelatedBody":"@TotzkePaul I was referring to a command line argument. `--server.urls` no longer works. Neither does `--environment`. Would be nice to have something that's cross-platform."},{"Id":"6571808261","Type":"IssueCommentEvent","CreatedAt":"2017-09-10T18:54:24","Actor":"TotzkePaul","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/639#issuecomment-328363626","RelatedDescription":"Commented on issue \"How can we change the default kestrel port when using new dotnet cli ?\" (#639) at aspnet/KestrelHttpServer","RelatedBody":"if you use @ethanliew 's answer, there shouldnt be much you need to change to make Core 2.0 work."},{"Id":"6571614191","Type":"IssueCommentEvent","CreatedAt":"2017-09-10T16:32:24","Actor":"Nezz","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/639#issuecomment-328354241","RelatedDescription":"Commented on issue \"How can we change the default kestrel port when using new dotnet cli ?\" (#639) at aspnet/KestrelHttpServer","RelatedBody":"How can it be changed these days using ASP.NET Core 2.0 from the command line?"},{"Id":"6570821980","Type":"WatchEvent","CreatedAt":"2017-09-10T05:15:08","Actor":"linkjr","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/KestrelHttpServer","RelatedBody":null}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"6577042228","Type":"IssuesEvent","CreatedAt":"2017-09-11T22:23:32","Actor":"dougbu","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1680","RelatedDescription":"Closed issue \"Normalize the HTML encoding status of attribute values before calling tag helpers\" (#1680) at aspnet/Razor","RelatedBody":"As can be seen in aspnet/Mvc#6565 discussions as well as in MVC's [`UrlResolutionTagHelper`](https://github.com/aspnet/Mvc/blob/3beb3108661d2f9df478a6248ede0feb22fdd968/src/Microsoft.AspNetCore.Mvc.Razor/TagHelpers/UrlResolutionTagHelper.cs#L167-L216), dealing with HTML encoding adds wrinkles to otherwise-reasonable code. Just one example: The `UrlResolutionTagHelper` performs encoding with the default `HtmlEncoder` (from DI), not the encoder that's in-scope where the tag helper is applied.\r\n\r\nOne approach to simplify this would be to encode all `TagHelperAttribute` values before adding them to the `tagHelperContext.AllAttributes` collection. That doesn't completely solve the in-scope `HtmlEncoder` issue when performing comparisons with values from somewhere else e.g. aspnet/Mvc#6565. But, it does make it much easier to write most tag helper code that deals with attribute values."},{"Id":"6577042053","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T22:23:29","Actor":"dougbu","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1680#issuecomment-328675989","RelatedDescription":"Commented on issue \"Normalize the HTML encoding status of attribute values before calling tag helpers\" (#1680) at aspnet/Razor","RelatedBody":"Implementation detail of #6565. Should be investigated and tracked there."},{"Id":"6575027923","Type":"IssuesEvent","CreatedAt":"2017-09-11T14:49:16","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1570","RelatedDescription":"Closed issue \"\"Templates can be used only with field access...\" error not displayed in VS\" (#1570) at aspnet/Razor","RelatedBody":"1. File->New->Web App\r\n2. Go to Index.cshtml\r\n3. Add tag helper with `ModelExpression` attribute\r\n4. Use it and set it to unsupported expression type (`\"A\" + \"B\"`)\r\n\r\nExpected: error squiggly in VS\r\n\r\nActual: no errors in VS, fails at runtime\r\n\r\n"},{"Id":"6575027914","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T14:49:16","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1570#issuecomment-328553600","RelatedDescription":"Commented on issue \"\"Templates can be used only with field access...\" error not displayed in VS\" (#1570) at aspnet/Razor","RelatedBody":"I think this is a won't fix then. We don't attempt to do deep analysis and verification of these expressions and we don't want to.\r\n\r\nSomeone scream if you think we should care about this."},{"Id":"6575009145","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T14:45:52","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1212#issuecomment-328552439","RelatedDescription":"Commented on issue \"Integration tests with ASP.NET Core causes missing references from Razor files\" (#1212) at aspnet/Razor","RelatedBody":"**Hi, it looks like you are posting on a closed issue/PR/commit!**\r\n\r\nWe're very likely to lose track of your bug/feedback/question unless you:\r\n1. Open a new issue\r\n2. Explain very clearly what you need help with\r\n3. If you think you have found a bug, include detailed repro steps so that we can investigate the problem\r\n\r\nThanks!"},{"Id":"6570034668","Type":"IssueCommentEvent","CreatedAt":"2017-09-09T16:41:54","Actor":"Ciantic","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1212#issuecomment-328288766","RelatedDescription":"Commented on issue \"Integration tests with ASP.NET Core causes missing references from Razor files\" (#1212) at aspnet/Razor","RelatedBody":"I think the main problem is that Visual Studio asp.net core xunit template creates a csproj file that is already broken.\r\n\r\nE.g. here is what it created in my project:\r\n\r\nhttps://github.com/Ciantic/OksidiCom.AspNetCore/blob/fb11872b9e5ab9a015909dd34a76c737b05fbdce/test/OksidiCom.UserService.Test/OksidiCom.UserService.Test.csproj\r\n\r\nAnd it gives the Razor compilation error in here:\r\n\r\nhttps://github.com/Ciantic/OksidiCom.AspNetCore/blob/fb11872b9e5ab9a015909dd34a76c737b05fbdce/test/OksidiCom.UserService.Test/Tests.cs#L120 (LoginIssuesToken test)\r\n\r\nIf there is a simple fix for manipulating the csproj, the VS template for xunit test project should include it already."},{"Id":"6568603451","Type":"IssueCommentEvent","CreatedAt":"2017-09-08T21:44:54","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1570#issuecomment-328221239","RelatedDescription":"Commented on issue \"\"Templates can be used only with field access...\" error not displayed in VS\" (#1570) at aspnet/Razor","RelatedBody":"I investigated this and looks like razor might not have enough information in design time to make this a design time error.\r\n\r\nFor example, in this ModelExpression attribute `for`,\r\n```HTML\r\n<test for=\"StringProp+1\"></test>\r\n```\r\nthe generated code looks like this,\r\n```C#\r\n__WebApplication5_TagHelpers_TestTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.StringProp+1);\r\n```\r\nwhich is valid c# and compiles successfully. It is only caught at runtime [here](https://github.com/aspnet/Mvc/blob/a23307e2b1e7934e2c8d69774cda1b36778f697b/src/Microsoft.AspNetCore.Mvc.ViewFeatures/Internal/ExpressionMetadataProvider.cs#L80) in Mvc.\r\nThis seems to be more of a \"by design\". @rynowak @NTaylorMullen thoughts on if we want to come up with some sort of workaround for this?"},{"Id":"6567281771","Type":"DeleteEvent","CreatedAt":"2017-09-08T15:48:40","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":null,"RelatedDescription":"Deleted branch \"rynowak/project-manager-redux\" at aspnet/Razor","RelatedBody":null},{"Id":"6567281698","Type":"PullRequestEvent","CreatedAt":"2017-09-08T15:48:39","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/pull/1677","RelatedDescription":"Closed pull request \"Refactor project snapshot manager\" (#1677) at aspnet/Razor","RelatedBody":"Splits the 'trigger' out from the change manager. The next change will\r\nadd more functionality to DPSMBase."},{"Id":"6567281536","Type":"IssueCommentEvent","CreatedAt":"2017-09-08T15:48:37","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/pull/1677#issuecomment-328140954","RelatedDescription":"Commented on issue \"Refactor project snapshot manager\" (#1677) at aspnet/Razor","RelatedBody":"82866d9442ae7914980576fd821e162d6c30ecbb"},{"Id":"6567229197","Type":"PushEvent","CreatedAt":"2017-09-08T15:37:16","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Razor/compare/1806d26e9a8d3cb6cc41ce9b5858ee61c5373922...82866d9442ae7914980576fd821e162d6c30ecbb","RelatedDescription":"Pushed to refs/heads/dev at aspnet/Razor","RelatedBody":null},{"Id":"6567107112","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-08T15:11:14","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/pull/1677#discussion_r137815212","RelatedDescription":"Commented on pull request \"Refactor project snapshot manager\" (#1677) at aspnet/Razor","RelatedBody":"github doesn't update the diff when you push to the base branch"},{"Id":"6566326573","Type":"IssueCommentEvent","CreatedAt":"2017-09-08T12:12:45","Actor":"atifaziz","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/715#issuecomment-328086945","RelatedDescription":"Commented on issue \"Add an HTML-formatted constructions support into Razor instead of the removed @helper directive.\" (#715) at aspnet/Razor","RelatedBody":"In addition to using C# tuples, [as shown above](https://github.com/aspnet/Razor/issues/715#issuecomment-328084286), using local C# functions can also make it simpler to pass multiple arguments:\r\n\r\n```\r\nIHtmlContent Render<T>(Func<T, IHtmlContent> helper, T item = default(T)) =>\r\n    helper(item);\r\n\r\nFunc<object, IHtmlContent> Person(string fn, string ln, int age) =>\r\n    @<p>@fn @ln is @age years old.</p>;\r\n\r\n@Render(Person(\"John\", \"Doe\", 42))\r\n```\r\n\r\n`Render` above is only for cosmetics as `@Person(\"John\", \"Doe\", 42)(null)` would look ugly."},{"Id":"6566275115","Type":"IssueCommentEvent","CreatedAt":"2017-09-08T11:58:20","Actor":"atifaziz","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/715#issuecomment-328084286","RelatedDescription":"Commented on issue \"Add an HTML-formatted constructions support into Razor instead of the removed @helper directive.\" (#715) at aspnet/Razor","RelatedBody":"@NTaylorMullen [said](https://github.com/aspnet/Razor/issues/715#issuecomment-198468516):\r\n\r\n> This still does not solve the problem of a parameterized Razor code. What if there are two or three parameters of different types?\r\n\r\n>>As unfortunate as it might be you'd need to provide some sort of poco object in that case. A potential, less clean solution would be using variables from outside of the `@<p>...</p>`:\r\n\r\nThe example given was:\r\n\r\n```\r\nvar firstName = \"John\";\r\nvar lastName = \"Doe\";\r\n\r\nFunc<int, IHtmlContent> person = @<p>@firstName @lastName is @item years old.</p>;\r\n\r\n@person(30)\r\n```\r\n\r\nBut how about using a C# tuple to ship several values into the first argument? As in:\r\n\r\n```\r\nFunc<(string FirstName, string LastName, int Age), IHtmlContent> person =\r\n    @<p>@item.FirstName @item.LastName is @item.Age years old.</p>;\r\n\r\n@person((\"John\", \"Doe\", 42))\r\n```\r\n\r\nThe only odd looking bit may be the double parentheses needed at the call sites but that's far better than having to rely on closures for parameterization."},{"Id":"6564195627","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-07T23:38:56","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/pull/1677#discussion_r137681075","RelatedDescription":"Commented on pull request \"Refactor project snapshot manager\" (#1677) at aspnet/Razor","RelatedBody":"Not sure why these changes are displayed here while the base branch is set to `rynowak/foreground-theory`"},{"Id":"6564178318","Type":"CommitCommentEvent","CreatedAt":"2017-09-07T23:37:54","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Razor/commit/1806d26e9a8d3cb6cc41ce9b5858ee61c5373922#commitcomment-24158630","RelatedDescription":"Commented on commit \"1806d26e9a8d3cb6cc41ce9b5858ee61c5373922\" at aspnet/Razor","RelatedBody":"Yolo merge 🙈 "},{"Id":"6564082876","Type":"IssueCommentEvent","CreatedAt":"2017-09-07T23:00:33","Actor":"dougbu","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1680#issuecomment-327950076","RelatedDescription":"Commented on issue \"Normalize the HTML encoding status of attribute values before calling tag helpers\" (#1680) at aspnet/Razor","RelatedBody":"Much appreciated @rynowak "},{"Id":"6564075492","Type":"IssuesEvent","CreatedAt":"2017-09-07T22:57:55","Actor":"dougbu","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1680","RelatedDescription":"Opened issue \"Normalize the HTML encoding status of attribute values before calling tag helpers\" (#1680) at aspnet/Razor","RelatedBody":"As can be seen in aspnet/Mvc#6565 discussions as well as in MVC's [`UrlResolutionTagHelper`](https://github.com/aspnet/Mvc/blob/3beb3108661d2f9df478a6248ede0feb22fdd968/src/Microsoft.AspNetCore.Mvc.Razor/TagHelpers/UrlResolutionTagHelper.cs#L167-L216), dealing with HTML encoding adds wrinkles to otherwise-reasonable code. Just one example: The `UrlResolutionTagHelper` performs encoding with the default `HtmlEncoder` (from DI), not the encoder that's in-scope where the tag helper is applied.\r\n\r\nOne approach to simplify this would be to encode all `TagHelperAttribute` values before adding them to the `tagHelperContext.AllAttributes` collection. That doesn't completely solve the in-scope `HtmlEncoder` issue when performing comparisons with values from somewhere else e.g. aspnet/Mvc#6565. But, it does make it much easier to write most tag helper code that deals with attribute values."},{"Id":"6563770151","Type":"IssuesEvent","CreatedAt":"2017-09-07T21:35:56","Actor":"dougbu","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1679","RelatedDescription":"Opened issue \"Add helpers to deal with `IHtmlContent`\" (#1679) at aspnet/Razor","RelatedBody":"We have a fair amount of code that deals with `IHtmlContent` and related interfaces. To centralize that and ease things for all, add methods like `IsLiteral()`, `IsMixedContent()`, `GetRaw()` and `GetAsItWillBeRendered(HtmlEncoder encoder)`.\r\n\r\nGoal: As a tag helper author, I have an easy way to get the value of an attribute."},{"Id":"6563358297","Type":"PushEvent","CreatedAt":"2017-09-07T20:16:51","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Razor/compare/aa445ee9b45d780cb1a33e0ff0f153879e5a1a4a...1806d26e9a8d3cb6cc41ce9b5858ee61c5373922","RelatedDescription":"Pushed to refs/heads/dev at aspnet/Razor","RelatedBody":null},{"Id":"6563358283","Type":"PullRequestEvent","CreatedAt":"2017-09-07T20:16:51","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1676","RelatedDescription":"Merged pull request \"Add [ForegroundTheory]\" (#1676) at aspnet/Razor","RelatedBody":""},{"Id":"6563319925","Type":"PushEvent","CreatedAt":"2017-09-07T20:07:07","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Razor/compare/ca1de46fc908b0ffdb7be98371a632d3cc3b71a9...5ee4c8ec4d94e1c79a09bf7ddcf369c47ba3264c","RelatedDescription":"Pushed to refs/heads/rynowak/foreground-theory at aspnet/Razor","RelatedBody":null},{"Id":"6563311782","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-07T20:05:05","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/pull/1676#discussion_r137641963","RelatedDescription":"Commented on pull request \"Add [ForegroundTheory]\" (#1676) at aspnet/Razor","RelatedBody":"Yes"},{"Id":"6563302172","Type":"IssuesEvent","CreatedAt":"2017-09-07T20:02:46","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1678","RelatedDescription":"Opened issue \"Implementing quirking of parser and language features for Razor\" (#1678) at aspnet/Razor","RelatedBody":"We're planning some other work items for Razor 2.1.0 that will require us to add features or relax restrictions specific to Razor 2.1.0\r\n\r\nThe time has come for us to implement version support in Razor. Make it so."},{"Id":"6562958684","Type":"IssuesEvent","CreatedAt":"2017-09-07T18:37:56","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1561","RelatedDescription":"Closed issue \"addTagHelper does not warn when using single quotes\" (#1561) at aspnet/Razor","RelatedBody":"Repro:\r\n1. File->New->Web App\r\n2. Go to Index.cshtml\r\n3. Add \r\n```\r\n@addTagHelper 'WebApplication1.TagHelpers.MyTagHelper, WebApplication1'\r\n```\r\n4. `'WebApplication1.TagHelpers.MyTagHelper, WebApplication1'` is highlighted as a string, no warning/error is shown, no exception at runtime but tag helper is not applied\r\n\r\nAdditionally if you don't terminated single quote you'll get `Unterminated string literal. Strings that start with a quotation mark (\") must be terminated before the end of the line. However, strings that start with @ and a quotation mark (@\") can span multiple lines.` at runtime and in VS, so creates illusion that it should work but doesn't\r\n\r\n/cc @NTaylorMullen "},{"Id":"6562958667","Type":"IssueCommentEvent","CreatedAt":"2017-09-07T18:37:56","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1561#issuecomment-327887303","RelatedDescription":"Commented on issue \"addTagHelper does not warn when using single quotes\" (#1561) at aspnet/Razor","RelatedBody":"aa445ee9b45d780cb1a33e0ff0f153879e5a1a4a"},{"Id":"6562954571","Type":"DeleteEvent","CreatedAt":"2017-09-07T18:36:56","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":null,"RelatedDescription":"Deleted branch \"ajbaaska/validate-assembly\" at aspnet/Razor","RelatedBody":null},{"Id":"6562954142","Type":"PushEvent","CreatedAt":"2017-09-07T18:36:50","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Razor/compare/00dc95098f862079b1dc03965446dbb53e75e629...aa445ee9b45d780cb1a33e0ff0f153879e5a1a4a","RelatedDescription":"Pushed to refs/heads/dev at aspnet/Razor","RelatedBody":null},{"Id":"6562954123","Type":"PullRequestEvent","CreatedAt":"2017-09-07T18:36:50","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1674","RelatedDescription":"Merged pull request \"Add error for using single quotes in add/remove taghelper directive\" (#1674) at aspnet/Razor","RelatedBody":"A simple fix for #1561. Just handles single quotes around the lookup text.\r\n\r\nAfter discussing with @NTaylorMullen and @rynowak, we decided there is no good way to determining the validity of the assembly name at design time. It is good to have but it is a separate issue. (Worth filing an issue for it?)\r\n\r\nAlso, I chose not to handle cases like `@addTagHelper \"WebApplication1.TagHelpers.MyTagHelper, WebApplication\" + \"1\"` as it's very obscure and rare."},{"Id":"6562953364","Type":"PushEvent","CreatedAt":"2017-09-07T18:36:39","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Razor/compare/fdc7b2fc05ec8d9fab43c1cb9d607df7631018eb...aa445ee9b45d780cb1a33e0ff0f153879e5a1a4a","RelatedDescription":"Pushed to refs/heads/ajbaaska/validate-assembly at aspnet/Razor","RelatedBody":null}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6563238976","Type":"WatchEvent","CreatedAt":"2017-09-07T19:46:57","Actor":"m6t","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6545178208","Type":"WatchEvent","CreatedAt":"2017-09-04T02:21:09","Actor":"foxfu","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6544528482","Type":"WatchEvent","CreatedAt":"2017-09-03T17:29:33","Actor":"alefranz","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6542239491","Type":"WatchEvent","CreatedAt":"2017-09-02T02:49:33","Actor":"BlueColorDemon","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6538082530","Type":"WatchEvent","CreatedAt":"2017-09-01T03:11:44","Actor":"ken1211","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6534627582","Type":"WatchEvent","CreatedAt":"2017-08-31T11:36:46","Actor":"csyszf","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6525086646","Type":"WatchEvent","CreatedAt":"2017-08-29T14:48:04","Actor":"anserk","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6516751305","Type":"WatchEvent","CreatedAt":"2017-08-27T13:55:26","Actor":"pjdv2","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6516747587","Type":"WatchEvent","CreatedAt":"2017-08-27T13:52:23","Actor":"pjdv2","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6512833226","Type":"WatchEvent","CreatedAt":"2017-08-25T15:49:37","Actor":"MattPress","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6509699760","Type":"WatchEvent","CreatedAt":"2017-08-24T22:04:39","Actor":"runebakjacobsen","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6506925369","Type":"WatchEvent","CreatedAt":"2017-08-24T11:03:36","Actor":"cemalshukriev","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6504000070","Type":"IssuesEvent","CreatedAt":"2017-08-23T19:03:38","Actor":"jbagga","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/269","RelatedDescription":"Opened issue \"ExpandoObjectAdapter does not assume case insensitivity\" (#269) at aspnet/Announcements","RelatedBody":"When applying a json patch to `ExpandoObject`s, case insensitive search will not be used to match the path segment to the object's dictionary keys. Instead, the path segment will be resolved using the `NamingStrategy` defined in the `IContractResolver`.\r\n\r\nAddresses https://github.com/aspnet/JsonPatch/issues/102\r\n\r\nSee https://github.com/aspnet/JsonPatch/issues/103 for discussion\r\n"},{"Id":"6498883578","Type":"WatchEvent","CreatedAt":"2017-08-22T19:12:28","Actor":"andregr15","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6495189019","Type":"WatchEvent","CreatedAt":"2017-08-22T03:10:54","Actor":"babtsoualiaksandr","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6493226643","Type":"IssueCommentEvent","CreatedAt":"2017-08-21T16:09:19","Actor":"anurse","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Announcements/issues/237#issuecomment-323786938","RelatedDescription":"Commented on issue \"Microsoft.Extensions.PlatformAbstractions has been removed\" (#237) at aspnet/Announcements","RelatedBody":"Note: As part of this change, you could encounter the following error if you build your WebHost by injecting `IStartup` directly into the container, rather than calling `.UseStartup` or `.Configure`:\r\n\r\n```\r\nUnhandled Exception: System.ArgumentException: A valid non-empty application name must be provided.\r\nParameter name: applicationName\r\n   at Microsoft.AspNetCore.Hosting.Internal.HostingEnvironmentExtensions.Initialize(IHostingEnvironment hostingEnvironment, String applicationName, String contentRootPath, WebHostOptions options)\r\n   at Microsoft.AspNetCore.Hosting.WebHostBuilder.BuildCommonServices(AggregateException& hostingStartupErrors)\r\n   at Microsoft.AspNetCore.Hosting.WebHostBuilder.Build()\r\n   at ConsoleApp11.Program.Main(String[] args) in C:\\Users\\dfowler\\documents\\visual studio 2017\\Projects\\ConsoleApp11\\ConsoleApp11\\Program.cs:line 11\r\n```\r\n\r\nThis occurs because we need to get the name of the application. Previously, we used some heuristics to detect it, but we removed some of them in 2.0. In the scenario above, where `IStartup` is manually injected into the container, add the following call to your `WebHostBuilder` set-up sequence:\r\n\r\n```\r\nWebHost.CreateDefaultBuilder(args)\r\n    // ... other Web Host configuration calls\r\n    .UseSetting(WebHostDefaults.ApplicationKey, \"[Application Name]\")\r\n```\r\n\r\n**NOTE: This is only required in 2.0 and only when you do NOT call `.UseStartup` or `.Configure`**\r\n\r\nSee https://github.com/aspnet/Hosting/issues/1137 for further info."},{"Id":"6487154520","Type":"WatchEvent","CreatedAt":"2017-08-20T04:02:52","Actor":"fahadabdulaziz","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6484292850","Type":"WatchEvent","CreatedAt":"2017-08-18T23:29:17","Actor":"DejanMilicic","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6481758203","Type":"WatchEvent","CreatedAt":"2017-08-18T16:17:50","Actor":"andreabbondanza","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6481116208","Type":"WatchEvent","CreatedAt":"2017-08-18T14:54:17","Actor":"imranakram","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6480883973","Type":"WatchEvent","CreatedAt":"2017-08-18T14:25:21","Actor":"gldraphael","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6473732109","Type":"WatchEvent","CreatedAt":"2017-08-17T16:29:24","Actor":"modulexcite","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6470181527","Type":"WatchEvent","CreatedAt":"2017-08-17T08:23:42","Actor":"svasorcery","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6464186890","Type":"ForkEvent","CreatedAt":"2017-08-16T14:42:02","Actor":"osmarvcneto","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/osmarvcneto/Announcements","RelatedDescription":"Forked aspnet/Announcements to osmarvcneto/Announcements","RelatedBody":null},{"Id":"6462831810","Type":"WatchEvent","CreatedAt":"2017-08-16T11:45:52","Actor":"karelsteinmetz","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6461972156","Type":"WatchEvent","CreatedAt":"2017-08-16T09:29:11","Actor":"holysdking","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6461518520","Type":"WatchEvent","CreatedAt":"2017-08-16T08:21:31","Actor":"kangyangyang","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6460495200","Type":"WatchEvent","CreatedAt":"2017-08-16T04:24:35","Actor":"netcore-jroger","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6460216180","Type":"WatchEvent","CreatedAt":"2017-08-16T03:01:08","Actor":"raborse","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6460184131","Type":"WatchEvent","CreatedAt":"2017-08-16T02:52:00","Actor":"hosttor","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"906146139933638658","CreatedAt":"2017-09-08T13:24:09+00:00","UserScreenname":"aspnet","Text":"Getting Started with Windows Containers https://t.co/8twiZLlB5H","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":49,"FavoriteCount":24,"RawContent":null},{"Id":"897126323298209792","CreatedAt":"2017-08-14T16:02:37+00:00","UserScreenname":"aspnet","Text":"Announcing ASPNet Core 2.0 - https://t.co/5RTzwS9Ym2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":196,"FavoriteCount":158,"RawContent":null},{"Id":"877222209667960834","CreatedAt":"2017-06-20T17:50:47+00:00","UserScreenname":"aspnet","Text":"Check out the latest Code Conversation episode where @LadyNaggaga chats with @BaggaJaspreet about ASPNet Core TagHe… https://t.co/xeyH9UaAso","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":4,"RawContent":null},{"Id":"859458604423761920","CreatedAt":"2017-05-02T17:24:33+00:00","UserScreenname":"aspnet","Text":"Links from this week's #ASPNET Community Standup: https://t.co/mGkPhF01fK","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":13,"RawContent":null},{"Id":"857004913238331392","CreatedAt":"2017-04-25T22:54:28+00:00","UserScreenname":"aspnet","Text":"Links from this week's #aspnet Community Standup https://t.co/GRTVdjDWYL","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2017-09-12T05:30:13.2063192Z","RunDurationInMilliseconds":6597}