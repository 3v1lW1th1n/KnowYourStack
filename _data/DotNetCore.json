{"Data":{"Blog":{"FeedItems":[{"Title":"Fall .NET Core Survey","PublishedOn":"2019-10-17T20:24:19+00:00","CommentsCount":19,"FacebookCount":0,"Summary":"It’s been a busy time for .NET Core – we just shipped 3.0, and are currently working on a few updates for v3.1 (due in November.) As we turn our attention to .NET Core 5.0, we want to take a step back...","Href":"https://devblogs.microsoft.com/dotnet/fall-net-core-survey/","RawContent":null},{"Title":".NET Framework October 2019 Preview of Quality Rollup","PublishedOn":"2019-10-15T21:11:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the October 2019 Preview of Quality Rollup and Cumulative Updates for .NET Framework.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/","RawContent":null},{"Title":"Announcing .NET Core 3.1 Preview 1","PublishedOn":"2019-10-15T16:49:48+00:00","CommentsCount":29,"FacebookCount":0,"Summary":"Today, we&#8217;re announcing .NET Core 3.1 Preview 1. .NET Core 3.1 will be a small release focused on key improvements in Blazor and Windows desktop, the two big additions in .NET Core 3.0. It will...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/","RawContent":null},{"Title":".NET Framework October 2019 Security and Quality Rollup","PublishedOn":"2019-10-08T19:10:44+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Today, we are releasing the October 2019 Security and Quality Rollup and Cumulative Updates for .NET Framework.\nSecurity\nNo new security fixes. See September 2019 Security and Quality Rollup for the...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/","RawContent":null},{"Title":"Introducing .NET Core Windows Forms Designer Preview 1","PublishedOn":"2019-09-30T21:00:10+00:00","CommentsCount":76,"FacebookCount":0,"Summary":"Introducing .NET Core Windows Forms Designer Preview 1\nWe just released a GA version of .NET Core 3.0 that includes support for Windows Forms and WPF. And along with that release we&#8217;re happy to...","Href":"https://devblogs.microsoft.com/dotnet/introducing-net-core-windows-forms-designer-preview-1/","RawContent":null},{"Title":".NET Framework September 2019 Preview of Quality Rollup","PublishedOn":"2019-09-26T19:36:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We have released the September 2019 Preview of Quality Rollup and Cumulative Updates for .NET Framework for Windows 10\nQuality and Reliability\nThis release contains the following quality and...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/","RawContent":null},{"Title":"ML.NET and Model Builder at .NET Conf 2019 (Machine Learning for .NET)","PublishedOn":"2019-09-24T19:48:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited today to announce updates to Model Builder and improvements in ML.NET. You can learn more in the “What’s new in ML.NET?.” session at .NET Conf.\nML.NET is an open-source and...","Href":"https://devblogs.microsoft.com/dotnet/ml-net-and-model-builder-at-net-conf-2019-machine-learning-for-net/","RawContent":null},{"Title":"Joining the .NET Foundation Maturity Model Pilot","PublishedOn":"2019-09-23T16:59:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Joining the .NET Foundation Maturity Model Pilot\nThe .NET Foundation is starting a new pilot program to increase quality and user confidence in open source projects, using a new project maturity...","Href":"https://devblogs.microsoft.com/dotnet/joining-the-net-foundation-maturity-model-pilot/","RawContent":null},{"Title":"Announcing Entity Framework Core 3.0 and Entity Framework 6.3 General Availability","PublishedOn":"2019-09-23T16:20:13+00:00","CommentsCount":46,"FacebookCount":0,"Summary":"We are extremely excited to announce the general availability of EF Core 3.0and EF 6.3 on nuget.org.\nThe final versions of .NET Core 3.0 and ASP.NET Core 3.0 are also available now.\nHow to get EF Core...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ef-core-3-0-and-ef-6-3-general-availability/","RawContent":null},{"Title":"Announcing F# 4.7","PublishedOn":"2019-09-23T16:06:23+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"We’re excited to announce general availability of F# 4.7 in conjunction with the .NET Core 3.0 release! In this post, I’ll show you how to get started, explain everything in F# 4.7 and give you a...","Href":"https://devblogs.microsoft.com/dotnet/announcing-f-4-7/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"10537155256","Type":"PullRequestEvent","CreatedAt":"2019-10-01T20:30:21","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Opened pull request \"Add new Cake Maintainer\" (#150) at dotnet/foundation","RelatedBody":""},{"Id":"10530380699","Type":"PullRequestEvent","CreatedAt":"2019-10-01T05:27:58","Actor":"JimBobSquarePants","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Opened pull request \"Add ImageSharp\" (#149) at dotnet/foundation","RelatedBody":""},{"Id":"10123005051","Type":"IssuesEvent","CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Opened issue \"Clarify guidelines in regards to Options and Requirements\" (#148) at dotnet/foundation","RelatedBody":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10647641262","Type":"IssuesEvent","CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Opened issue \".NET Core 3.1.0 Preview 1\" (#131) at dotnet/announcements","RelatedBody":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"10691604859","Type":"PullRequestEvent","CreatedAt":"2019-10-23T03:23:13","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27377","RelatedDescription":"Merged pull request \"Adding SkipInit to Internal.Runtime.CompilerServices.Unsafe\" (#27377) at dotnet/coreclr","RelatedBody":"This exposes `Internal.Runtime.CompilerServices.Unsafe.SkipInit` and consumes it in `Decimal.DecCalc`. There were no pmi diffs from doing so."},{"Id":"10691464782","Type":"PullRequestEvent","CreatedAt":"2019-10-23T02:51:57","Actor":"echesakovMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27382","RelatedDescription":"Opened pull request \"LeadingZeroCount, LeadingSignCount, PopCount\" (#27382) at dotnet/coreclr","RelatedBody":"https://github.com/dotnet/corefx/issues/26182"},{"Id":"10691438541","Type":"PullRequestEvent","CreatedAt":"2019-10-23T02:45:38","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27376","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx\" (#27376) at dotnet/coreclr","RelatedBody":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding"},{"Id":"10691258480","Type":"PullRequestEvent","CreatedAt":"2019-10-23T02:02:30","Actor":"echesakovMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27372","RelatedDescription":"Closed pull request \"No merge\" (#27372) at dotnet/coreclr","RelatedBody":""},{"Id":"10691246777","Type":"IssuesEvent","CreatedAt":"2019-10-23T01:59:46","Actor":"erozenfeld","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27331","RelatedDescription":"Closed issue \"Test failed: JIT/opt/ObjectStackAllocation/ObjectStackAllocationTests/ObjectStackAllocationTests.sh\" (#27331) at dotnet/coreclr","RelatedBody":"**Job:**\r\n[coreclr-jitstress #20191019.1](https://dev.azure.com/dnceng/public/_build/results?buildId=394826)\r\n\r\n**Detail:**\r\nlinux x64:\r\nhttps://helix.dot.net/api/2019-06-17/jobs/bf1f0311-43d8-43c3-a6f9-51269ad69f80/workitems/JIT/console\r\nOSX x64:\r\nhttps://helix.dot.net/api/2019-06-17/jobs/8159f61d-9813-48f6-b447-f50cdd09a276/workitems/JIT/console\r\n\r\n**OS & Arch:**\r\nlinux x64\r\nosx x64\r\n\r\n**Mode:**\r\nlinux x64:\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_DbgEnableMiniDump=1\r\nCOMPlus_DbgMiniDumpName=$HELIX_DUMP_FOLDER/coredump.%d.dmp\r\nCOMPlus_JitStress=2\r\n\r\nosx x64:\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_DbgEnableMiniDump=1\r\nCOMPlus_DbgMiniDumpName=$HELIX_DUMP_FOLDER/coredump.%d.dmp\r\nCOMPlus_JitStress=1\r\n\r\n**Note:**\r\nThis failure **repros** on our osx x64 machine.\r\nThere is no 'Tests_Linux_x64_checked_jitstress' in artfacts.\r\n\r\n**Log:**\r\n```\r\nJIT/opt/ObjectStackAllocation/ObjectStackAllocationTests/ObjectStackAllocationTests.sh [FAIL]\r\n      \r\n      Return code:      1\r\n      Raw output file:      /home/helixbot/work/bf1f0311-43d8-43c3-a6f9-51269ad69f80/Work/7509fbd3-e1bb-4605-8f58-fc3ab6c77874/Exec/JIT/opt/Reports/JIT.opt/ObjectStackAllocation/ObjectStackAllocationTests/ObjectStackAllocationTests.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n      /home/helixbot/work/bf1f0311-43d8-43c3-a6f9-51269ad69f80/Payload/corerun ObjectStackAllocationTests.dll ''\r\n      SUCCESS (AllocateSimpleClassAndAddFields)\r\n      FAILURE (AllocateSimpleClassesAndEQCompareThem): unexpected allocation of 48 bytes\r\n      SUCCESS (AllocateSimpleClassesAndNECompareThem)\r\n      SUCCESS (AllocateSimpleClassAndGetField)\r\n      SUCCESS (AllocateClassWithNestedStructAndGetField)\r\n      SUCCESS (AllocateClassWithNestedStructAndAddFields)\r\n      SUCCESS (AllocateSimpleClassWithGCFieldAndAddFields)\r\n      SUCCESS (AllocateSimpleClassAndAssignRefToAField)\r\n      SUCCESS (TestMixOfReportingAndWriteBarriers)\r\n      SUCCESS (AllocateSimpleClassAndCheckTypeNoHelper)\r\n      SUCCESS (AllocateSimpleClassAndCheckTypeHelper)\r\n      SUCCESS (AllocateSimpleClassAndCast)\r\n      SUCCESS (BoxSimpleStructAndAddFields)\r\n      Expected: 100\r\n      Actual: 255\r\n      END EXECUTION - FAILED\r\n      Test Harness Exitcode is : 1\r\n```"},{"Id":"10691244337","Type":"IssuesEvent","CreatedAt":"2019-10-23T01:59:09","Actor":"erozenfeld","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27289","RelatedDescription":"Closed issue \"[JitStress] JIT\\opt\\ObjectStackAllocation\\ObjectStackAllocationTests fails\" (#27289) at dotnet/coreclr","RelatedBody":"It fails on different platforms with JitStress mode with:\r\nFAILURE (AllocateSimpleClassesAndEQCompareThem): unexpected allocation of 48 bytes\r\n\r\nThe simplest platform is Windows_NT x64 Checked jitstress2_tiered @ Windows.10.Amd64.Open,\r\n[example](https://dev.azure.com/dnceng/public/_build/results?buildId=392704&view=ms.vss-test-web.build-test-results-tab&runId=12202734&paneView=debug).\r\n\r\n[The last successful run](https://dev.azure.com/dnceng/public/_build/results?buildId=387947) 10-14,\r\n[the first failed run](https://dev.azure.com/dnceng/public/_build/results?buildId=389381) 10-15.\r\n"},{"Id":"10691236621","Type":"PullRequestEvent","CreatedAt":"2019-10-23T01:57:12","Actor":"erozenfeld","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27344","RelatedDescription":"Merged pull request \"Disable STRESS_MIN_OPTS for ObjectStackAllocationTests.\" (#27344) at dotnet/coreclr","RelatedBody":"ObjectStackAllocationTests rely on the object stack allocation\r\noptimization to be running. STRESS_MIN_OPTS  prevents that."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"10691521000","Type":"PullRequestEvent","CreatedAt":"2019-10-23T03:04:58","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12955","RelatedDescription":"Merged pull request \"Fix mark of the web\" (#12955) at dotnet/cli","RelatedBody":"\r\n"},{"Id":"10691289518","Type":"PullRequestEvent","CreatedAt":"2019-10-23T02:10:12","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12968","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12968) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191022.7\r\n- **Date Produced**: 10/23/2019 12:54 AM\r\n- **Commit**: 07fa4be202f382e4cf7a74945ae37c9a629c4063\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19522.7\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19522.7\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19522.7\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19522.7\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19522.7\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19522.7\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n"},{"Id":"10691034363","Type":"IssuesEvent","CreatedAt":"2019-10-23T01:06:44","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/12856","RelatedDescription":"Closed issue \"Button \"Uninstall\" is truncated on the SDK uninstallation wizard with Japanese\" (#12856) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n1.Open the sdk installation file (.NET core SDK 3.1.100-preview1-014459) and install it.\r\n2.Open control panel and uninstall the SDK(3.1.100-preview1-014459)\r\n2.Observe the button \"アンインストール\" .\r\n\r\n## Expected  behavior\r\nButton content isn't truncated\r\n\r\n## Actual behavior\r\nButton content is truncated\r\n![image](https://user-images.githubusercontent.com/38854445/66559124-6a6ab080-eb87-11e9-897d-0104c0ee3b5a.png)\r\n![image](https://user-images.githubusercontent.com/38854445/66559579-317f0b80-eb88-11e9-9414-19598bd10c80.png)\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (global.json を反映):\r\n Version:   3.1.100-preview1-014459\r\n Commit:    ac3b59712d\r\n\r\nランタイム環境:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100-preview1-014459\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0-preview1.19506.1\r\n  Commit:  bbf5542781\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100-preview1-014394 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100-preview1-014459 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0-preview1.19475.24 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0-preview1.19508.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0-preview1.19480.27 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0-preview1.19506.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0-preview1.19480.27 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0-preview1.19506.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"10690964991","Type":"IssuesEvent","CreatedAt":"2019-10-23T00:50:01","Actor":"daniel-white","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/12967","RelatedDescription":"Opened issue \"VSSettings fails with DotNetCliToolReference in VS for Mac \" (#12967) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n* VS for Mac 8.3.4\r\n* Have a `global.json` with\r\n```\r\n{\r\n  \"sdk\": {\r\n    \"version\": \"2.1.802\"\r\n  }\r\n}\r\n```\r\n* Have a csproj file with\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n    \r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  \r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Swashbuckle.AspNetCore.Cli\" Version=\"4.0.1\" />\r\n  </ItemGroup>\r\n    \r\n  <Target Name=\"GenerateSwagger\" AfterTargets=\"AfterBuild\">\r\n    <Exec  Command=\"dotnet -d swagger\" />\r\n  </Target>\r\n\r\n</Project>\r\n```\r\n* Build with VS for Mac\r\n* Build from terminal (`dotnet build`)\r\n\r\n## Expected  behavior\r\nThe swagger tool is run as it does from the CLI.\r\n\r\n## Actual behavior\r\nFails to find tool in mac\r\n\r\n```\r\ndotnet -d swagger\r\nTelemetry is: Enabled\r\nprojectfactory: MSBUILD_EXE_PATH = /Users/daniel.white/Library/Caches/VisualStudio/8.0/MSBuild/88767_1/MonoDevelop.MSBuildBuilder.exe\r\nprojectfactory: MSBuild project path = /Users/daniel.white/Builds/foo/foo.csproj\r\nMicrosoft.Build.Exceptions.InvalidProjectFileException: The SDK resolver type \"DotNetMSBuildSdkResolver\" failed to load. The type initializer for 'Microsoft.DotNet.MSBuildSdkResolver.VSSettings' threw an exception.  /Users/daniel.white/Builds/foo/foo.csproj ---> System.TypeInitializationException: The type initializer for 'Microsoft.DotNet.MSBuildSdkResolver.VSSettings' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Microsoft.DotNet.MSBuildSdkResolver.Interop' threw an exception. ---> System.TypeLoadException: Could not load type 'System.Runtime.InteropServices.OSPlatform' from assembly 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.DotNet.MSBuildSdkResolver.VSSettings..ctor() in /_/src/Microsoft.DotNet.MSBuildSdkResolver/VSSettings.cs:line 30\r\n   at Microsoft.DotNet.MSBuildSdkResolver.VSSettings..cctor() in /_/src/Microsoft.DotNet.MSBuildSdkResolver/VSSettings.cs:line 25\r\nMicrosoft.DotNet.Cli.Utils.CommandUnknownException: No executable found matching command \"dotnet-swagger\"\r\n   at Microsoft.DotNet.Cli.Utils.Command.Create(ICommandResolverPolicy commandResolverPolicy, String commandName, IEnumerable`1 args, NuGetFramework framework, String configuration, String outputPath, String applicationName)\r\n   at Microsoft.DotNet.Cli.Utils.Command.Create(String commandName, IEnumerable`1 args, NuGetFramework framework, String configuration, String outputPath, String applicationName)\r\n   at Microsoft.DotNet.Cli.Program.ProcessArgs(String[] args, ITelemetry telemetryClient)\r\n   at Microsoft.DotNet.Cli.Program.Main(String[] args)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.DotNet.MSBuildSdkResolver.DotNetMSBuildSdkResolver..ctor() in /_/src/Microsoft.DotNet.MSBuildSdkResolver/MSBuildSdkResolver.cs:line 38\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.Build.Shared.ProjectFileErrorUtilities.VerifyThrowInvalidProjectFile(Boolean condition, String errorSubCategoryResourceName, BuildEventFileInfo projectFile, Exception innerException, String resourceName, Object[] args)\r\n   at Microsoft.Build.Shared.ProjectFileErrorUtilities.ThrowInvalidProjectFile(BuildEventFileInfo projectFile, Exception innerException, String resourceName, Object[] args)\r\n   at Microsoft.Build.BackEnd.SdkResolution.SdkResolverLoader.LoadResolvers(String resolverPath, LoggingContext loggingContext, ElementLocation location, List`1 resolvers)\r\n   at Microsoft.Build.BackEnd.SdkResolution.SdkResolverLoader.LoadResolvers(LoggingContext loggingContext, ElementLocation location)\r\n   at Microsoft.Build.BackEnd.SdkResolution.SdkResolverService.Initialize(LoggingContext loggingContext, ElementLocation location)\r\n   at Microsoft.Build.BackEnd.SdkResolution.SdkResolverService.ResolveSdk(Int32 submissionId, SdkReference sdk, LoggingContext loggingContext, ElementLocation sdkReferenceLocation, String solutionPath, String projectPath, Boolean interactive)\r\n   at Microsoft.Build.BackEnd.SdkResolution.CachingSdkResolverService.<>c__DisplayClass3_0.<ResolveSdk>b__0(String key)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Microsoft.Build.BackEnd.SdkResolution.CachingSdkResolverService.ResolveSdk(Int32 submissionId, SdkReference sdk, LoggingContext loggingContext, ElementLocation sdkReferenceLocation, String solutionPath, String projectPath, Boolean interactive)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImportsFromUnescapedImportExpressionConditioned(String directoryOfImportingFile, ProjectImportElement importElement, List`1& projects, SdkResult& sdkResult, Boolean throwOnFileNotExistsError)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImports(String directoryOfImportingFile, ProjectImportElement importElement, SdkResult& sdkResult)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.Evaluate(ILoggingService loggingService, BuildEventContext buildEventContext)\r\n   at Microsoft.Build.Evaluation.Project.Reevaluate(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project.Initialize(IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project..ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.ProjectCollection.LoadProject(String fileName, IDictionary`2 globalProperties, String toolsVersion)\r\n   at Microsoft.DotNet.Cli.Utils.MSBuildProject..ctor(String msBuildProjectPath, NuGetFramework framework, String configuration, String outputPath, String msBuildExePath)\r\n   at Microsoft.DotNet.Cli.Utils.ProjectFactory.GetMSBuildProj(String projectDirectory, NuGetFramework framework, String configuration, String outputPath)\r\nprojecttoolscommandresolver: ProjectFactory did not find Project.\r\n/Users/daniel.white/Builds/foo/foo.csproj(12,5): error MSB3073: The command \"dotnet -d swagger\" exited with code 1.\r\nDone building project \"foo.csproj\" -- FAILED.\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n(from inside VS for Mac)\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.802\r\n Commit:    177d0b2525\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.1.802/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  2.1.504 [/usr/local/share/dotnet/sdk]\r\n  2.1.802 [/usr/local/share/dotnet/sdk]\r\n  3.0.100 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n```\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"10690427804","Type":"IssuesEvent","CreatedAt":"2019-10-22T22:45:38","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/12966","RelatedDescription":"Opened issue \"Port to other branches\" (#12966) at dotnet/cli","RelatedBody":"- [ ] https://github.com/dotnet/cli/pull/12955\r\n- [ ] https://github.com/dotnet/cli/pull/12899\r\n"},{"Id":"10690149681","Type":"IssuesEvent","CreatedAt":"2019-10-22T21:58:55","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/12960","RelatedDescription":"Closed issue \"dotnet test can't find included runtime\" (#12960) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nCreate an nunit test project that targets netcoreapp3.0. As of today, it uses the latest microsoft test sdk package and the latest nunit adapter package.\r\n\r\nDownload the 3.0 SDK ZIP file and unzip it.\r\n\r\nRun dotnet test from the 3.0 SDK's folder against the solution.\r\n\r\nAs can be seen below, running dotnet --list-runtimes shows the 3.0 runtime included with the SDK. However, when dotnet test is running, it is unable to find the same runtime that it just found and only lists the pre-installed runtimes. We would prefer not to actually install the runtime and just have it run properly from the zip archive SDK. It should be able to use the runtime that it is clearly able to find with --list-runtimes instead of only being able to use the pre-installed runtimes that it later lists during test execution.\r\n\r\n## Expected  behavior\r\nRuns tests\r\n\r\n## Actual behavior\r\n[22:42:47][Exec] Test run for C:\\w\\99694c0b2afac045\\Source\\Pleasant.Tests\\bin\\Release\\netcoreapp3.0\\Pleasant.Tests.dll(.NETCoreApp,Version=v3.0)\r\n[22:42:47][Exec] Microsoft (R) Test Execution Command Line Tool Version 16.3.0\r\n[22:42:47][Exec] Copyright (c) Microsoft Corporation.  All rights reserved.\r\n[22:42:47][Exec] \r\n[22:42:47][Exec] Starting test execution, please wait...\r\n[22:42:48][Exec] \r\n[22:42:48][Exec] A total of 1 test files matched the specified pattern.\r\n[22:42:48][Exec] EXEC It was not possible to find any compatible framework version\r\n[22:42:48][Exec] The specified framework 'Microsoft.NETCore.App', version '3.0.0' was not found.\r\n[22:42:48][Exec]   - Check application dependencies and target a framework version installed at:\r\n[22:42:48][Exec]       C:\\Program Files\\dotnet\r\n[22:42:48][Exec]   - Installing .NET Core prerequisites might help resolve this problem:\r\n[22:42:48][Exec]       https://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n[22:42:48][Exec]   - The .NET Core framework and SDK can be installed from:\r\n[22:42:48][Exec]       https://aka.ms/dotnet-download\r\n[22:42:48][Exec]   - The following versions are installed:\r\n[22:42:48][Exec]       1.0.1 at [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:48][Exec]       2.0.5 at [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:48][Exec]       2.0.7 at [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:48][Exec]       2.0.9 at [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:48][Exec]       2.1.3 at [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:48][Exec]       2.1.5 at [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:48][Exec]       2.1.9 at [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:48][Exec]       2.1.11 at [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:48][Exec]       2.1.12 at [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n## Environment data\r\nUsing 3.0.100 SDK.\r\n\r\n[22:42:25][TestSolution] Exec\r\n[22:42:25][Exec] \"C:\\w\\99694c0b2afac045\\Build\\dotnetsdk\\dotnet\" --list-sdks\r\n[22:42:25][Exec] 1.0.0-preview2-003131 [C:\\Program Files\\dotnet\\sdk]\r\n[22:42:25][Exec] 2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n[22:42:25][Exec] 2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n[22:42:25][Exec] 2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n[22:42:25][Exec] 2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n[22:42:25][Exec] 2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n[22:42:25][Exec] 2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n[22:42:25][Exec] 2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n[22:42:25][Exec] 2.1.508 [C:\\Program Files\\dotnet\\sdk]\r\n[22:42:25][Exec] 3.0.100 [C:\\w\\99694c0b2afac045\\Build\\dotnetsdk\\sdk]\r\n[22:42:25][TestSolution] ............................................................\r\n[22:42:25][TestSolution] Exec\r\n[22:42:25][Exec] \"C:\\w\\99694c0b2afac045\\Build\\dotnetsdk\\dotnet\" --list-runtimes\r\n[22:42:25][Exec] Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n[22:42:25][Exec] Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n[22:42:25][Exec] Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n[22:42:25][Exec] Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n[22:42:25][Exec] Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n[22:42:25][Exec] Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n[22:42:25][Exec] Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n[22:42:25][Exec] Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n[22:42:25][Exec] Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n[22:42:25][Exec] Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n[22:42:25][Exec] Microsoft.AspNetCore.App 3.0.0 [C:\\w\\99694c0b2afac045\\Build\\dotnetsdk\\shared\\Microsoft.AspNetCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 1.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 3.0.0 [C:\\w\\99694c0b2afac045\\Build\\dotnetsdk\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.WindowsDesktop.App 3.0.0 [C:\\w\\99694c0b2afac045\\Build\\dotnetsdk\\shared\\Microsoft.WindowsDesktop.App]"},{"Id":"10690111469","Type":"PullRequestEvent","CreatedAt":"2019-10-22T21:53:11","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12965","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from nuget/nuget.client\" (#12965) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1b614b5a-9a27-47ab-b39c-08d727dac64c)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Build**: 5.4.0.6271\r\n- **Date Produced**: 10/19/2019 4:24 AM\r\n- **Commit**: c1f6915918b82c096bbd666bd9c18528f1f70630\r\n- **Branch**: refs/heads/dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.4.0-preview.3.6271\r\n\r\n[marker]: <> (End:1b614b5a-9a27-47ab-b39c-08d727dac64c)\r\n\r\n"},{"Id":"10689661835","Type":"PullRequestEvent","CreatedAt":"2019-10-22T20:52:45","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12965","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from nuget/nuget.client\" (#12965) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1b614b5a-9a27-47ab-b39c-08d727dac64c)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Build**: 5.4.0.6271\r\n- **Date Produced**: 10/19/2019 4:24 AM\r\n- **Commit**: c1f6915918b82c096bbd666bd9c18528f1f70630\r\n- **Branch**: refs/heads/dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.4.0-preview.3.6271\r\n\r\n[marker]: <> (End:1b614b5a-9a27-47ab-b39c-08d727dac64c)\r\n\r\n"},{"Id":"10689642556","Type":"PullRequestEvent","CreatedAt":"2019-10-22T20:50:31","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12964","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12964) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191022.3\r\n- **Date Produced**: 10/22/2019 7:29 PM\r\n- **Commit**: 1ea47f119b25bd0c4c475ef444abf591d4b890f9\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview2.19522.3\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n"},{"Id":"10689355102","Type":"PullRequestEvent","CreatedAt":"2019-10-22T20:15:13","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12964","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12964) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191022.3\r\n- **Date Produced**: 10/22/2019 7:29 PM\r\n- **Commit**: 1ea47f119b25bd0c4c475ef444abf591d4b890f9\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview2.19522.3\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"10690406417","Type":"IssuesEvent","CreatedAt":"2019-10-22T22:41:17","Actor":"TomasMorton","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1622","RelatedDescription":"Opened issue \"Targeting netstandard2.1 conflicts with System.Data.DataSetExtensions\" (#1622) at dotnet/standard","RelatedBody":"I'm trying to upgrade my solution to DotNet Core 3.  I have references to Entity Framework, which has forced an upgrade to netstandard 2.1.\r\n\r\nHowever, my classes that were using the DataTableExtensions are now unable to compile due to the following error:\r\n`[CS0121] The call is ambiguous between the following methods or properties: 'System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)' and 'System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)'`\r\nand also\r\n`[CS0433] The type 'TypedTableBase<T>' exists in both 'System.Data.DataSetExtensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089' and 'netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'`\r\n\r\nI have removed all Nuget packages for System.Data.DataSetExtensions, but I probably have a transitive dependency somewhere in the graph.\r\n\r\nThis problem seems to be the same as the previous one in https://github.com/dotnet/corefx/issues/37738.\r\n\r\nI would appreciate any workarounds to get my solution compiling as soon as possible."},{"Id":"10685362208","Type":"PullRequestEvent","CreatedAt":"2019-10-22T12:32:27","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1621","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1621) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191021.4\r\n- **Date Produced**: 10/21/2019 11:38 PM\r\n- **Commit**: 46299619e290936c495264162ede68354ced5b18\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19521.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19521.4\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19521.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10685279169","Type":"PullRequestEvent","CreatedAt":"2019-10-22T12:22:22","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1621","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1621) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191021.4\r\n- **Date Produced**: 10/21/2019 11:38 PM\r\n- **Commit**: 46299619e290936c495264162ede68354ced5b18\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19521.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19521.4\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19521.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10675738806","Type":"PullRequestEvent","CreatedAt":"2019-10-21T12:23:02","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1620","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1620) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191020.7\r\n- **Date Produced**: 10/21/2019 6:09 AM\r\n- **Commit**: 03453d9aae8e5d18e571699c5d2229b1ab5f4b9d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19520.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19520.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19520.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10675662428","Type":"PullRequestEvent","CreatedAt":"2019-10-21T12:12:56","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1620","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1620) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191020.7\r\n- **Date Produced**: 10/21/2019 6:09 AM\r\n- **Commit**: 03453d9aae8e5d18e571699c5d2229b1ab5f4b9d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19520.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19520.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19520.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"10692065089","Type":"PullRequestEvent","CreatedAt":"2019-10-23T05:17:55","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/41878","RelatedDescription":"Merged pull request \"[release/3.1] JsonSerializer should ignore extension data if it's null when serializing + additional tests\" (#41878) at dotnet/corefx","RelatedBody":"Ports https://github.com/dotnet/corefx/pull/40431 and more tests from https://github.com/dotnet/corefx/pull/40488, https://github.com/dotnet/corefx/pull/41877 ~(once this is merged to master)~\r\n\r\n### Description\r\n\r\nDo not output the extension data property when its null.\r\n\r\n### Customer Impact:\r\n\r\nCustomer reported issue. Overflow properties annotated accordingly shouldn't show up in the generated JSON payload and it showing up in the output is incorrect. Only it's contents should show up (and when null that means nothing). Paraphrasing @CodeBlanch, this better matches the intention of `[JsonExtensionData]` and Newtonsoft.Json behavior so people aren't surprised when using the new lib.\r\n\r\n### Regression? \r\n\r\nNo, but this is a behavioral change from 3.0 (but that's already changed in master for 5.0).\r\n\r\n### Risk\r\n\r\nLow. The fix is targeted specific to extension data property. It is theoretically possible someone relies on the property itself showing up in the output, but I would be surprised if that was the case since that's not its intended behavior outside of the \"null\" case already.\r\n\r\n### Tests run / added\r\n\r\nMore unit tests added.\r\n\r\ncc @steveharter, @ericstj, @danmosemsft "},{"Id":"10692062552","Type":"PullRequestEvent","CreatedAt":"2019-10-23T05:17:22","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42025","RelatedDescription":"Opened pull request \"[release/3.1] Use ThrowHelper in Utf8JsonReader.GetGuid so that the deserializer can catch the exception and re-throw JsonException\" (#42025) at dotnet/corefx","RelatedBody":"Fixes https://github.com/dotnet/corefx/issues/41032\r\n\r\nPorting https://github.com/dotnet/corefx/pull/40938 which addresses https://github.com/aspnet/AspNetCore/issues/13811\r\n\r\n### Description\r\n\r\nUse the existing ThrowHelper which sets the source of the exception correctly for the case of Guid so that the deserializer knows to re-catch that and throw the expected JsonException (like all other data types we support). Renaming the internal `DateType` to `DataType` to correctly reflect its usage.\r\n\r\n### Customer Impact:\r\n\r\nCustomer reported issue. When processing mismatching JSON payload within an AspNetCore WebAPI that expected Guids, the user sees a 500 error (Internal Server Error) rather than the expected 400 (Bad Request Error). Asp.Net expects a JsonException in this case from the deserializer and we are leaking FormatException.\r\n\r\nSnippet from issue - Expected behavior:\r\n> Invalid GUID should trigger a \"Bad Request\" (400) response with a ProblemDetails object, not an Internal server error.\r\n\r\n### Regression? \r\n\r\nNo\r\n\r\n### Risk\r\n\r\nLow. Other than the rename and tests, the change is a one line fix and we are still throwing the same exception from the reader. We are now correctly throwing `JsonException` from the Deserializer. The only concern would be if someone was catching and relying on the previous exception rather than `JsonException` but that would be an incorrect approach anyway.\r\n\r\n### Tests run / added\r\n\r\nUnit tests added for \"mismatching\" deserialization of the supported primitive types and validated within an aspnet web api that the fix from master works as expected.\r\n\r\ncc @pranavkm, @ericstj, @danmosemsft \r\n"},{"Id":"10691706351","Type":"IssuesEvent","CreatedAt":"2019-10-23T03:48:06","Actor":"Bio2hazard","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/42024","RelatedDescription":"Opened issue \"Timeout or Keep-Alive for open connection from HttpCompletionOption.ResponseHeadersRead ?\" (#42024) at dotnet/corefx","RelatedBody":"Hi,\r\n\r\nwe have noticed that some of the background workers on our services occasionally just stop. \r\n\r\nInvestigating the issue, I found that a library we use is using ResponseHeadersRead and that the workers stop because the target machine disappeared without explicitly closing the socket.\r\n\r\nOur workers have stopped working for many hours ( before we inevitably restart them ), so it does not seem like these open connections have any timeouts or keep-alives on them.\r\n\r\nMy questions are:\r\n\r\n1) Is there any way we can set a application-wide timeout or keep-alive or even maximum read time for these open stream connections?\r\n\r\n2) Is there any way to abort an on-going read? I have tried disposing of stream, but the other thread remains blocked trying to read from the socket.\r\n\r\n3) Can you offer some guidance or best practices around the problem? Streams are very abstract, and if all your method receives is a Stream, it's next to impossible to know how to safely work with the given stream. Furthermore, none of the convenience methods seem to support cancellation tokens, and any synchronous reads appear doomed to begin with. \r\n    - `HttpContent.ReadAsStringAsync` ? No CTS Support => Application Deadlock Potential\r\n    - `HttpContent.ReadAsByteArrayAsync` ? No CTS Support => Application Deadlock Potential\r\n    - `HttpContent.ReadAsStreamAsync` > `StreamReader.ReadToEndAsync` ? No CTS Support => Application Deadlock Potential\r\n    - `HttpContent.ReadAsStreamAsync` > `StreamReader.ReadLineAsync` ? No CTS Support => Application Deadlock Potential\r\n    - `HttpContent.ReadAsStreamAsync` > Any synchronous call that reads from a stream => Application Deadlock Potential\r\n\r\nIt feels like the exact situation that `Stream.CanTimeout` , `Stream.ReadTimeout` and `Stream.WriteTimeout` was made for, but for some reason they are not supported either."},{"Id":"10691671964","Type":"PullRequestEvent","CreatedAt":"2019-10-23T03:39:26","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42023","RelatedDescription":"Opened pull request \"When encoder is null, use JavaScriptEncoder.Default to check for NeedsEscaping\" (#42023) at dotnet/corefx","RelatedBody":"See related PRs https://github.com/dotnet/corefx/pull/41845, https://github.com/dotnet/corefx/pull/41933\r\n\r\nNow that the built-in `JavaScriptEncoder` implementations have been optimized, S.T.Json can leverage those rather than having its own (duplicate) logic. This is true, at least for the `NeedsEscaping` check.\r\n\r\nThis PR effectively reverts the optimizations made in https://github.com/dotnet/corefx/pull/41845/ since those went down to S.T.E.W.\r\n\r\nIdeally, we'd get rid of the encoding logic as well, when encoder == null, but the S.T.E.W implementation needs to be made faster first (for the common cases) to avoid the regression.\r\n\r\nSomething like the following change (which treats null as JavaScriptEncoder.Deafult across the board)\r\nhttps://github.com/ahsonkhan/corefx/commit/ced1ee0e225844fa27b0b902aeedc16dc9cb2386\r\n\r\nhttps://github.com/dotnet/corefx/blob/623703d941115131a7f269f9e23560f6d937837c/src/System.Text.Json/src/System/Text/Json/Writer/JsonWriterHelper.Escaping.cs#L301-L330\r\n\r\ncc @steveharter, @GrabYourPitchforks, @gfoidl "},{"Id":"10691625180","Type":"PullRequestEvent","CreatedAt":"2019-10-23T03:27:50","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42022","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#42022) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10691534510","Type":"PullRequestEvent","CreatedAt":"2019-10-23T03:08:06","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42020","RelatedDescription":"Merged pull request \"Fix several Socket tests to not dispose an event on failure\" (#42020) at dotnet/corefx","RelatedBody":"When I run these tests locally, due to my network configuration they sometimes fail.  If they fail and the test is disposing of the ManualResetEvent, the async callback may try to set the event after it's already been disposed, which throws an exception that crashes the test process.  The easy fix is to just dispose of these MRE instances on success and let their finalizers clean up for them if the tests fail."},{"Id":"10691426710","Type":"PullRequestEvent","CreatedAt":"2019-10-23T02:42:50","Actor":"carlossanlop","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/41834","RelatedDescription":"Merged pull request \"Add directory creation method that takes an ACL\" (#41834) at dotnet/corefx","RelatedBody":"Fixes https://github.com/dotnet/corefx/issues/41614\r\n\r\n@JeremyKuhne "},{"Id":"10691426694","Type":"IssuesEvent","CreatedAt":"2019-10-23T02:42:49","Actor":"carlossanlop","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/41614","RelatedDescription":"Closed issue \"API Proposal: Add file and directory creation methods that take an ACL\" (#41614) at dotnet/corefx","RelatedBody":"### Summary\r\n\r\n.NET ACL (Access Control List) support is Windows specific (`FileSecurity` and `DirectorySecurity`). We keep support in `System.IO.FileSystem.AccessControl` and do not have references to the ACL types in base `System.IO` types in .NET Core (e.g. `File`, `DirectoryInfo`, `FileStream`). We have extension methods in `System.IO.FileSystemAclExtensions` to get and set ACLs instead. We do not, however, have methods that let you create files and directories with a specific ACL set.\r\n\r\nThis presents a few problems:\r\n\r\n- Potential security hole as files/directories can be accessed between creation and modification\r\n- Porting difficulties as there isn't a 1-1 API replacement\r\n- Stability issues with background processes (file filters) can prevent modifying ACLs right after creation (typically surfaces as a security exception)\r\n\r\nWe need to add helper methods that prevent these problems. Adding back API isn't feasible as `FileStream` lives in CoreLib and would require pulling down a rather large closure (above and beyond putting Windows specific API in front of Unix/cross-plat developers). Having these as extension methods also facilitates writing .NET Standard libraries.\r\n\r\n### Proposal\r\n\r\n``` C#\r\nusing System.Security.AccessControl;\r\n\r\nnamespace System.IO\r\n{\r\n    public static class FileSystemAclExtensions\r\n    {\r\n        // Add\r\n        public static FileStream Create(\r\n            this FileInfo fileInfo,\r\n            FileMode mode,\r\n            FileSystemRights rights,\r\n            FileShare share,\r\n            int bufferSize,\r\n            FileOptions options,\r\n            FileSecurity fileSecurity);\r\n\r\n        public static void Create(\r\n            this DirectoryInfo directoryInfo,\r\n            DirectorySecurity directorySecurity);\r\n\r\n        public static FileStream CreateFile(\r\n            this FileSecurity fileSecurity,\r\n            string path,\r\n            FileMode mode,\r\n            FileSystemRights rights,\r\n            FileShare share,\r\n            int bufferSize,\r\n            FileOptions options);\r\n\r\n        public static DirectoryInfo CreateDirectory(\r\n            this DirectorySecurity directorySecurity\r\n            string path);\r\n\r\n        // Existing\r\n        public static DirectorySecurity GetAccessControl(this DirectoryInfo directoryInfo);\r\n        public static DirectorySecurity GetAccessControl(this DirectoryInfo directoryInfo, AccessControlSections includeSections);\r\n        public static FileSecurity GetAccessControl(this FileInfo fileInfo);\r\n        public static FileSecurity GetAccessControl(this FileInfo fileInfo, AccessControlSections includeSections);\r\n        public static FileSecurity GetAccessControl(this FileStream fileStream);\r\n        public static void SetAccessControl(this DirectoryInfo directoryInfo, DirectorySecurity directorySecurity);\r\n        public static void SetAccessControl(this FileInfo fileInfo, FileSecurity fileSecurity);\r\n        public static void SetAccessControl(this FileStream fileStream, FileSecurity fileSecurity);\r\n}\r\n```\r\n\r\n### Details\r\n\r\nHeuristics would follow .NET Framework as closely as possible. Directory creation is the most important of the two as you can prevent malicious file access if the directory is locked from the start.\r\n\r\nFor directory creation we would likely include the same sources that `System.IO.FileSystem` uses as the directory creation helper there already sets a \"default\" security object and would just need to have an overload added (which would allow creation heuristics to match properly, including error states).\r\n\r\nFile creation is a bit more complicated as the logic may take a bit more refactoring, but we should strive to include the same sources as well.\r\n\r\nMarking as 3.1 as internal partners are hitting this in porting efforts.\r\n\r\n### Related Issues\r\n\r\n#31488\r\n\r\nCC: @danmosemsft, @ericstj, @terrajobst"},{"Id":"10691318308","Type":"PullRequestEvent","CreatedAt":"2019-10-23T02:17:10","Actor":"tannergooding","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42021","RelatedDescription":"Opened pull request \"Move Matrix3x2/4x4, Plan, and Quaternion to the shared CoreLib partition\" (#42021) at dotnet/corefx","RelatedBody":"This should have been part of https://github.com/dotnet/corefx/pull/42005. `Vector2/3/4` expose methods that take `Matrix3x2`, `Matrix4x4`, and `Quaternion`. `Matrix4x4` then exposes methods that take in `Plane`.\r\n\r\nThis means that all `System.Numerics.Vectors` types move down to S.P.Corelib.\r\n\r\nCC. @CarolEidt, @jkotas "},{"Id":"10691181244","Type":"PullRequestEvent","CreatedAt":"2019-10-23T01:43:38","Actor":"JeremyKuhne","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42007","RelatedDescription":"Merged pull request \"Handle non blittable LOGFONT structs (#41975)\" (#42007) at dotnet/corefx","RelatedBody":"### Summary\r\n\r\n`System.Drawing.Font.FromLogFont(object lf)` takes a LOGFONT “structure” to create a `Font`. User defined structs that are not blittable (that have a reference type in them) no longer work with this API. This issue was found by a WinForms customer that was trying to port.\r\n\r\n### Customer Impact\r\n\r\nUser can no longer use some existing LOGFONT wrapping types. The workaround is to convert the struct to a class or blittable struct.\r\n\r\n### Risk\r\n\r\nLow. I was choosing the wrong code path for non-blittable structs. Change is simple.\r\n\r\nFixes: https://github.com/dotnet/winforms/issues/2136\r\nPorts https://github.com/dotnet/corefx/pull/41975 (with additional changes per @jkotas feedback)\r\n"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"10691747759","Type":"PullRequestEvent","CreatedAt":"2019-10-23T03:58:28","Actor":"dibarbet","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39457","RelatedDescription":"Opened pull request \"Refactor task center progress reporting\" (#39457) at dotnet/roslyn","RelatedBody":""},{"Id":"10691586591","Type":"PullRequestEvent","CreatedAt":"2019-10-23T03:19:00","Actor":"ivanbasov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39455","RelatedDescription":"Merged pull request \"Handle intellicode star in display text prefix\" (#39455) at dotnet/roslyn","RelatedBody":"Currently, commit-if-unique does not work in TypeScript and JavaScript files.\r\nThis is because TypeScript adds the IntelliCode star to completion items in the display text prefix and therefore they are not currently deduplicated from the perspective of the ItemManager.\r\nHere, we update the implementation of `IsPreferredItem` to handle this case.\r\n\r\nNote that we do not need to update the override for VSCompletionItems because there's no equivalent prefix field (also, I'm not convinced that that override is even used, but I'm not sure enough to remove it)."},{"Id":"10691038300","Type":"IssuesEvent","CreatedAt":"2019-10-23T01:07:45","Actor":"ryzngard","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/39388","RelatedDescription":"Closed issue \"Lots of code refactoring providers crashes when entering [ before a function argument.\" (#39388) at dotnet/roslyn","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/778350/lots-of-code-refactoring-providers-crashes-when-en.html)._\n\n---\nThe following refactoring providers crashes when I try to type a `[` before a function argument with almost the same stacktrace:\n\n- **ReplacePropertyWithMethodsCodeRefactoringProvider**\n- **ReplaceMethodWithPropertyCodeRefactoringProvider**\n- **CSharpIntroduceUsingStatementCodeRefactoringProvider**\n- **CSharpConvertAnonymousTypeToClassCodeRefactoringProvider**\n- **CSharpInitializeMemberFromParameterCodeRefactoringProvider**\n- **CSharpAddParameterCheckCodeRefactoringProvider**\n\nStacktrace (I just put one as an example since all are the same down to `at async Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringContextExtensions.TryGetRelevantNodeAsync[TSyntaxNode](&lt;Unknown Parameters&gt;)`:\n\n```\nSystem.ArgumentOutOfRangeException : Specified argument was out of the range of valid values.\nParameter name: position\n   at Microsoft.CodeAnalysis.SyntaxNode.FindTokenCore(Int32 position,Boolean findInsideTrivia)\n   at Microsoft.CodeAnalysis.Shared.Extensions.SyntaxNodeExtensions.GetInitialToken(SyntaxNode root,Int32 position,Boolean includeSkipped,Boolean includeDirectives,Boolean includeDocumentationComments)\n   at Microsoft.CodeAnalysis.Shared.Extensions.SyntaxNodeExtensions.FindTokenOnRightOfPosition(SyntaxNode root,Int32 position,Boolean includeSkipped,Boolean includeDirectives,Boolean includeDocumentationComments)\n   at Microsoft.CodeAnalysis.LanguageServices.AbstractSyntaxFactsService.GetStartOfNodeExcludingAttributes(SyntaxNode node)\n   at Microsoft.CodeAnalysis.LanguageServices.AbstractSyntaxFactsService.IsOnHeader[THoleSyntax](Int32 position,SyntaxNode ownerOfHeader,SyntaxNodeOrToken lastTokenOrNodeOfHeader,ImmutableArray`1 holes)\n   at Microsoft.CodeAnalysis.LanguageServices.AbstractSyntaxFactsService.IsOnHeader(Int32 position,SyntaxNode ownerOfHeader,SyntaxNodeOrToken lastTokenOrNodeOfHeader)\n   at Microsoft.CodeAnalysis.CSharp.CSharpSyntaxFactsService.IsOnParameterHeader(SyntaxNode root,Int32 position,SyntaxNode&amp; parameter)\n   at Microsoft.CodeAnalysis.CodeRefactorings.AbstractRefactoringHelpersService`2. &lt;ExtractNodesInHeader&gt;d__7.MoveNext()\n   at System.Linq.Enumerable. &lt;OfTypeIterator&gt;d__95`1.MoveNext()\n   at System.Linq.Enumerable.WhereEnumerableIterator`1.MoveNext()\n   at Microsoft.CodeAnalysis.CodeRefactorings.AbstractRefactoringHelpersService`2.AddNonHiddenCorrectTypeNodes[TSyntaxNode](IEnumerable`1 nodes,ArrayBuilder`1 resultBuilder,CancellationToken cancellationToken)\n   at async Microsoft.CodeAnalysis.CodeRefactorings.AbstractRefactoringHelpersService`2.GetRelevantNodesAsync[TExpressionSyntax,TArgumentSyntax,TSyntaxNode](&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringContextExtensions.GetRelevantNodesAsync[TSyntaxNode](&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringContextExtensions.TryGetRelevantNodeAsync[TSyntaxNode](&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.ReplacePropertyWithMethods.AbstractReplacePropertyWithMethodsService`5.GetPropertyDeclarationAsync[TIdentifierNameSyntax,TExpressionSyntax,TCrefSyntax,TStatementSyntax,TPropertySyntax]( &lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.ReplacePropertyWithMethods.ReplacePropertyWithMethodsCodeRefactoringProvider.ComputeRefactoringsAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringService.GetRefactoringFromProviderAsync(&lt;Unknown Parameters&gt;)\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\n```\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 10/15/2019, 11:25 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 10/18/2019, 09:43 AM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"10690994346","Type":"PullRequestEvent","CreatedAt":"2019-10-23T00:57:33","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39456","RelatedDescription":"Opened pull request \"Add external access shims for TypeScript editor features layer.\" (#39456) at dotnet/roslyn","RelatedBody":""},{"Id":"10690812075","Type":"PullRequestEvent","CreatedAt":"2019-10-23T00:11:41","Actor":"uniqueiniquity","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39455","RelatedDescription":"Opened pull request \"Handle intellicode star in display text prefix\" (#39455) at dotnet/roslyn","RelatedBody":"Currently, commit-if-unique does not work in TypeScript and JavaScript files.\r\nThis is because TypeScript adds the IntelliCode star to completion items in the display text prefix and therefore they are not currently deduplicated from the perspective of the ItemManager.\r\nHere, we update the implementation of `IsPreferredItem` to handle this case.\r\n\r\nNote that we do not need to update the override for VSCompletionItems because there's no equivalent prefix field (also, I'm not convinced that that override is even used, but I'm not sure enough to remove it)."},{"Id":"10690780625","Type":"PullRequestEvent","CreatedAt":"2019-10-23T00:03:58","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39454","RelatedDescription":"Opened pull request \"Merge master to features/local-function-attributes\" (#39454) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10690780113","Type":"PullRequestEvent","CreatedAt":"2019-10-23T00:03:51","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39453","RelatedDescription":"Opened pull request \"Merge master to master-vs-deps\" (#39453) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"10690503605","Type":"PullRequestEvent","CreatedAt":"2019-10-22T23:00:54","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7837","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx\" (#7837) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"10690204548","Type":"PullRequestEvent","CreatedAt":"2019-10-22T22:07:20","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7836","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7836) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @AaronRobinsonMSFT"},{"Id":"10690173026","Type":"PullRequestEvent","CreatedAt":"2019-10-22T22:02:31","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7836","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7836) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10688651461","Type":"PullRequestEvent","CreatedAt":"2019-10-22T18:41:17","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7834","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7834) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @adamsitnik @jkotas @filipnavara @tannergooding"},{"Id":"10688309488","Type":"IssuesEvent","CreatedAt":"2019-10-22T17:57:40","Actor":"tiandian","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7835","RelatedDescription":"Opened issue \"Is it possible to provide a tool to scan a c# project(and .net dll) to list all codes that are not compatible with corert?\" (#7835) at dotnet/corert","RelatedBody":"For my asp.net core c# project, it's a bit complicated, and it references some third party dlls, after spend some time, i fixing some problems, now it can build with corert, but when run, it will error.\r\n\r\nI don't know how many potential problems in my project are incompatible with corert.\r\n\r\nSo if you can provide a tool to scan my c# project, and list all codes that incompatible with corert, then i can modify all these codes before release it, otherwise, even if it can run now, there will still be potential errors.\r\n\r\nIf after fix all my c# project's incompatible problem, it still run error, then i know it must be some third party dlls are incompatible with corert, then i can disassembly the dll one by one to c# codes and scan it to find which one incompatible with corert, then submit a request to the dll's owner to compatible with corert. \r\n\r\nThanks."},{"Id":"10688138889","Type":"PullRequestEvent","CreatedAt":"2019-10-22T17:36:04","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7834","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7834) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10682428506","Type":"IssuesEvent","CreatedAt":"2019-10-22T05:20:51","Actor":"DardoTheMaster","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7832","RelatedDescription":"Closed issue \"Unable to compile on Ubuntu 18.04 (WSL)\" (#7832) at dotnet/corert","RelatedBody":"Hello, i'm just trying out to build a shared library from a dotnet project.\r\nUnfortunately i'm getting this error and i'm unable to build the underlined project.\r\n\r\n```\r\n$ dotnet publish /p:NativeLib=Shared -r linux-x64\r\nMicrosoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj : warning NU1603: NativeLibrary depends on Microsoft.DotNet.ILCompiler (>= 1.0.0-alpha-27527-01) but Microsoft.DotNet.ILCompiler 1.0.0-alpha-27527-01 was not found. An approximate best match of Microsoft.DotNet.ILCompiler 1.0.0-alpha-27606-05 was resolved.\r\n  Restore completed in 63.25 ms for /mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj.\r\n/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj : warning NU1603: NativeLibrary depends on Microsoft.DotNet.ILCompiler (>= 1.0.0-alpha-27527-01) but Microsoft.DotNet.ILCompiler 1.0.0-alpha-27527-01 was not found. An approximate best match of Microsoft.DotNet.ILCompiler 1.0.0-alpha-27606-05 was resolved.\r\n  NativeLibrary -> /mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/bin/Debug/netcoreapp3.0/linux-x64/NativeLibrary.dll\r\n  /usr/bin/clang-6.0\r\n  Generating native code\r\nclang : warning : argument unused during compilation: '-exported_symbols_list obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.exports' [-Wunused-command-line-argument] [/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj]\r\n  /usr/bin/ld: obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.o: relocation R_X86_64_PC32 against symbol `System_Console_System_Text_StringOrCharArray____GetFieldHelper' can not be used when making a shared object; recompile with -fPIC\r\n  /usr/bin/ld: final link failed: Bad value\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj]\r\n/home/dardo/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/build/Microsoft.NETCore.Native.targets(337,5): error MSB3073: The command \"clang-6.0 \"obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.o\" -o \"bin/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.so\" -exported_symbols_list \"obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.exports\" /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libbootstrapperdll.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libRuntime.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libSystem.Private.CoreLib.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libSystem.Private.TypeLoader.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Globalization.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.IO.Compression.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Net.Security.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Security.Cryptography.Native.OpenSsl.a -g -Wl,-rpath,'$ORIGIN' -Wl,--as-needed -pthread -lstdc++ -ldl -lm -lz -lgssapi_krb5 -lrt -shared\" exited with code 1. [/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj]\r\ndardo@LAPTOP-TQ8D057I:/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary$\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"10681798208","Type":"PullRequestEvent","CreatedAt":"2019-10-22T02:26:36","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7833","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7833) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @eriawan @danmosemsft @AaronRobinsonMSFT @stephentoub @GrabYourPitchforks @delmyers @benaadams @tannergooding"},{"Id":"10680769818","Type":"PullRequestEvent","CreatedAt":"2019-10-21T22:18:52","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7833","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7833) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10675768976","Type":"IssuesEvent","CreatedAt":"2019-10-21T12:26:51","Actor":"DardoTheMaster","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7832","RelatedDescription":"Opened issue \"Unable to compile on Ubuntu 18.04 (WSL)\" (#7832) at dotnet/corert","RelatedBody":"Hello, i'm just trying out to build a shared library from a dotnet project.\r\nUnfortunately i'm getting this error and i'm unable to build the underlined project.\r\n\r\n```\r\n$ dotnet publish /p:NativeLib=Shared -r linux-x64\r\nMicrosoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj : warning NU1603: NativeLibrary depends on Microsoft.DotNet.ILCompiler (>= 1.0.0-alpha-27527-01) but Microsoft.DotNet.ILCompiler 1.0.0-alpha-27527-01 was not found. An approximate best match of Microsoft.DotNet.ILCompiler 1.0.0-alpha-27606-05 was resolved.\r\n  Restore completed in 63.25 ms for /mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj.\r\n/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj : warning NU1603: NativeLibrary depends on Microsoft.DotNet.ILCompiler (>= 1.0.0-alpha-27527-01) but Microsoft.DotNet.ILCompiler 1.0.0-alpha-27527-01 was not found. An approximate best match of Microsoft.DotNet.ILCompiler 1.0.0-alpha-27606-05 was resolved.\r\n  NativeLibrary -> /mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/bin/Debug/netcoreapp3.0/linux-x64/NativeLibrary.dll\r\n  /usr/bin/clang-6.0\r\n  Generating native code\r\nclang : warning : argument unused during compilation: '-exported_symbols_list obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.exports' [-Wunused-command-line-argument] [/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj]\r\n  /usr/bin/ld: obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.o: relocation R_X86_64_PC32 against symbol `System_Console_System_Text_StringOrCharArray____GetFieldHelper' can not be used when making a shared object; recompile with -fPIC\r\n  /usr/bin/ld: final link failed: Bad value\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj]\r\n/home/dardo/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/build/Microsoft.NETCore.Native.targets(337,5): error MSB3073: The command \"clang-6.0 \"obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.o\" -o \"bin/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.so\" -exported_symbols_list \"obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.exports\" /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libbootstrapperdll.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libRuntime.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libSystem.Private.CoreLib.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libSystem.Private.TypeLoader.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Globalization.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.IO.Compression.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Net.Security.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Security.Cryptography.Native.OpenSsl.a -g -Wl,-rpath,'$ORIGIN' -Wl,--as-needed -pthread -lstdc++ -ldl -lm -lz -lgssapi_krb5 -lrt -shared\" exited with code 1. [/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj]\r\ndardo@LAPTOP-TQ8D057I:/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary$\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"10691659535","Type":"IssuesEvent","CreatedAt":"2019-10-23T03:36:13","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/3776","RelatedDescription":"Opened issue \"Catch AppHostMachOFormatException in SDK\" (#3776) at dotnet/sdk","RelatedBody":"corresponding to dotnet/core-setup#8543 "},{"Id":"10690791093","Type":"IssuesEvent","CreatedAt":"2019-10-23T00:06:28","Actor":"ryanbrandenburg","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/3775","RelatedDescription":"Opened issue \"SDK does not handle folders with escaped special characters\" (#3775) at dotnet/sdk","RelatedBody":"### How to reproduce\r\n1. `mkdir mvc%2b; cd mvc%2b; dotnet new mvc`\r\n3. `dotnet new sln`\r\n4. `dotnet sln add mvc%2b/mvc.csproj`\r\n5. `dotnet build`\r\n\r\nThis results in `C:\\Program Files\\dotnet\\sdk\\3.0.100\\NuGet.targets(268,5): error MSB3202: The project file \"~\\projects\\mvc+\\mvc.csproj\" was not found. [~\\projects\\projects.sln]`\r\n\r\nIt seems like somewhere along the way something is trying to decode the URL, and the result is that it can't find the given file.\r\n\r\nIs the answer here possibly that we just don't support the use of special characters in the folder/file structure at all?\r\n\r\nThis is a spin-off of https://github.com/aspnet/AspNetCore/issues/14501"},{"Id":"10690785070","Type":"PullRequestEvent","CreatedAt":"2019-10-23T00:05:01","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3774","RelatedDescription":"Opened pull request \"Merge release/3.1.1xx to master\" (#3774) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/3.1.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.1.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.1.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.1.1xx-to-master --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10690402948","Type":"IssuesEvent","CreatedAt":"2019-10-22T22:40:39","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/3773","RelatedDescription":"Opened issue \"Port remove signature on MAC host to 2.x SDK\" (#3773) at dotnet/sdk","RelatedBody":"https://github.com/dotnet/core-setup/pull/8543#event-2725838361\r\n\r\nget it in January train"},{"Id":"10690000651","Type":"IssuesEvent","CreatedAt":"2019-10-22T21:37:09","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/3614","RelatedDescription":"Closed issue \"5.0.100-alpha1-01483 SDK pulls down 3.0.0 preview 7 when netcoreapp3.0 tfm specified\" (#3614) at dotnet/sdk","RelatedBody":"When building with the nightly 5.0.100-alpha1-01483 SDK and targeting netcoreapp3.0, the SDK will pull down 3.0.0 Preview 7 bits instead of newer previews.\r\n\r\nThis was initially discovered in https://github.com/dotnet/coreclr/issues/26578\r\n\r\nThat issue also has an MSBuild binlog that shows the issue (the `KnownFrameworkReference` for `Microsoft.NETCore.App` for tfm `netcoreapp3.0` has `PackageVersion=3.0.0-preview7-27912-14`)."},{"Id":"10689660607","Type":"PullRequestEvent","CreatedAt":"2019-10-22T20:52:39","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3772","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from nuget/nuget.client\" (#3772) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a8f6ab0e-8160-45b8-5027-08d727dabd66)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Build**: 5.4.0.6271\r\n- **Date Produced**: 10/19/2019 4:24 AM\r\n- **Commit**: c1f6915918b82c096bbd666bd9c18528f1f70630\r\n- **Branch**: refs/heads/dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.4.0-preview.3.6271\r\n\r\n[marker]: <> (End:a8f6ab0e-8160-45b8-5027-08d727dabd66)\r\n\r\n"},{"Id":"10688239676","Type":"PullRequestEvent","CreatedAt":"2019-10-22T17:48:52","Actor":"sfoslund","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3771","RelatedDescription":"Opened pull request \"Fix .pp content files copy to output issue\" (#3771) at dotnet/sdk","RelatedBody":"Addressing Issue #3719\r\n\r\nAdding test/ fix to ensure .pp content files in a package marked copy to output are properly copied into the output directory. "},{"Id":"10688204723","Type":"IssuesEvent","CreatedAt":"2019-10-22T17:44:24","Actor":"RobBowman","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/3769","RelatedDescription":"Closed issue \"The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized\" (#3769) at dotnet/sdk","RelatedBody":"I have VS2019 v16.3.5 installed along with the dotnet core 3 sdk. I can browse to _C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App_ and see lots of the versions of the shared framework in folders from 2.1.9 to 3.0.0\r\n\r\n- create new console app\r\n- edit project file to add:\r\n```\r\n  <ItemGroup>\r\n    <FrameworkReference Include=\"Microsoft.AspNetCore.App\" />\r\n  </ItemGroup>\r\n```\r\n\r\nAll is good :)\r\n\r\nChange target framework to 2.2\r\n\r\nAll is bad :( \r\n\r\nI get the build error: _The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized_\r\n\r\nShould it be possible to target 2.2 and still use the shared framework Microsoft.AspNetCore.App?\r\n\r\n"},{"Id":"10688132410","Type":"PullRequestEvent","CreatedAt":"2019-10-22T17:35:10","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3739","RelatedDescription":"Merged pull request \"Merge release/3.1.1xx to master\" (#3739) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/3.1.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.1.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.1.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.1.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"501128777","IsPullRequest":true,"CreatedAt":"2019-10-01T20:30:20","Actor":"gep13","Number":"150","RawContent":null,"Title":"Add new Cake Maintainer","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Open PR \"Add new Cake Maintainer\" (#150)"},{"Id":"500670461","IsPullRequest":true,"CreatedAt":"2019-10-01T05:27:58","Actor":"JimBobSquarePants","Number":"149","RawContent":null,"Title":"Add ImageSharp","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Open PR \"Add ImageSharp\" (#149)"},{"Id":"475315730","IsPullRequest":false,"CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Number":"148","RawContent":null,"Title":"Clarify guidelines in regards to Options and Requirements","State":"open","Body":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?","Url":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Open issue \"Clarify guidelines in regards to Options and Requirements\" (#148)"},{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-06-13T10:49:30","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Open PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"510997067","IsPullRequest":true,"CreatedAt":"2019-10-23T03:23:13","Actor":"tannergooding","Number":"27377","RawContent":null,"Title":"Adding SkipInit to Internal.Runtime.CompilerServices.Unsafe","State":"closed","Body":"This exposes `Internal.Runtime.CompilerServices.Unsafe.SkipInit` and consumes it in `Decimal.DecCalc`. There were no pmi diffs from doing so.","Url":"https://github.com/dotnet/coreclr/pull/27377","RelatedDescription":"Closed or merged PR \"Adding SkipInit to Internal.Runtime.CompilerServices.Unsafe\" (#27377)"},{"Id":"511038425","IsPullRequest":true,"CreatedAt":"2019-10-23T02:51:57","Actor":"echesakovMSFT","Number":"27382","RawContent":null,"Title":"LeadingZeroCount, LeadingSignCount, PopCount","State":"open","Body":"https://github.com/dotnet/corefx/issues/26182","Url":"https://github.com/dotnet/coreclr/pull/27382","RelatedDescription":"Open PR \"LeadingZeroCount, LeadingSignCount, PopCount\" (#27382)"},{"Id":"510975687","IsPullRequest":true,"CreatedAt":"2019-10-23T02:45:37","Actor":"Dotnet-GitSync-Bot","Number":"27376","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/coreclr/pull/27376","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#27376)"},{"Id":"510897906","IsPullRequest":true,"CreatedAt":"2019-10-23T02:02:29","Actor":"echesakovMSFT","Number":"27372","RawContent":null,"Title":"No merge","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27372","RelatedDescription":"Closed or merged PR \"No merge\" (#27372)"},{"Id":"511005881","IsPullRequest":true,"CreatedAt":"2019-10-23T00:45:53","Actor":"fadimounir","Number":"27381","RawContent":null,"Title":"Use v3.0.100 of the SDK (RTM version)","State":"open","Body":"No reason to use a preview7 version of the SDK now that we shipped.","Url":"https://github.com/dotnet/coreclr/pull/27381","RelatedDescription":"Open PR \"Use v3.0.100 of the SDK (RTM version)\" (#27381)"},{"Id":"510998269","IsPullRequest":true,"CreatedAt":"2019-10-23T00:17:10","Actor":"DrewScoggins","Number":"27378","RawContent":null,"Title":"Update build pools for perf runs","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27378","RelatedDescription":"Open PR \"Update build pools for perf runs\" (#27378)"},{"Id":"510791313","IsPullRequest":true,"CreatedAt":"2019-10-22T23:53:04","Actor":"sandreenko","Number":"27367","RawContent":null,"Title":"Fix noway_assert condition in `optOptimizeBools`.","State":"closed","Body":"It is a noway assert that was added before 2010, so that is hard to say what was the idea here.\r\nHowever, the code before and the examples after show that there is no difference between `GT_EQ` and `GT_NE` and in both cases `c(omparand)` must be the first child of the compare node `t`.\r\n\r\nExisiting comments that confirm that it should be ((a &&b ) || c).\r\n```\r\n/* t1:c1==0 t2:c2==0 ==> Branch to BX if either value is 0\r\n/* t1:c1!=0 t2:c2!=0 ==> Branch to BX if either value is non-0\r\n```\r\n\r\nPVS warning: Priority of the '&&' operation is higher than that of the '||' operation.","Url":"https://github.com/dotnet/coreclr/pull/27367","RelatedDescription":"Closed or merged PR \"Fix noway_assert condition in `optOptimizeBools`.\" (#27367)"},{"Id":"510971650","IsPullRequest":true,"CreatedAt":"2019-10-22T22:49:12","Actor":"jkotas","Number":"27375","RawContent":null,"Title":"Delete stale test exclusion files","State":"open","Body":"The .txt exclusion files do not appear to be used and maintained anymore.","Url":"https://github.com/dotnet/coreclr/pull/27375","RelatedDescription":"Open PR \"Delete stale test exclusion files\" (#27375)"},{"Id":"510971227","IsPullRequest":false,"CreatedAt":"2019-10-22T22:48:03","Actor":"SrivastavaAnubhav","Number":"27374","RawContent":null,"Title":"[Crossgen2] Timestamp not preserved","State":"open","Body":"When compiling the same IL with Crossgen2 twice, the timestamp bytes in the output binaries are not identical. We expect to preserve the timestamp from the original IL.","Url":"https://github.com/dotnet/coreclr/issues/27374","RelatedDescription":"Open issue \"[Crossgen2] Timestamp not preserved\" (#27374)"},{"Id":"510820130","IsPullRequest":true,"CreatedAt":"2019-10-22T21:54:13","Actor":"AaronRobinsonMSFT","Number":"27368","RawContent":null,"Title":"Add documentation for SuppressGCTransition","State":"closed","Body":"See https://github.com/dotnet/corefx/issues/40740\r\n\r\n/cc @stephentoub ","Url":"https://github.com/dotnet/coreclr/pull/27368","RelatedDescription":"Closed or merged PR \"Add documentation for SuppressGCTransition\" (#27368)"},{"Id":"510901348","IsPullRequest":true,"CreatedAt":"2019-10-22T20:47:04","Actor":"jkoritzinsky","Number":"27373","RawContent":null,"Title":"WIP: Use global packages cache for local builds by default in CoreCLR","State":"open","Body":"Change local builds of CoreCLR to use the global NuGet packages location.\r\n\r\nUse the `GeneratePathProperty` feature on `PackageReference` to enable our builds that need to resolve specific paths into NuGet packages to be NuGet package root agnostic.\r\n\r\nWhen writing out the information to find a file in a NuGet package from outside of MSBuild, output the path instead of just the version.","Url":"https://github.com/dotnet/coreclr/pull/27373","RelatedDescription":"Open PR \"WIP: Use global packages cache for local builds by default in CoreCLR\" (#27373)"},{"Id":"510868484","IsPullRequest":false,"CreatedAt":"2019-10-22T19:46:32","Actor":"sandreenko","Number":"27371","RawContent":null,"Title":"genHWIntrinsic_R_RM_I uses address of a dead local.","State":"open","Body":"In #23629 such code was added:\r\nhttps://github.com/dotnet/coreclr/blob/eb4815e2b7f2481a7cb277c8128e691fe426d3e5/src/jit/hwintrinsiccodegenxarch.cpp#L482-L490\r\n\r\n`memIndir = &load; ` saves address of a stack variable that lives in `if (memIndir == nullptr) ` scope.\r\n`emit->emitIns_R_A(ins, attr, reg, memIndir);` uses that address that points to a dead stack slot and could be rewritten by another local var (`emitIns_R_A` dereferences it).\r\n\r\nThat works on x64 because we don't have other locals in that method and don't tailcall `emitIns_R_A`(that is strange why we don't, it looks profitable), but generally unsafe.\r\n\r\n@tannergooding could you please fix that or say why it is safe in the current version?\r\n\r\nPVS warning.\r\n","Url":"https://github.com/dotnet/coreclr/issues/27371","RelatedDescription":"Open issue \"genHWIntrinsic_R_RM_I uses address of a dead local.\" (#27371)"},{"Id":"510854449","IsPullRequest":true,"CreatedAt":"2019-10-22T19:16:10","Actor":"marek-safar","Number":"27370","RawContent":null,"Title":"Remove unused methods","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27370","RelatedDescription":"Open PR \"Remove unused methods\" (#27370)"},{"Id":"510831656","IsPullRequest":true,"CreatedAt":"2019-10-22T18:29:47","Actor":"AaronRobinsonMSFT","Number":"27369","RawContent":null,"Title":"Apply SuppressGCAttribute to some SPCL functions.","State":"open","Body":"Fixes https://github.com/dotnet/coreclr/issues/27185\r\n\r\n/cc @jkoritzinsky @jkotas ","Url":"https://github.com/dotnet/coreclr/pull/27369","RelatedDescription":"Open PR \"Apply SuppressGCAttribute to some SPCL functions.\" (#27369)"},{"Id":"510352432","IsPullRequest":true,"CreatedAt":"2019-10-22T18:16:36","Actor":"sandreenko","Number":"27352","RawContent":null,"Title":"Fix: Expression 'refType == RefTypeUpperVectorSave' is always false.","State":"closed","Body":"https://github.com/dotnet/coreclr/pull/23344/files#diff-93fb9832a03a9783e2a415b581fcb45c added a fast return for `(refType == RefTypeUpperVectorSave) || (refType == RefTypeUpperVectorRestore)` so that check became useless. \r\n\r\nAnother small PVS warning.","Url":"https://github.com/dotnet/coreclr/pull/27352","RelatedDescription":"Closed or merged PR \"Fix: Expression 'refType == RefTypeUpperVectorSave' is always false.\" (#27352)"},{"Id":"510363380","IsPullRequest":true,"CreatedAt":"2019-10-22T17:36:00","Actor":"sywhang","Number":"27354","RawContent":null,"Title":"Refactor genEventing script to remove SELECTANY from provider context struct definitions","State":"closed","Body":"This refactors the genEventing script so that the static runtime context definitions don't contain SELECTANY. ","Url":"https://github.com/dotnet/coreclr/pull/27354","RelatedDescription":"Closed or merged PR \"Refactor genEventing script to remove SELECTANY from provider context struct definitions\" (#27354)"},{"Id":"510614235","IsPullRequest":true,"CreatedAt":"2019-10-22T16:45:47","Actor":"dotnet-maestro[bot]","Number":"27361","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191021.4\r\n- **Date Produced**: 10/21/2019 11:38 PM\r\n- **Commit**: 46299619e290936c495264162ede68354ced5b18\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 5.0.0-alpha1.19521.4\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 5.0.0-alpha1.19521.4\r\n\r\n[marker]: <> (End:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/27361","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#27361)"},{"Id":"510677774","IsPullRequest":true,"CreatedAt":"2019-10-22T15:52:24","Actor":"filipnavara","Number":"27366","RawContent":null,"Title":"Fix nullability error in portable thread pool","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27366","RelatedDescription":"Closed or merged PR \"Fix nullability error in portable thread pool\" (#27366)"},{"Id":"510668139","IsPullRequest":true,"CreatedAt":"2019-10-22T13:46:52","Actor":"adamsitnik","Number":"27365","RawContent":null,"Title":"[Proposal] Force the inlining of StringBuilder.Append(char)","State":"open","Body":"`StringBuilder.Append(char)` can benefit a lot from inlining (the same way as [List.Add](https://github.com/dotnet/coreclr/blob/111b71a65bce77e63d2463a972fe78aa042c5c0a/src/System.Private.CoreLib/shared/System/Collections/Generic/List.cs#L197) does)\r\n\r\nIt's a very frequently used method and I believe that the performance improvement is worth the size growth. \r\n\r\nThe \"before\" includes https://github.com/dotnet/coreclr/pull/27340 from yesterday:\r\n\r\n|               Method | Toolchain | length |         Mean | Ratio | Allocated |\r\n|--------------------- |---------- |------- |-------------:|------:|----------:|\r\n|          Append_Char |     after |    100 |     263.8 ns |  0.86 |     544 B |\r\n|          Append_Char |    before |    100 |     308.5 ns |  1.00 |     544 B |\r\n|                      |           |        |              |       |           |\r\n| Append_Char_Capacity |     after |    100 |     187.7 ns |  0.68 |     272 B |\r\n| Append_Char_Capacity |    before |    100 |     277.2 ns |  1.00 |     272 B |\r\n|                      |           |        |              |       |           |\r\n|          Append_Char |     after | 100000 | 176,884.8 ns |  0.84 |  209968 B |\r\n|          Append_Char |    before | 100000 | 210,701.6 ns |  1.00 |  209968 B |\r\n|                      |           |        |              |       |           |\r\n| Append_Char_Capacity |     after | 100000 | 190,679.7 ns |  0.75 |  200072 B |\r\n| Append_Char_Capacity |    before | 100000 | 253,892.5 ns |  1.00 |  200072 B |\r\n\r\n```cs\r\n[Benchmark]\r\n[Arguments(100)]\r\n[Arguments(100_000)]\r\npublic StringBuilder Append_Char(int length)\r\n{\r\n    StringBuilder builder = new StringBuilder();\r\n\r\n    for (int i = 0; i < length; i++)\r\n    {\r\n        builder.Append('a');\r\n    }\r\n\r\n    return builder;\r\n}\r\n\r\n[Benchmark]\r\n[Arguments(100)]\r\n[Arguments(100_000)]\r\npublic StringBuilder Append_Char_Capacity(int length)\r\n{\r\n    StringBuilder builder = new StringBuilder(length);\r\n\r\n    for (int i = 0; i < length; i++)\r\n    {\r\n        builder.Append('a');\r\n    }\r\n\r\n    return builder;\r\n}\r\n```","Url":"https://github.com/dotnet/coreclr/pull/27365","RelatedDescription":"Open PR \"[Proposal] Force the inlining of StringBuilder.Append(char)\" (#27365)"},{"Id":"510648570","IsPullRequest":true,"CreatedAt":"2019-10-22T13:16:00","Actor":"adamsitnik","Number":"27364","RawContent":null,"Title":"Optimize GC.AllocateUninitializedArray and use it in StringBuilder","State":"open","Body":"I wanted to use `GC.AllocateUninitializedArray` in `StringBuilder`, but it was initially too slow. Calling it for small buffers was causing quite noticeable performance degradation. \r\n\r\nI've tuned it up to ensure that it does not slow down the `StringBuilder` in \"unlucky path\" (small arrays) and does improve the perf in \"lucky path\" (big arrays). It should make this API more profitable to use in other places in the future.\r\n\r\nChanges:\r\n* remove one branch by changing the `int` to `uint` (`if (length < 0)`). This changes the behavior of this internal API for `length < 0` - previously the caller would get `IndexOutOfRangeException`. Since this is an internal API, I hope it's OK.\r\n* increase the threshold from 256 to 2048 bytes - please see the results below. \r\n* enforce inlining of `GC.AllocateUninitializedArray`, move the expensive native call to separate method to not increase the size too much.\r\n\r\nMicro benchmarks for the GC API:\r\n\r\n```cs\r\n[GenericTypeArguments(typeof(byte))]\r\n[GenericTypeArguments(typeof(char))]\r\n[GenericTypeArguments(typeof(object))]\r\npublic class Perf_GC<T>\r\n{\r\n    private readonly Func<int, T[]> _allocateUninitializedArrayDelegate = CreateDelegate<int>(typeof(GC), \"AllocateUninitializedArray\");\r\n    private readonly Func<int, T[]> _allocateArrayDelegate = CreateDelegate<int>(typeof(Mimic), \"AllocateArray\");\r\n\r\n    [Params(256, 256 * 2, 256 * 3, 256 * 4, 256 * 6, 256 * 8)]\r\n    public int Length;\r\n\r\n    [Benchmark]\r\n    public T[] AllocateUninitializedArray() => _allocateUninitializedArrayDelegate(Length);\r\n\r\n    [Benchmark]\r\n    public T[] AllocateArray() => _allocateArrayDelegate(Length); // using delegate for apples to apples comparison\r\n\r\n    private static Func<N, T[]> CreateDelegate<N>(Type type, string methodName)\r\n    {\r\n        // this method is not a part of .NET Standard so we need to use reflection\r\n        var method = type\r\n            .GetMethod(methodName, BindingFlags.NonPublic | BindingFlags.Static)\r\n            .MakeGenericMethod(typeof(T));\r\n\r\n        return method != null ? (Func<N, T[]>)method.CreateDelegate(typeof(Func<N, T[]>)) : null;\r\n    }\r\n}\r\n\r\npublic static class Mimic\r\n{\r\n    internal static T[] AllocateArray<T>(int size) => new T[size];\r\n}\r\n```\r\n\r\nI've simplified the default BDN output to make it easier to compare the results. In the table below the \"Before\" is the execution time for `GC.AllocateUninitializedArray` before my changes, in the \"After\" are with my changes. The `new T[]` contains the time for calling new operator (to have some base comparison)\r\n\r\n|            Type | Length |    Before |     After |   new T[] |\r\n|---------------- |------- |----------:|----------:|----------:|\r\n|            Byte |    256 |  78.63 ns |  18.31 ns |  18.17 ns |\r\n|            Char |    256 |  79.33 ns |  31.95 ns |  31.66 ns |\r\n|          Object |    256 | 113.34 ns | 113.34 ns | 113.03 ns |\r\n|                 |        |           |           |           |\r\n|            Byte |    512 |  79.37 ns |  31.38 ns |  31.75 ns |\r\n|            Char |    512 |  87.60 ns |  58.12 ns |  57.71 ns |\r\n|          Object |    512 | 229.02 ns | 229.30 ns | 227.78 ns |\r\n|                 |        |           |           |           |\r\n|            Byte |    768 |  83.24 ns |  45.51 ns |  45.85 ns |\r\n|            Char |    768 |  95.92 ns |  85.20 ns |  84.34 ns |\r\n|          Object |    768 | 353.66 ns | 347.39 ns | 349.48 ns |\r\n|                 |        |           |           |           |\r\n|            Byte |   1024 |  85.99 ns |  58.31 ns |  57.58 ns |\r\n|            Char |   1024 |  99.46 ns | 100.62 ns | 112.01 ns |\r\n|          Object |   1024 | 457.07 ns | 455.94 ns | 457.47 ns |\r\n|                 |        |           |           |           |\r\n|            Byte |   1536 |  92.40 ns |  84.84 ns |  84.44 ns |\r\n|            Char |   1536 | 111.75 ns | 112.97 ns | 168.02 ns |\r\n|          Object |   1536 | 653.64 ns | 649.47 ns | 643.37 ns |\r\n|                 |        |           |           |           |\r\n|            Byte |   2048 | 100.61 ns | 101.04 ns | 111.81 ns |\r\n|            Char |   2048 | 126.52 ns | 125.31 ns | 226.94 ns |\r\n|          Object |   2048 | 830.92 ns | 838.90 ns | 836.48 ns |","Url":"https://github.com/dotnet/coreclr/pull/27364","RelatedDescription":"Open PR \"Optimize GC.AllocateUninitializedArray and use it in StringBuilder\" (#27364)"},{"Id":"510635502","IsPullRequest":true,"CreatedAt":"2019-10-22T12:53:17","Actor":"jakobbotsch","Number":"27363","RawContent":null,"Title":"Fix slow tailcalls to VSD","State":"open","Body":"This was broken in #20643 where fgCanFastTailCall was changed to call\r\nfgInitArgInfo. fgInitArgInfo has side effects and will in some cases add\r\narguments to the arg list. Specifically for calls to VSD, the VSD arg is\r\nadded, however this case is treated specially for slow tailcalls and it\r\ndoes not expect the arg to be here.\r\n\r\nThis targeted fix just removes this arg from the arg list.\r\n\r\nIn the future a better solution would be to refactor things so that `fgInitArgInfo` does not have side effects (rather than constructing the arg info).\r\n\r\ncc @jashook @BruceForstall @jkotas @nguerrera \r\n\r\nFixes #26311","Url":"https://github.com/dotnet/coreclr/pull/27363","RelatedDescription":"Open PR \"Fix slow tailcalls to VSD\" (#27363)"},{"Id":"510597647","IsPullRequest":false,"CreatedAt":"2019-10-22T11:38:38","Actor":"4creators","Number":"27360","RawContent":null,"Title":"[Proposal][Crossgen] Relax throughput impacting JIT parameters for crossgen","State":"open","Body":"JIT has several fixed parameters that were chosen to balance the quality of code produced and compilation time. Crossgen used for preparing deployments of R2R assemblies does not have the same limitations as compilation time is decoupled from execution time. This creates an opportunity to tune some JIT parameters in order to create better code quality with Crossgen.\r\n\r\nOne of the parameters which jump to mind is the number of allowed local variables during compilation. Increasing it from currently set 512 to 1024 or even 2048 will have a significant impact on Crossgen throughput but would increase the performance of the generated code for functions which are large or with multiple inlined functions.  See issue #26729 for discussion of the impact of this parameter preset.","Url":"https://github.com/dotnet/coreclr/issues/27360","RelatedDescription":"Open issue \"[Proposal][Crossgen] Relax throughput impacting JIT parameters for crossgen\" (#27360)"},{"Id":"510624299","IsPullRequest":false,"CreatedAt":"2019-10-22T09:45:41","Actor":"MohammadEhsanMirzaaee","Number":"27362","RawContent":null,"Title":"dotnet quit unexpectedly macOS Catalina .net Core 3","State":"open","Body":"# dotnet quit unexpectedly macOS Catalina .net Core 3\r\n\r\nWhen I try to run my .net core project I receive this error \"dotnet quit unexpectedly\"\r\n\r\n .net core 3 and Mac OS Catalina and VS for Mac 8.3.4 and I doesn't have this problem in .net core 2.2 in Mac OS Mojave, I installed these packages:\r\n-dotnet-sdk-3.0.100-osx-x64\r\n-dotnet-runtime-3.0.0-osx-Process\r\n\r\n```\r\nProcess:               dotnet [1416]\r\nPath:                  /usr/local/share/dotnet/dotnet\r\nIdentifier:            dotnet\r\nVersion:               0\r\nCode Type:             X86-64 (Native)\r\nParent Process:        vsdbg-ui [1415]\r\nResponsible:           VisualStudio [640]\r\nUser ID:               501\r\n\r\nDate/Time:             2019-10-22 12:56:18.683 +0330\r\nOS Version:            Mac OS X 10.15 (19A583)\r\nReport Version:        12\r\nBridge OS Version:     4.0 (17P572)\r\nAnonymous UUID:        031066C2-CBAE-FACF-42C2-9BBC04E5E370\r\n\r\n\r\nTime Awake Since Boot: 700 seconds\r\n\r\nSystem Integrity Protection: enabled\r\n\r\nCrashed Thread:        0  Dispatch queue: com.apple.main-thread\r\n\r\nException Type:        EXC_CRASH (SIGABRT)\r\nException Codes:       0x0000000000000000, 0x0000000000000000\r\nException Note:        EXC_CORPSE_NOTIFY\r\n\r\nApplication Specific Information:\r\nabort() called\r\n\r\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\r\n0   libsystem_kernel.dylib        \t0x00007fff6615a47a __pthread_kill + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff66217707 pthread_kill + 384\r\n2   libsystem_c.dylib             \t0x00007fff660e2a08 abort + 120\r\n3   libcoreclr.dylib              \t0x000000010fdc6959 PROCAbort + 25\r\n4   libcoreclr.dylib              \t0x000000010fdc68a2 PROCEndProcess(void*, unsigned int, int) + 226\r\n5   libcoreclr.dylib              \t0x00000001100aa071 UnwindManagedExceptionPass1(PAL_SEHException&, _CONTEXT*) + 833\r\n6   libcoreclr.dylib              \t0x00000001100aa105 DispatchManagedException(PAL_SEHException&, bool) + 133\r\n7   libcoreclr.dylib              \t0x000000011000dc7e IL_Throw(Object*) + 750\r\n8   ???                           \t0x000000011eeb53f2 0 + 4813706226\r\n9   ???                           \t0x000000011eeb50b4 0 + 4813705396\r\n10  ???                           \t0x000000011eeb4a35 0 + 4813703733\r\n11  ???                           \t0x000000011ed4a20b 0 + 4812218891\r\n12  ???                           \t0x000000011ed49af2 0 + 4812217074\r\n13  ???                           \t0x000000011ebc03e6 0 + 4810605542\r\n14  libcoreclr.dylib              \t0x0000000110144c3b CallDescrWorkerInternal + 124\r\n15  libcoreclr.dylib              \t0x000000010ff91029 MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 1657\r\n16  libcoreclr.dylib              \t0x000000010fe58ef6 RunMain(MethodDesc*, short, int*, PtrArray**) + 726\r\n17  libcoreclr.dylib              \t0x000000010fe59268 Assembly::ExecuteMainMethod(PtrArray**, int) + 408\r\n18  libcoreclr.dylib              \t0x000000010fe99678 CorHost2::ExecuteAssembly(unsigned int, char16_t const*, int, char16_t const**, unsigned int*) + 504\r\n19  libcoreclr.dylib              \t0x000000010fdd1052 coreclr_execute_assembly + 226\r\n20  libhostpolicy.dylib           \t0x000000010fd0e5d7 0x10fcfd000 + 71127\r\n21  libhostpolicy.dylib           \t0x000000010fd0f438 0x10fcfd000 + 74808\r\n22  libhostfxr.dylib              \t0x000000010fccc353 0x10fca4000 + 164691\r\n23  libhostfxr.dylib              \t0x000000010fccb642 0x10fca4000 + 161346\r\n24  libhostfxr.dylib              \t0x000000010fcc764a 0x10fca4000 + 144970\r\n25  dotnet                        \t0x000000010fc7d6af 0x10fc74000 + 38575\r\n26  dotnet                        \t0x000000010fc7d92f 0x10fc74000 + 39215\r\n27  libdyld.dylib                 \t0x00007fff6600b405 start + 1\r\n\r\nThread 1:\r\n0   libsystem_kernel.dylib        \t0x00007fff66154146 mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff661546ac mach_msg + 60\r\n2   libcoreclr.dylib              \t0x000000010fdcdb18 MachMessage::Receive(unsigned int) + 72\r\n3   libcoreclr.dylib              \t0x000000010fdcca5e SEHExceptionThread(void*) + 94\r\n4   libsystem_pthread.dylib       \t0x00007fff66217d76 _pthread_start + 125\r\n5   libsystem_pthread.dylib       \t0x00007fff662145d7 thread_start + 15\r\n\r\nThread 2:\r\n0   libsystem_kernel.dylib        \t0x00007fff6615c59e poll + 10\r\n1   libcoreclr.dylib              \t0x000000010fdbf0ce CorUnix::CPalSynchronizationManager::ThreadPrepareForShutdown() + 30\r\n2   libcoreclr.dylib              \t0x000000010fdc0cc5 CorUnix::CPalSynchronizationManager::WorkerThread(void*) + 949\r\n3   libcoreclr.dylib              \t0x000000010fdca384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n4   libsystem_pthread.dylib       \t0x00007fff66217d76 _pthread_start + 125\r\n5   libsystem_pthread.dylib       \t0x00007fff662145d7 thread_start + 15\r\n\r\nThread 3:\r\n0   libsystem_kernel.dylib        \t0x00007fff66155e76 read + 10\r\n1   libcoreclr.dylib              \t0x000000010fe419f4 TwoWayPipe::Read(void*, unsigned int) + 36\r\n2   libcoreclr.dylib              \t0x000000010fe39549 DbgTransportSession::TransportWorker() + 2457\r\n3   libcoreclr.dylib              \t0x000000010fe376b9 DbgTransportSession::TransportWorkerStatic(void*) + 9\r\n4   libcoreclr.dylib              \t0x000000010fdca384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n5   libsystem_pthread.dylib       \t0x00007fff66217d76 _pthread_start + 125\r\n6   libsystem_pthread.dylib       \t0x00007fff662145d7 thread_start + 15\r\n\r\nThread 4:\r\n0   libsystem_kernel.dylib        \t0x00007fff661578f6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff66218082 _pthread_cond_wait + 701\r\n2   libcoreclr.dylib              \t0x000000010fdbedfb CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 347\r\n3   libcoreclr.dylib              \t0x000000010fdbea90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010fdc347c CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 2028\r\n5   libcoreclr.dylib              \t0x000000010fdc3762 WaitForMultipleObjectsEx + 82\r\n6   libcoreclr.dylib              \t0x000000010fe35948 DebuggerRCThread::MainLoop() + 248\r\n7   libcoreclr.dylib              \t0x000000010fe357ec DebuggerRCThread::ThreadProc() + 284\r\n8   libcoreclr.dylib              \t0x000000010fe35503 DebuggerRCThread::ThreadProcStatic(void*) + 131\r\n9   libcoreclr.dylib              \t0x000000010fdca384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n10  libsystem_pthread.dylib       \t0x00007fff66217d76 _pthread_start + 125\r\n11  libsystem_pthread.dylib       \t0x00007fff662145d7 thread_start + 15\r\n\r\nThread 5:\r\n0   libsystem_kernel.dylib        \t0x00007fff661578f6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff66218082 _pthread_cond_wait + 701\r\n2   libcoreclr.dylib              \t0x000000010fdbedfb CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 347\r\n3   libcoreclr.dylib              \t0x000000010fdbea90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010fdc347c CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 2028\r\n5   libcoreclr.dylib              \t0x000000010fdc2c88 WaitForSingleObject + 72\r\n6   libcoreclr.dylib              \t0x000000010fe36d9f HelperCanary::ThreadProc() + 31\r\n7   libcoreclr.dylib              \t0x000000010fe36d48 HelperCanary::ThreadProc(void*) + 56\r\n8   libcoreclr.dylib              \t0x000000010fdca384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n9   libsystem_pthread.dylib       \t0x00007fff66217d76 _pthread_start + 125\r\n10  libsystem_pthread.dylib       \t0x00007fff662145d7 thread_start + 15\r\n\r\nThread 6:\r\n0   libsystem_kernel.dylib        \t0x00007fff661578f6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff66218082 _pthread_cond_wait + 701\r\n2   libcoreclr.dylib              \t0x000000010fdbedfb CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 347\r\n3   libcoreclr.dylib              \t0x000000010fdbea90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010fdc347c CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 2028\r\n5   libcoreclr.dylib              \t0x000000010fdc369d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000011007d5e9 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 201\r\n7   libcoreclr.dylib              \t0x00000001100c8573 SVR::gc_heap::gc_thread_function() + 179\r\n8   libcoreclr.dylib              \t0x00000001100c84b6 SVR::gc_heap::gc_thread_stub(void*) + 54\r\n9   libcoreclr.dylib              \t0x000000010ffe75e2 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char16_t const*)::$_1::__invoke(void*) + 178\r\n10  libcoreclr.dylib              \t0x000000010fdca384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n11  libsystem_pthread.dylib       \t0x00007fff66217d76 _pthread_start + 125\r\n12  libsystem_pthread.dylib       \t0x00007fff662145d7 thread_start + 15\r\n\r\nThread 7:\r\n0   libsystem_kernel.dylib        \t0x00007fff661578f6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff66218082 _pthread_cond_wait + 701\r\n2   libcoreclr.dylib              \t0x000000010fdbedfb CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 347\r\n3   libcoreclr.dylib              \t0x000000010fdbea90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010fdc347c CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 2028\r\n5   libcoreclr.dylib              \t0x000000010fdc369d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000011007d5e9 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 201\r\n7   libcoreclr.dylib              \t0x00000001100c8541 SVR::gc_heap::gc_thread_function() + 129\r\n8   libcoreclr.dylib              \t0x00000001100c84b6 SVR::gc_heap::gc_thread_stub(void*) + 54\r\n9   libcoreclr.dylib              \t0x000000010ffe75e2 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char16_t const*)::$_1::__invoke(void*) + 178\r\n10  libcoreclr.dylib              \t0x000000010fdca384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n11  libsystem_pthread.dylib       \t0x00007fff66217d76 _pthread_start + 125\r\n12  libsystem_pthread.dylib       \t0x00007fff662145d7 thread_start + 15\r\n\r\nThread 8:\r\n0   libsystem_kernel.dylib        \t0x00007fff661578f6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff66218082 _pthread_cond_wait + 701\r\n2   libcoreclr.dylib              \t0x000000010fdbedfb CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 347\r\n3   libcoreclr.dylib              \t0x000000010fdbea90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010fdc347c CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 2028\r\n5   libcoreclr.dylib              \t0x000000010fdc369d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000011007d5e9 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 201\r\n7   libcoreclr.dylib              \t0x00000001100c8541 SVR::gc_heap::gc_thread_function() + 129\r\n8   libcoreclr.dylib              \t0x00000001100c84b6 SVR::gc_heap::gc_thread_stub(void*) + 54\r\n9   libcoreclr.dylib              \t0x000000010ffe75e2 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char16_t const*)::$_1::__invoke(void*) + 178\r\n10  libcoreclr.dylib              \t0x000000010fdca384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n11  libsystem_pthread.dylib       \t0x00007fff66217d76 _pthread_start + 125\r\n12  libsystem_pthread.dylib       \t0x00007fff662145d7 thread_start + 15\r\n\r\nThread 9:\r\n0   libsystem_kernel.dylib        \t0x00007fff661578f6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff66218082 _pthread_cond_wait + 701\r\n2   libcoreclr.dylib              \t0x000000010fdbedfb CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 347\r\n3   libcoreclr.dylib              \t0x000000010fdbea90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010fdc347c CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 2028\r\n5   libcoreclr.dylib              \t0x000000010fdc369d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000011007d5e9 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 201\r\n7   libcoreclr.dylib              \t0x00000001100c8541 SVR::gc_heap::gc_thread_function() + 129\r\n8   libcoreclr.dylib              \t0x00000001100c84b6 SVR::gc_heap::gc_thread_stub(void*) + 54\r\n9   libcoreclr.dylib              \t0x000000010ffe75e2 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char16_t const*)::$_1::__invoke(void*) + 178\r\n10  libcoreclr.dylib              \t0x000000010fdca384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n11  libsystem_pthread.dylib       \t0x00007fff66217d76 _pthread_start + 125\r\n12  libsystem_pthread.dylib       \t0x00007fff662145d7 thread_start + 15\r\n\r\nThread 10:\r\n0   libsystem_kernel.dylib        \t0x00007fff661578f6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff66218082 _pthread_cond_wait + 701\r\n2   libcoreclr.dylib              \t0x000000010fdbedfb CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 347\r\n3   libcoreclr.dylib              \t0x000000010fdbea90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010fdc347c CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 2028\r\n5   libcoreclr.dylib              \t0x000000010fdc369d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000011007d5e9 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 201\r\n7   libcoreclr.dylib              \t0x00000001100c8541 SVR::gc_heap::gc_thread_function() + 129\r\n8   libcoreclr.dylib              \t0x00000001100c84b6 SVR::gc_heap::gc_thread_stub(void*) + 54\r\n9   libcoreclr.dylib              \t0x000000010ffe75e2 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char16_t const*)::$_1::__invoke(void*) + 178\r\n10  libcoreclr.dylib              \t0x000000010fdca384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n11  libsystem_pthread.dylib       \t0x00007fff66217d76 _pthread_start + 125\r\n12  libsystem_pthread.dylib       \t0x00007fff662145d7 thread_start + 15\r\n\r\nThread 11:\r\n0   libsystem_kernel.dylib        \t0x00007fff661578f6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff66218082 _pthread_cond_wait + 701\r\n2   libcoreclr.dylib              \t0x000000010fdbedfb CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 347\r\n3   libcoreclr.dylib              \t0x000000010fdbea90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010fdc347c CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 2028\r\n5   libcoreclr.dylib              \t0x000000010fdc369d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000011007d5e9 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 201\r\n7   libcoreclr.dylib              \t0x00000001100c8541 SVR::gc_heap::gc_thread_function() + 129\r\n8   libcoreclr.dylib              \t0x00000001100c84b6 SVR::gc_heap::gc_thread_stub(void*) + 54\r\n9   libcoreclr.dylib              \t0x000000010ffe75e2 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char16_t const*)::$_1::__invoke(void*) + 178\r\n10  libcoreclr.dylib              \t0x000000010fdca384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n11  libsystem_pthread.dylib       \t0x00007fff66217d76 _pthread_start + 125\r\n12  libsystem_pthread.dylib       \t0x00007fff662145d7 thread_start + 15\r\n\r\nThread 12:\r\n0   libsystem_kernel.dylib        \t0x00007fff661578f6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff66218082 _pthread_cond_wait + 701\r\n2   libcoreclr.dylib              \t0x000000010fdbedfb CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 347\r\n3   libcoreclr.dylib              \t0x000000010fdbea90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010fdc347c CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 2028\r\n5   libcoreclr.dylib              \t0x000000010fdc369d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000011007d5e9 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 201\r\n7   libcoreclr.dylib              \t0x00000001100c8541 SVR::gc_heap::gc_thread_function() + 129\r\n8   libcoreclr.dylib              \t0x00000001100c84b6 SVR::gc_heap::gc_thread_stub(void*) + 54\r\n9   libcoreclr.dylib              \t0x000000010ffe75e2 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char16_t const*)::$_1::__invoke(void*) + 178\r\n10  libcoreclr.dylib              \t0x000000010fdca384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n11  libsystem_pthread.dylib       \t0x00007fff66217d76 _pthread_start + 125\r\n12  libsystem_pthread.dylib       \t0x00007fff662145d7 thread_start + 15\r\n\r\nThread 13:\r\n0   libsystem_kernel.dylib        \t0x00007fff661578f6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff66218082 _pthread_cond_wait + 701\r\n2   libcoreclr.dylib              \t0x000000010fdbedfb CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 347\r\n3   libcoreclr.dylib              \t0x000000010fdbea90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010fdc347c CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 2028\r\n5   libcoreclr.dylib              \t0x000000010fdc369d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000011007d5e9 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 201\r\n7   libcoreclr.dylib              \t0x00000001100c8541 SVR::gc_heap::gc_thread_function() + 129\r\n8   libcoreclr.dylib              \t0x00000001100c84b6 SVR::gc_heap::gc_thread_stub(void*) + 54\r\n9   libcoreclr.dylib              \t0x000000010ffe75e2 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char16_t const*)::$_1::__invoke(void*) + 178\r\n10  libcoreclr.dylib              \t0x000000010fdca384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n11  libsystem_pthread.dylib       \t0x00007fff66217d76 _pthread_start + 125\r\n12  libsystem_pthread.dylib       \t0x00007fff662145d7 thread_start + 15\r\n\r\nThread 14:\r\n0   libsystem_kernel.dylib        \t0x00007fff661578f6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff66218082 _pthread_cond_wait + 701\r\n2   libcoreclr.dylib              \t0x000000010fdbedfb CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 347\r\n3   libcoreclr.dylib              \t0x000000010fdbea90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010fdc347c CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 2028\r\n5   libcoreclr.dylib              \t0x000000010fdc369d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000011007d5e9 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 201\r\n7   libcoreclr.dylib              \t0x00000001100c8541 SVR::gc_heap::gc_thread_function() + 129\r\n8   libcoreclr.dylib              \t0x00000001100c84b6 SVR::gc_heap::gc_thread_stub(void*) + 54\r\n9   libcoreclr.dylib              \t0x000000010ffe75e2 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char16_t const*)::$_1::__invoke(void*) + 178\r\n10  libcoreclr.dylib              \t0x000000010fdca384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n11  libsystem_pthread.dylib       \t0x00007fff66217d76 _pthread_start + 125\r\n12  libsystem_pthread.dylib       \t0x00007fff662145d7 thread_start + 15\r\n\r\nThread 15:\r\n0   libsystem_kernel.dylib        \t0x00007fff661578f6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff66218082 _pthread_cond_wait + 701\r\n2   libcoreclr.dylib              \t0x000000010fdbedfb CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 347\r\n3   libcoreclr.dylib              \t0x000000010fdbea90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010fdc347c CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 2028\r\n5   libcoreclr.dylib              \t0x000000010fdc369d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000011007d5e9 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 201\r\n7   libcoreclr.dylib              \t0x00000001100c8541 SVR::gc_heap::gc_thread_function() + 129\r\n8   libcoreclr.dylib              \t0x00000001100c84b6 SVR::gc_heap::gc_thread_stub(void*) + 54\r\n9   libcoreclr.dylib              \t0x000000010ffe75e2 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char16_t const*)::$_1::__invoke(void*) + 178\r\n10  libcoreclr.dylib              \t0x000000010fdca384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n11  libsystem_pthread.dylib       \t0x00007fff66217d76 _pthread_start + 125\r\n12  libsystem_pthread.dylib       \t0x00007fff662145d7 thread_start + 15\r\n\r\nThread 16:\r\n0   libsystem_kernel.dylib        \t0x00007fff661578f6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff66218082 _pthread_cond_wait + 701\r\n2   libcoreclr.dylib              \t0x000000010fdbedfb CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 347\r\n3   libcoreclr.dylib              \t0x000000010fdbea90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010fdc347c CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 2028\r\n5   libcoreclr.dylib              \t0x000000010fdc369d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000011007d5e9 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 201\r\n7   libcoreclr.dylib              \t0x00000001100c8541 SVR::gc_heap::gc_thread_function() + 129\r\n8   libcoreclr.dylib              \t0x00000001100c84b6 SVR::gc_heap::gc_thread_stub(void*) + 54\r\n9   libcoreclr.dylib              \t0x000000010ffe75e2 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char16_t const*)::$_1::__invoke(void*) + 178\r\n10  libcoreclr.dylib              \t0x000000010fdca384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n11  libsystem_pthread.dylib       \t0x00007fff66217d76 _pthread_start + 125\r\n12  libsystem_pthread.dylib       \t0x00007fff662145d7 thread_start + 15\r\n\r\nThread 17:\r\n0   libsystem_kernel.dylib        \t0x00007fff661578f6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff66218082 _pthread_cond_wait + 701\r\n2   libcoreclr.dylib              \t0x000000010fdbedfb CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 347\r\n3   libcoreclr.dylib              \t0x000000010fdbea90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010fdc347c CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 2028\r\n5   libcoreclr.dylib              \t0x000000010fdc369d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000011007d5e9 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 201\r\n7   libcoreclr.dylib              \t0x00000001100c8541 SVR::gc_heap::gc_thread_function() + 129\r\n8   libcoreclr.dylib              \t0x00000001100c84b6 SVR::gc_heap::gc_thread_stub(void*) + 54\r\n9   libcoreclr.dylib              \t0x000000010ffe75e2 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char16_t const*)::$_1::__invoke(void*) + 178\r\n10  libcoreclr.dylib              \t0x000000010fdca384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n11  libsystem_pthread.dylib       \t0x00007fff66217d76 _pthread_start + 125\r\n12  libsystem_pthread.dylib       \t0x00007fff662145d7 thread_start + 15\r\n\r\nThread 18:\r\n0   libsystem_kernel.dylib        \t0x00007fff661578f6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff66218082 _pthread_cond_wait + 701\r\n2   libcoreclr.dylib              \t0x000000010fdbedfb CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 347\r\n3   libcoreclr.dylib              \t0x000000010fdbea90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010fdc347c CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 2028\r\n5   libcoreclr.dylib              \t0x000000010fdc369d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000011007d5e9 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 201\r\n7   libcoreclr.dylib              \t0x00000001100c8541 SVR::gc_heap::gc_thread_function() + 129\r\n8   libcoreclr.dylib              \t0x00000001100c84b6 SVR::gc_heap::gc_thread_stub(void*) + 54\r\n9   libcoreclr.dylib              \t0x000000010ffe75e2 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char16_t const*)::$_1::__invoke(void*) + 178\r\n10  libcoreclr.dylib              \t0x000000010fdca384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n11  libsystem_pthread.dylib       \t0x00007fff66217d76 _pthread_start + 125\r\n12  libsystem_pthread.dylib       \t0x00007fff662145d7 thread_start + 15\r\n\r\nThread 19:\r\n0   libsystem_kernel.dylib        \t0x00007fff661578f6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff66218082 _pthread_cond_wait + 701\r\n2   libcoreclr.dylib              \t0x000000010fdbedfb CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 347\r\n3   libcoreclr.dylib              \t0x000000010fdbea90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010fdc347c CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 2028\r\n5   libcoreclr.dylib              \t0x000000010fdc369d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000011007d5e9 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 201\r\n7   libcoreclr.dylib              \t0x00000001100c8541 SVR::gc_heap::gc_thread_function() + 129\r\n8   libcoreclr.dylib              \t0x00000001100c84b6 SVR::gc_heap::gc_thread_stub(void*) + 54\r\n9   libcoreclr.dylib              \t0x000000010ffe75e2 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char16_t const*)::$_1::__invoke(void*) + 178\r\n10  libcoreclr.dylib              \t0x000000010fdca384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n11  libsystem_pthread.dylib       \t0x00007fff66217d76 _pthread_start + 125\r\n12  libsystem_pthread.dylib       \t0x00007fff662145d7 thread_start + 15\r\n\r\nThread 20:\r\n0   libsystem_kernel.dylib        \t0x00007fff661578f6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff66218082 _pthread_cond_wait + 701\r\n2   libcoreclr.dylib              \t0x000000010fdbedfb CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 347\r\n3   libcoreclr.dylib              \t0x000000010fdbea90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010fdc347c CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 2028\r\n5   libcoreclr.dylib              \t0x000000010fdc369d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000011007d5e9 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 201\r\n7   libcoreclr.dylib              \t0x00000001100c8541 SVR::gc_heap::gc_thread_function() + 129\r\n8   libcoreclr.dylib              \t0x00000001100c84b6 SVR::gc_heap::gc_thread_stub(void*) + 54\r\n9   libcoreclr.dylib              \t0x000000010ffe75e2 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char16_t const*)::$_1::__invoke(void*) + 178\r\n10  libcoreclr.dylib              \t0x000000010fdca384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n11  libsystem_pthread.dylib       \t0x00007fff66217d76 _pthread_start + 125\r\n12  libsystem_pthread.dylib       \t0x00007fff662145d7 thread_start + 15\r\n\r\nThread 21:\r\n0   libsystem_kernel.dylib        \t0x00007fff661578f6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff66218082 _pthread_cond_wait + 701\r\n2   libcoreclr.dylib              \t0x000000010fdbedfb CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 347\r\n3   libcoreclr.dylib              \t0x000000010fdbea90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010fdc347c CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 2028\r\n5   libcoreclr.dylib              \t0x000000010fdc369d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000011007d5e9 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 201\r\n7   libcoreclr.dylib              \t0x00000001100c8541 SVR::gc_heap::gc_thread_function() + 129\r\n8   libcoreclr.dylib              \t0x00000001100c84b6 SVR::gc_heap::gc_thread_stub(void*) + 54\r\n9   libcoreclr.dylib              \t0x000000010ffe75e2 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char16_t const*)::$_1::__invoke(void*) + 178\r\n10  libcoreclr.dylib              \t0x000000010fdca384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n11  libsystem_pthread.dylib       \t0x00007fff66217d76 _pthread_start + 125\r\n12  libsystem_pthread.dylib       \t0x00007fff662145d7 thread_start + 15\r\n\r\nThread 22:\r\n0   libsystem_kernel.dylib        \t0x00007fff661578f6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff66218082 _pthread_cond_wait + 701\r\n2   libcoreclr.dylib              \t0x000000010fdbedde CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 318\r\n3   libcoreclr.dylib              \t0x000000010fdbea90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010fdc347c CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 2028\r\n5   libcoreclr.dylib              \t0x000000010fdc369d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000011007d5e9 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 201\r\n7   libcoreclr.dylib              \t0x000000010ffe3cbf FinalizerThread::WaitForFinalizerEvent(CLREvent*) + 31\r\n8   libcoreclr.dylib              \t0x000000010ffe3e22 FinalizerThread::FinalizerThreadWorker(void*) + 98\r\n9   libcoreclr.dylib              \t0x000000010ff51fa3 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 323\r\n10  libcoreclr.dylib              \t0x000000010ff525f0 ManagedThreadBase::FinalizerBase(void (*)(void*)) + 32\r\n11  libcoreclr.dylib              \t0x000000010ffe40f8 FinalizerThread::FinalizerThreadStart(void*) + 504\r\n12  libcoreclr.dylib              \t0x000000010fdca384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n13  libsystem_pthread.dylib       \t0x00007fff66217d76 _pthread_start + 125\r\n14  libsystem_pthread.dylib       \t0x00007fff662145d7 thread_start + 15\r\n\r\nThread 23:\r\n0   libsystem_kernel.dylib        \t0x00007fff661582ca __accept + 10\r\n1   libcoreclr.dylib              \t0x000000010fe416de IpcStream::DiagnosticsIpc::Accept(void (*)(char const*, unsigned int)) const + 62\r\n2   libcoreclr.dylib              \t0x000000010ffbed20 DiagnosticsServerThread(void*) + 288\r\n3   libcoreclr.dylib              \t0x000000010fdca384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n4   libsystem_pthread.dylib       \t0x00007fff66217d76 _pthread_start + 125\r\n5   libsystem_pthread.dylib       \t0x00007fff662145d7 thread_start + 15\r\n\r\nThread 24:\r\n0   libsystem_kernel.dylib        \t0x00007fff661578f6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff66218082 _pthread_cond_wait + 701\r\n2   libcoreclr.dylib              \t0x000000010fdbedde CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 318\r\n3   libcoreclr.dylib              \t0x000000010fdbea90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010fdc3b6d SleepEx + 141\r\n5   libcoreclr.dylib              \t0x000000010ff790b2 ThreadpoolMgr::TimerThreadFire() + 146\r\n6   libcoreclr.dylib              \t0x000000010ff78f85 ThreadpoolMgr::TimerThreadStart(void*) + 181\r\n7   libcoreclr.dylib              \t0x000000010fdca384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n8   libsystem_pthread.dylib       \t0x00007fff66217d76 _pthread_start + 125\r\n9   libsystem_pthread.dylib       \t0x00007fff662145d7 thread_start + 15\r\n\r\nThread 25:\r\n0   libsystem_kernel.dylib        \t0x00007fff661578f6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff66218082 _pthread_cond_wait + 701\r\n2   libcoreclr.dylib              \t0x000000010fdbedde CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 318\r\n3   libcoreclr.dylib              \t0x000000010fdbea90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010fdc347c CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 2028\r\n5   libcoreclr.dylib              \t0x000000010fdc3648 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x000000011007da00 CLRLifoSemaphore::WaitForSignal(unsigned int) + 32\r\n7   libcoreclr.dylib              \t0x000000010ff7647e ThreadpoolMgr::WorkerThreadStart(void*) + 974\r\n8   libcoreclr.dylib              \t0x000000010fdca384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n9   libsystem_pthread.dylib       \t0x00007fff66217d76 _pthread_start + 125\r\n10  libsystem_pthread.dylib       \t0x00007fff662145d7 thread_start + 15\r\n\r\nThread 26:\r\n0   libsystem_kernel.dylib        \t0x00007fff661578f6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff66218082 _pthread_cond_wait + 701\r\n2   libcoreclr.dylib              \t0x000000010fdbedde CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 318\r\n3   libcoreclr.dylib              \t0x000000010fdbea90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010fdc3b6d SleepEx + 141\r\n5   libcoreclr.dylib              \t0x000000010ffeda4f __SwitchToThread(unsigned int, unsigned int) + 15\r\n6   libcoreclr.dylib              \t0x000000010ff7874c ThreadpoolMgr::GateThreadStart(void*) + 188\r\n7   libcoreclr.dylib              \t0x000000010fdca384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n8   libsystem_pthread.dylib       \t0x00007fff66217d76 _pthread_start + 125\r\n9   libsystem_pthread.dylib       \t0x00007fff662145d7 thread_start + 15\r\n\r\nThread 27:\r\n0   libsystem_kernel.dylib        \t0x00007fff661578f6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff66218082 _pthread_cond_wait + 701\r\n2   libcoreclr.dylib              \t0x000000010fdbedde CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 318\r\n3   libcoreclr.dylib              \t0x000000010fdbea90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010fdc347c CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 2028\r\n5   libcoreclr.dylib              \t0x000000010fdc3648 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x000000011007da00 CLRLifoSemaphore::WaitForSignal(unsigned int) + 32\r\n7   libcoreclr.dylib              \t0x000000010ff7647e ThreadpoolMgr::WorkerThreadStart(void*) + 974\r\n8   libcoreclr.dylib              \t0x000000010fdca384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n9   libsystem_pthread.dylib       \t0x00007fff66217d76 _pthread_start + 125\r\n10  libsystem_pthread.dylib       \t0x00007fff662145d7 thread_start + 15\r\n\r\nThread 28:\r\n0   libsystem_kernel.dylib        \t0x00007fff66154146 mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff661546ac mach_msg + 60\r\n2   com.apple.CoreFoundation      \t0x00007fff2eea619b __CFRunLoopServiceMachPort + 322\r\n3   com.apple.CoreFoundation      \t0x00007fff2eea5737 __CFRunLoopRun + 1695\r\n4   com.apple.CoreFoundation      \t0x00007fff2eea4e13 CFRunLoopRunSpecific + 499\r\n5   com.apple.CoreFoundation      \t0x00007fff2eea4bea CFRunLoopRun + 40\r\n6   ???                           \t0x000000011ebd6c96 0 + 4810697878\r\n7   ???                           \t0x000000011fb2046b 0 + 4826727531\r\n8   ???                           \t0x000000011e6d531f 0 + 4805448479\r\n9   ???                           \t0x000000011e6deba1 0 + 4805487521\r\n10  ???                           \t0x000000011e6d53b1 0 + 4805448625\r\n11  libcoreclr.dylib              \t0x0000000110144c3b CallDescrWorkerInternal + 124\r\n12  libcoreclr.dylib              \t0x000000010ff91029 MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 1657\r\n13  libcoreclr.dylib              \t0x000000010ffa59b5 ThreadNative::KickOffThread_Worker(void*) + 469\r\n14  libcoreclr.dylib              \t0x000000010ff51fa3 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 323\r\n15  libcoreclr.dylib              \t0x000000010ff52590 ManagedThreadBase::KickOff(void (*)(void*), void*) + 32\r\n16  libcoreclr.dylib              \t0x000000010ffa5c2d ThreadNative::KickOffThread(void*) + 397\r\n17  libcoreclr.dylib              \t0x000000010fdca384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n18  libsystem_pthread.dylib       \t0x00007fff66217d76 _pthread_start + 125\r\n19  libsystem_pthread.dylib       \t0x00007fff662145d7 thread_start + 15\r\n\r\nThread 29:\r\n0   libsystem_pthread.dylib       \t0x00007fff662145b4 start_wqthread + 0\r\n\r\nThread 30:\r\n0   libsystem_kernel.dylib        \t0x00007fff661578f6 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff66218082 _pthread_cond_wait + 701\r\n2   libcoreclr.dylib              \t0x000000010fdbedde CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 318\r\n3   libcoreclr.dylib              \t0x000000010fdbea90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010fdc347c CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 2028\r\n5   libcoreclr.dylib              \t0x000000010fdc3648 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x000000011007daeb CLRLifoSemaphore::WaitForSignal(unsigned int) + 267\r\n7   libcoreclr.dylib              \t0x000000010ff7647e ThreadpoolMgr::WorkerThreadStart(void*) + 974\r\n8   libcoreclr.dylib              \t0x000000010fdca384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n9   libsystem_pthread.dylib       \t0x00007fff66217d76 _pthread_start + 125\r\n10  libsystem_pthread.dylib       \t0x00007fff662145d7 thread_start + 15\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27362","RelatedDescription":"Open issue \"dotnet quit unexpectedly macOS Catalina .net Core 3\" (#27362)"},{"Id":"510372854","IsPullRequest":true,"CreatedAt":"2019-10-22T06:59:59","Actor":"jkotas","Number":"27356","RawContent":null,"Title":"Delete Uap quirks from CoreLib","State":"closed","Body":"This matches cleanup done in CoreFX.","Url":"https://github.com/dotnet/coreclr/pull/27356","RelatedDescription":"Closed or merged PR \"Delete Uap quirks from CoreLib\" (#27356)"},{"Id":"510464863","IsPullRequest":true,"CreatedAt":"2019-10-22T06:56:57","Actor":"jkotas","Number":"27359","RawContent":null,"Title":"Delete FEATURE_LAZY_COW_PAGES","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27359","RelatedDescription":"Open PR \"Delete FEATURE_LAZY_COW_PAGES\" (#27359)"},{"Id":"510382283","IsPullRequest":false,"CreatedAt":"2019-10-22T02:16:20","Actor":"benaadams","Number":"27357","RawContent":null,"Title":"Question Jit Allocation reuse","State":"closed","Body":"Jit allocations hang around; I assume the memory is reused rather than leaked? (e.g. have 12MB of unreleased Jit allocations in this trace)\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/67254274-2a070e80-f474-11e9-8b37-6850d373d6f7.png)\r\n\r\n\r\nSample chain\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/67254241-f88e4300-f473-11e9-9d6f-3569248186ab.png)\r\n","Url":"https://github.com/dotnet/coreclr/issues/27357","RelatedDescription":"Closed issue \"Question Jit Allocation reuse\" (#27357)"},{"Id":"510391706","IsPullRequest":true,"CreatedAt":"2019-10-22T02:13:04","Actor":"echesakovMSFT","Number":"27358","RawContent":null,"Title":"Disable JIT\\Directed\\VectorABI\\VectorMgdMgdStatic_r under JitStress modes","State":"open","Body":"Same assertion as in https://github.com/dotnet/coreclr/pull/27291\r\nFails in https://dev.azure.com/dnceng/public/_build/results?buildId=392704\r\n\r\nRe-enable when #26491 is fixed\r\n\r\ncc @dotnet/jit-contrib ","Url":"https://github.com/dotnet/coreclr/pull/27358","RelatedDescription":"Open PR \"Disable JIT\\Directed\\VectorABI\\VectorMgdMgdStatic_r under JitStress modes\" (#27358)"},{"Id":"510365529","IsPullRequest":true,"CreatedAt":"2019-10-22T00:21:32","Actor":"SrivastavaAnubhav","Number":"27355","RawContent":null,"Title":"[WIP] Implement comparisons for all ObjectNodes","State":"open","Body":"* Implement comparison for all ObjectNodes so that the output of the compiler will be deterministic after introducing parallelism\r\n* Add sorting for ModuleDesc in TypeSystemComparer\r\n* Sort methods before returning them from ReadyToRunTableManager\r\n\r\nNotes to reviewers:\r\n* I tested with the CoreRT_DeterminismSeed and confirmed that after these changes we have deterministic output with different seeds\r\n* I have not added parallelism in this PR, but I have tested locally with it and it seems to work\r\n* I still have to add a test for the aforementioned determinism in this PR","Url":"https://github.com/dotnet/coreclr/pull/27355","RelatedDescription":"Open PR \"[WIP] Implement comparisons for all ObjectNodes\" (#27355)"},{"Id":"510354315","IsPullRequest":false,"CreatedAt":"2019-10-21T23:39:38","Actor":"sywhang","Number":"27353","RawContent":null,"Title":"Some runtime events are always fired under LTTng","State":"open","Body":"When tracing an app via LTTng, the user must set the environment variable `COMPlus_EnableEventLog`. Currently, even if this variable is set to 0 (which is the default behavior), it tries to still fire a bunch of events through LTTng because the runtime side that fires these methods aren't checking whether EnableEventLog is set. \r\n\r\nHere is an EventStats view from PerfView on a trace I collected with LTTng without setting the environment variable: \r\n![image](https://user-images.githubusercontent.com/30421794/67250707-4c237100-f421-11e9-92cf-021cfbdfe7bb.png)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/27353","RelatedDescription":"Open issue \"Some runtime events are always fired under LTTng\" (#27353)"},{"Id":"511002156","IsPullRequest":false,"CreatedAt":"2015-11-30T22:16:41","Actor":"wtgodbe","Number":"27380","RawContent":null,"Title":"QueryThreadCycleTime & GetThreadTimes inconsistent on non-Windows platforms","State":"open","Body":"(From https://github.com/dotnet/coreclr/pull/1671)\n\nQueryThreadCycleTime and GetThreadTimes return inconsistent results on non-windows platforms when run in CI, causing their tests to fail intermittently, but I haven't been able to reproduce this locally. I've tried setting processor affinity in the tests to fix this, but the issue persists.\n","Url":"https://github.com/dotnet/coreclr/issues/27380","RelatedDescription":"Open issue \"QueryThreadCycleTime & GetThreadTimes inconsistent on non-Windows platforms\" (#27380)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"510378149","IsPullRequest":true,"CreatedAt":"2019-10-23T03:04:57","Actor":"wli3","Number":"12955","RawContent":null,"Title":"Fix mark of the web","State":"closed","Body":"\r\n","Url":"https://github.com/dotnet/cli/pull/12955","RelatedDescription":"Closed or merged PR \"Fix mark of the web\" (#12955)"},{"Id":"511027176","IsPullRequest":true,"CreatedAt":"2019-10-23T02:10:11","Actor":"dotnet-maestro[bot]","Number":"12968","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191022.7\r\n- **Date Produced**: 10/23/2019 12:54 AM\r\n- **Commit**: 07fa4be202f382e4cf7a74945ae37c9a629c4063\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19522.7\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19522.7\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19522.7\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19522.7\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19522.7\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19522.7\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12968","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12968)"},{"Id":"511006923","IsPullRequest":false,"CreatedAt":"2019-10-23T00:50:01","Actor":"daniel-white","Number":"12967","RawContent":null,"Title":"VSSettings fails with DotNetCliToolReference in VS for Mac ","State":"open","Body":"## Steps to reproduce\r\n* VS for Mac 8.3.4\r\n* Have a `global.json` with\r\n```\r\n{\r\n  \"sdk\": {\r\n    \"version\": \"2.1.802\"\r\n  }\r\n}\r\n```\r\n* Have a csproj file with\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n    \r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  \r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Swashbuckle.AspNetCore.Cli\" Version=\"4.0.1\" />\r\n  </ItemGroup>\r\n    \r\n  <Target Name=\"GenerateSwagger\" AfterTargets=\"AfterBuild\">\r\n    <Exec  Command=\"dotnet -d swagger\" />\r\n  </Target>\r\n\r\n</Project>\r\n```\r\n* Build with VS for Mac\r\n* Build from terminal (`dotnet build`)\r\n\r\n## Expected  behavior\r\nThe swagger tool is run as it does from the CLI.\r\n\r\n## Actual behavior\r\nFails to find tool in mac\r\n\r\n```\r\ndotnet -d swagger\r\nTelemetry is: Enabled\r\nprojectfactory: MSBUILD_EXE_PATH = /Users/daniel.white/Library/Caches/VisualStudio/8.0/MSBuild/88767_1/MonoDevelop.MSBuildBuilder.exe\r\nprojectfactory: MSBuild project path = /Users/daniel.white/Builds/foo/foo.csproj\r\nMicrosoft.Build.Exceptions.InvalidProjectFileException: The SDK resolver type \"DotNetMSBuildSdkResolver\" failed to load. The type initializer for 'Microsoft.DotNet.MSBuildSdkResolver.VSSettings' threw an exception.  /Users/daniel.white/Builds/foo/foo.csproj ---> System.TypeInitializationException: The type initializer for 'Microsoft.DotNet.MSBuildSdkResolver.VSSettings' threw an exception. ---> System.TypeInitializationException: The type initializer for 'Microsoft.DotNet.MSBuildSdkResolver.Interop' threw an exception. ---> System.TypeLoadException: Could not load type 'System.Runtime.InteropServices.OSPlatform' from assembly 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.DotNet.MSBuildSdkResolver.VSSettings..ctor() in /_/src/Microsoft.DotNet.MSBuildSdkResolver/VSSettings.cs:line 30\r\n   at Microsoft.DotNet.MSBuildSdkResolver.VSSettings..cctor() in /_/src/Microsoft.DotNet.MSBuildSdkResolver/VSSettings.cs:line 25\r\nMicrosoft.DotNet.Cli.Utils.CommandUnknownException: No executable found matching command \"dotnet-swagger\"\r\n   at Microsoft.DotNet.Cli.Utils.Command.Create(ICommandResolverPolicy commandResolverPolicy, String commandName, IEnumerable`1 args, NuGetFramework framework, String configuration, String outputPath, String applicationName)\r\n   at Microsoft.DotNet.Cli.Utils.Command.Create(String commandName, IEnumerable`1 args, NuGetFramework framework, String configuration, String outputPath, String applicationName)\r\n   at Microsoft.DotNet.Cli.Program.ProcessArgs(String[] args, ITelemetry telemetryClient)\r\n   at Microsoft.DotNet.Cli.Program.Main(String[] args)\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.DotNet.MSBuildSdkResolver.DotNetMSBuildSdkResolver..ctor() in /_/src/Microsoft.DotNet.MSBuildSdkResolver/MSBuildSdkResolver.cs:line 38\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.Build.Shared.ProjectFileErrorUtilities.VerifyThrowInvalidProjectFile(Boolean condition, String errorSubCategoryResourceName, BuildEventFileInfo projectFile, Exception innerException, String resourceName, Object[] args)\r\n   at Microsoft.Build.Shared.ProjectFileErrorUtilities.ThrowInvalidProjectFile(BuildEventFileInfo projectFile, Exception innerException, String resourceName, Object[] args)\r\n   at Microsoft.Build.BackEnd.SdkResolution.SdkResolverLoader.LoadResolvers(String resolverPath, LoggingContext loggingContext, ElementLocation location, List`1 resolvers)\r\n   at Microsoft.Build.BackEnd.SdkResolution.SdkResolverLoader.LoadResolvers(LoggingContext loggingContext, ElementLocation location)\r\n   at Microsoft.Build.BackEnd.SdkResolution.SdkResolverService.Initialize(LoggingContext loggingContext, ElementLocation location)\r\n   at Microsoft.Build.BackEnd.SdkResolution.SdkResolverService.ResolveSdk(Int32 submissionId, SdkReference sdk, LoggingContext loggingContext, ElementLocation sdkReferenceLocation, String solutionPath, String projectPath, Boolean interactive)\r\n   at Microsoft.Build.BackEnd.SdkResolution.CachingSdkResolverService.<>c__DisplayClass3_0.<ResolveSdk>b__0(String key)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at Microsoft.Build.BackEnd.SdkResolution.CachingSdkResolverService.ResolveSdk(Int32 submissionId, SdkReference sdk, LoggingContext loggingContext, ElementLocation sdkReferenceLocation, String solutionPath, String projectPath, Boolean interactive)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImportsFromUnescapedImportExpressionConditioned(String directoryOfImportingFile, ProjectImportElement importElement, List`1& projects, SdkResult& sdkResult, Boolean throwOnFileNotExistsError)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImports(String directoryOfImportingFile, ProjectImportElement importElement, SdkResult& sdkResult)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(String directoryOfImportingFile, ProjectImportElement importElement)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(ProjectRootElement currentProjectOrImport)\r\n   at Microsoft.Build.Evaluation.Evaluator`4.Evaluate(ILoggingService loggingService, BuildEventContext buildEventContext)\r\n   at Microsoft.Build.Evaluation.Project.Reevaluate(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary(ILoggingService loggingServiceForEvaluation, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project.Initialize(IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.Project..ctor(String projectFile, IDictionary`2 globalProperties, String toolsVersion, String subToolsetVersion, ProjectCollection projectCollection, ProjectLoadSettings loadSettings, EvaluationContext evaluationContext)\r\n   at Microsoft.Build.Evaluation.ProjectCollection.LoadProject(String fileName, IDictionary`2 globalProperties, String toolsVersion)\r\n   at Microsoft.DotNet.Cli.Utils.MSBuildProject..ctor(String msBuildProjectPath, NuGetFramework framework, String configuration, String outputPath, String msBuildExePath)\r\n   at Microsoft.DotNet.Cli.Utils.ProjectFactory.GetMSBuildProj(String projectDirectory, NuGetFramework framework, String configuration, String outputPath)\r\nprojecttoolscommandresolver: ProjectFactory did not find Project.\r\n/Users/daniel.white/Builds/foo/foo.csproj(12,5): error MSB3073: The command \"dotnet -d swagger\" exited with code 1.\r\nDone building project \"foo.csproj\" -- FAILED.\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n(from inside VS for Mac)\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.802\r\n Commit:    177d0b2525\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.1.802/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  2.1.504 [/usr/local/share/dotnet/sdk]\r\n  2.1.802 [/usr/local/share/dotnet/sdk]\r\n  3.0.100 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12967","RelatedDescription":"Open issue \"VSSettings fails with DotNetCliToolReference in VS for Mac \" (#12967)"},{"Id":"510970341","IsPullRequest":false,"CreatedAt":"2019-10-22T22:45:38","Actor":"wli3","Number":"12966","RawContent":null,"Title":"Port change to other branches","State":"open","Body":"- [ ] https://github.com/dotnet/cli/pull/12955\r\n- [ ] https://github.com/dotnet/cli/pull/12899\r\n","Url":"https://github.com/dotnet/cli/issues/12966","RelatedDescription":"Open issue \"Port change to other branches\" (#12966)"},{"Id":"510662012","IsPullRequest":false,"CreatedAt":"2019-10-22T21:58:54","Actor":"patearl","Number":"12960","RawContent":null,"Title":"dotnet test can't find included runtime","State":"closed","Body":"## Steps to reproduce\r\nCreate an nunit test project that targets netcoreapp3.0. As of today, it uses the latest microsoft test sdk package and the latest nunit adapter package.\r\n\r\nDownload the 3.0 SDK ZIP file and unzip it.\r\n\r\nRun dotnet test from the 3.0 SDK's folder against the solution.\r\n\r\nAs can be seen below, running dotnet --list-runtimes shows the 3.0 runtime included with the SDK. However, when dotnet test is running, it is unable to find the same runtime that it just found and only lists the pre-installed runtimes. We would prefer not to actually install the runtime and just have it run properly from the zip archive SDK. It should be able to use the runtime that it is clearly able to find with --list-runtimes instead of only being able to use the pre-installed runtimes that it later lists during test execution.\r\n\r\n## Expected  behavior\r\nRuns tests\r\n\r\n## Actual behavior\r\n[22:42:47][Exec] Test run for C:\\w\\99694c0b2afac045\\Source\\Pleasant.Tests\\bin\\Release\\netcoreapp3.0\\Pleasant.Tests.dll(.NETCoreApp,Version=v3.0)\r\n[22:42:47][Exec] Microsoft (R) Test Execution Command Line Tool Version 16.3.0\r\n[22:42:47][Exec] Copyright (c) Microsoft Corporation.  All rights reserved.\r\n[22:42:47][Exec] \r\n[22:42:47][Exec] Starting test execution, please wait...\r\n[22:42:48][Exec] \r\n[22:42:48][Exec] A total of 1 test files matched the specified pattern.\r\n[22:42:48][Exec] EXEC It was not possible to find any compatible framework version\r\n[22:42:48][Exec] The specified framework 'Microsoft.NETCore.App', version '3.0.0' was not found.\r\n[22:42:48][Exec]   - Check application dependencies and target a framework version installed at:\r\n[22:42:48][Exec]       C:\\Program Files\\dotnet\r\n[22:42:48][Exec]   - Installing .NET Core prerequisites might help resolve this problem:\r\n[22:42:48][Exec]       https://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n[22:42:48][Exec]   - The .NET Core framework and SDK can be installed from:\r\n[22:42:48][Exec]       https://aka.ms/dotnet-download\r\n[22:42:48][Exec]   - The following versions are installed:\r\n[22:42:48][Exec]       1.0.1 at [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:48][Exec]       2.0.5 at [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:48][Exec]       2.0.7 at [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:48][Exec]       2.0.9 at [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:48][Exec]       2.1.3 at [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:48][Exec]       2.1.5 at [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:48][Exec]       2.1.9 at [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:48][Exec]       2.1.11 at [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:48][Exec]       2.1.12 at [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n## Environment data\r\nUsing 3.0.100 SDK.\r\n\r\n[22:42:25][TestSolution] Exec\r\n[22:42:25][Exec] \"C:\\w\\99694c0b2afac045\\Build\\dotnetsdk\\dotnet\" --list-sdks\r\n[22:42:25][Exec] 1.0.0-preview2-003131 [C:\\Program Files\\dotnet\\sdk]\r\n[22:42:25][Exec] 2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n[22:42:25][Exec] 2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n[22:42:25][Exec] 2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n[22:42:25][Exec] 2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n[22:42:25][Exec] 2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n[22:42:25][Exec] 2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n[22:42:25][Exec] 2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n[22:42:25][Exec] 2.1.508 [C:\\Program Files\\dotnet\\sdk]\r\n[22:42:25][Exec] 3.0.100 [C:\\w\\99694c0b2afac045\\Build\\dotnetsdk\\sdk]\r\n[22:42:25][TestSolution] ............................................................\r\n[22:42:25][TestSolution] Exec\r\n[22:42:25][Exec] \"C:\\w\\99694c0b2afac045\\Build\\dotnetsdk\\dotnet\" --list-runtimes\r\n[22:42:25][Exec] Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n[22:42:25][Exec] Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n[22:42:25][Exec] Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n[22:42:25][Exec] Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n[22:42:25][Exec] Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n[22:42:25][Exec] Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n[22:42:25][Exec] Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n[22:42:25][Exec] Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n[22:42:25][Exec] Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n[22:42:25][Exec] Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n[22:42:25][Exec] Microsoft.AspNetCore.App 3.0.0 [C:\\w\\99694c0b2afac045\\Build\\dotnetsdk\\shared\\Microsoft.AspNetCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 1.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.NETCore.App 3.0.0 [C:\\w\\99694c0b2afac045\\Build\\dotnetsdk\\shared\\Microsoft.NETCore.App]\r\n[22:42:25][Exec] Microsoft.WindowsDesktop.App 3.0.0 [C:\\w\\99694c0b2afac045\\Build\\dotnetsdk\\shared\\Microsoft.WindowsDesktop.App]","Url":"https://github.com/dotnet/cli/issues/12960","RelatedDescription":"Closed issue \"dotnet test can't find included runtime\" (#12960)"},{"Id":"510905320","IsPullRequest":true,"CreatedAt":"2019-10-22T21:53:11","Actor":"dotnet-maestro[bot]","Number":"12965","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1b614b5a-9a27-47ab-b39c-08d727dac64c)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Build**: 5.4.0.6271\r\n- **Date Produced**: 10/19/2019 4:24 AM\r\n- **Commit**: c1f6915918b82c096bbd666bd9c18528f1f70630\r\n- **Branch**: refs/heads/dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.4.0-preview.3.6271\r\n\r\n[marker]: <> (End:1b614b5a-9a27-47ab-b39c-08d727dac64c)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12965","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from nuget/nuget.client\" (#12965)"},{"Id":"510882484","IsPullRequest":true,"CreatedAt":"2019-10-22T20:50:30","Actor":"dotnet-maestro[bot]","Number":"12964","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191022.3\r\n- **Date Produced**: 10/22/2019 7:29 PM\r\n- **Commit**: 1ea47f119b25bd0c4c475ef444abf591d4b890f9\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview2.19522.3\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12964","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12964)"},{"Id":"510843124","IsPullRequest":false,"CreatedAt":"2019-10-22T18:52:52","Actor":"bricelam","Number":"12963","RawContent":null,"Title":"Can't install tools targeting 3.1","State":"open","Body":"## Steps to reproduce\r\n\r\n```sh\r\ndotnet tool install dotnet-ef --version 3.1.0-preview1.19506.2\r\n```\r\n\r\n## Expected  behavior\r\n\r\n```\r\nTool 'dotnet-ef' (version '3.1.0-preview1.19506.2') was successfully installed.\r\n```\r\n\r\n## Actual behavior\r\n\r\n```\r\nerror NU1202: Package dotnet-ef 3.1.0-preview1.19506.2 is not compatible with netcoreapp3.1 (.NETCoreApp,Version=v3.1) / any. Package dotnet-ef 3.1.0-preview1.19506.2 supports: netcoreapp3.1 (.NETCoreApp,Version=v3.1)\r\nThe tool package could not be restored.\r\nTool 'dotnet-ef' failed to install. This failure may have been caused by:\r\n\r\n* You are attempting to install a preview release and did not use the --version option to specify the version.\r\n* A package by this name was found, but it was not a .NET Core tool.\r\n* The required NuGet feed cannot be accessed, perhaps because of an Internet connection problem.\r\n* You mistyped the name of the tool.\r\n\r\nFor more reasons, including package naming enforcement, visit https://aka.ms/failure-installing-tool\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100-preview2-014486\r\n Commit:    343b2cba36\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Users\\brice\\AppData\\Local\\Microsoft\\dotnet\\sdk\\3.1.100-preview2-014486\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0-preview2.19517.10\r\n  Commit:  3daa0867ab\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100-preview2-014486 [C:\\Users\\brice\\AppData\\Local\\Microsoft\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0-preview2.19517.21 [C:\\Users\\brice\\AppData\\Local\\Microsoft\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0-preview2.19517.10 [C:\\Users\\brice\\AppData\\Local\\Microsoft\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0-preview2.19517.10 [C:\\Users\\brice\\AppData\\Local\\Microsoft\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\ncc @ajcvickers @Pilchie ","Url":"https://github.com/dotnet/cli/issues/12963","RelatedDescription":"Open issue \"Can't install tools targeting 3.1\" (#12963)"},{"Id":"510566549","IsPullRequest":false,"CreatedAt":"2019-10-22T18:29:15","Actor":"ichensky","Number":"12959","RawContent":null,"Title":"Telemetry in `dotnet new console` fully not disabled .net core 3.0","State":"closed","Body":"## Steps to reproduce\r\n1. Set environment variable:\r\n```\r\n    echo \"export DOTNET_CLI_TELEMETRY_OPTOUT=1\"\r\n```\r\n2. Execute \r\n```\r\n    dotnet new console\r\n```\r\n## Actual behavior\r\nIf there is internet, then \r\n`dotnet` util will make several HTTP requests.\r\n1. https://go.microsoft.com/fwlink/?linkid=2087906&clcid=0x409\r\n2. https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fwebpifeed.blob.core.windows.net%2Fwebpifeed%2FPartners%2FNuGetTemplateSearchInfo.json&data=02%7C***%7Cangelpe%40microsoft.com%7C***%7C***%7C***%7C***%7C***&sdata=***%3D&reserved=0\r\n3. https://webpifeed.blob.core.windows.net/webpifeed/Partners/NuGetTemplateSearchInfo.json\r\n\r\n`dotnet` util make 3 HTTP requests just to get `NuGetTemplateSearchInfo.json` file. \r\n\r\nSeems, `dotnet` util sends private data in the first request in the part of url:\r\n `clcid=0x409`\r\nand in the second request in this part of the url: \r\n `&data=02%7C***%7Cangelpe%40microsoft.com%7C***%7C***%7C***%7C***%7C***&sdata=***%3D&reserved=0`\r\n\r\n## Expected  behavior\r\nDo not make HTTP request at all or make direct HTTP request to the  `NuGetTemplateSearchInfo.json` file.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12959","RelatedDescription":"Closed issue \"Telemetry in `dotnet new console` fully not disabled .net core 3.0\" (#12959)"},{"Id":"510760785","IsPullRequest":false,"CreatedAt":"2019-10-22T16:10:35","Actor":"ForestEckhardt","Number":"12962","RawContent":null,"Title":"Unable to leverage new SDK with older runtimes","State":"open","Body":"## Steps to reproduce\r\nInstall 2.1.802 .Net SDK libraries and 2.1.12 .Net Runtime libraries onto your system.\r\n\r\n## Expected  behavior\r\nI expected to be able to use a newer version of the .Net SDK and an older version of the .Net Runtimes to build and publish my app as outlined in the following document: https://docs.microsoft.com/en-us/dotnet/core/versions/selection#the-sdk-uses-the-latest-installed-version\r\n\r\n## Actual behavior\r\n.Net apps cannot be generated or built as it throws errors saying that it cannot find the runtime that the SDK was released with.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\nIt was not possible to find any compatible framework version\r\nThe specified framework 'Microsoft.NETCore.App', version '2.1.13' was not found.\r\n  - Check application dependencies and target a framework version installed at:\r\n      /layers/dotnet/\r\n  - Installing .NET Core prerequisites might help resolve this problem:\r\n      https://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n  - The .NET Core framework and SDK can be installed from:\r\n      https://aka.ms/dotnet-download\r\n  - The following versions are installed:\r\n      2.1.12 at [/layers/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nHost (useful for support):\r\n  Version: 2.1.13\r\n  Commit:  1a165a1588\r\n\r\n.NET Core SDKs installed:\r\n  2.1.802 [/layers/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.12 [/layers/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.12 [/layers/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [/layers/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12962","RelatedDescription":"Open issue \"Unable to leverage new SDK with older runtimes\" (#12962)"},{"Id":"510727253","IsPullRequest":false,"CreatedAt":"2019-10-22T15:15:05","Actor":"ajmcateer","Number":"12961","RawContent":null,"Title":"dotnet publish won't publish self contained exe without a RuntimeIdentifier. I am passing -r in the command.","State":"open","Body":"## Steps to reproduce\r\nRun the following command\r\ndotnet publish --self-contained true -f netcoreapp3.0 -r linux-x64\r\n\r\n## Expected  behavior\r\nShould publish a single executable file for the given runtime\r\n\r\n## Actual behavior\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.RuntimeIdentifierInference.targets(127,5): error NETSDK1031: It is not supported to build or publish a self-contained application without specifying a RuntimeIdentifier.  Please either specify a RuntimeIdentifier or set SelfContained to false. [C:\\Users\\ardsafa\\Documents\\git\\fdere\\fdere\\fdere\\fdere.csproj]\r\n\r\n## Environment data\r\n.NET Core SDK (reflecting any global.json):                                                                              Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-rc1-014190 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-rc1.19457.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-rc1-19456-20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-rc1-19456-20 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12961","RelatedDescription":"Open issue \"dotnet publish won't publish self contained exe without a RuntimeIdentifier. I am passing -r in the command.\" (#12961)"},{"Id":"510521984","IsPullRequest":true,"CreatedAt":"2019-10-22T12:11:39","Actor":"dotnet-maestro[bot]","Number":"12958","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191022.1\r\n- **Date Produced**: 10/22/2019 10:31 AM\r\n- **Commit**: 9354e1f42890a9deb5d52ca65b0313c707d89ed5\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19522.1\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19522.1\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19522.1\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19522.1\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19522.1\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19522.1\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview2.19521.18 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12958","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12958)"},{"Id":"510501415","IsPullRequest":false,"CreatedAt":"2019-10-22T08:23:37","Actor":"Tragetaschen","Number":"12957","RawContent":null,"Title":"Deadlock on Linux build machine","State":"open","Body":"## Description\r\n\r\nI run within my Yocto build three `dotnet publish` commands roughly at the same time. Usually those finish within 10s of seconds, but since yesterday, the commands have not finished for several hours. This has not happened before.\r\n\r\n## Expected  behavior\r\n\r\nNo deadlock. The build should finish as always\r\n\r\n## Actual behavior\r\n\r\nI'm now sitting on a little over 100 PIDs associated with the dotnet process (`ps -efL | grep dotnet`)\r\nThere are several groups of similar invocations:\r\n- About 14 processes are `…/2.2.401/MSBuild.dll … /nodeReuse:true`. Given the environment data below, I have double-checked that this is not a typo. I only have two SDKs (2.2.402, 3.0.100), and the 2.2.401 SDK isn't present in my file system anymore.\r\n- About 45 processes are `dotnet publish -c Release …`, about 15 for each of the three root publish commands\r\n- About 33 processes are `dotnet exec …/3.0.100/MSBuild.dll … -target:Restore …` for two of the root publish commands.\r\n- About 17 processes are `dotnet exec …/3.0.100/MSBuild.dll … -target:Publish …` for the other root publish command.\r\n\r\nI have attached strace to all the PIDs simultaneously (-p … -p … -p …) and the result is this:\r\n[the-trace.gz](https://github.com/dotnet/cli/files/3754358/the-trace.gz)\r\n\r\nI can keep the build machine as-is for the next few days to run more tests as requested. The Azure DevOps build doesn't have a timeout.\r\n\r\n## Environment data\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  95a0a61858\r\n\r\n.NET Core SDKs installed:\r\n  2.2.402 [/usr/share/dotnet/sdk]\r\n  3.0.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12957","RelatedDescription":"Open issue \"Deadlock on Linux build machine\" (#12957)"},{"Id":"510441063","IsPullRequest":true,"CreatedAt":"2019-10-22T06:15:26","Actor":"dotnet-maestro[bot]","Number":"12956","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191021.15\r\n- **Date Produced**: 10/22/2019 4:35 AM\r\n- **Commit**: f830769364b45286b638a57176d4a7997dbc5237\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19521.15\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19521.15\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19521.15\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19521.15\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19521.15\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19521.15\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12956","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12956)"},{"Id":"510353136","IsPullRequest":true,"CreatedAt":"2019-10-22T04:27:30","Actor":"dotnet-maestro[bot]","Number":"12954","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191021.13\r\n- **Date Produced**: 10/22/2019 2:35 AM\r\n- **Commit**: 93b469074cd73445634feeb0032f7fcb75ef4bfb\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19521.13\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19521.13\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19521.13\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19521.13\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19521.13\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19521.13\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n\r\n\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview2.19521.5 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12954","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12954)"},{"Id":"510258245","IsPullRequest":true,"CreatedAt":"2019-10-22T01:57:45","Actor":"dotnet-maestro[bot]","Number":"12952","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191021.6\r\n- **Date Produced**: 10/22/2019 12:34 AM\r\n- **Commit**: c1389d79af44fa1f05d9ef8345173db93b821fdb\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview2.19521.6\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12952","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12952)"},{"Id":"510295442","IsPullRequest":true,"CreatedAt":"2019-10-21T21:40:28","Actor":"dotnet-maestro[bot]","Number":"12953","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191021.7\r\n- **Date Produced**: 10/21/2019 7:58 PM\r\n- **Commit**: 763532fc5b6003b7aedc2d9b587411a6826e30e1\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19521.7\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19521.7\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19521.7\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19521.7\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19521.7\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19521.7\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12953","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12953)"},{"Id":"509843995","IsPullRequest":false,"CreatedAt":"2019-10-21T09:31:31","Actor":"ww898","Number":"12951","RawContent":null,"Title":"dotnet publush for .NET Core 3.x doesn't set execute flags for executables","State":"open","Body":"## Steps to reproduce\r\n`dotnet publish --self-contained true -f netcoreapp3.0 -r linux-x64`\r\n`dotnet publish --self-contained true -f netcoreapp3.0 -r osx-x64`\r\n\r\n## Expected  behavior\r\nThe compiled executable should be ready to be executed after publishing.\r\n\r\n## Actual behavior\r\n.NET Core 3.0/3.1 doesn't set execute flags for executables during publishing. Previous version of .NET Core do it.\r\n\r\n## Environment data\r\n- Linux qqq 4.15.0-65-generic #74~16.04.1-Ubuntu SMP Wed Sep 18 09:51:44 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux\r\n- macOS Mojave version 10.14\r\n- macOS Catalina version 10.15\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12951","RelatedDescription":"Open issue \"dotnet publush for .NET Core 3.x doesn't set execute flags for executables\" (#12951)"},{"Id":"509816461","IsPullRequest":true,"CreatedAt":"2019-10-21T08:40:12","Actor":"dotnet-maestro[bot]","Number":"12950","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191021.3\r\n- **Date Produced**: 10/21/2019 3:12 PM\r\n- **Commit**: b6e04f97df5f62282cc7738a31ae697da43ab977\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 5.0.0-alpha1.19521.3\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19521.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19521.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19521.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19521.3\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 5.0.0-alpha1.19521.3\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12950","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#12950)"},{"Id":"509669957","IsPullRequest":true,"CreatedAt":"2019-10-21T00:10:23","Actor":"dotnet-maestro[bot]","Number":"12949","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191020.3\r\n- **Date Produced**: 10/20/2019 10:30 PM\r\n- **Commit**: 32228f2ae5e68394197859608c8c6afb94276481\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 5.0.0-alpha1.19520.3\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19520.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19520.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19520.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19520.3\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 5.0.0-alpha1.19520.3\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12949","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12949)"},{"Id":"509628488","IsPullRequest":true,"CreatedAt":"2019-10-20T17:58:34","Actor":"dsplaisted","Number":"12948","RawContent":null,"Title":"Delete code and update readme for repo merge","State":"open","Body":"The CLI repo [has been merged](https://github.com/dotnet/toolset/pull/2940) into the toolset repo.  So this PR removes the code from the master branch of the CLI repo, and updates the README and issue template to point to the dotnet/sdk repo.","Url":"https://github.com/dotnet/cli/pull/12948","RelatedDescription":"Open PR \"Delete code and update readme for repo merge\" (#12948)"},{"Id":"509498603","IsPullRequest":false,"CreatedAt":"2019-10-20T16:56:42","Actor":"devel0","Number":"12943","RawContent":null,"Title":"dotnet restore parallel adaptive","State":"closed","Body":"## Description\r\n\r\nrestoring in tethering mode using phone line may cause failure due to timeout issue; a workaround is to use `--disable-parallel` but I think that a better approach should to use a sort of *adaptive parallel mode* so that restore will start in parallel and auto disable until all packages in queue where timeout occurred downloaded then switch back in parallel mode.\r\n\r\n## Steps to reproduce\r\n\r\n```sh\r\ngit clone https://github.com/devel0/repros.git\r\ngit checkout 9a5a81d0fe20d5e68cf0161ac9c64e93eae8e81a\r\ncd repros/netcore/dotnet-restore-01\r\ndocker build .\r\n```\r\n\r\nresults can be viewed with follow\r\n\r\n```sh\r\nless results.log.gz\r\n```\r\n\r\nnote: may need to set a bandwidth limiter to your network\r\n\r\n## Expected  behavior\r\n\r\nrestore without error\r\n\r\n## Actual behavior\r\n\r\nrestore fails due timeout in docker\r\n\r\n```\r\n         Failed to download package 'System.Text.Encodings.Web.4.4.0' from 'https://api.nuget.org/v3-flatcontainer/system.text.encodings.web/4.4.0/system.text.encodings.web.4.4.0.nupkg'.\r\n         The download of 'https://api.nuget.org/v3-flatcontainer/system.text.encodings.web/4.4.0/system.text.encodings.web.4.4.0.nupkg' timed out because no data was received for 60000ms.\r\n           Exception of type 'System.TimeoutException' was thrown.\r\n```\r\n\r\n## Environment data\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     debian\r\n OS Version:  10\r\n OS Platform: Linux\r\n RID:         debian.10-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12943","RelatedDescription":"Closed issue \"dotnet restore parallel adaptive\" (#12943)"},{"Id":"509561137","IsPullRequest":true,"CreatedAt":"2019-10-20T16:43:28","Actor":"dotnet-maestro[bot]","Number":"12947","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191020.1\r\n- **Date Produced**: 10/20/2019 3:01 PM\r\n- **Commit**: 07c1aa65a954ed0bb7a3804485422c577eac7167\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 5.0.0-alpha1.19520.1\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19520.1\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19520.1\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19520.1\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19520.1\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 5.0.0-alpha1.19520.1\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12947","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12947)"},{"Id":"509543324","IsPullRequest":true,"CreatedAt":"2019-10-20T04:45:24","Actor":"dotnet-maestro[bot]","Number":"12946","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191019.2\r\n- **Date Produced**: 10/20/2019 3:24 AM\r\n- **Commit**: 0de57914279da79eb7166588f67609c851e46179\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview2.19519.2\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12946","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12946)"},{"Id":"509541311","IsPullRequest":true,"CreatedAt":"2019-10-20T04:20:23","Actor":"dotnet-maestro[bot]","Number":"12945","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191019.7\r\n- **Date Produced**: 10/20/2019 2:40 AM\r\n- **Commit**: 821e656fa75e04a2161c828446321f4a1ea99be7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 5.0.0-alpha1.19519.7\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19519.7\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19519.7\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19519.7\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19519.7\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 5.0.0-alpha1.19519.7\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12945","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12945)"},{"Id":"509519893","IsPullRequest":true,"CreatedAt":"2019-10-19T23:40:27","Actor":"dotnet-maestro[bot]","Number":"12944","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191019.5\r\n- **Date Produced**: 10/19/2019 9:52 PM\r\n- **Commit**: 2b26a74b8fc8025f3b4a372483cb7d4477de0de2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 5.0.0-alpha1.19519.5\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19519.5\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19519.5\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19519.5\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19519.5\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 5.0.0-alpha1.19519.5\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12944","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12944)"},{"Id":"509495967","IsPullRequest":true,"CreatedAt":"2019-10-19T22:55:50","Actor":"cinta631","Number":"12942","RawContent":null,"Title":"Update dependencies from https://github.com/aspnet/AspNetCore build 2…","State":"closed","Body":"…0191019.1\r\n\r\n- Microsoft.AspNetCore.DeveloperCertificates.XPlat - 5.0.0-alpha1.19519.1\r\n\r\n- If this PR should not run tests add text \"skip[REMOVE_THIS]ci[REMOVE_THIS]please\" (remove the marked text, no quotes).\r\n- Add description for changes you are making.\r\n- If there is an issue related to this PR, add the reference.\r\n","Url":"https://github.com/dotnet/cli/pull/12942","RelatedDescription":"Closed or merged PR \"Update dependencies from https://github.com/aspnet/AspNetCore build 2…\" (#12942)"},{"Id":"509480865","IsPullRequest":true,"CreatedAt":"2019-10-19T21:11:49","Actor":"dotnet-maestro[bot]","Number":"12940","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191019.4\r\n- **Date Produced**: 10/19/2019 7:35 PM\r\n- **Commit**: d51ccfc121e31cc9bbf0c3ef538915a75b25458a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 5.0.0-alpha1.19519.4\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19519.4\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19519.4\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19519.4\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19519.4\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 5.0.0-alpha1.19519.4\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12940","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12940)"},{"Id":"509486689","IsPullRequest":false,"CreatedAt":"2019-10-19T17:51:05","Actor":"leo-labs","Number":"12941","RawContent":null,"Title":"dotnet sln remove has exit code 0 despite project not found","State":"open","Body":"## Steps to reproduce\r\n\r\nRemove a non existent project from a solution, e.g. `dotnet sln <SLN_FILE> remove foo`\r\n\r\n## Expected  behavior\r\n\r\nreturn a nonzero exit code, similar as `dotnet sln <SLN_FILE> add foo`\r\n\r\n## Actual behavior\r\n\r\nthe command returns an exit code of `0`\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  2.2.105 [/usr/local/share/dotnet/sdk]\r\n  2.2.402 [/usr/local/share/dotnet/sdk]\r\n  3.0.100 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12941","RelatedDescription":"Open issue \"dotnet sln remove has exit code 0 despite project not found\" (#12941)"},{"Id":"509478914","IsPullRequest":true,"CreatedAt":"2019-10-19T16:50:10","Actor":"dotnet-maestro[bot]","Number":"12939","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191019.1\r\n- **Date Produced**: 10/19/2019 4:04 PM\r\n- **Commit**: 0c5e370b7c2352bed7ac862b1ef5c6186362a512\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 5.0.0-alpha1.19519.1\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12939","RelatedDescription":"Open PR \"[master] Update dependencies from aspnet/AspNetCore\" (#12939)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"510619350","IsPullRequest":true,"CreatedAt":"2019-10-22T12:32:26","Actor":"dotnet-maestro[bot]","Number":"1621","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191021.4\r\n- **Date Produced**: 10/21/2019 11:38 PM\r\n- **Commit**: 46299619e290936c495264162ede68354ced5b18\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19521.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19521.4\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19521.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1621","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1621)"},{"Id":"510968850","IsPullRequest":false,"CreatedAt":"2019-10-21T21:11:58","Actor":"TomasMorton","Number":"1622","RawContent":null,"Title":"Targeting netstandard2.1 conflicts with System.Data.DataSetExtensions","State":"open","Body":"I'm trying to upgrade my solution to DotNet Core 3.  I have references to Entity Framework, which has forced an upgrade to netstandard 2.1.\r\n\r\nHowever, my classes that were using the DataTableExtensions are now unable to compile due to the following error:\r\n`[CS0121] The call is ambiguous between the following methods or properties: 'System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)' and 'System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)'`\r\nand also\r\n`[CS0433] The type 'TypedTableBase<T>' exists in both 'System.Data.DataSetExtensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089' and 'netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'`\r\n\r\nI have removed all Nuget packages for System.Data.DataSetExtensions, but I probably have a transitive dependency somewhere in the graph.\r\n\r\nThis problem seems to be the same as the previous one in https://github.com/dotnet/corefx/issues/37738.\r\n\r\nI would appreciate any workarounds to get my solution compiling as soon as possible.","Url":"https://github.com/dotnet/standard/issues/1622","RelatedDescription":"Open issue \"Targeting netstandard2.1 conflicts with System.Data.DataSetExtensions\" (#1622)"},{"Id":"509922429","IsPullRequest":true,"CreatedAt":"2019-10-21T12:23:01","Actor":"dotnet-maestro[bot]","Number":"1620","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191020.7\r\n- **Date Produced**: 10/21/2019 6:09 AM\r\n- **Commit**: 03453d9aae8e5d18e571699c5d2229b1ab5f4b9d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19520.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19520.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19520.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1620","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1620)"},{"Id":"509586833","IsPullRequest":true,"CreatedAt":"2019-10-20T12:22:06","Actor":"dotnet-maestro[bot]","Number":"1619","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191019.7\r\n- **Date Produced**: 10/20/2019 2:47 AM\r\n- **Commit**: 03dd803990dfb8f05db8d0ec1bc34268386c1d5b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19519.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19519.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19519.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1619","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1619)"},{"Id":"509442622","IsPullRequest":true,"CreatedAt":"2019-10-19T12:29:32","Actor":"dotnet-maestro[bot]","Number":"1618","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191018.10\r\n- **Date Produced**: 10/19/2019 7:13 AM\r\n- **Commit**: 5590d3896f012c1c9b7774774456331a36ba1d57\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19518.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19518.10\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19518.10\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1618","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1618)"},{"Id":"509155885","IsPullRequest":false,"CreatedAt":"2019-10-18T15:46:13","Actor":"0blu","Number":"1617","RawContent":null,"Title":"Why do I need special permission when using HttpListener?","State":"closed","Body":"Hey,\r\n\r\nthis issue is a little bit dot net bashing because some interfaces are design with assumptions that are too specific for most users, HttpListener is one of them.\r\n\r\nFirst of all, I already read about the [HTTP namespace system](https://docs.microsoft.com/en-us/windows/win32/http/routing-incoming-requests).\r\n\r\n`HttpListener` allows simple and high level creation of HTTP servers, but what if I want to create a HTTP server that can listen on all hosts, without requiring admin permissions or running arbitrary `netsh` commands?\r\n\r\nIf I would run this code as an unprivileged user the result would be an access exception.\r\n``` c#\r\nHttpListener listener = new HttpListener();\r\nlistener.Prefixes.Add(\"http://*:1234/\");\r\nlistener.Start();\r\n```\r\n\r\nHowever running the following code proves that an unprivileged user could potentially write his own HTTP server, that allows access from all interfaces.\r\n``` c#\r\nTcpListener server = new TcpListener(IPAddress.Any, 1234);\r\nserver.Start();\r\n```\r\n\r\nI wonder why there is no way to take all the benefits of the `HttpListener` and skipping the namespacing system. Other languages have such features.\r\n\r\nIs there any chance to request an API addition that allows such things?\r\nFor example allowing the constructor of `HttpListener` to take an `TcpListener`-Instance.\r\n","Url":"https://github.com/dotnet/standard/issues/1617","RelatedDescription":"Closed issue \"Why do I need special permission when using HttpListener?\" (#1617)"},{"Id":"509045354","IsPullRequest":true,"CreatedAt":"2019-10-18T12:30:25","Actor":"dotnet-maestro[bot]","Number":"1616","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191018.1\r\n- **Date Produced**: 10/18/2019 8:58 AM\r\n- **Commit**: 2b92fc0930b941cd0d9146971745cd717689434c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19518.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19518.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19518.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1616","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1616)"},{"Id":"508423360","IsPullRequest":true,"CreatedAt":"2019-10-17T23:53:53","Actor":"akoeplinger","Number":"1614","RawContent":null,"Title":"Update Xamarin APIs to latest Dev16.4 builds","State":"closed","Body":"- Xamarin.Android 10.1.0.1\r\n- Xamarin.iOS 13.8.1.1\r\n- Xamarin.Mac 6.8.1.1\r\n\r\nThis also uses a new GenAPI version so the diff is a little messy because of the enum value to name changes in attributes.\r\n\r\nI also had to introduce a System.Core.stubs.csproj to break a build cycle because System.dll references System.Security.Cryptography.ECDsa from System.Core.dll now.","Url":"https://github.com/dotnet/standard/pull/1614","RelatedDescription":"Closed or merged PR \"Update Xamarin APIs to latest Dev16.4 builds\" (#1614)"},{"Id":"508433927","IsPullRequest":true,"CreatedAt":"2019-10-17T12:24:28","Actor":"dotnet-maestro[bot]","Number":"1615","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191016.16\r\n- **Date Produced**: 10/17/2019 4:25 AM\r\n- **Commit**: b9186cfa3566ee24e5f16e45c542a3078e128dc6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19516.16\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19516.16\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19516.16\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1615","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1615)"},{"Id":"507816713","IsPullRequest":true,"CreatedAt":"2019-10-16T12:33:03","Actor":"dotnet-maestro[bot]","Number":"1613","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191015.14\r\n- **Date Produced**: 10/16/2019 5:58 AM\r\n- **Commit**: b50bd0a1d3f0326fc717706cb5c5950ab41cf437\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19515.14\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19515.14\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19515.14\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1613","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1613)"},{"Id":"507439996","IsPullRequest":true,"CreatedAt":"2019-10-15T19:33:30","Actor":"crummel","Number":"1612","RawContent":null,"Title":"Source-build improvements.","State":"open","Body":"- Always restore, even in source-build.  This is required so we get NETStandard.Library netstandard2.0 reference bits for inclusion in the NETStandard.Library we are building.\r\n  - Also make this error out in source-build if it fails like it does in the standalone build.\r\n- Sourcelink is now supported in source-build.\r\n\r\nI'm still testing this out in source-build but does it look like what you were thinking of @ericstj?","Url":"https://github.com/dotnet/standard/pull/1612","RelatedDescription":"Open PR \"Source-build improvements.\" (#1612)"},{"Id":"507207673","IsPullRequest":true,"CreatedAt":"2019-10-15T12:30:27","Actor":"dotnet-maestro[bot]","Number":"1611","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191014.7\r\n- **Date Produced**: 10/15/2019 8:46 AM\r\n- **Commit**: 3d16a2bd46d452ceb341887dc9c9dde26545110b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19514.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19514.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19514.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1611","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1611)"},{"Id":"507198335","IsPullRequest":true,"CreatedAt":"2019-10-15T12:01:34","Actor":"dotnet-maestro[bot]","Number":"1610","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191021.4\r\n- **Date Produced**: 10/21/2019 9:44 PM\r\n- **Commit**: f104bcb28e4936b0c0ab7c0d8cb73892ab515e60\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19521.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19521.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19521.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19521.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19521.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19521.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1610","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#1610)"},{"Id":"506615487","IsPullRequest":true,"CreatedAt":"2019-10-14T12:25:04","Actor":"dotnet-maestro[bot]","Number":"1609","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191013.1\r\n- **Date Produced**: 10/13/2019 1:26 PM\r\n- **Commit**: 437d9bc76489ff18bd9ce04f287e07591f6bc38c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19513.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19513.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19513.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1609","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1609)"},{"Id":"506317458","IsPullRequest":true,"CreatedAt":"2019-10-13T12:25:39","Actor":"dotnet-maestro[bot]","Number":"1608","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191012.1\r\n- **Date Produced**: 10/12/2019 1:32 PM\r\n- **Commit**: 8d21b79b924d29088dbde46d42737a657d466b5e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19512.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19512.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19512.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1608","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1608)"},{"Id":"506180021","IsPullRequest":true,"CreatedAt":"2019-10-12T12:30:20","Actor":"dotnet-maestro[bot]","Number":"1607","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191011.6\r\n- **Date Produced**: 10/12/2019 12:05 AM\r\n- **Commit**: 57ae5430e0e6cbf16b5c7b7def4fc95015b2b722\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19511.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19511.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19511.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1607","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1607)"},{"Id":"506178147","IsPullRequest":true,"CreatedAt":"2019-10-12T12:16:34","Actor":"dotnet-maestro[bot]","Number":"1606","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191011.1\r\n- **Date Produced**: 10/11/2019 12:51 PM\r\n- **Commit**: 64a027b8d8b3a8e8e214bb00da02148335e3bd92\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19511.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1606","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1606)"},{"Id":"505819610","IsPullRequest":true,"CreatedAt":"2019-10-11T12:31:35","Actor":"dotnet-maestro[bot]","Number":"1605","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191010.15\r\n- **Date Produced**: 10/11/2019 6:45 AM\r\n- **Commit**: 901c370c2379ad0885bcc5a1921c4164104586aa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19510.15\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19510.15\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19510.15\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1605","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1605)"},{"Id":"505811013","IsPullRequest":true,"CreatedAt":"2019-10-11T12:11:39","Actor":"dotnet-maestro[bot]","Number":"1604","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191010.4\r\n- **Date Produced**: 10/10/2019 5:59 PM\r\n- **Commit**: 8cd48078f550fbcbd4f684b897b14db207397b52\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19510.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1604","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1604)"},{"Id":"505304835","IsPullRequest":false,"CreatedAt":"2019-10-10T14:21:00","Actor":"Sumeetkumawat","Number":"1603","RawContent":null,"Title":"Issue while Referencing iOS native library to .net standard library","State":"open","Body":"I have three projects in my solution. I have added .net standard library say 'A'. I have some code there. Then i added ios library 'B' and added project reference of 'A' here.\r\nNow I have another .net standard library 'C' and here I would like to add reference of 'A' & 'B' projects not dll's. Reference of 'A' is added successfully but while adding reference of 'B', I \r\nsee 'Incompatible Target Framework' message.\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1603","RelatedDescription":"Open issue \"Issue while Referencing iOS native library to .net standard library\" (#1603)"},{"Id":"505235113","IsPullRequest":true,"CreatedAt":"2019-10-10T12:33:39","Actor":"dotnet-maestro[bot]","Number":"1602","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191009.26\r\n- **Date Produced**: 10/10/2019 3:16 AM\r\n- **Commit**: 30280e07adc3c1f0776ef9531b47a769e2b45420\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19509.26\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19509.26\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19509.26\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1602","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1602)"},{"Id":"505224197","IsPullRequest":true,"CreatedAt":"2019-10-10T12:11:42","Actor":"dotnet-maestro[bot]","Number":"1601","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191009.5\r\n- **Date Produced**: 10/9/2019 10:22 PM\r\n- **Commit**: 1acb4c3ce4c6497388752adad31825ae7cdb7e2a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19509.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19509.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19509.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19509.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19509.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19509.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1601","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1601)"},{"Id":"505206761","IsPullRequest":false,"CreatedAt":"2019-10-10T11:24:37","Actor":"manijak","Number":"1600","RawContent":null,"Title":"The state of X509Certificate management with netstandard, xamarin, win & macOS","State":"open","Body":"First, my apologies if this is the wrong channel to post this. I've been digging and trying to understand for weeks where the issue/limitation is to our problem, figured this would be the most suitable place to ask. We are not sure if this is a limitation with the frameworks, or the platform, or due to our limited knowledge, or a combination of all. But things are very confusing right now, and we just need proper guidance on what direction to take.\r\n\r\nEDIT: Would appreciate if @bartonjs or @filipnavara could pitch in 👍 \r\n\r\n### **Background** 💡 \r\nWe are creating a small, cross-platform (win & macos), desktop application that will act as a websocket server running only on localhost (https). This application is a bridge between our web applications and the local machine hardware (e.g. printers). In order to provide a secure connection, `SslStream` requires a `X509Certificate2` class with a `PrivateKey`.\r\n\r\nThe idea is to let the app itself generate a self-signed certificate with private key and use that to start the secure websocket service. After the certificate has been generated for the first time, we store it in the local certificate store and reuse it when the app restarts. \r\n\r\n### **Project structure & frameworks** 📦 \r\nThis is how our solution is defined. `SharedProject` is a shared lib referenced by both `AppWin` & `AppMac`. The Win & Mac projects are startup-projects for their respective platform. \r\n```\r\nOurApp.sln\r\n  |---- SharedProject (netstandard2.1)\r\n        Creates & runs the websocket service, generates certificate (win), communicates with local hardware, ect\r\n\r\n  |---- AppWin (netcore3.0)\r\n        Startup project for Windows platform. Contains platform-specific code, if any.\r\n\r\n  |---- AppMac (Xamarin.Mac)\r\n        Startup project for macOS platform. Contains platform-specific code (generates certificate).\r\n```\r\n\r\n### **How it runs** 🏃 \r\nIn our `SharedProject` we have a class taking care of certificate generation and storing. The idea was that both the Win & Mac platforms could use this to manage the certificates. It uses the `X509Certificate2` & `CertificateRequest` provided by the framework. Plus the `X509Store` to save and retrieve the certificate.\r\n\r\n**Windows** ✔️ \r\nOn Windows there are no issues. With minimum amount of code we are able to generate a self-signed certificate with private-key, store it, and run the service with it. Also re-using the certificate when the app restarts by retrieving the certificate works very well. The `X509Store` returns the certificate with the _private key_, and we can easily use it with our `SslStream`. \r\n\r\n**macOS** ❌ \r\nThings are not so clear here... We could not use the above mentioned shared class to manage certificates (that works just fine on Windows):\r\n* First issue was that we got a `PlatformNotSupportedException` when the application was trying to use the `CertificateRequest`. \r\n* Second \"issue\" was that the `X509Store` did not store or retrieve certificates from the macOS keychain, but instead it uses some local mono certificate-store that the browsers do not see (at least in our tests). And it only stored the certificate (.cer) not the private-key that was included in the `X509Certificate2` object. Plus it seemed difficult to \"Trust\" the stored certificate.\r\n\r\nSo we created a separate class to take care of certificate management for macOS inside the `AppMac (Xamarin.Mac)` project. By using `BouncyCastle` we generated an identical self-signed certificate with private-key and used that to run our secure websocket service:\r\n\r\n* When launching our Secure Websocket service on macOS, the certificate used here is automatically added to the local macOS login keychain. For us this is great, since we could not use `X509Store` to add it there in the first place.\r\n* The only way we could retrieve the certificate from the keychain was to use the `SecKeyChain` class and query for it. Thankfully the `SecCertificate` object has a `ToX509Certificate2()` function. But that still left us without the `PrivateKey` that is needed by `SslStream`. \r\n* We also tried using `SecKeyChain.FindIdentity` to retrieve both, but even tho it is easy to convert `SecCertificate` to `X509Certificate2`, there seems to be no way to convert a `SecKey` to something useful like `RSA` or `RSACryptoServiceProvider` or something that can be embedded to the `X509Certificate2`\r\n\r\n### What to do? 😭 \r\nWe are pretty much stuck when it comes to the macOS platform. There seems to be no way for us to retrieve our own X509Certificate2 with the private-key embedded. Not sure if this is because we are using Xamarin.Mac & netstandard2.1, perhaps things are easier on netcore3? But still, Xamarin & mono have been around for a long time, there should be a way for us to do this today. Must be something we are missing here and would appreciate if someone could guide us. ","Url":"https://github.com/dotnet/standard/issues/1600","RelatedDescription":"Open issue \"The state of X509Certificate management with netstandard, xamarin, win & macOS\" (#1600)"},{"Id":"504399207","IsPullRequest":false,"CreatedAt":"2019-10-09T12:43:05","Actor":"2300070","Number":"1598","RawContent":null,"Title":"FiledInfo.SetValue Not Working For Static ReadOnly Fileds.","State":"closed","Body":"    private class TestReadOnly\r\n    {\r\n        public static readonly int Field;\r\n    }\r\n    [TestMethod]\r\n    public void TestReadOnlyField()\r\n    {\r\n        FieldInfo field = typeof(TestReadOnly).GetField(nameof(TestReadOnly.Field));\r\n\r\n        Console.WriteLine(field.GetValue(null));\r\n\r\n        field.SetValue(null, 0xFF);\r\n\r\n        Console.WriteLine(field.GetValue(null));\r\n\r\n        Console.WriteLine(TestReadOnly.Field);\r\n    }\r\n\r\nOutput:\r\n\r\n0\r\n255\r\n255\r\n0\r\n","Url":"https://github.com/dotnet/standard/issues/1598","RelatedDescription":"Closed issue \"FiledInfo.SetValue Not Working For Static ReadOnly Fileds.\" (#1598)"},{"Id":"504610278","IsPullRequest":true,"CreatedAt":"2019-10-09T12:21:49","Actor":"dotnet-maestro[bot]","Number":"1599","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191009.1\r\n- **Date Produced**: 10/9/2019 9:11 AM\r\n- **Commit**: a7ee8cdccce7d2607d58f9b93ce319209a238f7a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19509.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19509.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19509.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1599","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1599)"},{"Id":"504006427","IsPullRequest":true,"CreatedAt":"2019-10-08T12:28:23","Actor":"dotnet-maestro[bot]","Number":"1597","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191008.1\r\n- **Date Produced**: 10/8/2019 8:59 AM\r\n- **Commit**: c1092870c306b8da256e455cec0814486255d0c1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19508.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19508.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19508.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1597","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1597)"},{"Id":"503415647","IsPullRequest":true,"CreatedAt":"2019-10-07T12:29:27","Actor":"dotnet-maestro[bot]","Number":"1596","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191006.4\r\n- **Date Produced**: 10/7/2019 1:07 AM\r\n- **Commit**: 38aa9151607cb63bb569beb42880057ba2cd3da0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19506.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19506.4\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19506.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1596","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1596)"},{"Id":"503407217","IsPullRequest":true,"CreatedAt":"2019-10-07T12:11:40","Actor":"dotnet-maestro[bot]","Number":"1595","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191006.1\r\n- **Date Produced**: 10/6/2019 12:59 PM\r\n- **Commit**: 7acc732c615d2c2326cd347c8c1841a300a632cb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19506.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19506.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19506.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19506.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19506.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19506.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1595","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1595)"},{"Id":"503093090","IsPullRequest":true,"CreatedAt":"2019-10-06T12:23:42","Actor":"dotnet-maestro[bot]","Number":"1594","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191005.5\r\n- **Date Produced**: 10/6/2019 3:54 AM\r\n- **Commit**: 6de42378223c6cb138d28f812c440092718c7a19\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19505.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19505.5\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19505.5\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1594","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1594)"},{"Id":"503091277","IsPullRequest":true,"CreatedAt":"2019-10-06T12:11:40","Actor":"dotnet-maestro[bot]","Number":"1593","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191005.1\r\n- **Date Produced**: 10/5/2019 12:53 PM\r\n- **Commit**: 13e1dbd86223eaa797655bf14070ea28ce6461e3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19505.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19505.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19505.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19505.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19505.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19505.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1593","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1593)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"511079428","IsPullRequest":true,"CreatedAt":"2019-10-23T05:17:18","Actor":"ahsonkhan","Number":"42025","RawContent":null,"Title":"[release/3.1] Use ThrowHelper in Utf8JsonReader.GetGuid so that the deserializer can catch the exception and re-throw JsonException","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/41032\r\n\r\nPorting https://github.com/dotnet/corefx/pull/40938 which addresses https://github.com/aspnet/AspNetCore/issues/13811\r\n\r\n### Description\r\n\r\nUse the existing ThrowHelper which sets the source of the exception correctly for the case of Guid so that the deserializer knows to re-catch that and throw the expected JsonException (like all other data types we support). Renaming the internal `DateType` to `DataType` to correctly reflect its usage.\r\n\r\n### Customer Impact:\r\n\r\nCustomer reported issue. When processing mismatching JSON payload within an AspNetCore WebAPI that expected Guids, the user sees a 500 error (Internal Server Error) rather than the expected 400 (Bad Request Error). Asp.Net expects a JsonException in this case from the deserializer and we are leaking FormatException.\r\n\r\nSnippet from issue - Expected behavior:\r\n> Invalid GUID should trigger a \"Bad Request\" (400) response with a ProblemDetails object, not an Internal server error.\r\n\r\n### Regression? \r\n\r\nNo\r\n\r\n### Risk\r\n\r\nLow. Other than the rename and tests, the change is a one line fix and we are still throwing the same exception from the reader. We are now correctly throwing `JsonException` from the Deserializer. The only concern would be if someone was catching and relying on the previous exception rather than `JsonException` but that would be an incorrect approach anyway.\r\n\r\n### Tests run / added\r\n\r\nUnit tests added for \"mismatching\" deserialization of the supported primitive types and validated within an aspnet web api that the fix from master works as expected.\r\n\r\ncc @pranavkm, @ericstj, @danmosemsft \r\n","Url":"https://github.com/dotnet/corefx/pull/42025","RelatedDescription":"Open PR \"[release/3.1] Use ThrowHelper in Utf8JsonReader.GetGuid so that the deserializer can catch the exception and re-throw JsonException\" (#42025)"},{"Id":"511053869","IsPullRequest":false,"CreatedAt":"2019-10-23T03:48:06","Actor":"Bio2hazard","Number":"42024","RawContent":null,"Title":"Timeout or Keep-Alive for open connection from HttpCompletionOption.ResponseHeadersRead ?","State":"open","Body":"Hi,\r\n\r\nwe have noticed that some of the background workers on our services occasionally just stop. \r\n\r\nInvestigating the issue, I found that a library we use is using ResponseHeadersRead and that the workers stop because the target machine disappeared without explicitly closing the socket.\r\n\r\nOur workers have stopped working for many hours ( before we inevitably restart them ), so it does not seem like these open connections have any timeouts or keep-alives on them.\r\n\r\nMy questions are:\r\n\r\n1) Is there any way we can set a application-wide timeout or keep-alive or even maximum read time for these open stream connections?\r\n\r\n2) Is there any way to abort an on-going read? I have tried disposing of stream, but the other thread remains blocked trying to read from the socket.\r\n\r\n3) Can you offer some guidance or best practices around the problem? Streams are very abstract, and if all your method receives is a Stream, it's next to impossible to know how to safely work with the given stream. Furthermore, none of the convenience methods seem to support cancellation tokens, and any synchronous reads appear doomed to begin with. \r\n    - `HttpContent.ReadAsStringAsync` ? No CTS Support => Application Deadlock Potential\r\n    - `HttpContent.ReadAsByteArrayAsync` ? No CTS Support => Application Deadlock Potential\r\n    - `HttpContent.ReadAsStreamAsync` > `StreamReader.ReadToEndAsync` ? No CTS Support => Application Deadlock Potential\r\n    - `HttpContent.ReadAsStreamAsync` > `StreamReader.ReadLineAsync` ? No CTS Support => Application Deadlock Potential\r\n    - `HttpContent.ReadAsStreamAsync` > Any synchronous call that reads from a stream => Application Deadlock Potential\r\n\r\nIt feels like the exact situation that `Stream.CanTimeout` , `Stream.ReadTimeout` and `Stream.WriteTimeout` was made for, but for some reason they are not supported either.","Url":"https://github.com/dotnet/corefx/issues/42024","RelatedDescription":"Open issue \"Timeout or Keep-Alive for open connection from HttpCompletionOption.ResponseHeadersRead ?\" (#42024)"},{"Id":"511051513","IsPullRequest":true,"CreatedAt":"2019-10-23T03:39:24","Actor":"ahsonkhan","Number":"42023","RawContent":null,"Title":"When encoder is null, use JavaScriptEncoder.Default to check for NeedsEscaping","State":"open","Body":"See related PRs https://github.com/dotnet/corefx/pull/41845, https://github.com/dotnet/corefx/pull/41933\r\n\r\nNow that the built-in `JavaScriptEncoder` implementations have been optimized, S.T.Json can leverage those rather than having its own (duplicate) logic. This is true, at least for the `NeedsEscaping` check.\r\n\r\nThis PR effectively reverts the optimizations made in https://github.com/dotnet/corefx/pull/41845/ since those went down to S.T.E.W.\r\n\r\n**There is no behavioral change here.**\r\n\r\nIdeally, we'd get rid of the encoding logic as well, when encoder == null, but the S.T.E.W implementation needs to be made faster first (for the common cases) to avoid the regression.\r\n\r\nSomething like the following change (which treats null as JavaScriptEncoder.Deafult across the board)\r\nhttps://github.com/ahsonkhan/corefx/commit/ced1ee0e225844fa27b0b902aeedc16dc9cb2386\r\n\r\nhttps://github.com/dotnet/corefx/blob/623703d941115131a7f269f9e23560f6d937837c/src/System.Text.Json/src/System/Text/Json/Writer/JsonWriterHelper.Escaping.cs#L301-L330\r\n\r\ncc @steveharter, @GrabYourPitchforks, @gfoidl ","Url":"https://github.com/dotnet/corefx/pull/42023","RelatedDescription":"Open PR \"When encoder is null, use JavaScriptEncoder.Default to check for NeedsEscaping\" (#42023)"},{"Id":"511048558","IsPullRequest":true,"CreatedAt":"2019-10-23T03:27:50","Actor":"Dotnet-GitSync-Bot","Number":"42022","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"open","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corefx/pull/42022","RelatedDescription":"Open PR \"Mirror changes from dotnet/coreclr\" (#42022)"},{"Id":"511017440","IsPullRequest":true,"CreatedAt":"2019-10-23T03:08:01","Actor":"stephentoub","Number":"42020","RawContent":null,"Title":"Fix several Socket tests to not dispose an event on failure","State":"closed","Body":"When I run these tests locally, due to my network configuration they sometimes fail.  If they fail and the test is disposing of the ManualResetEvent, the async callback may try to set the event after it's already been disposed, which throws an exception that crashes the test process.  The easy fix is to just dispose of these MRE instances on success and let their finalizers clean up for them if the tests fail.","Url":"https://github.com/dotnet/corefx/pull/42020","RelatedDescription":"Closed or merged PR \"Fix several Socket tests to not dispose an event on failure\" (#42020)"},{"Id":"511029129","IsPullRequest":true,"CreatedAt":"2019-10-23T02:17:10","Actor":"tannergooding","Number":"42021","RawContent":null,"Title":"Move Matrix3x2/4x4, Plan, and Quaternion to the shared CoreLib partition","State":"open","Body":"This should have been part of https://github.com/dotnet/corefx/pull/42005. `Vector2/3/4` expose methods that take `Matrix3x2`, `Matrix4x4`, and `Quaternion`. `Matrix4x4` then exposes methods that take in `Plane`.\r\n\r\nThis means that all `System.Numerics.Vectors` types move down to S.P.Corelib.\r\n\r\nCC. @CarolEidt, @jkotas ","Url":"https://github.com/dotnet/corefx/pull/42021","RelatedDescription":"Open PR \"Move Matrix3x2/4x4, Plan, and Quaternion to the shared CoreLib partition\" (#42021)"},{"Id":"510960070","IsPullRequest":true,"CreatedAt":"2019-10-23T01:43:37","Actor":"JeremyKuhne","Number":"42007","RawContent":null,"Title":"[release/3.1] Handle non blittable LOGFONT structs (#41975)","State":"closed","Body":"### Summary\r\n\r\n`System.Drawing.Font.FromLogFont(object lf)` takes a LOGFONT “structure” to create a `Font`. User defined structs that are not blittable (that have a reference type in them) no longer work with this API. This issue was found by a WinForms customer that was trying to port.\r\n\r\n### Customer Impact\r\n\r\nUser can no longer use some existing LOGFONT wrapping types. The workaround is to convert the struct to a class or blittable struct.\r\n\r\n### Risk\r\n\r\nLow. I was choosing the wrong code path for non-blittable structs. Change is simple.\r\n\r\nFixes: https://github.com/dotnet/winforms/issues/2136\r\nPorts https://github.com/dotnet/corefx/pull/41975 (with additional changes per @jkotas feedback)\r\n","Url":"https://github.com/dotnet/corefx/pull/42007","RelatedDescription":"Closed or merged PR \"[release/3.1] Handle non blittable LOGFONT structs (#41975)\" (#42007)"},{"Id":"510986944","IsPullRequest":true,"CreatedAt":"2019-10-23T01:41:21","Actor":"jkotas","Number":"42011","RawContent":null,"Title":"Simplify LOGFONT marshalling","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42011","RelatedDescription":"Closed or merged PR \"Simplify LOGFONT marshalling\" (#42011)"},{"Id":"511017147","IsPullRequest":true,"CreatedAt":"2019-10-23T01:30:23","Actor":"tannergooding","Number":"42019","RawContent":null,"Title":"Regenerating the ref assembly for System.Runtime.Intrinsics.Experimental","State":"open","Body":"This is the CoreFX side to https://github.com/dotnet/coreclr/pull/27153","Url":"https://github.com/dotnet/corefx/pull/42019","RelatedDescription":"Open PR \"Regenerating the ref assembly for System.Runtime.Intrinsics.Experimental\" (#42019)"},{"Id":"511015318","IsPullRequest":true,"CreatedAt":"2019-10-23T01:22:58","Actor":"stephentoub","Number":"42018","RawContent":null,"Title":"Add test for SafeHandle handling in Socket.Select","State":"open","Body":"Test for https://github.com/dotnet/corefx/pull/41763\r\ncc: @tmds","Url":"https://github.com/dotnet/corefx/pull/42018","RelatedDescription":"Open PR \"Add test for SafeHandle handling in Socket.Select\" (#42018)"},{"Id":"511010782","IsPullRequest":true,"CreatedAt":"2019-10-23T01:05:33","Actor":"danmosemsft","Number":"42017","RawContent":null,"Title":"Event log retries","State":"open","Body":"Attempt to work around #41150 and #41968\r\n\r\nCloses #41968\r\n\r\nThe OS is returning `ERROR_GEN_FAILURE` from `ClearEventLogW` 10 times in a row on the same log. In one of these cases it then did it 10 times again on the next test. \r\n\r\nI do not know why this is but it's clearly rare and it's only on the cleanup path. So make our calls to this from tests ignore such failures, unless they're actually testing it.\r\n\r\nAlso incremented max retries, since why not.","Url":"https://github.com/dotnet/corefx/pull/42017","RelatedDescription":"Open PR \"Event log retries\" (#42017)"},{"Id":"511005843","IsPullRequest":true,"CreatedAt":"2019-10-23T00:45:43","Actor":"safern","Number":"42016","RawContent":null,"Title":"[release/3.0] Fix CharSet to Unicode for Gdip.DrawString","State":"open","Body":"### Summary\r\n\r\n`Graphics.DrawString` takes a `string` and draws it into a graphics object which then can be saved into a file. However in https://github.com/dotnet/corefx/commit/b75421a0035bf3a44e1f68447255470d57074dbb#diff-8eda13b1268284d720355f95667dea21R218 we changed the way that we did `PInvokes` in System.Drawing to improve winforms performance. This parameter needed to be marshaled as a `LPWStr` which represents a pointer to a 16 bit Unicode string, so we need to set the CharSet to Unicode in order for the output image to be rendered correctly.\r\n\r\n### Customer Impact\r\n\r\nUser can not draw a string into an image on Unix.\r\n\r\nExpected:\r\n![dotnetcore22](https://user-images.githubusercontent.com/22223342/65538811-70665d80-df08-11e9-9a4e-90301233206f.png)\r\n\r\nOutput:\r\n![dotnetcore30](https://user-images.githubusercontent.com/22223342/65538813-72302100-df08-11e9-9732-5a98379a9a43.png)\r\n\r\n### Risk\r\n\r\nMedium as changing marshaling can always have other fall-backs. However this should match what we had previously: https://github.com/dotnet/corefx/commit/b75421a0035bf3a44e1f68447255470d57074dbb#diff-8eda13b1268284d720355f95667dea21L457\r\n\r\nFixes to: https://github.com/dotnet/corefx/issues/41292\r\n\r\ncc: @danmosemsft ","Url":"https://github.com/dotnet/corefx/pull/42016","RelatedDescription":"Open PR \"[release/3.0] Fix CharSet to Unicode for Gdip.DrawString\" (#42016)"},{"Id":"511005108","IsPullRequest":true,"CreatedAt":"2019-10-23T00:42:46","Actor":"safern","Number":"42015","RawContent":null,"Title":"[release/3.1] Fix CharSet to Unicode for Gdip.DrawString","State":"open","Body":"### Summary\r\n\r\n`Graphics.DrawString` takes a `string` and draws it into a graphics object which then can be saved into a file. However in https://github.com/dotnet/corefx/commit/b75421a0035bf3a44e1f68447255470d57074dbb#diff-8eda13b1268284d720355f95667dea21R218 we changed the way that we did `PInvokes` in System.Drawing to improve winforms performance. This parameter needed to be marshaled as a `LPWStr` which represents a pointer to a 16 bit Unicode string, so we need to set the CharSet to Unicode in order for the output image to be rendered correctly.\r\n\r\n### Customer Impact\r\n\r\nUser can not draw a string into an image on Unix.\r\n\r\nExpected:\r\n![dotnetcore22](https://user-images.githubusercontent.com/22223342/65538811-70665d80-df08-11e9-9a4e-90301233206f.png)\r\n\r\nOutput:\r\n![dotnetcore30](https://user-images.githubusercontent.com/22223342/65538813-72302100-df08-11e9-9732-5a98379a9a43.png)\r\n\r\n### Risk\r\n\r\nMedium as changing marshaling can always have other fall-backs. However this should match what we had previously: https://github.com/dotnet/corefx/commit/b75421a0035bf3a44e1f68447255470d57074dbb#diff-8eda13b1268284d720355f95667dea21L457\r\n\r\nContributes to: https://github.com/dotnet/corefx/issues/41292","Url":"https://github.com/dotnet/corefx/pull/42015","RelatedDescription":"Open PR \"[release/3.1] Fix CharSet to Unicode for Gdip.DrawString\" (#42015)"},{"Id":"511004478","IsPullRequest":true,"CreatedAt":"2019-10-23T00:40:23","Actor":"dotnet-maestro[bot]","Number":"42014","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20191022.2\r\n- **Date Produced**: 10/22/2019 9:40 PM\r\n- **Commit**: 30583ce8b3816f6855b14f6f855db604db23cfc4\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.0-preview2.19522.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.0-preview2.19522.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.0-preview2.19522.2\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42014","RelatedDescription":"Open PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42014)"},{"Id":"510837994","IsPullRequest":true,"CreatedAt":"2019-10-23T00:19:56","Actor":"ericstj","Number":"41998","RawContent":null,"Title":"[release/3.1] Compression fixes for 3.1","State":"closed","Body":"Ports the following to release/3.1\r\nhttps://github.com/dotnet/corefx/pull/41190\r\nhttps://github.com/dotnet/corefx/pull/41451\r\n\r\nIssues:\r\nSystem.IO.Compression.ZipArchive reads entire input stream before failing when non-Zip specified (#34892)\r\nInvalidDataException when decompressing concatenated GZIP payloads with CopyTo (#40710)\r\n\r\n\r\n## Description\r\n- When examining a stream to see if it is a valid zip we search the entire stream for the end of central directory.  For large streams that aren't zips this can take a very long time.  We can assume that the end of central directory is within a certain distance from the end of the stream, which results in a smaller amount of seeking/reading and a faster failure.\r\n- When reading a concatenated GZip payload and the footer of a payload is at the start of a block we will skip the rest of the block and try to consume a header at the start of the next block.\r\n\r\n## Customer Impact\r\n\r\n- Slow failure is a perf issue for customers, some users perceive this as a deadlock.\r\n- Concat bug is a correctness / data corruption issue.  Customer is blocked when copying from a stream that has a concatenated payload on a particular boundary.  In the case of an (un)lucky payload this can result in silently omitting data.\r\n\r\n## Regression?\r\n\r\nNo (concat issue broken only in new behavior, since it was introduced)\r\n\r\n## Risk\r\n\r\nLow. \r\nSomeone reading a zip from a stream with other data may have previously succeeded but will now fail.  We've mitigated this by testing lots of permutations of zips with padding and confirmed that our new behavior is similar to most other zip implementations.  \r\nThere is a small risk that the concat fix will result in a case that was failing now producing a lot more data, but this is the purpose of the fix.\r\nBoth fixes have added tests for the specific scenario they address.","Url":"https://github.com/dotnet/corefx/pull/41998","RelatedDescription":"Closed or merged PR \"[release/3.1] Compression fixes for 3.1\" (#41998)"},{"Id":"510981805","IsPullRequest":true,"CreatedAt":"2019-10-22T23:20:25","Actor":"safern","Number":"42010","RawContent":null,"Title":"[release/3.0] Port sdl validation fix","State":"open","Body":"This should be mirrored to 3.1 automatically\r\n\r\ncc: @danmosemsft ","Url":"https://github.com/dotnet/corefx/pull/42010","RelatedDescription":"Open PR \"[release/3.0] Port sdl validation fix\" (#42010)"},{"Id":"510981038","IsPullRequest":true,"CreatedAt":"2019-10-22T23:18:09","Actor":"layomia","Number":"42009","RawContent":null,"Title":"[release/3.1] Populate non-immutable collections directly on deserialize (#41482)","State":"open","Body":"Ports https://github.com/dotnet/corefx/pull/41482 to 3.1:\r\n\r\n## Description\r\nThis PR improves performance collections previously deserialized with the use of enumerable/dictionary converters (not to be confused with the `JsonConverter` feature). This includes types derived from native (System.Collections[.Generic]) collections, and native collections that don't implement `IList`, `IDictionary`, or `IDictionary<>`. \r\n\r\nConverter usage is now removed for collections, excluding non-immutable types and arrays. This usage involved allocating a temporary list or dictionary to store elements of a given collection when deserializing, then passing the temp list to a converter tasked with creating and populating a return type. Converters could be removed because these types could be populated either with manual casts to `ILIst`, `IDictionary`, or `IDictionary<>` (IList.Add or dictionary indexer), or with a delegate to an add method retrieved and bound with reflection.\r\n\r\nWe get reduced allocations with the elimination of the temp buffers, and faster execution with simplified runtime information detection (including removing logic concerning the assignment of converters to types). See https://github.com/dotnet/corefx/pull/41482#issuecomment-538115500 for detailed perf improvements.\r\n\r\nSee the description of https://github.com/dotnet/corefx/pull/41482 for the rules governing the deserialization of collections.\r\n\r\n## Customer Impact\r\n\r\nSignificant perf improvements (ranging from 3-29% faster, up to 34.18% decrease in allocations) for custom derived collections.\r\nFixes https://github.com/dotnet/corefx/issues/41427 - higher order inheritance for derived types is now supported\r\nFixes https://github.com/dotnet/corefx/issues/40479 - reflection is now used to support more types, including non-generic Stack and Queue.\r\nFixes https://github.com/dotnet/corefx/issues/41034 - types that implement IDictionary are now supported for serialization, examples are Hashtable, and SortedList.\r\n\r\n## Regression?\r\n\r\n### Performance\r\n\r\nThere are no significant perf regressions accompanying the perf gains detailed in https://github.com/dotnet/corefx/pull/41482#issuecomment-538115500.\r\n\r\n### Deserialization support\r\n\r\nThis PR is concerned with deserialization of collections. There are no functional changes to how non-collection types work, so there is little chance of rescinding support for these types.\r\n\r\nThere's a chance that this PR rescinds deserialization support for unknown collections (e.g. user types). However, I feel confident enough for this to go into preview because:\r\n- The core logic used by the serializer to obtain runtime information about a given collection was scoped to support types in System.Collections[.Generic], and types that implement or inherit them (for concrete collections, up to 1 degree up the inheritance chain).\r\n- The updated logic is simplified and made more performant in this PR by obtaining all the runtime information in one pass: avoiding repeated checks for converters, element types, class types, and removing complex logic involved in assigning converters to types. This logic is expected to now be more inclusive, and accounts for previously held assumptions.\r\n\r\n### Serialization support\r\n\r\nBeside removing checks for the `IDictionaryConstructible` class types (which are now regarded simply as `Dictionary` types), this change doesn't modify the serialization code paths, so it's unlikely for the serializer to stop supporting any previously supported types.\r\n\r\n## Risk\r\n\r\nThe risk of this PR is described in the regression section. I'll be paying close attention to incoming issues to mitigate as needed.","Url":"https://github.com/dotnet/corefx/pull/42009","RelatedDescription":"Open PR \"[release/3.1] Populate non-immutable collections directly on deserialize (#41482)\" (#42009)"},{"Id":"510926802","IsPullRequest":true,"CreatedAt":"2019-10-22T22:53:11","Actor":"tannergooding","Number":"42005","RawContent":null,"Title":"Move Vector2/3/4 to the shared CoreLib partition","State":"closed","Body":"This makes progress towards https://github.com/dotnet/corefx/issues/36379 by moving `Vector2`, `Vector3`, and `Vector4` into the shared corelib partition.\r\n\r\nAfter this makes its way back into CoreCLR, `S.P.Corelib` can start compiling these sources directly and then they can be removed from the S.N.Vectors project in CoreFX.\r\n\r\nCC. @CarolEidt, @jkotas ","Url":"https://github.com/dotnet/corefx/pull/42005","RelatedDescription":"Closed or merged PR \"Move Vector2/3/4 to the shared CoreLib partition\" (#42005)"},{"Id":"510813987","IsPullRequest":true,"CreatedAt":"2019-10-22T22:53:02","Actor":"tannergooding","Number":"41995","RawContent":null,"Title":"Adding Unsafe.SkipInit","State":"closed","Body":"This resolves https://github.com/dotnet/corefx/issues/38585 by exposing the `Unsafe.SkipInit` method in System.Runtime.CompilerServices","Url":"https://github.com/dotnet/corefx/pull/41995","RelatedDescription":"Closed or merged PR \"Adding Unsafe.SkipInit\" (#41995)"},{"Id":"510966090","IsPullRequest":true,"CreatedAt":"2019-10-22T22:35:14","Actor":"steveharter","Number":"42008","RawContent":null,"Title":"[release/3.1] Port perf and dict issue to31","State":"open","Body":"_note: the branch here is based on @layomia current branch for another issue which is not yet in 3.1 so you can ignore the first commit here. The next two commits handle two separate issues but since they conflict, just one PR:_\r\n\r\nPorts the following to release/3.1\r\nhttps://github.com/dotnet/corefx/pull/41753\r\nhttps://github.com/dotnet/corefx/pull/41903\r\n\r\nIssues:\r\n- Significant performance improvement when using polymorphic serialization.\r\n- Support dictionaries that implement `Dictionary<TKey, TValue>` but do not implement the non-generic `IDictionary`\r\n\r\n## Description\r\n- When a property of type of System.Object is serialized, the serializer enters a polymorphic mode where it obtains the actual run-time type to serialize. Getting the appropriate infrastructure (including looking up a converter for that type and generating IL for the setter) is expensive and was not cached. This PR caches that information. The issue was created and fixed by a community member by adding a dictionary-based cache.\r\n- An assumption was made during serialization that a call to a dictionary's `GetEnumerator()` (either through the `IEnumerable` or `IDictionary` interfaces) returns an `IDictionaryEnumerable` as required for types that implement `IDictionary`. However, there are certain \"newer\" generic collection types outside of the BCL that don't implement `IDictionary` or return `IDictionaryEnumerable` from their `IEnumerable.GetEnumerator()` method (note that `IDictionary<TKey, TValue>` does not implement `IDictionary`). This caused a `InvalidCastException` at runtime. The fix is to assume `IEnumerable<KeyValuePair<TKey, TValue>>` instead of `IDictionaryEnumerable` for generic dictionaries.\r\n\r\n## Customer Impact\r\n\r\n- Slow behavior when using polymorphic serialization.\r\n- Lack of support for newer generic dictionaries that don't support the older `IDictionary`.\r\n\r\n## Regression?\r\n\r\nNo. For the dictionary issue, the `InvalidCastException` is no longer encountered.\r\n\r\n## Risk\r\n\r\nLow. \r\nThe performance issue is very specific to polymorphic serialization and was already tested. An additional test was added to verify the cache is properly keying.\r\n\r\nFor the dictionary issue, existing tests were not modified and new tests added that only implement the generic `IDictionary<TKey, TValue>`.","Url":"https://github.com/dotnet/corefx/pull/42008","RelatedDescription":"Open PR \"[release/3.1] Port perf and dict issue to31\" (#42008)"},{"Id":"510947985","IsPullRequest":true,"CreatedAt":"2019-10-22T22:15:36","Actor":"Dotnet-GitSync-Bot","Number":"42006","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @AaronRobinsonMSFT","Url":"https://github.com/dotnet/corefx/pull/42006","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#42006)"},{"Id":"510923676","IsPullRequest":false,"CreatedAt":"2019-10-22T21:20:53","Actor":"scalablecory","Number":"42004","RawContent":null,"Title":"Add address family specific name resolution to Dns","State":"open","Body":"These APIs would return addresses only within a specified address family.\r\n\r\nThis proposal adds APIs needed to implement RFC 8305 \"Happy Eyeballs\" in `Socket.Connect`. DNS resolution requires two separate requests for A and AAAA records, part of Happy Eyeballs is doing those two requests in parallel along with concurrent Connect() calls. See #41778 for more.\r\n\r\n(API has cancellation support added where there previously hasn't been, to avoid needing to add yet more APIs later. See #40586)\r\n\r\n```c#\r\nclass System.Net.Dns\r\n{\r\n    // These would all just set the ai_family hint in getaddrinfo.\r\n\r\n    public static IPAddress[] GetHostAddresses(string hostNameOrAddress, AddressFamily family);\r\n    public static ValueTask<IPAddress[]> GetHostAddressesAsync(string hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken = default);\r\n\r\n    public static IPHostEntry GetHostEntry(string hostNameOrAddress, AddressFamily family);\r\n    public static ValueTask<IPHostEntry> GetHostEntryAsync(string hostNameOrAddress, AddressFamily family, CancellationToken cancellationToken = default);\r\n}\r\n```","Url":"https://github.com/dotnet/corefx/issues/42004","RelatedDescription":"Open issue \"Add address family specific name resolution to Dns\" (#42004)"},{"Id":"510823302","IsPullRequest":true,"CreatedAt":"2019-10-22T20:41:57","Actor":"AaronRobinsonMSFT","Number":"41997","RawContent":null,"Title":"Expose SuppressGCTransitionAttribute","State":"closed","Body":"See https://github.com/dotnet/corefx/issues/40740\r\n\r\n/cc @stephentoub \r\n","Url":"https://github.com/dotnet/corefx/pull/41997","RelatedDescription":"Closed or merged PR \"Expose SuppressGCTransitionAttribute\" (#41997)"},{"Id":"510865641","IsPullRequest":false,"CreatedAt":"2019-10-22T19:40:09","Actor":"JamesNK","Number":"42003","RawContent":null,"Title":"Include adding/removing generic variance keywords to breaking changes doc","State":"open","Body":"https://github.com/dotnet/corefx/blob/master/Documentation/coding-guidelines/breaking-change-rules.md\r\n\r\nIt would be good to include whether [adding/removing generic variance keywords to interfaces](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/covariance-contravariance/variance-in-generic-interfaces) are breaking changes or not.\r\n\r\nI'm pretty sure that adding them is not a breaking change, and removing them is a breaking change. It would be good to have that documented somewhere for all.","Url":"https://github.com/dotnet/corefx/issues/42003","RelatedDescription":"Open issue \"Include adding/removing generic variance keywords to breaking changes doc\" (#42003)"},{"Id":"510803965","IsPullRequest":true,"CreatedAt":"2019-10-22T19:31:43","Actor":"Dotnet-GitSync-Bot","Number":"41994","RawContent":null,"Title":"Mirror changes from dotnet/corert,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @adamsitnik @jkotas @filipnavara @tannergooding","Url":"https://github.com/dotnet/corefx/pull/41994","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert,coreclr\" (#41994)"},{"Id":"510848555","IsPullRequest":true,"CreatedAt":"2019-10-22T19:06:27","Actor":"ViktorHofer","Number":"42002","RawContent":null,"Title":"Revert license renaming","State":"closed","Body":"This is the follow-up fix of https://github.com/dotnet/corefx/commit/23f5ecd6a1231d286257d9cc2efda549efed949b. Updating the remaining places.","Url":"https://github.com/dotnet/corefx/pull/42002","RelatedDescription":"Closed or merged PR \"Revert license renaming\" (#42002)"},{"Id":"510847668","IsPullRequest":false,"CreatedAt":"2019-10-22T19:01:55","Actor":"xsoheilalizadeh","Number":"42001","RawContent":null,"Title":"Equivalent of DefaultContractResolver in System.Text.Json","State":"open","Body":"I used to [`DefaultContractResolver`](https://www.newtonsoft.com/json/help/html/ContractResolver.htm) in Json.NET for ignoring empty collections and sometimes for change json values. Currently I switched to System.Text.Json and haven't any idea about how to implement equivalent process in new JSON APIs. Also tried `JsonConverter` but it doesn't act as `DefaultContractResolver`. \r\n\r\n_In this case ignoring empty collections_\r\n\r\n```c#\r\npublic class IgnoreEmptyCollectionsContract : DefaultContractResolver\r\n{\r\n    protected override JsonProperty CreateProperty(MemberInfo member, MemberSerialization memberSerialization)\r\n    {\r\n        var property = base.CreateProperty(member, memberSerialization);\r\n\r\n        if (property.PropertyType.GetInterface(nameof(ICollection)) != null)\r\n        {\r\n            property.ShouldSerialize = o =>\r\n            {\r\n                var value = o?.GetType().GetProperty(property.PropertyName)?.GetValue(o) as ICollection;\r\n\r\n                if (value == null)\r\n                {\r\n                    return false;\r\n                }\r\n                \r\n                return value.Count > 0;\r\n            };\r\n        }\r\n\r\n        return property;\r\n    }\r\n}\r\n\r\n```","Url":"https://github.com/dotnet/corefx/issues/42001","RelatedDescription":"Open issue \"Equivalent of DefaultContractResolver in System.Text.Json\" (#42001)"},{"Id":"510845714","IsPullRequest":true,"CreatedAt":"2019-10-22T18:59:07","Actor":"ViktorHofer","Number":"42000","RawContent":null,"Title":"Rename LICENSE to LICENSE.TXT","State":"closed","Body":"We have hardlinks in our packages and need to revert this change.","Url":"https://github.com/dotnet/corefx/pull/42000","RelatedDescription":"Closed or merged PR \"Rename LICENSE to LICENSE.TXT\" (#42000)"},{"Id":"510838732","IsPullRequest":false,"CreatedAt":"2019-10-22T18:44:22","Actor":"stephentoub","Number":"41999","RawContent":null,"Title":"Add back netfx test run in System.IO.FileSystem","State":"open","Body":"Per https://github.com/dotnet/corefx/pull/41452#issuecomment-544650139\r\n\r\nIf instead we decide to close this issue, please delete the netfx-specific tests added in the above PR.","Url":"https://github.com/dotnet/corefx/issues/41999","RelatedDescription":"Open issue \"Add back netfx test run in System.IO.FileSystem\" (#41999)"},{"Id":"510819574","IsPullRequest":false,"CreatedAt":"2019-10-22T18:05:48","Actor":"Pilchie","Number":"41996","RawContent":null,"Title":".NET Core 2.2 SslPolicyErrors: RemoteCertificateChainErrors","State":"open","Body":"_From @rezvanf on Tuesday, October 15, 2019 3:00:55 PM_\r\n\r\n### If you believe you have an issue that affects the security of the platform please do NOT create an issue and instead email your issue details to secure@microsoft.com. Your report may be eligible for our [bug bounty](https://technet.microsoft.com/en-us/mt764065.aspx) but ONLY if it is reported through email.\r\n\r\n### Describe the bug\r\nWhen making a httpclient call from 1 asp .net Core 2.2 API to another asp .net  2.2  API on 2 different hosts on linux (Red Hat Enterprise Linux Server 7.7 (Maipo)), an error of sslpolicyerrors.: remotecertificatechainerrors occur.\r\n\r\nBoth asp .net core apis are running under https with a PFX and \"pwd\".\r\n\r\nThe PFX has been created from a crt (pem format)\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\nSample httpclient code below\r\n\r\nvar handler = new HttpClientHandler();\r\nvar cert2 = new X509Certificate2(pfxLocation, \"pwd\");\r\nhandler.ClientCertificates.Add(cert2);\r\nhandler.ClientCertificateOptions = ClientCertificateOption.Manual;\r\n\r\nvar httpClient = new HttpClient(handler);\r\n\r\nIn the ServerCertificateCustomValidationCallback method i get the following\r\n\r\nThis is the value of sslErrors\r\nsslErrors = RemoteCertificateChainErrors\"\r\n\r\nThis is the value of chain\r\nchainStatus.Status  =PartialChain\r\nchainStatus.StatusInformation = unable to get local issuer certificate\r\n\r\n\r\n### Expected behavior\r\nA clear and concise description of what you expected to happen.\r\ncall to https end point with no errors\r\n\r\nif I do a curl to the api2 endpoint from the host with api1 with the --cacert flag and the file for the crt (pem format) i get a valid response,\r\n\r\nIf i exclude the --cacert i get the warning the site is insecure which makes sense\r\n\r\n\r\n### Screenshots\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n### Additional context\r\nAdd any other context about the problem here.\r\nInclude the output of `dotnet --info`\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-rc1-014190\r\n Commit:    c4d43f672d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.15063\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-rc1-014190\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-rc1-19456-20\r\n  Commit:  8f5d7b1ba4\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-rc1.19457.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-rc1-19456-20 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-rc1-19456-20 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\n_Copied from original issue: aspnet/Extensions#2514_","Url":"https://github.com/dotnet/corefx/issues/41996","RelatedDescription":"Open issue \".NET Core 2.2 SslPolicyErrors: RemoteCertificateChainErrors\" (#41996)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"511056729","IsPullRequest":true,"CreatedAt":"2019-10-23T03:58:25","Actor":"dibarbet","Number":"39457","RawContent":null,"Title":"Refactor task center progress reporting","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/39457","RelatedDescription":"Open PR \"Refactor task center progress reporting\" (#39457)"},{"Id":"510996631","IsPullRequest":true,"CreatedAt":"2019-10-23T03:18:59","Actor":"uniqueiniquity","Number":"39455","RawContent":null,"Title":"Handle intellicode star in display text prefix","State":"closed","Body":"Currently, commit-if-unique does not work in TypeScript and JavaScript files.\r\nThis is because TypeScript adds the IntelliCode star to completion items in the display text prefix and therefore they are not currently deduplicated from the perspective of the ItemManager.\r\nHere, we update the implementation of `IsPreferredItem` to handle this case.\r\n\r\nNote that we do not need to update the override for VSCompletionItems because there's no equivalent prefix field (also, I'm not convinced that that override is even used, but I'm not sure enough to remove it).","Url":"https://github.com/dotnet/roslyn/pull/39455","RelatedDescription":"Closed or merged PR \"Handle intellicode star in display text prefix\" (#39455)"},{"Id":"511008757","IsPullRequest":true,"CreatedAt":"2019-10-23T00:57:32","Actor":"tmat","Number":"39456","RawContent":null,"Title":"Add external access shims for TypeScript editor features layer.","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/39456","RelatedDescription":"Open PR \"Add external access shims for TypeScript editor features layer.\" (#39456)"},{"Id":"510994620","IsPullRequest":true,"CreatedAt":"2019-10-23T00:03:56","Actor":"dotnet-bot","Number":"39454","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"open","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39454","RelatedDescription":"Open PR \"Merge master to features/local-function-attributes\" (#39454)"},{"Id":"510994591","IsPullRequest":true,"CreatedAt":"2019-10-23T00:03:50","Actor":"dotnet-bot","Number":"39453","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39453","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#39453)"},{"Id":"510994116","IsPullRequest":true,"CreatedAt":"2019-10-23T00:02:19","Actor":"dotnet-bot","Number":"39452","RawContent":null,"Title":"Merge master to release/dev16.5-preview1","State":"open","Body":"\nThis is an automatically generated pull request from master into release/dev16.5-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-release/dev16.5-preview1\ngit reset --hard upstream/release/dev16.5-preview1\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-release/dev16.5-preview1 --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39452","RelatedDescription":"Open PR \"Merge master to release/dev16.5-preview1\" (#39452)"},{"Id":"510993615","IsPullRequest":true,"CreatedAt":"2019-10-23T00:00:44","Actor":"chsienki","Number":"39451","RawContent":null,"Title":"Fix for control flow graph when combining using declarations with labels","State":"open","Body":"This fixes an issue in CFG where we incorrectly handle using declarations that fall under labels. It follows a similar pattern to how we handle lowering in the local re-writer.","Url":"https://github.com/dotnet/roslyn/pull/39451","RelatedDescription":"Open PR \"Fix for control flow graph when combining using declarations with labels\" (#39451)"},{"Id":"510986139","IsPullRequest":true,"CreatedAt":"2019-10-22T23:34:29","Actor":"mavasani","Number":"39450","RawContent":null,"Title":"Enable logging of informational telemetry for analyzers/fixers/refact…","State":"open","Body":"…orings executed during Ctrl + .\r\n\r\nIf user enables informational RoslynEventSource telemetry following the steps at https://aka.ms/reportPerf, we log the execution times for each analyzer/fixer/refactorings when computing the code fixes and refactorings to show in the light bulb. This will help us identify slow analyzers/fixers/refactorings that lead to UI delays with \"Gathering suggestions\" dialog.","Url":"https://github.com/dotnet/roslyn/pull/39450","RelatedDescription":"Open PR \"Enable logging of informational telemetry for analyzers/fixers/refact…\" (#39450)"},{"Id":"510350463","IsPullRequest":true,"CreatedAt":"2019-10-22T22:54:09","Actor":"jcouv","Number":"39436","RawContent":null,"Title":"Async-streams: Call AsyncIteratorMethodBuilder.Complete","State":"closed","Body":"Fixes https://github.com/dotnet/roslyn/issues/39321\r\n\r\nWe need to call `AsyncIteratorMethodBuilder.Complete` to dispose of some resources it holds. We can do that when bringing the state machine to a finalized state (`-2`), that is when we'd call `AsyncTaskMethodBuilder.SetResult` in a plain async method.\r\nBut a completed instance cannot be re-used, so we also need to reset it in `GetAsyncEnumerator`.\r\n\r\nFor more context, here's the code we [currently produce](https://sharplab.io/#v2:D4AQTAjAsAUCAMACEEAsBuWDkQKyZiwGZkxEBhRAb1kTuRJAA5EBJAQQGcBPAOwGMAorwCuAWwCmAJwCGAIwA2EgDwBLXgBcAfIgCyACgCU1WvTMgAnMgBsAOgCaqiQoAmRgmfMQIyAOyJ4D3oAX1hgoA===).\r\n\r\nHere's a sample showing an overview of the change:\r\n\r\n``` csharp\r\n\tprivate sealed class <M>d__0 : IAsyncEnumerable<int>, IAsyncEnumerator<int>, IAsyncDisposable, IValueTaskSource<bool>, IValueTaskSource, IAsyncStateMachine\r\n\t{\r\n\t\tpublic int <>1__state;\r\n\t\tpublic AsyncIteratorMethodBuilder <>t__builder;\r\n\t\tpublic ManualResetValueTaskSourceCore<bool> <>v__promiseOfValueOrEnd;\r\n\t\tprivate int <>2__current;\r\n\t\tprivate bool <>w__disposeMode;\r\n\t\tprivate int <>l__initialThreadId;\r\n\t\tprivate TaskAwaiter <>u__1;\r\n\r\n\t\t[DebuggerHidden]\r\n\t\tpublic <M>d__0(int <>1__state)\r\n\t\t{\r\n\t\t\tthis.<>1__state = <>1__state;\r\n\t\t\t<>l__initialThreadId = Environment.CurrentManagedThreadId;\r\n                        <>t__builder = AsyncIteratorMethodBuilder.Create();\r\n\t\t}\r\n\r\n\t\tprivate void MoveNext()\r\n\t\t{\r\n\t\t\tint num = <>1__state;\r\n\t\t\ttry\r\n\t\t\t{\r\n                            ...\r\n\t\t\t}\r\n\t\t\tcatch (Exception exception)\r\n\t\t\t{\r\n\t\t\t\t<>1__state = -2;\r\n\t\t\t\t<>v__promiseOfValueOrEnd.SetException(exception);\r\n\t\t\t\t<>t__builder.Complete(); // added\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t<>1__state = -2;\r\n\t\t\t<>v__promiseOfValueOrEnd.SetResult(result: false);\r\n\t\t\t<>t__builder.Complete(); // added\r\n\t\t\treturn;\r\n\t\t\tIL_011f:\r\n\t\t\t<>v__promiseOfValueOrEnd.SetResult(result: true);\r\n\t\t}\r\n\r\n\t\t[DebuggerHidden]\r\n\t\tIAsyncEnumerator<int> IAsyncEnumerable<int>.GetAsyncEnumerator(CancellationToken token)\r\n\t\t{\r\n\t\t\tif (<>1__state == -2 && <>l__initialThreadId == Environment.CurrentManagedThreadId)\r\n\t\t\t{\r\n\t\t\t\t<>1__state = -3;\r\n\t\t\t\t<>t__builder = AsyncIteratorMethodBuilder.Create(); // added\r\n\t\t\t\t<>w__disposeMode = false;\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\treturn new <M>d__0(-3);\r\n\t\t}\r\n\r\n            ...\r\n\t}\r\n```","Url":"https://github.com/dotnet/roslyn/pull/39436","RelatedDescription":"Closed or merged PR \"Async-streams: Call AsyncIteratorMethodBuilder.Complete\" (#39436)"},{"Id":"510941419","IsPullRequest":true,"CreatedAt":"2019-10-22T21:50:45","Actor":"RikkiGibson","Number":"39449","RawContent":null,"Title":"Nullable annotate TypeCompilationState and MessageID","State":"open","Body":"Bringing some annotation-only changes from my feature branch into master. /cc @jaredpar","Url":"https://github.com/dotnet/roslyn/pull/39449","RelatedDescription":"Open PR \"Nullable annotate TypeCompilationState and MessageID\" (#39449)"},{"Id":"510791877","IsPullRequest":true,"CreatedAt":"2019-10-22T21:06:42","Actor":"dotnet-bot","Number":"39441","RawContent":null,"Title":"Merge master to release/dev16.5-preview1","State":"closed","Body":"\nThis is an automatically generated pull request from master into release/dev16.5-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-release/dev16.5-preview1\ngit reset --hard upstream/release/dev16.5-preview1\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-release/dev16.5-preview1 --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39441","RelatedDescription":"Closed or merged PR \"Merge master to release/dev16.5-preview1\" (#39441)"},{"Id":"510792639","IsPullRequest":true,"CreatedAt":"2019-10-22T21:06:26","Actor":"dotnet-bot","Number":"39442","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39442","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#39442)"},{"Id":"510904117","IsPullRequest":true,"CreatedAt":"2019-10-22T20:51:01","Actor":"daytonellwanger","Number":"39448","RawContent":null,"Title":"Live Share - Support Empty Workspace","State":"open","Body":"Recently Live Share added the ability to share an empty workspace. In this case, `session.ListRootsAsync` will return an empty array. This adds checks for that scenario. Previously, Roslyn would throw an index out of range error. This also requires updates to other sections of the code that assume a non-null `_externalPath` and `_remoteRootPath`. Note that there's more work to be done to update these values once a workspace is opened. This fix will avoid an exception, but no files will be added to the remote workspace.","Url":"https://github.com/dotnet/roslyn/pull/39448","RelatedDescription":"Open PR \"Live Share - Support Empty Workspace\" (#39448)"},{"Id":"510340188","IsPullRequest":true,"CreatedAt":"2019-10-22T20:27:28","Actor":"333fred","Number":"39432","RawContent":null,"Title":"Semantic model assert","State":"closed","Body":"Fixed invalid assert in `GetRemappedSymbols` for `AttributeSemanticModel`s. Since attribute models don't have a root symbol, we can't perform any symbol remapping in that context. Additionally updated the IDE test with the current baseline. @dotnet/roslyn-compiler @ryzngard for review.\r\nFixes https://github.com/dotnet/roslyn/issues/39427.","Url":"https://github.com/dotnet/roslyn/pull/39432","RelatedDescription":"Closed or merged PR \"Semantic model assert\" (#39432)"},{"Id":"510885183","IsPullRequest":false,"CreatedAt":"2019-10-22T20:20:08","Actor":"mikadumont","Number":"39447","RawContent":null,"Title":"Detecting and fixing violations of naming rules","State":"open","Body":"Have a naming convention detection feature that offers to modify symbol names to match the others around them. \r\n\r\n**Steps to reproduce**:\r\n1. Highlight the detected violations as warnings in the editor. \r\n2. Press Ctrl+. or Alt+Enter to trigger the Quick Actions and Refactorings menu. \r\n3. Have an option to `Detect Inconsistent Naming`\r\n4. Have another fly out menu to `Find similar issues in file/solution`. \r\n5. All naming style violations will be displayed in a results window (similar to Find All References window). \r\n6. You can double click the detected violations and navigate to the code of the corresponding symbols. ","Url":"https://github.com/dotnet/roslyn/issues/39447","RelatedDescription":"Open issue \"Detecting and fixing violations of naming rules\" (#39447)"},{"Id":"510881555","IsPullRequest":false,"CreatedAt":"2019-10-22T20:13:22","Actor":"Cosifne","Number":"39446","RawContent":null,"Title":"To have a better pattern to remove the OOP and Servicehub related IVT types","State":"open","Body":"Currently, we don't have a good pattern to give extern access when it comes to some classes related to OOP and ServiceHub related types.\r\n\r\nExample:\r\nInternal repos may have classes derives from the [ServiceHubServiceBase](https://github.com/dotnet/roslyn/blob/master/src/Workspaces/Remote/ServiceHub/Shared/ServiceHubServiceBase.cs)\r\n\r\nThen it becomes troublesome, because this class can't be exposed via Interface and Wrapper types either they need to create their own ServiceHubBase. ([Example](https://github.com/Cosifne/testimpact/blob/dev/shech/SBDIVTRemove/src/Shared/ServiceHubBase/RolsynServiceHubBase.cs)) or move all the implementation to Roslyn\r\n\r\nProblem of first approach:\r\nBecause PinnedSolutionInfo is internal, and session [classes ](https://github.com/dotnet/roslyn/blob/master/src/Workspaces/Core/Portable/Remote/RemoteHostSessionHelpers.cs)in Roslyn like KeepLiveSession will some time pass PinnedSolutionInfo to the target ([Example](https://github.com/dotnet/roslyn/blob/0a497dde742a8aa9e7fe5457eba4109b737b3a1e/src/Workspaces/Core/Portable/Remote/RemoteHostSessionHelpers.cs#L194)). Then the host has to accept object type parameter. And to make things worse, RPC will just pass the JObject as the type at runtime, then we need to manually deal with the deserilization ([Example](https://github.com/Cosifne/roslyn/blob/shech/SBDIVTCleanUp/src/Workspaces/Remote/ServiceHub/ExternalAccess/UnitTesting/Api/UnitTestingPinnedSolutionInfoWrapper.cs)\r\n\r\nProblem of the second approach:\r\nThe servicehub host class may reference other type in other repo, and since there is no MEF on OOP side. Then other team may need to move more and more classes to Roslyn. ([Example](https://github.com/dotnet/testimpact/blob/53f45b513a433629f14fb56fa3bfd472251db1a9/src/SourceBasedTestDiscovery/SourceBasedTestDiscovery/SourceLocation/OOP/RemoteTestSourceLocationLookupService.cs#L24))","Url":"https://github.com/dotnet/roslyn/issues/39446","RelatedDescription":"Open issue \"To have a better pattern to remove the OOP and Servicehub related IVT types\" (#39446)"},{"Id":"510860200","IsPullRequest":false,"CreatedAt":"2019-10-22T19:28:30","Actor":"jeffhube","Number":"39445","RawContent":null,"Title":"Incorrect CS8169 nullability warning when using Select() without lambda","State":"open","Body":"**Version Used**: \r\nSDK 3.0.100 / Runtime 3.0.0\r\n\r\n**Steps to Reproduce**:\r\n\r\nBuild the following code with nullable enabled.\r\n\r\n```\r\nusing System.Collections.Generic;\r\nusing System.IO;\r\nusing System.Linq;\r\n\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        string[] paths = new [] { \"a\", \"b\", \"c\" };\r\n\r\n        // OK\r\n        IEnumerable<string> x1 = paths.Select(x => Path.GetFileNameWithoutExtension(x));\r\n\r\n        // CS8619\r\n        IEnumerable<string> x2 = paths.Select(Path.GetFileNameWithoutExtension);\r\n    }\r\n}\r\n```\r\n\r\nOutput:\r\n```\r\nProgram.cs(15,34): warning CS8619: Nullability of reference types in value of type 'IEnumerable<string?>' doesn't match target type 'IEnumerable<string>'.\r\n```\r\n\r\n**Expected Behavior**:\r\nThe assignment to `x2` does not cause a CS8619 warning.\r\n\r\n**Actual Behavior**:\r\nThe assignment to `x2` causes a CS8619 warning.","Url":"https://github.com/dotnet/roslyn/issues/39445","RelatedDescription":"Open issue \"Incorrect CS8169 nullability warning when using Select() without lambda\" (#39445)"},{"Id":"510810608","IsPullRequest":true,"CreatedAt":"2019-10-22T17:48:32","Actor":"jcouv","Number":"39444","RawContent":null,"Title":"Document `-nullable:annotations` option","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/39444","RelatedDescription":"Open PR \"Document `-nullable:annotations` option\" (#39444)"},{"Id":"510793244","IsPullRequest":false,"CreatedAt":"2019-10-22T17:14:07","Actor":"jmolinelli","Number":"39443","RawContent":null,"Title":"IDE0068 False Positive","State":"open","Body":"**Version Used**: \r\nVS19 Community\r\n**Steps to Reproduce**:\r\nCode example:\r\n if (this.TryOpenReader(sourceName, out TextReader reader))\r\n            {\r\n                using (reader)\r\n                {\r\n                var m = new Model();\r\n                Importer.Import(m, reader);\r\n                return m;\r\n                }\r\n            }\r\n\r\nwhere the TryOpenReader retruns true if it is successful in opening a reader, false otherwise.\r\n\r\n\r\n**Expected Behavior**:\r\nWould NOT expect to get an IDE0068 message.\r\n**Actual Behavior**:\r\nGet an IDE0068 Message on the out variable. Tried a couple of approaches, but none seem to clear it.","Url":"https://github.com/dotnet/roslyn/issues/39443","RelatedDescription":"Open issue \"IDE0068 False Positive\" (#39443)"},{"Id":"510771337","IsPullRequest":false,"CreatedAt":"2019-10-22T16:30:52","Actor":"mikadumont","Number":"39440","RawContent":null,"Title":"Fly out menus trigger too fast and get in the way of primary menus. ","State":"open","Body":"Then menu rows are small, and the fly outs trigger too fast on hover, which often ends up triggering sub menus that then hide the original menu. \r\n","Url":"https://github.com/dotnet/roslyn/issues/39440","RelatedDescription":"Open issue \"Fly out menus trigger too fast and get in the way of primary menus. \" (#39440)"},{"Id":"510439206","IsPullRequest":false,"CreatedAt":"2019-10-22T05:38:01","Actor":"davkean","Number":"39439","RawContent":null,"Title":"AbstractUseNullPropagationCodeFixProvider crashed with InvalidCastException","State":"open","Body":"**Version Used**: \r\nVersion 16.4.0 Preview 3.0 [29421.117.master]\r\n\r\n**Steps to Reproduce**:\r\n\r\nThis was a fix all in a very large code base, so I'm unsure of what code is causing it to crash:\r\n```\r\nSystem.InvalidCastException : Unable to cast object of type 'Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax' to type 'Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax'.\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpSyntaxFactsService.GetPartsOfConditionalExpression(SyntaxNode node,SyntaxNode& condition,SyntaxNode& whenTrue,SyntaxNode& whenFalse)\r\n   at async Microsoft.CodeAnalysis.UseNullPropagation.AbstractUseNullPropagationCodeFixProvider`8.FixAllAsync[TSyntaxKind,TExpressionSyntax,TConditionalExpressionSyntax,TBinaryExpressionSyntax,TInvocationExpression,TMemberAccessExpression,TConditionalAccessExpression,TElementAccessExpression](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeFixes.SyntaxEditorBasedCodeFixProvider.FixAllWithEditorAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeFixes.SyntaxEditorBasedCodeFixProvider.SyntaxEditorBasedFixAllProvider.FixDocumentAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeFixes.SyntaxEditorBasedCodeFixProvider.SyntaxEditorBasedFixAllProvider.GetFixAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeFixes.SyntaxEditorBasedCodeFixProvider.SyntaxEditorBasedFixAllProvider.GetFixAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.FixAllGetFixesService.GetFixAllCodeActionAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.FixAllGetFixesService.GetFixAllOperationsAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeActions.CodeAction.GetOperationsCoreAsync(<Unknown Parameters>)\r\n   at Roslyn.Utilities.TaskExtensions.WaitAndGetResult_CanCallOnBackground[T](Task`1 task,CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.InvokeWorker(Func`1 getFromDocument,IProgressTracker progressTracker,CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.<>c__DisplayClass20_0.<InvokeCore>b__0()\r\n   at Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.PerformAction(IExtensionManager extensionManager,Object extension,Action action)\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n```\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/39439","RelatedDescription":"Open issue \"AbstractUseNullPropagationCodeFixProvider crashed with InvalidCastException\" (#39439)"},{"Id":"510370405","IsPullRequest":true,"CreatedAt":"2019-10-22T00:39:57","Actor":"dibarbet","Number":"39438","RawContent":null,"Title":"Lock resettable delay to prevent concurrent access.","State":"open","Body":"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/994068\r\n\r\nPossible reason. ->\r\nWe get two simultaneous entrances into ProgressUpdated, one from sln crawler (1), one from [completion of previous ProgressUpdated](http://sourceroslyn.io/#Microsoft.VisualStudio.LanguageServices/Implementation/Diagnostics/DiagnosticProgressReporter.cs,150) (2)\r\n\r\nAt this point in time, the delay is null (b/c of (2)).  So they both hit the [construction of a new resettabledelay](http://sourceroslyn.io/#Microsoft.VisualStudio.LanguageServices/Implementation/Diagnostics/DiagnosticProgressReporter.cs,146).  Both append the continuation to their delay, but only one get stored in the field, let's say that (2) is in the field.\r\n\r\n(Might be optional step) A third event comes in, [resetting the delay of the stored delay](http://sourceroslyn.io/#Microsoft.VisualStudio.LanguageServices/Implementation/Diagnostics/DiagnosticProgressReporter.cs,142), (2).\r\n\r\nEventually the unstored delay (1) completes resetting the field to null.\r\nA fourth ProgressUpdated event comes in, sees null, tries to create a new delay.  Immediately after the constructor is hit, the previously stored delay (2) completes and sets the delay to null -> null prt exception.\r\n\r\n@jasonmalinowski now that I'm writing this down this is the scenario I can think of - does it sound right?","Url":"https://github.com/dotnet/roslyn/pull/39438","RelatedDescription":"Open PR \"Lock resettable delay to prevent concurrent access.\" (#39438)"},{"Id":"510369969","IsPullRequest":false,"CreatedAt":"2019-10-22T00:37:43","Actor":"davkean","Number":"39437","RawContent":null,"Title":"Code fixes never shows up if you navigate to it and the file has never been open before","State":"open","Body":"This is 100% repro and has occurred up on stage presenting the fixes.\r\n\r\n**Visual Studio Version**:\r\nVersion 16.4.0 Preview 3.0 [29421.117.master]\r\n\r\n**Summary**:\r\n\r\n**Steps to Reproduce**:\r\n\r\nMake sure Full Solution Analysis is turned on.\r\n\r\n1. `git clone https://github.com/davkean/audio-switcher`\r\n2. `cd audio-switcher`\r\n3. `git checkout 9d8fa8d1d1dde083abc6d813617df05b088d88f1`\r\n4. `src\\AudioSwitcher.sln`\r\n5. Open Error List and wait for \"Use pattern matching\" analysis message to appear\r\n6. Double-click it to navigate to source code\r\n7. Drop lightbulb\r\n\r\n**Expected Behavior**:\r\n![image](https://user-images.githubusercontent.com/1103906/67252753-0f5a8700-f4c0-11e9-9b60-449a59ebd03e.png)\r\n\r\n**Actual Behavior**:\r\n![image](https://user-images.githubusercontent.com/1103906/67252740-079ae280-f4c0-11e9-9e4f-abfbc36604b8.png)","Url":"https://github.com/dotnet/roslyn/issues/39437","RelatedDescription":"Open issue \"Code fixes never shows up if you navigate to it and the file has never been open before\" (#39437)"},{"Id":"510337689","IsPullRequest":true,"CreatedAt":"2019-10-22T00:19:52","Actor":"KirillOsenkov","Number":"39431","RawContent":null,"Title":"Link to http://sourceroslyn.io","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/39431","RelatedDescription":"Closed or merged PR \"Link to http://sourceroslyn.io\" (#39431)"},{"Id":"510345082","IsPullRequest":false,"CreatedAt":"2019-10-21T23:10:04","Actor":"vsfeedback","Number":"39435","RawContent":null,"Title":"Incorrect editor behavior during Rename Refactor","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/784737/incorrect-editor-behavior-during-rename-refactor.html)._\n\n---\n<ol><li>In a C# project, initiate a rename refactor on an identifier having more than one character.</li><li>Press Shift+Left Arrow to select one or more characters, but not all of them.</li><li>Type some characters.</li></ol><p>RESULT: The selected characters are deleted, but the typed characters appear at the beginning of the identifier.</p><p>EXPECT: The typed characters to overwrite the selected characters.</p>\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 10/20/2019, 07:41 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 10/21/2019, 10:11 AM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39435","RelatedDescription":"Open issue \"Incorrect editor behavior during Rename Refactor\" (#39435)"},{"Id":"510344060","IsPullRequest":false,"CreatedAt":"2019-10-21T23:07:25","Actor":"vsfeedback","Number":"39434","RawContent":null,"Title":"Autogeneration of interface implementation for IDiaStackWalkHelper is confused by indexed getter","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/784552/autogeneration-of-interface-implementation-for-idi.html)._\n\n---\nAfter importing the DIA com type library in my C# project, I try to implement the IDiaStackWalkHelper interface. Using the automatic inteface implementation skeleton generation command results in an incorrect implementation of the `get_registerValue` method.\n\nThe generated skeleton thinks that `registerValue` is a normal property, when it is not. It's a named indexer, which isn't supported in C# and must be implemented as a pair of regular methods.\n\nThis error is instantly detected by intelisense who points out that the members aren't implemented.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 10/21/2019, 03:00 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39434","RelatedDescription":"Open issue \"Autogeneration of interface implementation for IDiaStackWalkHelper is confused by indexed getter\" (#39434)"},{"Id":"510333830","IsPullRequest":false,"CreatedAt":"2019-10-21T23:05:46","Actor":"vsfeedback","Number":"39430","RawContent":null,"Title":"IDE0054 and IDE0063 triggered when NOT using C#8","State":"closed","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/752720/ide0054-and-ide0063-triggered-when-not-using-c8.html)._\n\n---\nProblem since upgrading to VS Community 2019 16.3.\n\n.Net Framework projects only support C#7.3, but various C#8 hints are triggered which lead to code changes that look valid in the IDE but do not compile (&quot;language feature XXX is not availabel in C#7.3&quot;). \n\nI can prevent this by manually disabling the rules in a .ruleset file, but it would be better to disbale rules automatically that target a higher version.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 9/28/2019, 07:27 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 9/30/2019, 00:25 AM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n#### Tom Austin on 10/15/2019, 02:43 AM: \n\n<p>Is there anymore info on this? It's still an issue.</p>\n\n#### sean on 10/17/2019, 00:48 PM: \n\n<p>I am using VS Professional 16.3.5 and am experiencing this issue.</p><p>I am using a type that implements `IDisposable`.</p><p>My csproj is an SDK style project.</p><p>It has `&lt;LangVersion&gt;latest&lt;/LangVersion&gt;` and `&lt;TargetFramework&gt;net472&lt;/TargetFramework&gt;`, so it is not a .NET Core project.</p><p><br>Do I have to explicitly set `&lt;LangVersion&gt;7.3&lt;/LangVersion&gt;` to not get the `IDE0063` recommendation?</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39430","RelatedDescription":"Closed issue \"IDE0054 and IDE0063 triggered when NOT using C#8\" (#39430)"},{"Id":"510342758","IsPullRequest":false,"CreatedAt":"2019-10-21T23:03:08","Actor":"vsfeedback","Number":"39433","RawContent":null,"Title":"weird indentation for tuple literal ending with lambda csharp","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/784678/weird-indentation-for-tuple-literal-ending-with-la.html)._\r\n\r\n---\r\nIf I write a lambda in a tuple and type a semicolon after the tuple or ask Visual Studio to fix indentation for the file, it adds a newline between the lambda’s closing curly brace and the tuple’s closing parenthesis. This seems odd. I would expect a newline between the opening parenthesis and first value in the tuple if this were considered the desired style. However, I don’t think it is the desired style for tuples.\r\n\r\nI generally expect the styling of tuple parens to be the same as function argument list parens.\r\n\r\nBefore typing the semicolon:\r\n```csharp\r\nvar plan = new List<(int count, Action<int> action)>();\r\nplan.Add((2, i =>\r\n{\r\n    Console.WriteLine($\"Action (execution {i})\");\r\n}))\r\n```\r\n\r\n\r\nAfter typing the semicolon after the tuple.:\r\n```csharp\r\nvar plan = new List<(int count, Action<int> action)>();\r\nplan.Add((2, i =>\r\n{\r\n    Console.WriteLine($\"Action (execution {i})\");\r\n}\r\n));\r\n```\r\n\r\nExpected:\r\n```csharp\r\nvar plan = new List<(int count, Action<int> action)>();\r\nplan.Add((2, i =>\r\n{\r\n    Console.WriteLine($\"Action (execution {i})\");\r\n}));\r\n```\r\n\r\n---\r\n### Original Comments\r\n\r\n#### Visual Studio Feedback System on 10/21/2019, 02:48 AM: \r\n\r\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\r\n\r\n\r\n---\r\n### Original Solutions\r\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39433","RelatedDescription":"Open issue \"weird indentation for tuple literal ending with lambda csharp\" (#39433)"},{"Id":"510327421","IsPullRequest":false,"CreatedAt":"2019-10-21T22:21:55","Actor":"vsfeedback","Number":"39429","RawContent":null,"Title":"When pasting json into a comment in C# code, an error is shown","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/773139/when-pasting-json-into-a-comment-in-c-code-an-erro.html)._\n\n---\nThis just happened to me, here is what I did:\n\n1: Create a comment section in some C# code, using /* and */\n2: Within the comment section, paste some json\n3: Watch it show an yellow error bar at the top with the following exception:\n\nStreamJsonRpc.RemoteMethodNotFoundException : Unable to find method 'SynchronizeTextAsync/3' on {no object} for the following reasons: An argument was not supplied for a required parameter.\n   at async StreamJsonRpc.JsonRpc.InvokeCoreAsync[TResult](&lt;Unknown Parameters&gt;)\n   at async Microsoft.VisualStudio.LanguageServices.Remote.JsonRpcEx.InvokeAsync(&lt;Unknown Parameters&gt;)\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 10/12/2019, 00:03 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39429","RelatedDescription":"Open issue \"When pasting json into a comment in C# code, an error is shown\" (#39429)"},{"Id":"510326102","IsPullRequest":true,"CreatedAt":"2019-10-21T22:18:57","Actor":"ryzngard","Number":"39428","RawContent":null,"Title":"Change inline rename dialog to be more uniquely identifiable","State":"open","Body":"Change the AutomationId of Inline Rename to be uniquely identifiable. This is to aid screen readers who need to work specifically around the behavior of inline rename, which has an unfriendly focus model for screen readers. ","Url":"https://github.com/dotnet/roslyn/pull/39428","RelatedDescription":"Open PR \"Change inline rename dialog to be more uniquely identifiable\" (#39428)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"510975732","IsPullRequest":true,"CreatedAt":"2019-10-22T23:00:53","Actor":"Dotnet-GitSync-Bot","Number":"7837","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"open","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7837","RelatedDescription":"Open PR \"Mirror changes from dotnet/corefx\" (#7837)"},{"Id":"510948047","IsPullRequest":true,"CreatedAt":"2019-10-22T22:07:19","Actor":"Dotnet-GitSync-Bot","Number":"7836","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @AaronRobinsonMSFT","Url":"https://github.com/dotnet/corert/pull/7836","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7836)"},{"Id":"510804057","IsPullRequest":true,"CreatedAt":"2019-10-22T18:41:16","Actor":"Dotnet-GitSync-Bot","Number":"7834","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @adamsitnik @jkotas @filipnavara @tannergooding","Url":"https://github.com/dotnet/corert/pull/7834","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7834)"},{"Id":"510815389","IsPullRequest":false,"CreatedAt":"2019-10-22T17:57:39","Actor":"tiandian","Number":"7835","RawContent":null,"Title":"Is it possible to provide a tool to scan a c# project(and .net dll) to list all codes that are not compatible with corert?","State":"open","Body":"For my asp.net core c# project, it's a bit complicated, and it references some third party dlls, after spend some time, i fixing some problems, now it can build with corert, but when run, it will error.\r\n\r\nI don't know how many potential problems in my project are incompatible with corert.\r\n\r\nSo if you can provide a tool to scan my c# project, and list all codes that incompatible with corert, then i can modify all these codes before release it, otherwise, even if it can run now, there will still be potential errors.\r\n\r\nIf after fix all my c# project's incompatible problem, it still run error, then i know it must be some third party dlls are incompatible with corert, then i can disassembly the dll one by one to c# codes and scan it to find which one incompatible with corert, then submit a request to the dll's owner to compatible with corert. \r\n\r\nThanks.","Url":"https://github.com/dotnet/corert/issues/7835","RelatedDescription":"Open issue \"Is it possible to provide a tool to scan a c# project(and .net dll) to list all codes that are not compatible with corert?\" (#7835)"},{"Id":"509929616","IsPullRequest":false,"CreatedAt":"2019-10-22T05:20:51","Actor":"DardoTheMaster","Number":"7832","RawContent":null,"Title":"Unable to compile on Ubuntu 18.04 (WSL)","State":"closed","Body":"Hello, i'm just trying out to build a shared library from a dotnet project.\r\nUnfortunately i'm getting this error and i'm unable to build the underlined project.\r\n\r\n```\r\n$ dotnet publish /p:NativeLib=Shared -r linux-x64\r\nMicrosoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj : warning NU1603: NativeLibrary depends on Microsoft.DotNet.ILCompiler (>= 1.0.0-alpha-27527-01) but Microsoft.DotNet.ILCompiler 1.0.0-alpha-27527-01 was not found. An approximate best match of Microsoft.DotNet.ILCompiler 1.0.0-alpha-27606-05 was resolved.\r\n  Restore completed in 63.25 ms for /mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj.\r\n/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj : warning NU1603: NativeLibrary depends on Microsoft.DotNet.ILCompiler (>= 1.0.0-alpha-27527-01) but Microsoft.DotNet.ILCompiler 1.0.0-alpha-27527-01 was not found. An approximate best match of Microsoft.DotNet.ILCompiler 1.0.0-alpha-27606-05 was resolved.\r\n  NativeLibrary -> /mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/bin/Debug/netcoreapp3.0/linux-x64/NativeLibrary.dll\r\n  /usr/bin/clang-6.0\r\n  Generating native code\r\nclang : warning : argument unused during compilation: '-exported_symbols_list obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.exports' [-Wunused-command-line-argument] [/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj]\r\n  /usr/bin/ld: obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.o: relocation R_X86_64_PC32 against symbol `System_Console_System_Text_StringOrCharArray____GetFieldHelper' can not be used when making a shared object; recompile with -fPIC\r\n  /usr/bin/ld: final link failed: Bad value\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj]\r\n/home/dardo/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/build/Microsoft.NETCore.Native.targets(337,5): error MSB3073: The command \"clang-6.0 \"obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.o\" -o \"bin/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.so\" -exported_symbols_list \"obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.exports\" /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libbootstrapperdll.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libRuntime.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libSystem.Private.CoreLib.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libSystem.Private.TypeLoader.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Globalization.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.IO.Compression.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Net.Security.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Security.Cryptography.Native.OpenSsl.a -g -Wl,-rpath,'$ORIGIN' -Wl,--as-needed -pthread -lstdc++ -ldl -lm -lz -lgssapi_krb5 -lrt -shared\" exited with code 1. [/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj]\r\ndardo@LAPTOP-TQ8D057I:/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary$\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7832","RelatedDescription":"Closed issue \"Unable to compile on Ubuntu 18.04 (WSL)\" (#7832)"},{"Id":"510326059","IsPullRequest":true,"CreatedAt":"2019-10-22T02:26:35","Actor":"Dotnet-GitSync-Bot","Number":"7833","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @eriawan @danmosemsft @AaronRobinsonMSFT @stephentoub @GrabYourPitchforks @delmyers @benaadams @tannergooding","Url":"https://github.com/dotnet/corert/pull/7833","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7833)"},{"Id":"509511071","IsPullRequest":true,"CreatedAt":"2019-10-20T14:04:45","Actor":"MichalStrehovsky","Number":"7830","RawContent":null,"Title":"Add AppContext switch to not throw for Type.Name","State":"closed","Body":"Makes simple WinForms apps work in reflection-free mode without crashing.\r\n\r\nhttps://github.com/dotnet/winforms/blob/5df2ebfe70f2eaa2733c7f21e7e9e20f0be7e766/src/System.Windows.Forms/src/System/Windows/Forms/Control.cs#L4013","Url":"https://github.com/dotnet/corert/pull/7830","RelatedDescription":"Closed or merged PR \"Add AppContext switch to not throw for Type.Name\" (#7830)"},{"Id":"509511141","IsPullRequest":true,"CreatedAt":"2019-10-20T14:04:12","Actor":"MichalStrehovsky","Number":"7831","RawContent":null,"Title":"Scan for Marshal.SizeOf in reflection-disabled mode","State":"closed","Body":"I tacked scanning for `Marshal.SizeOf(typeof(SomeType))` on the reflection method body scanner. It felt a bit dirty, but it worked and we no longer had to worry about not having interop marshalling data for these types at runtime if we saw the pattern at compile time.\r\n\r\nBut we would like to scan for this even in the reflection disabled mode, which makes this whole business a bit messier.\r\n\r\nWe'll probably want to plug this into the RyuJIT scanner at some point, but we'll need to think about scanning some more (whether scanning is just an optimization, or whether scanning is needed for correctness, how/whether would RyuJIT report parameters, etc.).","Url":"https://github.com/dotnet/corert/pull/7831","RelatedDescription":"Closed or merged PR \"Scan for Marshal.SizeOf in reflection-disabled mode\" (#7831)"},{"Id":"509445042","IsPullRequest":true,"CreatedAt":"2019-10-20T02:03:38","Actor":"filipnavara","Number":"7828","RawContent":null,"Title":"Move portable thread pool to shared partition","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7828","RelatedDescription":"Closed or merged PR \"Move portable thread pool to shared partition\" (#7828)"},{"Id":"509508420","IsPullRequest":false,"CreatedAt":"2019-10-19T20:52:49","Actor":"jkotas","Number":"7829","RawContent":null,"Title":"Compilation crashes with System.IndexOutOfRangeException","State":"open","Body":"```\r\n  Unhandled Exception: System.IndexOutOfRangeException: Index was outside the bounds of the array.\r\n     at Internal.IL.Stubs.ILStubMethodIL.GetObject(Int32 token) in F:\\workspace\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\IL\\Stubs\\ILEmitter.cs:line 550\r\n     at Internal.IL.ILStackHelper.ComputeMaxStack(MethodIL methodIL) in F:\\workspace\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\IL\\ILStackHelper.cs:line 290\r\n     at Internal.IL.Stubs.ILStubMethodIL.get_MaxStack() in F:\\workspace\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\IL\\Stubs\\ILEmitter.cs:line 527\r\n     at Internal.JitInterface.CorInfoImpl.Get_CORINFO_METHOD_INFO(MethodDesc method, MethodIL methodIL, CORINFO_METHOD_INFO* methodInfo) in F:\\workspace\\_work\\1\\s\\src\\JitInterface\\src\\CorInfoImpl.cs:line 413\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL) in F:\\workspace\\_work\\1\\s\\src\\JitInterface\\src\\CorInfoImpl.cs:line 154\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode) in F:\\workspace\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\Compiler\\RyuJitCompilation.cs:line 139\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```","Url":"https://github.com/dotnet/corert/issues/7829","RelatedDescription":"Open issue \"Compilation crashes with System.IndexOutOfRangeException\" (#7829)"},{"Id":"508346108","IsPullRequest":true,"CreatedAt":"2019-10-17T18:57:35","Actor":"filipnavara","Number":"7825","RawContent":null,"Title":"Clean up portable thread pool for nullability and comment warnings","State":"closed","Body":"Also, use `EventWaitHandle.Set` instead of `WaitSubsystem.SetEvent`/`Interop.Kernel32.SetEvent` to make it easier to port.","Url":"https://github.com/dotnet/corert/pull/7825","RelatedDescription":"Closed or merged PR \"Clean up portable thread pool for nullability and comment warnings\" (#7825)"},{"Id":"508509256","IsPullRequest":false,"CreatedAt":"2019-10-17T14:18:24","Actor":"Const-me","Number":"7827","RawContent":null,"Title":"ARM32 Debug Info","State":"open","Body":"Unless ILC debug output is disabled in .csproj, CoreRT’s ilc program fails to compile stuff.\r\n\r\n[This assert fails.](https://github.com/dotnet/corert/blob/master/src/Native/ObjWriter/debugInfo/dwarf/dwarfGen.cpp#L436)\r\n\r\nI’ve added a bit more info and found out it’s VLT_FPSTK.\r\n\r\nUsing Debian 9.5, tried dotnet-sdk-2.1.802 and dotnet-sdk-2.2.402, same result.\r\n\r\nSteps to reproduce:\r\n\r\n`dotnet new console`\r\n\r\nPatch project file as [described there](https://github.com/dotnet/corert/blob/master/Documentation/how-to-build-and-run-ilcompiler-in-console-shell-prompt.md#compiling-source-to-native-code-using-the-ilcompiler-you-built) and also add `<DisableUnsupportedError>true</DisableUnsupportedError>`\r\n\r\nRun `dotnet publish --configuration Release --runtime linux-arm`\r\n\r\nNative stack at the time of failed assert. Stops at first managed frame ‘coz gdb can’t debug .NET, at least not by default.\r\n\r\n```\r\n#6  0xa352510c in EmitVarLocation(llvm::MCObjectStreamer*, ICorDebugInfo::NativeVarInfo const&, bool)\r\n#7  0xa3525ab2 in VarInfo::DumpLocsIfNeeded(llvm::MCObjectStreamer*, llvm::MCSection*, llvm::MCExpr const*)\r\n#8  0xa35260be in SubprogramInfo::DumpDebugLoc(llvm::MCObjectStreamer*, llvm::MCSection*)\r\n#9  0xa3525e3c in SubprogramInfo::Dump(UserDefinedDwarfTypesBuilder*, llvm::MCObjectStreamer*, llvm::MCSection*, llvm::MCSection*, llvm::MCSection*)\r\n#10 0xa3526b36 in DwarfGen::Finish()\r\n#11 0xa3501804 in ObjectWriter::EmitDebugModuleInfo()\r\n#12 0xa34fd5f0 in EmitDebugModuleInfo\r\ngdb can’t debug .net so the stack trace stops there.\r\n#13 0xa7bbe1ac in ?? ()\r\nBacktrace stopped: previous frame identical to this frame (corrupt stack?)\r\n```\r\n\r\nStrangely enough, comments in ObjectWriter.EmitObject method, there\r\nhttps://github.com/dotnet/corert/blob/8153381fb8f3cf0ef627011fe2fe87fb4a857540/src/ILCompiler.Compiler/src/Compiler/DependencyAnalysis/ObjectWriter.cs#L1044\r\nand a few other things\r\nhttps://github.com/dotnet/corert/blob/8153381fb8f3cf0ef627011fe2fe87fb4a857540/src/ILCompiler.Compiler/src/Compiler/DependencyAnalysis/ObjectWriter.cs#L1094-L1095\r\nsuggest that code was running on ARM32 at some point.\r\n\r\nIs something wrong on my side? If it’s just not supported, how easy it is to support?","Url":"https://github.com/dotnet/corert/issues/7827","RelatedDescription":"Open issue \"ARM32 Debug Info\" (#7827)"},{"Id":"508505637","IsPullRequest":false,"CreatedAt":"2019-10-17T14:13:06","Actor":"Const-me","Number":"7826","RawContent":null,"Title":"ARM32 crash at startup due to misalignment","State":"open","Body":"Here’s output from gdb:\r\n```\r\nThread 1 \"MyApp\" received signal SIGBUS, Bus error.\r\nRhpLockCmpXchg64 () at /home/linaro/corert/src/Native/Runtime/arm/Interlocked.S:47\r\n47                cmp          r6, r4\r\n(gdb) bt\r\n#0  RhpLockCmpXchg64 () at /home/linaro/corert/src/Native/Runtime/arm/Interlocked.S:47\r\n#1  0x0049c5ee in S_P_CoreLib_System_IO_UnmanagedMemoryStream__get_PositionPointer ()\r\n```\r\ngdb probably has off by 1 bug, I think it’s the [previous instruction](https://github.com/dotnet/corert/blob/master/src/Native/Runtime/arm/Interlocked.S#L46) which crashed the app.\r\n\r\nThe failing line of C# code is probably this https://github.com/dotnet/corefx/blob/master/src/Common/src/CoreLib/System/IO/UnmanagedMemoryStream.cs#L329 but I’m not 100% sure, as there’s no debug information in the binary due to another CoreRT ARM32 bug.\r\n\r\nI wasn’t able to make minimal repro, when I wrote a class with a long field, Interlocked.Read(ref long) returned the value without crashing. Probably clang optimizes away.\r\n\r\nAny idea how to fix or workaround?","Url":"https://github.com/dotnet/corert/issues/7826","RelatedDescription":"Open issue \"ARM32 crash at startup due to misalignment\" (#7826)"},{"Id":"506685516","IsPullRequest":false,"CreatedAt":"2019-10-14T20:24:48","Actor":"imback82","Number":"7824","RawContent":null,"Title":"Debugger.Launch() on macOS","State":"closed","Body":"Is `Debugger.Launch()` supported on macOS? I tested on macOS 10.15 with .NET Core 3.0.100 and it doesn't appear to work.\r\n\r\nIf it is not supported, is there a plan to support?\r\n\r\nThanks!\r\n\r\ncc: @rapoth\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7824","RelatedDescription":"Closed issue \"Debugger.Launch() on macOS\" (#7824)"},{"Id":"506047436","IsPullRequest":true,"CreatedAt":"2019-10-12T15:06:11","Actor":"Dotnet-GitSync-Bot","Number":"7823","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @EgorBo","Url":"https://github.com/dotnet/corert/pull/7823","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7823)"},{"Id":"505621245","IsPullRequest":true,"CreatedAt":"2019-10-11T08:45:30","Actor":"Dotnet-GitSync-Bot","Number":"7822","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7822","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7822)"},{"Id":"504527034","IsPullRequest":true,"CreatedAt":"2019-10-09T12:42:07","Actor":"MichalStrehovsky","Number":"7821","RawContent":null,"Title":"Delete unused method","State":"closed","Body":"Supplements #7819.","Url":"https://github.com/dotnet/corert/pull/7821","RelatedDescription":"Closed or merged PR \"Delete unused method\" (#7821)"},{"Id":"504357120","IsPullRequest":true,"CreatedAt":"2019-10-09T09:28:10","Actor":"Dotnet-GitSync-Bot","Number":"7820","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @EgorBo","Url":"https://github.com/dotnet/corert/pull/7820","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7820)"},{"Id":"504158790","IsPullRequest":true,"CreatedAt":"2019-10-09T09:27:34","Actor":"am11","Number":"7818","RawContent":null,"Title":"Fix exit code of build-native.sh","State":"closed","Body":"I noticed it in the docker container, that the failed build was successfully committing the container (false positive).","Url":"https://github.com/dotnet/corert/pull/7818","RelatedDescription":"Closed or merged PR \"Fix exit code of build-native.sh\" (#7818)"},{"Id":"504330608","IsPullRequest":true,"CreatedAt":"2019-10-09T01:16:45","Actor":"Dotnet-GitSync-Bot","Number":"7819","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @CoffeeFlux","Url":"https://github.com/dotnet/corert/pull/7819","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7819)"},{"Id":"503784732","IsPullRequest":false,"CreatedAt":"2019-10-08T02:17:07","Actor":"ZacharyJia","Number":"7817","RawContent":null,"Title":"Call generated dll from cpp crash","State":"open","Body":"I use a dll generated by corert in a cpp program, but it crashed when any statement runs.\r\nI'm using the `.net core 3.0` and the ilcompiler version is `1.0.0-alpha-28207-01`\r\n\r\nThe call stack is:\r\n```\r\ngenet.net.exe!S_P_CoreLib_System_Threading_LockHolder__Hold()\r\ngenet.net.exe!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner_Cctor__GetCctor()\r\ngenet.net.exe!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__EnsureClassConstructorRun()\r\ngenet.net.exe!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__CheckStaticClassConstructionReturnGCStaticBase()\r\ngenet.net.exe!S_P_CoreLib_System_Text_Encoding__get_UTF8()\r\ngenet.net.exe!S_P_CoreLib_Internal_Runtime_CompilerHelpers_InteropHelpers__GetModuleName()genet.net.exe!S_P_CoreLib_Internal_Runtime_CompilerHelpers_InteropHelpers__FixupModuleCell()\r\ngenet.net.exe!S_P_CoreLib_Internal_Runtime_CompilerHelpers_InteropHelpers__ResolvePInvokeSlow()\r\ngenet.net.exe!S_P_CoreLib_Internal_Runtime_CompilerHelpers_InteropHelpers__ResolvePInvoke()\r\ngenet.net.exe!genet_net_genet_net_Program__LoadLibrary()\r\ngenet.net.exe!genet_net_genet_net_Program__show()\r\ndlldemo-cpp.exe!main()  line 17\tC++\r\n```\r\n\r\nThe crash message is:\r\n```\r\n0x00007FF9C9416408 (genet.net.exe)处(位于 dlldemo-cpp.exe 中)引发的异常: 0xC0000005: 读取位置 0x0000000000000000 时发生访问冲突。\r\n```","Url":"https://github.com/dotnet/corert/issues/7817","RelatedDescription":"Open issue \"Call generated dll from cpp crash\" (#7817)"},{"Id":"503304688","IsPullRequest":false,"CreatedAt":"2019-10-07T08:30:51","Actor":"yunekit","Number":"7816","RawContent":null,"Title":"sched_yield infinite loop","State":"open","Body":"The sched_yield()==0 infinite loop occurred during the running of the application, causing the process to block and fail to work.","Url":"https://github.com/dotnet/corert/issues/7816","RelatedDescription":"Open issue \"sched_yield infinite loop\" (#7816)"},{"Id":"503145779","IsPullRequest":true,"CreatedAt":"2019-10-06T21:09:25","Actor":"Dotnet-GitSync-Bot","Number":"7815","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7815","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7815)"},{"Id":"503134823","IsPullRequest":true,"CreatedAt":"2019-10-06T19:30:50","Actor":"MichalStrehovsky","Number":"7814","RawContent":null,"Title":"Add support for multithreaded compilation to ILC","State":"closed","Body":"Improves native compilation throughput by about 33%.\r\n\r\nValidated that the output with multithreading enabled (the new default) is byte-by-byte identical with the output produced by `--singlethreaded` (new command line option to ILC that disables multithreading).\r\n\r\nWe still can do a lot more in terms of compilation throughput (virtual method resolution is really slow and runs in one of the single threaded phases, and the object writing phase is pretty slow too and is fully single threaded too).\r\n\r\nContributes to #3925 (what's left is the extra-credit stuff).","Url":"https://github.com/dotnet/corert/pull/7814","RelatedDescription":"Closed or merged PR \"Add support for multithreaded compilation to ILC\" (#7814)"},{"Id":"502963591","IsPullRequest":true,"CreatedAt":"2019-10-06T04:53:29","Actor":"MichalStrehovsky","Number":"7811","RawContent":null,"Title":"Port fixes from CoreCLR","State":"closed","Body":"Skipping dotnet/coreclr#26792 and dotnet/coreclr#26793.","Url":"https://github.com/dotnet/corert/pull/7811","RelatedDescription":"Closed or merged PR \"Port fixes from CoreCLR\" (#7811)"},{"Id":"502974204","IsPullRequest":true,"CreatedAt":"2019-10-05T16:06:41","Actor":"MichalStrehovsky","Number":"7812","RawContent":null,"Title":"Remove global state tracking in DynamicInvokeTemplateDataNode","State":"closed","Body":"DynamicInvokeTemplateDataNode populated _methodToTemplateIndex in `GetIdForMethod` which is pretty bad from multithreading perspective (non-concurrent dictionary + ID that depends on ordering).\r\n\r\nI've moved this tracking into a separate node so that this is more explicit and properly sortable.","Url":"https://github.com/dotnet/corert/pull/7812","RelatedDescription":"Closed or merged PR \"Remove global state tracking in DynamicInvokeTemplateDataNode\" (#7812)"},{"Id":"502974267","IsPullRequest":true,"CreatedAt":"2019-10-05T16:04:50","Actor":"MichalStrehovsky","Number":"7813","RawContent":null,"Title":"Cache helpers used in IL scanner","State":"closed","Body":"We have a cache for these in CorInfoImpl (when compiling), but there's no cache in the scanner. This means we're re-resolving various named helpers in CoreLib. It's a bit of a waste of CPU time. Noticed this when running the compiler under a profiler.","Url":"https://github.com/dotnet/corert/pull/7813","RelatedDescription":"Closed or merged PR \"Cache helpers used in IL scanner\" (#7813)"},{"Id":"502935521","IsPullRequest":true,"CreatedAt":"2019-10-05T12:47:51","Actor":"MichalStrehovsky","Number":"7810","RawContent":null,"Title":"Update ObjWriter","State":"closed","Body":"Picks up #7802.","Url":"https://github.com/dotnet/corert/pull/7810","RelatedDescription":"Closed or merged PR \"Update ObjWriter\" (#7810)"},{"Id":"502780858","IsPullRequest":true,"CreatedAt":"2019-10-05T06:01:27","Actor":"Dotnet-GitSync-Bot","Number":"7809","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @idlerboris @stephentoub","Url":"https://github.com/dotnet/corert/pull/7809","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7809)"},{"Id":"502527358","IsPullRequest":false,"CreatedAt":"2019-10-04T12:27:49","Actor":"kstreichergb","Number":"7808","RawContent":null,"Title":"dotnet.exe hangs during shutdown","State":"closed","Body":"A hosted application using `BackgroundService` is hanging infinetly on shutdown, in particular when the console application is killed with ctrl+z.\r\n\r\nThe \"finish\" log in the finally in Main will be seen, but the dotnet.exe process keeps running\r\n\r\n```\r\npublic class BaseBackgroundService: BackgroundService{\r\n  private readonly IHostLifetime _hostLifetime;\r\n  private readonly IHostApplicationLifetime _iHostApplicationLifetime;\r\n  \r\n  public BaseBackgroundService(IHostLifetime hostLifetime,\r\n\t\t                             IHostApplicationLifetime iHostApplicationLifetime){\r\n    _hostLifetime = hostLifetime;\r\n    _iHostApplicationLifetime = iHostApplicationLifetime;\r\n }\r\n\r\n  protected override async Task ExecuteAsync(CancellationToken ct)\r\n  {\r\n  try{\r\n        await DoSomething();\r\n  }catch(OperationCanceledException ex)\r\n{\r\n /** ... Reached on CTRL+Z .... **/\r\n}\r\nfinally{\r\n       _iHostApplicationLifetime.StopApplication();\r\n        await _hostLifetime.StopAsync(ct); // clean exit\r\n  \tConsole.WriteLine(\"Completes as expected\");    \r\n  }\r\n/*...*/\r\n}\r\n\r\n```\r\n\tProgram.cs \r\n\tpublic static async Task Main(string[] args){\r\n\ttry\r\n\t{\r\n\t\tIHostBuilder hostBuilder = CreateHostBuilder(args);\r\n\r\n\t\tusing (IHost host = hostBuilder.UseConsoleLifetime().Build())\r\n\t\t{\r\n\t\t\tawait host.RunAsync();\r\n\t\t}\r\n\t}\r\n\t}finally{\r\n\t\tConsole.WriteLine(\"Finished - will be seen. Therefore main exits, but dotnet.exe keeps running\");\r\n\t}\r\n\t}\r\n```\r\n\r\nThe hosted BackgroundService will finish (OperationCanceledException) but the host.RunAsync() will never finish.\r\n\r\nUsing visual and break all\r\n\r\n![image](https://user-images.githubusercontent.com/50991928/66196903-9ecb0200-e699-11e9-812f-d3773be75aa4.png)\r\n\r\nAnd repeating it shows the Task ID changes, but the structure remains the same\r\n\r\n![image](https://user-images.githubusercontent.com/50991928/66197013-cf12a080-e699-11e9-8529-6ee9df7266ee.png)","Url":"https://github.com/dotnet/corert/issues/7808","RelatedDescription":"Closed issue \"dotnet.exe hangs during shutdown\" (#7808)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"511050667","IsPullRequest":false,"CreatedAt":"2019-10-23T03:36:12","Actor":"wli3","Number":"3776","RawContent":null,"Title":"Catch AppHostMachOFormatException in SDK","State":"open","Body":"corresponding to dotnet/core-setup#8543 ","Url":"https://github.com/dotnet/sdk/issues/3776","RelatedDescription":"Open issue \"Catch AppHostMachOFormatException in SDK\" (#3776)"},{"Id":"510995291","IsPullRequest":false,"CreatedAt":"2019-10-23T00:06:28","Actor":"ryanbrandenburg","Number":"3775","RawContent":null,"Title":"SDK does not handle folders with escaped special characters","State":"open","Body":"### How to reproduce\r\n1. `mkdir mvc%2b; cd mvc%2b; dotnet new mvc`\r\n3. `dotnet new sln`\r\n4. `dotnet sln add mvc%2b/mvc.csproj`\r\n5. `dotnet build`\r\n\r\nThis results in `C:\\Program Files\\dotnet\\sdk\\3.0.100\\NuGet.targets(268,5): error MSB3202: The project file \"~\\projects\\mvc+\\mvc.csproj\" was not found. [~\\projects\\projects.sln]`\r\n\r\nIt seems like somewhere along the way something is trying to decode the URL, and the result is that it can't find the given file.\r\n\r\nIs the answer here possibly that we just don't support the use of special characters in the folder/file structure at all?\r\n\r\nThis is a spin-off of https://github.com/aspnet/AspNetCore/issues/14501","Url":"https://github.com/dotnet/sdk/issues/3775","RelatedDescription":"Open issue \"SDK does not handle folders with escaped special characters\" (#3775)"},{"Id":"510994903","IsPullRequest":true,"CreatedAt":"2019-10-23T00:05:01","Actor":"dotnet-bot","Number":"3774","RawContent":null,"Title":"Merge release/3.1.1xx to master","State":"open","Body":"\nThis is an automatically generated pull request from release/3.1.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.1.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.1.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.1.1xx-to-master --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3774","RelatedDescription":"Open PR \"Merge release/3.1.1xx to master\" (#3774)"},{"Id":"510968530","IsPullRequest":false,"CreatedAt":"2019-10-22T22:40:39","Actor":"wli3","Number":"3773","RawContent":null,"Title":"Port remove signature on MAC host to 2.x SDK","State":"open","Body":"https://github.com/dotnet/core-setup/pull/8543#event-2725838361\r\n\r\nget it in January train","Url":"https://github.com/dotnet/sdk/issues/3773","RelatedDescription":"Open issue \"Port remove signature on MAC host to 2.x SDK\" (#3773)"},{"Id":"510905227","IsPullRequest":true,"CreatedAt":"2019-10-22T20:52:34","Actor":"dotnet-maestro[bot]","Number":"3772","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from nuget/nuget.client","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a8f6ab0e-8160-45b8-5027-08d727dabd66)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Build**: 5.4.0.6271\r\n- **Date Produced**: 10/19/2019 4:24 AM\r\n- **Commit**: c1f6915918b82c096bbd666bd9c18528f1f70630\r\n- **Branch**: refs/heads/dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.4.0-preview.3.6271\r\n\r\n[marker]: <> (End:a8f6ab0e-8160-45b8-5027-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3772","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from nuget/nuget.client\" (#3772)"},{"Id":"510810751","IsPullRequest":true,"CreatedAt":"2019-10-22T17:48:44","Actor":"sfoslund","Number":"3771","RawContent":null,"Title":"Fix .pp content files copy to output issue","State":"open","Body":"Addressing Issue #3719\r\n\r\nAdding test/ fix to ensure .pp content files in a package marked copy to output are properly copied into the output directory. ","Url":"https://github.com/dotnet/sdk/pull/3771","RelatedDescription":"Open PR \"Fix .pp content files copy to output issue\" (#3771)"},{"Id":"510688659","IsPullRequest":false,"CreatedAt":"2019-10-22T17:44:24","Actor":"RobBowman","Number":"3769","RawContent":null,"Title":"The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized","State":"closed","Body":"I have VS2019 v16.3.5 installed along with the dotnet core 3 sdk. I can browse to _C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App_ and see lots of the versions of the shared framework in folders from 2.1.9 to 3.0.0\r\n\r\n- create new console app\r\n- edit project file to add:\r\n```\r\n  <ItemGroup>\r\n    <FrameworkReference Include=\"Microsoft.AspNetCore.App\" />\r\n  </ItemGroup>\r\n```\r\n\r\nAll is good :)\r\n\r\nChange target framework to 2.2\r\n\r\nAll is bad :( \r\n\r\nI get the build error: _The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized_\r\n\r\nShould it be possible to target 2.2 and still use the shared framework Microsoft.AspNetCore.App?\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3769","RelatedDescription":"Closed issue \"The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized\" (#3769)"},{"Id":"510746012","IsPullRequest":false,"CreatedAt":"2019-10-22T15:44:56","Actor":"ForNeVeR","Number":"3770","RawContent":null,"Title":"Error about System.Core when building a WPF app for .NET 4.5.2 with System.ValueTuple","State":"open","Body":"It looks like .NET 4.5.2 applications now cannot use `System.ValueTuple` package if they build with the new Windows Desktop SDK. Steps to reproduce:\r\n\r\n1. Install .NET Core 3.0 SDK (see the version info below)\r\n2. Create a new WPF app: `dotnet new wpf`\r\n3. Change the target framework to .NET 4.5.2, add the `System.ValueTuple` package to your `.csproj`:\r\n\r\n   ```xml\r\n   <Project Sdk=\"Microsoft.NET.Sdk.WindowsDesktop\">\r\n     <PropertyGroup>\r\n       <OutputType>WinExe</OutputType>\r\n       <TargetFramework>net452</TargetFramework>\r\n       <UseWPF>true</UseWPF>\r\n     </PropertyGroup>\r\n       <ItemGroup>\r\n         <PackageReference Include=\"System.ValueTuple\" Version=\"4.5.0\" />\r\n       </ItemGroup>\r\n   </Project>\r\n   ```\r\n4. Now, build the project:\r\n   ```console\r\n   $ dotnet build\r\n   Microsoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\n   Copyright (C) Microsoft Corporation. All rights reserved.\r\n   \r\n     Restore completed in 165,43 ms for T:\\Temp\\newproj2\\newproj2.csproj.\r\n   C:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk.WindowsDesktop\\targets\\Microsoft.WinFX.targets(243,9): error MC1000: Unknown build error, 'Could not find assembly 'System.Core, Version=2.0.5.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e'. Either explicitly load this assembly using a method such as LoadFromAssemblyPath() or use a MetadataAssemblyResolver that returns a valid assembly.'  [T:\\Temp\\newproj2\\newproj2.csproj]\r\n   ```\r\n\r\n.NET Version info:\r\n\r\n```console\r\n$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n```","Url":"https://github.com/dotnet/sdk/issues/3770","RelatedDescription":"Open issue \"Error about System.Core when building a WPF app for .NET 4.5.2 with System.ValueTuple\" (#3770)"},{"Id":"510344503","IsPullRequest":false,"CreatedAt":"2019-10-21T23:08:32","Actor":"wli3","Number":"3768","RawContent":null,"Title":"Cannot build on ubuntu 18.04","State":"open","Body":"Should disable downloading 1.x runtime on later distros","Url":"https://github.com/dotnet/sdk/issues/3768","RelatedDescription":"Open issue \"Cannot build on ubuntu 18.04\" (#3768)"},{"Id":"509239619","IsPullRequest":false,"CreatedAt":"2019-10-21T21:17:54","Actor":"pinkfloydx33","Number":"3765","RawContent":null,"Title":"PublishSingleFile=true does not include Content files","State":"closed","Body":"I am working with a (non-web) .NET Core 3.0 console application and I am trying to use `PublishSingleFile=true`. While the single-file aspect does indeed work (I get one executable file), my application always crashes due to missing appsettings.json files. I've tried setting the files to Content/None, Copy Always/Newest. I also tried adding `<CopyToPublishDirectory>true</CopyToPublishDirectory>` and yet nothing seems to work.\r\n\r\nIf I create a brand new fresh _Web_-SDK project, the single file publish works and the content files are dropped right next to the published executable. I tried comparing the starter web project to my console application and I don't see a difference.  \r\n\r\nThe easiest reproduction I have is to create a blank console application project, add a text file to the project (as content or `none`) and then publish with the PublishSingleFile=true. The output does not contain the content files. \r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <RuntimeIdentifier>win-x64</RuntimeIdentifier>\r\n    <PublishSingleFile>true</PublishSingleFile>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Content Include=\"MyContentFile.txt\">\r\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory>\r\n      <CopyToPublishDirectory>Always</CopyToPublishDirectory>\r\n    </Content>\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIs this supposed to work for non-Web projects?\r\n\r\n> .NET Core SDK (reflecting any global.json):\r\n>  Version:   3.0.100\r\n>  Commit:    04339c3a26\r\n> \r\n> Runtime Environment:\r\n>  OS Name:     Windows\r\n>  OS Version:  10.0.18362\r\n>  OS Platform: Windows\r\n>  RID:         win10-x64\r\n>  Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n> \r\n> Host (useful for support):\r\n>   Version: 3.0.0\r\n>   Commit:  95a0a61858\r\n> \r\n> .NET Core SDKs installed:\r\n>   3.0.100-rc1-014190 [C:\\Program Files\\dotnet\\sdk]\r\n>   3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n> \r\n> .NET Core runtimes installed:\r\n>   Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n>   Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n>   Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]","Url":"https://github.com/dotnet/sdk/issues/3765","RelatedDescription":"Closed issue \"PublishSingleFile=true does not include Content files\" (#3765)"},{"Id":"508725481","IsPullRequest":false,"CreatedAt":"2019-10-20T16:55:20","Actor":"pranavkm","Number":"3762","RawContent":null,"Title":"The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized","State":"closed","Body":"_From @DataTables on Thursday, October 17, 2019 10:16:11 AM_\r\n\r\n### Describe the bug\r\n\r\nWhen adding .NET Core 3.0 to a multi-targeted project I'm getting the error:\r\n\r\n> error NETSDK1073: The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized\r\n\r\nI've followed the [porting guide here](https://docs.microsoft.com/en-us/aspnet/core/migration/22-to-30?view=aspnetcore-2.2&tabs=visual-studio) but have been unable to resolve the issue. It looks like this also also been raised in [other issues](https://github.com/aspnet/AspNetCore/issues/4490), but the indications there are that this was an issue during the previews and should now be resolved.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1) Clone into [this repo](https://github.com/DataTables/Editor-NET) which is the one I'm trying to add .NET Core 3.0 build support to.\r\n2) Update the DataTables-Editor-Server.csproj file to target .NET Core 3.0:\r\n\r\n```\r\n<TargetFrameworks>netcoreapp2.1;netcoreapp3.0;net45;net46;net47</TargetFrameworks>\r\n```\r\n\r\nand add:\r\n\r\n```\r\n  <ItemGroup Condition=\"'$(TargetFramework)' == 'netcoreapp3.0'\">\r\n    <FrameworkReference Include=\"Microsoft.AspNetCore.App\" />\r\n    <PackageReference Include=\"Microsoft.CSharp\">\r\n      <Version>4.6.0</Version>\r\n    </PackageReference>\r\n  </ItemGroup>\r\n```\r\n\r\n3) Run `msbuild DataTables.sln` - observe errors for .NET Core 3.0 build.\r\n\r\nThe [documentation here](https://docs.microsoft.com/en-gb/dotnet/core/tools/csproj#implicit-package-references) notes that `Microsoft.AspNetCore.App\"` is implicit and doesn't need to be included, but the migration guide says it should if the SDK is `Microsoft.NET.Sdk` which I've been using.\r\n\r\n### Expected behavior\r\ndll targeting .NET Core 3.0 will be build along with the others.\r\n\r\n### Additional context\r\n\r\n```\r\n$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     fedora\r\n OS Version:  27\r\n OS Platform: Linux\r\n RID:         fedora.27-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  95a0a61858\r\n\r\n.NET Core SDKs installed:\r\n  2.1.505 [/usr/share/dotnet/sdk]\r\n  3.0.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nInstallation for .NET Core (and Framework via mono) build in Fedora was:\r\n\r\n```\r\nsudo rpm --import https://packages.microsoft.com/keys/microsoft.asc\r\nwget -q https://packages.microsoft.com/config/fedora/27/prod.repo\r\nsudo mv prod.repo /etc/yum.repos.d/microsoft-prod.repo\r\nsudo chown root:root /etc/yum.repos.d/microsoft-prod.repo\r\n\r\nsudo dnf install -y aspnetcore-runtime-2.1\r\nsudo dnf install -y dotnet-sdk-2.1-2.1.505\r\n\r\nsudo dnf install -y aspnetcore-runtime-3.0\r\nsudo dnf install -y dotnet-sdk-3.0\r\n\r\n# .NET Framework via Mono\r\nsudo rpm --import \"https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF\"\r\nsudo curl https://download.mono-project.com/repo/centos7-stable.repo | sudo tee /etc/yum.repos.d/mono-centos7-stable.repo\r\nsudo dnf install -y mono-devel mono-complete xsp msbuild\r\n```\r\n\r\n\r\n_Copied from original issue: aspnet/AspNetCore#15107_","Url":"https://github.com/dotnet/sdk/issues/3762","RelatedDescription":"Closed issue \"The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized\" (#3762)"},{"Id":"509441010","IsPullRequest":true,"CreatedAt":"2019-10-19T12:04:57","Actor":"dotnet-bot","Number":"3767","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3767","RelatedDescription":"Open PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#3767)"},{"Id":"507542154","IsPullRequest":true,"CreatedAt":"2019-10-19T00:38:48","Actor":"dotnet-bot","Number":"3755","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3755","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#3755)"},{"Id":"508065740","IsPullRequest":true,"CreatedAt":"2019-10-19T00:33:49","Actor":"swaroop-sridhar","Number":"3759","RawContent":null,"Title":"Add TFM check for `Publish-Trimmed-ReadyToRun-SingleFile`","State":"closed","Body":"Trying to publish a `.net core 2.1` app as a single file fails with the `PlaceHolderNotFoundInAppHostException` generated by the `HostWriter`.\r\n\r\nPublishing apps as a single file is only supported in `.net core 3` and higher.\r\nSo, this change adds a version check in the SDK.\r\n\r\nSimilarly, the check is also added for the `PublishReadyToRun` and `PublishTrimmed` options.\r\n\r\nFixes https://github.com/dotnet/sdk/issues/3728","Url":"https://github.com/dotnet/sdk/pull/3759","RelatedDescription":"Closed or merged PR \"Add TFM check for `Publish-Trimmed-ReadyToRun-SingleFile`\" (#3759)"},{"Id":"509364106","IsPullRequest":true,"CreatedAt":"2019-10-19T00:32:13","Actor":"swaroop-sridhar","Number":"3766","RawContent":null,"Title":"[release/3.1.1xx] Add TFM check for `Publish-Trimmed-ReadyToRun-SingleFile`","State":"open","Body":"The options `PublishSingleFile`, `PublishReadyToRun`, and `PublishTrimmed` are only supported when targetting netcoreapp3.0 or later.\r\n\r\nTrying to publish to a different target (say `.netcoreapp2.1`) today:\r\n* `PublishSingleFile` fails with the `PlaceHolderNotFoundInAppHostException` generated by the `HostWriter`.\r\n* `PublishReadyToRun` and `PublishTrimmed` silently fail to turn on, but the `publish` itself suceeds.\r\n\r\nThis change adds an explicit TFM check to generate error/warnings for non-conforming targets.\r\n\r\n`PublishSingleFile`, `PublishReadyToRun`, and `PublishTrimmed` require the following conditions to be true:\r\n* `TargetFramework` is `netcoreapp`\r\n* `TargetFrameworkVersion` is at least `3.0`\r\n* The app is an executable (`OutputType=exe`)\r\n\r\nIf any of the conditions fail:\r\n* `PublishSingleFile` fails with an appropriate error\r\n* `PublishReadyToRun` and `PublishTrimmed` issue warnings, but publish itself succeeds.\r\n  This is because:\r\n    * The restriction against `classlibs` / `netstandard` frameworks may be relaxed in future releases\r\n    * The version check should ideally be a failure, but they are warnings for maximum compatibility with `3.0` release.\r\n\r\nFixes https://github.com/dotnet/sdk/issues/3728","Url":"https://github.com/dotnet/sdk/pull/3766","RelatedDescription":"Open PR \"[release/3.1.1xx] Add TFM check for `Publish-Trimmed-ReadyToRun-SingleFile`\" (#3766)"},{"Id":"507479665","IsPullRequest":true,"CreatedAt":"2019-10-18T00:03:29","Actor":"vijayrkn","Number":"3752","RawContent":null,"Title":"Set the default publish profile only if the profile is not imported by NetSdk","State":"closed","Body":"Issue:\r\nWhen an SDK based WebJobs project is published without a profile, publish fails with missing Profile named 'FileSystem'.\r\n\r\nThis is because the default filesyste profile is shipped in WebSdk but is set in NetSdk.\r\n\r\nFix: Is to not default the publish profile to 'FileSystem' in NetSdk since NetSdk does not ship this default profile.\r\n\r\nImpact:\r\nThis breaks the Sdk based WebJobs publish scenarios.\r\n\r\nThere are 2 parts to this fix:\r\n\r\nRemoving the default publish profile from Netsdk\r\nIf the profile is not imported by NetSdk, setting the default publish profile in WebSdk & importing the default profile. This is the websdk part of the fix - aspnet/websdk#1006","Url":"https://github.com/dotnet/sdk/pull/3752","RelatedDescription":"Closed or merged PR \"Set the default publish profile only if the profile is not imported by NetSdk\" (#3752)"},{"Id":"508759665","IsPullRequest":true,"CreatedAt":"2019-10-17T22:50:12","Actor":"dotnet-maestro[bot]","Number":"3764","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191022.7\r\n- **Date Produced**: 10/23/2019 12:54 AM\r\n- **Commit**: 07fa4be202f382e4cf7a74945ae37c9a629c4063\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19522.7\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3764","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3764)"},{"Id":"508207404","IsPullRequest":true,"CreatedAt":"2019-10-17T22:28:28","Actor":"dotnet-maestro[bot]","Number":"3761","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191017.4\r\n- **Date Produced**: 10/17/2019 6:49 PM\r\n- **Commit**: 78df3ddd8b40fbd93e10cea111b840c3ecfbb9fb\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19517.4\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3761","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3761)"},{"Id":"508734239","IsPullRequest":true,"CreatedAt":"2019-10-17T21:38:59","Actor":"dotnet-maestro[bot]","Number":"3763","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from nuget/nuget.client","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:eafa42d7-9e65-4d0e-b5a3-08d7219835fd)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Build**: 5.3.1.6268\r\n- **Date Produced**: 10/16/2019 6:20 AM\r\n- **Commit**: f2c670b0b7cdc018dc708666b2d58699d9654e42\r\n- **Branch**: refs/heads/release-5.3.x\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.3.1-rtm.6268\r\n\r\n[marker]: <> (End:eafa42d7-9e65-4d0e-b5a3-08d7219835fd)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3763","RelatedDescription":"Open PR \"[release/3.0.1xx] Update dependencies from nuget/nuget.client\" (#3763)"},{"Id":"507966389","IsPullRequest":true,"CreatedAt":"2019-10-17T04:25:09","Actor":"dotnet-maestro[bot]","Number":"3758","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191016.12\r\n- **Date Produced**: 10/17/2019 12:27 AM\r\n- **Commit**: 32085cbc728e1016c9d6a7bc105845f0f9eb6b47\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.1\r\n\r\n[marker]: <> (End:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3758","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#3758)"},{"Id":"507820459","IsPullRequest":true,"CreatedAt":"2019-10-17T01:38:16","Actor":"dotnet-maestro[bot]","Number":"3757","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191016.1\r\n- **Date Produced**: 10/16/2019 11:22 AM\r\n- **Commit**: f8aac40612d167c5beff554f569897177e786d3a\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19516.1\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3757","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3757)"},{"Id":"508178879","IsPullRequest":false,"CreatedAt":"2019-10-17T01:21:45","Actor":"syndicatedshannon","Number":"3760","RawContent":null,"Title":"FrameworkReference 'Microsoft.AspNetCore.App' was not recognized after downgrade","State":"open","Body":"Downgrade TargetFramework from netcoreapp3.0 to netcoreapp2.2 causes the following upon build:\r\n\r\n> The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized\r\n\r\nClean/Rebuild All does not resolve. Deleting bin/obj folders in the specific projects reporting the FrameworkReference error does resolve. This causes unexpected failures when switching branches. Note the project also depends upon .NET Standard 2.1/2.0 projects, which have coincident upgrade/downgrades. However, cleaning those projects did not resolve.\r\n\r\nI can repro and try deleting something specific if it will help pin the problem down further.","Url":"https://github.com/dotnet/sdk/issues/3760","RelatedDescription":"Open issue \"FrameworkReference 'Microsoft.AspNetCore.App' was not recognized after downgrade\" (#3760)"},{"Id":"507542108","IsPullRequest":true,"CreatedAt":"2019-10-17T00:42:52","Actor":"dotnet-bot","Number":"3754","RawContent":null,"Title":"Merge release/2.2.4xx to release/3.0.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.4xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.4xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.4xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.4xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3754","RelatedDescription":"Closed or merged PR \"Merge release/2.2.4xx to release/3.0.1xx\" (#3754)"},{"Id":"507625049","IsPullRequest":true,"CreatedAt":"2019-10-16T08:11:16","Actor":"dotnet-maestro[bot]","Number":"3756","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191015.16\r\n- **Date Produced**: 10/16/2019 4:22 AM\r\n- **Commit**: 57ce1fec7a023a8e32cc64f8ce2637a0b3cdba35\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19515.16\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3756","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3756)"},{"Id":"507520224","IsPullRequest":true,"CreatedAt":"2019-10-15T23:32:25","Actor":"nguerrera","Number":"3753","RawContent":null,"Title":"Increase timeout and up ulimit -n","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3753","RelatedDescription":"Closed or merged PR \"Increase timeout and up ulimit -n\" (#3753)"},{"Id":"507453295","IsPullRequest":true,"CreatedAt":"2019-10-15T23:07:25","Actor":"vijayrkn","Number":"3750","RawContent":null,"Title":"Set the default publish profile only if the profile is not imported by NetSdk","State":"closed","Body":"Issue: \r\nWhen an SDK based WebJobs project is published without a profile, publish fails with missing Profile named 'FileSystem'.\r\n\r\nThis is because the default filesyste profile is shipped in WebSdk but is set in NetSdk. \r\n\r\nFix: Is to not default the publish profile to 'FileSystem' in NetSdk since NetSdk does not ship this default profile. \r\n\r\nImpact: \r\nThis breaks the Sdk based WebJobs publish scenarios. \r\n\r\nThere are 2 parts to this fix: \r\n1. Removing the default publish profile from Netsdk\r\n2. If the profile is not imported by NetSdk, setting the default publish profile in WebSdk & importing the default profile. This is the websdk part of the fix - https://github.com/aspnet/websdk/pull/1006\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3750","RelatedDescription":"Closed or merged PR \"Set the default publish profile only if the profile is not imported by NetSdk\" (#3750)"},{"Id":"507458154","IsPullRequest":true,"CreatedAt":"2019-10-15T20:12:56","Actor":"nguerrera","Number":"3751","RawContent":null,"Title":"Delete tmp file that was accidentally checked in","State":"open","Body":"Found creeping into master via merge from 3.1\r\n","Url":"https://github.com/dotnet/sdk/pull/3751","RelatedDescription":"Open PR \"Delete tmp file that was accidentally checked in\" (#3751)"},{"Id":"507174167","IsPullRequest":false,"CreatedAt":"2019-10-15T11:09:48","Actor":"mjcheetham","Number":"3749","RawContent":null,"Title":"Incorrect AppHost binary is published for dependant projects","State":"open","Body":"**Version information**\r\n.NET Core SDK 3.0.100\r\n\r\n**Reproduction steps**\r\nOn a Mac...\r\n  1. dotnet new console -n App1\r\n  1. dotnet new console -n App2\r\n  1. dotnet add App2 reference App1\r\n  1. dotnet publish App2 -r win-x64\r\n\r\nor on Windows...\r\n  1. dotnet new console -n App1\r\n  1. dotnet new console -n App2\r\n  1. dotnet add App2 reference App1\r\n  1. dotnet publish App2 -r osx-x64\r\n\r\n**Expected behaviour**\r\nIn the publish directory there exists App2.exe and App1.exe (plus all the runtime bits for Windows 64-bit). Visa-versa for publishing for osx-x64 on a Windows machine.\r\n\r\n**Actual behaviour**\r\nIn the publish directory there exists App2.exe and **_App1 (not a Windows PE)_** (plus all the runtime bits for Windows 64-bit). Visa-versa for publishing for osx-x64 on a Windows machine.\r\n\r\nOn a Mac publishing win-x64:\r\n```shell\r\n$ dotnet --version\r\n3.0.100\r\n$ pwd\r\n/Users/<user>/scratch/xpublishbug/App2/bin/Debug/netcoreapp3.0/win-x64/publish\r\n$ ls -l App*\r\n-rwxr-xr-x  1 <user>  <group>   80860 15 Oct 12:05 App1\r\n-rw-r--r--  1 <user>  <group>    4608 15 Oct 12:05 App1.dll\r\n-rw-r--r--  1 <user>  <group>     440 15 Oct 12:05 App1.pdb\r\n-rw-r--r--  1 <user>  <group>   30026 15 Oct 12:05 App2.deps.json\r\n-rw-r--r--  1 <user>  <group>    4096 15 Oct 12:05 App2.dll\r\n-rwxr--r--  1 <user>  <group>  158208 15 Oct 12:05 App2.exe\r\n-rw-r--r--  1 <user>  <group>     440 15 Oct 12:05 App2.pdb\r\n-rw-r--r--  1 <user>  <group>      26 15 Oct 12:05 App2.runtimeconfig.json\r\n```\r\n\r\nOn Windows publishing osx-x64:\r\n```powershell\r\nPS> dotnet --version\r\n3.0.100\r\nPS> ls App*\r\n\r\n\r\n    Directory: C:\\Users\\<user>\\scratch\\xpublishtest\\App2\\bin\\Debug\\netcoreapp3.0\\osx-x64\\publish\r\n\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\n-a----       2019-10-15  12:18 PM           4608 App1.dll\r\n-a----       2019-10-15  12:18 PM         159744 App1.exe\r\n-a----       2019-10-15  12:18 PM            444 App1.pdb\r\n-a----       2019-10-15  12:18 PM          80860 App2\r\n-a----       2019-10-15  12:18 PM          27495 App2.deps.json\r\n-a----       2019-10-15  12:18 PM           4096 App2.dll\r\n-a----       2019-10-15  12:18 PM            444 App2.pdb\r\n-a----       2019-10-15  12:18 PM             28 App2.runtimeconfig.json\r\n```","Url":"https://github.com/dotnet/sdk/issues/3749","RelatedDescription":"Open issue \"Incorrect AppHost binary is published for dependant projects\" (#3749)"},{"Id":"507060412","IsPullRequest":false,"CreatedAt":"2019-10-15T07:30:29","Actor":"josefblaha","Number":"3748","RawContent":null,"Title":"Build succeeds although a file was deleted in a referenced project","State":"open","Body":"In a specific situation, when a file is deleted, causing compile error, build still succeedes.\r\n1. Create a new .NET Standard library project ClassLibrary1 with public Class1.\r\n2. Add another library ClassLibrary2 to the solution.\r\n3. Add a project reference from ClassLibrary2 to ClassLibrary1.\r\n4. Create a new class Consumer1 in ClassLibrary2 with a field of type ClassLibrary1.Class1.\r\n5. dotnet build on solution succeeds (as expected).\r\n6. Delete ClassLibrary1.Class1 file.\r\n7. dotnet build on solution still succeeeds (although it shouldn't).\r\n\r\nPrepared solution in state of point 4:\r\n[FileDeleteTest.zip](https://github.com/dotnet/sdk/files/3727846/FileDeleteTest.zip)\r\n\r\ndotnet SDK 3.0.100\r\nVS 16.3.3\r\nWindows 10 1903\r\n","Url":"https://github.com/dotnet/sdk/issues/3748","RelatedDescription":"Open issue \"Build succeeds although a file was deleted in a referenced project\" (#3748)"},{"Id":"506814823","IsPullRequest":true,"CreatedAt":"2019-10-14T21:06:42","Actor":"dsplaisted","Number":"3747","RawContent":null,"Title":"Update branding to 3.1.100-preview2","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3747","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.100-preview2\" (#3747)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"508132491","IsPullRequest":false,"CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Number":"131","RawContent":null,"Title":".NET Core 3.1.0 Preview 1","State":"open","Body":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 1\" (#131)"},{"Id":"506832844","IsPullRequest":false,"CreatedAt":"2019-10-14T19:26:10","Actor":"terrajobst","Number":"130","RawContent":null,"Title":".NET Core 3.0 concludes the .NET Framework API porting project","State":"open","Body":"We started in .NET Core 1.0 with a very minimal API set that only included \\~18K of the .NET Framework APIs. With [.NET Standard 2.0](https://devblogs.microsoft.com/dotnet/announcing-net-standard-2-0/), we tried to make it much more viable to share code between .NET Framework, .NET Core, and Xamarin which resulted in approximately 38K .NET Frameworks APIs being available in .NET Core 2.0. We also built the [Windows Compatibility Pack](https://devblogs.microsoft.com/dotnet/announcing-the-windows-compatibility-pack-for-net-core/) which made another 21K .NET Framework APIs available to .NET Core, resulting in almost 60K additional APIs. And in .NET Core 3.0 we added WPF and WinForms, which increased the number of .NET Framework APIs ported to .NET Core to over 120k, which is more than half of all .NET Framework APIs.\r\n\r\nIt’s also worth pointing out that we added about 62K APIs to .NET Core that don’t exist in .NET Framework. If we compare their total number of APIs, .NET Core has about 80% of the API surface of .NET Framework.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://user-images.githubusercontent.com/5169960/66777114-f8db7c80-ee7c-11e9-9161-acfe1c491586.png\" width=\"600\" align=\"center\">\r\n</p>\r\n\r\nWe announced that the [future of .NET](https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/) will be based on .NET Core. And at Build 2019, [Scott Hunter stated](https://www.youtube.com/watch?v=ZlO1utbB2GQ&t=54m20s) that AppDomains, remoting, Web Forms, WCF server, and Windows Workflow won’t be ported to .NET Core.\r\n\r\nWith .NET Core 3.0, we’re at the point where we’ve ported all technologies that are required for modern workloads, be that desktop apps, mobile apps, console apps, web sites, or cloud services. That’s not to say that we don’t have any gaps or opportunities for new technologies, but we generally believe we won’t be finding them in the .NET Framework code base anymore. Moving forward, we’re focusing our resources on incorporating new technologies.\r\n\r\nSimultaneously, we’re looking into releasing more of the [.NET Framework code base under the MIT license](https://github.com/microsoft/referencesource) on GitHub to allow the community to create OSS projects for technologies we’re not intending to bring to .NET Core. For example, there already are community projects for [CoreWF](https://github.com/UiPath/corewf) and [CoreWCF](https://github.com/CoreWCF/CoreWCF).\r\n\r\nWe’d like to thank everyone who filed issues with requests for APIs being ported. Those issues allowed us to prioritize and close the gaps that prevented people from porting to .NET Core.\r\n\r\nBut since we generally no longer plan to bring existing technologies from .NET Framework to .NET Core we’ll be closing all issues that are [labeled with port-to-core](https://github.com/dotnet/corefx/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3Aport-to-core).\r\n\r\n### Discussion\r\n\r\nTo discuss this issue, please comment on the corresponding issue at https://github.com/dotnet/corefx/issues/41769.","Url":"https://github.com/dotnet/announcements/issues/130","RelatedDescription":"Open issue \".NET Core 3.0 concludes the .NET Framework API porting project\" (#130)"},{"Id":"505445666","IsPullRequest":false,"CreatedAt":"2019-10-10T18:45:56","Actor":"TaraOverfield","Number":"129","RawContent":null,"Title":"October 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework October 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/)\r\n* [.NET Framework October 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/129","RelatedDescription":"Open issue \"October 2019 .NET Updates\" (#129)"},{"Id":"505328689","IsPullRequest":false,"CreatedAt":"2019-10-10T15:19:53","Actor":"carloreggiani","Number":"128","RawContent":null,"Title":"Docker Stop return status Exited \"(3221225786)\"","State":"closed","Body":"Hi\r\nI'm investigating a issue regarding official MCR images on a Win2019 server with Docker EE engine 19.03.2.\r\n\r\nThe images that I'm unsing are:\r\nmcr.microsoft.com/windows/servercore:1809\r\nmcr.microsoft.com/dotnet/framework/aspnet:4.8\r\n\r\nStopping containers based on these images (\"docker stop\" command) I'm getting: \r\n\"Exited (3221225786)\"\r\n\r\nOn linux a stop command normally return: \"Exited (137)\"\r\n\r\nIs it a normal behaviour? What's means 3221225786?\r\n\r\nThanks for any support\r\n\r\nCarlo","Url":"https://github.com/dotnet/announcements/issues/128","RelatedDescription":"Closed issue \"Docker Stop return status Exited \"(3221225786)\"\" (#128)"},{"Id":"504325600","IsPullRequest":false,"CreatedAt":"2019-10-08T23:14:11","Actor":"terrajobst","Number":"127","RawContent":null,"Title":"Consolidated repo names","State":"open","Body":"[ann]: https://github.com/dotnet/announcements/issues/119\r\n\r\nAs we announced earlier, we're [planning on consolidating][ann] some of the repositories in the dotnet org. While this is still work in progress, we'd like to give you an update on where we are.\r\n\r\nSo far, we've identified the following repos:\r\n\r\n* dotnet/**runtime**\r\n\t- Will contain [coreclr](https://github.com/dotnet/coreclr), [corefx](https://github.com/dotnet/corefx), [core-setup](https://github.com/dotnet/core-setup), [aspnet/Extensions](https://github.com/aspnet/Extensions), and some of [mono/mono](https://github.com/mono/mono)\r\n* [dotnet/**sdk**](https://github.com/dotnet/sdk)\r\n\t- Will contain [toolset](https://github.com/dotnet/toolset), [sdk](https://github.com/dotnet/sdk), [cli](https://github.com/dotnet/cli)\r\n* dotnet/**installer**\r\n\t- Renamed from [core-sdk](https://github.com/dotnet/core-sdk)\r\n* dotnet/**aspnetcore**\r\n\t- Moved from [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) and will also contain [aspnet/AspNetCore-Tooling](https://github.com/aspnet/AspNetCore-Tooling)\r\n* dotnet/**efcore**\r\n\t- Moved from [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore)\r\n* [dotnet/**winforms**](https://github.com/dotnet/winforms)\r\n\t- Unchanged, but listed for clarity \r\n* [dotnet/**wpf**](https://github.com/dotnet/wpf)\r\n\t- Unchanged, but listed for clarity\r\n\r\n### Name changes\r\n\r\nYou might notice that we changed our mind on naming from our [earlier announcement][ann]. Based on your feedback, we decided to go with **dotnet/runtime** instead of **dotnet/platform** and **dotnet/sdk** instead of **dotnet/cli**.\r\n\r\nSeveral people pointed out that the previous names weren't relatable to how we talk about the product, for example on download pages. So, we decided to match the product distributions as the primary design point for the new names. We generally refer to the bits you need to run your app as *the runtime* and the bits you need to build apps as *the SDK*. This also matches the naming chosen by other platforms.\r\n\r\n### New repos can't be used for .NET Core 3.x or earlier\r\n\r\nThe consolidated repositories are going to be about .NET 5 and going forward. It will not be possible to build .NET Core 3.1 or earlier from these repositories. As such, only the master branch from each of the repositories will be brought forward. There will be no porting of the individual release branches in the source repositories.\r\n\r\n### Personal names and email addresses\r\n\r\nSince we're planning on rebasing the history in the merged repositories, we can map your name and email address to new values as well. We primarily do this to support our friends in the LGBTQ+ community who have changed their names to reflect their identities. However, anybody is welcome to use this to change their email and name.\r\n\r\nWhatever your reason might be: we value your contributions and we hope this small gesture makes your life a little bit better. So if you changed your name/email – or simply prefer us to use different values – please [submit a request](mailto:dotnet@microsoft.com&subject=.NET%20repo%20consolidation%3A%20request%20for%20name%20change&body=Hey%2C%20%0A%0AI%E2%80%99d%20like%20to%20change%20my%20email%2Fdisplay%20name%20in%20the%20consolidated%20repo%20from%20%0A%0A%20%20%20%20%20%20%20%20My%20Old%20Name%20%3Cold.me%40example.org%3E%20%0A%0Ato%20%0A%0A%20%20%20%20%20%20%20%20My%20New%20Name%20%3Cnew.me%40example.org%3E%20%0A%0AThanks%21%20%0A).\r\n\r\n### More is coming\r\n\r\nWe'll share more updates in the upcoming months. Please let us know of any concerns that we haven't addressed yet!\r\n\r\n### Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27096.","Url":"https://github.com/dotnet/announcements/issues/127","RelatedDescription":"Open issue \"Consolidated repo names\" (#127)"},{"Id":"504304108","IsPullRequest":false,"CreatedAt":"2019-10-08T22:06:07","Actor":"MichaelSimons","Number":"126","RawContent":null,"Title":"4.7.x .NET Framework SDK Docker images no longer published","State":"open","Body":"# 4.7.x .NET Framework SDK Docker images no longer published\r\n\r\nThe [4.7.x .NET Framework SDK Docker images](https://hub.docker.com/_/microsoft-dotnet-framework-sdk) will no longer be published after Oct. 8, 2019.  The 4.8 image tags should be used as a replacement.\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [microsoft/dotnet-framework-docker#428](https://github.com/microsoft/dotnet-framework-docker/issues/428)\r\n\r\n## Details\r\n\r\nAny references to the following SDK tags should be updated to reference `4.8` instead:\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2019`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2019`\r\n\r\nIf you haven't migrated to using images from [MCR](https://github.com/dotnet/announcements/issues/101) and are still using the .NET Framework repos on Docker Hub, you will need to update your tag references to MCR.  This is because the 4.8 images only exist on MCR.  These are the following Docker Hub tags that are affected and should be updated to reference the [4.8 tags at the MCR location](https://hub.docker.com/_/microsoft-dotnet-framework-sdk):\r\n* `microsoft/dotnet-framework:4.7.1-sdk`\r\n* `microsoft/dotnet-framework:4.7.1-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-1803`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2019`","Url":"https://github.com/dotnet/announcements/issues/126","RelatedDescription":"Open issue \"4.7.x .NET Framework SDK Docker images no longer published\" (#126)"},{"Id":"502102886","IsPullRequest":false,"CreatedAt":"2019-10-03T14:30:16","Actor":"MichaelSimons","Number":"125","RawContent":null,"Title":"Alpine Docker images no longer include the tzdata package in 3.0","State":"open","Body":"# Alpine Docker images no longer include the tzdata package in 3.0\r\nBeginning with the 3.0 release, the `tzdata` package has been removed from all Alpine Docker images.\r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\ndotnet/dotnet-docker#1366\r\n\r\n## Details\r\n* https://github.com/dotnet/dotnet-docker/pull/1312\r\n\r\n\r\nThis package was removed because it wasn't required for the main set of scenarios and to have consistency between the runtime-deps images across all Linux distros.  This package is still installed in the 2.x images for Alpine so this will be something to be aware of when migrating from 2.x to 3.0.\r\n\r\n\r\nYou may be impacted by this if you use any of the Alpine images and your code has a dependency on the `tzdata` package, such as using the `System.TimeZoneInfo` API.  In that case, you'll need to update your Dockerfile to explicitly install the package:\r\n```\r\nRUN apk add --no-cache tzdata\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/125","RelatedDescription":"Open issue \"Alpine Docker images no longer include the tzdata package in 3.0\" (#125)"},{"Id":"497868605","IsPullRequest":false,"CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Number":"124","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.0","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n","Url":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.0\" (#124)"},{"Id":"494223006","IsPullRequest":false,"CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Number":"123","RawContent":null,"Title":".NET Core 3.0 RC 1","State":"open","Body":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Open issue \".NET Core 3.0 RC 1\" (#123)"},{"Id":"491801748","IsPullRequest":false,"CreatedAt":"2019-09-10T17:23:20","Actor":"leecow","Number":"122","RawContent":null,"Title":"September 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework September 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-security-and-quality-rollup/)\r\n* [.NET Framework September 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Open issue \"September 2019 .NET Updates\" (#122)"},{"Id":"491794046","IsPullRequest":false,"CreatedAt":"2019-09-10T17:04:46","Actor":"blowdart","Number":"121","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core","State":"open","Body":"# Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Announcement\r\n\r\nThe original announcement for this issue can be found at https://github.com/dotnet/announcements/issues/121\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on .NET Core 2.1.0-2.1.12, or .NET Core 2.2.0-2.2.6\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you have a version of .NET Core less than 2.1.13 or less than 2.2.7, you're vulnerable.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nPaul Ryman of VMware Sydney Engineering Team\r\n\r\n### External Links\r\n\r\n[CVE-2019-1301](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1301)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\nV1.1 (September 10, 2019): Fix version numbers\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-09-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/121","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\" (#121)"},{"Id":"489344106","IsPullRequest":false,"CreatedAt":"2019-09-04T19:14:05","Actor":"leecow","Number":"120","RawContent":null,"Title":".NET Core 3.0 Preview 9","State":"open","Body":".NET Core Preview 9 released today. https://github.com/dotnet/core/issues/3304 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-9/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-9/)\r\n\r\nPlease report any issues you find with 3.0.0 Preview 9, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/120","RelatedDescription":"Open issue \".NET Core 3.0 Preview 9\" (#120)"},{"Id":"480859726","IsPullRequest":false,"CreatedAt":"2019-08-14T19:54:26","Actor":"stephentoub","Number":"119","RawContent":null,"Title":"Consolidating .NET GitHub repos","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.*\r\n\r\nOver the next few months, we plan to consolidate several of the foundational repositories of .NET Core, including dotnet/coreclr and dotnet/corefx.\r\n\r\n.NET’s repository structure on GitHub was initially created in a fairly fine-grained manner, with the aim of enabling runtime agility and increased developer productivity.  However, this separation has led to a variety of complications for contributors and maintainers alike.  For example:\r\n- **Confusion about where issues should be opened.**  It’s not always clear in which repo an issue should be reported, complicated by the fact that some implementations actually span repositories (e.g. a type might be exposed through a reference assembly and have its tests in corefx but actually be implemented in System.Private.CoreLib in coreclr).\r\n- **Difficulty sharing source.**  System.Private.CoreLib is intricately connected to the rest of the runtime, and thus has lived with the runtime code.  That, however, means that although corefx has been intended as the place to share as much core library code as possible across any underlying runtime, we’ve needed to keep a significant body of code in System.Private.CoreLib, which then has meant it’s needed to be “mirrored” to each runtime repo (coreclr, corert, mono) that needs to consume it as source; similarly, corefx has similarly required access to much of that source, for example to use the same interop DllImports that are employed elsewhere in the runtimes.  The automatic mirror that shares this source needs to be maintained, and even when it has been, it’s often led to lag.  It’s also complicated developer processes, where to validate a change in one repo generally requires manually mirroring the code to other local repos in order to validate the change and ensure merging into one repo won’t break the others.\r\n- **PRs spanning multiple repos.**  Because the runtime, CoreLib, and the core libraries are all intricately linked, changing runtime behaviors, adding new APIs, or changing various build processes (e.g. improving static analysis) often requires multiple PRs carefully staged across time and multiple repos.  For example, to add a new method to a type like Dictionary<>, a developer must first make the source changes in her local coreclr repo and the test and reference assembly changes in her local corefx repo.  When satisfied with the fix, the developer must submit a PR to coreclr as well as a PR to corefx, the latter of which will fail.  Eventually the coreclr PR will be merged, and the changes will mirror to the other runtimes that also require the update.  Eventually those mirror PRs will be merged, and builds will be created containing the fix for each runtime.  At some point later those builds will be consumed into the corefx repo, after which point the original corefx PR can be re-validated and eventually merged.  That’s the best case; things get more complicated in situations where there are bidirectional dependencies.\r\n- **Building an installable runtime.** Self-hosting a custom built .NET requires intricate knowledge of how all the repos work and interact.  A developer can’t just clone a single repo, make a desired change, and easily produce an installer.\r\n- **Consistency.**  One goal we had for more fine-grained repos was to enable isolation and independence for teams working within each repo’s confines, but this has led to non-trivial duplication of effort on things like build systems and CI, and then the resulting lack of consistency as each system ends up diverging from the others.\r\n\r\nThe issues go beyond the runtime.  For example, the ASP.NET maintainers and community did a great job in the past year or so consolidating from ~55 repos down to ~5 repos, but that’s still more repos than is desirable, leading to similar issues as cited above for the runtime.  On top of that, these ASP.NET repositories are in the aspnet GitHub org, which adds an additional set of issues, for example:\r\n- **Complications moving issues between repos.**  If a developer opens an issue in aspnet/aspnetcore and it’s determined that the cause of the issue is actually in dotnet/corefx, there is no GitHub mechanism to enable easily moving that issue across the aspnet to dotnet organizational boundary.\r\n- **Permissions.** Each organization’s permissions end up needing to be managed and maintained separately.\r\n\r\nThe issues extend into tooling as well.  For example, we currently have multiple repositories that all logically make up the dotnet CLI, but actually creating a working installer spans multiple repos.\r\n\r\n### Plan\r\n\r\nTo address these issues, we’re planning to make some changes to our repository structure:\r\n- **dotnet/platform.**  We plan to combine dotnet/coreclr, dotnet/corefx, dotnet/corert, dotnet/core-setup, and the relevant portions of mono/mono into a new dotnet/platform repo.  Everything needed to build and produce the Microsoft.NETCore.App shared framework will be in this repo.  We will no longer suffer from the complications of source mirroring.  Features like changing runtime behavior or adding an API will no longer require a complicated dance across multiple repos.  Etc.\r\n- **dotnet/aspnetcore.**  We plan to move the existing aspnet/aspnetcore repository into the dotnet organization.  Along with that, we aim to combine a variety of the other aspnet repositories into aspnetcore, such as aspnet/blazor.  Whether repos like entityframeworkcore remain separate or combined remains an open question.  A goal is that, just as dotnet/platform will be responsible for the creation of Microsoft.NETCore.App, dotnet/aspnetcore will be responsible for the creation of Microsoft.AspNETCore.App.\r\n- **dotnet/cli.**  We plan to combine dotnet/toolset and dotnet/sdk into the dotnet/cli repo.\r\n\r\n### FAQ\r\n\r\n#### Why are we merging repos?\r\n\r\nWe believe we can significantly improve several aspects of .NET on GitHub by combining repos, benefiting both maintainers and contributors.  These improvements will manifest in a variety of ways, such as in better issue management, much easier models of contribution, and easier and faster ways to build and install the resulting bits.\r\n\r\n####  What will happen to the aspnet org?\r\n\r\nThe aspnet org as a separate entity is legacy and artificial.  In time we hope to absorb it into the dotnet org and sunset the aspnet org.\r\n\r\n#### Will the coreclr and corefx repos go away?\r\n\r\nWith the help of GitHub, we plan to migrate all issues from these repos to the new dotnet/platform repo, and then lock down creation of additional issues, such that the repos will no longer be used for issue management.  We will also inhibit the creation of PRs to the master branch, which will effectively become an archive for read-only review of history.  In this sense, these repos will be archived, and no active development will happen with them.  However, we plan to continue servicing previous .NET Core releases out of these repos, so the various release branches (e.g. release/2.1, release/3.0, etc.) will continue to see (limited) activity.\r\n\r\n#### Will the mono repo go away?\r\n\r\nNo. mono/mono contains the source for the full mono stack and will continue to live on happily.  We will simply be moving the managed source associated with System.Private.CoreLib and copying the relatively small amount of source that makes up the native mono runtime to dotnet/platform.  We may choose to then use some mirroring technology to keep the runtime copy in sync (this will, however, not suffer from the same mirroring issues we currently experience, as we would not be mirroring between two components required to build the same binaries), or we may choose to let them diverge and manually sync only those changes deemed relevant to both implementations.\r\n\r\n#### Will the corert repo go away?\r\n\r\nYes.  We plan to retire/archive the corert repo.  Some of the technology in the corert repo will be migrated to the master branch of dotnet/platform, where it will be productized as part of .NET.  Other portions of the corert repo will be migrated to feature branches of dotnet/platform, where the experimentation can continue.  In this way, we will use feature branches to continue experimenting with the corert technology, while making it easier to share portions with its shipping counterpart and also graduate functionality into master if/when it’s ready.\r\n\r\n#### Does this mean there will be a single repo for all of .NET?\r\n\r\nNo.  We will be reducing the number of repos that contribute to .NET, but currently we do not believe that going all the way down to one is the right answer.\r\n\r\n#### Doesn’t this mean that issue and PR tracking will now be overwhelming?\r\n\r\nIt is already the case that the vast majority of issues in a given repo are not relevant to any individual developer, and with several thousand open issues in each repo and on the order of a hundred open PRs in each, we already need systems (e.g. labels) to successfully manage issues and PRs.  As such, we don’t believe the merging will have a significant impact on this aspect of developer productivity.  If it turns out to have an unexpectedly large negative impact, we will work with the community to find ways to mitigate the problem.  However, there are already a multitude of successful open source projects on GitHub with at least an order of magnitude more issues.\r\n\r\n#### What will happen to existing issues?\r\n\r\nWith the help of GitHub functionality, we plan to migrate all issues from old repos (e.g. dotnet/coreclr, dotnet/corefx) to the new repos (e.g. dotnet/platform).  We may also use this as a forcing function to revisit stale issues and either close those that are no longer relevant or reinvigorate those that are demanding of more immediate attention.\r\n\r\n#### What about git history?\r\n\r\nIn general, we plan to keep history, such that history from each constituent repo will be a part of the new repo.  However, we have made some mistakes in the past (e.g. large binaries, multitudes of automated PRs for flowing bits and source between repos, etc.), and we plan to rewrite history to correct those mistakes wherever possible and impactful.  Some rough calculations suggest this could end up significantly reducing the size of the repos as well as the time it takes to clone, which should not only help developers approaching the project but also CI.  This will end up meaning that SHAs may be different in the new repo than they were in the old repo; as previously mentioned, however, any references to the old SHAs in the old repos will continue to work, as those repos will remain accessible.\r\n\r\n#### Will I still show up in the contributor list due to previous contributions?\r\n\r\nYes.  We plan to merge all such history.\r\n\r\n#### Will this break debugging with SourceLink?\r\n\r\nNo.  The existing repos will continue to be accessible, and commit SHAs there will remain unchanged.\r\n\r\n#### Might plans change?\r\n\r\nSure.  Part of the goal of posting this announcement is to hear from you, hear about additional benefits you're excited about, and hear about additional concerns we may not have considered.  We will include such ideas in our planning and course correct as necessary.\r\n\r\n## Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.\r\n","Url":"https://github.com/dotnet/announcements/issues/119","RelatedDescription":"Open issue \"Consolidating .NET GitHub repos\" (#119)"},{"Id":"470434872","IsPullRequest":false,"CreatedAt":"2019-07-19T16:54:02","Actor":"richlander","Number":"118","RawContent":null,"Title":".NET Core master branches have switched to \"5.0\"","State":"open","Body":"# .NET Core master branches have switched to \"5.0\"\r\n\r\nVarious .NET Core repos have switched their `master` branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. This is very similar to how we approached 2.x and 3.0 projects. As context, `master` branches produced 3.0 builds for the entire period of the 2.2 project.\r\n\r\nAt present, this change is only relevant if you contribute to .NET Core repositories. Otherwise, we recommend that you wait for the 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/core #3059](https://github.com/dotnet/core/issues/3059)\r\n\r\n## Details\r\n\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n- [dotnet/coreclr](https://github.com/dotnet/coreclr)\r\n- [dotnet/corefx](https://github.com/dotnet/corefx)\r\n- [dotnet/core-setup](https://github.com/dotnet/core-setup)\r\n\r\nYou can see that [5.0 .NET Core Runtime builds](https://github.com/dotnet/core-setup#daily-builds) are now being built and published at dotnet/core-setup.\r\n\r\nIn large part, we switched `master` to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 released has progressed, we've had to increase scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nNotably, [dotnet/core-sdk](https://github.com/dotnet/core-sdk) is not yet producing 5.0 builds. We expect that the dotnet/core-sdk master branch will continue as a 3.0 branch for 2-3 months while we finish up the .NET Core 3.0 project.\r\n\r\nAt present, there is no developer experience for 5.0. We are waiting on the dotnet/core-sdk repo to switch to 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. We'll update this issue when a 5.0 SDK comes available.","Url":"https://github.com/dotnet/announcements/issues/118","RelatedDescription":"Open issue \".NET Core master branches have switched to \"5.0\"\" (#118)"},{"Id":"465501070","IsPullRequest":false,"CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Number":"117","RawContent":null,"Title":"System.Text.Json usability study results","State":"open","Body":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies 😊\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304.","Url":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Open issue \"System.Text.Json usability study results\" (#117)"},{"Id":"465034831","IsPullRequest":false,"CreatedAt":"2019-07-08T03:13:38","Actor":"leecow","Number":"116","RawContent":null,"Title":"Updates to releases.json (.NET Core release metadata)","State":"open","Body":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, MSBuild, NuGet, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is an example of the new array based on the upcoming July update.\r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n    \"sdk\": {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": []\r\n    },\r\n    \"sdks\": [\r\n        {\r\n            \"version\": \"2.2.301\",\r\n            \"version-display\": \"2.2.301\",\r\n            \"runtime-version\": \"2.2.6\",\r\n            \"vs-version\": \"16.1.3\",\r\n            \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n            \"csharp-version\": \"7.3\",\r\n            \"fsharp-version\": \"4.5\",\r\n            \"vb-version\": null,\r\n            \"files\": []\r\n        },\r\n        {\r\n          \"version\": \"2.2.205\",\r\n          \"version-display\": \"2.2.205\",\r\n          \"runtime-version\": \"2.2.6\",\r\n          \"vs-version\": \"16.0.5\",\r\n          \"vs-support\": \"Visual Studio 2019 (v16.0)\",\r\n          \"csharp-version\": \"7.3\",\r\n          \"fsharp-version\": \"4.5\",\r\n          \"vb-version\": null,\r\n          \"files\": []\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the community which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility compromises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Open issue \"Updates to releases.json (.NET Core release metadata)\" (#116)"},{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1186774324377575425","CreatedAt":"2019-10-22T22:40:22+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":8,"FavoriteCount":6,"RawContent":null},{"Id":"1186380026763194368","CreatedAt":"2019-10-21T20:33:34+00:00","UserScreenname":"dotnet","Text":"Get started with #dotNET using these quick and fun 101 video #tutorials! https://t.co/QgXucetiFt https://t.co/FSFMHGIl7y","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":57,"FavoriteCount":22,"RawContent":null},{"Id":"1184928601394671616","CreatedAt":"2019-10-17T20:26:08+00:00","UserScreenname":"dotnet","Text":"Take the Fall .NET Core Survey https://t.co/QoL9pUXuID","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":66,"FavoriteCount":53,"RawContent":null},{"Id":"1184876458621095936","CreatedAt":"2019-10-17T16:58:56+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":13,"FavoriteCount":2,"RawContent":null},{"Id":"1184446392829386752","CreatedAt":"2019-10-16T12:30:00+00:00","UserScreenname":"dotnet","Text":"🚀 Coding F# in Visual Studio Code with Ionide 🚀\n\nIn this episode, @_cartermp sits down with @cecilphillip to talk a… https://t.co/5AJoiFdoeK","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":52,"FavoriteCount":30,"RawContent":null},{"Id":"1184165499212423168","CreatedAt":"2019-10-15T17:53:50+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Core 3.1 Preview 1 https://t.co/HAD1JAsf3j","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":207,"FavoriteCount":110,"RawContent":null},{"Id":"1184165405574586368","CreatedAt":"2019-10-15T17:53:28+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9qNspl Core updates in .NET Core 3.1 Preview 1 https://t.co/Dho82BhBu1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":66,"FavoriteCount":39,"RawContent":null},{"Id":"1184151270635921408","CreatedAt":"2019-10-15T16:57:18+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":18,"FavoriteCount":6,"RawContent":null}]}},"RunOn":"2019-10-23T05:30:36.4596205Z","RunDurationInMilliseconds":15700}