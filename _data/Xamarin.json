{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin.Forms 4.0 Feature Preview: An Entirely New Point of (Collection)View","PublishedOn":"2018-12-07T19:00:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of the upcoming Xamarin.Forms 4.0 release, we are implementing the all new CollectionView control. The CollectionView is intended to be a successor to the ListView, improving upon its design...","Href":"https://blog.xamarin.com/xamarin-forms-4-0-feature-preview-an-entirely-new-point-of-collectionview/","RawContent":null},{"Title":"The Future of Mobile Development: Xamarin.Forms 4.0 Preview","PublishedOn":"2018-12-05T19:59:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Yesterday at Microsoft Connect(); 2018 we announced our plans for Xamarin.Forms 4.0 and shared a public preview. Let&#8217;s now take a deeper look at the big changes, starting with Xamarin.Forms...","Href":"https://blog.xamarin.com/xamarin-forms-4-0-preview/","RawContent":null},{"Title":"Connect(); 2018 Xamarin Announcements","PublishedOn":"2018-12-04T16:21:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, at Microsoft Connect(); 2018, we have several exciting announcements about brand new capabilities and foundational improvements in the Xamarin platform driven by your generous feedback....","Href":"https://blog.xamarin.com/connect-2018-xamarin-announcements/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in December","PublishedOn":"2018-12-02T20:46:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Here are just a few of the awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page. There you will...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-december/","RawContent":null},{"Title":"Multi-targeting with Android Support Library v28","PublishedOn":"2018-11-28T18:09:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting with Xamarin’s Android Support Library version 28, we are introducing multi-targeting. This includes assemblies for older support library versions when your application&#8217;s...","Href":"https://blog.xamarin.com/multi-targeting-with-android-support-library-v28/","RawContent":null},{"Title":"Android Build Performance and Reliability","PublishedOn":"2018-11-21T16:45:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As a Xamarin developer working on Android apps, you may be well-aware of two issues that slow down your everyday development; build times and the correctness of the build. If you aren&#8217;t sure...","Href":"https://blog.xamarin.com/android-build-performance-reliability/","RawContent":null},{"Title":"Xamarin.Forms 3.4.0: Say Hello to ImageButton","PublishedOn":"2018-11-15T19:17:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of our long-term goal to have more frequent releases, we’re pleased to announce the release of Xamarin.Forms 3.4.0. As always, this release contains even more bug fixes and most notably,...","Href":"https://blog.xamarin.com/xamarin-forms-3-4-0-say-hello-to-imagebutton/","RawContent":null},{"Title":"Twitch Workshop: Build Your First Mobile App with C#, Xamarin, and the Cloud","PublishedOn":"2018-11-14T18:45:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Have you been clamoring to get started with mobile development using C# and Xamarin? What if you could attend a full day workshop from the comfort of your house or in a conference room with some...","Href":"https://blog.xamarin.com/twitch-workshop-build-your-first-mobile-app/","RawContent":null},{"Title":"Gorilla Player: A Tool to Craft Beautiful XAML UIs for Xamarin.Forms","PublishedOn":"2018-11-08T21:00:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post contributed by Leonardo Rodríguez Viacava. Leo is co-founder and CTO of UXDivers, creators of Grial UIKit and Gorilla Player. UXDivers specializes in designing and coding engaging...","Href":"https://blog.xamarin.com/gorilla-player-a-tool-to-craft-beautiful-xaml-uis-for-xamarin-forms/","RawContent":null},{"Title":"Xamarin and .NET Community Events in November","PublishedOn":"2018-11-01T16:01:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Here are just a few of the awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page. There you will...","Href":"https://blog.xamarin.com/xamarin-and-net-community-events-in-november/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8738370088","Type":"PullRequestEvent","CreatedAt":"2018-12-12T02:48:33","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2508","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Support comma separators for armeabi error\" (#2508) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/2507\r\nFixes: https://developercommunity.visualstudio.com/content/problem/400751/xamarin-android-build-failed-due-to-missing-folder.html\r\nContext: https://github.com/xamarin/xamarin-android/issues/2173\r\nContext: https://github.com/xamarin/xamarin-android/pull/2180"},{"Id":"8738370084","Type":"IssuesEvent","CreatedAt":"2018-12-12T02:48:33","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2507","RelatedDescription":"Closed issue \"[Xamarin.Android.Build.Tasks] Comma separators in `$(AndroidSupportedAbis)` cause the build to skip over the expected XA0115 error for `armeabi`\" (#2507) at xamarin/xamarin-android","RelatedBody":"Context: https://developercommunity.visualstudio.com/content/problem/400751/xamarin-android-build-failed-due-to-missing-folder.html\r\nContext: https://github.com/xamarin/xamarin-android/issues/2173\r\n\r\n### Steps to Reproduce\r\n\r\nAdd the following test to `Xamarin.Android.Build.Tests.BuildTest` and run it:\r\n\r\n```csharp\r\n[Test]\r\npublic void XA0115Commas ()\r\n{\r\n\tvar proj = new XamarinAndroidApplicationProject ();\r\n\tproj.SetProperty (KnownProperties.AndroidSupportedAbis, \"armeabi,armeabi-v7a\");\r\n\tusing (var builder = CreateApkBuilder (Path.Combine (\"temp\", TestContext.CurrentContext.Test.Name))) {\r\n\t\tbuilder.ThrowOnBuildFailure = false;\r\n\t\tAssert.IsFalse (builder.Build (proj), \"Build should have failed with XA0115.\");\r\n\t\tStringAssertEx.Contains ($\"error XA0115\", builder.LastBuildOutput, \"Error should be XA0115\");\r\n\t\tAssert.IsTrue (builder.Clean (proj), \"Clean should have succeeded.\");\r\n\t}\r\n}\r\n```\r\n\r\n### Expected Behavior\r\n\r\nEither the use of commas in the `$(AndroidSupportedAbis)` should cause an error because comma separators are treated as invalid, or the `armeabi` architecture should produce the expected XA0115 error from the fix for https://github.com/xamarin/xamarin-android/issues/2173 that indicates the architecture is no longer supported:\r\n\r\n> Invalid value 'armeabi' in $(AndroidSupportedAbis). This ABI is no longer supported. Please update your project properties.\r\n\r\nIt turns out that comma separators *have been* allowed in `$(AndroidSupportedAbis)` up until now, so they must continue to be allowed, and this scenario should produce the XA0115 error.\r\n\r\n### Actual Behavior\r\n\r\nThe build produces the original unfriendly error message as reported in https://github.com/xamarin/xamarin-android/issues/2173:\r\n\r\n```\r\nXamarin.Android.Common.targets(2827,3): error MSB4018: The \"BuildApk\" task failed unexpectedly.\r\nXamarin.Android.Common.targets(2827,3): error MSB4018: System.IO.DirectoryNotFoundException: Could not find a part of the path 'C:\\src\\xamarin-android\\bin\\Debug\\lib\\xamarin.android\\xbuild\\Xamarin\\Android\\lib\\armeabi\\libmono-android.debug.so'.\r\nXamarin.Android.Common.targets(2827,3): error MSB4018:    at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)\r\nXamarin.Android.Common.targets(2827,3): error MSB4018:    at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)\r\nXamarin.Android.Common.targets(2827,3): error MSB4018:    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share)\r\nXamarin.Android.Common.targets(2827,3): error MSB4018:    at System.IO.File.OpenRead(String path)\r\nXamarin.Android.Common.targets(2827,3): error MSB4018:    at Xamarin.Android.Tasks.BuildApk.AddNativeLibrary(ZipArchiveEx apk, String abi, String filename, String inArchiveFileName) \r\nXamarin.Android.Common.targets(2827,3): error MSB4018:    at Xamarin.Android.Tasks.BuildApk.AddRuntimeLibraries(ZipArchiveEx apk, String supportedAbis) \r\nXamarin.Android.Common.targets(2827,3): error MSB4018:    at Xamarin.Android.Tasks.BuildApk.ExecuteWithAbi(String supportedAbis, String apkInputPath, String apkOutputPath) \r\nXamarin.Android.Common.targets(2827,3): error MSB4018:    at Xamarin.Android.Tasks.BuildApk.Execute() \r\nXamarin.Android.Common.targets(2827,3): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\nXamarin.Android.Common.targets(2827,3): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n```\r\n\r\n### Version Information\r\n\r\nVisual Studio 2019 Preview 1\n\n> VS bug [#744051](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/744051)"},{"Id":"8737886446","Type":"IssuesEvent","CreatedAt":"2018-12-12T00:25:22","Actor":"sundeeppeethani","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2522","RelatedDescription":"Opened issue \"The \"Link Assemblies\" task failed unexpectedly\" (#2522) at xamarin/xamarin-android","RelatedBody":"Severity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\t\tThe \"LinkAssemblies\" task failed unexpectedly.\r\nJava.Interop.Tools.Diagnostics.XamarinAndroidException: error XA2006: Could not resolve reference to 'Android.Support.V7.App.NotificationCompat/MediaStyle' (defined in assembly 'Plugin.MediaManager, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null') with scope 'Xamarin.Android.Support.v7.AppCompat, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'. When the scope is different from the defining assembly, it usually means that the type is forwarded. ---> Mono.Cecil.ResolutionException: Failed to resolve Android.Support.V7.App.NotificationCompat/MediaStyle\r\n   at Mono.Linker.Steps.MarkStep.HandleUnresolvedType(TypeReference reference)\r\n   at Mono.Linker.Steps.MarkStep.MarkType(TypeReference reference)\r\n   at MonoDroid.Tuner.MonoDroidMarkStep.MarkType(TypeReference reference)\r\n   at Mono.Linker.Steps.MarkStep.MarkField(FieldReference reference)\r\n   at Mono.Linker.Steps.MarkStep.InitializeFields(TypeDefinition type)\r\n   at Mono.Linker.Steps.MarkStep.InitializeType(TypeDefinition type)\r\n   at Mono.Linker.Steps.MarkStep.InitializeAssembly(AssemblyDefinition assembly)\r\n   at Mono.Linker.Steps.MarkStep.Initialize()\r\n   at Mono.Linker.Steps.MarkStep.Process(LinkContext context)\r\n   at Mono.Linker.Pipeline.Process(LinkContext context)\r\n   at MonoDroid.Tuner.Linker.Process(LinkerOptions options, ILogger logger, LinkContext& context)\r\n   at Xamarin.Android.Tasks.LinkAssemblies.Execute(DirectoryAssemblyResolver res)\r\n   --- End of inner exception stack trace ---\r\n   at Java.Interop.Tools.Diagnostics.Diagnostic.Error(Int32 code, Exception innerException, String message, Object[] args)\r\n   at Xamarin.Android.Tasks.LinkAssemblies.Execute(DirectoryAssemblyResolver res)\r\n   at Xamarin.Android.Tasks.LinkAssemblies.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\tMDC\t\t\t\r\n"},{"Id":"8737351176","Type":"IssuesEvent","CreatedAt":"2018-12-11T22:18:07","Actor":"mathieubourgeois","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2521","RelatedDescription":"Opened issue \"[armv7][aot][llvm] App crashes on startup in AndroidTypeManager.RegisterNativeMembers\" (#2521) at xamarin/xamarin-android","RelatedBody":"This issue occurs currently on master and on the d16-0-p2 branch.\r\n\r\n- Issue doesn't happen when disabling aot\r\n- On my slightly older version of master (9.1.199.12), disabling llvm works as well. However, I couldn't test on an updated master, since AOT compilation without llvm seems to crash right now.\r\n- Everything works properly if you run arm64-v8a instead.\r\n- The crash occurs inside C# code, but doesn't trigger an exception (as can be seen in the logs below), which leads me to believe that the llvm generated code is wrong. I've taken the liberty of disassembling the function and including it here\r\n[disassembly.txt](https://github.com/xamarin/xamarin-android/files/2669680/disassembly.txt)\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new Single-View App\r\n2. Disable Shared Runtime, Activate AOT+LLVM and build only for armeabi-v7a (You can use [App3.zip](https://github.com/xamarin/xamarin-android/files/2669629/App3.zip) )\r\n3. Build and run (armeabi-v7a or arm64-v8a device, doesn't matter, as long as only armv7 is built)\r\n4. Notice the crash\r\n\r\n### Expected Behavior\r\n\r\nApp actually starts\r\n\r\n### Actual Behavior\r\n\r\nApp crashes\r\n\r\n### Version Information\r\n\r\nMicrosoft Visual Studio Professional 2017 \r\nVersion 15.9.3\r\nVisualStudio.15.Release/15.9.3+28307.145\r\nMicrosoft .NET Framework\r\nVersion 4.7.03062\r\n\r\nInstalled Version: Professional\r\n\r\nVisual C++ 2017   00370-20007-36350-AA982\r\nMicrosoft Visual C++ 2017\r\n\r\nApplication Insights Tools for Visual Studio Package   8.14.11009.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.9.04012.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60913.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.9.03024.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nCookiecutter   15.9.18254.1\r\nProvides tools for finding, instantiating and customizing templates in cookiecutter format.\r\n\r\nEclipseAndroidImporter   1.0\r\nImport Android projects from Eclipse.\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10730.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.13.11-pre (400cfb1)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython   15.9.18254.1\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - Django support   15.9.18254.1\r\nProvides templates and integration for the Django web framework.\r\n\r\nPython - IronPython support   15.9.18254.1\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   15.9.18254.1\r\nProfiling support for Python projects.\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61810.11040\r\nMicrosoft SQL Server Data Tools\r\n\r\nTest Adapter for Boost.Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Boost.Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTest Adapter for Google Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Google Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTypeScript Tools   15.9.20918.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual C++ for Cross Platform Mobile Development (Android)   15.0.28107.00\r\nVisual C++ for Cross Platform Mobile Development (Android)\r\n\r\nVisual C++ for Cross Platform Mobile Development (iOS)   15.0.28016.00\r\nVisual C++ for Cross Platform Mobile Development (iOS)\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 6e26c5bacc8c4201e962f5bdde0a177f82f88691.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Unity   3.9.0.3\r\nVisual Studio Tools for Unity\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28301.59\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.12.3.73 (d15-9@20b35b881)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.16.5 (6b9f32067)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.127 (e975299)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.1.199.12 (HEAD/dd498d2)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n    Mono: mono/mono/2018-06@b63e5378e38\r\n    Java.Interop: xamarin/java.interop/master@6dd6f16\r\n    LibZipSharp: grendello/LibZipSharp/master@d695149\r\n    LibZip: nih-at/libzip/rel-1-5-1@b95cf3f\r\n    MXE: xamarin/mxe/xamarin@b9cbb535\r\n    ProGuard: xamarin/proguard/master@905836d\r\n    SQLite: xamarin/sqlite/3.25.2@4ea4c69\r\n    Xamarin.Android Tools: xamarin/xamarin-android-tools/master@9e78d6e\r\n\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.2.1.11 (5ef73d3)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n### Log File\r\n\r\nLogs for the run (this was done using d16-0-p2 branch for test, but it also occurs on master)\r\n[logs.txt](https://github.com/xamarin/xamarin-android/files/2669642/logs.txt)\r\n"},{"Id":"8736796589","Type":"PullRequestEvent","CreatedAt":"2018-12-11T20:35:27","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2520","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] _ValidateResourceCache incremental build issue\" (#2520) at xamarin/xamarin-android","RelatedBody":"If the `_ValidateResourceCache` MSBuild target deems the cache file\r\ninvalid:\r\n\r\n    <Delete Files=\"$(_AndroidResourcePathsCache)\" Condition=\" '$(_IsResourceCacheValid)' == 'False' \" />\r\n\r\nThe problem is that the `_BuildAdditionalResourcesCache` will be\r\nskipped!\r\n\r\n    <Target Name=\"_BuildAdditionalResourcesCache\"\r\n        Inputs=\"@(ReferencePath);@(ReferenceDependencyPaths);$(MSBuildProjectFullPath);$(NugetPackagesConfig);$(_AndroidBuildPropertiesCache)\"\r\n        Outputs=\"$(_AndroidStampDirectory)_BuildAdditionalResourcesCache.stamp\"\r\n\r\nIn eca09c89, I fixed a problem with `_BuildAdditionalResourcesCache`\r\nrunning on every build by introducing a stamp file.\r\n\r\nSince the `Outputs` are now the stamp file, we need to *also* delete\r\nthe stamp file when `'$(_IsResourceCacheValid)' == 'False'`. We had a\r\ntest checking this exact problem, but it wasn't verifying that\r\n`_BuildAdditionalResourcesCache` wasn't skipped."},{"Id":"8735735242","Type":"PullRequestEvent","CreatedAt":"2018-12-11T17:32:01","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2520","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] _ValidateResourceCache incremental build issue\" (#2520) at xamarin/xamarin-android","RelatedBody":"If the `_ValidateResourceCache` MSBuild target deems the cache file\r\ninvalid:\r\n\r\n    <Delete Files=\"$(_AndroidResourcePathsCache)\" Condition=\" '$(_IsResourceCacheValid)' == 'False' \" />\r\n\r\nThe problem is that the `_BuildAdditionalResourcesCache` will be\r\nskipped!\r\n\r\n    <Target Name=\"_BuildAdditionalResourcesCache\"\r\n        Inputs=\"@(ReferencePath);@(ReferenceDependencyPaths);$(MSBuildProjectFullPath);$(NugetPackagesConfig);$(_AndroidBuildPropertiesCache)\"\r\n        Outputs=\"$(_AndroidStampDirectory)_BuildAdditionalResourcesCache.stamp\"\r\n\r\nIn eca09c89, I fixed a problem with `_BuildAdditionalResourcesCache`\r\nrunning on every build by introducing a stamp file.\r\n\r\nSince the `Outputs` are now the stamp file, we need to *also* delete\r\nthe stamp file when `'$(_IsResourceCacheValid)' == 'False'`. We had a\r\ntest checking this exact problem, but it wasn't verifying that\r\n`_BuildAdditionalResourcesCache` wasn't skipped."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8738667312","Type":"IssuesEvent","CreatedAt":"2018-12-12T04:26:55","Actor":"letrungdo","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4710","RelatedDescription":"Opened issue \"Picker and DatePicker Margin issue on Iphone X when reset navigation Stack\" (#4710) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n### Steps to Reproduce\r\n\r\n1. Page 1: contain Picker1 and button.\r\n2. Page 2: contain Picker2\r\n3. From Page 1, select Picker1 and rotate screen -> tap button Next-> Open page 2 in new Stack navigation-> select picker2 -> rotate screen -> button Done obscured \r\n\r\n- Version with issue: Iphone X IOS 12.0, Xamarin Forms <= ver 3.4.0.1008975 \r\n\r\n### Video bug:\r\nhttps://youtu.be/09pKRBecos8\r\n"},{"Id":"8738105129","Type":"PullRequestEvent","CreatedAt":"2018-12-12T01:29:16","Actor":"adrianknight89","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4709","RelatedDescription":"Opened pull request \"[iOS] Added RowAnimationsEnabled platform specific to control row animations\" (#4709) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAn explanation as to why this is needed is discussed in the issue ticket. Essentially, this allows the developer to turn off row animations on demand instead of relying on `UITableViewRowAnimation` which does not work in certain cases. Currently, I'm setting `UIView.AnimationsEnabled` to false as a workaround, but this has very bad side effects like turning off status bar animations as well as soft keyboard animations.\r\n\r\nPS: I'd like to be able to test this in my project, but I can't create a nuget package with `.create-nuget.bat` since it's looking for `..\\Xamarin.Forms.Platform.Android\\bin\\debug\\MonoAndroid81` and I have Android 9 installed. Does your script need to be updated?\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #4199\r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n\r\nbool RowAnimationsEnabled platform specific\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8737510428","Type":"IssuesEvent","CreatedAt":"2018-12-11T22:50:17","Actor":"niraj-bpsoftware","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4708","RelatedDescription":"Opened issue \"[Android]App Crashes randomly with NavigationPageRenderer.UpdateToolbar error\" (#4708) at xamarin/Xamarin.Forms","RelatedBody":"\r\n### Description\r\nWe have a reoccurring bug in the app over the past month that we are struggling to get to the bottom of, It’s in android only.\r\n\r\nThis error occurs randomly if you close the app, then open it up again after some time – hours / days. We have not found a reliable we to constantly reproduce this error, but we are getting it regularly, (once to twice a day).\r\nIt appears something is going wrong with the bootup process. The problem is very hard to reliably reproduce it appears to occur 1 to 3 seconds after a book. It doesn’t happen in debug mode, we can only trace the problem through the App Centre analytics.\r\n\r\n\r\nThe error is :\r\n**NavigationPageRenderer.UpdateToolbar ()\r\nNavigationPageRenderer.OnAttachedToWindow ()\r\nView.n_OnAttachedToWindow (System.IntPtr jnienv, System.IntPtr native__this)\r\n(wrapper dynamic-method) System.Object.42(intptr,intptr)**\r\n\r\n### Steps to Reproduce\r\n\r\n1. Login to App.\r\n2. Close the App\r\n3. Open after some time (may be 30 minutes). \r\n[report-2518577414087959999-a4dd2419-076f-4b2d-94e0-6dfe7273d405.txt](https://github.com/xamarin/Xamarin.Forms/files/2669749/report-2518577414087959999-a4dd2419-076f-4b2d-94e0-6dfe7273d405.txt)\r\n\r\n### Expected Behavior\r\nApp shouldn't crash.\r\n### Actual Behavior\r\nApp crashes randomly on load.\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin Forms 3.4.0.1008975\r\n- Last known good version: NA\r\n- IDE: 15.8.7\r\n- Platform Target Frameworks:\r\n  - Android: 7.0\r\n  - Android Build: NRD90M\r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages: ReactiveUi 9.4.1, System.Reactive 4.1.2\r\n- Affected Devices: Android devices\r\n"},{"Id":"8737479663","Type":"PullRequestEvent","CreatedAt":"2018-12-11T22:43:33","Actor":"kvpt","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4707","RelatedDescription":"Opened pull request \"Android - Fix old root page dispose when main page change.\" (#4707) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nMove the code that dispose the old root page to prevent access from the Java code to disposed C# code.\r\nFix exception : **System.NotSupportedException: Unable to activate instance of type** when changing the main page.\r\n\r\n### Issues Resolved ### \r\n- Fixes #4706\r\n- Fixes #4325\r\n\r\n### Platforms Affected ### \r\n- Android\r\n\r\n### PR Checklist ###\r\n- [ ] Has automated tests => Only manuel test is possible\r\n- [ X] Rebased on top of the target branch at time of PR\r\n- [ X] Changes adhere to coding standard"},{"Id":"8737452807","Type":"IssuesEvent","CreatedAt":"2018-12-11T22:37:50","Actor":"kvpt","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4706","RelatedDescription":"Opened issue \"Android crash on main page change\" (#4706) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nAfter migrated to Xamarin.Forms 3.4.0 from Xamarin 2.5.0, I got several exceptions in AppCenter of type **JavaLocationException**/**NotSupportedException**.\r\n\r\n![image](https://user-images.githubusercontent.com/1446221/49834644-35da6c80-fd9d-11e8-9875-e80522abe2c3.png)\r\n\r\nBefore that, my application has no crash reported.\r\n\r\nAfter some tests, impossible for me to reproduce it.\r\n\r\nHowever, the information that can be deduced from the stacktrace is that the crash is during the main page affectation, and that the renderer seem to have been disposed.\r\nSo I cloned the repository and go to **SetPageInternal** method, the only incoming call was from the **LoadApplication** method in the activity. In this method was made the dispose of the renderer when the page was replaced. For me this case is possible, if you use a splashscreen (which is my case) or if the method LoadApplication is called a second time, when Android recreate the activity for exemple.\r\n\r\nSo to confirm that it's the case, I tried to call LoadApplication method twice and indeed the exception occured.\r\n\r\nAfter some debug in the code, I found that the dispose of the renderer was also done later in the Cleanup method called by the method SetPageInternal inside the Platform class.\r\nSo I removed the dispose call in the Activity but after that another exception occured : **IllegalArgumentException: No view found for id 0x1 (unknown)**.\r\nThis time it was the ClearValue of  the page renderer which caused that, so I moved this code in the platform cleanup code near the dispose.\r\n\r\nWith those modifications I can now call the LoadApplication method twice without crash and with the application working smoothly.\r\n\r\nI think that it will fix the crash encountered by the customers which use splashscreen in their apps or the case when application are restored from background.\r\n\r\nI will made a PullRequest that fix the issue.\r\n\r\n### Steps to Reproduce\r\n\r\n1.  Create a new project from the Template\r\n2.  Call LoadApplication twice in the MainActivity (this code is obviously wrong but must not crash the application)\r\n\r\n### Expected Behavior\r\nNo crash\r\n\r\n### Actual Behavior\r\nCrash\r\n\r\n### Basic Information\r\n\r\n- Version with issue: All after 2.5.0\r\n- Last known good version: 2.5.0\r\n- IDE: Visual Studio 2017 15.9.3\r\n- Platform Target Frameworks:\r\n  - Android"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8737232775","Type":"IssuesEvent","CreatedAt":"2018-12-11T21:55:43","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5258","RelatedDescription":"Closed issue \"[XI]mscorlib test failures on 32 bit device with master\" (#5258) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Update System to Xamarin.iOS master build \r\n2. Execute mscorlib test on 32 bit device\r\n\r\n### Expected Behavior\r\nAll tests should pass\r\n\r\n### Actual Behavior\r\nThere are 6 failures.\r\n       [FAIL] DoubleFormatterTest.TestFormatStringsN1 :   DblFn1 #216\r\n\t[FAIL] DoubleFormatterTest.TestFormatStringsN1_Fixed :   DblFn1 #200\r\n\t[FAIL] DoubleFormatterTest.TestFormatStringsN2 :   DblFn2 #216\r\n\t[FAIL] DoubleTest.LongLongValueRoundtrip :   Expected string length 21 but was 1. Strings differ at index 0.\r\n\t[FAIL] Rfc2898DeriveBytesTest.ConstructorPasswordSaltLengthZero : An unexpected exception type was thrown\r\n\t[FAIL] Rfc2898DeriveBytesTest.ConstructorPasswordSaltLengthZeroIterations : An unexpected exception type was thrown\r\n\r\n### Environment\r\n\r\n```\r\nMono version: 5.18.0.219 (f919fb58c4e)  (2018-12-04 12:36:55 -05:00)\r\nXA version: 9.1.199.34 (HEAD/e9570566) \r\nXI version: 12.5.1.313 (master): 3621032d) \r\nXM version: 5.5.1.313 (master: 3621032d)  (2018-12-07 14:59:44 -05:00)\r\nXVS version: \r\nXS version: 7.8.0.1362 (fc834dd)  (2018-12-07 14:06:35 -05:00)\r\n[Device] Name: XQAiPad2b, Identifier: 0c3a0d1d60fbd11401f1d6ca33518e9a31bafab4\r\n32 bit device: iPad2\r\n```\r\n\r\n### Build Logs\r\n\r\nBuild Log+Installation Log: http://xqa.blob.core.windows.net/gist/report-68c060035e62461db0fc9c020a3b5557.txt\r\nTest+DeviceLog: http://xqa.blob.core.windows.net/gist/mscorlib-ios06-12-190c3a0d1d60fbd11401f1d6ca33518e9a31bafab406-12-19-dc865843b8f54ef284be2448e1c78782.zip\r\n\r\nVerified Locally: https://gist.github.com/GouriKumari/498036ef7aef60dc495720d4867d6ce2\r\nLast test run against master is with 12.2.1.316 which also has the same test failures.\r\n\r\n### Example Project (If Possible)\r\n\r\nxamarin-macios/tests/bcl-tests/mscorlib\r\n\r\nmono2018-08 tests from bots didn't run on the 32 bit device. \r\n"},{"Id":"8736478238","Type":"IssuesEvent","CreatedAt":"2018-12-11T19:38:40","Actor":"GouriKumari","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5258","RelatedDescription":"Opened issue \"[XI]mscorlib test failures on 32 bit device with master\" (#5258) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Update System to Xamarin.iOS master build \r\n2. Execute mscorlib test on 32 bit device\r\n\r\n### Expected Behavior\r\nAll tests should pass\r\n\r\n### Actual Behavior\r\nThere are 6 failures.\r\n       [FAIL] DoubleFormatterTest.TestFormatStringsN1 :   DblFn1 #216\r\n\t[FAIL] DoubleFormatterTest.TestFormatStringsN1_Fixed :   DblFn1 #200\r\n\t[FAIL] DoubleFormatterTest.TestFormatStringsN2 :   DblFn2 #216\r\n\t[FAIL] DoubleTest.LongLongValueRoundtrip :   Expected string length 21 but was 1. Strings differ at index 0.\r\n\t[FAIL] Rfc2898DeriveBytesTest.ConstructorPasswordSaltLengthZero : An unexpected exception type was thrown\r\n\t[FAIL] Rfc2898DeriveBytesTest.ConstructorPasswordSaltLengthZeroIterations : An unexpected exception type was thrown\r\n\r\n### Environment\r\n\r\n```\r\nMono version: 5.18.0.219 (f919fb58c4e)  (2018-12-04 12:36:55 -05:00)\r\nXA version: 9.1.199.34 (HEAD/e9570566) \r\nXI version: 12.5.1.313 (master): 3621032d) \r\nXM version: 5.5.1.313 (master: 3621032d)  (2018-12-07 14:59:44 -05:00)\r\nXVS version: \r\nXS version: 7.8.0.1362 (fc834dd)  (2018-12-07 14:06:35 -05:00)\r\n[Device] Name: XQAiPad2b, Identifier: 0c3a0d1d60fbd11401f1d6ca33518e9a31bafab4\r\n32 bit device: iPad2\r\n```\r\n\r\n### Build Logs\r\n\r\nBuild Log+Instalation Log: http://xqa.blob.core.windows.net/gist/report-68c060035e62461db0fc9c020a3b5557.txt\r\nTest+DeviceLog: http://xqa.blob.core.windows.net/gist/mscorlib-ios06-12-190c3a0d1d60fbd11401f1d6ca33518e9a31bafab406-12-19-dc865843b8f54ef284be2448e1c78782.zip\r\n\r\nVerified Locally: https://gist.github.com/GouriKumari/498036ef7aef60dc495720d4867d6ce2\r\n\r\n### Example Project (If Possible)\r\n\r\nxamarin-macios/tests/bcl-tests/mscorlib\r\n\r\nmono2018-08 tests from bots didn't run on the 32 bit device. \r\n"},{"Id":"8736313224","Type":"PullRequestEvent","CreatedAt":"2018-12-11T19:11:30","Actor":"MSylvia","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5255","RelatedDescription":"Merged pull request \"Post branch version number bump\" (#5255) at xamarin/xamarin-macios","RelatedBody":"Bumping the version number after branching d16-0"},{"Id":"8736083818","Type":"IssuesEvent","CreatedAt":"2018-12-11T18:31:54","Actor":"GouriKumari","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5257","RelatedDescription":"Opened issue \"[XI]Mini test \"GShared\" failed with master build\" (#5257) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Install Xamarin.iOS master, 12.5.1.316\r\n2. Execute mini test on iOS or tvOS device\r\n\r\n### Expected Behavior\r\nAll tests should pass\r\n\r\n### Actual Behavior\r\n[FAIL] JitTests.GShared :   Expected: 0\r\n\r\n### Environment\r\nMono version: 5.18.0.219 (f919fb58c4e)  (2018-12-04 12:36:55 -05:00)\r\nXA version: 9.1.199.37 (HEAD/1158d33f) \r\nXI version: 12.5.1.316 (master): 4cdb87e5) \r\nXM version: 5.5.1.316 (master: 4cdb87e5)  (2018-12-10 14:22:31 -05:00)\r\nXVS version: \r\nXS version: 7.8.0.1370 (2c9a1dd)  (2018-12-10 12:42:19 -05:00)\r\n[Device] Name: XQAiPadPro3, Identifier: 17b66b8a60251f7c83b15482e5cf0da7469d98b3\r\n\r\n### Build Logs\r\n\r\nBuild Log + Installation Log:\r\nhttps://gist.github.com/GouriKumari/8f7296e1e4fc071f59a524acaf1f4c24\r\n\r\nTest Log: https://gist.github.com/GouriKumari/75201b02752469b5ba7fedaa810a6ab9\r\n\r\n### Example Project (If Possible)\r\n\r\nxamarin-macios/tests/mini/\r\n"},{"Id":"8735586402","Type":"PullRequestEvent","CreatedAt":"2018-12-11T17:08:38","Actor":"monojenkins","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5256","RelatedDescription":"Opened pull request \"[d16-0] [mmp] Add rpath during compile and not after via install_name_tool\" (#5256) at xamarin/xamarin-macios","RelatedBody":"- https://github.com/xamarin/xamarin-macios/issues/5243\r\n- https://github.com/xamarin/xamarin-macios/issues/5248\r\n- There were multiple issues where we'd run out of space and install_name_tool\r\nwould randomly fail. We can easily move these two to during initial\r\nclang and avoid those cases.\n\nBackport of #5251.\n\n/cc @rolfbjarne @chamons"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1072256672498966533","CreatedAt":"2018-12-10T22:28:06+00:00","UserScreenname":"xamarinhq","Text":"CarouselView is Here! Xamarin.Forms 4.0 now includes an entirely new point of view. ...as part of the upcoming rele… https://t.co/Vh8UMRM4ez","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":124,"FavoriteCount":59,"RawContent":null},{"Id":"1070425707770195968","CreatedAt":"2018-12-05T21:12:30+00:00","UserScreenname":"xamarinhq","Text":"Yesterday at Microsoft Connect(); 2018 we announced our plans &amp; preview for Xamarin.Forms 4.0. This post will give… https://t.co/oNXLJGsrQ8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":138,"FavoriteCount":71,"RawContent":null},{"Id":"1070075277101944833","CreatedAt":"2018-12-04T22:00:01+00:00","UserScreenname":"xamarinhq","Text":"Today, at #MSFTConnect 2018, we have several exciting announcements about brand new capabilities and foundational i… https://t.co/olEK9QjR1j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":38,"RawContent":null},{"Id":"1069721699225088008","CreatedAt":"2018-12-03T22:35:02+00:00","UserScreenname":"xamarinhq","Text":"Here's what we have coming up this month for #Xamarin and #dotNET Developer Events in December:… https://t.co/oAMbLqXh9f","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":18,"RawContent":null},{"Id":"1068601941339582469","CreatedAt":"2018-11-30T20:25:31+00:00","UserScreenname":"xamarinhq","Text":"Now announcing multi-targeting with Android Support Library v28. \n\n...but what is multi-targeting you ask? Well, no… https://t.co/oBJ1j9vP6P","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":96,"FavoriteCount":53,"RawContent":null},{"Id":"1067915081495846913","CreatedAt":"2018-11-28T22:56:10+00:00","UserScreenname":"xamarinhq","Text":"The Xamarin #Android team has been working hard on improving Build Performance &amp; Reliability in both #VS2017 v15.9… https://t.co/c4iSbZJDy9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":84,"FavoriteCount":45,"RawContent":null},{"Id":"1063457672048058371","CreatedAt":"2018-11-16T15:44:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing the release of Xamarin.Forms 3.4.0 w/ even more bug fixes and another new highly requested feature, an I… https://t.co/EJadLHYi73","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":180,"FavoriteCount":105,"RawContent":null},{"Id":"1063145593562902528","CreatedAt":"2018-11-15T19:03:56+00:00","UserScreenname":"xamarinhq","Text":"Build and deploy #ethereum smart contracts using the new @trufflesuite extension for #VSCode from @MSFTBlockchain… https://t.co/nEbiFUYaM2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":18,"RawContent":null},{"Id":"1062819180100100099","CreatedAt":"2018-11-14T21:26:53+00:00","UserScreenname":"xamarinhq","Text":"Want to get started w/ mobile dev using C# &amp; #Xamarin? We've got a Twitch Workshop for that.\n\nComing Friday, Nov 16… https://t.co/ce2vH9dC4t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":115,"FavoriteCount":61,"RawContent":null},{"Id":"1058039721652297729","CreatedAt":"2018-11-01T16:55:01+00:00","UserScreenname":"xamarinhq","Text":"Get all the links you need for the world-wide, community-run mobile dev engagements happening for the Xamarin &amp;… https://t.co/eiJXYtWfvG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":26,"RawContent":null},{"Id":"1053027600086552576","CreatedAt":"2018-10-18T20:58:38+00:00","UserScreenname":"xamarinhq","Text":"TY2 you &amp; the Xamarin.Forms team we've filled in some of the features you’ve told us are important to building your… https://t.co/lwqRjrIFEi","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":31,"RawContent":null},{"Id":"1052217100041945088","CreatedAt":"2018-10-16T15:18:00+00:00","UserScreenname":"xamarinhq","Text":"A full day of community-driven sessions on cross-platform mobile application development with Xamarin, DevOps with… https://t.co/07SVz6rgLT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":22,"RawContent":null},{"Id":"1050824055014744064","CreatedAt":"2018-10-12T19:02:32+00:00","UserScreenname":"xamarinhq","Text":"Now, in #VisualStudio 15.8, Dotfuscator Community can help protect your https://t.co/FGIvdxOrYa Apps at Runtime by… https://t.co/iPm1GjIrpS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":30,"RawContent":null},{"Id":"1050447051228631040","CreatedAt":"2018-10-11T18:04:28+00:00","UserScreenname":"xamarinhq","Text":"With Xamarin.Forms, the UI and app logic for your app resides in a single codebase and you get to use a single IDE… https://t.co/SMq0XwjtKL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":39,"RawContent":null},{"Id":"1047580523881799680","CreatedAt":"2018-10-03T20:13:54+00:00","UserScreenname":"xamarinhq","Text":"Do both types of testing with your Visual Studio App Center CI/CD pipeline - cover the Data Access Layer with unit… https://t.co/6y14u8p3lQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":34,"RawContent":null},{"Id":"1046875654631886850","CreatedAt":"2018-10-01T21:33:00+00:00","UserScreenname":"xamarinhq","Text":"Microsoft named a leader in 2018 analyst reports on mobile app development. Get complimentary access to reports fro… https://t.co/EWg450kHpI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":33,"RawContent":null},{"Id":"1041764665536196609","CreatedAt":"2018-09-17T19:03:45+00:00","UserScreenname":"xamarinhq","Text":"...released to NuGet today, Xamarin.Forms 3.2.0. We've kicked off another round of updates, and this time we tackle… https://t.co/zyFILHsEUu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":200,"FavoriteCount":112,"RawContent":null},{"Id":"1039264258511527936","CreatedAt":"2018-09-10T21:28:02+00:00","UserScreenname":"xamarinhq","Text":"Watch #dotNETConf Live! The 3-day virtual developer conference co-organized by the .NET community and Microsoft is… https://t.co/bM5JCj7M0h","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":56,"RawContent":null}]}},"RunOn":"2018-12-12T05:31:12.4990244Z","RunDurationInMilliseconds":4400}