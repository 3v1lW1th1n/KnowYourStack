{"Data":{"GitHub":{"Issues":[{"Id":"576696780","IsPullRequest":true,"CreatedAt":"2020-03-16T03:42:21","Actor":"dehghani-mehdi","Number":"2953","RawContent":null,"Title":"Fixed issue #2931","State":"closed","Body":"I just changed few characters in doc section.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2953)","Url":"https://github.com/dotnet/winforms/pull/2953","RelatedDescription":"Closed or merged PR \"Fixed issue #2931\" (#2953)"},{"Id":"578321989","IsPullRequest":true,"CreatedAt":"2020-03-16T02:42:02","Actor":"RussKie","Number":"2966","RawContent":null,"Title":"Add tests to enumerate all attribute decorations","State":"closed","Body":"To better reason about refactors and code cleanup capture API attribute decorations.\r\n\r\nPre-req for https://github.com/dotnet/winforms/pull/2892\r\n\r\n/cc: @hughbe \n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2966)","Url":"https://github.com/dotnet/winforms/pull/2966","RelatedDescription":"Closed or merged PR \"Add tests to enumerate all attribute decorations\" (#2966)"},{"Id":"581760017","IsPullRequest":true,"CreatedAt":"2020-03-16T00:47:48","Actor":"gpetrou","Number":"2977","RawContent":null,"Title":"Add MCN enum to Interop ComCtl32","State":"closed","Body":"## Proposed changes\r\n\r\n- Add MCN enum to Interop ComCtl32.\r\n- Remove MCN constants and replace their usages with MCN enum values.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2977)","Url":"https://github.com/dotnet/winforms/pull/2977","RelatedDescription":"Closed or merged PR \"Add MCN enum to Interop ComCtl32\" (#2977)"},{"Id":"581755253","IsPullRequest":true,"CreatedAt":"2020-03-16T00:30:20","Actor":"gpetrou","Number":"2976","RawContent":null,"Title":"Add HDN enum in Interop ComCtl32","State":"closed","Body":"## Proposed changes\r\n\r\n- Add HDN enum in Interop ComCtl32.\r\n- Remove HDN constants and replaces their usages with the above enum values.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2976)","Url":"https://github.com/dotnet/winforms/pull/2976","RelatedDescription":"Closed or merged PR \"Add HDN enum in Interop ComCtl32\" (#2976)"},{"Id":"579213503","IsPullRequest":true,"CreatedAt":"2020-03-15T23:52:10","Actor":"dotnet-maestro[bot]","Number":"2971","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200312.3\r\n- **Date Produced**: 3/12/2020 5:55 PM\r\n- **Commit**: 16d4350184cf362cd59807b589d1c93803025abc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20162.3\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20162.3\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2971)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/2971","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2971)"},{"Id":"581762691","IsPullRequest":true,"CreatedAt":"2020-03-15T17:53:35","Actor":"gpetrou","Number":"2978","RawContent":null,"Title":"Remove unused RichTextBoxConstants","State":"open","Body":"## Proposed changes\r\n\r\n- Remove unused RichTextBoxConstants.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2978)","Url":"https://github.com/dotnet/winforms/pull/2978","RelatedDescription":"Open PR \"Remove unused RichTextBoxConstants\" (#2978)"},{"Id":"581094207","IsPullRequest":true,"CreatedAt":"2020-03-14T07:54:33","Actor":"vladimir-krestov","Number":"2975","RawContent":null,"Title":"[Refactoring] Added protection for MonthCalendarAccessibleObject","State":"open","Body":"Added protection for `MonthCalendarAccessibleObject` against incorrect parameters of methods to avoid exceptions throwing\r\n\r\n- Related Issues #2912 and #2475\r\n- Related PR #2911\r\n\r\n## Proposed changes\r\n\r\n- Add `parentAccessibleObject` null condition for `GetCalendarCell` method to avoid `NullReferenceException` throwing when getting `rowIndex` value on 373 line (`MonthCalendar.MonthCalendarAccessibleObject.cs`)\r\n- Check SYSTEMTIME parameter value for `SysTimeToDateTime` method to get correct `DateTime` value (`DateTimePicker.cs`)\r\n- Add unit tests\r\n\r\n## Customer Impact\r\n\r\n- User apps won't crash in these methods when there are incorrect parameters\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Unit testing\r\n- Manual testing\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .NET Core SDK: 5.0.0-alpha.1.20072.3\r\n- Microsoft Windows [Version 10.0.18363.592]\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2975)","Url":"https://github.com/dotnet/winforms/pull/2975","RelatedDescription":"Open PR \"[Refactoring] Added protection for MonthCalendarAccessibleObject\" (#2975)"},{"Id":"580281118","IsPullRequest":false,"CreatedAt":"2020-03-12T23:34:47","Actor":"AraHaan","Number":"2974","RawContent":null,"Title":"[Forms Designer] The designer loader has not been initialized yet. You may only call this method after initialization error when trying to open forms.","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.200-preview-015002\r\n Commit:    b3dae24c3b\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19577\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.200-preview-015002\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.2\r\n  Commit:  916b5cba26\r\n\r\n.NET Core SDKs installed:\r\n  1.1.14 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.701 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100-preview1-014459 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.200-preview-015002 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0-preview1.19508.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview6-27804-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0-preview1.19506.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0-preview1.19506.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n<!-- Yes / No -->\r\nNo\r\n\r\n**Problem description:**\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\nForms when double clicked in latest preview of VS2019 16.5 Preview 5 seems to have issues initializing the Windows Forms Designer for .NET Core 3.1 applications (or at least the forms my application has).\r\n\r\nWhat is displayed is an error dialog that says: ``The designer loader has not been initialized yet. You may only call this method after initialization.``\r\n\r\n**Expected behavior:**\r\nThe Forms to show.\r\n\r\n**Minimal repro:**\r\nHere is an example form (I call it a ThemedForm as I try to theme it to some colors):\r\n\r\n```cs\r\n// Copyright (c) 2014-2020, Els_kom org.\r\n// https://github.com/Elskom/\r\n// All rights reserved.\r\n// license: MIT, see LICENSE for more details.\r\n\r\nnamespace Els_kom.Controls\r\n{\r\n    using System;\r\n    using System.Drawing;\r\n    using System.Drawing.Drawing2D;\r\n    using System.Windows.Forms;\r\n\r\n    internal class ThemedForm : Form\r\n    {\r\n        protected override void OnPaint(PaintEventArgs e)\r\n        {\r\n            // var g = e.Graphics;\r\n            // var fillRect = new Rectangle(0, 0, this.ClientSize.Width, this.ClientSize.Height);\r\n            // if (fillRect.Width > 0 && fillRect.Height > 0)\r\n            // {\r\n            //     using (var brush = new LinearGradientBrush(fillRect, Color.FromArgb(80, 80, 80), Color.FromArgb(40, 40, 40), LinearGradientMode.Vertical))\r\n            //     {\r\n            //         g.FillRectangle(brush, fillRect);\r\n            //     }\r\n            // }\r\n            base.OnPaint(e);\r\n        }\r\n\r\n        protected override void OnLoad(EventArgs e)\r\n        {\r\n            if (!this.DesignMode)\r\n            {\r\n                ShareXResources.Theme = ShareXTheme.GetPresets()[0];\r\n                ShareXResources.ApplyTheme(this);\r\n            }\r\n\r\n            base.OnLoad(e);\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\n```cs\r\n// Copyright (c) 2014-2020, Els_kom org.\r\n// https://github.com/Elskom/\r\n// All rights reserved.\r\n// license: MIT, see LICENSE for more details.\r\n\r\nnamespace Els_kom\r\n{\r\n    using System.Collections.Generic;\r\n    using System.Drawing;\r\n\r\n    public class ShareXTheme\r\n    {\r\n        public ShareXTheme()\r\n        {\r\n        }\r\n\r\n        public string Name { get; set; }\r\n\r\n        // [Editor(typeof(MyColorEditor), typeof(UITypeEditor))]\r\n        // [TypeConverter(typeof(MyColorConverter))]\r\n        public Color BackgroundColor { get; set; }\r\n\r\n        // [Editor(typeof(MyColorEditor), typeof(UITypeEditor))]\r\n        // [TypeConverter(typeof(MyColorConverter))]\r\n        public Color LightBackgroundColor { get; set; }\r\n\r\n        // [Editor(typeof(MyColorEditor), typeof(UITypeEditor))]\r\n        // [TypeConverter(typeof(MyColorConverter))]\r\n        public Color DarkBackgroundColor { get; set; }\r\n\r\n        // [Editor(typeof(MyColorEditor), typeof(UITypeEditor))]\r\n        // [TypeConverter(typeof(MyColorConverter))]\r\n        public Color TextColor { get; set; }\r\n\r\n        // [Editor(typeof(MyColorEditor), typeof(UITypeEditor))]\r\n        // [TypeConverter(typeof(MyColorConverter))]\r\n        public Color BorderColor { get; set; }\r\n\r\n        // [Editor(typeof(MyColorEditor), typeof(UITypeEditor))]\r\n        // [TypeConverter(typeof(MyColorConverter))]\r\n        public Color CheckerColor { get; set; }\r\n\r\n        // [Editor(typeof(MyColorEditor), typeof(UITypeEditor))]\r\n        // [TypeConverter(typeof(MyColorConverter))]\r\n        public Color CheckerColor2 { get; set; }\r\n\r\n        public int CheckerSize { get; set; } = 15;\r\n\r\n        // [Editor(typeof(MyColorEditor), typeof(UITypeEditor))]\r\n        // [TypeConverter(typeof(MyColorConverter))]\r\n        public Color LinkColor { get; set; }\r\n\r\n        // [Editor(typeof(MyColorEditor), typeof(UITypeEditor))]\r\n        // [TypeConverter(typeof(MyColorConverter))]\r\n        public Color MenuHighlightColor { get; set; }\r\n\r\n        // [Editor(typeof(MyColorEditor), typeof(UITypeEditor))]\r\n        // [TypeConverter(typeof(MyColorConverter))]\r\n        public Color MenuHighlightBorderColor { get; set; }\r\n\r\n        // [Editor(typeof(MyColorEditor), typeof(UITypeEditor))]\r\n        // [TypeConverter(typeof(MyColorConverter))]\r\n        public Color MenuBorderColor { get; set; }\r\n\r\n        // [Editor(typeof(MyColorEditor), typeof(UITypeEditor))]\r\n        // [TypeConverter(typeof(MyColorConverter))]\r\n        public Color MenuCheckBackgroundColor { get; set; }\r\n\r\n        // [Editor(typeof(MyColorEditor), typeof(UITypeEditor))]\r\n        // [TypeConverter(typeof(MyColorConverter))]\r\n        public Color SeparatorLightColor { get; set; }\r\n\r\n        // [Editor(typeof(MyColorEditor), typeof(UITypeEditor))]\r\n        // [TypeConverter(typeof(MyColorConverter))]\r\n        public Color SeparatorDarkColor { get; set; }\r\n\r\n        public static ShareXTheme GetDarkTheme()\r\n            => new ShareXTheme()\r\n            {\r\n                Name = \"Dark\",\r\n                BackgroundColor = Color.FromArgb(42, 47, 56),\r\n                LightBackgroundColor = Color.FromArgb(52, 57, 65),\r\n                DarkBackgroundColor = Color.FromArgb(28, 32, 38),\r\n                TextColor = Color.FromArgb(235, 235, 235),\r\n                BorderColor = Color.FromArgb(28, 32, 38),\r\n                CheckerColor = Color.FromArgb(60, 60, 60),\r\n                CheckerColor2 = Color.FromArgb(50, 50, 50),\r\n                CheckerSize = 15,\r\n                LinkColor = Color.FromArgb(166, 212, 255),\r\n                MenuHighlightColor = Color.FromArgb(30, 34, 40),\r\n                MenuHighlightBorderColor = Color.FromArgb(116, 129, 152),\r\n                MenuBorderColor = Color.FromArgb(22, 26, 31),\r\n                MenuCheckBackgroundColor = Color.FromArgb(56, 64, 75),\r\n                SeparatorLightColor = Color.FromArgb(56, 64, 75),\r\n                SeparatorDarkColor = Color.FromArgb(22, 26, 31),\r\n            };\r\n\r\n        public static ShareXTheme GetLightTheme()\r\n            => new ShareXTheme()\r\n            {\r\n                Name = \"Light\",\r\n                BackgroundColor = Color.FromArgb(242, 242, 242),\r\n                LightBackgroundColor = Color.FromArgb(247, 247, 247),\r\n                DarkBackgroundColor = Color.FromArgb(235, 235, 235),\r\n                TextColor = Color.FromArgb(69, 69, 69),\r\n                BorderColor = Color.FromArgb(201, 201, 201),\r\n                CheckerColor = Color.FromArgb(60, 60, 60),\r\n                CheckerColor2 = Color.FromArgb(50, 50, 50),\r\n                CheckerSize = 15,\r\n                LinkColor = Color.FromArgb(166, 212, 255),\r\n                MenuHighlightColor = Color.FromArgb(247, 247, 247),\r\n                MenuHighlightBorderColor = Color.FromArgb(96, 143, 226),\r\n                MenuBorderColor = Color.FromArgb(201, 201, 201),\r\n                MenuCheckBackgroundColor = Color.FromArgb(225, 233, 244),\r\n                SeparatorLightColor = Color.FromArgb(253, 253, 253),\r\n                SeparatorDarkColor = Color.FromArgb(189, 189, 189),\r\n            };\r\n\r\n        public static List<ShareXTheme> GetPresets()\r\n            => new List<ShareXTheme>() { GetDarkTheme(), GetLightTheme() };\r\n\r\n        public override string ToString()\r\n            => this.Name;\r\n    }\r\n}\r\n```\r\n\r\n```cs\r\n// Copyright (c) 2014-2020, Els_kom org.\r\n// https://github.com/Elskom/\r\n// All rights reserved.\r\n// license: MIT, see LICENSE for more details.\r\n\r\nnamespace Els_kom\r\n{\r\n    using System.Collections.Generic;\r\n    using System.Diagnostics.CodeAnalysis;\r\n    using System.Drawing;\r\n    using System.Windows.Forms;\r\n\r\n    public static class ShareXResources\r\n    {\r\n        public static Icon Icon => Icons.FormIcon;\r\n\r\n        public static ShareXTheme Theme { get; set; } = new ShareXTheme();\r\n\r\n        public static void ApplyTheme(Form form, bool setIcon = true)\r\n        {\r\n            if (setIcon)\r\n            {\r\n                form.Icon = Icon;\r\n            }\r\n\r\n            // if (ExperimentalDarkTheme)\r\n            // {\r\n            ApplyDarkThemeToControl(form);\r\n\r\n            if (form.IsHandleCreated)\r\n            {\r\n                NativeMethods.UseImmersiveDarkMode(form.Handle, true);\r\n            }\r\n            else\r\n            {\r\n                form.HandleCreated += (s, e) => NativeMethods.UseImmersiveDarkMode(form.Handle, true);\r\n            }\r\n\r\n            // }\r\n        }\r\n\r\n        private static void ApplyDarkThemeToControl(Control control)\r\n        {\r\n            // capture label in a separate switch. This is a bit hacky.\r\n            switch (control)\r\n            {\r\n                case Label lbl:\r\n                    lbl.BackColor = Color.Transparent;\r\n                    return;\r\n            }\r\n\r\n            switch (control)\r\n            {\r\n                case CheckBox cb when cb.Appearance == Appearance.Button:\r\n                    cb.FlatStyle = FlatStyle.Flat;\r\n                    cb.FlatAppearance.BorderColor = Theme.BorderColor;\r\n                    cb.ForeColor = Theme.TextColor;\r\n                    cb.BackColor = Theme.LightBackgroundColor;\r\n                    return;\r\n                case ComboBox cb:\r\n                    cb.FlatStyle = FlatStyle.Flat;\r\n                    cb.ForeColor = Theme.TextColor;\r\n                    cb.BackColor = Theme.LightBackgroundColor;\r\n                    return;\r\n                case ListBox lb:\r\n                    lb.ForeColor = Theme.TextColor;\r\n                    lb.BackColor = Theme.LightBackgroundColor;\r\n                    return;\r\n                case SplitContainer sc:\r\n                    sc.Panel1.BackColor = Theme.BackgroundColor;\r\n                    sc.Panel2.BackColor = Theme.BackgroundColor;\r\n                    break;\r\n                case PropertyGrid pg:\r\n                    pg.CategoryForeColor = Theme.TextColor;\r\n                    pg.CategorySplitterColor = Theme.BackgroundColor;\r\n                    pg.LineColor = Theme.BackgroundColor;\r\n                    pg.SelectedItemWithFocusForeColor = Theme.BackgroundColor;\r\n                    pg.SelectedItemWithFocusBackColor = Theme.TextColor;\r\n                    pg.ViewForeColor = Theme.TextColor;\r\n                    pg.ViewBackColor = Theme.LightBackgroundColor;\r\n                    pg.ViewBorderColor = Theme.BorderColor;\r\n                    pg.HelpForeColor = Theme.TextColor;\r\n                    pg.HelpBackColor = Theme.BackgroundColor;\r\n                    pg.HelpBorderColor = Theme.BorderColor;\r\n                    return;\r\n                case DataGridView dgv:\r\n                    dgv.BackgroundColor = Theme.LightBackgroundColor;\r\n                    dgv.GridColor = Theme.BorderColor;\r\n                    dgv.DefaultCellStyle.BackColor = Theme.LightBackgroundColor;\r\n                    dgv.DefaultCellStyle.SelectionBackColor = Theme.LightBackgroundColor;\r\n                    dgv.DefaultCellStyle.ForeColor = Theme.TextColor;\r\n                    dgv.DefaultCellStyle.SelectionForeColor = Theme.TextColor;\r\n                    dgv.ColumnHeadersDefaultCellStyle.BackColor = Theme.BackgroundColor;\r\n                    dgv.ColumnHeadersDefaultCellStyle.SelectionBackColor = Theme.BackgroundColor;\r\n                    dgv.ColumnHeadersDefaultCellStyle.ForeColor = Theme.TextColor;\r\n                    dgv.ColumnHeadersDefaultCellStyle.SelectionForeColor = Theme.TextColor;\r\n                    dgv.EnableHeadersVisualStyles = false;\r\n                    break;\r\n                case LinkLabel ll:\r\n                    ll.LinkColor = Theme.LinkColor;\r\n                    break;\r\n            }\r\n\r\n            control.ForeColor = Theme.TextColor;\r\n            control.BackColor = Theme.BackgroundColor;\r\n\r\n            foreach (Control child in control.Controls)\r\n            {\r\n                ApplyDarkThemeToControl(child);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\n```cs\r\n// Copyright (c) 2014-2020, Els_kom org.\r\n// https://github.com/Elskom/\r\n// All rights reserved.\r\n// license: MIT, see LICENSE for more details.\r\n\r\nnamespace Els_kom\r\n{\r\n    using System;\r\n    using System.Drawing;\r\n    using System.Runtime.InteropServices;\r\n    using System.Windows.Forms;\r\n\r\n    internal static class NativeMethods\r\n    {\r\n        private static readonly Version OSVersion = Environment.OSVersion.Version;\r\n\r\n        public enum DwmWindowAttribute : uint\r\n        {\r\n            /// <summary>\r\n            /// Use with DwmGetWindowAttribute. Discovers whether non-client rendering is enabled. The retrieved value is of type BOOL. TRUE if non-client rendering is enabled; otherwise, FALSE.\r\n            /// </summary>\r\n            DWMWA_NCRENDERING_ENABLED = 1,\r\n\r\n            /// <summary>\r\n            /// Use with DwmSetWindowAttribute. Sets the non-client rendering policy. The pvAttribute parameter points to a value from the DWMNCRENDERINGPOLICY enumeration.\r\n            /// </summary>\r\n            DWMWA_NCRENDERING_POLICY,\r\n\r\n            /// <summary>\r\n            /// Use with DwmSetWindowAttribute. Enables or forcibly disables DWM transitions. The pvAttribute parameter points to a value of TRUE to disable transitions or FALSE to enable transitions.\r\n            /// </summary>\r\n            DWMWA_TRANSITIONS_FORCEDISABLED,\r\n\r\n            /// <summary>\r\n            /// Use with DwmSetWindowAttribute. Enables content rendered in the non-client area to be visible on the frame drawn by DWM. The pvAttribute parameter points to a value of TRUE to enable content rendered in the non-client area to be visible on the frame; otherwise, it points to FALSE.\r\n            /// </summary>\r\n            DWMWA_ALLOW_NCPAINT,\r\n\r\n            /// <summary>\r\n            /// Use with DwmGetWindowAttribute. Retrieves the bounds of the caption button area in the window-relative space. The retrieved value is of type RECT.\r\n            /// </summary>\r\n            DWMWA_CAPTION_BUTTON_BOUNDS,\r\n\r\n            /// <summary>\r\n            /// Use with DwmSetWindowAttribute. Specifies whether non-client content is right-to-left (RTL) mirrored. The pvAttribute parameter points to a value of TRUE if the non-client content is right-to-left (RTL) mirrored; otherwise, it points to FALSE.\r\n            /// </summary>\r\n            DWMWA_NONCLIENT_RTL_LAYOUT,\r\n\r\n            /// <summary>\r\n            /// Use with DwmSetWindowAttribute. Forces the window to display an iconic thumbnail or peek representation (a static bitmap), even if a live or snapshot representation of the window is available. This value normally is set during a window's creation and not changed throughout the window's lifetime. Some scenarios, however, might require the value to change over time. The pvAttribute parameter points to a value of TRUE to require a iconic thumbnail or peek representation; otherwise, it points to FALSE.\r\n            /// </summary>\r\n            DWMWA_FORCE_ICONIC_REPRESENTATION,\r\n\r\n            /// <summary>\r\n            /// Use with DwmSetWindowAttribute. Sets how Flip3D treats the window. The pvAttribute parameter points to a value from the DWMFLIP3DWINDOWPOLICY enumeration.\r\n            /// </summary>\r\n            DWMWA_FLIP3D_POLICY,\r\n\r\n            /// <summary>\r\n            /// Use with DwmGetWindowAttribute. Retrieves the extended frame bounds rectangle in screen space. The retrieved value is of type RECT.\r\n            /// </summary>\r\n            DWMWA_EXTENDED_FRAME_BOUNDS,\r\n\r\n            /// <summary>\r\n            /// Use with DwmSetWindowAttribute. The window will provide a bitmap for use by DWM as an iconic thumbnail or peek representation (a static bitmap) for the window. DWMWA_HAS_ICONIC_BITMAP can be specified with DWMWA_FORCE_ICONIC_REPRESENTATION. DWMWA_HAS_ICONIC_BITMAP normally is set during a window's creation and not changed throughout the window's lifetime. Some scenarios, however, might require the value to change over time. The pvAttribute parameter points to a value of TRUE to inform DWM that the window will provide an iconic thumbnail or peek representation; otherwise, it points to FALSE.\r\n            /// </summary>\r\n            DWMWA_HAS_ICONIC_BITMAP,\r\n\r\n            /// <summary>\r\n            /// Use with DwmSetWindowAttribute. Do not show peek preview for the window. The peek view shows a full-sized preview of the window when the mouse hovers over the window's thumbnail in the taskbar. If this attribute is set, hovering the mouse pointer over the window's thumbnail dismisses peek (in case another window in the group has a peek preview showing). The pvAttribute parameter points to a value of TRUE to prevent peek functionality or FALSE to allow it.\r\n            /// </summary>\r\n            DWMWA_DISALLOW_PEEK,\r\n\r\n            /// <summary>\r\n            /// Use with DwmSetWindowAttribute. Prevents a window from fading to a glass sheet when peek is invoked. The pvAttribute parameter points to a value of TRUE to prevent the window from fading during another window's peek or FALSE for normal behavior.\r\n            /// </summary>\r\n            DWMWA_EXCLUDED_FROM_PEEK,\r\n\r\n            /// <summary>\r\n            /// Use with DwmSetWindowAttribute. Cloaks the window such that it is not visible to the user. The window is still composed by DWM.\r\n            /// </summary>\r\n            DWMWA_CLOAK,\r\n\r\n            /// <summary>\r\n            /// Use with DwmGetWindowAttribute.\r\n            /// </summary>\r\n            DWMWA_CLOAKED,\r\n\r\n            /// <summary>\r\n            /// Use with DwmSetWindowAttribute. Freeze the window's thumbnail image with its current visuals. Do no further live updates on the thumbnail image to match the window's contents.\r\n            /// </summary>\r\n            DWMWA_FREEZE_REPRESENTATION,\r\n\r\n            /// <summary>\r\n            /// The maximum recognized DWMWINDOWATTRIBUTE value, used for validation purposes.\r\n            /// </summary>\r\n            DWMWA_LAST,\r\n\r\n            // Undocumented, available since October 2018 update (build 17763)\r\n            DWMWA_USE_IMMERSIVE_DARK_MODE = 19,\r\n        }\r\n\r\n        [DllImport(\"dwmapi.dll\")]\r\n        public static extern int DwmSetWindowAttribute(IntPtr hwnd, int attr, ref int attrValue, int attrSize);\r\n\r\n        public static bool UseImmersiveDarkMode(IntPtr handle, bool enabled)\r\n        {\r\n            if (IsWindows10OrGreater(17763))\r\n            {\r\n                // try\r\n                // {\r\n                var useImmersiveDarkMode = enabled ? 1 : 0;\r\n                var result = DwmSetWindowAttribute(handle, (int)DwmWindowAttribute.DWMWA_USE_IMMERSIVE_DARK_MODE, ref useImmersiveDarkMode, sizeof(int));\r\n                return result == 0;\r\n\r\n                // }\r\n                // catch (Exception e)\r\n                // {\r\n                //     DebugHelper.WriteException(e);\r\n                // }\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        private static bool IsWindows10OrGreater(int build = -1)\r\n            => OSVersion.Major >= 10 && OSVersion.Build >= build;\r\n    }\r\n}\r\n\r\n```","Url":"https://github.com/dotnet/winforms/issues/2974","RelatedDescription":"Open issue \"[Forms Designer] The designer loader has not been initialized yet. You may only call this method after initialization error when trying to open forms.\" (#2974)"},{"Id":"579787085","IsPullRequest":false,"CreatedAt":"2020-03-12T08:58:53","Actor":"hughbe","Number":"2973","RawContent":null,"Title":"Adding a ToolStripDropDown child to ToolStripPanel throws NRE","State":"open","Body":"```cs\r\n[WinFormsFact]\r\npublic void Test()\r\n{\r\n    using var control = new ToolStripDropDown\r\n    {\r\n        TopLevel = false\r\n    };\r\n    using var parent = new ToolStripPanel();\r\n    parent.Controls.Add(control);\r\n}\r\n```\r\n\r\n```\r\n  Error Message:\r\n   System.NullReferenceException : Object reference not set to an instance of an object.\r\n  Stack Trace:\r\n     at System.Windows.Forms.Layout.FlowLayout.xLayoutRow(ContainerProxy containerProxy, ElementProxy elementProxy, Int32 startIndex, Int32 endIndex, Rectangle rowBounds, Int32& breakIndex, Boolean measureOnly)\r\n   at System.Windows.Forms.Layout.FlowLayout.xLayout(IArrangedElement container, Rectangle displayRect, Boolean measureOnly)\r\n   at System.Windows.Forms.Layout.FlowLayout.GetPreferredSize(IArrangedElement container, Size proposedConstraints)\r\n   at System.Windows.Forms.ToolStripPanelRow.System.Windows.Forms.Layout.IArrangedElement.GetPreferredSize(Size constrainingSize)\r\n   at System.Windows.Forms.Layout.FlowLayout.VerticalElementProxy.GetPreferredSize(Size proposedSize)\r\n   at System.Windows.Forms.Layout.FlowLayout.xLayoutRow(ContainerProxy containerProxy, ElementProxy elementProxy, Int32 startIndex, Int32 endIndex, Rectangle rowBounds, Int32& breakIndex, Boolean measureOnly)\r\n   at System.Windows.Forms.Layout.FlowLayout.xLayout(IArrangedElement container, Rectangle displayRect, Boolean measureOnly)\r\n   at System.Windows.Forms.Layout.FlowLayout.LayoutCore(IArrangedElement container, LayoutEventArgs args)\r\n   at System.Windows.Forms.Layout.LayoutEngine.Layout(Object container, LayoutEventArgs layoutEventArgs)\r\n   at System.Windows.Forms.Control.OnLayout(LayoutEventArgs levent)\r\n   at System.Windows.Forms.ToolStripPanel.OnLayout(LayoutEventArgs e)\r\n   at System.Windows.Forms.Control.PerformLayout(LayoutEventArgs args)\r\n   at System.Windows.Forms.Control.PerformLayout()\r\n   at System.Windows.Forms.Control.ResumeLayout(Boolean performLayout)\r\n   at System.Windows.Forms.Control.SetBoundsCore(Int32 x, Int32 y, Int32 width, Int32 height, BoundsSpecified specified)\r\n   at System.Windows.Forms.ToolStrip.SetBoundsCore(Int32 x, Int32 y, Int32 width, Int32 height, BoundsSpecified specified)\r\n   at System.Windows.Forms.ToolStripDropDown.SetBoundsCore(Int32 x, Int32 y, Int32 width, Int32 height, BoundsSpecified specified)\r\n   at System.Windows.Forms.Control.SetBounds(Int32 x, Int32 y, Int32 width, Int32 height, BoundsSpecified specified)\r\n   at System.Windows.Forms.Control.set_Size(Size value)\r\n   at System.Windows.Forms.ToolStripDropDown.AdjustSize()\r\n   at System.Windows.Forms.ToolStripDropDown.OnLayout(LayoutEventArgs e)\r\n   at System.Windows.Forms.Control.PerformLayout(LayoutEventArgs args)\r\n   at System.Windows.Forms.Control.PerformLayout()\r\n   at System.Windows.Forms.Control.ResumeLayout(Boolean performLayout)\r\n   at System.Windows.Forms.Layout.LayoutTransaction.Dispose()\r\n   at System.Windows.Forms.ToolStripPanel.ToolStripPanelControlCollection.AddInternal(Control value)\r\n   at System.Windows.Forms.Tests.ControlTests.T() in C:\\Users\\hughbe\\source\\repos\\ConsoleApp\\ControlTests.cs:line 42\r\n```","Url":"https://github.com/dotnet/winforms/issues/2973","RelatedDescription":"Open issue \"Adding a ToolStripDropDown child to ToolStripPanel throws NRE\" (#2973)"},{"Id":"579530689","IsPullRequest":true,"CreatedAt":"2020-03-11T20:36:06","Actor":"hughbe","Number":"2972","RawContent":null,"Title":"Add ToolStripDropDown and related tests","State":"open","Body":"## Proposed Changes\r\n- Add ToolStripDropDown and related tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2972)","Url":"https://github.com/dotnet/winforms/pull/2972","RelatedDescription":"Open PR \"Add ToolStripDropDown and related tests\" (#2972)"},{"Id":"579033836","IsPullRequest":false,"CreatedAt":"2020-03-11T06:15:48","Actor":"RussKie","Number":"2970","RawContent":null,"Title":"`System.AccessViolationException` in `ListViewGroup_Footer_GetGroupInfo_Success` tests","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n\r\nhttps://github.com/dotnet/winforms/pull/2654 introduced tests for `ListViewGroup.Footer` that are failing on CI agents with the following stack:\r\n```\r\nFatal error. System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.\r\n   at Interop+User32.CallWindowProcW(IntPtr, IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.CallWindowProcW(IntPtr, IntPtr, WM, IntPtr, IntPtr)\r\n   at System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.ListView.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.OnMessage(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.NativeWindow.Callback(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW[[Interop+ComCtl32+LVGROUPW, System.Windows.Forms.Primitives, Version=42.42.42.42, Culture=neutral, PublicKeyToken=b77a5c561934e089]](IntPtr, WM, IntPtr, LVGROUPW ByRef)\r\n   at System.Windows.Forms.Tests.ListViewTests+<>c.<ListView_Handle_GetWithGroups_Success>b__62_0()\r\n   at System.RuntimeMethodHandle.InvokeMethod(System.Object, System.Object[], System.Signature, Boolean, Boolean)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)\r\n   at System.Reflection.MethodBase.Invoke(System.Object, System.Object[])\r\n   at Microsoft.DotNet.RemoteExecutor.Program.Main(System.String[])\r\n\r\nFatal error. System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.\r\n   at Interop+User32.CallWindowProcW(IntPtr, IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.CallWindowProcW(IntPtr, IntPtr, WM, IntPtr, IntPtr)\r\n   at System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.ListView.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.OnMessage(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.NativeWindow.Callback(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW[[Interop+ComCtl32+LVGROUPW, System.Windows.Forms.Primitives, Version=42.42.42.42, Culture=neutral, PublicKeyToken=b77a5c561934e089]](IntPtr, WM, IntPtr, LVGROUPW ByRef)\r\n   at System.Windows.Forms.Tests.ListViewGroupTests+<>c.<ListViewGroup_Footer_GetGroupInfo_Success>b__10_0()\r\n   at System.RuntimeMethodHandle.InvokeMethod(System.Object, System.Object[], System.Signature, Boolean, Boolean)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)\r\n   at System.Reflection.MethodBase.Invoke(System.Object, System.Object[])\r\n   at Microsoft.DotNet.RemoteExecutor.Program.Main(System.String[])\r\n\r\nFatal error. System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.\r\n   at Interop+User32.CallWindowProcW(IntPtr, IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.CallWindowProcW(IntPtr, IntPtr, WM, IntPtr, IntPtr)\r\n   at System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.ListView.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.OnMessage(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.NativeWindow.Callback(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW[[Interop+ComCtl32+LVGROUPW, System.Windows.Forms.Primitives, Version=42.42.42.42, Culture=neutral, PublicKeyToken=b77a5c561934e089]](IntPtr, WM, IntPtr, LVGROUPW ByRef)\r\n   at System.Windows.Forms.Tests.ListViewGroupTests+<>c.<ListView_FooterAlignment_GetGroupInfo_Success>b__16_0(System.String, System.String, System.String)\r\n   at System.RuntimeMethodHandle.InvokeMethod(System.Object, System.Object[], System.Signature, Boolean, Boolean)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)\r\n   at System.Reflection.MethodBase.Invoke(System.Object, System.Object[])\r\n   at Microsoft.DotNet.RemoteExecutor.Program.Main(System.String[])\r\n\r\nFatal error. System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.\r\n   at Interop+User32.CallWindowProcW(IntPtr, IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.CallWindowProcW(IntPtr, IntPtr, WM, IntPtr, IntPtr)\r\n   at System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.ListView.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.OnMessage(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.NativeWindow.Callback(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW[[Interop+ComCtl32+LVGROUPW, System.Windows.Forms.Primitives, Version=42.42.42.42, Culture=neutral, PublicKeyToken=b77a5c561934e089]](IntPtr, WM, IntPtr, LVGROUPW ByRef)\r\n   at System.Windows.Forms.Tests.ListViewGroupTests+<>c.<ListView_FooterAlignment_GetGroupInfo_Success>b__16_0(System.String, System.String, System.String)\r\n   at System.RuntimeMethodHandle.InvokeMethod(System.Object, System.Object[], System.Signature, Boolean, Boolean)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)\r\n   at System.Reflection.MethodBase.Invoke(System.Object, System.Object[])\r\n   at Microsoft.DotNet.RemoteExecutor.Program.Main(System.String[])\r\n\r\nFatal error. System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.\r\n   at Interop+User32.CallWindowProcW(IntPtr, IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.CallWindowProcW(IntPtr, IntPtr, WM, IntPtr, IntPtr)\r\n   at System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.ListView.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.OnMessage(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.NativeWindow.Callback(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW[[Interop+ComCtl32+LVGROUPW, System.Windows.Forms.Primitives, Version=42.42.42.42, Culture=neutral, PublicKeyToken=b77a5c561934e089]](IntPtr, WM, IntPtr, LVGROUPW ByRef)\r\n   at System.Windows.Forms.Tests.ListViewGroupTests+<>c.<ListView_FooterAlignment_GetGroupInfo_Success>b__16_0(System.String, System.String, System.String)\r\n   at System.RuntimeMethodHandle.InvokeMethod(System.Object, System.Object[], System.Signature, Boolean, Boolean)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)\r\n   at System.Reflection.MethodBase.Invoke(System.Object, System.Object[])\r\n   at Microsoft.DotNet.RemoteExecutor.Program.Main(System.String[])\r\n```\r\n\r\n**Expected behavior:**\r\n\r\n1. Failing tests are reported and builds are marked as failed\r\n2. `ListView_FooterAlignment_GetGroupInfo_Success` tests pass\r\n\r\n/cc: @hughbe ","Url":"https://github.com/dotnet/winforms/issues/2970","RelatedDescription":"Open issue \"`System.AccessViolationException` in `ListViewGroup_Footer_GetGroupInfo_Success` tests\" (#2970)"},{"Id":"578510268","IsPullRequest":true,"CreatedAt":"2020-03-11T01:36:22","Actor":"v-zbsail","Number":"2967","RawContent":null,"Title":"LOC CHECKIN | dotnet/winforms master | 20200310","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n- Localizaation update\r\n- \r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2967)","Url":"https://github.com/dotnet/winforms/pull/2967","RelatedDescription":"Closed or merged PR \"LOC CHECKIN | dotnet/winforms master | 20200310\" (#2967)"},{"Id":"578835955","IsPullRequest":false,"CreatedAt":"2020-03-10T20:17:07","Actor":"tbambuch","Number":"2969","RawContent":null,"Title":"DPIAwareness: ArgumentException when opening a ContextMenuStrip","State":"open","Body":"* .NET Core Version: 3.1.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Problem description:**\r\n\r\nWe are experiencing the following crashreports from some users when they open a contextMenu. All reports originate from Windows10 (version 1607 - build 14393 or later), but we are not able to simulate it on our side.\r\n\r\n```\r\nSystem.Windows.Forms.System.ArgumentException: dpiContext (Parameter 'DPI_AWARENESS_CONTEXT_UNSPECIFIED')\r\n    at System.Windows.Forms.CommonUnsafeNativeMethods.TrySetThreadDpiAwarenessContext\r\n    at System.Windows.Forms.DpiHelper+DpiAwarenessScope.Dispose\r\n    at System.Windows.Forms.ToolStripManager+ModalMenuFilter.PreFilterMessage\r\n    at System.Windows.Forms.Application+ThreadContext.ProcessFilters\r\n    at System.Windows.Forms.Application+ThreadContext.PreTranslateMessage\r\n    at System.Windows.Forms.Application+ThreadContext.System.Windows.Forms.UnsafeNativeMethods.IMsoComponent.FPreTranslateMessage\r\n    at System.Windows.Forms.Application+ComponentManager.System.Windows.Forms.UnsafeNativeMethods.IMsoComponentManager.FPushMessageLoop\r\n    at System.Windows.Forms.Application+ThreadContext.RunMessageLoopInner\r\n    at System.Windows.Forms.Application+ThreadContext.RunMessageLoop\r\n    at System.Windows.Forms.Application.Run\r\n```\r\n\r\nour app is PerMonitorV2 aware as defined in app.manifest:\r\n\r\n```\r\n  <asmv3:application>\r\n    <asmv3:windowsSettings xmlns=\"http://schemas.microsoft.com/SMI/2005/WindowsSettings\">\r\n\t<dpiAware xmlns=\"http://schemas.microsoft.com/SMI/2005/WindowsSettings\">true/PM</dpiAware>\r\n\t<dpiAwareness xmlns=\"http://schemas.microsoft.com/SMI/2016/WindowsSettings\">PerMonitorV2, PerMonitor</dpiAwareness>\r\n    </asmv3:windowsSettings>\r\n  </asmv3:application>\r\n```\r\n","Url":"https://github.com/dotnet/winforms/issues/2969","RelatedDescription":"Open issue \"DPIAwareness: ArgumentException when opening a ContextMenuStrip\" (#2969)"},{"Id":"578529875","IsPullRequest":true,"CreatedAt":"2020-03-10T12:21:27","Actor":"dotnet-maestro[bot]","Number":"2968","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200309.2\r\n- **Date Produced**: 3/9/2020 3:47 PM\r\n- **Commit**: d9a664e151f9973f1a3679f48d24c3407d77c9b2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20159.2\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20159.2\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2968)","Url":"https://github.com/dotnet/winforms/pull/2968","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2968)"},{"Id":"578271793","IsPullRequest":false,"CreatedAt":"2020-03-10T00:57:49","Actor":"Tanya-Solyanik","Number":"2965","RawContent":null,"Title":"DataGridView's scrollbars shouldn't include their control type in their accessible names","State":"open","Body":"**Steps to reproduce:**\r\n\r\n1. Create a new WinForms .NET 4.8 app in VS.\r\n2. Add a DataGridView which shows a horizontal scroll bar when run.\r\n3. Run the app and have the Accessibility Insights for Windows tool examine the UI.\r\n\r\n**Result**: The accessible name of the scrollbar is \"Horizontal Scroll Bar\", and so given that this includes the same (case insensitive) text as its localized control type of \"scroll bar\", Accessibility Insights reports this as an error.\r\n\r\n**Expected**: A control shouldn't include its control type in its accessible name, and so the accessible name should be \"Horizontal\". (It's a similar case for the vertical scroll bar too.)\r\n\r\nfrom @GuyBark: I spent a while trying to figure out how the accessible name is ending up as \"Horizontal Scroll Bar\". In https://referencesource.microsoft.com/#System.Windows.Forms/winforms/Managed/System/WinForms/DataGridView.cs, it sets this.horizScrollBar.AccessibleName to SR.GetString(SR.DataGridView_AccHorizontalScrollBarAccName), and in the code I found, that's \"Horizontal\" as it should be. But it seems that by the time a UIA client gets supplied the name, its \"Horizontal Scroll Bar\".\r\n\r\nported from AzDo 1071939","Url":"https://github.com/dotnet/winforms/issues/2965","RelatedDescription":"Open issue \"DataGridView's scrollbars shouldn't include their control type in their accessible names\" (#2965)"},{"Id":"578251233","IsPullRequest":false,"CreatedAt":"2020-03-09T23:42:48","Actor":"Tanya-Solyanik","Number":"2964","RawContent":null,"Title":"Accessibility: WinForms TreeView does not support providing per-TreeNode information relating to the TreeView.ImageList icons shown on the nodes","State":"open","Body":"**Steps to reproduce:**\r\n\r\n1. Create a new WinForms app with .NET Framework 4.8, and add a Treeview with some items.\r\n2. Use TreeView.ImageList to have a variety of icons shown visually on the nodes.\r\n3. Run the app, and run the Narrator screen reader to have information about the icons announced.\r\n\r\n**Result:** \r\nThe announcement includes no details of the icon, and so if the icon visually conveys important information to the app's sighted customers, then customers who can't leverage the icons visually are blocked from accessing that information.\r\n\r\n**Expected:** \r\nThe WinForms Treeview/TreeNode provides some practical way for an app builder to expose the icon-related information pro grammatically through UIA for a screen reader to announce.\r\n\r\nPorted from VSO 1077919","Url":"https://github.com/dotnet/winforms/issues/2964","RelatedDescription":"Open issue \"Accessibility: WinForms TreeView does not support providing per-TreeNode information relating to the TreeView.ImageList icons shown on the nodes\" (#2964)"},{"Id":"576792312","IsPullRequest":true,"CreatedAt":"2020-03-09T23:06:55","Actor":"gpetrou","Number":"2955","RawContent":null,"Title":"Move LresultFromObject to Interop Oleacc","State":"closed","Body":"## Proposed changes\r\n\r\n- Move LresultFromObject to Interop Oleacc.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2955)","Url":"https://github.com/dotnet/winforms/pull/2955","RelatedDescription":"Closed or merged PR \"Move LresultFromObject to Interop Oleacc\" (#2955)"},{"Id":"577855335","IsPullRequest":true,"CreatedAt":"2020-03-09T12:16:35","Actor":"dotnet-maestro[bot]","Number":"2963","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200308.2\r\n- **Date Produced**: 3/8/2020 11:45 PM\r\n- **Commit**: 527179abfbb5cd738035c4ac2d2566c571ce85db\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20158.2\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20158.2\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2963)","Url":"https://github.com/dotnet/winforms/pull/2963","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2963)"},{"Id":"576786908","IsPullRequest":true,"CreatedAt":"2020-03-09T01:57:00","Actor":"gpetrou","Number":"2954","RawContent":null,"Title":"Move GetWindowDC to Interop User32","State":"closed","Body":"## Proposed changes\r\n\r\n- Move GetWindowDC to Interop User32.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2954)","Url":"https://github.com/dotnet/winforms/pull/2954","RelatedDescription":"Closed or merged PR \"Move GetWindowDC to Interop User32\" (#2954)"},{"Id":"577550244","IsPullRequest":true,"CreatedAt":"2020-03-08T19:17:04","Actor":"hughbe","Number":"2962","RawContent":null,"Title":"Add WebBrowser tests and fix bugs","State":"open","Body":"## Proposed Changes\r\n- Add WebBrowser tests and fix bugs\r\n\r\nFixes #2961\r\nFixes #2960\r\nFixes #2959 \r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2962)","Url":"https://github.com/dotnet/winforms/pull/2962","RelatedDescription":"Open PR \"Add WebBrowser tests and fix bugs\" (#2962)"},{"Id":"577528655","IsPullRequest":false,"CreatedAt":"2020-03-08T16:40:39","Actor":"hughbe","Number":"2961","RawContent":null,"Title":"WebBrowser.Dispose can throw Win32Exception randomly","State":"open","Body":"This occasionally fails with the following stack trace\r\n\r\n```cs\r\n[WinFormsTheory]\r\n[CommonMemberData(nameof(CommonTestHelper.GetBoolTheoryData))]\r\npublic void WebBrowser_ScriptErrorsSuppressed_SetWithInstance_GetReturnsExpected(bool value)\r\n{\r\n    using var parent = new Control();\r\n    using var control = new WebBrowser\r\n    {\r\n        Parent = parent\r\n    };\r\n\r\n    control.ScriptErrorsSuppressed = value;\r\n    Assert.Equal(value, control.ScriptErrorsSuppressed);\r\n    Assert.NotNull(control.ActiveXInstance);\r\n    Assert.Equal(value, ((IWebBrowser2)control.ActiveXInstance).Silent);\r\n    Assert.True(control.IsHandleCreated);\r\n\r\n    // Set same.\r\n    control.ScriptErrorsSuppressed = value;\r\n    Assert.Equal(value, control.ScriptErrorsSuppressed);\r\n    Assert.NotNull(control.ActiveXInstance);\r\n    Assert.Equal(value, ((IWebBrowser2)control.ActiveXInstance).Silent);\r\n    Assert.True(control.IsHandleCreated);\r\n\r\n    // Set different.\r\n    control.ScriptErrorsSuppressed = !value;\r\n    Assert.Equal(!value, control.ScriptErrorsSuppressed);\r\n    Assert.NotNull(control.ActiveXInstance);\r\n    Assert.True(control.IsHandleCreated);\r\n}\r\n```\r\n\r\n```\r\nSystem.Windows.Forms.Tests.WebBrowserTests.WebBrowser_ScriptErrorsSuppressed_SetWithInstance_GetReturnsExpected(value: False) [10ms]\r\n  Error Message:\r\n   System.ComponentModel.Win32Exception : Error creating window handle.\r\n  Stack Trace:\r\n     at System.Windows.Forms.NativeWindow.CreateHandle(CreateParams cp)\r\n   at System.Windows.Forms.Control.CreateHandle()\r\n   at System.Windows.Forms.Control.get_Handle()\r\n   at System.Windows.Forms.Application.ParkHandle(CreateParams cp, DpiAwarenessContext dpiAwarenessContext)\r\n   at System.Windows.Forms.Control.CreateHandle()\r\n   at System.Windows.Forms.Control.get_Handle()\r\n   at System.Windows.Forms.WebBrowserBase.FindContainerControlInternal()\r\n   at System.Windows.Forms.WebBrowserBase.get_ContainingControl()\r\n   at System.Windows.Forms.WebBrowserContainer.FindContainerForControl(WebBrowserBase ctl)\r\n   at System.Windows.Forms.WebBrowserBase.GetParentContainer()\r\n   at System.Windows.Forms.WebBrowserBase.TransitionFromRunningToLoaded()\r\n   at System.Windows.Forms.WebBrowserBase.TransitionDownTo(AXState state)\r\n   at System.Windows.Forms.WebBrowser.Dispose(Boolean disposing)\r\n```\r\n\r\nWe certainly shouldn't be calling `CreateHandle` in `Control.Dispose`!\r\n\r\nI think the problem is that we're calling `WebBrowserBase.FindContainerControlInternal`\r\n```cs\r\ninternal ContainerControl FindContainerControlInternal()\r\n{\r\n    // ...\r\n\r\n    if (cc == null)\r\n    {\r\n        cc = Control.FromHandle(User32.GetParent(this)) as ContainerControl;\r\n    }\r\n\r\n    ...\r\n    return cc;\r\n}\r\n```\r\n\r\nWe should guard the call to `User32.GetParent` with `!IsDisposed` or `IsHandleCreated`","Url":"https://github.com/dotnet/winforms/issues/2961","RelatedDescription":"Open issue \"WebBrowser.Dispose can throw Win32Exception randomly\" (#2961)"},{"Id":"577525369","IsPullRequest":false,"CreatedAt":"2020-03-08T16:17:15","Actor":"hughbe","Number":"2960","RawContent":null,"Title":"WebBrowser.ObjectForScripting argument validation missing in .NET Core","State":"open","Body":"It is commented out:\r\n```cs\r\npublic object ObjectForScripting\r\n{\r\n    get\r\n    {\r\n        return objectForScripting;\r\n    }\r\n    set\r\n    {\r\n        if (value != null)\r\n        {\r\n            Type t = value.GetType();\r\n#if Marshal_IsTypeVisibleFromCom\r\n            if (!Marshal.IsTypeVisibleFromCom(t))\r\n            {\r\n                throw new ArgumentException(SR.WebBrowserObjectForScriptingComVisibleOnly);\r\n            }\r\n#endif\r\n        }\r\n        objectForScripting = value;\r\n    }\r\n}\r\n```\r\n\r\nNeeds to be enabled for compat","Url":"https://github.com/dotnet/winforms/issues/2960","RelatedDescription":"Open issue \"WebBrowser.ObjectForScripting argument validation missing in .NET Core\" (#2960)"},{"Id":"577520749","IsPullRequest":false,"CreatedAt":"2020-03-08T15:44:57","Actor":"hughbe","Number":"2959","RawContent":null,"Title":"WebBrowser.DocumentText contains trailing null terminator ('\\0')","State":"open","Body":"* .NET Core Version: \r\nLatst\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Problem description:**\r\n```cs\r\n[WinFormsTheory]\r\n[CommonMemberData(nameof(CommonTestHelper.GetStringWithNullTheoryData))]\r\npublic void WebBrowser_DocumentText_Set_GetReturnsExpected(string value)\r\n{\r\n    using var control = new WebBrowser\r\n    {\r\n        DocumentText = value\r\n    };\r\n    Assert.Equal(\"<HTML></HTML>\", control.DocumentText);\r\n    Assert.NotNull(control.ActiveXInstance);\r\n    Assert.True(control.IsHandleCreated);\r\n\r\n    // Set same.\r\n    control.DocumentText = value;\r\n    Assert.Equal(\"<HTML></HTML>\", control.DocumentText);\r\n    Assert.NotNull(control.ActiveXInstance);\r\n    Assert.True(control.IsHandleCreated);\r\n}\r\n```\r\n```\r\n  X System.Windows.Forms.Tests.WebBrowserTests.WebBrowser_DocumentText_Set_GetReturnsExpected(value:\r\nnull) [48ms]\r\n  Error Message:\r\n   Assert.Equal() Failure\r\n                        (pos 13)\r\nExpected: <HTML></HTML>\r\nActual:   <HTML></HTML>\\0\r\n                        (pos 13)\r\n```\r\n\r\n**Expected behavior:**\r\n- No trailing new line","Url":"https://github.com/dotnet/winforms/issues/2959","RelatedDescription":"Open issue \"WebBrowser.DocumentText contains trailing null terminator ('\\0')\" (#2959)"},{"Id":"577490069","IsPullRequest":true,"CreatedAt":"2020-03-08T12:21:35","Actor":"dotnet-maestro[bot]","Number":"2958","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200307.1\r\n- **Date Produced**: 3/7/2020 2:29 PM\r\n- **Commit**: ca67e6af5b3c6d94755f0912c5365bea44130b12\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20157.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20157.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20157.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20157.1\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20157.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2958)","Url":"https://github.com/dotnet/winforms/pull/2958","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2958)"},{"Id":"577331821","IsPullRequest":true,"CreatedAt":"2020-03-07T13:16:20","Actor":"dotnet-maestro[bot]","Number":"2957","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200306.4\r\n- **Date Produced**: 3/6/2020 6:36 PM\r\n- **Commit**: 8ff203f47d83e89ac4b9310b4e902188e0344bf0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20156.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20156.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20156.4\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20156.4\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20156.4\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2957)","Url":"https://github.com/dotnet/winforms/pull/2957","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2957)"},{"Id":"576916939","IsPullRequest":true,"CreatedAt":"2020-03-06T13:16:19","Actor":"dotnet-maestro[bot]","Number":"2956","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200305.4\r\n- **Date Produced**: 3/6/2020 12:19 AM\r\n- **Commit**: 08eea2b992d991297fc23de413bddfb9b3db5082\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20155.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20155.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20155.4\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20155.4\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20155.4\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2956)","Url":"https://github.com/dotnet/winforms/pull/2956","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2956)"},{"Id":"576670836","IsPullRequest":false,"CreatedAt":"2020-03-06T03:21:33","Actor":"vatsan-madhavan","Number":"2952","RawContent":null,"Title":"Check `Environment.UserInteractive` before showing UX","State":"open","Body":">It doesn't seem to affect WinForms. The checks come from WPF itself. \r\n\r\n>Perhaps winforms should add these checks 😄 - no point in trying to show ux when `Environment.UserInteractive` is (genuinely) `false`.\r\n\r\n_Originally posted by @vatsan-madhavan in https://github.com/dotnet/wpf/issues/2663#issuecomment-592207176_","Url":"https://github.com/dotnet/winforms/issues/2952","RelatedDescription":"Open issue \"Check `Environment.UserInteractive` before showing UX\" (#2952)"},{"Id":"576343109","IsPullRequest":true,"CreatedAt":"2020-03-05T15:38:26","Actor":"M-Lipin","Number":"2951","RawContent":null,"Title":"WIP: Fixing 2947: Call to ParkingWindow.RemoveReflectChild() causes Cross-thread exception under load","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2947 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Changing call to Handle with call to HandleInternal to prevent throwing an error when garbage collection is in progress.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Customers will not see an error in case garbage collector cleans up the references to WinForms controls which are not used anymore.\r\n- The case is applicable on high load environments when running application may require garbage collector to clean up controls to free memory.\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Low\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nCross-thread error on garbage collection.\r\n\r\n### After\r\n\r\nNo error.\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing;\r\n- Unit tests (to be implemented);\r\n- UI tests.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n<!-- use `dotnet --info` -->\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   5.0.100-alpha.1.20073.10\r\n Commit:    29f4d693a9\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-05536\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0-alpha.1.20072.3\r\n  Commit:  c3dc1fdfdc\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.200-preview-014883 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100-alpha.1.20073.10 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100-alpha1-05536 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2951)","Url":"https://github.com/dotnet/winforms/pull/2951","RelatedDescription":"Open PR \"WIP: Fixing 2947: Call to ParkingWindow.RemoveReflectChild() causes Cross-thread exception under load\" (#2951)"},{"Id":"576236925","IsPullRequest":true,"CreatedAt":"2020-03-05T13:16:22","Actor":"dotnet-maestro[bot]","Number":"2950","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200304.1\r\n- **Date Produced**: 3/4/2020 2:28 PM\r\n- **Commit**: 5d8c586ca1bed15f630ba7d2ed16f591be06eafd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20154.1\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20154.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2950)","Url":"https://github.com/dotnet/winforms/pull/2950","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2950)"},{"Id":"575632242","IsPullRequest":false,"CreatedAt":"2020-03-04T18:05:22","Actor":"JuditRose","Number":"2949","RawContent":null,"Title":"Replace resource embedding with globs in csproj files","State":"open","Body":"In the `csproj` files we have a lot of `ico` files as embedded resources defined for all resource files for all the components. \r\n\r\ne.g.:\r\n```\r\n<EmbeddedResource Include=\"Resources\\System\\Windows\\Forms\\ToolStrip\\ToolStripDropDownMenu.ico\">\r\n      <LogicalName>System.Windows.Forms.ToolStripDropDownMenu</LogicalName>\r\n    </EmbeddedResource>\r\n```\r\n\r\nIt would be nicer to replace them with something like this:\r\n\r\n ``` \r\n<ItemGroup>\r\n    <EmbeddedResource Include=\"Resources\\System\\Windows\\Forms\\**\\*.ico\">\r\n      <LogicalName>$(AssemblyName).$([System.IO.Path]::GetFileNameWithoutExtension('%(Identity)'))</LogicalName>\r\n    </EmbeddedResource>\r\n  </ItemGroup>\r\n```\r\n\r\nRelates to https://github.com/dotnet/winforms/issues/2939","Url":"https://github.com/dotnet/winforms/issues/2949","RelatedDescription":"Open issue \"Replace resource embedding with globs in csproj files\" (#2949)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-03-16T05:30:54.4439385Z","RunDurationInMilliseconds":1163}