{"Data":{"Blog":{"FeedItems":[{"Title":"Protect your Xamarin.Android Apps at Runtime with Dotfuscator","PublishedOn":"2018-10-12T18:34:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest blog by Bill Leach. Bill is CTO and co-founder of PreEmptive Solutions, makers of Dotfuscator and DashO application protection tools. Protecting Your Xamarin.Android Apps In a previous...","Href":"https://blog.xamarin.com/protect-xamarin-android-apps-dotfuscator/","RawContent":null},{"Title":"Upgrade Your App with Sentiment Analysis","PublishedOn":"2018-10-04T05:00:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Understanding the sentiment of an email or text message can be difficult. Someone may send a message, intending for it to be encouraging, but it may be accidentally interpreted as mean or...","Href":"https://blog.xamarin.com/upgrade-your-app-with-sentiment-analysis/","RawContent":null},{"Title":"Mobile Developer Events in October","PublishedOn":"2018-10-01T19:00:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":".NET Conf Local Events Watch all the live sessions from .NET Conf right on Channel 9! With a wide selection of content by feature speakers from the community and .NET product teams, take this...","Href":"https://blog.xamarin.com/mobile-developer-events-in-october/","RawContent":null},{"Title":"Using the Android Designer Split View","PublishedOn":"2018-09-24T05:01:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The ability to see the design view and layout XML at the same time, side by side, was one of our most requested features for the Android Designer. With Split View, new in the Visual Studio 2017...","Href":"https://blog.xamarin.com/split-view-android-designer/","RawContent":null},{"Title":"Get Ready for iOS 12 and Xcode 10","PublishedOn":"2018-09-19T19:49:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Support for iOS 12 and Xcode 10 to accompany Apple’s Xcode Gold Master (GM) release has just been announced! We have also published updated documentation and samples to help you quickly get started...","Href":"https://blog.xamarin.com/ios-12-and-xcode-10/","RawContent":null},{"Title":"Handling input from Apple Pencil","PublishedOn":"2018-09-19T17:52:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"After months of contemplation before finally buying an Apple Pencil to go along with the iPad Pro, it turns out it is as magical as they say! This blog post describes how to use Xamarin.iOS and Visual...","Href":"https://blog.xamarin.com/apple-pencil-handling-input/","RawContent":null},{"Title":"Xamarin.Forms 3.2.0 Released: Going Big with Little Things","PublishedOn":"2018-09-17T18:50:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms 3.2.0 continues the theme of previous releases to give you big wins by making little things much easier to do. The entire version 3 series has been about reducing the friction of doing...","Href":"https://blog.xamarin.com/xamarin-forms-3-2-0-released-going-big-with-little-things/","RawContent":null},{"Title":"Watch the .NET Conf Live!","PublishedOn":"2018-09-10T19:35:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The 3-day virtual developer conference co-organized by the .NET community and Microsoft is finally here! Now the question is how and where to watch the .NET Conf which will be completely...","Href":"https://blog.xamarin.com/watch-the-net-conf-live/","RawContent":null},{"Title":"Using Object Detection from inside your Xamarin app","PublishedOn":"2018-09-06T18:24:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Cognitive Services provide a great way to get started with AI without being a machine learning or data science expert. A common favorite of cognitive services is the Custom Vision Service....","Href":"https://blog.xamarin.com/using-object-detection-from-inside-your-xamarin-app/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in September","PublishedOn":"2018-08-31T16:42:53+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin and .NET developer events this September: September 10: Los Angeles, CA. USA &#124; Los Angeles .NET Developers Group: LADOTNET &#8211; The Architectural Mindset by Jeremy Cameron September...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-september/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8415868904","Type":"IssuesEvent","CreatedAt":"2018-10-13T19:01:58","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2248","RelatedDescription":"Closed issue \"Start Debugging run 2 full builds if you open Android Designer\" (#2248) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a new Android project (Android App, Modern Development)\r\n2. Press Run. (1 full build happen)\r\n3. Open Main.axml (no need to save, just open it)\r\n4. Press Run. (2 full builds happen)\r\n\r\n[DuplicatedBuild.zip](https://github.com/xamarin/xamarin-android/files/2435141/DuplicatedBuild.zip)\r\n\r\n### Expected Behavior\r\n\r\nNo builds at all when there is no changes\r\nA single build when there is changes\r\n\r\n### Actual Behavior\r\n\r\n2 full sequencial builds happen\r\n\r\n### Investigated issues\r\n\r\nInitially I thought it was the same as https://github.com/xamarin/xamarin-android/issues/1394, but it seems it is not the case.\r\n\r\nThen I saw `Input file \"obj/Debug/build.props\" is newer than output file \"obj/Debug/libraryprojectimports.cache\".` and thought it could be related to https://github.com/xamarin/xamarin-macios/issues/3929, but it is not.\r\n\r\nThen looking the the **_CreatePropertiesCache** debug information I've noticed that its **WriteLinesToFile** is being executed due to the contents of `AdbTarget` being changed during the build.\r\n\r\n### Log File\r\n\r\nUsing the following command to observe the **obj/Debug/build.props** contents: \r\n`while true; do kqwait '/Users/flash/Desktop/DuplicatedBuild/obj/Debug/build.props'; echo \"------------------------------------------------------\"; cat '/Users/flash/Desktop/DuplicatedBuild/obj/Debug/build.props'; done`\r\n\r\nWhen you hit **Run** for the first time (step 2) it outputs:\r\n\r\n```\r\nBundleAssemblies=False\r\nAotAssemblies=False\r\nAndroidAotMode=\r\nExplicitCrunch=False\r\nEnableProguard=\r\nUseSharedRuntime=true\r\nEmbedAssembliesIntoApk=False\r\nAndroidLinkMode=None\r\nAndroidLinkSkip=\r\nAndroidSdkBuildToolsVersion=27.0.3\r\nAndroidSdkPath=\r\nAndroidNdkPath=\r\nJavaSdkPath=\r\nAndroidSequencePointsMode=None\r\nXamarinAndroidVersion=9.0.0-20\r\nMonoSymbolArchive=False\r\nAndroidUseLatestPlatformSdk=true\r\nTargetFrameworkVersion=v9.0\r\nAndroidCreatePackagePerAbi=\r\nOS=Unix\r\nDesignTimeBuild=\r\nAndroidIncludeDebugSymbols=True\r\nAdbTarget=-s ce05171559d3cf0801\r\nAdbOptions=\r\n```\r\n\r\nAlso taking a look at Deploying to Device panel you will see the following output: \r\n\r\n```\r\nTarget \"_CreatePropertiesCache\" in file \"/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets\":\r\n  Task \"MakeDir\" skipped, due to false condition; (!Exists('$(IntermediateOutputPath)')) was evaluated as (!Exists('obj/Debug/')).\r\n  Task \"WriteLinesToFile\" skipped, due to false condition; ('@(_PropertiesCache)' != '@(_PropertyCacheItems)') was evaluated as ('BundleAssemblies=False;AotAssemblies=False;AndroidAotMode=;ExplicitCrunch=False;EnableProguard=;UseSharedRuntime=true;EmbedAssembliesIntoApk=False;AndroidLinkMode=None;AndroidLinkSkip=;AndroidSdkBuildToolsVersion=27.0.3;AndroidSdkPath=;AndroidNdkPath=;JavaSdkPath=;AndroidSequencePointsMode=None;XamarinAndroidVersion=9.0.0-20;MonoSymbolArchive=False;AndroidUseLatestPlatformSdk=true;TargetFrameworkVersion=v9.0;AndroidCreatePackagePerAbi=;OS=Unix;DesignTimeBuild=;AndroidIncludeDebugSymbols=True;AdbTarget=-s ce05171559d3cf0801;AdbOptions=' != 'BundleAssemblies=False;AotAssemblies=False;AndroidAotMode=;ExplicitCrunch=False;EnableProguard=;UseSharedRuntime=true;EmbedAssembliesIntoApk=False;AndroidLinkMode=None;AndroidLinkSkip=;AndroidSdkBuildToolsVersion=27.0.3;AndroidSdkPath=;AndroidNdkPath=;JavaSdkPath=;AndroidSequencePointsMode=None;XamarinAndroidVersion=9.0.0-20;MonoSymbolArchive=False;AndroidUseLatestPlatformSdk=true;TargetFrameworkVersion=v9.0;AndroidCreatePackagePerAbi=;OS=Unix;DesignTimeBuild=;AndroidIncludeDebugSymbols=True;AdbTarget=-s ce05171559d3cf0801;AdbOptions=').\r\nDone building target \"_CreatePropertiesCache\" in project \"DuplicatedBuild.csproj\".\r\n```\r\n\r\nWhen you open the Main.axml (step 3) it outputs:\r\n\r\n```\r\nBundleAssemblies=False\r\nAotAssemblies=False\r\nAndroidAotMode=\r\nExplicitCrunch=False\r\nEnableProguard=\r\nUseSharedRuntime=true\r\nEmbedAssembliesIntoApk=False\r\nAndroidLinkMode=None\r\nAndroidLinkSkip=\r\nAndroidSdkBuildToolsVersion=27.0.3\r\nAndroidSdkPath=\r\nAndroidNdkPath=\r\nJavaSdkPath=\r\nAndroidSequencePointsMode=None\r\nXamarinAndroidVersion=9.0.0-20\r\nMonoSymbolArchive=False\r\nAndroidUseLatestPlatformSdk=true\r\nTargetFrameworkVersion=v9.0\r\nAndroidCreatePackagePerAbi=\r\nOS=Unix\r\nDesignTimeBuild=true\r\nAndroidIncludeDebugSymbols=True\r\nAdbTarget=\r\nAdbOptions=\r\n```\r\n\r\nWhen you hit Run for the second time (step 4) it outputs: \r\n\r\n```\r\n/Users/flash/Desktop/DuplicatedBuild/obj/Debug/build.props\r\n------------------------------------------------------\r\nBundleAssemblies=False\r\nAotAssemblies=False\r\nAndroidAotMode=\r\nExplicitCrunch=False\r\nEnableProguard=\r\nUseSharedRuntime=true\r\nEmbedAssembliesIntoApk=False\r\nAndroidLinkMode=None\r\nAndroidLinkSkip=\r\nAndroidSdkBuildToolsVersion=27.0.3\r\nAndroidSdkPath=\r\nAndroidNdkPath=\r\nJavaSdkPath=\r\nAndroidSequencePointsMode=None\r\nXamarinAndroidVersion=9.0.0-20\r\nMonoSymbolArchive=False\r\nAndroidUseLatestPlatformSdk=true\r\nTargetFrameworkVersion=v9.0\r\nAndroidCreatePackagePerAbi=\r\nOS=Unix\r\nDesignTimeBuild=\r\nAndroidIncludeDebugSymbols=True\r\nAdbTarget=-s ce05171559d3cf0801\r\nAdbOptions=\r\n/Users/flash/Desktop/DuplicatedBuild/obj/Debug/build.props\r\n------------------------------------------------------\r\nBundleAssemblies=False\r\nAotAssemblies=False\r\nAndroidAotMode=\r\nExplicitCrunch=False\r\nEnableProguard=\r\nUseSharedRuntime=true\r\nEmbedAssembliesIntoApk=False\r\nAndroidLinkMode=None\r\nAndroidLinkSkip=\r\nAndroidSdkBuildToolsVersion=27.0.3\r\nAndroidSdkPath=\r\nAndroidNdkPath=\r\nJavaSdkPath=\r\nAndroidSequencePointsMode=None\r\nXamarinAndroidVersion=9.0.0-20\r\nMonoSymbolArchive=False\r\nAndroidUseLatestPlatformSdk=true\r\nTargetFrameworkVersion=v9.0\r\nAndroidCreatePackagePerAbi=\r\nOS=Unix\r\nDesignTimeBuild=true\r\nAndroidIncludeDebugSymbols=True\r\nAdbTarget=\r\nAdbOptions=\r\n/Users/flash/Desktop/DuplicatedBuild/obj/Debug/build.props\r\n------------------------------------------------------\r\nBundleAssemblies=False\r\nAotAssemblies=False\r\nAndroidAotMode=\r\nExplicitCrunch=False\r\nEnableProguard=\r\nUseSharedRuntime=true\r\nEmbedAssembliesIntoApk=False\r\nAndroidLinkMode=None\r\nAndroidLinkSkip=\r\nAndroidSdkBuildToolsVersion=27.0.3\r\nAndroidSdkPath=\r\nAndroidNdkPath=\r\nJavaSdkPath=\r\nAndroidSequencePointsMode=None\r\nXamarinAndroidVersion=9.0.0-20\r\nMonoSymbolArchive=False\r\nAndroidUseLatestPlatformSdk=true\r\nTargetFrameworkVersion=v9.0\r\nAndroidCreatePackagePerAbi=\r\nOS=Unix\r\nDesignTimeBuild=\r\nAndroidIncludeDebugSymbols=True\r\nAdbTarget=-s ce05171559d3cf0801\r\nAdbOptions=\r\n/Users/flash/Desktop/DuplicatedBuild/obj/Debug/build.props\r\n------------------------------------------------------\r\nBundleAssemblies=False\r\nAotAssemblies=False\r\nAndroidAotMode=\r\nExplicitCrunch=False\r\nEnableProguard=\r\nUseSharedRuntime=true\r\nEmbedAssembliesIntoApk=False\r\nAndroidLinkMode=None\r\nAndroidLinkSkip=\r\nAndroidSdkBuildToolsVersion=27.0.3\r\nAndroidSdkPath=\r\nAndroidNdkPath=\r\nJavaSdkPath=\r\nAndroidSequencePointsMode=None\r\nXamarinAndroidVersion=9.0.0-20\r\nMonoSymbolArchive=False\r\nAndroidUseLatestPlatformSdk=true\r\nTargetFrameworkVersion=v9.0\r\nAndroidCreatePackagePerAbi=\r\nOS=Unix\r\nDesignTimeBuild=true\r\nAndroidIncludeDebugSymbols=True\r\nAdbTarget=\r\nAdbOptions=\r\n```\r\n\r\nAdbTarget and AdbOptions is changing 4 times on the second Run, unlike the first Run.\r\nLooking at the Deploy to Device panel we find: \r\n\r\n```\r\nTarget \"_CreatePropertiesCache\" in file \"/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets\":\r\n  Task \"MakeDir\" skipped, due to false condition; (!Exists('$(IntermediateOutputPath)')) was evaluated as (!Exists('obj/Debug/')).\r\n  Task \"WriteLinesToFile\"\r\n  Done executing task \"WriteLinesToFile\".\r\nDone building target \"_CreatePropertiesCache\" in project \"DuplicatedBuild.csproj\".\r\n```\r\n\r\n### Version Information\r\n\r\n```\r\nVisual Studio Community 2017 for Mac\r\nVersion 7.6.7 (build 49)\r\nInstallation UUID: 9a5b91cf-e5ce-4027-8e14-daa7b5b84c3a\r\nRuntime:\r\n\tMono 5.14.0.177 (2018-04/f3a2216b65a) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 514000177\r\n\r\nNuGet\r\nVersion: 4.3.1.4445\r\n\r\n.NET Core\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.2\r\n\t1.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\nSDK Versions:\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\n\t2.0.2\r\n\t2.0.0\r\n\t1.0.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.16.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\nXamarin.Profiler\r\nVersion: 1.6.3\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\nXamarin.Android\r\nVersion: 9.0.0.20 (Visual Studio Community)\r\nAndroid SDK: /Users/flash/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.0.3 (API level 15)\r\n\t\t4.1   (API level 16)\r\n\t\t4.4   (API level 19)\r\n\t\t6.0   (API level 23)\r\n\t\t7.0   (API level 24)\r\n\t\t7.1   (API level 25)\r\n\t\t8.0   (API level 26)\r\n\t\t8.1   (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.1\r\nSDK Build Tools Version: 28.0.3\r\n\r\nJava SDK: /Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home\r\njava version \"1.8.0_101\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_101-b13)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\nApple Developer Tools\r\nXcode 10.0 (14320.25)\r\nBuild 10A255\r\n\r\nXamarin.Mac\r\nVersion: 4.6.0.14 (Visual Studio Community)\r\nHash: 1a6e2786\r\nBranch: \r\nBuild date: 2018-08-28 00:12:06-0400\r\n\r\nXamarin.iOS\r\nVersion: 12.0.0.15 (Visual Studio Community)\r\nHash: 84552a46\r\nBranch: xcode10\r\nBuild date: 2018-09-17 21:54:33-0400\r\n\r\nXamarin Inspector\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\nBuild Information\r\nRelease ID: 706070049\r\nGit revision: 0b48ccfb376397678b3bc3653da2c6603d35357d\r\nBuild date: 2018-09-20 21:14:23+00\r\nBuild branch: release-7.6\r\nXamarin extensions: b25fd1e2b9a7859aff9536924e8edb6cbfb78637\r\n\r\nOperating System\r\nMac OS X 10.14.0\r\nDarwin 18.0.0 Darwin Kernel Version 18.0.0\r\n    Wed Aug 22 20:13:40 PDT 2018\r\n    root:xnu-4903.201.2~1/RELEASE_X86_64 x86_64\r\n\r\n```\r\n\r\n### Related Question\r\nWhy does VS4M runs Build and then Install when I press Start Debugging? If I run ```msbuild /t:Install``` it is enough to deploy as Install depends on Build - the bug reported in here is still present, but at least we have only 1 full compilation, not 2."},{"Id":"8415356110","Type":"PullRequestEvent","CreatedAt":"2018-10-13T13:55:41","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2294","RelatedDescription":"Opened pull request \"Bump to mono/mono/2018-06@226e91a0\" (#2294) at xamarin/xamarin-android","RelatedBody":"Context: f970cd50d2c19dcb4b62cc1dd1198c31cc10a2df\r\nContext: 84952df685e0ab49c82df804b306bf53fe6e0610\r\n\r\nCommit f970cd50 included a mono bump, and subsequently broke the\r\nbuild, causing it to be reverted in 84952df6.\r\n\r\nA question: *which part* of f970cd50 is the problem: the changes to\r\nxamarin-android, or the mono bump *itself*?\r\n\r\nBump mono to verify that the mono bump itself still builds.\r\n\r\nMono bump contains various \"mono sdks\" archive fixes."},{"Id":"8415177345","Type":"PullRequestEvent","CreatedAt":"2018-10-13T11:53:47","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2288","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Add `CopyResource` items to `FileWrites`.\" (#2288) at xamarin/xamarin-android","RelatedBody":"Not quite sure how we ever got away with this. As part\r\nof the build process we extract from `EmbeddedResource`\r\na bunch of `.java` files into the intermediate directory.\r\n\r\nThese are used for a number of things like multidex and\r\nbootstrapping mono. For some reason we NEVER added those\r\nto the `FileWrites` group. So there is a good chance these\r\nfiles will get deleted by an incremental clean.\r\n\r\nThis was picked up by a unit test in monodroid which\r\ndeals with fast deployment."},{"Id":"8415172990","Type":"PullRequestEvent","CreatedAt":"2018-10-13T11:50:48","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2293","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Ignore XA0115 for Shared Runtime builds.\" (#2293) at xamarin/xamarin-android","RelatedBody":"Fixes #2289\r\n\r\nWhen doing debug shared runtime builds the user generally does\r\nnot care what abi is used. As a result we should only be showing\r\nthe `XA0115` warning when they are NOT using the shared runtime."},{"Id":"8415172985","Type":"IssuesEvent","CreatedAt":"2018-10-13T11:50:48","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2289","RelatedDescription":"Closed issue \"The `armeabi` deprecation warning is displayed for default Debug builds in d15-9\" (#2289) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Find a project which does not override `<AndroidSupportedAbis>` and build it in Debug mode.\r\n(e.g. https://github.com/xamarin/monodroid-samples/blob/master/HelloWorld/HelloWorld.csproj)\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nThe deprecation warning for `armeabi` should only be displayed when the user has explicitly chosen to support this ABI. Default debug builds should not display this warning, as no action needs to be taken. This scenario will automatically be resolved in a future release when the debug-specific default value for `AndroidSupportedAbis` is changed to exclude `armeabi`. \r\n\r\n### Actual Behavior\r\nDebug builds are displaying a warning about the usage of armeabi[0], because in d15-9, `armeabi` is still included in the debug-specific default value of `AndroidSupportedAbis`.\r\n\r\n[0] ```C:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(503,2): warning XA0115: This ABI ('armeabi') is deprecated and will be removed\r\n in the next release. Please update your project properties.```\r\n### Version Information\r\nXamarin.Android.Sdk.9.1.0.35\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"8414839392","Type":"IssuesEvent","CreatedAt":"2018-10-13T07:48:17","Actor":"xamarin-release-manager","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1762","RelatedDescription":"Closed issue \"App not showing updated axml designer controls until I close VS \" (#1762) at xamarin/xamarin-android","RelatedBody":"Description\r\nWhen I am updating designer (Say changing margins, color of controls) it is not getting affected after executing app to the emulators until I close visual studio & it again.\r\n\r\nSteps to Reproduce\r\nCreated project try to make modifications in axml files & execute app.\r\n\r\nExpected Behavior\r\nActual Behavior\r\nBasic Information\r\nMicrosoft Visual Studio Enterprise 2017\r\nVersion 15.7.1\r\nVisualStudio.15.Release/15.7.1+27703.2000\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Enterprise\r\n\r\nArchitecture Diagrams and Analysis Tools 00369-60000-00001-AA519\r\nMicrosoft Architecture Diagrams and Analysis Tools\r\n\r\nApplication Insights Tools for Visual Studio Package 8.12.10405.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nC# Tools 2.8.0-beta6-62830-08. Commit Hash: e595ee276d14e14bfb3eb323fb57f2aa668bddea\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nMerq 1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio 0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger 1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger 1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards 1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers 1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package 1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio 4.10.5-pre (ab58725)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager 4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nResourcePackage Extension 1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nVisual Basic Tools 2.8.0-beta6-62830-08. Commit Hash: e595ee276d14e14bfb3eb323fb57f2aa668bddea\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual Studio Code Debug Adapter Host Package 1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Universal Windows Apps 15.0.27703.01\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac 1.0\r\nMac Extension for Visual Studio\r\n\r\nWeb Extension Pack 2017 15.0.4\r\nThe easiest way to set up Visual Studio for the ultimate web development experience.\r\n\r\nXamarin 4.10.0.442 (396b18cef)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer 4.12.264 (fc37cd02e)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK 8.3.0.19 (HEAD/342b2ce96)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n![xamandroidissue](https://user-images.githubusercontent.com/38238586/40780765-33483fd6-64f7-11e8-99e3-06cfc098419b.png)\n\n> VS bug [#624571](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/624571)"},{"Id":"8413245377","Type":"PullRequestEvent","CreatedAt":"2018-10-12T19:31:15","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2280","RelatedDescription":"Merged pull request \"Adds facades which might override default nuget version to framework list\" (#2280) at xamarin/xamarin-android","RelatedBody":"Supports https://github.com/mono/mono/issues/10768"},{"Id":"8413142134","Type":"PullRequestEvent","CreatedAt":"2018-10-12T19:09:37","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2285","RelatedDescription":"Merged pull request \" Revert \"[Xamarin.Android.Build.Tasks] deletebinobj fix for resources\" (#2285) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/issues/2216#issuecomment-428731234\r\n\r\nThis reverts commit fab260dfab1e2b7837e9c9e0e665007cb3156374.\r\n\r\nThis commit relies on other commits in master, which otherwise causes a regression as mentioned in #2216:\r\n\r\n```\r\nBuilding target \"_GenerateJavaDesignerForComponent\" completely.\r\nInput file \"obj\\Debug\\81\\R.cs.flag\" is newer than output file \"obj\\Debug\\81\\Component.R.cs.flag\".\r\n```\r\n\r\nThis target shouldn't be running in a build with no changes.\r\n\r\nI also incorporated test changes from master @ 647659e8, which catches the regression in #2216. It will be helpful to add this test in d15-9 going forward."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8416348581","Type":"PullRequestEvent","CreatedAt":"2018-10-14T00:53:48","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4013","RelatedDescription":"Merged pull request \"Added WebView Reload\" (#4013) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAdd a way to reload the current URL in WebView control\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #3776 \r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - void WebView.Reload();\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n- UWP\r\n- Mac OS\r\n- WPF\r\n- Tizen\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8416348572","Type":"IssuesEvent","CreatedAt":"2018-10-14T00:53:48","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3776","RelatedDescription":"Closed issue \"Add Reload method to WebView\" (#3776) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nNative WebView have reload function. And I can use it  after loaded url failed.\r\nBut Xamarin.Forms WebView has no reload function.\r\nAnd how can I reload WebView on Xamarin.Forms?\r\n"},{"Id":"8415680913","Type":"IssuesEvent","CreatedAt":"2018-10-13T17:09:04","Actor":"seank842","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4075","RelatedDescription":"Opened issue \"DisplayActionSheet auto closes unexpectedly\" (#4075) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nWhen a DisplayActionSheet, is left open and the uses alt tabs or makes another application window active i.e. Edge, the DisplayActionSheet will auto close, returning the value null.\r\n### Steps to Reproduce\r\n\r\n1. Create and open a DisplayActionSheet\r\n2. Switch active application.\r\n3. Observe the close with null returned\r\n\r\n### Expected Behavior\r\nActionSheet would stay on screen, awaiting for user input.\r\n### Actual Behavior\r\nActionsheet closes and returns null.\r\n### Basic Information\r\n\r\n- Version with issue: 3.2.0.839982\r\n- Last known good version: Unknown\r\n- IDE: Visual Studio 2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - UWP:  17134\r\n- Affected Devices: UWP \r\n"},{"Id":"8415190756","Type":"IssuesEvent","CreatedAt":"2018-10-13T12:02:46","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4074","RelatedDescription":"Opened issue \"error CS0103: The name 'InitializeComponent' does not exist in the current context\" (#4074) at xamarin/Xamarin.Forms","RelatedBody":"[NOTE: originally reported here \r\nhttps://github.com/xamarin/Xamarin.Forms/issues/2863#issuecomment-429385270]\r\n### Description\r\n\r\nI created a new project (Xamarin.Forms, blank, shared project). I attach this project as [App6](https://github.com/xamarin/Xamarin.Forms/files/2473844/App6.zip). Than I opened VS2017 (updated this morning to newest version 15.8.7) and try to build the project for UWP. Get the same \"CS0103 The name 'InitializeComponent' does not exist in the current context\" error again. The diagnostic build output is [here](https://github.com/xamarin/Xamarin.Forms/files/2473841/ce97bab0e787485aa8fa5b8576b4a322.vssolutionbuild.zip). The system info looks like\r\n\r\n> Microsoft\r\n> \r\n> Visual Studio Community 2017 \r\n> Version 15.8.7\r\n> VisualStudio.15.Release/15.8.7+28010.2046\r\n> Microsoft .NET Framework\r\n> Version 4.7.03056\r\n> \r\n> Installed Version: Community\r\n> \r\n> Visual C++ 2017   00369-60000-00001-AA779\r\n> Microsoft Visual C++ 2017\r\n> \r\n> Application Insights Tools for Visual Studio Package   8.13.10627.1\r\n> Application Insights Tools for Visual Studio\r\n> \r\n> ASP.NET and Web Tools 2017   15.8.05085.0\r\n> ASP.NET and Web Tools 2017\r\n> \r\n> C# Tools   2.9.0-beta8-63208-01\r\n> C# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n> \r\n> Common Azure Tools   1.10\r\n> Provides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n> \r\n> Extensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\n> Provides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n> \r\n> GitHub.VisualStudio   2.5.8.5165\r\n> A Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n> \r\n> JavaScript Language Service   2.0\r\n> JavaScript Language Service\r\n> \r\n> JavaScript Project System   2.0\r\n> JavaScript Project System\r\n> \r\n> Microsoft JVM Debugger   1.0\r\n> Provides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n> \r\n> Microsoft MI-Based Debugger   1.0\r\n> Provides support for connecting Visual Studio to MI compatible debuggers\r\n> \r\n> Microsoft Visual C++ Wizards   1.0\r\n> Microsoft Visual C++ Wizards\r\n> \r\n> Microsoft Visual Studio VC Package   1.0\r\n> Microsoft Visual Studio VC Package\r\n> \r\n> MLGen Package Extension   1.0\r\n> MLGen Package Visual Studio Extension Detailed Info\r\n> \r\n> Mono Debugging for Visual Studio   4.11.11-pre (8fb558f)\r\n> Support for debugging Mono processes with Visual Studio.\r\n> \r\n> NuGet Package Manager   4.6.0\r\n> NuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n> \r\n> ProjectServicesPackage Extension   1.0\r\n> ProjectServicesPackage Visual Studio Extension Detailed Info\r\n> \r\n> ResourcePackage Extension   1.0\r\n> ResourcePackage Visual Studio Extension Detailed Info\r\n> \r\n> ResourcePackage Extension   1.0\r\n> ResourcePackage Visual Studio Extension Detailed Info\r\n> \r\n> TypeScript Tools   15.8.20822.2001\r\n> TypeScript Tools for Microsoft Visual Studio\r\n> \r\n> Visual Basic Tools   2.9.0-beta8-63208-01\r\n> Visual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n> \r\n> Visual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 55a3dc3231c95c77f81ee53f7d29152029da7408.\r\n> Microsoft Visual F# Tools 10.2 for F# 4.5\r\n> \r\n> Visual Studio Code Debug Adapter Host Package   1.0\r\n> Interop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n> \r\n> Visual Studio Tools for Universal Windows Apps   15.0.28010.2046\r\n> The Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the > Microsoft Windows 10 Software Development Kit.\r\n> \r\n> VisualStudio.Mac   1.0\r\n> Mac Extension for Visual Studio\r\n> \r\n> Xamarin   4.11.0.776 (d15-8@1ae9b59d7)\r\n> Visual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n> \r\n> Xamarin Designer   4.15.9 (d000f568b)\r\n> Visual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n> \r\n> Xamarin Templates   1.1.116 (9619170)\r\n> Templates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n> \r\n> Xamarin.Android SDK   9.0.0.19 (HEAD/a8a3b0ec7)\r\n> Xamarin.Android Reference Assemblies and MSBuild support.\r\n> \r\n> Xamarin.iOS and Xamarin.Mac SDK   12.0.0.15 (84552a4)\r\n> Xamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\nIf you like to look onto my computer, than this is possible too.\r\n### Steps to Reproduce\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->"},{"Id":"8414471348","Type":"IssuesEvent","CreatedAt":"2018-10-13T02:52:02","Actor":"adrianknight89","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4073","RelatedDescription":"Opened issue \"[Enhancement] Create InputTransparent for Span\" (#4073) at xamarin/Xamarin.Forms","RelatedBody":"### Rationale\r\n\r\nI ran into a case where I was setting `InputTransparent` to true on a label, but a few spans in it needed to be clickable with a tap gesture recognizer. Setting `InputTransparent` to true on a label turns off the gesture recognizers for the spans. If a span had this property instead, we could fine tune input transparency so that specific spans may be made clickable while other parts of the label can pass the gesture down to its parent.\r\n\r\n### Implementation \r\n\r\n`public static readonly BindableProperty InputTransparentProperty = BindableProperty.Create(\"InputTransparent\", typeof(bool?), typeof(Span), default(bool?));`\r\n\r\nDefault for this property should be a nullable bool (or a default enum) so that the state of input transparency for the span is indeterminate and strictly follows the behavior of the label. Any true/false value set on the span overwrites the behavior of the label for the tap coordinates of the span.\r\n\r\n### Backward Compatibility\r\n\r\nAt this point, I'm not sure if there are any backward compatibility issues."},{"Id":"8413892634","Type":"PullRequestEvent","CreatedAt":"2018-10-12T22:03:40","Actor":"AndreiMisiukevich","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4072","RelatedDescription":"Opened pull request \"Prevented crash in Bugzilla36955 UITest\" (#4072) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFixed UI test for working properly, without crashes.\r\nMade changes regarding to @hartez comment\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #2291\r\n\r\n### API Changes ###\r\n None\r\n\r\n### Platforms Affected ### \r\n- iOS (UITEST)\r\n\r\n### Behavioral/Visual Changes ###\r\nNo crashing\r\n\r\n### Before/After Screenshots ### \r\nNot applicable\r\n\r\n### Testing Procedure ###\r\nOpen Bugzilla36955 test. See that there is no crash\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8413701167","Type":"IssuesEvent","CreatedAt":"2018-10-12T21:12:14","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4972","RelatedDescription":"Closed issue \"Cannot build app with scanbot nuget with don't link linker behaviour\" (#4972) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Clone following repo: https://github.com/doo/scanbot-sdk-example-xamarin.git\r\n2. Put iOS linker behaviour to don't link\r\n3. build.\r\n\r\n### Expected Behaviour\r\niOS Project should build correctly\r\n\r\n### Actual Behaviour\r\niOS Project doesn't build and throws native linking errors. Errors can be found in build log below.\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.6.9 (build 22)\r\nInstallation UUID: 168e1467-49ef-4a4e-9c41-e7c3f60701e5\r\nRuntime:\r\n\tMono 5.12.0.309 (2018-02/39d89a335c8) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 512000309\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.1\r\n\t1.0.4\r\nSDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\nSDK Versions:\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.0.1\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.3\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.0 (14320.25)\r\nBuild 10A255\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.0.0.0 (Visual Studio Enterprise)\r\nHash: b40230c0\r\nBranch: \r\nBuild date: 2018-09-27 11:41:37-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.0.0.15 (Visual Studio Enterprise)\r\nHash: 84552a46\r\nBranch: xcode10\r\nBuild date: 2018-09-17 21:54:33-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.0.0.20 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/michaelgobbers/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.1 (API level 16)\r\n\t\t4.2 (API level 17)\r\n\t\t4.3 (API level 18)\r\n\t\t4.4 (API level 19)\r\n\t\t5.0 (API level 21)\r\n\t\t5.1 (API level 22)\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home\r\njava version \"1.8.0_101\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_101-b13)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 706090022\r\nGit revision: 0a0ba3c4593e9adb1c6ff6324e641036146af376\r\nBuild date: 2018-10-05 16:38:51+00\r\nBuild branch: release-7.6\r\nXamarin extensions: f7856b13f2c03a58e08381d3a5970bba18f5c7d7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Thu Jun 21 22:53:14 PDT 2018\r\n    root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nMvvmCross Template pack 2.0.1\r\nStraight8's SpecFlow Integration 1.11.2.0\r\n\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\nhttps://gist.github.com/michaelgobbers/b525c2f1c892c886ffbd9fd0dabed812\r\n\r\n### Example Project (If Possible)\r\n\r\nhttps://github.com/doo/scanbot-sdk-example-xamarin.git\r\n"},{"Id":"8413689075","Type":"IssuesEvent","CreatedAt":"2018-10-12T21:09:28","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4558","RelatedDescription":"Closed issue \"NSView.NextKeyView is not allowed to be null\" (#4558) at xamarin/xamarin-macios","RelatedBody":"\r\n### Steps to Reproduce\r\n\r\n1.\r\nSet NextKeyView to null\r\n\r\n`view.NextKeyView = null;`\r\n\r\n### Expected Behavior\r\n\r\nNextKeyView is allowed to be null. From https://developer.apple.com/documentation/appkit/nsview/1483465-nextkeyview?language=objc\r\n\r\n> The value in this property is nil if there is no next view in the key view loop.\r\n\r\n### Actual Behavior\r\n\r\n> System.ArgumentNullException: Value cannot be null.\r\n> Parameter name: value\r\n> at AppKit.NSView.set_NextKeyView (AppKit.NSView value)\r\n\r\n### Environment\r\n\r\n=== Visual Studio Enterprise 2017 for Mac (Preview) ===\r\n\r\nVersion 7.7 Preview (7.7 build 557)\r\nInstallation UUID: f64c47d3-1a2d-4092-8fae-dc3309136470\r\nRuntime:\r\n\tMono 5.14.0.105 (2018-04/6d28c8f9621) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 514000105\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.0\r\n\t1.1.1\r\n\t1.1.0\r\n\t1.0.4\r\nSDK: /usr/local/share/dotnet/sdk/2.0.0/Sdks\r\nSDK Versions:\r\n\t2.0.0\r\n\t1.0.1\r\n\t1.0.0-preview2-1-003177\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.14.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.0.0\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.4.1 (14161)\r\nBuild 9F2000\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.4.1.178 (Visual Studio Enterprise)\r\nHash: eeaeb7e6\r\nBranch: master\r\nBuild date: 2018-05-14 17:36:06-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.5.0.92 (Visual Studio Enterprise)\r\nHash: d0bb1c5d\r\nBranch: master\r\nBuild date: 2017-09-27 11:43:16-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.0.19 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/iain/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.1    (API level 16)\r\n\t\t4.2    (API level 17)\r\n\t\t4.3    (API level 18)\r\n\t\t4.4    (API level 19)\r\n\t\t4.4.87 (API level 20)\r\n\t\t5.0    (API level 21)\r\n\t\t5.1    (API level 22)\r\n\t\t6.0    (API level 23)\r\n\t\t7.0    (API level 24)\r\n\t\t7.1    (API level 25)\r\n\t\t8.0    (API level 26)\r\n\t\t8.1    (API level 27)\r\n\r\nSDK Tools Version: 25.2.5\r\nSDK Platform Tools Version: 28\r\nSDK Build Tools Version: 27.0.0\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_101\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_101-b13)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 1.0.629.0\r\nHash: ccfe436f\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.2\r\nHash: 213565e\r\nBranch: 1.4-release\r\nBuild date: Thu, 05 Jul 2018 17:45:17 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 707000557\r\nGit revision: b838dcbbb3a55cc2ef268020b2c99e661daa251e\r\nBuild date: 2018-07-09 12:18:08+00\r\nBuild branch: master\r\nXamarin extensions: f96a1e6f9b7806a813caeaec415d7ba33de3dcba\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.5\r\nDarwin 17.6.0 Darwin Kernel Version 17.6.0\r\n    Tue May  8 15:22:16 PDT 2018\r\n    root:xnu-4570.61.1~1/RELEASE_X86_64 x86_64\r\n"},{"Id":"8413688635","Type":"PullRequestEvent","CreatedAt":"2018-10-12T21:09:21","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4979","RelatedDescription":"Merged pull request \"[appkit] Add missing `[NullAllowed]` on `NSView.NextKeyView`. Fixes #4558\" (#4979) at xamarin/xamarin-macios","RelatedBody":"Confirmed with headers.\n\nreference: https://github.com/xamarin/xamarin-macios/issues/4558"},{"Id":"8413330936","Type":"PullRequestEvent","CreatedAt":"2018-10-12T19:49:19","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4983","RelatedDescription":"Opened pull request \"[tests][mmp] Convert old mmp calendar regression tests to unit tests\" (#4983) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"8413164878","Type":"PullRequestEvent","CreatedAt":"2018-10-12T19:14:14","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4982","RelatedDescription":"Opened pull request \"[uikit] Duplicate bindings for 'UIScrollView.ContentOffset' to get correct availability information. Fixes #4893\" (#4982) at xamarin/xamarin-macios","RelatedBody":"`ContentOffset` was moved to `UIFocusItemScrollableContainer` in iOS 12.\nSince it's a new protocol it's decorated as introduced in iOS 12 - but\nthe API was actually already available for a long time.\n\nThe _trick_ is to keep the original binding inside `UIScrollView`\nso it overrides the protocol and keeps the correct availability info.\nIt requires adding `new` to bindings to avoid compiler warnings.\n\nreference: https://github.com/xamarin/xamarin-macios/issues/4893"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1050824055014744064","CreatedAt":"2018-10-12T19:02:32+00:00","UserScreenname":"xamarinhq","Text":"Now, in #VisualStudio 15.8, Dotfuscator Community can help protect your https://t.co/FGIvdxOrYa Apps at Runtime by… https://t.co/iPm1GjIrpS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":21,"RawContent":null},{"Id":"1050447051228631040","CreatedAt":"2018-10-11T18:04:28+00:00","UserScreenname":"xamarinhq","Text":"With Xamarin.Forms, the UI and app logic for your app resides in a single codebase and you get to use a single IDE… https://t.co/SMq0XwjtKL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":55,"FavoriteCount":31,"RawContent":null},{"Id":"1047580523881799680","CreatedAt":"2018-10-03T20:13:54+00:00","UserScreenname":"xamarinhq","Text":"Do both types of testing with your Visual Studio App Center CI/CD pipeline - cover the Data Access Layer with unit… https://t.co/6y14u8p3lQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":33,"RawContent":null},{"Id":"1046875654631886850","CreatedAt":"2018-10-01T21:33:00+00:00","UserScreenname":"xamarinhq","Text":"Microsoft named a leader in 2018 analyst reports on mobile app development. Get complimentary access to reports fro… https://t.co/EWg450kHpI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":30,"RawContent":null},{"Id":"1041764665536196609","CreatedAt":"2018-09-17T19:03:45+00:00","UserScreenname":"xamarinhq","Text":"...released to NuGet today, Xamarin.Forms 3.2.0. We've kicked off another round of updates, and this time we tackle… https://t.co/zyFILHsEUu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":202,"FavoriteCount":109,"RawContent":null},{"Id":"1039264258511527936","CreatedAt":"2018-09-10T21:28:02+00:00","UserScreenname":"xamarinhq","Text":"Watch #dotNETConf Live! The 3-day virtual developer conference co-organized by the .NET community and Microsoft is… https://t.co/bM5JCj7M0h","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":54,"RawContent":null},{"Id":"1037778121582419970","CreatedAt":"2018-09-06T19:02:39+00:00","UserScreenname":"xamarinhq","Text":"Get started with AI without being a machine learning or data science expert... New on the Xamarin Blog: Using Objec… https://t.co/uwpu4pUWFj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":92,"FavoriteCount":45,"RawContent":null},{"Id":"1035572899996987397","CreatedAt":"2018-08-31T16:59:54+00:00","UserScreenname":"xamarinhq","Text":"Xamarin and .NET Developer Events in September\nHere are all the links you'll need to get involved.… https://t.co/YJAa83E61y","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":36,"RawContent":null},{"Id":"1032375788375498753","CreatedAt":"2018-08-22T21:15:43+00:00","UserScreenname":"xamarinhq","Text":"Getting Started with Android Pie. Now you can download the support for #AndroidPie inside https://t.co/7TMjXUsU4u 9… https://t.co/sNrOIuI741","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":42,"RawContent":null},{"Id":"1031653104394096640","CreatedAt":"2018-08-20T21:24:01+00:00","UserScreenname":"xamarinhq","Text":"Hey, Xamarin developers. It's time to explore and learn about the latest and greatest iOS 12 ARKit Capabilities w/… https://t.co/6x3vq5IuEb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":123,"FavoriteCount":80,"RawContent":null},{"Id":"1029840138099220487","CreatedAt":"2018-08-15T21:19:57+00:00","UserScreenname":"xamarinhq","Text":"Attend A #dotNETConf Event Near You - https://t.co/VrHYwnCS69\n\nIt's a FREE, 3-day virtual dev event co-organized by… https://t.co/tqMWcB8mJz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":35,"RawContent":null},{"Id":"1026898128509825024","CreatedAt":"2018-08-07T18:29:27+00:00","UserScreenname":"xamarinhq","Text":"- Authentication   - Encryption   - Integrity\n3 important requirements to securing network communications &amp; absolut… https://t.co/hDPkHLZsLA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":50,"RawContent":null}]}},"RunOn":"2018-10-14T05:30:52.9407188Z","RunDurationInMilliseconds":4072}