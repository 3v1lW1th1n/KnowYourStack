{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing Preview 1 of ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4","PublishedOn":"2018-01-05T20:30:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are releasing Preview 1 of ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4 on NuGet. This release contains some minor bug fixes and a couple of new features specifically targeted at...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/05/announcing-preview-1-of-asp-net-mvc-5-2-4-web-api-5-2-4-and-web-pages-3-2-4/","RawContent":null},{"Title":"Take a Break with Azure Functions","PublishedOn":"2017-12-22T05:41:48+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"So, it&#8217;s the Holidays. The office is empty, the boss is away, and you&#8217;ve got a bit of free time on your hands. How about learning a new skill and having some fun? Azure Functions are a...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/21/take-a-break-with-azure-functions/","RawContent":null},{"Title":"Testing ASP.NET Core MVC web apps in-memory","PublishedOn":"2017-12-07T17:00:35+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was written and submitted by Javier Calvarro Nelson, a developer on the ASP.NET Core MVC team Testing is an important part of the development process of any app. In this blog post...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/07/testing-asp-net-core-mvc-web-apps-in-memory/","RawContent":null},{"Title":"Configuring HTTPS in ASP.NET Core across different platforms","PublishedOn":"2017-11-29T17:00:12+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As the web moves to be more secure by default, it&#8217;s more important than ever to make sure your websites have HTTPS enabled. And if you&#8217;re going to use HTTPS in production its a good idea...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/29/configuring-https-in-asp-net-core-across-different-platforms/","RawContent":null},{"Title":"Improve website performance by optimizing images","PublishedOn":"2017-11-28T18:02:29+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We all want our web applications to load as fast as possible to give the best possible experience to the users. One of the steps to achieve that is to make sure the images we use are as optimized as...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/28/improve-website-performance-by-optimizing-images/","RawContent":null},{"Title":"Orchard Core Beta 1 released","PublishedOn":"2017-11-21T19:32:10+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"This is a guest post by Sebastien Ros on behalf of the Orchard community Two years ago, the Orchard community started developing Orchard on .NET Core. After 1,500 commits, 297,000 lines of code, 127...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/21/orchard-core-beta-annoucement/","RawContent":null},{"Title":"Announcing .NET 4.7.1 Tools for the Cloud","PublishedOn":"2017-11-17T17:41:35+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today we are releasing a set of providers for ASP.NET 4.7.1 that make it easier than ever to deploy your applications to cloud services and take advantage of cloud-scale features.  This release...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/17/announcing-net-4-7-1-tools-for-the-cloud/","RawContent":null},{"Title":"Improvements to Azure Functions in Visual Studio","PublishedOn":"2017-11-15T19:00:43+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"We&#8217;re excited to announce several improvements to the Azure Functions experience in Visual Studio as part of the latest update to the Azure Functions tools on top of Visual Studio 2017 v15.5....","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/15/improvements-to-azure-functions-in-visual-studio/","RawContent":null},{"Title":"Creating a Minimal ASP.NET Core Windows Container","PublishedOn":"2017-11-09T16:18:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post by Mike Rousos One of the benefits of containers is their small size, which allows them to be more quickly deployed and more efficiently packed onto a host than virtual machines...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/09/creating-a-minimal-asp-net-core-windows-container/","RawContent":null},{"Title":"Publishing a Web App to an Azure VM from Visual Studio","PublishedOn":"2017-11-01T22:35:42+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We know virtual machines (VMs) are one of the most popular places to run apps in Azure, but publishing to a VM from Visual Studio has been a tricky experience for some. So, we’re pleased to announce...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/01/publishing-a-web-app-to-an-azure-vm-from-visual-studio/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7063878571","Type":"IssuesEvent","CreatedAt":"2018-01-06T00:03:09","Actor":"kichalla","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Home/issues/2408","RelatedDescription":"Reopened issue \"Determine if the antiforgery cookie is considered essential\" (#2408) at aspnet/Home","RelatedBody":"_From @Tratcher on Wednesday, December 27, 2017 1:48:50 PM_\r\n\r\nRE: aspnet/Security#1561\r\n\r\nWhen this new policy is applied all non-essential cookies will be suppressed. We need to determine if anti-forgery is considered essential by default. I expect yes as it's a security feature.\r\n\r\n@blowdart\r\n\r\n_Copied from original issue: aspnet/Antiforgery#175_"},{"Id":"7063829377","Type":"IssuesEvent","CreatedAt":"2018-01-05T23:42:13","Actor":"kichalla","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2408","RelatedDescription":"Closed issue \"Determine if the antiforgery cookie is considered essential\" (#2408) at aspnet/Home","RelatedBody":"_From @Tratcher on Wednesday, December 27, 2017 1:48:50 PM_\r\n\r\nRE: aspnet/Security#1561\r\n\r\nWhen this new policy is applied all non-essential cookies will be suppressed. We need to determine if anti-forgery is considered essential by default. I expect yes as it's a security feature.\r\n\r\n@blowdart\r\n\r\n_Copied from original issue: aspnet/Antiforgery#175_"},{"Id":"7062404803","Type":"IssuesEvent","CreatedAt":"2018-01-05T17:04:53","Actor":"jkotas","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2745","RelatedDescription":"Opened issue \"Why Cors AddPolicy doesn't allow *.example.com ?\" (#2745) at aspnet/Home","RelatedBody":"_From @AhmedRagheb on January 5, 2018 13:58_\n\nHello,\r\n\r\nIs there a reason (security may be) that prevent Cors AddPolicy from adding all subdomains of my domain in Origins list. As I think it doesn't make sense to add all my subdomains to the Origins list.\r\n\r\nThanks.\n\n_Copied from original issue: dotnet/coreclr#15753_"},{"Id":"7062344190","Type":"IssuesEvent","CreatedAt":"2018-01-05T16:51:08","Actor":"johnrutherford","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2744","RelatedDescription":"Opened issue \"DataProtection version issue: The provided payload cannot be decrypted because it was not protected with this protection provider.\" (#2744) at aspnet/Home","RelatedBody":"I'm having an issue that appears to be similar to this one: \r\nhttps://github.com/aspnet/DataProtection/issues/187\r\n\r\nWe recently upgraded an ASP.NET Core 1.1 application (targeting the .NET Framework 4.6.1) to ASP.NET Core 2. \r\n\r\nWe have started getting this error message in our logs:\r\n\r\n```\r\nThe provided payload cannot be decrypted because it was not protected with this protection provider.\r\n```\r\n\r\nI've looked at the keys our application is using and they contain this, which I think may be the problem:\r\n\r\n``` xml\r\n<descriptor deserializerType=\"Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=1.1.2.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\">\r\n```\r\n"},{"Id":"7061738775","Type":"IssuesEvent","CreatedAt":"2018-01-05T14:38:44","Actor":"HappyNomad","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2743","RelatedDescription":"Opened issue \"JSON Patch: Support real extension scenarios without copying heaps of code\" (#2743) at aspnet/Home","RelatedBody":"The main goal of `Microsoft.AspNetCore.JsonPatch` is to support the JSON Patch spec.  However, there exist real-world scenarios that require **small but essential** divergence from the spec, like the one described at #2432.  People who are facing one of these situations like me, are thankful that at least some extension point exists.\r\n\r\n`IObjectAdapter`, was created to facilitate customization from **outside** the library.  This intent is apparent since (1) it's in the **public** API, and (2) it's not used internally within the library.  Judging by the large amount of code duplication necessary to use it, however, it seems it wasn't tested with a real-world customization like #2432.  To customize a few lines of code, I had to copy nine files.  (They were ClosedGenericMatcher.cs, ConversionResultProvider.cs, ErrorReporter.cs, IAdapter.cs, ListAdapter.cs, ObjectAdapter.cs, ObjectVisitor.cs, PocoAdapter.cs, and Resources.Designer.cs.)  This duplication poses the danger that (1) the copies become out-of-date with their original versions, and (2) the customized patch behavior overly diverges from the JSON Patch spec.\r\n\r\nRather than let the existing API stagnate and this problem fester, I propose the following.  Solicit actual extension scenarios from the community, in addition to the one already mentioned in #2432.  Then take those scenarios into consideration and replace or augment the `IObjectAdapter` extension point with an API that allows us to **cleanly** extend `JsonPatchDocument`.\r\n\r\nAs for what specific API change to make, I offer the following initial suggestion.  **Replace** the `IObjectAdapter` extension point with a `public interface IAdapterFactory`.  It has these `IAdapter`-returning methods: `CreateListAdapter`, `CreateDictionaryAdapter`, `CreateDynamicObjectAdapter`, and `CreatePocoAdapter`.  Use `IAdapterFactory` in `ObjectVisitor's private `SelectAdapater` method."},{"Id":"7060859377","Type":"IssuesEvent","CreatedAt":"2018-01-05T10:37:57","Actor":"SteveSandersonMS","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2301","RelatedDescription":"Closed issue \"Using Angular2's UniversalModule in a ASP.NET Core project causes application to crash\" (#2301) at aspnet/Home","RelatedBody":"I'm pretty sure this belongs here as the issue seems to be related more to VS/ASP.NET Core setup to work with Angular2 rather than anything else.\r\n\r\nSo I have set up Visual Studio 2017 to work with Angular2 and I can run the demo application just fine. However, if I try to import UniversalModule in app.module.ts, the application crashes with a *TypeError: Cannot read property 'getDOM' of undefined error*. For some reason, VS doesn't add angular2-universal while building an Angular project from the template, so I add it by command line as such:\r\n\r\n    npm install body-parser angular2-universal preboot express --save\r\n\r\nAfter that, the module angular2-universal is available in VS and I change my app.modules.ts file to this: \r\n\r\n    import { NgModule } from '@angular/core';\r\n    import { CommonModule } from '@angular/common';\r\n    import { FormsModule } from '@angular/forms';\r\n    import { HttpModule } from '@angular/http';\r\n    import { RouterModule } from '@angular/router';\r\n    import { UniversalModule } from 'angular2-universal' //Added line\r\n\r\n    import { AppComponent } from './components/app/app.component';\r\n    import { NavMenuComponent } from './components/navmenu/navmenu.component';\r\n    import { HomeComponent } from './components/home/home.component';\r\n    import { FetchDataComponent } from    './components/fetchdata/fetchdata.component';\r\n    import { CounterComponent } from './components/counter/counter.component';\r\n\r\n    @NgModule({\r\n        declarations: [\r\n            AppComponent,\r\n            NavMenuComponent,\r\n            CounterComponent,\r\n            FetchDataComponent,\r\n            HomeComponent\r\n        ],\r\n        imports: [\r\n            UniversalModule, //Added line\r\n            CommonModule,\r\n            HttpModule,\r\n            FormsModule,\r\n            RouterModule.forRoot([\r\n                { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n                { path: 'home', component: HomeComponent },\r\n                { path: 'counter', component: CounterComponent },\r\n                { path: 'fetch-data', component: FetchDataComponent },\r\n                { path: '**', redirectTo: 'home' }\r\n            ])\r\n        ]\r\n    })\r\n    export class AppModule {\r\n    }\r\n\r\nSo basically I changed only a couple of things in the template, but I can only think that I'm missing some angular2-universal dependencies. \r\n\r\nStack trace:\r\n\r\n    NodeInvocationException: Prerendering failed because of error: TypeError: Cannot read property 'getDOM' of undefined\r\n    at Object.exports.REPLACEMENT_CHARACTER (D:\\Code\\C#\\Angular\\WebApplication1\\WebApplication1\\ClientApp\\dist\\main-server.js:19196:62)\r\n    at __webpack_require__ (D:\\Code\\C#\\Angular\\WebApplication1\\WebApplication1\\ClientApp\\dist\\main-server.js:20:30)\r\n    at Object.<anonymous> (D:\\Code\\C#\\Angular\\WebApplication1\\WebApplication1\\ClientApp\\dist\\main-server.js:31031:17)\r\n    at __webpack_require__ (D:\\Code\\C#\\Angular\\WebApplication1\\WebApplication1\\ClientApp\\dist\\main-server.js:20:30)\r\n    at Object.installedModules (D:\\Code\\C#\\Angular\\WebApplication1\\WebApplication1\\ClientApp\\dist\\main-server.js:22425:10)\r\n    at __webpack_require__ (D:\\Code\\C#\\Angular\\WebApplication1\\WebApplication1\\ClientApp\\dist\\main-server.js:20:30)\r\n    at Object.<anonymous> (D:\\Code\\C#\\Angular\\WebApplication1\\WebApplication1\\ClientApp\\dist\\main-server.js:34953:13)\r\n    at __webpack_require__ (D:\\Code\\C#\\Angular\\WebApplication1\\WebApplication1\\ClientApp\\dist\\main-server.js:20:30)\r\n    at Object.<anonymous> (D:\\Code\\C#\\Angular\\WebApplication1\\WebApplication1\\ClientApp\\dist\\main-server.js:31016:10)\r\n    at __webpack_require__ (D:\\Code\\C#\\Angular\\WebApplication1\\WebApplication1\\ClientApp\\dist\\main-server.js:20:30)\r\n    Current directory is: D:\\Code\\C#\\Angular\\WebApplication1\\WebApplication1\r\n\r\nI also get a couple of warnings while installing angular2-universal:\r\n\r\n    npm WARN angular2-universal@2.1.0-rc.1 requires a peer of rxjs@~5.0.0-beta.12 but none is installed. You must install peer dependencies yourself.\r\n    npm WARN angular2-universal@2.1.0-rc.1 requires a peer of zone.js@~0.6.21 but none is installed. You must install peer dependencies yourself.\r\n\r\nAnd things go even further downhill from there. Should that be the issue, I did try to install peer dependencies, as such:\r\n\r\n    npm install --save-dev --ignore-scripts install-peers\r\n\r\nHowever, it seems to be taking no effect. Just to be sure, I created a new project and installed these dependencies before installing angular2-universal but I still get both warnings while installing the latter.\r\n\r\nNot sure what to do next."},{"Id":"7059033453","Type":"IssuesEvent","CreatedAt":"2018-01-04T23:02:11","Actor":"hscanlan","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2742","RelatedDescription":"Opened issue \"The remote party closed the WebSocket connection without completing the close handshake\" (#2742) at aspnet/Home","RelatedBody":"I have a WebSocket middleware in a .NET CORE 2.0.1 WebAPI project. \r\n\r\nI have a separate \"FrontEnd\" project, which connects fine and allows messages to be passed back and forth easily.\r\n\r\nI want to be able to send messages from my Controller to my site, so I extended my WebSocketHandler and created an abstract RecieveAsync method to override and then call via my controller.\r\n\r\nEverything works as expected, UNTIL the page is refreshed or the client leaves and comes back.\r\n\r\nThe error comes from the await SendMessageAsync(value, message) function. The website says the connection is successful on refresh / return, but the API Middleware throws the below error.\r\n\r\n{System.Net.WebSockets.WebSocketException (0x80004005): The remote party closed the WebSocket connection without completing the close handshake. ---> System.ObjectDisposedException: Cannot access a disposed object.\r\nObject name: 'FrameResponseStream'.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.FrameResponseStream.ValidateState(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.FrameResponseStream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.FrameDuplexStream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)\r\n   at System.Net.WebSockets.ManagedWebSocket.SendFrameLockAcquiredNonCancelableAsync(MessageOpcode opcode, Boolean endOfMessage, ArraySegment`1 payloadBuffer)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at API.WebSocketHandler.<SendMessageAsync>d__7.MoveNext() in C:\\Projects\\API\\API\\WebSocketManager\\WebSocketHandler.cs:line 35\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at API.WebSocketHandler.<SendMessageToAllAsync>d__9.MoveNext() in C:\\Projects\\API\\API\\WebSocketManager\\WebSocketHandler.cs:line 62}\r\n\r\n\r\n\r\nWebSocketHandler:\r\n`using CryptoGameAPI.Models.Game;\r\nusing Newtonsoft.Json;\r\nusing System;\r\nusing System.Net.WebSockets;\r\nusing System.Text;\r\nusing System.Threading;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace CryptoGameAPI\r\n{\r\n    public abstract class WebSocketHandler\r\n    {\r\n        protected WebSocketConnectionManager WebSocketConnectionManager { get; set; }\r\n\r\n        public WebSocketHandler(WebSocketConnectionManager webSocketConnectionManager)\r\n        {\r\n            WebSocketConnectionManager = webSocketConnectionManager;\r\n        }\r\n\r\n        public virtual async Task OnConnected(WebSocket socket)\r\n        {\r\n            WebSocketConnectionManager.AddSocket(socket);\r\n        }\r\n\r\n        public virtual async Task OnDisconnected(WebSocket socket)\r\n        {\r\n            await WebSocketConnectionManager.RemoveSocket(WebSocketConnectionManager.GetId(socket));\r\n        }\r\n\r\n        public async Task SendMessageAsync(WebSocket socket, string message)\r\n        {\r\n            if (socket.State != WebSocketState.Open)\r\n                return;\r\n\r\n            await socket.SendAsync(buffer: new ArraySegment<byte>(array: Encoding.ASCII.GetBytes(message),\r\n                                                                  offset: 0,\r\n                                                                  count: message.Length),\r\n                                   messageType: WebSocketMessageType.Text,\r\n                                   endOfMessage: true,\r\n                                   cancellationToken: CancellationToken.None);\r\n        }\r\n\r\n        public async Task SendMessageAsync(string socketId, string message)\r\n        {\r\n            try\r\n            {\r\n                await SendMessageAsync(WebSocketConnectionManager.GetSocketById(socketId), message);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                throw ex;\r\n            }\r\n        }\r\n\r\n        public async Task SendMessageToAllAsync(string message)\r\n        {\r\n            try\r\n            {\r\n\r\n                foreach (var pair in WebSocketConnectionManager.GetAll())\r\n                {\r\n                    if (pair.Value.State == WebSocketState.Open)\r\n                        await SendMessageAsync(pair.Value, message);\r\n                }\r\n\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                throw ex;\r\n            }\r\n        }\r\n\r\n        public abstract Task ReceiveAsync(WebSocket socket, WebSocketReceiveResult result, byte[] buffer);\r\n    }\r\n}`\r\n\r\nThe override:\r\n`using API.Models.Game;\r\nusing Newtonsoft.Json;\r\nusing System.Net.WebSockets;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace API\r\n{\r\n    public class MessageHandler : WebSocketHandler\r\n    {\r\n        public MessageHandler(WebSocketConnectionManager webSocketConnectionManager) : base(webSocketConnectionManager)\r\n        {\r\n        }\r\n\r\n        public override async Task OnConnected(WebSocket socket)\r\n        {\r\n            await base.OnConnected(socket);\r\n\r\n            var socketId = WebSocketConnectionManager.GetId(socket);\r\n            await SendMessageToAllAsync($\"{socketId} is now connected\");\r\n        }\r\n\r\n        public override async Task ReceiveAsync(WebSocket socket, WebSocketReceiveResult result, byte[] buffer)\r\n        {\r\n            var socketId = WebSocketConnectionManager.GetId(socket);\r\n            \r\n            var message = $\": {Encoding.UTF8.GetString(buffer, 0, result.Count)}\";\r\n\r\n            var cmhm = new MessageHandlerModel();\r\n            cmhm.MessageType = \"Chat\";\r\n            cmhm.Message = message;\r\n\r\n            string json = await Task.Run(() => JsonConvert.SerializeObject(cmhm));\r\n            await SendMessageToAllAsync(json);\r\n        }\r\n    }\r\n}`\r\n\r\nHow I'm sending the message from the controller:\r\n\r\n`\r\n        [HttpGet]\r\n        public async Task SendMessage([FromQueryAttribute]CryptoMessageHandlerModel cmhm)\r\n        {\r\n            string json = await Task.Run(() => JsonConvert.SerializeObject(cmhm));\r\n            await _cryptoMessageHandler.SendMessageToAllAsync(json);\r\n        }\r\n`\r\n\r\n"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7063513564","Type":"PullRequestEvent","CreatedAt":"2018-01-05T21:57:20","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1254","RelatedDescription":"Merged pull request \"Invoke Multiple Groups\" (#1254) at aspnet/SignalR","RelatedBody":"Part of https://github.com/aspnet/SignalR/issues/734"},{"Id":"7063120738","Type":"PullRequestEvent","CreatedAt":"2018-01-05T20:07:27","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1269","RelatedDescription":"Merged pull request \"MultipleClients -> Clients\" (#1269) at aspnet/SignalR","RelatedBody":"Renaming `MultipleClients `to `Clients `is now possible after the `HubContext `refactor 6baee8b7a98f32bc7fc7c448a068eda74c237296\r\n  "},{"Id":"7062993330","Type":"PullRequestEvent","CreatedAt":"2018-01-05T19:34:26","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1275","RelatedDescription":"Opened pull request \"Support stream cancellation on TS client\" (#1275) at aspnet/SignalR","RelatedBody":"https://github.com/aspnet/SignalR/issues/898"},{"Id":"7062987487","Type":"IssuesEvent","CreatedAt":"2018-01-05T19:33:05","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/860","RelatedDescription":"Closed issue \"Issue with disposing the HttpConnection\" (#860) at aspnet/SignalR","RelatedBody":"```\r\nFailed   Microsoft.AspNetCore.SignalR.Client.FunctionalTests.HubConnectionTests.CheckFixedMessage(protocol: JsonHubProtocol { Name = \"json\", Type = Text }, transportType: ServerSentEvents, path: \"/dynamic\")\r\nError Message:\r\n System.ObjectDisposedException : The CancellationTokenSource has been disposed.\r\nStack Trace:\r\n   at System.Threading.CancellationTokenSource.ThrowObjectDisposedException()\r\n   at System.Threading.CancellationTokenSource.Cancel()\r\n   at System.Net.Http.HttpClient.Dispose(Boolean disposing)\r\n   at Microsoft.AspNetCore.Sockets.Client.HttpConnection.<DisposeAsyncCore>d__53.MoveNext() in \r\n```"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7063971214","Type":"IssuesEvent","CreatedAt":"2018-01-06T00:46:06","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/5822","RelatedDescription":"Closed issue \"Consume new Microsoft.AspNet.WebApi.Client.5.2.4 package\" (#5822) at aspnet/Mvc","RelatedBody":"Our Microsoft.AspNetCore.Mvc.WebApiCompatShim package currently has an indirect dependency on the Microsoft.Net.Http package. Building the shim project requires imports when targeting .NET Standard for the same reason. Both issues could be avoided if we moved to the latest Microsoft.AspNet.WebApi.Client package.\r\n\r\nSee also\r\n- #5562, an older report of related problems\r\n- aspnet/AspNetWebStack#45, tracking publishing the Microsoft.AspNet.WebApi.Client v5.2.4 package for realsies\r\n- aspnet/AspNetWebStack#4, which covered adding .NET Standard 1.1. support to the Microsoft.AspNet.WebApi.Client package\r\n- the current [Microsoft.AspNetCore.Mvc.WebApiCompatShim package](https://dotnet.myget.org/feed/aspnetcore-ci-dev/package/nuget/Microsoft.AspNetCore.Mvc.WebApiCompatShim)\r\n- the current [Microsoft.AspNet.WebApi.Client package](https://www.nuget.org/packages/Microsoft.AspNet.WebApi.Client/)\r\n- the new [Microsoft.AspNet.WebApi.Client package](https://www.myget.org/feed/aspnetwebstacknightly/package/nuget/Microsoft.AspNet.WebApi.Client)"},{"Id":"7063966729","Type":"PullRequestEvent","CreatedAt":"2018-01-06T00:43:53","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7200","RelatedDescription":"Closed pull request \"Use latest `Microsoft.AspNet.WebApi.Client` package\" (#7200) at aspnet/Mvc","RelatedBody":"- #5822\r\n- update `Microsoft.AspNet.WebApi.Client` package version\r\n- remove remaining few `$(PackageTargetFallback)` settings\r\n- remove .NET Standard-specific files\r\n  - they duplicate what Microsoft.AspNet.WebApi.Client now provides\r\n  - necessary only if cross-compiling a PCL version of the WebApiCompatShim\r\n  - add type forwarding for the removed `public` types\r\n- reenable .NET Framework WebApiCompatShim tests\r\n- add breaking change record for `MediaTypeFormatterMatchRanking` value change\r\n  - version of this type in the shim lacked the `MatchOnRequestWithMediaTypeMapping` value"},{"Id":"7063829379","Type":"PullRequestEvent","CreatedAt":"2018-01-05T23:42:13","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7198","RelatedDescription":"Merged pull request \"Marked CookieTempDataProvider's cookie as non-essential\" (#7198) at aspnet/Mvc","RelatedBody":"Fixes https://github.com/aspnet/Home/issues/2408 : Determine if the antiforgery cookie is considered essential"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7059095918","Type":"PullRequestEvent","CreatedAt":"2018-01-04T23:23:01","Actor":"natemcmaster","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1554","RelatedDescription":"Merged pull request \"Merge release/2.0.0 (without changes)\" (#1554) at aspnet/Identity","RelatedBody":"Resolves #1522 \r\n\r\nChanges on this branch were already cherry-picked to dev\r\n  "},{"Id":"7059082029","Type":"PullRequestEvent","CreatedAt":"2018-01-04T23:18:22","Actor":"natemcmaster","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1554","RelatedDescription":null,"RelatedBody":"Resolves #1522 \r\n\r\nChanges on this branch were already cherry-picked to dev\r\n  "},{"Id":"7059070694","Type":"PullRequestEvent","CreatedAt":"2018-01-04T23:14:25","Actor":"natemcmaster","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1554","RelatedDescription":"Closed pull request \"Merge release/2.0.0 (without changes)\" (#1554) at aspnet/Identity","RelatedBody":"Resolves #1522 \r\n\r\nChanges on this branch were already cherry-picked to dev\r\n  "},{"Id":"7059065255","Type":"IssuesEvent","CreatedAt":"2018-01-04T23:12:33","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1522","RelatedDescription":"Closed issue \"Merge all changes from release/2.0.0 back to dev\" (#1522) at aspnet/Identity","RelatedBody":"I'm not sure https://github.com/aspnet/Identity/pull/1485 made it back into dev. I tried merge the branches and there were a bunch of conflicts. We should look into this closer."},{"Id":"7059030766","Type":"PullRequestEvent","CreatedAt":"2018-01-04T23:01:24","Actor":"natemcmaster","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1554","RelatedDescription":"Opened pull request \"Merge release/2.0.0 (without changes)\" (#1554) at aspnet/Identity","RelatedBody":"Resolves #1522 "}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7062496075","Type":"IssuesEvent","CreatedAt":"2018-01-05T17:26:20","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2182","RelatedDescription":"Closed issue \"Change ITlsApplicationProtocolFeature.ApplicationProtocol to Span<byte>\" (#2182) at aspnet/KestrelHttpServer","RelatedBody":"https://github.com/aspnet/KestrelHttpServer/blob/76de77746dd900058f7bd49f66debdd245cf9260/src/Kestrel.Core/Features/ITlsApplicationProtocolFeature.cs#L7-L10\r\n\r\nThis property should not be represented as a string because the ALPN spec intentionally defines it as an \"opaque byte string\" and not a textual string:\r\n\r\n> Protocols are named by IANA-registered, opaque, non-empty byte strings, as described further in Section 6 (\"IANA Considerations\") of this document.\r\n>\r\n> https://tools.ietf.org/html/rfc7301#section-3.1\r\n\r\nThe fact that the currently-registered values are all valid UTF-8 strings is not required by the spec so we shouldn't require it in our type.\r\n\r\nWe could use `byte[]`, which is relatively safe performance-wise since in fast paths this will almost always be set to an existing constant value. Or we could go with the new hotness and make it return `ReadOnlyMemory<byte>`. Probably the latter is best even if we always just end up backing it with a predefined constant array.\r\n\r\n/cc @benaadams @Tratcher @davidfowl "},{"Id":"7062169061","Type":"IssuesEvent","CreatedAt":"2018-01-05T16:13:02","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2244","RelatedDescription":"Opened issue \"Query Does Kestrel support OCSP Stapling\" (#2244) at aspnet/KestrelHttpServer","RelatedBody":"_From @rsrinivasanhome on January 5, 2018 13:28_\n\nDoes Kestrel Support OCSP Stapling ?  I am not able to find any links on google.\r\n\n\n_Copied from original issue: aspnet/AspNetCoreModule#283_"},{"Id":"7059903637","Type":"IssuesEvent","CreatedAt":"2018-01-05T05:13:55","Actor":"rynowak","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2241","RelatedDescription":"Closed issue \"ConnectionResetException with 2.0.0 kestrel running on netcoreapp2.1\" (#2241) at aspnet/KestrelHttpServer","RelatedBody":"We hit this in issue in JitBench running on the ASP.NET Core 2.0.0 libraries against latest bits of CoreFx. See https://github.com/aspnet/JitBench/issues/80\r\n\r\nThe easiest way to repro is:\r\nClone aspnet/JitBench\r\nrun appveyor.ps1 (that will fail)\r\ndotnet run or launch VS from the same console.\r\n\r\nJitBench will throw trying to do an HTTP request as part of it's measurements, but the more interesting part is that that site is unreachable using a browser.\r\n\r\n```\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.Internal.ConnectionResetException\r\n  HResult=0x80131620\r\n  Message=Error -4077 ECONNRESET connection reset by peer\r\n  Source=Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions\r\n  StackTrace:\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.PipeCompletion.ThrowFailed()\r\n\r\nInner Exception 1:\r\nUvException: Error -4077 ECONNRESET connection reset by peer\r\n\r\n>\tMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.dll!Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.PipeCompletion.ThrowFailed()\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.dll!Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.GetResult(ref Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.ReadResult result)\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.dll!Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.IReadableBufferAwaiter.GetResult()\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Core.dll!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context>.ProcessRequestsAsync()\tUnknown\r\n \tSystem.Private.CoreLib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state)\tUnknown\r\n \tSystem.Private.CoreLib.dll!System.Runtime.CompilerServices.AsyncTaskMethodBuilder<System.Threading.Tasks.VoidTaskResult>.AsyncStateMachineBox<Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context>.<ProcessRequestsAsync>d__2>.MoveNext()\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.dll!Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe..cctor.AnonymousMethod__67_3(object o)\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Core.dll!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.LoggingThreadPool.Schedule.AnonymousMethod__0()\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Core.dll!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.LoggingThreadPool.RunAction.AnonymousMethod__3_0(object o)\tUnknown\r\n \tSystem.Private.CoreLib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state)\tUnknown\r\n \tSystem.Private.CoreLib.dll!System.Threading.ThreadPoolWorkQueue.Dispatch()\tUnknown\r\n\r\n```\r\n\r\ndotnet --info\r\n```\r\n.NET Command Line Tools (2.2.0-preview1-007855)\r\n\r\nProduct Information:\r\n Version:            2.2.0-preview1-007855\r\n Commit SHA-1 hash:  5be3d62b82\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.15063\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   D:\\k\\JitBench\\.dotnet\\sdk\\2.2.0-preview1-007855\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.1.0-preview1-26102-01\r\n  Build    : 280fa5d18f7d5b233fbb81572801b9a3fb1ae12a\r\n```"},{"Id":"7059252030","Type":"IssuesEvent","CreatedAt":"2018-01-05T00:20:47","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2182","RelatedDescription":"Reopened issue \"Change ITlsApplicationProtocolFeature.ApplicationProtocol to Span<byte>\" (#2182) at aspnet/KestrelHttpServer","RelatedBody":"https://github.com/aspnet/KestrelHttpServer/blob/76de77746dd900058f7bd49f66debdd245cf9260/src/Kestrel.Core/Features/ITlsApplicationProtocolFeature.cs#L7-L10\r\n\r\nThis property should not be represented as a string because the ALPN spec intentionally defines it as an \"opaque byte string\" and not a textual string:\r\n\r\n> Protocols are named by IANA-registered, opaque, non-empty byte strings, as described further in Section 6 (\"IANA Considerations\") of this document.\r\n>\r\n> https://tools.ietf.org/html/rfc7301#section-3.1\r\n\r\nThe fact that the currently-registered values are all valid UTF-8 strings is not required by the spec so we shouldn't require it in our type.\r\n\r\nWe could use `byte[]`, which is relatively safe performance-wise since in fast paths this will almost always be set to an existing constant value. Or we could go with the new hotness and make it return `ReadOnlyMemory<byte>`. Probably the latter is best even if we always just end up backing it with a predefined constant array.\r\n\r\n/cc @benaadams @Tratcher @davidfowl "},{"Id":"7059125203","Type":"IssuesEvent","CreatedAt":"2018-01-04T23:33:23","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2182","RelatedDescription":"Closed issue \"Change ITlsApplicationProtocolFeature.ApplicationProtocol to Span<byte>\" (#2182) at aspnet/KestrelHttpServer","RelatedBody":"https://github.com/aspnet/KestrelHttpServer/blob/76de77746dd900058f7bd49f66debdd245cf9260/src/Kestrel.Core/Features/ITlsApplicationProtocolFeature.cs#L7-L10\r\n\r\nThis property should not be represented as a string because the ALPN spec intentionally defines it as an \"opaque byte string\" and not a textual string:\r\n\r\n> Protocols are named by IANA-registered, opaque, non-empty byte strings, as described further in Section 6 (\"IANA Considerations\") of this document.\r\n>\r\n> https://tools.ietf.org/html/rfc7301#section-3.1\r\n\r\nThe fact that the currently-registered values are all valid UTF-8 strings is not required by the spec so we shouldn't require it in our type.\r\n\r\nWe could use `byte[]`, which is relatively safe performance-wise since in fast paths this will almost always be set to an existing constant value. Or we could go with the new hotness and make it return `ReadOnlyMemory<byte>`. Probably the latter is best even if we always just end up backing it with a predefined constant array.\r\n\r\n/cc @benaadams @Tratcher @davidfowl "},{"Id":"7059122377","Type":"PullRequestEvent","CreatedAt":"2018-01-04T23:32:23","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2239","RelatedDescription":"Merged pull request \"Change ApplicationProtocol to ReadOnlyMemory<byte> \" (#2239) at aspnet/KestrelHttpServer","RelatedBody":"#2182 \r\nIn the process I realized the prior change for merging the https and core packages had dropped the new netcoreapp2.1 TFM so all of the HTTP/2 code was disabled. Filed https://github.com/aspnet/KestrelHttpServer/issues/2238 for followup."},{"Id":"7058922740","Type":"IssuesEvent","CreatedAt":"2018-01-04T22:29:13","Actor":"muratg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2191","RelatedDescription":"Closed issue \"Apparent regression in Plaintext around 15-Nov\" (#2191) at aspnet/KestrelHttpServer","RelatedBody":"It seems a regression was introduced around 15-Nov, affecting Plaintext for both libuv and sockets transports. See https://msit.powerbi.com/view?r=eyJrIjoiYTZjMTk3YjEtMzQ3Yi00NTI5LTg5ZDItNmUyMGRlOTkwMGRlIiwidCI6IjcyZjk4OGJmLTg2ZjEtNDFhZi05MWFiLTJkN2NkMDExZGI0NyIsImMiOjV9\r\n\r\n![image](https://user-images.githubusercontent.com/249088/33411076-4ffe6fdc-d538-11e7-913f-f9dea867d250.png)\r\n\r\n@halter73 @davidfowl @sebastienros @muratg \r\n"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7064194703","Type":"PullRequestEvent","CreatedAt":"2018-01-06T03:22:07","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1910","RelatedDescription":"Opened pull request \"Add RelativePhysicalPath\" (#1910) at aspnet/Razor","RelatedBody":"The FilePath property on RPI isn't what we want for use in the compiler,\r\nit's more of a view engine concept. Adding a property that does what we\r\nwant."},{"Id":"7064145861","Type":"PullRequestEvent","CreatedAt":"2018-01-06T02:41:00","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1909","RelatedDescription":"Opened pull request \"Remove Get/SetRelativePath\" (#1909) at aspnet/Razor","RelatedBody":""},{"Id":"7064113592","Type":"PullRequestEvent","CreatedAt":"2018-01-06T02:15:07","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1908","RelatedDescription":"Merged pull request \"Add relative path to source document\" (#1908) at aspnet/Razor","RelatedBody":"Adding this via a properties object that encompasses all of the optional\r\nproperties. This way if we need to add more items that are optional we\r\ncan continue to do so without overload explosion."},{"Id":"7064005351","Type":"PullRequestEvent","CreatedAt":"2018-01-06T01:04:42","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1908","RelatedDescription":"Opened pull request \"Add relative path to source document\" (#1908) at aspnet/Razor","RelatedBody":"Adding this via a properties object that encompasses all of the optional\r\nproperties. This way if we need to add more items that are optional we\r\ncan continue to do so without overload explosion."},{"Id":"7063955170","Type":"IssuesEvent","CreatedAt":"2018-01-06T00:38:17","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1784","RelatedDescription":"Closed issue \"Upload 15.6-preview1 symbols\" (#1784) at aspnet/Razor","RelatedBody":""},{"Id":"7063284165","Type":"IssuesEvent","CreatedAt":"2018-01-05T20:52:37","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1872","RelatedDescription":"Closed issue \"Run Razor.Design tests using desktop msbuild\" (#1872) at aspnet/Razor","RelatedBody":"We currently run these tests using `dotnet msbuild` but this would not cover the primary scenario of the tasks \\ targets running from desktop msbuild in VS. We should add a couple of E2E tests to verify this works."}],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"6760798601","Type":"IssuesEvent","CreatedAt":"2017-10-24T22:00:58","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/67","RelatedDescription":"Closed issue \"External Logins does not set the Email\" (#67) at aspnet/Templates","RelatedBody":"- Enable Facebook Login\n- Login using Facebook for the first time\n- Email field is blank. It should be set from what we got from Facebook\n"},{"Id":"6760789807","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:58:48","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/86","RelatedDescription":"Closed issue \"Identity: Consider less generic name for ManageController\" (#86) at aspnet/Templates","RelatedBody":"Manage is a very generic name and you would probably expect http://abcdefg/Manage to be about managing something from your applications business domain rather than user accounts.\n\nManageAccount would probably be a better name.\n"},{"Id":"6760785159","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:57:37","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/115","RelatedDescription":"Closed issue \"Need more templates\" (#115) at aspnet/Templates","RelatedBody":"MVC 6 project templates should include a test project template. And the main ASP.NET 5 Preview Templates / Web Application or ... / Empty templates should have a few more sub-options, enabling for example addition and removal of XML support, creation of a minimal MVC project, or adding in EF (without choosing Individual User Accounts authentication).\n\nHopefully this will allow the new project dialogue to enable the options shown below -- plus a few options specific to MVC 6.\n![disabled project features](https://cloud.githubusercontent.com/assets/6431421/8257821/2a76a606-1665-11e5-8e75-cdb21473f6a1.png)\n"},{"Id":"6760779940","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:56:18","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/104","RelatedDescription":"Closed issue \"OrgAuth: Account Controller should return void\" (#104) at aspnet/Templates","RelatedBody":"Since https://github.com/aspnet/Mvc/issues/2409 is fixed. We should change the AccountController for SSO/ MultiOrg to return void\n"},{"Id":"6760777806","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:46","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/120","RelatedDescription":"Closed issue \"Template feedback\" (#120) at aspnet/Templates","RelatedBody":"Porting from MVC repo https://github.com/aspnet/Mvc/issues/2637\n"},{"Id":"6760775251","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:10","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/137","RelatedDescription":"Closed issue \"Need a SPA template\" (#137) at aspnet/Templates","RelatedBody":""},{"Id":"6760770959","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:54:08","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/365","RelatedDescription":"Closed issue \"Poor user and dev experience in Identity email confirmation\" (#365) at aspnet/Templates","RelatedBody":"There are two issues using the default template for identity when using email confirmation.\n\nFollowing the guide here: http://docs.asp.net/en/latest/security/authentication/accconfirm.html\n\nPoor user experience: When you click \"Register\" it sends the email off, but just redirects the user to the Home controller. Redirecting to something else to indicate they have to confirm their account would be a better example. Perhaps the default template should have such a view OOTB.\n\nPoor dev experience: When logging in with an external account (lets say Facebook) if the account doesn't exist you get thrown into AccountController.ExternalLoginConfirmation, great. This screen requires an email, so you complete the registration then you're logged in but never shoots off the email confirmation link here. Perhaps a commented out section in this action to deal with this would improve the dev experience here.\n"},{"Id":"6760770378","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:59","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/382","RelatedDescription":"Closed issue \"MVC Template Should Apply ResponseCache Attribute to Error Action\" (#382) at aspnet/Templates","RelatedBody":"HomeController.Error() should be updated:\n\n```\n    [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]\n    public IActionResult Error()\n    {\n        return View();\n    }\n```\n\nThere is no good scenario where you would want errors to be cached, either on the client or via a proxy, or to have error information stored in such caches (especially if it might contain sensitive information in stack traces, etc.).\n"},{"Id":"6760769801","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:51","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/406","RelatedDescription":"Closed issue \"Add a flow for changing email in the Manage page\" (#406) at aspnet/Templates","RelatedBody":"Porting from ASP.NET Identity repo https://github.com/aspnet/Identity/issues/727\n"},{"Id":"6760769204","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:42","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/423","RelatedDescription":"Closed issue \"Don't create Project_Readme.html for ASP.NET 5 Empty\" (#423) at aspnet/Templates","RelatedBody":"I created an empty project for both ASP.NET 4 and ASP.NET 5. The ASP.NET 5 project had a Project_Readme.html and the ASP.NET 4 one did not. I'm not aware if that was on purpose or not, but we should be consistent with the empty projects. I think we should not add the Project_Readme.html for all Empty projects.\n"},{"Id":"6760768174","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:28","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/444","RelatedDescription":"Closed issue \"Support On-Premises option for Work & School Accounts\" (#444) at aspnet/Templates","RelatedBody":"Support this for Web APIs and Web Apps.\n"},{"Id":"6760767634","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:19","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/451","RelatedDescription":"Closed issue \"ValidationSummary.All should be replaced with ModelOnly\" (#451) at aspnet/Templates","RelatedBody":"All the views in the Accounts folder use\n`<div asp-validation-summary=\"ValidationSummary.All\" class=\"text-danger\"></div>`\n\nThey should just use \n`<div asp-validation-summary=\"ValidationSummary.ModelOnly\" class=\"text-danger\"></div>`\n\nSo you get each error twice. \n\n![image](https://cloud.githubusercontent.com/assets/3605364/13896326/ae916ee2-ed2b-11e5-8bf5-f9ad5246e82c.png)\n"}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"6856182602","Type":"PullRequestEvent","CreatedAt":"2017-11-15T02:15:11","Actor":"Andrew-MSFT","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Tooling/pull/1064","RelatedDescription":"Merged pull request \"Re adding\" (#1064) at aspnet/Tooling","RelatedBody":"Submitting with the right location. Not sure why the missing-template.md file got tacked on at the end..."},{"Id":"6856061013","Type":"PullRequestEvent","CreatedAt":"2017-11-15T01:32:45","Actor":"cristy","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/pull/1064","RelatedDescription":"Opened pull request \"Re adding\" (#1064) at aspnet/Tooling","RelatedBody":"Submitting with the right location. Not sure why the missing-template.md file got tacked on at the end..."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7048395292","Type":"IssuesEvent","CreatedAt":"2018-01-02T17:35:05","Actor":"Eilon","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/283","RelatedDescription":"Opened issue \"Using the \"Home\" repo for issue management of other repos\" (#283) at aspnet/Announcements","RelatedBody":"Hi all,\r\n\r\nWe are experimenting to try and use the [Home repo's issue tracker](https://github.com/aspnet/Home/issues) to manage issues for multiple repos. To start with, we have moved the bugs from several other repos to the Home repo, and we will retire the issue trackers of those other repos.\r\n\r\nWe are doing this to try to improve the experience of logging issues for ASP.NET Core.\r\n\r\n* Labels in the form of `repo:RepoName` are used to associate the bug with a product/feature area\r\n* For issue trackers that moved to the Home repo, please log new issues in the Home repo. If a bug is logged in a moved issue tracker, it will be closed.\r\n* Over time, we plan to consolidate more issue trackers into the Home repo\r\n\r\nFor discussions on this topic, please go to https://github.com/aspnet/Home/issues/2736.\r\n\r\nThanks,\r\nEilon\r\n"},{"Id":"6909206856","Type":"IssuesEvent","CreatedAt":"2017-11-27T20:34:10","Actor":"pranavkm","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/282","RelatedDescription":"Opened issue \"aspnetcore-ci-*, aspnetcore-volatile-* feeds being deprecated\" (#282) at aspnet/Announcements","RelatedBody":"As part of some of our infrastructural changes, we're discontinuing the use of the following feeds and may remove them entirely in the future:\r\n* https://dotnet.myget.org/f/aspnetcore-ci-dev \r\n* https://dotnet.myget.org/f/aspnetcore-ci-release\r\n* https://dotnet.myget.org/f/aspnetcore-volatile-dev\r\n* https://dotnet.myget.org/f/aspnetcore-volatile-release\r\n\r\nIf you're currently using one of these feeds in your projects to pick up our daily builds, we recommend migrating to https://dotnet.myget.org/f/aspnetcore-dev.\r\n\r\nPlease use this discussion topic - https://github.com/aspnet/Home/issues/2292 - for feedback and questions. "}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"949414507759124480","CreatedAt":"2018-01-05T22:57:12+00:00","UserScreenname":"aspnet","Text":"Announcing Preview 1 of #ASPNET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4 https://t.co/xVYhW7ospD","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":51,"FavoriteCount":36,"RawContent":null},{"Id":"948916811034234882","CreatedAt":"2018-01-04T13:59:32+00:00","UserScreenname":"aspnet","Text":"At 10am ET, join our Jeff Fritz (@csharpfritz) for LIVE CODING and he'll answer your questions and .NET, ASPNet, an… https://t.co/SPEnBXEEbC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":5,"RawContent":null},{"Id":"948343098278477824","CreatedAt":"2018-01-02T23:59:48+00:00","UserScreenname":"aspnet","Text":"The ASPNET Community Standup is live at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":16,"FavoriteCount":5,"RawContent":null},{"Id":"944564608404205568","CreatedAt":"2017-12-23T13:45:26+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz - @csharpfritz and MVP @IrisClasson in about an hour for LIVE CODING and pair programming on… https://t.co/RuFa6Hh6S7","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":5,"RawContent":null},{"Id":"943234846289289217","CreatedAt":"2017-12-19T21:41:26+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz (@csharpfritz) in a little more than 2 hours for LIVE CODING. He's working on an @aspnet Core p… https://t.co/wEDxxFaCxu","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":2,"RawContent":null},{"Id":"942039735207448576","CreatedAt":"2017-12-16T14:32:29+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz in 30 minutes for some LIVE CODING and answering your questions about .NET and Visual Studio.  https://t.co/OakzDOKxUB","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null},{"Id":"941295101271212032","CreatedAt":"2017-12-14T13:13:35+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz at 10am ET for a LIVE CODING session.  He'll answer your questions about .NET, Visual Studio, a… https://t.co/aG5z9e5Rgr","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":5,"RawContent":null},{"Id":"941015999809249280","CreatedAt":"2017-12-13T18:44:32+00:00","UserScreenname":"aspnet","Text":"Join @csharpfritz in about 15 minutes on Mixer or Twitch for a two-hour LIVE .NET CODING session where he will answ… https://t.co/OC1nGXILjO","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":7,"RawContent":null},{"Id":"938192857902354432","CreatedAt":"2017-12-05T23:46:22+00:00","UserScreenname":"aspnet","Text":"We're live for the #ASPNET Community Standup now at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":7,"RawContent":null},{"Id":"938163679614214144","CreatedAt":"2017-12-05T21:50:26+00:00","UserScreenname":"aspnet","Text":"Join us for the #aspnet Community Standup today at 3:45 PM Pacific time - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":6,"RawContent":null},{"Id":"931580871378964481","CreatedAt":"2017-11-17T17:52:42+00:00","UserScreenname":"aspnet","Text":"Check out our new ConfigurationBuilders that make it easier than ever to use Azure Key Vault, Environment Variables… https://t.co/itxdVWOnG5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":36,"FavoriteCount":7,"RawContent":null},{"Id":"917884946324250624","CreatedAt":"2017-10-10T22:49:59+00:00","UserScreenname":"aspnet","Text":"The #aspnet Community Standup starts now - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2018-01-06T05:30:09.9322063Z","RunDurationInMilliseconds":8229}