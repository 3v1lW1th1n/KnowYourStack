{"Data":{"Sdk":{"Events":[{"Id":"7799331095","Type":"PullRequestEvent","CreatedAt":"2018-06-08T21:36:58","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/508","RelatedDescription":"Merged pull request \"Update SignClient\" (#508) at OfficeDev/Open-XML-SDK","RelatedBody":"Fixes #507 "},{"Id":"7799331084","Type":"IssuesEvent","CreatedAt":"2018-06-08T21:36:58","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/507","RelatedDescription":"Closed issue \"Signing service is down\" (#507) at OfficeDev/Open-XML-SDK","RelatedBody":"It appears that the signing service is down. @onovotny Is there a change we need to account for? We're seeing 400 errors in our signing step. We're prepping for a release, so we're only noticing it now, but I did a quick check on some older builds (we sign for our CI service) and see that it has been failing.\r\n\r\nExample: https://ci.appveyor.com/project/openxmlsdk/open-xml-sdk/build/2.9.0.build.641\r\n\r\n@tomjebo We need to fail the builds when signing fails in the future to catch this quicker"},{"Id":"7799296648","Type":"PullRequestEvent","CreatedAt":"2018-06-08T21:27:59","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/508","RelatedDescription":"Opened pull request \"Update SignClient\" (#508) at OfficeDev/Open-XML-SDK","RelatedBody":"Fixes #507 "},{"Id":"7798638494","Type":"IssuesEvent","CreatedAt":"2018-06-08T18:51:59","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/507","RelatedDescription":"Opened issue \"Signing service is down\" (#507) at OfficeDev/Open-XML-SDK","RelatedBody":"It appears that the signing service is down. @onovotny Is there a change we need to account for? We're seeing 400 errors in our signing step. We're prepping for a release, so we're only noticing it now, but I did a quick check on some older builds (we sign for our CI service) and see that it has been failing.\r\n\r\nExample: https://ci.appveyor.com/project/openxmlsdk/open-xml-sdk/build/2.9.0.build.641\r\n\r\n@tomjebo We need to fail the builds when signing fails in the future to catch this quicker"},{"Id":"7791096793","Type":"IssuesEvent","CreatedAt":"2018-06-07T14:04:07","Actor":"igitur","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/506","RelatedDescription":"Opened issue \"Workbook with custom properties becomes corrupt\" (#506) at OfficeDev/Open-XML-SDK","RelatedBody":"# Before submitting an issue, please fill this out\r\n\r\nIs this a:\r\n- [X] Issue with the OpenXml library\r\n- [ ] Question on library usage\r\n\r\n**Description**\r\n\r\nUsing OpenXML to purely open and save a file (without any manipulation) causes a corrupt file, i.e. Excel 2013 64b complains:\r\n![image](https://user-images.githubusercontent.com/145854/41104354-74e23734-6a6b-11e8-856f-184535172d76.png)\r\n\r\nThis problem occurs only when using .NET Core, not with .NET Framework.\r\n\r\n**Information**\r\n\r\n- .NET Target: .NET Core 2.0\r\n- DocumentFormat.OpenXml Version: 2.8.1\r\n- System.IO.Packaging Version: v.4.5.0 (explicitly added)\r\n\r\n**Repro**\r\n\r\n```csharp\r\nusing DocumentFormat.OpenXml.Packaging;\r\nusing DocumentFormat.OpenXml.Validation;\r\nusing System;\r\n\r\nnamespace OpenXMLCustomPropertyPackagingProblemCore\r\n{\r\n    internal class Program\r\n    {\r\n        private static void Main(string[] args)\r\n        {\r\n            LoadAndValidate(\"test.xlsx\");\r\n\r\n            Console.WriteLine(\"Done.\");\r\n            Console.ReadKey(false);\r\n        }\r\n\r\n        public static void LoadAndValidate(string sourcePath)\r\n        {\r\n            using (SpreadsheetDocument package = SpreadsheetDocument.Open(sourcePath, true))\r\n            {\r\n                var validator = new OpenXmlValidator();\r\n                var errors = validator.Validate(package);\r\n            }\r\n        }\r\n    }\r\n}\r\n``` \r\nInput file: [test.xlsx](https://github.com/OfficeDev/Open-XML-SDK/files/2080722/test.xlsx)\r\n\r\n**Observed**\r\n\r\n`test.xlsx` becomes corrupt.\r\n\r\n**Expected**\r\n\r\n`test.xlsx` remains readable by Excel.\r\n"},{"Id":"7757795876","Type":"PullRequestEvent","CreatedAt":"2018-05-31T17:28:08","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/504","RelatedDescription":"Merged pull request \"Update System.IO.Packaging to 4.5.0\" (#504) at OfficeDev/Open-XML-SDK","RelatedBody":"Fixes #221, #401 "}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[{"Id":"7788135122","Type":"IssuesEvent","CreatedAt":"2018-06-07T02:41:59","Actor":"v-fanfan","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/226","RelatedDescription":"Opened issue \"This is no Open-Xml-PowerTools.psm1 file, that I can import module to PS\" (#226) at OfficeDev/Open-Xml-PowerTools","RelatedBody":""},{"Id":"7767513467","Type":"IssuesEvent","CreatedAt":"2018-06-03T07:16:04","Actor":"YoungroKim","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/225","RelatedDescription":"Closed issue \"The bookmark ID may also be a string.\" (#225) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"The bookmark ID can also be a string. However, the code below assumes that the bookmark ID always contains only digits.\r\n\r\nDocumentBuilder.cs\r\n\r\n`\r\nprivate static void AdjustUniqueIds(WordprocessingDocument sourceDocument,\r\n            WordprocessingDocument newDocument, IEnumerable<XElement> newContent)\r\n        {\r\n            ......\r\n                int id = (int)item.Attribute(W.id);\r\n                if (!bookmarkIdMap.ContainsKey(id))\r\n                    bookmarkIdMap.Add(id, ++maxId);\r\n......\r\n        }\r\n`"},{"Id":"7767499472","Type":"IssuesEvent","CreatedAt":"2018-06-03T07:04:02","Actor":"YoungroKim","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/225","RelatedDescription":"Opened issue \"The bookmark ID may also be a string.\" (#225) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"The bookmark ID can also be a string. However, the code below assumes that the bookmark ID always contains only digits.\r\n\r\nDocumentBuilder.cs\r\n`private static void AdjustUniqueIds(WordprocessingDocument sourceDocument,\r\n            WordprocessingDocument newDocument, IEnumerable<XElement> newContent)\r\n        {\r\n            // adjust bookmark unique ids\r\n            int maxId = 0;\r\n            if (newDocument.MainDocumentPart.GetXDocument().Descendants(W.bookmarkStart).Any())\r\n                maxId = newDocument.MainDocumentPart.GetXDocument().Descendants(W.bookmarkStart)\r\n                    .Select(d => (int)d.Attribute(W.id)).Max();\r\n            Dictionary<int, int> bookmarkIdMap = new Dictionary<int, int>();\r\n            foreach (var item in newContent.DescendantsAndSelf().Where(bm => bm.Name == W.bookmarkStart ||\r\n                bm.Name == W.bookmarkEnd))\r\n            {\r\n                **int id = (int)item.Attribute(W.id);**\r\n                if (!bookmarkIdMap.ContainsKey(id))\r\n                    bookmarkIdMap.Add(id, ++maxId);\r\n            }\r\n            foreach (var bookmarkElement in newContent.DescendantsAndSelf().Where(e => e.Name == W.bookmarkStart ||\r\n                e.Name == W.bookmarkEnd))\r\n                bookmarkElement.Attribute(W.id).Value = bookmarkIdMap[(int)bookmarkElement.Attribute(W.id)].ToString();\r\n\r\n            // adjust shape unique ids\r\n            // This doesn't work because OLEObjects refer to shapes by ID.\r\n            // Punting on this, because sooner or later, this will be a non-issue.\r\n            //foreach (var item in newContent.DescendantsAndSelf(VML.shape))\r\n            //{\r\n            //    Guid g = Guid.NewGuid();\r\n            //    string s = \"R\" + g.ToString().Replace(\"-\", \"\");\r\n            //    item.Attribute(NoNamespace.id).Value = s;\r\n            //}\r\n        }`"},{"Id":"7709896413","Type":"IssuesEvent","CreatedAt":"2018-05-22T10:35:33","Actor":"VictorIranzo","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/224","RelatedDescription":"Opened issue \"ChartUpdater: Support for Combo charts\" (#224) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Hi,\r\nWe are interested in ChartUpdater working with Combo charts. The combo charts are those that mix series of different chart types. A combo chart can be done using Word as shown at the screenshot:\r\n \r\n![image](https://user-images.githubusercontent.com/27296704/40357379-4cb39ce6-5dbc-11e8-9440-dc050b7c3ce6.png)\r\n\r\nWe have tested the current ChartUpdater component for replacing the values of this chart in a DOCX:\r\n \r\n![image](https://user-images.githubusercontent.com/27296704/40357386-53e63dfc-5dbc-11e8-9e1e-475d3d3267a1.png)\r\n\r\nThis chart combines two series: one is a bar chart and the other a line chart, with only the dots and in the secondary axis.\r\n\r\nWe provide in this repository an application that tests this: \r\nhttps://github.com/VictorIranzo/UpdateComboChart \r\n\r\nThe result obtained is not the expected one. It seems that the ChartUpdater has added the new values of the two series in the bar chart section and has kept the section of the line chart. We couldn’t open the output document using Word, but if we use another editor like LibreOffice we see the mentioned result:\r\n \r\n![image](https://user-images.githubusercontent.com/27296704/40357400-5ca8e692-5dbc-11e8-9a7b-4bdb94b3e685.png)\r\n\r\nAs you see, there are 3 series. The ‘Percentage’ series contains the data of the old chart. If we remove the line series manually opening the ‘chart1.xml’ file of the document, we realize that the values provided for the new chart have been inserted in the bar chart section:\r\n\r\n![image](https://user-images.githubusercontent.com/27296704/40357421-6c11038a-5dbc-11e8-924d-ce533c87e458.png)\r\n \r\nAs we said, we are interested in this feature. We would like to know if you have planned to implement this feature.\r\nThanks \r\n\r\n\r\n"},{"Id":"7684222300","Type":"IssuesEvent","CreatedAt":"2018-05-16T15:44:11","Actor":"dionisor","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/223","RelatedDescription":"Opened issue \"Unable to Import Module Open-xml-powertools\" (#223) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"I want to use powershell modules so I´ve tried next instructions:\r\n\r\n```\r\nThe short form of the installation instructions are:\r\n\r\n1. Make sure you are running PowerShell 3.0 or later\r\nPS C:\\WINDOWS\\system32> $PSVersionTable.PSVersion\r\n\r\nMajor  Minor  Build  Revision\r\n-----  -----  -----  --------\r\n5      1      16299  431\r\n2. If necessary, run PowerShell as administrator, Set-ExecutionPolicy Unrestricted (or RemoteSigned)\r\nPS C:\\WINDOWS\\system32> Get-ExecutionPolicy\r\nUnrestricted\r\n3. Clone Open-Xml-PowerTools to %HOMEDRIVE%/%HOMEUSER%/Documents/WindowsPowerShell/Modules/Open-Xml-PowerTools\r\nC:\\Users\\dionisor\\Documents\\WindowsPowerShell\\Modules>git clone https://github.com/OfficeDev/Open-Xml-PowerTools.git\r\nCloning into 'Open-Xml-PowerTools'...\r\nremote: Counting objects: 2884, done.\r\nremote: Compressing objects: 100% (2/2), done.\r\nremote: Total 2884 (delta 26), reused 25 (delta 25), pack-reused 2857\r\nReceiving objects: 100% (2884/2884), 22.11 MiB | 7.91 MiB/s, done.\r\nResolving deltas: 100% (1773/1773), done.\r\nChecking out files: 100% (1394/1394), done.\r\n\r\nC:\\Users\\dionisor\\Documents\\WindowsPowerShell\\Modules>cd Open-Xml-PowerTools\r\nC:\\Users\\amachado\\Documents\\WindowsPowerShell\\Modules\\Open-Xml-PowerTools>git checkout -b master origin/master\r\nSwitched to a new branch 'master'\r\nBranch 'master' set up to track remote branch 'master' from 'origin'.\r\n4. Import the module in PowerShell: Import-Module Open-Xml-PowerTools\r\nNot find files:\r\n'C:\\Users\\dionisor\\Documents\\Open-Xml-Sdk\\DocumentFormat.OpenXml\\bin\\debug\\DocumentFormat.OpenXml.dll'\r\n'C:\\Users\\dionisor\\Documents\\Open-Xml-Sdk\\DocumentFormat.OpenXml\\bin\\debug\\System.IO.Packaging.dll'\r\n\r\n```\r\nHow can I use it?\r\n\r\nThanks\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2018-06-10T05:30:45.2280721Z","RunDurationInMilliseconds":2274}