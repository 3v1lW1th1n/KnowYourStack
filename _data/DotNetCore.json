{"Data":{"Blog":{"FeedItems":[{"Title":".NET Core 2.0 will reach End of Life on September 1, 2018","PublishedOn":"2018-06-20T19:12:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":".NET Core 2.0 was released on August 14, 2017. As a non-LTS release, it is supported for 3 months after the next release. .NET Core 2.1 was released on May 30th, 2018. As a result, .NET Core 2.0 will...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/","RawContent":null},{"Title":"The RyuJIT transition is complete!","PublishedOn":"2018-06-19T22:53:27+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"RyuJIT is the code name for the .NET just-in-time compiler, one of the foundational components of the .NET runtime. In contrast, the Roslyn C# compiler compiles C# code to IL byte code. The RyuJIT...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/19/the-ryujit-transition-is-complete/","RawContent":null},{"Title":"Staying up-to-date with .NET Container Images","PublishedOn":"2018-06-18T18:59:03+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"This post describes the container images that we produce and update for you, that you can use with Docker, Kubernetes and other systems. When you are using .NET and Docker together, you are probably...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/","RawContent":null},{"Title":"Using .NET and Docker Together – DockerCon 2018 Update","PublishedOn":"2018-06-14T00:15:31+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"I posted about Using .NET and Docker Together last year. With DockerCon 2018 being this week, it seemed like a great time to give you an update.  Since my last post, we&#8217;ve enabled a set of...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/13/using-net-and-docker-together-dockercon-2018-update/","RawContent":null},{"Title":".NET Framework June 2018 Security and Quality Rollup","PublishedOn":"2018-06-13T19:29:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the June 2018 Security and Quality Rollup. Security No new security fixes. See .NET Framework May 2018 Security and Quality Rollup for the latest security updates. Quality and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/13/net-framework-june-2018-security-and-quality-rollup/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access build 3621!","PublishedOn":"2018-06-06T21:19:43+00:00","CommentsCount":38,"FacebookCount":0,"Summary":"Today, we are happy to share the .NET Framework 4.8 Early Access build 3621 for your feedback. This is one of the in-development builds of the next version of the .NET Framework. The changes in this...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/06/announcing-net-framework-4-8-early-access-build-3621/","RawContent":null},{"Title":"Announcing ML.NET 0.2","PublishedOn":"2018-06-06T04:36:25+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Last month at //Build 2018, we released ML.NET 0.1, a cross-platform, open source machine learning framework. We would like to thank the community for the engagement so far in helping us shape ML.NET....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/05/announcing-ml-net-0-2/","RawContent":null},{"Title":"Announcing .NET Core 2.1","PublishedOn":"2018-05-30T17:22:16+00:00","CommentsCount":71,"FacebookCount":0,"Summary":"We&#8217;re excited to announce the release of .NET Core 2.1. It includes improvements to performance, to the runtime and tools. It also includes a new way to deploy tools as NuGet packages....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.1","PublishedOn":"2018-05-30T17:22:00+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Today we are excited to announce the release of Entity Framework (EF) Core 2.1. This is the latest production-ready release of our open-source and cross-platform data access technology. We are...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-entity-framework-core-2-1/","RawContent":null},{"Title":".NET Framework May 2018 Preview of Quality Rollup for Windows 10 April 2018 Update (version 1803)","PublishedOn":"2018-05-24T01:49:57+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup for Windows 10 April 2018 Update (version 1803). Quality and Reliability This release contains the following quality and reliability...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/23/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-april-2018-update-version-1803/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7724991049","Type":"PullRequestEvent","CreatedAt":"2018-05-24T16:33:10","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/103","RelatedDescription":"Merged pull request \"Add ML.NET to readme\" (#103) at dotnet/home","RelatedBody":"cc @shauheen @jongalloway "},{"Id":"7724874671","Type":"PullRequestEvent","CreatedAt":"2018-05-24T16:12:32","Actor":"danmosemsft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/103","RelatedDescription":"Opened pull request \"Add ML.NET to readme\" (#103) at dotnet/home","RelatedBody":"cc @shauheen @jongalloway "},{"Id":"7697543163","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:10:28","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Merged pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""},{"Id":"7697541521","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:10:06","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Merged pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"7697539314","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:09:35","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Merged pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"7697528376","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:07:09","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Merged pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7697526900","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:48","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Merged pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7697525283","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:25","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Merged pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7697523628","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:02","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Merged pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7697521624","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:05:34","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/100","RelatedDescription":"Merged pull request \"Create mvvmcross.md\" (#100) at dotnet/home","RelatedBody":"Added MvvmCross as project as part of on-boarding.\r\n\r\nhttps://github.com/MvvmCross/MvvmCross/issues/2415"},{"Id":"7697519505","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:05:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/102","RelatedDescription":"Merged pull request \"Update projects.json adding MLNET\" (#102) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7780591341","Type":"IssuesEvent","CreatedAt":"2018-06-05T20:33:11","Actor":"huanwu","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/72","RelatedDescription":"Opened issue \"Introducing dotnet-svcutil.xmlserializer for .NET Core\" (#72) at dotnet/announcements","RelatedBody":"# Introducing dotnet-svcutil.xmlserializer for .NET Core\r\nOn the full .NET Framework you are able to pre-generate a serialization assembly using the tool svcutil. We are providing similar functionality on .NET Core by releasing the dotnet-svcutil.xmlserializer NuGet package. It pre-generates c# serialization code for the types used by WCF Service Contract in the client applications that can be serialized using the XmlSerializer to improve the startup performance of Xml Serialization when serializing or de-serializing objects of those types using XmlSerializer. \r\nYou can start using the tool today by following the instructions. \r\n## Discussion \r\nPlease share with us any thoughts of questions that you may have at: \r\n\r\n- dotnet/wcf [#2927](https://github.com/dotnet/wcf/issues/2927)\r\n## Details \r\nWhen to use XmlSerializer with WCF in an app to serialize contract data types, it will generate an XmlSerializer during runtime to do the serialization. You can improve the startup performance of Xml serialization by simply adding the reference of dotnet-svcutil.xmlserializer NuGet package to your project. This tool will generate the serialization code and compile it into an assembly next to your output assembly at build time in advance. This assembly can then be deployed and ran with your application. \r\n\r\nPlease create an issue with your feedback at [dotnet/wcf](https://github.com/dotnet/wcf/issues). We are actively looking to improve the tool and your input is a valuable part of the process. "},{"Id":"7719029569","Type":"IssuesEvent","CreatedAt":"2018-05-23T18:04:46","Actor":"mlacouture","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/70","RelatedDescription":"Opened issue \"Introducing dotnet-svcutil\" (#70) at dotnet/announcements","RelatedBody":"# Introducing dotnet-svcutil\r\n\r\nThe Microsoft Windows Communication Foundation (WCF) **dotnet-svcutil** tool is a .NET Core CLI tool that retrieves metadata from a web service on a network location or from a WSDL file, and generates a WCF class containing client proxy methods that you can use to access the web service operations.\r\n\r\nSimilarly to the [Service Model Metadata - svcutil](https://docs.microsoft.com/en-us/dotnet/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe) tool for .NET Framework projects, the **dotnet-svcutil** is a command line tool for generating a web service reference compatible with .NET Core and .NET Standard projects. \r\n\r\nThe **dotnet-svcutil** tool is an alternative option to the [WCF Web Service Reference ](https://docs.microsoft.com/en-us/dotnet/core/additional-tools/wcf-web-service-reference-guide)Visual Studio connected service provider which first shipped with Visual Studio 2017 v15.5.  The **dotnet-svcutil** tool as a .NET Core CLI tool, however, can be run on multiple platforms like Linux and MacOS in addition to Windows.\r\n\r\n# Discussion\r\nPlease share your thoughts with us by commenting on GitHub issue dotnet/wcf#2894\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7855732061","Type":"PullRequestEvent","CreatedAt":"2018-06-21T03:41:04","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18586","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corert\" (#18586) at dotnet/coreclr","RelatedBody":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**"},{"Id":"7855730552","Type":"PullRequestEvent","CreatedAt":"2018-06-21T03:40:29","Actor":"dotnet-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18586","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corert\" (#18586) at dotnet/coreclr","RelatedBody":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**"},{"Id":"7855726660","Type":"PullRequestEvent","CreatedAt":"2018-06-21T03:38:52","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18584","RelatedDescription":"Merged pull request \"Update CoreClr, CoreFx to preview1-26621-01, preview1-26621-01, respectively (master)\" (#18584) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"7855725522","Type":"PullRequestEvent","CreatedAt":"2018-06-21T03:38:22","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18583","RelatedDescription":"Closed pull request \"Mirror changes from dotnet/corert\" (#18583) at dotnet/coreclr","RelatedBody":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**"},{"Id":"7855504224","Type":"PullRequestEvent","CreatedAt":"2018-06-21T02:13:38","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18585","RelatedDescription":"Opened pull request \"Clean up ARM reserved register handling and SP/FP offsets\" (#18585) at dotnet/coreclr","RelatedBody":"1. Tighten up and correct the math in compRsvdRegCheck.\r\n2. Fix the math in lvaFrameAddress, especially for floats.\r\n3. Fix some off-by-one errors, and unnecessary \"alignment\", of instruction\r\nencoding offsets.\r\n"},{"Id":"7855356849","Type":"PullRequestEvent","CreatedAt":"2018-06-21T01:16:23","Actor":"rakeshsinghranchi","Repository":"dotnet/","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17182","RelatedDescription":"Closed pull request \"Enable building Ubuntu.18.04 distro specific nuget packages\" (#17182) at dotnet/","RelatedBody":"Official build is not producing Ubuntu.18.04 specific nuget packages out of release/1.1.0 branch. This will enable building those nuget packages. "},{"Id":"7855356849","Type":"PullRequestEvent","CreatedAt":"2018-06-21T01:16:23","Actor":"rakeshsinghranchi","Repository":"dotnet/","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17182","RelatedDescription":"Closed pull request \"Enable building Ubuntu.18.04 distro specific nuget packages\" (#17182) at dotnet/","RelatedBody":"Official build is not producing Ubuntu.18.04 specific nuget packages out of release/1.1.0 branch. This will enable building those nuget packages. "},{"Id":"7855296846","Type":"PullRequestEvent","CreatedAt":"2018-06-21T00:52:03","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18584","RelatedDescription":"Opened pull request \"Update CoreClr to preview1-26621-01 (master)\" (#18584) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"7855229026","Type":"PullRequestEvent","CreatedAt":"2018-06-21T00:24:55","Actor":"JongHeonChoi","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18523","RelatedDescription":null,"RelatedBody":""},{"Id":"7855189913","Type":"PullRequestEvent","CreatedAt":"2018-06-21T00:10:06","Actor":"dotnet-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/18583","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corert\" (#18583) at dotnet/coreclr","RelatedBody":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7855744718","Type":"IssuesEvent","CreatedAt":"2018-06-21T03:46:16","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/9527","RelatedDescription":"Closed issue \"csc.dll code 139 error when building project on .NET Core 2.1.300 Ubuntu 18.04 ARM64 (WSL)\" (#9527) at dotnet/cli","RelatedBody":"@snickler commented on [Wed Jun 20 2018](https://github.com/dotnet/core/issues/1717)\n\n# csc.dll code 139 error when building project on .NET Core 2.1.300 Ubuntu 18.04 ARM64 (WSL)\r\n\r\nI created a new project using `dotnet new console` then attempted `dotnet build`, while using the .NET Core 2.1.300 SDK for Linux ARM64\r\n\r\n## Binary Information: \r\n\r\nDownloaded Ubuntu 18.04 from here https://www.microsoft.com/store/productId/9N9TNGVNDL3Q\r\n\r\nDownloaded .NET Core 2.1 Linux ARM64 from https://download.microsoft.com/download/8/8/5/88544F33-836A-49A5-8B67-451C24709A8F/dotnet-sdk-2.1.300-linux-arm64.tar.gz\r\n\r\n\r\n## System Information: \r\n\r\n### msinfo32 output:\r\n```\r\n\r\nOS Name\tMicrosoft Windows 10 Pro Insider Preview\r\nVersion\t10.0.17692 Build 17692\r\nOther OS Description \tNot Available\r\nOS Manufacturer\tMicrosoft Corporation\r\nSystem Name\tWOATARGET\r\nSystem Manufacturer\tASUSTeK COMPUTER INC.\r\nSystem Model\tNovaGo TP370QL\r\nSystem Type\tARM64-based PC\r\nSystem SKU\t6\r\nProcessor\tSnapdragon(TM) 835, 2208 Mhz, 8 Core(s), 8 Logical Processor(s)\r\nBIOS Version/Date\tQualcomm Inc. TP370QL.254, 4/24/2018\r\nSMBIOS Version\t3.0\r\nEmbedded Controller Version\t255.255\r\nBIOS Mode\tUEFI\r\nBaseBoard Manufacturer\tASUSTeK COMPUTER INC.\r\nBaseBoard Product\tNovaGo TP370QL\r\nBaseBoard Version\t1.0\r\n\r\n```\r\n\r\n### lsb_release output from Ubuntu 18.04:\r\n```\r\n\r\nArchitecture:        aarch64\r\nByte Order:          Little Endian\r\nCPU(s):              8\r\nOn-line CPU(s) list: 0-7\r\nThread(s) per core:  1\r\nCore(s) per socket:  8\r\nSocket(s):           1\r\nVendor ID:           ARM\r\nModel:               0\r\nModel name:          Cortex-A57\r\nStepping:            r1p0\r\nCPU max MHz:         2208.0000\r\nBogoMIPS:            1900\r\nHypervisor vendor:   Windows Subsystem for Linux\r\nVirtualization type: container\r\nFlags:               fp asimd evtstrm aes pmull sha1 sha2 crc32\r\n```\r\n\r\n\r\n## Output: \r\n\r\n```\r\nsnickler@WOATARGET:~/anothertestapp$ dotnet build\r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 267.87 ms for /home/snickler/anothertestapp/anothertestapp.csproj.\r\n/home/snickler/dotnet-2.1/sdk/2.1.300/Roslyn/Microsoft.CSharp.Core.targets(52,5): error MSB6006: \"csc.dll\" exited with code 139. [/home/snickler/anothertestapp/anothertestapp.csproj]\r\n\r\nBuild FAILED.\r\n\r\n/home/snickler/dotnet-2.1/sdk/2.1.300/Roslyn/Microsoft.CSharp.Core.targets(52,5): error MSB6006: \"csc.dll\" exited with code 139. [/home/snickler/anothertestapp/anothertestapp.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:26.61\r\n\r\n```\r\n\n\n"},{"Id":"7855742048","Type":"PullRequestEvent","CreatedAt":"2018-06-21T03:45:11","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/9480","RelatedDescription":"Merged pull request \"Modyfying the build to produce a nupkg for each of our projects.\" (#9480) at dotnet/cli","RelatedBody":"Modyfying the build to produce a nupkg for each of our projects. We need this so that toolset can consume the CLI as packages and unify dependencies.\r\n"},{"Id":"7855532347","Type":"IssuesEvent","CreatedAt":"2018-06-21T02:24:04","Actor":"leecow","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/9527","RelatedDescription":"Opened issue \"csc.dll code 139 error when building project on .NET Core 2.1.300 Ubuntu 18.04 ARM64 (WSL)\" (#9527) at dotnet/cli","RelatedBody":"@snickler commented on [Wed Jun 20 2018](https://github.com/dotnet/core/issues/1717)\n\n# csc.dll code 139 error when building project on .NET Core 2.1.300 Ubuntu 18.04 ARM64 (WSL)\r\n\r\nI created a new project using `dotnet new console` then attempted `dotnet build`, while using the .NET Core 2.1.300 SDK for Linux ARM64\r\n\r\n## Binary Information: \r\n\r\nDownloaded Ubuntu 18.04 from here https://www.microsoft.com/store/productId/9N9TNGVNDL3Q\r\n\r\nDownloaded .NET Core 2.1 Linux ARM64 from https://download.microsoft.com/download/8/8/5/88544F33-836A-49A5-8B67-451C24709A8F/dotnet-sdk-2.1.300-linux-arm64.tar.gz\r\n\r\n\r\n## System Information: \r\n\r\n### msinfo32 output:\r\n```\r\n\r\nOS Name\tMicrosoft Windows 10 Pro Insider Preview\r\nVersion\t10.0.17692 Build 17692\r\nOther OS Description \tNot Available\r\nOS Manufacturer\tMicrosoft Corporation\r\nSystem Name\tWOATARGET\r\nSystem Manufacturer\tASUSTeK COMPUTER INC.\r\nSystem Model\tNovaGo TP370QL\r\nSystem Type\tARM64-based PC\r\nSystem SKU\t6\r\nProcessor\tSnapdragon(TM) 835, 2208 Mhz, 8 Core(s), 8 Logical Processor(s)\r\nBIOS Version/Date\tQualcomm Inc. TP370QL.254, 4/24/2018\r\nSMBIOS Version\t3.0\r\nEmbedded Controller Version\t255.255\r\nBIOS Mode\tUEFI\r\nBaseBoard Manufacturer\tASUSTeK COMPUTER INC.\r\nBaseBoard Product\tNovaGo TP370QL\r\nBaseBoard Version\t1.0\r\n\r\n```\r\n\r\n### lsb_release output from Ubuntu 18.04:\r\n```\r\n\r\nArchitecture:        aarch64\r\nByte Order:          Little Endian\r\nCPU(s):              8\r\nOn-line CPU(s) list: 0-7\r\nThread(s) per core:  1\r\nCore(s) per socket:  8\r\nSocket(s):           1\r\nVendor ID:           ARM\r\nModel:               0\r\nModel name:          Cortex-A57\r\nStepping:            r1p0\r\nCPU max MHz:         2208.0000\r\nBogoMIPS:            1900\r\nHypervisor vendor:   Windows Subsystem for Linux\r\nVirtualization type: container\r\nFlags:               fp asimd evtstrm aes pmull sha1 sha2 crc32\r\n```\r\n\r\n\r\n## Output: \r\n\r\n```\r\nsnickler@WOATARGET:~/anothertestapp$ dotnet build\r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 267.87 ms for /home/snickler/anothertestapp/anothertestapp.csproj.\r\n/home/snickler/dotnet-2.1/sdk/2.1.300/Roslyn/Microsoft.CSharp.Core.targets(52,5): error MSB6006: \"csc.dll\" exited with code 139. [/home/snickler/anothertestapp/anothertestapp.csproj]\r\n\r\nBuild FAILED.\r\n\r\n/home/snickler/dotnet-2.1/sdk/2.1.300/Roslyn/Microsoft.CSharp.Core.targets(52,5): error MSB6006: \"csc.dll\" exited with code 139. [/home/snickler/anothertestapp/anothertestapp.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:26.61\r\n\r\n```\r\n\n\n"},{"Id":"7855509059","Type":"IssuesEvent","CreatedAt":"2018-06-21T02:15:28","Actor":"leecow","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/9526","RelatedDescription":"Opened issue \"Error MB2014 Microsoft.PackageDependencyResolution\" (#9526) at dotnet/cli","RelatedBody":"@SeanErvinson commented on [Wed Jun 20 2018](https://github.com/dotnet/core/issues/1715)\n\nHaving trouble building or running on the latest version of dotnet.\r\n\r\n```\r\nasean@asean:~$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.301\r\n Commit:    59524873d6\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.1.301/\r\n\r\nHost (useful for support):\r\n  Version: 2.1.1\r\n  Commit:  6985b9f684\r\n\r\n.NET Core SDKs installed:\r\n  2.1.301 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.1 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.1 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.1 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\nWhat I have done:\r\n-Remove entire dotnet core\r\n-Clean install of dotnet core on Ubuntu 18.04.\r\n-dotnet new console\r\n-both dotnet build and dotnet run resulted in this error\r\n\r\n<a href=\"http://i.imgur.com/n1Vs4u5.png\">\r\n  <img src=\"http://imgur.com/n1Vs4u5l.png\" />\r\n</a>\r\n\r\n- also tried with an ASP.Net Core app same result\n\n"},{"Id":"7855358002","Type":"IssuesEvent","CreatedAt":"2018-06-21T01:16:51","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/cli/issues/9409","RelatedDescription":"Reopened issue \"dotnet tool install does not resolve the good version\" (#9409) at dotnet/cli","RelatedBody":"also referenced here :\r\nhttps://github.com/NuGet/Home/issues/6994\r\n\r\n## Steps to reproduce\r\nfake-cli on nuget.org :\r\n![image](https://user-images.githubusercontent.com/2266487/40889289-5ddcd8aa-6764-11e8-8ad1-3233977e9653.png)\r\n\r\nWhat i tried :\r\n```\r\n>  dotnet tool install fake-cli ^\r\n     --tool-path ./foobar ^\r\n     --version 5.0.0-rc*\r\n```\r\n\r\n## Expected  behavior\r\nit should install 5.0.0-rc18....\r\n\r\n## Actual behavior\r\nit installs `rc15`\r\n```\r\nwarning NU1603: restore depends on fake-cli (>= 5.0.0-rc) but fake-cli 5.0.0-rc was not found. An approximate best match of fake-cli 5.0.0-rc015.196 was resolved.\r\nYou can invoke the tool using the following command: fake\r\nTool 'fake-cli' (version '5.0.0-rc015.196') was successfully installed.\r\n```\r\n\r\nEven tried \r\n`dotnet nuget locals -c all`\r\n\r\nOr addin a nuget.config :\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n    <config>\r\n        <add key=\"DependencyVersion\" value=\"Highest\"/>\r\n    </config>\r\n</configuration>\r\n```\r\n\r\nstill install `rc15`\r\n\r\nnot funny part :\r\n```\r\n>nuget install fake-cli -Prerelease\r\nFeeds used:\r\n  https://api.nuget.org/v3/index.json\r\n  C:\\Users\\ahert\\.dotnet\\NuGetFallbackFolder\r\n  C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\r\n\r\nInstalling package 'fake-cli' to 'C:\\Workspace\\GitHub\\TeBeCo\\fake-netcore-sample\\Nuget\\BuildPackages'.\r\n  CACHE https://api.nuget.org/v3/registration3-gz-semver2/fake-cli/index.json\r\n\r\n\r\nAttempting to gather dependency information for package 'fake-cli.5.0.0-rc018.244' with respect to project 'C:\\Workspace\\GitHub\\TeBeCo\\fake-netcore-sample\\Nuget\\BuildPackages', targeting 'Any,Version=v0.0'\r\nGathering dependency information took 31.57 ms\r\nAttempting to resolve dependencies for package 'fake-cli.5.0.0-rc018.244' with DependencyBehavior 'Highest'\r\nResolving dependency information took 0 ms\r\nResolving actions to install package 'fake-cli.5.0.0-rc018.244'\r\nResolved actions to install package 'fake-cli.5.0.0-rc018.244'\r\nRetrieving package 'fake-cli 5.0.0-rc018.244' from 'nuget.org'.\r\n  GET https://api.nuget.org/v3-flatcontainer/fake-cli/5.0.0-rc018.244/fake-cli.5.0.0-rc018.244.nupkg\r\n  OK https://api.nuget.org/v3-flatcontainer/fake-cli/5.0.0-rc018.244/fake-cli.5.0.0-rc018.244.nupkg 800ms\r\nInstalling fake-cli 5.0.0-rc018.244.\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.300\r\n Commit:    adab45bf0c\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17677\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.300\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.0\r\n  Commit:  caa7b7e2ba\r\n\r\n.NET Core SDKs installed:\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.105 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300-rc1-008673 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0-rc1-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0-rc1-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-rc1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\nalso check\r\nhttps://github.com/dotnet/cli/issues/9407\r\nhttps://github.com/dotnet/cli/issues/9408"},{"Id":"7855331089","Type":"PullRequestEvent","CreatedAt":"2018-06-21T01:05:55","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/9525","RelatedDescription":"Opened pull request \"WIP Use correct nuget version normalized format\" (#9525) at dotnet/cli","RelatedBody":""},{"Id":"7855229653","Type":"PullRequestEvent","CreatedAt":"2018-06-21T00:25:09","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/9524","RelatedDescription":"Opened pull request \"Merge release/2.1.3xx to release/2.1.4xx\" (#9524) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.3xx into release/2.1.4xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.3xx-to-release/2.1.4xx\ngit reset --hard upstream/release/2.1.4xx\ngit merge upstream/release/2.1.3xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.3xx-to-release/2.1.4xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7850503936","Type":"IssuesEvent","CreatedAt":"2018-06-20T08:46:22","Actor":"ramsubbaraoc","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/779","RelatedDescription":"Opened issue \"netstandard equivalent of Environment.UserName on Linux\" (#779) at dotnet/standard","RelatedBody":"Environment.UserName documentation in netstandard says \" Gets the user name of the person who is currently logged on to the Windows operating system.\"\r\n\r\nWhat is its equivalent for netstandard on linux? Does the same property work on Linux as well?"},{"Id":"7849823063","Type":"IssuesEvent","CreatedAt":"2018-06-20T06:09:51","Actor":"OleksiiD","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/778","RelatedDescription":"Opened issue \"[Question] How to prevent copying of ~90 libraries to the TargetDir if NuGet package has NS2.0 library dependency?\" (#778) at dotnet/standard","RelatedBody":"I am working on **.Net 4.7** project. I installed NuGet package (Aspose.Email 17.11.0) that has the following dependency:\r\n\r\n`.NetStandard, Version=v2.0 System.Text.Encoding.CodePages (>=4.4.0).`\r\n\r\nAs a result I get ~90 libraries in the TargetDir including netstandard.dll, System.Collections and other when project is built.\r\n\r\nHow to prevent this behavior? I need only 3 files in the TargetDir: main.EXE, Aspose.Email.dll and System.Text.Encoding.CodePages.dll.\r\n\r\nAnd why this happens? .Net Framework 4.6.1 implements .NET Standard 2.0. That is why I did not expect such behavior in my .Net 4.7 project.\r\n\r\n![NuGet package I install](https://user-images.githubusercontent.com/8511403/41640080-1b65c600-7469-11e8-9c56-9c1110a599b6.png)"},{"Id":"7849742170","Type":"IssuesEvent","CreatedAt":"2018-06-20T05:42:01","Actor":"pmarangoni","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/777","RelatedDescription":"Opened issue \"Problem upgrading NETStandard.Library from 2.0.1 to 2.0.3\" (#777) at dotnet/standard","RelatedBody":"- ASP.NET MVC project\r\n- Using NuGet, I see there is a new version of NETStandardLibrary so I elect to upgrade it\r\n- After upgrading to 2.0.3, I can no longer build the solution. I get this error:\r\nThis project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them. For more information (blah, blah, blah)… The missing file is ..\\packages\\NETStandard.Library.2.0.1\\build\\NETStandard.Library.targets\r\n\r\nThe only way to proceed is to revert back to 2.0.1."}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7855956461","Type":"PullRequestEvent","CreatedAt":"2018-06-21T05:16:14","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/30570","RelatedDescription":"Opened pull request \"Update ProjectNTfs, ProjectNTfsTestILC to beta-26621-00, beta-26621-00, respectively (master)\" (#30570) at dotnet/corefx","RelatedBody":""},{"Id":"7855878263","Type":"PullRequestEvent","CreatedAt":"2018-06-21T04:43:15","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/30539","RelatedDescription":"Merged pull request \"Simplify interop for AdjustTokenPrivileges\" (#30539) at dotnet/corefx","RelatedBody":"Contributes to https://github.com/dotnet/corert/issues/5961"},{"Id":"7855863782","Type":"PullRequestEvent","CreatedAt":"2018-06-21T04:37:11","Actor":"bartonjs","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/30271","RelatedDescription":"Merged pull request \"Add support for importing/exporting asymmetric key formats\" (#30271) at dotnet/corefx","RelatedBody":"This adds support for SubjectPublicKeyInfo, PrivateKeyInfo (PKCS8) and\r\nEncryptedPrivateKeyInfo (PKCS8) to AsymmetricAlgorithm, and adds support\r\nfor RSAPublicKey/RSAPrivateKey to RSA, and ECPrivateKey to the ECC types.\r\n\r\nThe input data to these methods is BER encoded.  PEM/Base64 values must be\r\nconverted by the caller to the BER format.\r\n\r\nEncrypted keys can be read provided they were encrypted under RFC 2898 PBES1,\r\nRFC 7292 PKCS12-PBE, or RFC 2898 PBES2 (with PBKDF2 as the KDF).\r\n\r\nNew keys can be encrypted using PKCS12-PBE 3DES+SHA1 (for Windows\r\nnative interop support), or PBES2 with AES.\r\n\r\nDuring the development of this change it was noticed that S.S.C.Algorithms\r\ndid not build with asserts enabled, so a small portion of this change is fixing\r\nbad asserts written during the time that they were not running.\r\n\r\nThe CNG types defer to the native layer for PKCS8 operations, partially\r\nbecause CNG makes use of attributes in the PrivateKeyInfo during import\r\nand export (at least for ECDSA), and partially because CNG has a distinction\r\nof exportable (encrypted) vs plaintext-exportable (not).  The other platforms\r\ncurrently just use the base class implementation, which utilizes the existing\r\nImportParameters and ExportParameters methods.\r\n\r\nECC keys are limited to named curves, based on RFC guidance.  Explicit\r\ncurve support can be added when needed.\r\n\r\nFixes #20414."},{"Id":"7855863770","Type":"IssuesEvent","CreatedAt":"2018-06-21T04:37:11","Actor":"bartonjs","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/20414","RelatedDescription":"Closed issue \"Support loading cryptographic keys from files other than certificate PFX\" (#20414) at dotnet/corefx","RelatedBody":"I understand that this represents a thin wrapper over the Win32 CNG APIs, but it does make a whole suite of cryptographic operations simpler.\r\n\r\nIn my case, I'm trying to read an ECDSA public/private key pair out of a PKCS8 container. In .NET Framework and .NET Core on Windows, this is possible with the following:\r\n\r\n```\r\nstatic ECDsa CreateKeyFromDataCng(byte[] data)\r\n    => new ECDsaCng(CngKey.Import(data, CngKeyBlobFormat.Pkcs8PrivateBlob));\r\n```\r\n\r\nUnder macOS (and I assume Linux too), this throws a `PlatformNotSupportedException`.\r\n\r\nAs per #18733, .NET Core can handle loading ECDSA keys from an X509 structure.\r\n\r\nWould it be possible to implement the Cng suite of APIs with a backing from a non-Windows-CNG source such as OpenSSL on Linux or the Apple crypto libraries on macOS?\r\n\r\nFailing that, are there any plans for a unified cryptography API in .NET Standard future which would enable a single API call to work across all platforms for fiddly cryptography bits such as this?\r\n\r\nThanks.\r\n\r\n---\r\n\r\n# Feature Proposal\r\n\r\nAdd API which allows binary-encoded asymmetric cryptographic keys from standard data formats to be loaded, and add API which allows asymmetric cryptographic keys to be exported to those same standard data formats (subject to key exportability permissions).\r\n\r\nBased on competitive landscape and other research, the following data formats are to be included:\r\n\r\n* Public Key (generic)\r\n  * X.509 SubjectPublicKeyInfo (RFC 3280, ITU-T REC X.509, et al).\r\n* Private Key (generic)\r\n  * PKCS#8 PrivateKeyInfo (IETF RFC 5208)\r\n  * PKCS#8 EncryptedPrivateKeyInfo (IETF RFC 5208)\r\n    * Reading data protected with PBES1, PBES2, and PKCS12-PBE.\r\n    * Writing data protected with PBES2 and subsets of PKCS12-PBE.\r\n* Algorithm-Specific\r\n  * RSA\r\n    * RSAPublicKey (PKCS#1, IETF RFC 3447, et al)\r\n    * RSAPrivateKey (PKCS#1, IETF RFC 3447, et al)\r\n  * DSA\r\n     * (N/A)\r\n  * ECDsa\r\n    * ECPrivateKey (SECG SEC1v2)\r\n  * ECDiffieHellman\r\n    * ECPrivateKey (SECG SEC1v2)\r\n\r\nNotably, the `ECPublicKey` type does not appear in this listing due to not finding standards which transported it without the `SubjectPublicKeyInfo` wrapper.\r\n\r\nCaveats:  On Linux, in particular, PEM-encoding (from the Privacy Enhanced Mail specification) is more standard.  PEM, as a data format, can contain extra metadata in addition to the BER-encoded payload.  Rather than add PEM-reading complications into these APIs the recommendation is to build a separate PEM reading class, which is capable of reporting on the additional metadata.\r\n\r\nThe data export methods are repeated in the API proposal, once to write to a destination `Span<byte>` (`TryExport*`) and again to return a `byte[]` (`Export*`).\r\n\r\nRather than do content-sniffing, these APIs are explicit as to their data format.\r\n\r\nPKCS#8 EncryptedPrivateKeyInfo methods have two variants:\r\n\r\n* A `char`-based variant will generally convert the textual input to UTF-8 bytes, but PKCS12-PBE operates on the textual input as UTF16-BE (as per the specification).\r\n* A `byte`-based variant will generally accept the input bytes as the input to the Key Derivation Function (KDF) dictated by the encryption options.  Since this is not valid for PKCS12-PBE, this variant will throw when the input data was protected with PKCS12-PBE.\r\n\r\n## `override` strategy\r\n\r\nPKCS#8 data formats can contain additional metadata (attributes).  Derived types using implementations which respect those attributes (such as Windows CNG) should defer to their underlying platform's PKCS#8 importer and exporter.  Otherwise, the overrides (or initial definitions) on the algorithm-specific base classes should be sufficient (which call the existing `ImportParameters` and `ExportParameters` routines).\r\n\r\n## Power scenario\r\n\r\nTo allow for the creation of PKCS#8 data containing custom attributes (as well as reading those attributes), a class for reading and writing PKCS#8 will also be added.  In this type the default will be to make defensive copies of inputs, but options are exposed to reuse input memory when possible.\r\n\r\n## API Proposal\r\n\r\nSystem.Security.Cryptography.Primitives:\r\n\r\n```C#\r\nnamespace System.Security.Cryptography\r\n{\r\n    // X.509 SubjectPublicKeyInfo\r\n    public abstract partial class AsymmetricAlgorithm : System.IDisposable\r\n    {\r\n        public virtual void ImportSubjectPublicKeyInfo(ReadOnlyMemory<byte> source, out int bytesRead) => throw null;\r\n        public virtual byte[] ExportSubjectPublicKeyInfo() => throw null;\r\n        public virtual bool TryExportSubjectPublicKeyInfo(Span<byte> destination, out int bytesWritten) => throw null;\r\n    }\r\n\r\n    // PKCS#8 PrivateKeyInfo\r\n    public abstract partial class AsymmetricAlgorithm : System.IDisposable\r\n    {\r\n        public virtual void ImportPkcs8PrivateKey(ReadOnlyMemory<byte> source, out int bytesRead) => throw null;\r\n        public virtual byte[] ExportPkcs8PrivateKey() => throw null;\r\n        public virtual bool TryExportPkcs8PrivateKey(Span<byte> destination, out int bytesWritten) => throw null;\r\n    }\r\n\r\n    // PKCS#8 EncryptedPrivateKeyInfo\r\n    // PBE: Password-Based Encryption (PKCS#5, IETF RFC 2898)\r\n    public enum PbeEncryptionAlgorithm\r\n    {\r\n        Unknown = 0,\r\n        Aes128Cbc = 1,\r\n        Aes192Cbc = 2,\r\n        Aes256Cbc = 3,\r\n        TripleDes3KeyPkcs12 = 4,\r\n    }\r\n    public sealed class PbeParameters\r\n    {\r\n        public PbeEncryptionAlgorithm EncryptionAlgorithm { get; }\r\n        public HashAlgorithmName HashAlgorithm { get; }\r\n        public int KdfIterationCount { get; }\r\n        public PbeParameters(PbeEncryptionAlgorithm encryptionAlgorithm, HashAlgorithmName hashAlgorithm, int kdfIterationCount) { }\r\n    }\r\n    public abstract partial class AsymmetricAlgorithm : System.IDisposable\r\n    {\r\n        public virtual void ImportEncryptedPkcs8PrivateKey(ReadOnlySpan<byte> passwordBytes, ReadOnlyMemory<byte> source, out int bytesRead) => throw null;\r\n        public virtual void ImportEncryptedPkcs8PrivateKey(ReadOnlySpan<char> password, ReadOnlyMemory<byte> source, out int bytesRead) => throw null;\r\n        public virtual byte[] ExportEncryptedPkcs8PrivateKey(ReadOnlySpan<byte> passwordBytes, PbeParameters pbeParameters) => throw null;\r\n        public virtual byte[] ExportEncryptedPkcs8PrivateKey(ReadOnlySpan<char> password, PbeParameters pbeParameters) => throw null;\r\n        public virtual bool TryExportEncryptedPkcs8PrivateKey(ReadOnlySpan<byte> passwordBytes, PbeParameters pbeParameters, Span<byte> destination, out int bytesWritten) => throw null;\r\n        public virtual bool TryExportEncryptedPkcs8PrivateKey(ReadOnlySpan<char> password, PbeParameters pbeParameters, Span<byte> destination, out int bytesWritten) => throw null;\r\n    }\r\n}\r\n```\r\n\r\nSystem.Security.Cryptography.Algorithms (`override` methods omitted)\r\n\r\n```C#\r\nnamespace System.Security.Cryptography\r\n{\r\n    public abstract partial class RSA : System.Security.Cryptography.AsymmetricAlgorithm\r\n    {\r\n        public virtual void ImportRSAPrivateKey(ReadOnlyMemory<byte> source, out int bytesRead) => throw null;\r\n        public virtual void ImportRSAPublicKey(ReadOnlyMemory<byte> source, out int bytesRead) => throw null;\r\n        public virtual byte[] ExportRSAPrivateKey() => throw null;\r\n        public virtual byte[] ExportRSAPublicKey() => throw null;\r\n        public virtual bool TryExportRSAPrivateKey(Span<byte> destination, out int bytesWritten) => throw null;\r\n        public virtual bool TryExportRSAPublicKey(Span<byte> destination, out int bytesWritten) => throw null;\r\n    }\r\n    public abstract partial class ECDiffieHellman : System.Security.Cryptography.AsymmetricAlgorithm\r\n    {\r\n        public virtual void ImportECPrivateKey(ReadOnlyMemory<byte> source, out int bytesRead) => throw null;\r\n        public virtual byte[] ExportECPrivateKey() => throw null;\r\n        public virtual bool TryExportECPrivateKey(Span<byte> destination, out int bytesWritten) => throw null;\r\n    }\r\n    public abstract partial class ECDsa : System.Security.Cryptography.AsymmetricAlgorithm\r\n    {\r\n        public virtual void ImportECPrivateKey(ReadOnlyMemory<byte> source, out int bytesRead) => throw null;\r\n        public virtual byte[] ExportECPrivateKey() => throw null;\r\n        public virtual bool TryExportECPrivateKey(Span<byte> destination, out int bytesWritten) => throw null;\r\n    }\r\n}\r\n```\r\n\r\nSystem.Security.Cryptography.Pkcs\r\n\r\n```C#\r\nnamespace System.Security.Cryptography.Pkcs\r\n{\r\n    public sealed partial class Pkcs8PrivateKeyInfo\r\n    {\r\n        public Oid AlgorithmId { get; }\r\n        public ReadOnlyMemory<byte>? AlgorithmParameters { get; }\r\n        public CryptographicAttributeObjectCollection Attributes { get; }\r\n        public ReadOnlyMemory<byte> PrivateKeyBytes { get; }\r\n        public Pkcs8PrivateKeyInfo(Oid algorithmId, ReadOnlyMemory<byte>? algorithmParameters, ReadOnlyMemory<byte> privateKey, bool skipCopies = false) { }\r\n        public static Pkcs8PrivateKeyInfo Create(AsymmetricAlgorithm privateKey) => throw null;\r\n        public static Pkcs8PrivateKeyInfo Decode(ReadOnlyMemory<byte> source, out int bytesRead, bool skipCopy = false) => throw null;\r\n        public byte[] Encode() => throw null;\r\n        public byte[] Encrypt(ReadOnlySpan<char> password, PbeParameters pbeParameters) => throw null;\r\n        public byte[] Encrypt(ReadOnlySpan<byte> passwordBytes, PbeParameters pbeParameters) => throw null;\r\n        public bool TryEncode(Span<byte> destination, out int bytesWritten) => throw null;\r\n        public bool TryEncrypt(ReadOnlySpan<char> password, PbeParameters pbeParameters, Span<byte> destination, out int bytesWritten) => throw null;\r\n        public bool TryEncrypt(ReadOnlySpan<byte> passwordBytes, PbeParameters pbeParameters, Span<byte> destination, out int bytesWritten) => throw null;\r\n        public static Pkcs8PrivateKeyInfo DecryptAndDecode(ReadOnlySpan<char> password, ReadOnlyMemory<byte> source, out int bytesRead) => throw null;\r\n        public static Pkcs8PrivateKeyInfo DecryptAndDecode(ReadOnlySpan<byte> passwordBytes, ReadOnlyMemory<byte> source, out int bytesRead) => throw null;\r\n    }\r\n}\r\n```\r\n"},{"Id":"7855760036","Type":"PullRequestEvent","CreatedAt":"2018-06-21T03:52:30","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/30569","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#30569) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7855757835","Type":"PullRequestEvent","CreatedAt":"2018-06-21T03:51:31","Actor":"dotnet-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/30569","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#30569) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7855727806","Type":"PullRequestEvent","CreatedAt":"2018-06-21T03:39:21","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/30568","RelatedDescription":"Merged pull request \"Update CoreClr, CoreFx to preview1-26621-01, preview1-26621-01, respectively (master)\" (#30568) at dotnet/corefx","RelatedBody":""},{"Id":"7855297726","Type":"PullRequestEvent","CreatedAt":"2018-06-21T00:52:24","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/30568","RelatedDescription":"Opened pull request \"Update CoreClr to preview1-26621-01 (master)\" (#30568) at dotnet/corefx","RelatedBody":""},{"Id":"7855253180","Type":"PullRequestEvent","CreatedAt":"2018-06-21T00:34:35","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/30566","RelatedDescription":"Merged pull request \"Update BuildTools, CoreSetup to preview1-02920-01, preview1-26620-03, respectively (master)\" (#30566) at dotnet/corefx","RelatedBody":""}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7855857522","Type":"IssuesEvent","CreatedAt":"2018-06-21T04:34:31","Actor":"CyrusNajmabadi","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/28040","RelatedDescription":"Opened issue \"Crash while editing\" (#28040) at dotnet/roslyn","RelatedBody":"Got this crash while editing a using statement:\r\n\r\n```\r\nApplication: devenv.exe\r\nFramework Version: v4.0.30319\r\nDescription: The application requested process termination through System.Environment.FailFast(string message).\r\nMessage: System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Microsoft.CodeAnalysis.CSharp.Extensions.SyntaxTreeExtensions.IsEntirelyWithinSingleLineDocComment(SyntaxTree syntaxTree, Int32 position, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.CSharp.Extensions.SyntaxTreeExtensions.IsEntirelyWithinNonUserCodeComment(SyntaxTree syntaxTree, Int32 position, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.CSharp.Extensions.SyntaxTreeExtensions.IsInNonUserCode(SyntaxTree syntaxTree, Int32 position, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.CSharp.Completion.Providers.EnumAndCompletionListTagCompletionProvider.<ProvideCompletionsAsync>d__1.MoveNext()\r\nStack:\r\n   at System.Environment.FailFast(System.String, System.Exception)\r\n   at Microsoft.CodeAnalysis.FailFast.OnFatalException(System.Exception)\r\n   at Microsoft.CodeAnalysis.ErrorReporting.FatalError.Report(System.Exception, System.Action`1<System.Exception>)\r\n   at Microsoft.CodeAnalysis.ErrorReporting.FatalError.ReportUnlessCanceled(System.Exception)\r\n   at Microsoft.CodeAnalysis.CSharp.Completion.Providers.EnumAndCompletionListTagCompletionProvider+<ProvideCompletionsAsync>d__1.MoveNext()\r\n   at Microsoft.CodeAnalysis.CSharp.Extensions.SyntaxTreeExtensions.IsEntirelyWithinSingleLineDocComment(Microsoft.CodeAnalysis.SyntaxTree, Int32, System.Threading.CancellationToken)\r\n   at Microsoft.CodeAnalysis.CSharp.Extensions.SyntaxTreeExtensions.IsEntirelyWithinNonUserCodeComment(Microsoft.CodeAnalysis.SyntaxTree, Int32, System.Threading.CancellationToken)\r\n   at Microsoft.CodeAnalysis.CSharp.Extensions.SyntaxTreeExtensions.IsInNonUserCode(Microsoft.CodeAnalysis.SyntaxTree, Int32, System.Threading.CancellationToken)\r\n   at Microsoft.CodeAnalysis.CSharp.Completion.Providers.EnumAndCompletionListTagCompletionProvider+<ProvideCompletionsAsync>d__1.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start[[Microsoft.CodeAnalysis.CSharp.Completion.Providers.EnumAndCompletionListTagCompletionProvider+<ProvideCompletionsAsync>d__1, Microsoft.CodeAnalysis.CSharp.Features, Version=2.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]](<ProvideCompletionsAsync>d__1 ByRef)\r\n   at Microsoft.CodeAnalysis.CSharp.Completion.Providers.EnumAndCompletionListTagCompletionProvider.ProvideCompletionsAsync(Microsoft.CodeAnalysis.Completion.CompletionContext)\r\n   at Microsoft.CodeAnalysis.Completion.CompletionServiceWithProviders+<GetContextAsync>d__33.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Start[[Microsoft.CodeAnalysis.Completion.CompletionServiceWithProviders+<GetContextAsync>d__33, Microsoft.CodeAnalysis.Features, Version=2.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]](<GetContextAsync>d__33 ByRef)\r\n   at Microsoft.CodeAnalysis.Completion.CompletionServiceWithProviders.GetContextAsync(Microsoft.CodeAnalysis.Completion.CompletionProvider, Microsoft.CodeAnalysis.Document, Int32, Microsoft.CodeAnalysis.Completion.CompletionTrigger, Microsoft.CodeAnalysis.Options.OptionSet, System.Nullable`1<Microsoft.CodeAnalysis.Text.TextSpan>, System.Threading.CancellationToken)\r\n   at Microsoft.CodeAnalysis.Completion.CompletionServiceWithProviders+<ComputeNonEmptyCompletionContextsAsync>d__26.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.Collections.Immutable.ImmutableArray`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], System.Collections.Immutable, Version=1.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a]].Start[[Microsoft.CodeAnalysis.Completion.CompletionServiceWithProviders+<ComputeNonEmptyCompletionContextsAsync>d__26, Microsoft.CodeAnalysis.Features, Version=2.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]](<ComputeNonEmptyCompletionContextsAsync>d__26 ByRef)\r\n   at Microsoft.CodeAnalysis.Completion.CompletionServiceWithProviders.ComputeNonEmptyCompletionContextsAsync(Microsoft.CodeAnalysis.Document, Int32, Microsoft.CodeAnalysis.Completion.CompletionTrigger, Microsoft.CodeAnalysis.Options.OptionSet, Microsoft.CodeAnalysis.Text.TextSpan, System.Collections.Immutable.ImmutableArray`1<Microsoft.CodeAnalysis.Completion.CompletionProvider>, System.Threading.CancellationToken)\r\n   at Microsoft.CodeAnalysis.Completion.CompletionServiceWithProviders+<GetCompletionsAsync>d__24.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Start[[Microsoft.CodeAnalysis.Completion.CompletionServiceWithProviders+<GetCompletionsAsync>d__24, Microsoft.CodeAnalysis.Features, Version=2.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]](<GetCompletionsAsync>d__24 ByRef)\r\n   at Microsoft.CodeAnalysis.Completion.CompletionServiceWithProviders.GetCompletionsAsync(Microsoft.CodeAnalysis.Document, Int32, Microsoft.CodeAnalysis.Completion.CompletionTrigger, System.Collections.Immutable.ImmutableHashSet`1<System.String>, Microsoft.CodeAnalysis.Options.OptionSet, System.Threading.CancellationToken)\r\n   at Microsoft.CodeAnalysis.Completion.CompletionService+<GetCompletionsAndSetItemDocumentAsync>d__11.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Start[[Microsoft.CodeAnalysis.Completion.CompletionService+<GetCompletionsAndSetItemDocumentAsync>d__11, Microsoft.CodeAnalysis.Features, Version=2.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]](<GetCompletionsAndSetItemDocumentAsync>d__11 ByRef)\r\n   at Microsoft.CodeAnalysis.Completion.CompletionService.GetCompletionsAndSetItemDocumentAsync(Microsoft.CodeAnalysis.Document, Int32, Microsoft.CodeAnalysis.Completion.CompletionTrigger, System.Collections.Immutable.ImmutableHashSet`1<System.String>, Microsoft.CodeAnalysis.Options.OptionSet, System.Threading.CancellationToken)\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.IntelliSense.Completion.Controller+Session+ModelComputer+<DoInBackgroundAsync>d__13.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].Start[[Microsoft.CodeAnalysis.Editor.Implementation.IntelliSense.Completion.Controller+Session+ModelComputer+<DoInBackgroundAsync>d__13, Microsoft.CodeAnalysis.EditorFeatures, Version=2.9.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]](<DoInBackgroundAsync>d__13 ByRef)\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.IntelliSense.Completion.Controller+Session+ModelComputer.DoInBackgroundAsync(System.Threading.CancellationToken)\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.IntelliSense.Completion.Controller+Session+ModelComputer.<Do>b__12_0(Microsoft.CodeAnalysis.Editor.Implementation.IntelliSense.Completion.Model, System.Threading.CancellationToken)\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.IntelliSense.ModelComputation`1+<>c__DisplayClass17_0[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].<ChainTaskAndNotifyControllerWhenFinished>b__0(System.Threading.Tasks.Task`1<System.__Canon>)\r\n   at Roslyn.Utilities.TaskExtensions+<>c__DisplayClass16_0`2[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].<SafeContinueWithFromAsync>b__0(System.Threading.Tasks.Task)\r\n   at System.Threading.Tasks.ContinuationResultTaskFromTask`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].InnerInvoke()\r\n   at System.Threading.Tasks.Task.Execute()\r\n   at System.Threading.Tasks.Task.ExecutionContextCallback(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.ExecuteEntry(Boolean)\r\n   at System.Threading.Tasks.TaskScheduler.TryExecuteTask(System.Threading.Tasks.Task)\r\n   at Microsoft.CodeAnalysis.Editor.Implementation.IntelliSense.Completion.PrioritizedTaskScheduler.ThreadStart()\r\n   at System.Threading.ThreadHelper.ThreadStart_Context(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart()\r\n\r\n```\r\n\r\nWatson bucket is:\r\n\r\n```\r\nFault bucket 125730739576, type 5\r\nEvent Name: PerfWatsonVS12Data\r\nResponse: Not available\r\nCab Id: 0\r\n```"},{"Id":"7855793094","Type":"IssuesEvent","CreatedAt":"2018-06-21T04:06:27","Actor":"jaredpar","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/28039","RelatedDescription":"Opened issue \"Need to fix tests that depend on using implicit mscorlib reference\" (#28039) at dotnet/roslyn","RelatedBody":"A number of compiler tests invoke the compiler in proc and depend on the assembly containing `System.Object` to be corlib. Effectively equivalent to the following:\r\n\r\n```\r\n> csc Test.cs\r\n```\r\n\r\nThis works fine on .Net Desktop but fails on .Net Core. These tests need to be converted to use a netstandard that we write to disk somewhere or provide in memory from our resource DLL. "},{"Id":"7855744663","Type":"IssuesEvent","CreatedAt":"2018-06-21T03:46:15","Actor":"livarcocc","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/28038","RelatedDescription":"Opened issue \"csc.dll code 139 error when building project on .NET Core 2.1.300 Ubuntu 18.04 ARM64 (WSL)\" (#28038) at dotnet/roslyn","RelatedBody":"_From @leecow on June 21, 2018 2:24_\n\n@snickler commented on [Wed Jun 20 2018](https://github.com/dotnet/core/issues/1717)\n\n# csc.dll code 139 error when building project on .NET Core 2.1.300 Ubuntu 18.04 ARM64 (WSL)\r\n\r\nI created a new project using `dotnet new console` then attempted `dotnet build`, while using the .NET Core 2.1.300 SDK for Linux ARM64\r\n\r\n## Binary Information: \r\n\r\nDownloaded Ubuntu 18.04 from here https://www.microsoft.com/store/productId/9N9TNGVNDL3Q\r\n\r\nDownloaded .NET Core 2.1 Linux ARM64 from https://download.microsoft.com/download/8/8/5/88544F33-836A-49A5-8B67-451C24709A8F/dotnet-sdk-2.1.300-linux-arm64.tar.gz\r\n\r\n\r\n## System Information: \r\n\r\n### msinfo32 output:\r\n```\r\n\r\nOS Name\tMicrosoft Windows 10 Pro Insider Preview\r\nVersion\t10.0.17692 Build 17692\r\nOther OS Description \tNot Available\r\nOS Manufacturer\tMicrosoft Corporation\r\nSystem Name\tWOATARGET\r\nSystem Manufacturer\tASUSTeK COMPUTER INC.\r\nSystem Model\tNovaGo TP370QL\r\nSystem Type\tARM64-based PC\r\nSystem SKU\t6\r\nProcessor\tSnapdragon(TM) 835, 2208 Mhz, 8 Core(s), 8 Logical Processor(s)\r\nBIOS Version/Date\tQualcomm Inc. TP370QL.254, 4/24/2018\r\nSMBIOS Version\t3.0\r\nEmbedded Controller Version\t255.255\r\nBIOS Mode\tUEFI\r\nBaseBoard Manufacturer\tASUSTeK COMPUTER INC.\r\nBaseBoard Product\tNovaGo TP370QL\r\nBaseBoard Version\t1.0\r\n\r\n```\r\n\r\n### lsb_release output from Ubuntu 18.04:\r\n```\r\n\r\nArchitecture:        aarch64\r\nByte Order:          Little Endian\r\nCPU(s):              8\r\nOn-line CPU(s) list: 0-7\r\nThread(s) per core:  1\r\nCore(s) per socket:  8\r\nSocket(s):           1\r\nVendor ID:           ARM\r\nModel:               0\r\nModel name:          Cortex-A57\r\nStepping:            r1p0\r\nCPU max MHz:         2208.0000\r\nBogoMIPS:            1900\r\nHypervisor vendor:   Windows Subsystem for Linux\r\nVirtualization type: container\r\nFlags:               fp asimd evtstrm aes pmull sha1 sha2 crc32\r\n```\r\n\r\n\r\n## Output: \r\n\r\n```\r\nsnickler@WOATARGET:~/anothertestapp$ dotnet build\r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 267.87 ms for /home/snickler/anothertestapp/anothertestapp.csproj.\r\n/home/snickler/dotnet-2.1/sdk/2.1.300/Roslyn/Microsoft.CSharp.Core.targets(52,5): error MSB6006: \"csc.dll\" exited with code 139. [/home/snickler/anothertestapp/anothertestapp.csproj]\r\n\r\nBuild FAILED.\r\n\r\n/home/snickler/dotnet-2.1/sdk/2.1.300/Roslyn/Microsoft.CSharp.Core.targets(52,5): error MSB6006: \"csc.dll\" exited with code 139. [/home/snickler/anothertestapp/anothertestapp.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:26.61\r\n\r\n```\r\n\n\n\n\n_Copied from original issue: dotnet/cli#9527_"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7855991508","Type":"PullRequestEvent","CreatedAt":"2018-06-21T05:30:17","Actor":"am11","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5983","RelatedDescription":"Opened pull request \"Fix warning in cordebuginfo.h\" (#5983) at dotnet/corert","RelatedBody":"On Alpine, 9 warnings were produced in the end when we build ObjWriter:\r\n\r\n```sh\r\n/llvm/tools/ObjWriter/cordebuginfo.h:209:13: warning: anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]\r\n            struct\r\n            ^\r\n/llvm/tools/ObjWriter/cordebuginfo.h:219:13: warning: anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]\r\n            struct\r\n            ^\r\n/llvm/tools/ObjWriter/cordebuginfo.h:228:13: warning: anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]\r\n            struct\r\n            ^\r\n/llvm/tools/ObjWriter/cordebuginfo.h:237:13: warning: anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]\r\n            struct\r\n            ^\r\n/llvm/tools/ObjWriter/cordebuginfo.h:250:13: warning: anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]\r\n            struct\r\n            ^\r\n/llvm/tools/ObjWriter/cordebuginfo.h:264:13: warning: anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]\r\n            struct\r\n            ^\r\n/llvm/tools/ObjWriter/cordebuginfo.h:273:13: warning: anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]\r\n            struct\r\n            ^\r\n/llvm/tools/ObjWriter/cordebuginfo.h:284:13: warning: anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]\r\n            struct\r\n            ^\r\n/llvm/tools/ObjWriter/cordebuginfo.h:291:13: warning: anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]\r\n            struct\r\n            ^\r\n9 warnings generated.\r\n[100%] Linking CXX shared library ../../lib/libobjwriter.so\r\n[100%] Built target objwriter\r\n```\r\n\r\nThis delta fixes those warnings."},{"Id":"7855752659","Type":"IssuesEvent","CreatedAt":"2018-06-21T03:49:18","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5982","RelatedDescription":"Opened issue \"samples/WebApi compiles with errors\" (#5982) at dotnet/corert","RelatedBody":"```\r\nEXEC : warning : Method `[Microsoft.AspNetCore.Server.Kestrel.Core]Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1OutputProducer.WriteAsync(ReadOnlySpan`1<uint8>,CancellationToken)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] ClassLoadGeneral: System.Buffers.CountingBufferWriter`1<System.IO.Pipelines.PipeWriter>, Microsoft.AspNetCore.Server.Kestrel.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 [D:\\corert\\samples\\WebApi\\SampleWebApi.csproj]\r\nEXEC : warning : Method `[Microsoft.AspNetCore.Server.Kestrel.Core]Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1OutputProducer.WriteResponseHeaders(int32,string,HttpResponseHeaders)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] ClassLoadGeneral: System.Buffers.CountingBufferWriter`1<System.IO.Pipelines.PipeWriter>, Microsoft.AspNetCore.Server.Kestrel.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 [D:\\corert\\samples\\WebApi\\SampleWebApi.csproj]\r\nEXEC : warning : Method `[Microsoft.AspNetCore.Server.Kestrel.Core]Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.WriteChunk(PipeWriter,ReadOnlyMemory`1<uint8>)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] ClassLoadGeneral: System.Buffers.CountingBufferWriter`1<System.IO.Pipelines.PipeWriter>, Microsoft.AspNetCore.Server.Kestrel.Core, Version=2.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 [D:\\corert\\samples\\WebApi\\SampleWebApi.csproj]\r\n```"},{"Id":"7855743436","Type":"PullRequestEvent","CreatedAt":"2018-06-21T03:45:46","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5912","RelatedDescription":"Merged pull request \"Update WebApi sample to 2.1\" (#5912) at dotnet/corert","RelatedBody":"Will fail with\r\n```\r\n\r\n  Restore completed in 62.94 ms for C:\\GitHub\\corert\\samples\\WebApi\\SampleWebApi.csproj.\r\n  SampleWebApi -> C:\\GitHub\\corert\\samples\\WebApi\\bin\\Release\\netcoreapp2.1\\win-x64\\SampleWebApi.dll\r\n  Generating native code\r\nEXEC : warning : RD.XML processing will change before release (https://github.com/dotnet/corert/issues/5001) [C:\\GitHub\\corert\\samples\\WebApi\\SampleWebApi.csproj]\r\nEXEC : error : [TEMPORARY EXCEPTION MESSAGE] \r\nClassLoadGeneral: System.Reflection.Emit.ILGenerator, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a [C:\\GitHub\\corert\\samples\\WebApi\\SampleWebApi.csproj]\r\n  Internal.TypeSystem.TypeSystemException+TypeLoadException: [TEMPORARY EXCEPTION MESSAGE] ClassLoadGeneral: System.Reflection.Emit.ILGenerator, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\r\n     at Internal.TypeSystem.ThrowHelper.ThrowTypeLoadException(ExceptionStringID id, String typeName, String assemblyName)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetType(String nameSpace, String name, Boolean throwIfNotFound)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetType(String nameSpace, String name, Boolean throwIfNotFound)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.ResolveTypeReference(TypeReferenceHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.EcmaObjectLookupHashtable.CreateValueFromKey(EntityHandle handle)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetObject(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetType(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseType(SignatureTypeCode typeCode)\r\n     at Internal.TypeSystem.Ecma.EcmaSignatureParser.ParseFieldSignature()\r\n     at Internal.TypeSystem.Ecma.EcmaField.InitializeFieldType()\r\n     at Internal.TypeSystem.MetadataFieldLayoutAlgorithm.ComputeInstanceLayout(DefType defType, InstanceLayoutKind layoutKind)\r\n     at Internal.TypeSystem.DefType.ComputeInstanceLayout(InstanceLayoutKind layoutKind)\r\n     at ILCompiler.DependencyAnalysis.EETypeNode.CheckCanGenerateEEType(NodeFactory factory, TypeDesc type)\r\n     at ILCompiler.DependencyAnalysis.NodeFactory.<CreateNodeCaches>b__36_1(TypeDesc type)\r\n     at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n     at ILCompiler.Compilation.RootingServiceProvider.AddCompilationRoot(TypeDesc type, String reason)\r\n     at ILCompiler.RdXmlRootProvider.RootType(IRootingServiceProvider rootProvider, TypeDesc type)\r\n     at ILCompiler.RdXmlRootProvider.ProcessAssemblyDirective(IRootingServiceProvider rootProvider, XElement assemblyElement)\r\n     at ILCompiler.RdXmlRootProvider.AddCompilationRoots(IRootingServiceProvider rootProvider)\r\n     at ILCompiler.Compilation..ctor(DependencyAnalyzerBase`1 dependencyGraph, NodeFactory nodeFactory, IEnumerable`1 compilationRoots, DebugInformationProvider debugInformationProvider, DevirtualizationManager devirtualizationManager, Logger logger)\r\n     at ILCompiler.ILScannerBuilder.ToILScanner()\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\nC:\\Users\\thund\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-26529-02\\build\\Microsoft.NETCore.Native.targets(183,5): error MSB3073: The command \"\"C:\\Users\\thund\\.nuget\\packages\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-26529-02\\tools\\ilc\" @\"obj\\Release\\netcoreapp2.1\\win-x64\\native\\SampleWebApi.ilc.rsp\"\" exited with code 1. [C:\\GitHub\\corert\\samples\\WebApi\\SampleWebApi.csproj\r\n```"},{"Id":"7855725002","Type":"PullRequestEvent","CreatedAt":"2018-06-21T03:38:08","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5981","RelatedDescription":"Merged pull request \"Undo accidental 2.0 -> 2.1 renames\" (#5981) at dotnet/corert","RelatedBody":""},{"Id":"7855724442","Type":"PullRequestEvent","CreatedAt":"2018-06-21T03:37:54","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5981","RelatedDescription":"Opened pull request \"Undo accidental 2.0 -> 2.1 renames\" (#5981) at dotnet/corert","RelatedBody":""},{"Id":"7855195357","Type":"PullRequestEvent","CreatedAt":"2018-06-21T00:12:03","Actor":"Anipik","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/5980","RelatedDescription":"Closed pull request \"Mirror changes from Anipik/ coreclr\" (#5980) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from Anipik/ coreclr\n\n\n**Please REBASE this PR when merging**\n cc @MarcoRossignoli"},{"Id":"7855193478","Type":"PullRequestEvent","CreatedAt":"2018-06-21T00:11:21","Actor":"Anipik","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5980","RelatedDescription":"Opened pull request \"Mirror changes from Anipik/ coreclr\" (#5980) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from Anipik/ coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7855179957","Type":"PullRequestEvent","CreatedAt":"2018-06-21T00:06:29","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5974","RelatedDescription":"Merged pull request \"Rev netcoreapp2.0 to netcoreapp2.1\" (#5974) at dotnet/corert","RelatedBody":""},{"Id":"7855172749","Type":"PullRequestEvent","CreatedAt":"2018-06-21T00:03:56","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5971","RelatedDescription":"Merged pull request \"[Documentation] Usage of .Net Native and CoreRT\" (#5971) at dotnet/corert","RelatedBody":"The usage of \".Net Native\" in all other sources (including the linked page on .Net Native) is that it is the compiler for UWP apps only. This change brings this documentation into line with that definition."},{"Id":"7855167364","Type":"PullRequestEvent","CreatedAt":"2018-06-21T00:01:57","Actor":"Anipik","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/5979","RelatedDescription":"Closed pull request \"Mirror changes from Anipik/ coreclr\" (#5979) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from Anipik/ coreclr\n\n\n**Please REBASE this PR when merging**\n cc MarcoRossignoli"},{"Id":"7855166433","Type":"PullRequestEvent","CreatedAt":"2018-06-21T00:01:35","Actor":"Anipik","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5979","RelatedDescription":"Opened pull request \"Mirror changes from Anipik/ coreclr\" (#5979) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from Anipik/ coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7855157872","Type":"PullRequestEvent","CreatedAt":"2018-06-20T23:58:38","Actor":"Anipik","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/5978","RelatedDescription":"Closed pull request \"Mirror changes from Anipik/ coreclr\" (#5978) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from Anipik/ coreclr\n\n\n**Please REBASE this PR when merging**cc @Anipik"},{"Id":"7855154365","Type":"PullRequestEvent","CreatedAt":"2018-06-20T23:57:17","Actor":"Anipik","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5978","RelatedDescription":"Opened pull request \"Mirror changes from Anipik/ coreclr\" (#5978) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from Anipik/ coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7855009499","Type":"PullRequestEvent","CreatedAt":"2018-06-20T23:06:31","Actor":"Anipik","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/5977","RelatedDescription":"Closed pull request \"Mirror changes from Anipik/ coreclr\" (#5977) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from Anipik/ coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7855006239","Type":"PullRequestEvent","CreatedAt":"2018-06-20T23:05:28","Actor":"Anipik","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5977","RelatedDescription":"Opened pull request \"Mirror changes from Anipik/ coreclr\" (#5977) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from Anipik/ coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7854701690","Type":"PullRequestEvent","CreatedAt":"2018-06-20T21:42:17","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5973","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5973) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7854621875","Type":"PullRequestEvent","CreatedAt":"2018-06-20T21:24:10","Actor":"Anipik","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/5976","RelatedDescription":"Closed pull request \"Mirror changes from Anipik/ coreclr\" (#5976) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from Anipik/ coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7854606759","Type":"PullRequestEvent","CreatedAt":"2018-06-20T21:21:01","Actor":"Anipik","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5976","RelatedDescription":"Opened pull request \"Mirror changes from Anipik/ coreclr\" (#5976) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from Anipik/ coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7854601199","Type":"PullRequestEvent","CreatedAt":"2018-06-20T21:19:49","Actor":"Anipik","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/5972","RelatedDescription":"Closed pull request \"Mirror changes from Anipik/ corefx\" (#5972) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from Anipik/ corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"7854590407","Type":"PullRequestEvent","CreatedAt":"2018-06-20T21:17:29","Actor":"Anipik","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/5975","RelatedDescription":"Closed pull request \"Mirror changes from Anipik/ coreclr\" (#5975) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from Anipik/ coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7855952940","Type":"IssuesEvent","CreatedAt":"2018-06-21T05:14:53","Actor":"gordon-matt","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2350","RelatedDescription":"Opened issue \"2.1.0 gives HTTP 404 errors for routes to class library controllers (and only when published)\" (#2350) at dotnet/sdk","RelatedBody":"I have just recently moved from 2.0 to 2.1 and everything seemed fine in my development environment, but as soon as I deployed the code, I got HTTP 404 errors for my routes to controllers in class libraries. This did not happen in 2.0 and I don't know how to solve it yet.\r\n\r\nMy solution is rather large, but I have extracted parts of it into a small-ish demo you can find here: https://github.com/gordon-matt/LibraryRoutesNotWorking. Instructions for setup are in the README.md."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1009514602428710912","CreatedAt":"2018-06-20T19:13:31+00:00","UserScreenname":"dotnet","Text":".NET Core 2.0 will reach End of Life on September 1, 2018 https://t.co/5PoTWEAQgt","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":161,"FavoriteCount":184,"RawContent":null},{"Id":"1009477602791133186","CreatedAt":"2018-06-20T16:46:30+00:00","UserScreenname":"dotnet","Text":"Call for papers now open for #dotnetconf virtual event in September! Present to our worldwide community. No travel… https://t.co/KraqcAKxAo","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":183,"FavoriteCount":135,"RawContent":null},{"Id":"1009207915775811584","CreatedAt":"2018-06-19T22:54:51+00:00","UserScreenname":"dotnet","Text":"The RyuJIT transition is complete! https://t.co/JhkSV0Aybh","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":306,"FavoriteCount":162,"RawContent":null},{"Id":"1008787534451638272","CreatedAt":"2018-06-18T19:04:25+00:00","UserScreenname":"dotnet","Text":"Staying up-to-date with .NET Container Images https://t.co/09vnrG5uqh /cc @aspnet @Docker @DockerCon","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":204,"FavoriteCount":103,"RawContent":null},{"Id":"1008746685697150976","CreatedAt":"2018-06-18T16:22:06+00:00","UserScreenname":"dotnet","Text":"Building distributed applications with Orleans https://t.co/GgWRQHcdPP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":64,"FavoriteCount":25,"RawContent":null},{"Id":"1007054749512814592","CreatedAt":"2018-06-14T00:18:57+00:00","UserScreenname":"dotnet","Text":"Using .NET and Docker Together – DockerCon 2018 Update https://t.co/ZYju7lEGqz","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":146,"FavoriteCount":77,"RawContent":null},{"Id":"1007012327353454594","CreatedAt":"2018-06-13T21:30:22+00:00","UserScreenname":"dotnet","Text":"Join @csharpfritz tomorrow to learn how to use @AppInsights with your #ASP.NET Core project. https://t.co/pSofjdde2Y","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":9,"RawContent":null}]}},"RunOn":"2018-06-21T05:30:36.5052184Z","RunDurationInMilliseconds":8884}