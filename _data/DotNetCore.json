{"Data":{"Blog":{"FeedItems":[{"Title":"Using .NET Hardware Intrinsics API to accelerate machine learning scenarios","PublishedOn":"2018-10-10T16:00:03+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"This week&#8217;s blog post is by Brian Lui, one of our summer interns on the .NET team, who&#8217;s been hard at work. Over to Brian: Hello everyone! This summer I interned in the .NET team, working...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/10/using-net-hardware-intrinsics-api-to-accelerate-machine-learning-scenarios/","RawContent":null},{"Title":".NET Core October 2018 Update – NET Core 1.0 and 1.1","PublishedOn":"2018-10-09T23:19:23+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core October 2018 Update for 1.0 and 1.1. This update includes .NET Core 1.0.13, 1.1.10 and .NET Core SDK 1.1.11. Security CVE-2018-8292: .NET Core Information...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/","RawContent":null},{"Title":".NET Framework October 2018 Security and Quality Rollup","PublishedOn":"2018-10-09T23:09:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we released the October 2018 Security and Quality Rollup. Security No new security fixes.  See .NET Framework September 2018 Security and Quality Rollup for the latest security update. Quality...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-framework-october-2018-security-and-quality-rollup/","RawContent":null},{"Title":"Announcing ML.NET 0.6 (Machine Learning .NET)","PublishedOn":"2018-10-09T00:35:09+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Today we’re announcing our latest monthly release: ML.NET 0.6! ML.NET is a cross-platform, open source machine learning framework for .NET developers. We want to enable every .NET developer to train...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/08/announcing-ml-net-0-6-machine-learning-net/","RawContent":null},{"Title":"Update on .NET Core 3.0 and .NET Framework 4.8","PublishedOn":"2018-10-04T16:29:57+00:00","CommentsCount":104,"FacebookCount":0,"Summary":"In May, we announced .NET Core 3.0, the next major version of .NET Core that adds support for building desktop applications using WinForms, WPF, and Entity Framework 6. We also announced some exciting...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/04/update-on-net-core-3-0-and-net-framework-4-8/","RawContent":null},{"Title":".NET Core October 2018 Update – NET Core 2.1.5 & SDK 2.1.403","PublishedOn":"2018-10-02T15:31:06+00:00","CommentsCount":10,"FacebookCount":0,"Summary":".NET Core October 2018 Update Today, we are releasing the .NET Core October 2018 Update. This update includes .NET Core 2.1.5 and .NET Core SDK 2.1.403 and contains important reliability fixes....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/02/net-core-october-2018-update/","RawContent":null},{"Title":".NET Framework September 2018 Preview of Quality Rollup","PublishedOn":"2018-09-25T19:36:58+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Late last week we released the September 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. CLR Updated code to prevent...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/25/net-framework-september-2018-preview-of-quality-rollup/","RawContent":null},{"Title":"Announcing Cumulative Updates for .NET Framework for Windows 10 October 2018 Update","PublishedOn":"2018-09-19T22:30:19+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"We deliver .NET Framework updates nearly every month, through Windows Update and other distribution channels. We are making changes to the way that we deliver those updates. We’ll soon start...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/19/announcing-cumulative-updates-for-net-framework-for-windows-10-october-2018-update/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access build 3646","PublishedOn":"2018-09-18T02:38:06+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/17/announcing-net-framework-4-8-early-access-build-3646/","RawContent":null},{"Title":"Announcing .NET Core 2.2 Preview 2","PublishedOn":"2018-09-12T19:26:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.2 Preview 2. We have great improvements that we want to share and that we would love to get your feedback on, either in the comments or at dotnet/core #1938....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/12/announcing-net-core-2-2-preview-2/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8341294365","Type":"IssuesEvent","CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Opened issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112) at dotnet/foundation","RelatedBody":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n"},{"Id":"8203056810","Type":"IssuesEvent","CreatedAt":"2018-09-02T16:49:34","Actor":"adamralph","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/111","RelatedDescription":"Opened issue \"Sourcelink location is confusing\" (#111) at dotnet/home","RelatedBody":"The README has link under the \"Cameron Taggart\" section pointing to https://github.com/ctaggart/SourceLink but the project now seems to live under the \"dotnet\" org in https://github.com/dotnet/sourcelink/ which suggests the link should be changed to that, and moved under the \"Microsoft\" section."},{"Id":"8173033759","Type":"PullRequestEvent","CreatedAt":"2018-08-27T16:21:56","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/110","RelatedDescription":"Merged pull request \"Fix - add missing comma\" (#110) at dotnet/home","RelatedBody":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix."},{"Id":"8163761410","Type":"PullRequestEvent","CreatedAt":"2018-08-24T15:35:46","Actor":"jkonicki","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/110","RelatedDescription":"Opened pull request \"Fix - add missing comma\" (#110) at dotnet/home","RelatedBody":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix."},{"Id":"8160074991","Type":"PullRequestEvent","CreatedAt":"2018-08-23T23:10:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/108","RelatedDescription":"Merged pull request \"Fix errors in projects.json\" (#108) at dotnet/home","RelatedBody":""},{"Id":"8160071932","Type":"PullRequestEvent","CreatedAt":"2018-08-23T23:09:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/109","RelatedDescription":"Merged pull request \"Add Steeltoe to the project listing\" (#109) at dotnet/home","RelatedBody":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks."},{"Id":"8159331036","Type":"PullRequestEvent","CreatedAt":"2018-08-23T20:13:18","Actor":"jkonicki","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/109","RelatedDescription":"Opened pull request \"Add Steeltoe to the project listing\" (#109) at dotnet/home","RelatedBody":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks."},{"Id":"8147233541","Type":"PullRequestEvent","CreatedAt":"2018-08-21T22:39:06","Actor":"anthonychu","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/108","RelatedDescription":"Opened pull request \"Fix errors in projects.json\" (#108) at dotnet/home","RelatedBody":""},{"Id":"8131503388","Type":"PullRequestEvent","CreatedAt":"2018-08-17T23:19:54","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/105","RelatedDescription":"Merged pull request \"Add DLR/IronPython2/IronPython3\" (#105) at dotnet/home","RelatedBody":"Add DLR/IronPython2/IronPython3 to project list."},{"Id":"8075734624","Type":"IssuesEvent","CreatedAt":"2018-08-07T07:06:40","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/home/issues/104","RelatedDescription":"Closed issue \"About still mentions CodePlex\" (#104) at dotnet/home","RelatedBody":"About still mentions CodePlex which is now in archive mode.\r\n\r\n![image](https://user-images.githubusercontent.com/4345663/42086259-e0b7d008-7b92-11e8-96c9-02ee61ddc457.png)\r\n\r\nIs this something that I can PR?"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"8394268768","Type":"IssuesEvent","CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Opened issue \"October 2018 .NET Updates\" (#89) at dotnet/announcements","RelatedBody":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)"},{"Id":"8394092294","Type":"IssuesEvent","CreatedAt":"2018-10-09T22:51:19","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/> **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n"},{"Id":"8377166566","Type":"IssuesEvent","CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Opened issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87) at dotnet/announcements","RelatedBody":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```"},{"Id":"8362210504","Type":"IssuesEvent","CreatedAt":"2018-10-03T16:11:10","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Opened issue \".NET Core 2.0 has reached end of life\" (#86) at dotnet/announcements","RelatedBody":"On October 1, 2018 .NET Core 2.0 reached end of life. This means the version channel is no longer supported and updates will no longer be provided. We recommend moving to a supported release. See our [support policy](https://www.microsoft.com/net/platform/support-policy) for more details.\r\n\r\nWe understand there will be needs to access end of life versions so downloads and Docker images will remain available. \r\n\r\n* 2.0 downloads will still be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). You will see notifications on the site indicating the end of life status. \r\n* 2.0 links have been removed from the [microsoft/donet Docker page](https://hub.docker.com/r/microsoft/dotnet/) though images will remain on the system.\r\n\r\n"},{"Id":"8279098039","Type":"IssuesEvent","CreatedAt":"2018-09-18T01:10:24","Actor":"spshant","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Opened issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85) at dotnet/announcements","RelatedBody":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n"},{"Id":"8247970519","Type":"IssuesEvent","CreatedAt":"2018-09-11T17:00:56","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/83","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\" (#83) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in .NET Core when System.IO.Pipelines improperly handles requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an application that is leveraging System.IO.Pipelines. The vulnerability can be exploited remotely, without authentication. A remote unauthenticated attacker could exploit this vulnerability by providing specially crafted requests to the application.\r\n\r\nThe update addresses the vulnerability by correcting how System.IO.Pipelines handles requests.\r\n\r\nIf you are using ASP.NET Core 2.1 you will also need to update your ASP.NET version this by following the instructions in the [ASP.NET Core bulletin](***TDB***).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.IO.Pipelines package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Pipelines | 4.5.0 | 4.5.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications which use System.IO.Pipelines\r\n\r\nSystem.IO.Pipelines is distributed both in ASP.NET Core 2.1 and separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the System.IO.Pipelines package.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Revisions\r\n\r\nV1.0 (September 11, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-09-11_\r\n"},{"Id":"8220412616","Type":"IssuesEvent","CreatedAt":"2018-09-05T20:56:26","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/82","RelatedDescription":"Opened issue \".NET Core Runtime ARM64 Status\" (#82) at dotnet/announcements","RelatedBody":"# .NET Core Runtime ARM64 Status\r\n\r\nThe .NET Core team is in the process of adding support for ARM64, as part of the .NET Core 3.0 project. This issue will be updated as ARM64 support progresses.\r\n\r\nInitial support for ARM64 was added in the .NET Core 2.1 release. The team is not maintaining .NET Core 2.x branches with respect to ARM64. All ARM64 improvements will be made in the .NET Core 3.0 branch (currently [master](https://github.com/dotnet/coreclr)).\r\n\r\n## Current Status\r\n\r\nARM64 is currently broken in .NET Core 3.0 builds. See:\r\n\r\n* [dotnet/coreclr #19805](https://github.com/dotnet/coreclr/issues/19805)\r\n* [dotnet/coreclr #19822](https://github.com/dotnet/coreclr/issues/19822)\r\n\r\n## Operating Systems\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following operating systems:\r\n\r\n* Ubuntu 16.04\r\n* Windows 10\r\n\r\n## Test Hardware\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following hardware:\r\n\r\n* [NVIDIA Jetson TX2 Module](https://developer.nvidia.com/embedded/buy/jetson-tx2)\r\n* [Pine A64](https://www.pine64.org/?page_id=46823)\r\n* [Qualcomm Centriq 2400](https://www.qualcomm.com/products/qualcomm-centriq-2400-processor)\r\n* [Qualcomm Snapdragon](https://www.qualcomm.com/snapdragon/always-connected-pc)\r\n* [Raspberry Pi3](https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8402055105","Type":"PullRequestEvent","CreatedAt":"2018-10-11T04:31:46","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20359","RelatedDescription":"Merged pull request \"Disable b152292 for Linux/arm64\" (#20359) at dotnet/coreclr","RelatedBody":"Tracked by #20358"},{"Id":"8402046400","Type":"PullRequestEvent","CreatedAt":"2018-10-11T04:28:24","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20365","RelatedDescription":"Merged pull request \"Don't add \"Build and Test\" to arm PMI job names\" (#20365) at dotnet/coreclr","RelatedBody":""},{"Id":"8402046051","Type":"PullRequestEvent","CreatedAt":"2018-10-11T04:28:16","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20365","RelatedDescription":"Opened pull request \"Don't add \"Build and Test\" to arm PMI job names\" (#20365) at dotnet/coreclr","RelatedBody":""},{"Id":"8401993611","Type":"PullRequestEvent","CreatedAt":"2018-10-11T04:07:52","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20364","RelatedDescription":"Merged pull request \"Fixes2\" (#20364) at dotnet/coreclr","RelatedBody":""},{"Id":"8401993064","Type":"PullRequestEvent","CreatedAt":"2018-10-11T04:07:40","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20364","RelatedDescription":"Opened pull request \"Fixes2\" (#20364) at dotnet/coreclr","RelatedBody":""},{"Id":"8401615346","Type":"PullRequestEvent","CreatedAt":"2018-10-11T02:02:45","Actor":"davmason","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20363","RelatedDescription":"Opened pull request \"fix issue where we wouldn't throw OOM after failing to allocate more space for finalize queue\" (#20363) at dotnet/coreclr","RelatedBody":"As part of the local GC work we changed GCHeap::RegisterForFinalization to not throw and return a bool, but we didn't respect that bool anywhere"},{"Id":"8401610540","Type":"PullRequestEvent","CreatedAt":"2018-10-11T02:01:22","Actor":"davmason","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20362","RelatedDescription":"Opened pull request \"fix enc issue where dav has an av because it tries to use the handleanager, which isn't initialized in the dac\" (#20362) at dotnet/coreclr","RelatedBody":""},{"Id":"8401605678","Type":"PullRequestEvent","CreatedAt":"2018-10-11T01:59:46","Actor":"davmason","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20361","RelatedDescription":"Opened pull request \"add handle tracking for profiler\" (#20361) at dotnet/coreclr","RelatedBody":"As part of local GC we moved the handle table callbacks for profilers to the VM side, but there were two codepaths that did not have the callback."},{"Id":"8401572372","Type":"PullRequestEvent","CreatedAt":"2018-10-11T01:48:22","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20360","RelatedDescription":"Opened pull request \"[WIP] Test PR\" (#20360) at dotnet/coreclr","RelatedBody":"The first version of this function was added in 2014 with such comment:\r\n`// Once TYP_SIMD is plumbed through the frontend, this will no longer be required.`\r\nCheck that we still need it."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8402037987","Type":"PullRequestEvent","CreatedAt":"2018-10-11T04:25:01","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10159","RelatedDescription":"Opened pull request \"Updating 1.0 and 1.1 implicit self-contained versions\" (#10159) at dotnet/cli","RelatedBody":"In 2.2.1xx we have another item that needs to be updated for it.\r\n"},{"Id":"8401536676","Type":"IssuesEvent","CreatedAt":"2018-10-11T01:36:09","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8838","RelatedDescription":"Closed issue \"Name clash between own name and library name on dotnet core 2.0\" (#8838) at dotnet/cli","RelatedBody":"@gregorybleiker commented on [Fri Jan 05 2018](https://github.com/dotnet/core/issues/1192)\n\nIf you create a console app via\r\ndotnet new console \r\nin a directory named \"websocket\", you will receive a websocket.csproj\r\nPutting the code below in the Main method will cause the error below. Is this the expected behaviour?\r\n\r\n```\r\nvar webSocket = new ClientWebSocket();\r\nCancellationToken token = new CancellationToken();\r\nwebSocket.ConnectAsync(uri: new Uri(@\"ws://172.16.100.163:8080\"), cancellationToken: token).Wait();\r\nConsole.Write($\"task result {webSocket.State}\");\r\n```\r\nNo matter what the Uri (I have tried several, and I can't even see any outgoing connection in wireshark)\r\nthis is the result:\r\n```\r\nUnhandled Exception: System.AggregateException: One or more errors occurred. (Unable to connect to the remote server) ---> System.Net.WebSockets.WebSocketException: Unable to connect to the remote server ---> System.Net.WebSockets.WebSocketException: Unable to connect to the remote server ---> System.Net.Http.WinHttpException: Not enough storage is available to process this command\r\n   --- End of inner exception stack trace ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()\r\n   at System.Net.WebSockets.WinHttpWebSocket.<ConnectAsync>d__18.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Net.WebSockets.WebSocketHandle.<ConnectAsyncCore>d__20.MoveNext()\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.WebSockets.WebSocketHandle.<ConnectAsyncCore>d__20.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Net.WebSockets.ClientWebSocket.<ConnectAsyncCore>d__16.MoveNext()\r\n   --- End of inner exception stack trace ---\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n   at System.Threading.Tasks.Task.Wait()\r\n   at websocket.Program.Main(String[] args) in C:\\Users\\gregorybleiker\\work\\websocket\\Program.cs:line 16\r\n```\r\n\r\n  \n\n---\n\n@benaadams commented on [Fri Jan 05 2018](https://github.com/dotnet/core/issues/1192#issuecomment-355532977)\n\n`System.Net.Http.WinHttpException: Not enough storage is available to process this command`\r\n\r\nThat's a pretty weird exception (message)\r\n  \n\n---\n\n@benaadams commented on [Fri Jan 05 2018](https://github.com/dotnet/core/issues/1192#issuecomment-355534001)\n\nSimilar message https://github.com/dotnet/corefx/issues/24139\r\n\r\nSeems to be a [`ERROR_NOT_ENOUGH_MEMORY`](https://github.com/dotnet/coreclr/blob/24f1153adfc1a83e490d8d22ee353b322aba1e33/src/pal/src/misc/errorstrings.cpp#L41) message; probably should say that rather than storage.\r\n\r\nThough that's an aside...\n\n---\n\n@gregorybleiker commented on [Fri Jan 05 2018](https://github.com/dotnet/core/issues/1192#issuecomment-355536223)\n\nI certainly have enough free memory (16GB machine, 7GB free)\n\n---\n\n@gregorybleiker commented on [Fri Jan 05 2018](https://github.com/dotnet/core/issues/1192#issuecomment-355557365)\n\nbtw. I should have said that I am running the code above in a dotnet core console app in the Main section... could there be some references missing?\n\n---\n\n@gregorybleiker commented on [Fri Jan 05 2018](https://github.com/dotnet/core/issues/1192#issuecomment-355562266)\n\nOK, I found out what the problem was: I was using websocket.csproj as my project name. That must have led to a name clash with the \"other\" websocket...\n\n---\n\n@benaadams commented on [Fri Jan 05 2018](https://github.com/dotnet/core/issues/1192#issuecomment-355565503)\n\nMight want to add that to description and leave open?\n\n"},{"Id":"8401535738","Type":"IssuesEvent","CreatedAt":"2018-10-11T01:35:50","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/6887","RelatedDescription":"Closed issue \"Ensure errors from resolver about mismatched .NET Core SDK versions are surfaced correctly in VS and desktop msbuild\" (#6887) at dotnet/cli","RelatedBody":"_From @srivatsn on June 15, 2017 15:52_\n\n_From @onovotny on June 15, 2017 15:40_\n\nHere's the scenario: \r\n\r\nWeb project that has a global.json with a pinned SDK version. \r\n\r\nExecuting an msbuild /pp yields some interesting results for where the SDK's are imported:\r\n\r\nIf the SDK version is 1.0.0-1.0.3 is:\r\nThe import of the Web SDK is from: \r\n`C:\\Program Files\\dotnet\\sdk\\1.0.0\\Sdks\\Microsoft.NET.Sdk.Web\\Sdk\\Sdk.props`\r\n\r\nBut then the .NET Sdk is from: \r\n`C:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Enterprise\\MSBuild\\Sdks\\Microsoft.NET.Sdk\\Sdk\\Sdk.props`\r\n\r\nIf the SDK version is 1.0.4, both SDK's come from the `C:\\Program Files\\dotnet\\sdk\\1.0.4\\Sdks\\` directory.\r\n\r\nSeems like if `1.0.4` is the min version of the SDK that will work correctly with 15.3, then if VS sees an older pinned version, it should use the upgrade wizard functionality to bump the min SDK version to 1.0.4 so things don't act strangely for users unexpectedly.\n\n_Copied from original issue: dotnet/project-system#2450_\n\n_Copied from original issue: dotnet/sdk#1348_"},{"Id":"8401510131","Type":"PullRequestEvent","CreatedAt":"2018-10-11T01:27:03","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10116","RelatedDescription":"Merged pull request \"Typos\" (#10116) at dotnet/cli","RelatedBody":""},{"Id":"8401507733","Type":"PullRequestEvent","CreatedAt":"2018-10-11T01:26:16","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10141","RelatedDescription":"Merged pull request \"Updating branding to 2.2.200\" (#10141) at dotnet/cli","RelatedBody":""},{"Id":"8400470280","Type":"PullRequestEvent","CreatedAt":"2018-10-10T20:50:28","Actor":"dsplaisted","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10158","RelatedDescription":"Opened pull request \"Merge 2.2.1xx to master\" (#10158) at dotnet/cli","RelatedBody":""},{"Id":"8400200600","Type":"IssuesEvent","CreatedAt":"2018-10-10T20:02:30","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10157","RelatedDescription":"Opened issue \"Visual Studio installer communicates the install folder to the SDK MSI\" (#10157) at dotnet/cli","RelatedBody":"Parent issue: https://github.com/dotnet/cli/issues/10100\r\nRelated: https://github.com/dotnet/core-setup/issues/4641\r\n__________________\r\nVisual Studio needs to communicate the user's choice of installation locations to the SDK installer\r\nIntroduce a new parameter for the SDK installer indicating installation location\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"8400196096","Type":"IssuesEvent","CreatedAt":"2018-10-10T20:02:00","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10156","RelatedDescription":"Opened issue \"Dynamic SDK install folder\" (#10156) at dotnet/cli","RelatedBody":"Parent issue: https://github.com/dotnet/cli/issues/10100\r\nRelated: https://github.com/dotnet/core-setup/issues/4640\r\n________________\r\nWith a stand-alone SDK install from MSI, give the user a active textbox displaying the default installation location\r\nThe default installation location will be:\r\n1. the registry value for 'well known location'\r\n2. \"C:\\Program Files\" if the registry value for 'well known location' is null or key is missing\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"8400191031","Type":"IssuesEvent","CreatedAt":"2018-10-10T20:01:05","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10155","RelatedDescription":"Opened issue \"SDK Install Procedure [Windows/MAC]\" (#10155) at dotnet/cli","RelatedBody":"Parent issue: https://github.com/dotnet/cli/issues/10100\r\nRelated: https://github.com/dotnet/core-setup/issues/4639\r\n______________________\r\nif installation location populated & valid\r\n   install @ installation location\r\n   create or overwrite the registry\r\nif installation location not populated\r\n   query the registry for the last well known location\r\n   if registry has a value\r\n       install @ registry’s location\r\n   if registry does not have a value\r\n       install 'c:\\program files' [default well known location]\r\nif installation location invalid\r\n   throw exception & halt\r\n   \r\nNotes:\r\nI think we should just be careful that the MSI will have, as it’s default install location, whatever we used in the previous install. \r\nOr default (program files, et al) if there isn’t a previous install.\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"8400185474","Type":"IssuesEvent","CreatedAt":"2018-10-10T20:00:04","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10154","RelatedDescription":"Opened issue \"SDK Uninstall Procedure [Windows/MAC] \" (#10154) at dotnet/cli","RelatedBody":"Parent issue: https://github.com/dotnet/cli/issues/10100\r\nRelated: https://github.com/dotnet/core-setup/issues/4638\r\n__________________________\r\n_Open questions:_\r\nDoes the registry’s well known location value get removed upon an uninstall?\r\nDo we use a ref count here?\r\nDo we store the previous well known location value?\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"8400167655","Type":"IssuesEvent","CreatedAt":"2018-10-10T19:56:45","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10153","RelatedDescription":"Opened issue \"SDK dynamic multilevel lookup - muxer\" (#10153) at dotnet/cli","RelatedBody":"Parent issue: https://github.com/dotnet/cli/issues/10100\r\nRelated: https://github.com/dotnet/core-setup/issues/4636\r\n____________________\r\nSDK look-up task\r\n\r\nFor multi-level lookup:\r\nMuxer will query the agreed upon registry location for the well known install location\r\n\r\n   if registry has a value\r\n       include the well known install location in the search\r\n   if registry key does not exist\r\n       include 'c:\\program files' in the search\r\n   if registry does not have a value\r\n       Option 1: include 'c:\\program files' in the search\r\n       Option 2: do not add anything to the search*\r\n           *can we assume this?\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8400526265","Type":"PullRequestEvent","CreatedAt":"2018-10-10T21:00:29","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/883","RelatedDescription":"Merged pull request \"Spelling/typos. #Hacktoberfest\" (#883) at dotnet/standard","RelatedBody":"Going for that cool t-shirt.\r\n\r\nHere's some typos/spelling errors I found.\r\n\r\nHappy #Hacktoberfest :smiley_cat: :fearful: :skull_and_crossbones: \r\n\r\n:car: :blue_car: ***[\"Let the good times roll...\"](https://www.youtube.com/watch?v=7BDBzgHXf64)***"},{"Id":"8396069169","Type":"IssuesEvent","CreatedAt":"2018-10-10T08:40:40","Actor":"wokwokwok1","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/895","RelatedDescription":"Opened issue \"Minimal repro: unable to upgrade solution to 4.7.2\" (#895) at dotnet/standard","RelatedBody":"This relates to #481 \r\n\r\nHere is a minimal example that run successfully on .Net 4.6, and fails to run after upgrading to .Net 4.7.2 \r\nhttps://github.com/wokwokwok1/dotnet-46-project-upgrade-repro\r\n\r\nYou can view the various steps taken and the snapshot of the broken project as various phases through-out the upgrade attempt:\r\n\r\n### Re-targeting to 4.7.2\r\n\r\nproject snapshot:\r\nhttps://github.com/wokwokwok1/dotnet-46-project-upgrade-repro/tree/net472_001_retarget\r\n\r\ndetail: \r\nhttps://raw.githubusercontent.com/wokwokwok1/dotnet-46-project-upgrade-repro/net472_001_retarget/DemoApp/README.md\r\n\r\nsummary: \r\n\r\nThis does not work.\r\n\r\n    Compiler Error Message: CS0012: The type 'System.Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Runtime, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\n\r\n### upgrading to package reference, as suggested in #481 \r\n\r\nproject snapshot:\r\nhttps://github.com/wokwokwok1/dotnet-46-project-upgrade-repro/tree/net472_002_migratePackages\r\n\r\ndetail: \r\nhttps://raw.githubusercontent.com/wokwokwok1/dotnet-46-project-upgrade-repro/net472_002_migratePackages/DemoApp/README.md\r\n\r\nsummary: \r\n\r\nThis does not work.\r\n\r\n    Compiler Error Message: CS0012: The type 'System.Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Runtime, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\n\r\n### attempting to manually pin dependency versions\r\n\r\nproject snapshot:\r\nhttps://github.com/wokwokwok1/dotnet-46-project-upgrade-repro/tree/net472_003_manualDependencyResolution\r\n\r\ndetail: \r\nhttps://raw.githubusercontent.com/wokwokwok1/dotnet-46-project-upgrade-repro/net472_003_manualDependencyResolution/DemoApp/README.md\r\n\r\nsummary: \r\n\r\nThis does not work, but a new error is seen.\r\n\r\n    Exception Details: System.IO.FileNotFoundException: Could not load file or assembly 'System.Runtime, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\n\r\n### upgrading the project dependencies and applying 'magic' web.config fix\r\n\r\nproject snapshot:\r\nhttps://github.com/wokwokwok1/dotnet-46-project-upgrade-repro/tree/net472_004_upgradeEverything\r\n\r\ndetail: \r\nhttps://raw.githubusercontent.com/wokwokwok1/dotnet-46-project-upgrade-repro/net472_004_upgradeEverything/DemoApp/README.md\r\n\r\nsummary: \r\n\r\nThis resolved the issue and application now functions correctly.\r\n\r\nThe key to resolving this issue is from #542, where it was suggested to add assembly references directly to the web.config, like this:\r\n\r\n     <system.web>\r\n      <compilation debug=\"true\" targetFramework=\"4.7.2\">\r\n        <assemblies>\r\n          <add assembly=\"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\"/>\r\n        </assemblies>\r\n      </compilation>\r\n      <httpRuntime targetFramework=\"4.7.2\"/>\r\n      <httpModules/>\r\n    </system.web>\r\n\r\nHowever, this was only a partial fix, and the complete fix required the addition of `System.Runtime` as well, like this:\r\n\r\n    <system.web>\r\n      <compilation debug=\"true\" targetFramework=\"4.7.2\">\r\n        <assemblies>\r\n          <add assembly=\"netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51\"/>\r\n          <add assembly=\"System.Runtime, Version=4.0.20.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\"/>\r\n        </assemblies>\r\n      </compilation>\r\n      <httpRuntime targetFramework=\"4.7.2\"/>\r\n      <httpModules/>\r\n    </system.web>\r\n\r\nThis appears to full resolve the issue.\r\n\r\nHowever, it is unclear why this is required, and is simply a random guess that putting the dependency here will resolve the issue.\r\n\r\nI leave this repro here, because I believe this is a bug."},{"Id":"8390286607","Type":"PullRequestEvent","CreatedAt":"2018-10-09T12:12:23","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/894","RelatedDescription":"Merged pull request \"[Darc-Update] Update dependencies from build 20181007.1 of https://github.com/dotnet/arcade\" (#894) at dotnet/standard","RelatedBody":"This change updates the dependencies from https://github.com/dotnet/arcade to the following\n\n- Microsoft.AspNetCore.ApiVersioning - 1.0.0-beta.18507.1\n- symbols/Microsoft.AspNetCore.ApiVersioning.Swashbuckle.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.DotNet.ApiCompat.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.DotNet.Arcade.Sdk.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.DotNet.Build.Tasks.Feed.2.2.0-beta.18507.1.symbols.nupkg - 2.2.0-beta.18507.1\n- symbols/Microsoft.DotNet.Darc.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.DotNet.DarcLib.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.DotNet.Deployment.Tasks.Links.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.DotNet.GenAPI.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.DotNet.GenFacades.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.DotNet.Helix.Client.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.DotNet.Helix.JobSender.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.DotNet.Helix.Sdk.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.DotNet.Maestro.Client.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.DotNet.Maestro.Tasks.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.DotNet.SignTool.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.AspNetCore.ApiVersioning.Analyzers.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- symbols/Microsoft.DotNet.XUnitExtensions.2.4.0-beta.18507.1.symbols.nupkg - 2.4.0-beta.18507.1\n- symbols/Microsoft.AspNetCore.ApiVersioning.1.0.0-beta.18507.1.symbols.nupkg - 1.0.0-beta.18507.1\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18507.1\n- Microsoft.AspNetCore.ApiVersioning.Analyzers - 1.0.0-beta.18507.1\n- Microsoft.AspNetCore.ApiVersioning.Swashbuckle - 1.0.0-beta.18507.1\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18507.1\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18507.1\n- Microsoft.DotNet.Build.Tasks.Feed - 2.2.0-beta.18507.1\n- Microsoft.DotNet.Darc - 1.0.0-beta.18507.1\n- Microsoft.DotNet.DarcLib - 1.0.0-beta.18507.1\n- Microsoft.DotNet.Deployment.Tasks.Links - 1.0.0-beta.18507.1\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18507.1\n- Microsoft.DotNet.GenFacades - 1.0.0-beta.18507.1\n- Microsoft.DotNet.Helix.Client - 1.0.0-beta.18507.1\n- Microsoft.DotNet.Helix.JobSender - 1.0.0-beta.18507.1\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18507.1\n- Microsoft.DotNet.Maestro.Client - 1.0.0-beta.18507.1\n- Microsoft.DotNet.Maestro.Tasks - 1.0.0-beta.18507.1\n- Microsoft.DotNet.XUnitExtensions - 2.4.0-beta.18507.1"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8402154208","Type":"IssuesEvent","CreatedAt":"2018-10-11T05:09:55","Actor":"sandersaares","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/32757","RelatedDescription":"Opened issue \".NET 4.7.1 app experiences unexpected \"Could not load file or assembly 'System.Runtime, Version=4.1.2.0\"\" (#32757) at dotnet/corefx","RelatedBody":"1. Create a new .NET Framework 4.7.1 console app project.\r\n1. Install BenchmarkDotNet NuGet package with DependencyBehavior=Highest.\r\n1. Paste the following code into Program.cs and excute the app as Release build.\r\n\r\n```cs\r\nusing BenchmarkDotNet.Attributes;\r\nusing BenchmarkDotNet.Running;\r\n\r\nnamespace ConsoleApp3\r\n{\r\n    internal class Program\r\n    {\r\n        private static void Main(string[] args)\r\n        {\r\n            BenchmarkRunner.Run<Foo>();\r\n        }\r\n    }\r\n\r\n    [ClrJob]\r\n    public class Foo\r\n    {\r\n        [Benchmark]\r\n        public void Bar()\r\n        {\r\n\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nExpected result: app executes and does some no-op benchmarks.\r\n\r\nActual result:\r\n\r\n```\r\n// Validating benchmarks:\r\n// ***** BenchmarkRunner: Start   *****\r\n// ***** Building 1 exe(s) in Parallel: Start   *****\r\n// ***** Done, took 00:00:00 (0.13 sec)   *****\r\n// Found benchmarks:\r\n//   Foo.Bar: Clr(Runtime=Clr)\r\n\r\n// Build Exception: Could not load file or assembly 'System.Runtime, Version=4.1.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\n```\r\n\r\nPackages.config contains this:\r\n\r\n```xml\r\n<package id=\"System.Runtime\" version=\"4.3.0\" targetFramework=\"net471\" />\r\n```\r\n\r\nApp.config contains this:\r\n\r\n```xml\r\n<dependentAssembly>\r\n        <assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-4.1.2.0\" newVersion=\"4.1.2.0\" />\r\n      </dependentAssembly>\r\n```\r\n\r\nInspecting what is happening with a debugger indicates that the exception occurs in the cctor of the Builder class:\r\n\r\n```text\r\nUnhandled Exception: System.TypeInitializationException: The type initializer for 'BenchmarkDotNet.Toolchains.Roslyn.RoslynToolchain' threw an exception. ---> System.TypeInitializationException: The type initializer for 'BenchmarkDotNet.Toolchains.Roslyn.Builder' threw an exception. ---> System.IO.FileNotFoundException: Could not load file or assembly 'System.Runtime, Version=4.1.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified. ---> System.IO.FileNotFoundException: Could not load file or assembly 'System.Runtime, Version=4.0.20.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\n   --- End of inner exception stack trace ---\r\n   at BenchmarkDotNet.Toolchains.Roslyn.Builder..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at BenchmarkDotNet.Toolchains.Roslyn.Builder..ctor()\r\n   at BenchmarkDotNet.Toolchains.Roslyn.RoslynToolchain..ctor()\r\n   at BenchmarkDotNet.Toolchains.Roslyn.RoslynToolchain..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at BenchmarkDotNet.Toolchains.ToolchainExtensions.GetToolchain(Runtime runtime)\r\n...\r\n```\r\n\r\n[binlog.zip](https://github.com/dotnet/corefx/files/2467419/binlog.zip)\r\n\r\nI attach a solution that contains both a repro app (ConsoleApp1) and the BenchmarkDotNet package source, to allow easy inspection of a debug build: \r\n[BenchmarkDotNet.zip](https://github.com/dotnet/corefx/files/2467429/BenchmarkDotNet.zip)\r\n\r\nPrevious discussion with BenchmarkDotNet maintainers at: https://github.com/dotnet/BenchmarkDotNet/issues/896"},{"Id":"8401531003","Type":"IssuesEvent","CreatedAt":"2018-10-11T01:34:10","Actor":"jhfbosman","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/32756","RelatedDescription":"Opened issue \"System.IO.Path.Join missing in classlib targeting netstandard2.0\" (#32756) at dotnet/corefx","RelatedBody":"I'm not sure if this is intentional, an omission or if I'm simply doing something wrong, but for some reason I cannot use **System.IO.Path.Join** in a basic class library...\r\n\r\n## Steps to reproduce:\r\n\r\n1. Create new classlib using ```dotnet new classlib -n dt.playground.path.lib```\r\n2. Add the following code into the generated Class1.cs\r\n```cs\r\npublic class Class1\r\n{\r\n  public string sayHi(string name)\r\n  {\r\n    return System.IO.Path.Join(\"Join\", \"Lib\", name);\r\n  }\r\n}\r\n```\r\n\r\n## Result:\r\n\r\nThe classlib fails to build with the error message ```Class1.cs(5,27): error CS0117: 'Path' does not contain a definition for 'Join'```\r\n\r\n## Extra info:\r\n\r\n**System.IO.Path.Join** works as expected in both the webapi and console projects targeting *netcoreapp2.1*.\r\n**System.IO.Path.Combine** works as expected for both targets\r\n\r\nThe generated .csproj file for the classlib:\r\n```csproj\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\n## Dotnet info:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.1.403/\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  2.1.403 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.5 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.5 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n```\r\n\r\nIf someone could just let me know what the status of **System.IO.Path.Join** is in netstandard2.0?\r\nI'm perfectly happy using **System.IO.Path.Combine** for now as there's not too much of a tradeoff..."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"8401871031","Type":"PullRequestEvent","CreatedAt":"2018-10-11T03:25:22","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30448","RelatedDescription":"Opened pull request \"Merge features/ranges-v2 to features/async streams\" (#30448) at dotnet/roslyn","RelatedBody":""},{"Id":"8401868163","Type":"PullRequestEvent","CreatedAt":"2018-10-11T03:24:24","Actor":"edwinfrc","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30447","RelatedDescription":"Closed pull request \"Consolidate go to def\" (#30447) at dotnet/roslyn","RelatedBody":""},{"Id":"8401867718","Type":"PullRequestEvent","CreatedAt":"2018-10-11T03:24:14","Actor":"edwinfrc","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30447","RelatedDescription":"Opened pull request \"Consolidate go to def\" (#30447) at dotnet/roslyn","RelatedBody":""},{"Id":"8401865868","Type":"PullRequestEvent","CreatedAt":"2018-10-11T03:23:35","Actor":"edwinfrc","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30446","RelatedDescription":"Closed pull request \"Bugfix/update composition package\" (#30446) at dotnet/roslyn","RelatedBody":""},{"Id":"8401865512","Type":"PullRequestEvent","CreatedAt":"2018-10-11T03:23:27","Actor":"edwinfrc","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30446","RelatedDescription":"Opened pull request \"Bugfix/update composition package\" (#30446) at dotnet/roslyn","RelatedBody":""},{"Id":"8401862104","Type":"PullRequestEvent","CreatedAt":"2018-10-11T03:22:16","Actor":"edwinfrc","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30445","RelatedDescription":"Closed pull request \"Ns20\" (#30445) at dotnet/roslyn","RelatedBody":""},{"Id":"8401861477","Type":"PullRequestEvent","CreatedAt":"2018-10-11T03:22:04","Actor":"edwinfrc","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30445","RelatedDescription":"Opened pull request \"Ns20\" (#30445) at dotnet/roslyn","RelatedBody":""},{"Id":"8401860132","Type":"PullRequestEvent","CreatedAt":"2018-10-11T03:21:37","Actor":"edwinfrc","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30444","RelatedDescription":"Closed pull request \"Refactor tools options\" (#30444) at dotnet/roslyn","RelatedBody":""},{"Id":"8401859687","Type":"PullRequestEvent","CreatedAt":"2018-10-11T03:21:28","Actor":"edwinfrc","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30444","RelatedDescription":"Opened pull request \"Refactor tools options\" (#30444) at dotnet/roslyn","RelatedBody":""},{"Id":"8401858232","Type":"PullRequestEvent","CreatedAt":"2018-10-11T03:21:00","Actor":"edwinfrc","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30443","RelatedDescription":"Closed pull request \"Dsr dependency\" (#30443) at dotnet/roslyn","RelatedBody":""},{"Id":"8401857528","Type":"PullRequestEvent","CreatedAt":"2018-10-11T03:20:49","Actor":"edwinfrc","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30443","RelatedDescription":"Opened pull request \"Dsr dependency\" (#30443) at dotnet/roslyn","RelatedBody":""},{"Id":"8401733503","Type":"PullRequestEvent","CreatedAt":"2018-10-11T02:41:30","Actor":"agocke","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30442","RelatedDescription":"Opened pull request \"Merge range to dev16.0.x\" (#30442) at dotnet/roslyn","RelatedBody":""},{"Id":"8401722862","Type":"PullRequestEvent","CreatedAt":"2018-10-11T02:38:07","Actor":"agocke","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30413","RelatedDescription":"Merged pull request \"Bring ranges up to date\" (#30413) at dotnet/roslyn","RelatedBody":"Merge from dev16.0.x to features/ranges-v2"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8401478161","Type":"PullRequestEvent","CreatedAt":"2018-10-11T01:16:13","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6441","RelatedDescription":"Opened pull request \"Delete RuntimeImplementedCustomAttributeData class\" (#6441) at dotnet/corert","RelatedBody":"This is a middle man class that was supposed to make access to `AttributeType` more efficient for `CustomAttributeData` descendants deriving from it. After #6288 this should no longer be necessary."},{"Id":"8399854032","Type":"IssuesEvent","CreatedAt":"2018-10-10T18:58:50","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6440","RelatedDescription":"Closed issue \"Can't use Portable.BouncyCastle NuGet package\" (#6440) at dotnet/corert","RelatedBody":"I'm trying to build a .NET Core 2.1 application that uses the [Portable.BouncyCastle](https://www.nuget.org/packages/Portable.BouncyCastle) package.\r\n\r\nThe app builds OK but when I run it I get this output:\r\n\r\n```\r\nUnhandled Exception: Org.BouncyCastle.Security.Certificates.CertificateException: Failed to read certificate ---> System.TypeInitializationException: A type initializer threw an exception. To determine which type, inspect the InnerException's StackTrace property. ---> System.TypeInitializationException: A type initializer threw an exception. To determine which type, inspect the InnerException's StackTrace property. ---> System.Reflection.MissingMetadataException: 'Org.BouncyCastle.Security.DigestUtilities.DigestAlgorithm[]' is missing metadata. For more information, please visit http://go.microsoft.com/fwlink/?LinkID=392859\r\n   at SecretSquirrel!<BaseAddress>+0x6c0089\r\n   at SecretSquirrel!<BaseAddress>+0xa90746\r\n   at SecretSquirrel!<BaseAddress>+0x16eb6fe\r\n   at SecretSquirrel!<BaseAddress>+0x6be504\r\n   at SecretSquirrel!<BaseAddress>+0x6bdc38\r\n   at SecretSquirrel!<BaseAddress>+0x962ff0\r\n   at SecretSquirrel!<BaseAddress>+0x63dda8\r\n   at SecretSquirrel!<BaseAddress>+0x7b6c58\r\n   at SecretSquirrel!<BaseAddress>+0x7b5276\r\n   at System.Array.CreateInstance(Type, Int32) + 0x4f\r\n   at System.Enum.GetValues(Type) + 0x19a\r\n   at Org.BouncyCastle.Utilities.Enums.GetEnumValues(Type) + 0x5e\r\n   at Org.BouncyCastle.Utilities.Enums.GetArbitraryValue(Type) + 0x2b\r\n   at SecretSquirrel!<BaseAddress>+0x9e318c\r\n   at SecretSquirrel!<BaseAddress>+0x162cc8a\r\n   at SecretSquirrel!<BaseAddress>+0x162c4f9\r\n\r\n   --- End of inner exception stack trace ---\r\n   at SecretSquirrel!<BaseAddress>+0x162c5e5\r\n   at SecretSquirrel!<BaseAddress>+0x162c292\r\n   at Org.BouncyCastle.Security.DigestUtilities.GetDigest(String) + 0x30\r\n   at Org.BouncyCastle.Security.SecureRandom.CreatePrng(String, Boolean) + 0x31\r\n   at Org.BouncyCastle.Security.SecureRandom..ctor() + 0x30\r\n   at SecretSquirrel!<BaseAddress>+0xa99b12\r\n   at SecretSquirrel!<BaseAddress>+0x162cc8a\r\n   at SecretSquirrel!<BaseAddress>+0x162c4f9\r\n\r\n   --- End of inner exception stack trace ---\r\n   at SecretSquirrel!<BaseAddress>+0x162c5e5\r\n   at SecretSquirrel!<BaseAddress>+0x162c292\r\n   at Org.BouncyCastle.Math.BigInteger..ctor(Byte[]) + 0x16\r\n   at Org.BouncyCastle.Asn1.DerInteger.get_Value() + 0x2d\r\n   at Org.BouncyCastle.Asn1.X509.TbsCertificateStructure..ctor(Asn1Sequence) + 0x132\r\n   at Org.BouncyCastle.Asn1.X509.TbsCertificateStructure.GetInstance(Object) + 0x5f\r\n   at Org.BouncyCastle.Asn1.X509.X509CertificateStructure..ctor(Asn1Sequence) + 0xb8\r\n   at Org.BouncyCastle.Asn1.X509.X509CertificateStructure.GetInstance(Object) + 0x67\r\n   at Org.BouncyCastle.X509.X509CertificateParser.ReadPemCertificate(Stream) + 0x66\r\n   at Org.BouncyCastle.X509.X509CertificateParser.ReadCertificate(Stream) + 0x220\r\n   at SecretSquirrel!<BaseAddress>+0x162c4ef\r\n   at SecretSquirrel!<BaseAddress>+0x162c292\r\n   at Org.BouncyCastle.Math.BigInteger..ctor(Byte[]) + 0x16\r\n   at Org.BouncyCastle.Asn1.DerInteger.get_Value() + 0x2d\r\n   at Org.BouncyCastle.Asn1.X509.TbsCertificateStructure..ctor(Asn1Sequence) + 0x132\r\n   at Org.BouncyCastle.Asn1.X509.TbsCertificateStructure.GetInstance(Object) + 0x5f\r\n   at Org.BouncyCastle.Asn1.X509.X509CertificateStructure..ctor(Asn1Sequence) + 0xb8\r\n   at Org.BouncyCastle.Asn1.X509.X509CertificateStructure.GetInstance(Object) + 0x67\r\n   at Org.BouncyCastle.X509.X509CertificateParser.ReadPemCertificate(Stream) + 0x66\r\n   at Org.BouncyCastle.X509.X509CertificateParser.ReadCertificate(Stream) + 0x220\r\n\r\n   --- End of inner exception stack trace ---\r\n   at Org.BouncyCastle.X509.X509CertificateParser.ReadCertificate(Stream) + 0x2b5\r\n   at k8s.CertUtils.GeneratePfx(KubernetesClientConfiguration) + 0x248\r\n   at k8s.Kubernetes.SetCredentials(KubernetesClientConfiguration, HttpClientHandler) + 0x235\r\n   at k8s.Kubernetes..ctor(KubernetesClientConfiguration, DelegatingHandler[]) + 0x2e8\r\n   at SecretSquirrel.ViewModels.MainWindowViewModel.<LoadSecrets>d__5.MoveNext() + 0x161\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() + 0x31\r\n   at SecretSquirrel!<BaseAddress>+0x16303d1\r\n   at SecretSquirrel!<BaseAddress>+0x16302ec\r\n   at SecretSquirrel!<BaseAddress>+0x1630259\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult() + 0x19\r\n   at SecretSquirrel.ViewModels.MainWindowViewModel.<OnPropertyChanged>d__4.MoveNext() + 0x182\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() + 0x31\r\n   at SecretSquirrel!<BaseAddress>+0x168f02c\r\n   at Avalonia.Threading.AvaloniaSynchronizationContext.<>c__DisplayClass5_0.<Post>b__0() + 0x36\r\n   at Avalonia.Threading.JobRunner.RunJobs(Nullable`1) + 0xc8\r\n   at Avalonia.Win32.Win32Platform.WndProc(IntPtr, UInt32, IntPtr, IntPtr) + 0xb2\r\n   at SecretSquirrel!<BaseAddress>+0x1aca951\r\n```\r\n\r\nSo it looks like it's choking on the this line: \r\nhttps://github.com/bcgit/bc-csharp/blob/f18a2dbbc2c1b4277e24a2e51f09cac02eedf1f5/crypto/src/util/Enums.cs#L62\r\n\r\nwhich is called from this line:\r\nhttps://github.com/bcgit/bc-csharp/blob/f18a2dbbc2c1b4277e24a2e51f09cac02eedf1f5/crypto/src/security/DigestUtilities.cs#L54\r\n\r\nMy `rd.xml` file has this entry for the assembly:\r\n\r\n```xml\r\n<Assembly Name=\"BouncyCastle.Crypto\" Dynamic=\"Required All\" />\r\n```\r\n\r\nUsing .NET Core SDK 2.1.403 and `Microsoft.DotNet.ILCompiler` version `1.0.0-alpha-*` from MyGet.\r\n\r\nHere's my project: https://github.com/RendleLabs/SecretSquirrel"},{"Id":"8399840777","Type":"IssuesEvent","CreatedAt":"2018-10-10T18:56:33","Actor":"markrendle","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/6440","RelatedDescription":"Opened issue \"Can't use Portable.BouncyCastle NuGet package\" (#6440) at dotnet/corert","RelatedBody":"I'm trying to build a .NET Core 2.1 application that uses the [Portable.BouncyCastle](https://www.nuget.org/packages/Portable.BouncyCastle) package.\r\n\r\nThe app builds OK but when I run it I get this output:\r\n\r\n```\r\nUnhandled Exception: Org.BouncyCastle.Security.Certificates.CertificateException: Failed to read certificate ---> System.TypeInitializationException: A type initializer threw an exception. To determine which type, inspect the InnerException's StackTrace property. ---> System.TypeInitializationException: A type initializer threw an exception. To determine which type, inspect the InnerException's StackTrace property. ---> System.Reflection.MissingMetadataException: 'Org.BouncyCastle.Security.DigestUtilities.DigestAlgorithm[]' is missing metadata. For more information, please visit http://go.microsoft.com/fwlink/?LinkID=392859\r\n   at SecretSquirrel!<BaseAddress>+0x6c0089\r\n   at SecretSquirrel!<BaseAddress>+0xa90746\r\n   at SecretSquirrel!<BaseAddress>+0x16eb6fe\r\n   at SecretSquirrel!<BaseAddress>+0x6be504\r\n   at SecretSquirrel!<BaseAddress>+0x6bdc38\r\n   at SecretSquirrel!<BaseAddress>+0x962ff0\r\n   at SecretSquirrel!<BaseAddress>+0x63dda8\r\n   at SecretSquirrel!<BaseAddress>+0x7b6c58\r\n   at SecretSquirrel!<BaseAddress>+0x7b5276\r\n   at System.Array.CreateInstance(Type, Int32) + 0x4f\r\n   at System.Enum.GetValues(Type) + 0x19a\r\n   at Org.BouncyCastle.Utilities.Enums.GetEnumValues(Type) + 0x5e\r\n   at Org.BouncyCastle.Utilities.Enums.GetArbitraryValue(Type) + 0x2b\r\n   at SecretSquirrel!<BaseAddress>+0x9e318c\r\n   at SecretSquirrel!<BaseAddress>+0x162cc8a\r\n   at SecretSquirrel!<BaseAddress>+0x162c4f9\r\n\r\n   --- End of inner exception stack trace ---\r\n   at SecretSquirrel!<BaseAddress>+0x162c5e5\r\n   at SecretSquirrel!<BaseAddress>+0x162c292\r\n   at Org.BouncyCastle.Security.DigestUtilities.GetDigest(String) + 0x30\r\n   at Org.BouncyCastle.Security.SecureRandom.CreatePrng(String, Boolean) + 0x31\r\n   at Org.BouncyCastle.Security.SecureRandom..ctor() + 0x30\r\n   at SecretSquirrel!<BaseAddress>+0xa99b12\r\n   at SecretSquirrel!<BaseAddress>+0x162cc8a\r\n   at SecretSquirrel!<BaseAddress>+0x162c4f9\r\n\r\n   --- End of inner exception stack trace ---\r\n   at SecretSquirrel!<BaseAddress>+0x162c5e5\r\n   at SecretSquirrel!<BaseAddress>+0x162c292\r\n   at Org.BouncyCastle.Math.BigInteger..ctor(Byte[]) + 0x16\r\n   at Org.BouncyCastle.Asn1.DerInteger.get_Value() + 0x2d\r\n   at Org.BouncyCastle.Asn1.X509.TbsCertificateStructure..ctor(Asn1Sequence) + 0x132\r\n   at Org.BouncyCastle.Asn1.X509.TbsCertificateStructure.GetInstance(Object) + 0x5f\r\n   at Org.BouncyCastle.Asn1.X509.X509CertificateStructure..ctor(Asn1Sequence) + 0xb8\r\n   at Org.BouncyCastle.Asn1.X509.X509CertificateStructure.GetInstance(Object) + 0x67\r\n   at Org.BouncyCastle.X509.X509CertificateParser.ReadPemCertificate(Stream) + 0x66\r\n   at Org.BouncyCastle.X509.X509CertificateParser.ReadCertificate(Stream) + 0x220\r\n   at SecretSquirrel!<BaseAddress>+0x162c4ef\r\n   at SecretSquirrel!<BaseAddress>+0x162c292\r\n   at Org.BouncyCastle.Math.BigInteger..ctor(Byte[]) + 0x16\r\n   at Org.BouncyCastle.Asn1.DerInteger.get_Value() + 0x2d\r\n   at Org.BouncyCastle.Asn1.X509.TbsCertificateStructure..ctor(Asn1Sequence) + 0x132\r\n   at Org.BouncyCastle.Asn1.X509.TbsCertificateStructure.GetInstance(Object) + 0x5f\r\n   at Org.BouncyCastle.Asn1.X509.X509CertificateStructure..ctor(Asn1Sequence) + 0xb8\r\n   at Org.BouncyCastle.Asn1.X509.X509CertificateStructure.GetInstance(Object) + 0x67\r\n   at Org.BouncyCastle.X509.X509CertificateParser.ReadPemCertificate(Stream) + 0x66\r\n   at Org.BouncyCastle.X509.X509CertificateParser.ReadCertificate(Stream) + 0x220\r\n\r\n   --- End of inner exception stack trace ---\r\n   at Org.BouncyCastle.X509.X509CertificateParser.ReadCertificate(Stream) + 0x2b5\r\n   at k8s.CertUtils.GeneratePfx(KubernetesClientConfiguration) + 0x248\r\n   at k8s.Kubernetes.SetCredentials(KubernetesClientConfiguration, HttpClientHandler) + 0x235\r\n   at k8s.Kubernetes..ctor(KubernetesClientConfiguration, DelegatingHandler[]) + 0x2e8\r\n   at SecretSquirrel.ViewModels.MainWindowViewModel.<LoadSecrets>d__5.MoveNext() + 0x161\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() + 0x31\r\n   at SecretSquirrel!<BaseAddress>+0x16303d1\r\n   at SecretSquirrel!<BaseAddress>+0x16302ec\r\n   at SecretSquirrel!<BaseAddress>+0x1630259\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult() + 0x19\r\n   at SecretSquirrel.ViewModels.MainWindowViewModel.<OnPropertyChanged>d__4.MoveNext() + 0x182\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() + 0x31\r\n   at SecretSquirrel!<BaseAddress>+0x168f02c\r\n   at Avalonia.Threading.AvaloniaSynchronizationContext.<>c__DisplayClass5_0.<Post>b__0() + 0x36\r\n   at Avalonia.Threading.JobRunner.RunJobs(Nullable`1) + 0xc8\r\n   at Avalonia.Win32.Win32Platform.WndProc(IntPtr, UInt32, IntPtr, IntPtr) + 0xb2\r\n   at SecretSquirrel!<BaseAddress>+0x1aca951\r\n```\r\n\r\nSo it looks like it's choking on the this line: \r\nhttps://github.com/bcgit/bc-csharp/blob/f18a2dbbc2c1b4277e24a2e51f09cac02eedf1f5/crypto/src/util/Enums.cs#L62\r\n\r\nwhich is called from this line:\r\nhttps://github.com/bcgit/bc-csharp/blob/f18a2dbbc2c1b4277e24a2e51f09cac02eedf1f5/crypto/src/security/DigestUtilities.cs#L54\r\n\r\nMy `rd.xml` file has this entry for the assembly:\r\n\r\n```xml\r\n<Assembly Name=\"BouncyCastle.Crypto\" Dynamic=\"Required All\" />\r\n```\r\n\r\nUsing .NET Core SDK 2.1.403 and `Microsoft.DotNet.ILCompiler` version `1.0.0-alpha-*` from MyGet."},{"Id":"8399695602","Type":"PullRequestEvent","CreatedAt":"2018-10-10T18:31:24","Actor":"nattress","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6427","RelatedDescription":"Merged pull request \"Compile CoreCLR framework assemblies\" (#6427) at dotnet/corert","RelatedBody":"Add /r2rframework switch to runtest.cmd which runs the CPAOT compiler in\r\nready-to-run mode against the managed framework assemblies in CoreCLR.\r\n\r\nI made a couple small bug fixes to unblock compilation of 30 framework\r\nassemblies with code in them. There are also many small facade\r\nassemblies with no code that we put a ready-to-run header in but don't\r\ndo anything interesting. Overall, currently, we produce ready-to-run\r\nimages for 84 / 214 assemblies.\r\n\r\nThe produced images are placed in bin\\obj\\<build>\\CoreClrRuntime\\native.\r\nThis folder also includes the .rsp file to compile specific assemblies\r\nagain for investigation."},{"Id":"8399202752","Type":"PullRequestEvent","CreatedAt":"2018-10-10T17:05:56","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6439","RelatedDescription":"Merged pull request \"Merge master to nmirror\" (#6439) at dotnet/corert","RelatedBody":""},{"Id":"8399201862","Type":"PullRequestEvent","CreatedAt":"2018-10-10T17:05:46","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6439","RelatedDescription":"Opened pull request \"Merge master to nmirror\" (#6439) at dotnet/corert","RelatedBody":""},{"Id":"8399018545","Type":"PullRequestEvent","CreatedAt":"2018-10-10T16:33:58","Actor":"dotnet-maestro-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6438","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#6438) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"8395909588","Type":"PullRequestEvent","CreatedAt":"2018-10-10T08:11:49","Actor":"MarcoRossignoli","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/6409","RelatedDescription":"Closed pull request \"[WIP][QUESTIONS][ILVerify]Report \"Class implements interface but not method\"\" (#6409) at dotnet/corert","RelatedBody":"Experiment issue 6203\r\nI'm working on this issue and i've got some questions.\r\n\r\n/cc @jkotas @MichalStrehovsky"},{"Id":"8394368831","Type":"IssuesEvent","CreatedAt":"2018-10-10T00:16:49","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/6437","RelatedDescription":"Opened issue \"Consider generating R2R interop stubs\" (#6437) at dotnet/corert","RelatedBody":"About 1/3 of WinForms startup time (when everything is R2R) is JITing and most of that is interop stubs. Given that ILC is able to generate interop IL for many cases, consider enabling stub generation where possible. This might require a stable API for R2R P/Invoke transitions."},{"Id":"8394262628","Type":"PullRequestEvent","CreatedAt":"2018-10-09T23:42:08","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6435","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#6435) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"8402029118","Type":"PullRequestEvent","CreatedAt":"2018-10-11T04:21:27","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2576","RelatedDescription":"Merged pull request \"Enabling publishing logs and test results for CI as well as for official builds.\" (#2576) at dotnet/sdk","RelatedBody":"Enabling publishing logs and test results for CI as well as for official builds."},{"Id":"8401370350","Type":"PullRequestEvent","CreatedAt":"2018-10-11T00:38:31","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2577","RelatedDescription":"Merged pull request \"Change in performance tests' working-directory\" (#2577) at dotnet/sdk","RelatedBody":"Performance tests 'working directory' has changed - 'perf.groovy' needs to change.\r\n\r\n@jorive "},{"Id":"8401034994","Type":"PullRequestEvent","CreatedAt":"2018-10-10T22:53:06","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2577","RelatedDescription":null,"RelatedBody":"Performance tests 'working directory' has changed - 'perf.groovy' needs to change.\r\n\r\n@jorive "},{"Id":"8401034635","Type":"PullRequestEvent","CreatedAt":"2018-10-10T22:53:01","Actor":"johnbeisner","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/2577","RelatedDescription":"Closed pull request \"Change in performance tests' working-directory\" (#2577) at dotnet/sdk","RelatedBody":"Performance tests 'working directory' has changed - 'perf.groovy' needs to change.\r\n\r\n@jorive "},{"Id":"8400802206","Type":"PullRequestEvent","CreatedAt":"2018-10-10T21:55:17","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2575","RelatedDescription":"Merged pull request \"Updating branding to 2.2.200\" (#2575) at dotnet/sdk","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1049807908173574144","CreatedAt":"2018-10-09T23:44:44+00:00","UserScreenname":"dotnet","Text":"Blogged -- .NET Framework October 2018 Security and Quality Rollup https://t.co/tLgVdVbM4L","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":8,"RawContent":null},{"Id":"1049702744515203072","CreatedAt":"2018-10-09T16:46:51+00:00","UserScreenname":"dotnet","Text":"Announcing the latest preview release of ML .NET 0.6 (Machine Learning .NET) https://t.co/3lXXCs30ma","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":102,"FavoriteCount":59,"RawContent":null},{"Id":"1047894749867270145","CreatedAt":"2018-10-04T17:02:31+00:00","UserScreenname":"dotnet","Text":"Blogged -- Update on .NET Core 3.0 and .NET Framework 4.8 https://t.co/tBpJg3Eoc8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":326,"FavoriteCount":244,"RawContent":null},{"Id":"1047645317401735168","CreatedAt":"2018-10-04T00:31:22+00:00","UserScreenname":"dotnet","Text":".NET Core 2.0 has reached end of life https://t.co/FZTYietdMP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":148,"FavoriteCount":174,"RawContent":null},{"Id":"1047579283579756544","CreatedAt":"2018-10-03T20:08:58+00:00","UserScreenname":"dotnet","Text":"https://t.co/Pt9ZGHYH8C","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":40,"FavoriteCount":27,"RawContent":null}]}},"RunOn":"2018-10-11T05:30:30.3792766Z","RunDurationInMilliseconds":7825}