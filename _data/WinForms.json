{"Data":{"GitHub":{"Issues":[{"Id":"462402539","IsPullRequest":true,"CreatedAt":"2019-06-30T12:58:34","Actor":"MichalStrehovsky","Number":"1247","RawContent":null,"Title":"Mark pvBuffer as In/Out","State":"open","Body":"This parameter is actually used as out. Per https://docs.microsoft.com/en-us/dotnet/framework/interop/blittable-and-non-blittable-types these parameters must be marked as such (\"you must apply the InAttribute and OutAttribute attributes if you want to marshal the argument as an In/Out parameter\"). The code currently works, because it's taking advantage of the pinning optimization that the CLR does, otherwise it would be treated as \"in\" only. It will keep working the same with the extra metadata, but the metadata will be correct.\r\n\r\nHit this while running on a runtime that doesn't do the pinning optimization (and this annotation is a fix for that).","Url":"https://github.com/dotnet/winforms/pull/1247","RelatedDescription":"Open PR \"Mark pvBuffer as In/Out\" (#1247)"},{"Id":"462346908","IsPullRequest":true,"CreatedAt":"2019-06-29T22:19:03","Actor":"JeremyKuhne","Number":"1246","RawContent":null,"Title":"Clean out dead interop code","State":"open","Body":"Removed internal interop code with no callers. Removed FxCop suppressions related to interop (the suppressions don't match our current interop guidelines). Fixed line spacing (mostly).\r\n\r\nI kept functional changes out of this commit. There is plenty more cleanup that can be done. The cuts here remove about 8K from the release build of System.Windows.Forms.dll.\r\n\r\nThere was way more dead code than I expected when I started fixing the spacing. :) While I did keep functional changes out, it is quite a large change so I'm fine if you want to wait for master to open for post 3.0.\r\n\r\nWe can do a fair amount to further cut size down and improve performance both for PInvokes and COM interop. Cleaning up the spacing and dead code here should make that easier to digest/follow.","Url":"https://github.com/dotnet/winforms/pull/1246","RelatedDescription":"Open PR \"Clean out dead interop code\" (#1246)"},{"Id":"462189137","IsPullRequest":true,"CreatedAt":"2019-06-28T22:28:10","Actor":"zsd4yr","Number":"1245","RawContent":null,"Title":"move solution items to build, documentation, or rmv them","State":"closed","Body":"I like that the other repo has a build folder with build-common and build-related files;\r\n\r\nI also think there might be some use for a documentation folder; I did not really like having all of the solution-level stuff in their own folder because I don't think that meaningfully organizes them. I would prefer to divide stuff up in some way. This is just one way we could go","Url":"https://github.com/dotnet/winforms/pull/1245","RelatedDescription":"Closed or merged PR \"move solution items to build, documentation, or rmv them\" (#1245)"},{"Id":"462187720","IsPullRequest":true,"CreatedAt":"2019-06-28T22:08:54","Actor":"AdamYoblick","Number":"1244","RawContent":null,"Title":"change maui test to plural per PR feedback","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/1244","RelatedDescription":"Closed or merged PR \"change maui test to plural per PR feedback\" (#1244)"},{"Id":"461833848","IsPullRequest":true,"CreatedAt":"2019-06-28T21:49:09","Actor":"JeremyKuhne","Number":"1242","RawContent":null,"Title":"Remove CAS related suppressions","State":"closed","Body":"CA2122 was an FxCop violation related to code access security. Removing them as CAS isn't supported in .NET Core. (And all of the CAS attributes have been removed.)\r\n\r\nAlso remove a no-op debug track of the AppDomain for window handles. Multiple AppDomains aren't supported in .NET Core.","Url":"https://github.com/dotnet/winforms/pull/1242","RelatedDescription":"Closed or merged PR \"Remove CAS related suppressions\" (#1242)"},{"Id":"461780096","IsPullRequest":true,"CreatedAt":"2019-06-28T19:46:39","Actor":"vatsan-madhavan","Number":"1241","RawContent":null,"Title":"Add intellisense blob as part of native toolset restore and integrate xmls into package","State":"closed","Body":"@AdamYoblick Here is a basic outline that on-boards the intellisense blob to your build process. You can build on top of this and add relevant targets to integrate the right xmls into your transport package. \r\n\r\nFeel free to close the PR and cherry-pick the relevant commit directly, or use the change shown here however you want. ","Url":"https://github.com/dotnet/winforms/pull/1241","RelatedDescription":"Closed or merged PR \"Add intellisense blob as part of native toolset restore and integrate xmls into package\" (#1241)"},{"Id":"462162191","IsPullRequest":true,"CreatedAt":"2019-06-28T18:42:53","Actor":"dreddy-work","Number":"1243","RawContent":null,"Title":"Removing the public interface that enforce dependancy on System.Confi…","State":"open","Body":"…guration.Manager package.\r\n\r\nWe still depend on this package for 'ToolstripSettings'. We will revisit this dependancy\r\nwhen we have solution for replacing/redesigning the way we read those settings.\r\nfixes #1007 ","Url":"https://github.com/dotnet/winforms/pull/1243","RelatedDescription":"Open PR \"Removing the public interface that enforce dependancy on System.Confi…\" (#1243)"},{"Id":"460818321","IsPullRequest":true,"CreatedAt":"2019-06-28T01:04:09","Actor":"RussKie","Number":"1234","RawContent":null,"Title":"Review EM_* message correctness","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\n- As part the #791 refactor `EM_*` messages got mixed with `RTB.EM_*` messages that led to an issue described in #994.\r\n\r\n  * Restore correct EM_ messagest\r\n  * Separate RTB.EM_ messages\r\n  * Update RichTextBox to use RTB.EM_* messages\r\n\r\nFixes #994\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/1234","RelatedDescription":"Closed or merged PR \"Review EM_* message correctness\" (#1234)"},{"Id":"460111422","IsPullRequest":false,"CreatedAt":"2019-06-28T00:26:11","Actor":"vatsan-madhavan","Number":"1226","RawContent":null,"Title":"Add Warning in WindowsDesktop SDK for UseWinForms ","State":"closed","Body":"See https://github.com/dotnet/wpf/pull/1027#issuecomment-505092719 \r\n\r\nThe comment from @drewnoakes suggests that there is occasional confusion that leads to the use of `UseWinForms` in `Microsoft.NET.Sdk.WindowsDesktop` based projects instead of using the correct property `UseWindowsForms`. \r\n\r\nThe current behavior will be warning `NETSDK1106` (\"Windows Desktop SDK requires UseWpf or UseWindowsForms\"). This should help the vast majority of WinForms projects that guess the property name wrong. \r\n\r\nThe small number of projects that try to set `UseWpf` and `UseWinForms` (instead of the correct property `UseWindowsForms`) will not receive any warnings today. \r\n\r\nWe should evaluate whether a new warning is needed to help those who set `UseWinForms` and add it to the WindowsDesktop SDK. \r\n\r\n/cc @merriemcgaw, @OliaG ","Url":"https://github.com/dotnet/winforms/issues/1226","RelatedDescription":"Closed issue \"Add Warning in WindowsDesktop SDK for UseWinForms \" (#1226)"},{"Id":"461615114","IsPullRequest":true,"CreatedAt":"2019-06-27T17:51:38","Actor":"AdamYoblick","Number":"1240","RawContent":null,"Title":"Porting maui combobox test to xUnit","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/1240","RelatedDescription":"Closed or merged PR \"Porting maui combobox test to xUnit\" (#1240)"},{"Id":"461561139","IsPullRequest":false,"CreatedAt":"2019-06-27T14:25:12","Actor":"smorrell","Number":"1239","RawContent":null,"Title":"LinkDictionary seems to really slow down ResXResourceReader","State":"open","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`)\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:** A large resx with 40k entries compiles to resource file very slowly ~ 30 seconds\r\n\r\n**Expected behavior:** The same .resx file converted into a .txt file compiles very fast, under a second.  Of note,, the conversion is slow.  I would expect that both actions should take about the same time.  \r\n\r\nI think the problem is the fact that the code is using a ListDictionary which states in its code comments\r\n\r\n /// <devdoc>\r\n    ///  <para> \r\n    ///    This is a simple implementation of IDictionary using a singly linked list. This\r\n    ///    will be smaller and faster than a Hashtable if the number of elements is 10 or less.\r\n    ///    This should not be used if performance is important for large numbers of elements.\r\n    ///  </para>\r\n    /// </devdoc>\r\n\r\n**Minimal repro:**  \r\n1. Create a resx file with 40k entries and then run resgen.exe myfilename.resx \r\n==>slow\r\n\r\n2. Convert this file to a txt file using: resgen.exe myfilename.resx myfilename.txt \r\n==> slow\r\n\r\n3. Convert the txt file to resource dll using: resgen.exe myfilename.txt\r\n==>fast\r\n","Url":"https://github.com/dotnet/winforms/issues/1239","RelatedDescription":"Open issue \"LinkDictionary seems to really slow down ResXResourceReader\" (#1239)"},{"Id":"461271952","IsPullRequest":false,"CreatedAt":"2019-06-27T02:28:55","Actor":"VBAndCs","Number":"1238","RawContent":null,"Title":"Fix UserControl.DesignMode property","State":"open","Body":"\r\nIn Framework, there is an issue with UserControl.DesignMode property(more details [here]( https://stackoverflow.com/questions/34664/designmode-with-nested-controls) and I Quote:\r\n\r\n> if you nest controls then DesignMode only works for the first level. The second and lower levels DesignMode will always return FALSE. The standard hack has been to look at the name of the process that is running and if it is \"DevEnv.EXE\" then it must be studio thus DesignMode is really TRUE. The problem with that is looking for the ProcessName works its way around through the registry and other strange parts with the end result that the user might not have the required rights to see the process name. In addition this strange route is very slow. So we have had to pile additional hacks to use a singleton and if an error is thrown when asking for the process name then assume that DesignMode is FALSE. A nice clean way to determine DesignMode is in order. Acually getting Microsoft to fix it internally to the framework would be even better!\r\n\r\nI faced this problem just today, so, I hope you fix this in the CorFx version.\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/1238","RelatedDescription":"Open issue \"Fix UserControl.DesignMode property\" (#1238)"},{"Id":"461225037","IsPullRequest":false,"CreatedAt":"2019-06-26T23:31:23","Actor":"zsd4yr","Number":"1237","RawContent":null,"Title":"Do we need attributes of the style '[OptionalField(VersionAdded = 2)]' ???","State":"open","Body":"What were these ever for? Serialization across versions? ","Url":"https://github.com/dotnet/winforms/issues/1237","RelatedDescription":"Open issue \"Do we need attributes of the style '[OptionalField(VersionAdded = 2)]' ???\" (#1237)"},{"Id":"461103464","IsPullRequest":true,"CreatedAt":"2019-06-26T17:51:33","Actor":"zsd4yr","Number":"1236","RawContent":null,"Title":"Remove Serializable attributes where appropriate","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #889 \r\n\r\n## Proposed changes\r\n- remove [Serializable] attribute where appropriate\r\n- add comments for exceptions to removal\r\n- post CTI testing, remove ISerializable in those same locations\r\n- cleanup of touched code\r\n","Url":"https://github.com/dotnet/winforms/pull/1236","RelatedDescription":"Open PR \"Remove Serializable attributes where appropriate\" (#1236)"},{"Id":"460878436","IsPullRequest":false,"CreatedAt":"2019-06-26T10:04:45","Actor":"Zheng-Li01","Number":"1235","RawContent":null,"Title":"Accessibility:[Keyboard] The narrator can’t focus on correct item of CheckedBoxList control","State":"open","Body":"* .NET Core Version: 3.0.100 Preview7 12618 from master branch\r\n* Have you experienced this same bug with .NET Framework?: Yes. the bug [918826](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/918826) still can reproduce in framework.\r\n\r\n**Repro Steps:**\r\n1.\tOpen the attached application, build and run.[ReproApplication.zip](https://github.com/dotnet/winforms/files/3329450/ReproApplication.zip)\r\n2.\tOpen the narrator, and noticed that the scan mode is **scan on**.\r\n3.\tUsing the down arrow to iterate the items of checkedlistbox control.\r\n\r\n**More info:**\r\n1.\tThe issue can’t repro on when setting the scan mode is **scan off**.\r\n2.\tThe issue can’t reproduce on the listbox control.\r\n\r\n**Actual:**\r\nThe dot line still stay on the first item, and the narrator can’t focus on correct item of CheckedBoxList control\r\n![Issue](https://user-images.githubusercontent.com/38325459/60170996-3a97d700-983c-11e9-831c-2d6ecb81f4cf.PNG)\r\n\r\n**Expected:**\r\nThe narrator should focus on correct item of CheckedBoxList control","Url":"https://github.com/dotnet/winforms/issues/1235","RelatedDescription":"Open issue \"Accessibility:[Keyboard] The narrator can’t focus on correct item of CheckedBoxList control\" (#1235)"},{"Id":"460805727","IsPullRequest":false,"CreatedAt":"2019-06-26T07:29:51","Actor":"lichen19951127","Number":"1233","RawContent":null,"Title":"In Visual Studio 2019 16.1.4,Winform designer can net be used","State":"closed","Body":"* .NET Core Version:3.0 Preview6\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:In Visual Studio 2019 16.1.4,Winform designer can net be used\r\n   I created a winform app\r\n![image](https://user-images.githubusercontent.com/43132899/60159807-95263880-9826-11e9-9c91-79fb4f94f3c5.png)\r\n\r\n\r\n**Actual behavior:\r\n![image](https://user-images.githubusercontent.com/43132899/60159895-c0a92300-9826-11e9-9fa7-2a563cd47acc.png)\r\n\r\n\r\n**Expected behavior:**\r\n\r\n**Minimal repro:**\r\n","Url":"https://github.com/dotnet/winforms/issues/1233","RelatedDescription":"Closed issue \"In Visual Studio 2019 16.1.4,Winform designer can net be used\" (#1233)"},{"Id":"460684776","IsPullRequest":true,"CreatedAt":"2019-06-25T23:19:52","Actor":"AdamYoblick","Number":"1232","RawContent":null,"Title":"Disable test discovery enumeration","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/1232","RelatedDescription":"Closed or merged PR \"Disable test discovery enumeration\" (#1232)"},{"Id":"460456412","IsPullRequest":true,"CreatedAt":"2019-06-25T14:23:21","Actor":"hughbe","Number":"1231","RawContent":null,"Title":"Add TreeNode tests and fix some NREs","State":"open","Body":"Fixes #1228 \r\nFixes #1227 ","Url":"https://github.com/dotnet/winforms/pull/1231","RelatedDescription":"Open PR \"Add TreeNode tests and fix some NREs\" (#1231)"},{"Id":"460455219","IsPullRequest":false,"CreatedAt":"2019-06-25T14:21:20","Actor":"hughbe","Number":"1230","RawContent":null,"Title":"Building on Windows causes errors","State":"open","Body":"> git clone https://github.com/dotnet/winforms\r\n> cd winforms\r\n> build\r\n\r\n```\r\nMicrosoft Windows [Version 10.0.17763.557]\r\n(c) 2018 Microsoft Corporation. All rights reserved.\r\n\r\nC:\\Users\\hughbe>git clone https://github.com/dotnet/winforms\r\nCloning into 'winforms'...\r\nremote: Enumerating objects: 102, done.\r\nremote: Counting objects: 100% (102/102), done.\r\nremote: Compressing objects: 100% (75/75), done.\r\nremote: Total 21689 (delta 42), reused 54 (delta 21), pack-reused 21587\r\nReceiving objects: 100% (21689/21689), 23.34 MiB | 15.66 MiB/s, done.\r\nResolving deltas: 100% (16552/16552), done.\r\nChecking out files: 100% (2362/2362), done.\r\n\r\nC:\\Users\\hughbe>cd winforms\r\n\r\nC:\\Users\\hughbe\\winforms>build.cmd\r\ndotnet-install: Downloading link: https://dotnetcli.azureedge.net/dotnet/Sdk/3.0.100-preview5-011568/dotnet-sdk-3.0.100-preview5-011568-win-x64.zip\r\ndotnet-install: Extracting zip from https://dotnetcli.azureedge.net/dotnet/Sdk/3.0.100-preview5-011568/dotnet-sdk-3.0.100-preview5-011568-win-x64.zip\r\ndotnet-install: Adding to current process PATH: \"C:\\Users\\hughbe\\winforms\\.dotnet\\\". Note: This change will not be visible if PowerShell was run as a child process.\r\ndotnet-install: Installation finished\r\nDownloading vswhere\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\MSBuild\\Current\\Bin\\msbuild.exe /nologo /bl:C:\\Users\\hughbe\\winforms\\artifacts\\log\\Debug\\ToolsetRestore.binlog /clp:Summary /clp:ErrorsOnly;NoSummary /m /nr:True /p:ContinuousIntegrationBuild=False /p:TreatWarningsAsErrors=true /p:__ToolsetLocationOutputFile=C:\\Users\\hughbe\\winforms\\artifacts\\toolset\\1.0.0-beta.19323.4.txt /t:__WriteToolsetLocation /v:minimal /warnaserror C:\\Users\\hughbe\\winforms\\artifacts\\toolset\\restore.proj\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\MSBuild\\Current\\Bin\\msbuild.exe /nologo /bl:C:\\Users\\hughbe\\winforms\\artifacts\\log\\Debug\\Build.binlog /clp:Summary /m /nr:True /p:ContinuousIntegrationBuild=False /p:TreatWarningsAsErrors=true /p:Configuration=Debug /p:RepoRoot=C:\\Users\\hughbe\\winforms /p:Restore=True /p:DeployDeps=False /p:Build=True /p:Rebuild=False /p:Deploy=False /p:Test=False /p:Pack=False /p:IntegrationTest=False /p:PerformanceTest=False /p:Sign=False /p:Publish=False /v:minimal /warnaserror C:\\Users\\hughbe\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19323.4\\tools\\Build.proj\r\nC:\\Users\\hughbe\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19323.4\\tools\\Tools.proj : error : Unable to loc\r\nate the .NET Core SDK. Check that it is installed and that the version specified in global.json (if any) matches the in\r\nstalled version.\r\nC:\\Users\\hughbe\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19323.4\\tools\\Tools.proj : error MSB4236: The SD\r\nK 'Microsoft.NET.Sdk' specified could not be found.\r\n\r\nBuild FAILED.\r\n\r\nC:\\Users\\hughbe\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19323.4\\tools\\Tools.proj : error : Unable to loc\r\nate the .NET Core SDK. Check that it is installed and that the version specified in global.json (if any) matches the in\r\nstalled version.\r\nC:\\Users\\hughbe\\.nuget\\packages\\microsoft.dotnet.arcade.sdk\\1.0.0-beta.19323.4\\tools\\Tools.proj : error MSB4236: The SD\r\nK 'Microsoft.NET.Sdk' specified could not be found.\r\n    0 Warning(s)\r\n    2 Error(s)\r\n\r\nTime Elapsed 00:00:00.12\r\nBuild failed.\r\nSee log: C:\\Users\\hughbe\\winforms\\artifacts\\log\\Debug\\Build.binlog\r\n\r\nC:\\Users\\hughbe\\winforms>\r\n```\r\n\r\nAny ideas?","Url":"https://github.com/dotnet/winforms/issues/1230","RelatedDescription":"Open issue \"Building on Windows causes errors\" (#1230)"},{"Id":"460306961","IsPullRequest":true,"CreatedAt":"2019-06-25T09:17:27","Actor":"RussKie","Number":"1229","RawContent":null,"Title":"Add missing resources for System.Design namespace","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nOriginal work done by @dreddy-work \r\nObsoletes #941\r\n\r\n\r\n## Proposed changes\r\n\r\n- Port the resources required for the source code that are already ported.\r\n- Bitmap icons/images are replaced with `Icon`s\r\n- Port all the images, equivalent, to desktop framework. Even though,  we did not port all the source code that require/use these images. Replacing existing Bitmaps with Icons have a cross team dependency. hence, pushing all of them in one go hoping that we fill the gap in porting the source code between core and desktop framework.\r\n\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n","Url":"https://github.com/dotnet/winforms/pull/1229","RelatedDescription":"Open PR \"Add missing resources for System.Design namespace\" (#1229)"},{"Id":"460124555","IsPullRequest":false,"CreatedAt":"2019-06-24T22:29:48","Actor":"hughbe","Number":"1228","RawContent":null,"Title":"new TreeNode().Handle throws NRE","State":"open","Body":"Should not create handle without TreeView","Url":"https://github.com/dotnet/winforms/issues/1228","RelatedDescription":"Open issue \"new TreeNode().Handle throws NRE\" (#1228)"},{"Id":"459854039","IsPullRequest":true,"CreatedAt":"2019-06-24T22:17:12","Actor":"vladimir-krestov","Number":"1218","RawContent":null,"Title":"Fixing mouse-move selection of ComboBox current item text","State":"closed","Body":"Fixes #465.","Url":"https://github.com/dotnet/winforms/pull/1218","RelatedDescription":"Closed or merged PR \"Fixing mouse-move selection of ComboBox current item text\" (#1218)"},{"Id":"460117385","IsPullRequest":false,"CreatedAt":"2019-06-24T22:06:20","Actor":"hughbe","Number":"1227","RawContent":null,"Title":"new TreeNode().NextNode throws NRE","State":"open","Body":"Should return null","Url":"https://github.com/dotnet/winforms/issues/1227","RelatedDescription":"Open issue \"new TreeNode().NextNode throws NRE\" (#1227)"},{"Id":"460014742","IsPullRequest":true,"CreatedAt":"2019-06-24T17:42:40","Actor":"hughbe","Number":"1225","RawContent":null,"Title":"Add ScrollBar tests and fix a NRE","State":"open","Body":"Fixes #1219","Url":"https://github.com/dotnet/winforms/pull/1225","RelatedDescription":"Open PR \"Add ScrollBar tests and fix a NRE\" (#1225)"},{"Id":"459990698","IsPullRequest":true,"CreatedAt":"2019-06-24T16:51:06","Actor":"dotnet-maestro[bot]","Number":"1224","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190624.03\r\n- **Date Produced**: 6/24/2019 4:40 PM\r\n- **Commit**: e1d780539e85f4d8de263957715f9d08db2ceef4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview7-27824-03\r\n\r\n[marker]: <> (End:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/1224","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#1224)"},{"Id":"459956385","IsPullRequest":true,"CreatedAt":"2019-06-24T16:31:29","Actor":"dotnet-maestro[bot]","Number":"1221","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190624.02\r\n- **Date Produced**: 6/24/2019 4:19 PM\r\n- **Commit**: e1d780539e85f4d8de263957715f9d08db2ceef4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview7-27824-02\r\n\r\n[marker]: <> (End:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/1221","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#1221)"},{"Id":"459982822","IsPullRequest":true,"CreatedAt":"2019-06-24T16:22:39","Actor":"AdamYoblick","Number":"1223","RawContent":null,"Title":"Commenting out flaky test","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/1223","RelatedDescription":"Closed or merged PR \"Commenting out flaky test\" (#1223)"},{"Id":"459982191","IsPullRequest":false,"CreatedAt":"2019-06-24T16:20:29","Actor":"AdamYoblick","Number":"1222","RawContent":null,"Title":"Failing unit test: ListControl Ctor_Default","State":"open","Body":"See https://dev.azure.com/dnceng/internal/_build/results?buildId=235831&view=ms.vss-test-web.build-test-results-tab&runId=5849926&resultId=100147&paneView=debug","Url":"https://github.com/dotnet/winforms/issues/1222","RelatedDescription":"Open issue \"Failing unit test: ListControl Ctor_Default\" (#1222)"},{"Id":"459904301","IsPullRequest":false,"CreatedAt":"2019-06-24T13:51:34","Actor":"hughbe","Number":"1220","RawContent":null,"Title":"Setting ScrollProperties with a null container throws NRE","State":"open","Body":"Should not try to update the parent if there is no parent","Url":"https://github.com/dotnet/winforms/issues/1220","RelatedDescription":"Open issue \"Setting ScrollProperties with a null container throws NRE\" (#1220)"},{"Id":"459901814","IsPullRequest":false,"CreatedAt":"2019-06-24T13:46:58","Actor":"hughbe","Number":"1219","RawContent":null,"Title":"ScrollBar.OnMouseWheel(null) throws NRE","State":"open","Body":"Should check for null before using","Url":"https://github.com/dotnet/winforms/issues/1219","RelatedDescription":"Open issue \"ScrollBar.OnMouseWheel(null) throws NRE\" (#1219)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-07-01T05:30:49.9754534Z","RunDurationInMilliseconds":641}