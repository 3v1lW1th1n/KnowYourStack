{"Data":{"Blog":{"FeedItems":[{"Title":"Publishing a Web App to an Azure VM from Visual Studio","PublishedOn":"2017-11-01T22:35:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We know virtual machines (VMs) are one of the most popular places to run apps in Azure, but publishing to a VM from Visual Studio has been a tricky experience for some. So, we’re pleased to announce...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/01/publishing-a-web-app-to-an-azure-vm-from-visual-studio/","RawContent":null},{"Title":"Recent updates for publishing","PublishedOn":"2017-10-31T18:18:45+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We have recently added a few interesting features for ASP.NET publishing. The updates include: Container Registry Publish Updates Create publish profile without publishing In this post, we will...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/31/recent-updates-for-publishing/","RawContent":null},{"Title":"Sharing Configuration in ASP.NET Core SPA Scenarios","PublishedOn":"2017-10-27T15:17:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post from Mike Rousos ASP.NET Core 2.0 recently released and, with it, came some new templates, including new project templates for single-page applications (SPA) served from an...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/27/sharing-configuration-in-asp-net-core-spa-scenarios/","RawContent":null},{"Title":"User accounts made easy with Azure","PublishedOn":"2017-10-17T21:01:45+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"One of the most common requirements for web applications is for users create accounts for the purpose of access control and personalization. While ASP.NET templates have always made it easy to create...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/17/user-accounts-made-easy-with-azure/","RawContent":null},{"Title":"Announcing SignalR for ASP.NET Core Alpha 2","PublishedOn":"2017-10-09T22:46:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"A few weeks ago we released the alpha1 version of SignalR for ASP.NET Core 2.0. Today we are pleased to announce a release of the alpha2 version of SignalR for ASP.NET Core 2.0. This release contains...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/09/announcing-signalr-for-asp-net-core-alpha-2/","RawContent":null},{"Title":"Announcing SignalR (alpha) for ASP.NET Core 2.0","PublishedOn":"2017-09-14T23:41:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are glad to announce an alpha release of SignalR for ASP.NET Core 2.0. This is the first official preview release of a new SignalR that is compatible with ASP.NET Core. It consists of a...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/","RawContent":null},{"Title":"Welcome to the New Blog Template for ASP.NET Developers","PublishedOn":"2017-09-08T17:59:41+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"By Juliet Daniel, Lucas Isaza, and Uma Lakshminarayan Have you always wanted to build a blog or other web application but haven&#8217;t had the time or educational resources to learn? With our blog...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/","RawContent":null},{"Title":"Getting Started with Windows Containers","PublishedOn":"2017-09-07T19:51:33+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Containers provide a way of running an application in a controlled environment, isolated from other applications running on the machine, and from the underlying infrastructure. They are a...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/","RawContent":null},{"Title":"ASP.NET Core 2.0 Features","PublishedOn":"2017-08-25T16:30:07+00:00","CommentsCount":22,"FacebookCount":0,"Summary":"Last week we announced the release of ASP.NET Core 2.0 and described some top new features, including Razor Pages, new and updated templates, and Application Insights integration. In this blog post we...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0","PublishedOn":"2017-08-14T16:01:14+00:00","CommentsCount":45,"FacebookCount":0,"Summary":"The ASP.NET team is proud to announce general availability of ASP.NET Core 2.0.  This release features compatibility with .NET Core 2.0, tooling support in Visual Studio 2017 version 15.3, and the new...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6812438836","Type":"IssuesEvent","CreatedAt":"2017-11-06T03:06:24","Actor":"krystyna93","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2267","RelatedDescription":"Closed issue \"Failing installation of SixLabors.ImageSharp in NuGet VS 15.4.2\" (#2267) at aspnet/Home","RelatedBody":"I have been having issues with the installation of the SixLabors.ImageSharp package.\r\nI have tried to repair VS 15.4.0 but the installation still failed.\r\nI have updated to Visual Studio 15.4.2, but I am still getting the same error\r\nI have also uninstalled the package, rebooted VS and reinstalled the package again numerous time, but to no avail.\r\nI have also uninstalled and reinstalled the Microsoft.NetCoreApp.All package, but that did not work either.\r\n\r\n**ERROR LIST window :**\r\n\r\nError Package restore failed. Rolling back package changes for 'myprojectname'.\r\n\r\n**I am also receiving the following error in my OUTPUT window :**\r\n\r\n    Restoring packages for C:\\Users\\Me\\Source\\Repos\\project\\src\\project\\project.csproj...\r\n    Package SixLabors.ImageSharp 1.0.0-beta0001 is not compatible with netcoreapp2.0 (.NETCoreApp,Version=v2.0). Package SixLabors.ImageSharp 1.0.0-beta0001 supports:\r\n\r\n    netstandard1.1 (.NETStandard,Version=v1.1)\r\n    netstandard1.3 (.NETStandard,Version=v1.3)\r\n    Package restore failed. Rolling back package changes for 'project'.\r\n    Time Elapsed: 00:00:01.1947210\r\n    ========== Finished ==========\r\n\r\nI dont know what could be the issue, am I missing some library for it?\r\nCan someone please enlighten me, I cant seem to find a solution to this issue, which has been bugging me all day"},{"Id":"6811376629","Type":"IssuesEvent","CreatedAt":"2017-11-05T17:21:09","Actor":"Petermarcu","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2268","RelatedDescription":"Opened issue \"Precompiled views not happening for self-contained apps\" (#2268) at aspnet/Home","RelatedBody":"I noticed startup time was absolutely terrible for my self-contained mvc application. I created a empty mvc project to try to repro. \r\n\r\n`dotnet new mvc`\r\n\r\nWhen I `dotnet publish` I get a folder with a PrecompiledViews.dll and the app starts really fast.\r\nWhen I `dotnet publish -r win-x64` I don't see the PrecompiledViews.dll and my app takes 3-4 seconds to start each time.\r\n\r\nWhat do I need to do to get precompiled views for my self contained mvc application?\r\n\r\nI tried adding:\r\n\r\n```\r\n<MvcRazorCompileOnPublish>true</MvcRazorCompileOnPublish>\r\n<PreserveCompilationContext>true</PreserveCompilationContext>\r\n```\r\n\r\nTo my project and that didn't seem to have any effect."},{"Id":"6810800424","Type":"IssuesEvent","CreatedAt":"2017-11-05T11:14:50","Actor":"krystyna93","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2267","RelatedDescription":"Opened issue \"Failing installation of SixLabors.ImageSharp in NuGet VS 15.4.2\" (#2267) at aspnet/Home","RelatedBody":"I have been having issues with the installation of the SixLabors.ImageSharp package.\r\nI have tried to repair VS 15.4.0 but the installation still failed.\r\nI have updated to Visual Studio 15.4.2, but I am still getting the same error\r\nI have also uninstalled the package, rebooted VS and reinstalled the package again numerous time, but to no avail.\r\nI have also uninstalled and reinstalled the Microsoft.NetCoreApp.All package, but that did not work either.\r\n\r\n**ERROR LIST window :**\r\n\r\nError Package restore failed. Rolling back package changes for 'myprojectname'.\r\n\r\n**I am also receiving the following error in my OUTPUT window :**\r\n\r\nRestoring packages for C:\\Users\\Me\\Source\\Repos\\project\\src\\project\\project.csproj...\r\nPackage SixLabors.ImageSharp 1.0.0-beta0001 is not compatible with netcoreapp2.0 (.NETCoreApp,Version=v2.0). Package SixLabors.ImageSharp 1.0.0-beta0001 supports:\r\n\r\n    netstandard1.1 (.NETStandard,Version=v1.1)\r\n    netstandard1.3 (.NETStandard,Version=v1.3)\r\n    Package restore failed. Rolling back package changes for 'project'.\r\n    Time Elapsed: 00:00:01.1947210\r\n    ========== Finished ==========\r\n\r\nI dont know what could be the issue, am I missing some library for it?\r\nCan someone please enlighten me, I cant seem to find a solution to this issue, which has been bugging me all day"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"6811882435","Type":"IssuesEvent","CreatedAt":"2017-11-05T22:06:10","Actor":"Kevvix","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1091","RelatedDescription":"Opened issue \"Xamarin - System.MissingMethodException - 'Microsoft.AspNetCore.SignalR.Client.HubConnectionExtensions.InvokeAsync' not found\" (#1091) at aspnet/SignalR","RelatedBody":"Hi,\r\n\r\nI have create a Xamarin Forms solution with 4 projets : \r\n- Client.DataAccess (for my data access layer using SignalR to communicate with Server)\r\n- Client (the UI and VM for the Xamarin Forms)\r\n- Client.Android (application Android)\r\n- Client.UWP (application universal Windows Plateform)\r\n\r\nClient have Client.DataAccess has reference\r\nClient.Android have Client has reference\r\nClient.UWP have Client has reference\r\n\r\nThe Client.DataAccess and Client projects target netstandard2.0 and use this two packages : \r\n\r\n- \"Microsoft.AspNetCore.SignalR.Client\" version \"1.0.0-alpha2-final\"\r\n- \"Microsoft.AspNetCore.SignalR.Client.Core\" version \"1.0.0-alpha2-final\"\r\n\r\nThe UWP version of the Xamarin application work without a problem.\r\nThe Android version crash went trying to evaluation this method : \r\n\r\n private async Task CreateConnection(string token, AuthentificationProvider provider)\r\n {\r\n            _server = new HubConnectionBuilder()\r\n                    .WithUrl(\"http://192.168.2.14:50050/services\")\r\n                    .WithMessagePackProtocol()\r\n                    .WithConsoleLogger(LogLevel.Debug)\r\n                    .Build();\r\n            await _server.StartAsync();\r\n            var temp = await _server.InvokeAsync<Guid?>(\"Authenticate\", token, provider); \r\n}\r\n\r\nI got the error : \r\nSystem.MissingMethodException: Method 'Microsoft.AspNetCore.SignalR.Client.HubConnectionExtensions.InvokeAsync' not found.\r\n\r\nlook like the method extension method \"InvokeAsync\" is not found at runtime.\r\nI try to add the reference directly in the packages.config to this two packages but the error still persist.\r\nthe Client.Android project have reference to \"NETStandard.Library\" package.\r\n\r\n\r\nthank for your help :)\r\nsorry for my English."},{"Id":"6811243070","Type":"IssuesEvent","CreatedAt":"2017-11-05T16:03:31","Actor":"BalassaMarton","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1090","RelatedDescription":"Opened issue \"JS client: move HttpConnection to a separate package\" (#1090) at aspnet/SignalR","RelatedBody":"On the server, we can use `Microsoft.AspNetCore.Sockets.Http` to create endpoints without hubs, but we don't have the same elegant separation in the JS client. Could you move `HttpConnection` and its dependencies to a separate package ( `@aspnet/sockets-client` or something)? Loading `HubConnection` and other hub-related code is just a waste of resources when there are no hubs involved."},{"Id":"6810758775","Type":"IssuesEvent","CreatedAt":"2017-11-05T10:39:31","Actor":"zdeneksejcek","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1089","RelatedDescription":"Opened issue \"Unable to force longpolling in ASP.NET Core SignalR\" (#1089) at aspnet/SignalR","RelatedBody":"Hi,\r\n\r\nI tried everything possible, but cannot force longpolling (on either server or client side). The problem is that we have newest Chrome, but on server side we use linkerd without support for websockets. The only chance is to force is from beginning. Is there a way?\r\n\r\nThanks."},{"Id":"6809594931","Type":"IssuesEvent","CreatedAt":"2017-11-04T18:35:15","Actor":"avijassra","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1088","RelatedDescription":"Opened issue \"signalr not working in project created with \"dotnet new angular\" cli using VSCode\" (#1088) at aspnet/SignalR","RelatedBody":"when i am trying to start the connection, i am getting this  .... at this line\r\n\r\nFile -> https://github.com/avijassra/signalrDi/blob/v1-reboot/ClientApp/app/services/pubsub.service.ts#L16\r\n\r\n> this.connection = new HubConnection('chat');\r\n> //this.startedConnection = this.connection.start();\r\n\r\nFile -> https://github.com/avijassra/signalrDi/blob/v1-reboot/Startup.cs#L47\r\n\r\n> app.UseSignalR(routes =>\r\n> routes.MapHub<signalrDi.Hubs.ChatHub>(\"chat\"));\r\n\r\nProject Repo https://github.com/avijassra/signalrDi/tree/v1-reboot"},{"Id":"6807520312","Type":"PullRequestEvent","CreatedAt":"2017-11-03T20:15:12","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1084","RelatedDescription":"Merged pull request \"Actually throwing exceptions from SendAsync\" (#1084) at aspnet/SignalR","RelatedBody":"SendAsync was using InvokeCoreAsync code to send messages. In case of exception InvokeCoreAsync is blocking and returns a task to the user so they can await for the remote call to complete. Any exception thrown is caught and used to fail the task returned to the user. SendAsync does not return a special task to the user so re-using InvokeCore resulted in swallowing exceptions. While SendAsync is fire and forget it actually should throw if the message could not be send and it was not happening.\r\n\r\nWhile adding tests it turned out we did not test cases where Invoke/SendAsync/StreamAsync were invoked before starting the connection and this resulted in a NullReferenceException. I also fixed that."},{"Id":"6806991001","Type":"IssuesEvent","CreatedAt":"2017-11-03T18:05:52","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1087","RelatedDescription":"Opened issue \"Use PascalCasing for parameter names in Logger templates\" (#1087) at aspnet/SignalR","RelatedBody":"It looks like that's the common pattern here: https://github.com/aspnet/Mvc/blob/dev/src/Microsoft.AspNetCore.Mvc.ViewFeatures/Internal/MvcViewFeaturesLoggerExtensions.cs\r\n\r\ncc @muratg @BrennanConroy "}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"6812649833","Type":"IssuesEvent","CreatedAt":"2017-11-06T04:43:43","Actor":"nlowe","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7028","RelatedDescription":"Opened issue \"Razor Views do not recompile when directories with large numbers of files are present in the project tree\" (#7028) at aspnet/Mvc","RelatedBody":"First off, I've been tearing my hair out for the past few hours trying to figure out what's causing this so if this isn't the right repo to report this in, feel free to move it.\r\n\r\n## Problem\r\n\r\nIf the `material-design-icons` package from npm is present in the `node_modules` directory, Razor templates do not get compiled on subsequent requests. This seems to be some limit with the number of files in the project tree. This package has 89,814 files in it. I was able to reproduce this by creating 10,000 empty files in a directory:\r\n\r\n```powershell\r\n1..10000 | ForEach-Object { New-Item -ItemType File -Path foo -Name ([Guid]::NewGuid().Guid.ToString()) | Out-Null }\r\n```\r\n\r\nRemoving this package (and my test folder if I created it) causes views to be recompiled on new requests after they are modified on disk.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new MVC project: `dotnet new mvc`\r\n2. Create `10000` empty files in a folder in the project:\r\n    * `mkdir foo`\r\n    * `1..10000 | ForEach-Object { New-Item -ItemType File -Path foo -Name ([Guid]::NewGuid().Guid.ToString()) | Out-Null }`\r\n        * linux: `for i in {1..10000}; do mktemp -p foo > /dev/null; done`\r\n3. `dotnet run`\r\n4. Open `http://localhost:5000` in a browser\r\n5. Modify `Views/Home/Index.cshtml` and reload the page in the browser\r\n\r\n**Expected Result**: The view is recompiled and updated after the page reloads\r\n\r\n**Actual Result**: The request returns almost instantly and is not updated. No warnings are printed in the console with the standard project template.\r\n\r\n### Attempted Workaround\r\n\r\nAfter removing my test folder, I tried the following to exclude the `node_modules` folder from consideration in hopes that it would be ignored when views should be recompiled:\r\n\r\n```xml\r\n  <ItemGroup>\r\n    <Compile Remove=\"node_modules\\**\" />\r\n    <Content Remove=\"node_modules\\**\" />\r\n    <EmbeddedResource Remove=\"node_modules\\**\" />\r\n    <None Remove=\"node_modules\\**\" />\r\n  </ItemGroup>\r\n\r\n  <PropertyGroup>\r\n    <DefaultItemExcludes>$(DefaultItemExcludes);node_modules\\**\\*.*</DefaultItemExcludes>\r\n  </PropertyGroup>\r\n```\r\n\r\nThis had no effect: after modifying views on disk, I had to `ctrl+c` and run `dotnet run` again for the view to update.\r\n\r\n## Question\r\n\r\nIs there a way to exclude the entire `node_modules` folder from the system? I am using `webpack` and don't need access to it at runtime. This seems like a really easy limit to hit on any project that uses a decent amount of frontend packages from `npm`."},{"Id":"6812518456","Type":"IssuesEvent","CreatedAt":"2017-11-06T03:40:26","Actor":"johnstav","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7027","RelatedDescription":"Opened issue \"Post model binding uses culture, Get model binding doesn't use culture\" (#7027) at aspnet/Mvc","RelatedBody":"With culture en-AU, the following controller action binds the date parameter differently for get and post:\r\n- Get binds MM/dd/yyyy (en-US?)\r\n- Post binds dd/MM/yyyy (en-AU - Correct culture)\r\n\r\n- Tested and occurs in aspnetcore 2 - razor pages and controllers\r\n\r\nController:\r\n```\r\npublic class TestController : Controller\r\n    {\r\n        public IActionResult Index(DateTime? date) {\r\n            return View();\r\n        }\r\n    }\r\n```\r\nView:\r\n```\r\n<form method=\"get\">\r\n\t<input name=\"date\" type=\"text\" value=\"01/11/2017\" />\r\n\t<button type=\"submit\">Get</button>\r\n</form>\r\n<form method=\"post\">\r\n\t<input name=\"date\" type=\"text\" value=\"01/11/2017\" />\r\n\t<button type=\"submit\">Post</button>\r\n</form>\r\n```\r\n"},{"Id":"6812275321","Type":"IssuesEvent","CreatedAt":"2017-11-06T01:59:41","Actor":"TimRowe","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7023","RelatedDescription":"Closed issue \"Why chinese character translate to unicode format\" (#7023) at aspnet/Mvc","RelatedBody":"My view contain chinese character like below\r\n```c#\r\n@{\r\n    var a = \"你好\";\r\n}\r\n<h2>@a</h2>\r\n```\r\nIt will translate in the response like below\r\n```c#\r\n<h2>&#x4F60;&#x597D;</h2>\r\n```\r\nIt can display right in the browser. But I don't want it to  translate, because i can't see the chinese charater in debug mode on  browser. How can i do?"},{"Id":"6812011966","Type":"IssuesEvent","CreatedAt":"2017-11-05T23:25:27","Actor":"KenSpr","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7026","RelatedDescription":"Opened issue \"Razor Pages do not appear to support ViewBag variables\" (#7026) at aspnet/Mvc","RelatedBody":"Neither Razor pages (with the ```@page``` directive) nor their C# code-behind files seem to support ViewBag.  For instance copying C# code from an existing Asp.net Core 2.0 MVC controller causes compile-error when ViewBag is encountered. The same is true for Razor Pages: the razor-page code (with an @page directive) does not recognize references to ViewBag variables. \r\n\r\nWe think that 'Pages' are great for aspects of a complex project and intend to use both MVC and Pages together but we would prefer not having to change fundamentals like page-variable storage. We understand that ViewBag is not recommended for new code in favor of ViewData, however, in our opinion, since Asp.Net Core 2.n MVC Controllers and Razor Views both support ViewBag variables, we think that Asp.Net Core 2.n 'Razor Pages' should also support ViewBag. Otherwise, it is difficult to move code between the two mechanisms. This also infringes on 'separation of concerns' because developers have to coordinate variable storage details rather than just adding '@page' to the top of a page (as explained in MS documentation).\r\n"},{"Id":"6810753117","Type":"IssuesEvent","CreatedAt":"2017-11-05T10:34:38","Actor":"lyptt","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7025","RelatedDescription":"Closed issue \"CORS not working at all on ASP.NET Core 2.0 Web API project\" (#7025) at aspnet/Mvc","RelatedBody":"I've added CORS as described [here](https://docs.microsoft.com/en-us/aspnet/core/security/cors). Literally every solution posted there doesn't work with my project.\r\n\r\nAny CORS preflight fails with a 404 response, which causes the request to abort. Is CORS even supported with Web API projects? Because it seems like it isn't, at all.\r\n\r\nAny help would be greatly appreciated."},{"Id":"6809961095","Type":"IssuesEvent","CreatedAt":"2017-11-04T22:56:57","Actor":"lyptt","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7025","RelatedDescription":"Opened issue \"CORS not working at all on ASP.NET Core 2.0 Web API project\" (#7025) at aspnet/Mvc","RelatedBody":"I've added CORS as described [here](https://docs.microsoft.com/en-us/aspnet/core/security/cors). Literally every solution posted there doesn't work with my project.\r\n\r\nAny CORS preflight fails with a 404 response, which causes the request to abort. Is CORS even supported with Web API projects? Because it seems like it isn't, at all.\r\n\r\nAny help would be greatly appreciated."}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"6794038203","Type":"IssuesEvent","CreatedAt":"2017-11-01T10:22:02","Actor":"lurumad","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1493","RelatedDescription":"Opened issue \"ASP.NET Core Identity in multiple ASP.NET Core Applications: Invalid Token\" (#1493) at aspnet/Identity","RelatedBody":"Hi,\r\n\r\nI have two web applications, an administration app and Identity Server app. In administration app administrators create new users accounts and this app generates a token for email confirmation:\r\n\r\n```csharp\r\nvar token = await userManager.GenerateEmailConfirmationTokenAsync(user);\r\n```\r\nI want to confirm email and reset the password in the identity server app, but I always recieved an InvalidToken error.\r\n\r\nI've configured Identity in both apps:\r\n\r\n```csharp\r\nservices.AddIdentity<User, IdentityRole>()\r\n                .AddEntityFrameworkStores<AdministrationDbContext>()\r\n                .AddDefaultTokenProviders();\r\n```\r\n\r\nIf I generate and confirm the email in the administration app works, but in identity server app always the same error: InvalidToken\r\n\r\nDid I missed something?\r\n\r\nRegards!"},{"Id":"6792462693","Type":"PullRequestEvent","CreatedAt":"2017-11-01T00:29:45","Actor":"natemcmaster","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1492","RelatedDescription":"Merged pull request \"Pin tool and package versions to make builds more repeatable\" (#1492) at aspnet/Identity","RelatedBody":"Part of aspnet/Universe#575 and aspnet/KoreBuild#239\r\n\r\nThis removes floating versions of dependencies. This includes the korebuild version and versions used by PackageReference's.\r\n\r\nChanges:\r\n\r\n- (script generated) replace PackageLineup with MSBuild variables for dependencies versions"},{"Id":"6792007402","Type":"PullRequestEvent","CreatedAt":"2017-10-31T21:52:20","Actor":"natemcmaster","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1492","RelatedDescription":"Opened pull request \"Pin tool and package versions to make builds more repeatable\" (#1492) at aspnet/Identity","RelatedBody":"Part of aspnet/Universe#575 and aspnet/KoreBuild#239\r\n\r\nThis removes floating versions of dependencies. This includes the korebuild version and versions used by PackageReference's.\r\n\r\nChanges:\r\n\r\n- (script generated) replace PackageLineup with MSBuild variables for dependencies versions"},{"Id":"6786486862","Type":"IssuesEvent","CreatedAt":"2017-10-30T22:12:08","Actor":"Conner05","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1489","RelatedDescription":"Closed issue \"JWT in Request Header is not the same in receiving API\" (#1489) at aspnet/Identity","RelatedBody":"When I make a request to my .Net Core 2 API from my Angular app the JWT is not the same as the one sent in the request header.\r\n\r\n**Startup.cs**\r\n\r\n    \r\n\tpublic class Startup\r\n\t{\r\n\t\tpublic Startup(IHostingEnvironment env)\r\n\t\t{\r\n\t\t\tvar builder = new ConfigurationBuilder()\r\n\t\t\t\t.SetBasePath(env.ContentRootPath)\r\n\t\t\t\t.AddJsonFile(\"appsettings.json\", optional: false, reloadOnChange: true)\r\n\t\t\t\t.AddJsonFile($\"appsettings.{env.EnvironmentName}.json\", optional: true)\r\n\t\t\t\t.AddEnvironmentVariables();\r\n\t\t\t_config = builder.Build();\r\n\t\t}\r\n\r\n\t\tIConfigurationRoot _config;\r\n\r\n\t\t// This method gets called by the runtime. Use this method to add services to the container.\r\n\t\tpublic void ConfigureServices(IServiceCollection services)\r\n\t\t{\r\n\t\t\tservices.AddSingleton(_config);\r\n\t\t\tservices.AddDbContext<ApplicationDbContext>(ServiceLifetime.Transient);\r\n\r\n\t\t\tservices.AddTransient<IEmailSender, AuthMessageSender>();\r\n\t\t\tservices.AddTransient<ISmsSender, AuthMessageSender>();\r\n\r\n\t\t\tservices.AddSingleton<IUserTwoFactorTokenProvider<ApplicationUser>, DataProtectorTokenProvider<ApplicationUser>>();\r\n\r\n\t\t\t// Add application services.\r\n\r\n\t\t\t// Add application repositories.\r\n\r\n\t\t\t// Add options.\r\n\t\t\tservices.AddOptions();\r\n\t\t\tservices.Configure<StorageAccountOptions>(_config.GetSection(\"StorageAccount\"));\r\n\r\n\t\t\t// Add other.\r\n\t\t\tservices.AddSingleton<IHttpContextAccessor, HttpContextAccessor>();\r\n\t\t\tservices.AddTransient<ApiExceptionFilter>();\r\n\r\n\t\t\t// this makes \"this.User\" reflect the properties of the jwt sent in the request\r\n\t\t\tservices.AddTransient<ClaimsPrincipal>(s => s.GetService<IHttpContextAccessor>().HttpContext.User);\r\n\t\t\t\r\n\t\t\tservices.AddIdentity<ApplicationUser, IdentityRole>(options =>\r\n\t\t\t{\r\n\t\t\t\t// set password complexity requirements\r\n\t\t\t\toptions.Password.RequireDigit = true;\r\n\t\t\t\toptions.Password.RequireLowercase = true;\r\n\t\t\t\toptions.Password.RequireUppercase = false;\r\n\t\t\t\toptions.Password.RequireNonAlphanumeric = false;\r\n\t\t\t\toptions.Password.RequiredLength = 6;\r\n\r\n\t\t\t\toptions.Tokens.ProviderMap.Add(\"Default\",\r\n\t\t\t\tnew TokenProviderDescriptor(typeof(IUserTwoFactorTokenProvider<ApplicationUser>)));\r\n\t\t\t}).AddEntityFrameworkStores<ApplicationDbContext>();\r\n\r\n\t\t\tservices.AddAuthentication(options =>\r\n\t\t\t{\r\n\t\t\t\toptions.DefaultScheme = JwtBearerDefaults.AuthenticationScheme;\r\n\t\t\t\toptions.DefaultChallengeScheme = JwtBearerDefaults.AuthenticationScheme;\r\n\t\t\t}).AddJwtBearer(config =>\r\n\t\t\t\t{\r\n\t\t\t\t\tconfig.RequireHttpsMetadata = false;\r\n\t\t\t\t\tconfig.SaveToken = true;\r\n\t\t\t\t\tconfig.TokenValidationParameters = new TokenValidationParameters()\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tValidIssuer = _config[\"Tokens:Issuer\"],\r\n\t\t\t\t\t\tValidAudience = _config[\"Tokens:Audience\"],\r\n\t\t\t\t\t\tValidateIssuerSigningKey = true,\r\n\t\t\t\t\t\tIssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(_config[\"Tokens:Key\"])),\r\n\t\t\t\t\t\tValidateLifetime = true\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\tservices.AddAuthorization(config =>\r\n\t\t\t{\r\n\t\t\t\tconfig.AddPolicy(\"Subscribers\", p => p.RequireClaim(\"Subscriber\", \"True\"));\r\n\t\t\t\tconfig.AddPolicy(\"Artists\", p => p.RequireClaim(\"Artist\", \"True\"));\r\n\t\t\t\tconfig.AddPolicy(\"Admins\", p => p.RequireClaim(\"Admin\", \"True\"));\r\n\t\t\t});\r\n\r\n\t\t\tservices.Configure<DataProtectionTokenProviderOptions>(o =>\r\n\t\t\t{\r\n\t\t\t\to.Name = \"Default\";\r\n\t\t\t\to.TokenLifespan = TimeSpan.FromHours(1);\r\n\t\t\t});\r\n\t\t\tservices.Configure<AuthMessageSenderOptions>(_config);\r\n\r\n\t\t\t// Add framework services.\r\n\t\t\tservices.AddMvc(opt =>\r\n\t\t\t{\r\n\t\t\t\t//opt.Filters.Add(new RequireHttpsAttribute());\r\n\t\t\t}\r\n\t\t\t).AddJsonOptions(opt =>\r\n\t\t\t{\r\n\t\t\t\topt.SerializerSettings.ReferenceLoopHandling = ReferenceLoopHandling.Ignore;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\r\n\t\tpublic void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory)\r\n\t\t{\r\n\t\t\tloggerFactory.AddConsole(_config.GetSection(\"Logging\"));\r\n\t\t\tloggerFactory.AddDebug();\r\n\r\n\t\t\tapp.Use(async (context, next) =>\r\n\t\t\t{\r\n\t\t\t\t// just to check the context.User.Claims on request\r\n\t\t\t\tvar temp = context;\r\n\t\t\t\tawait next();\r\n\t\t\t});\r\n\t\t\tapp.UseAuthentication();\r\n\t\t\tapp.UseMvc();\r\n\t\t}\r\n\t}\r\n\r\nThis is where the token gets issued (on app login)\r\n\r\n**AuthController.cs**\r\n\r\n    private async Task<IList<Claim>> CreateUserClaims(ApplicationUser user)\r\n\t\t{\r\n\t\t\tvar userClaims = await _userManager.GetClaimsAsync(user);\r\n\t\t\tvar newClaims = new[]\r\n\t\t\t{\r\n\t\t\t\tnew Claim(JwtRegisteredClaimNames.Sub, user.UserName),\r\n\t\t\t\tnew Claim(JwtRegisteredClaimNames.Jti, Guid.NewGuid().ToString()),\r\n\t\t\t\tnew Claim(JwtRegisteredClaimNames.NameId, user.Id)\r\n\t\t\t}.Union(userClaims).ToList();\r\n\t\t\treturn newClaims;\r\n\t\t}\r\n\t\tprivate Object CreateToken(IList<Claim> claims)\r\n\t\t{\r\n\t\t\tvar key = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(_config[\"Tokens:Key\"]));\r\n\t\t\tvar creds = new SigningCredentials(key, SecurityAlgorithms.HmacSha256);\r\n\t\t\tvar token = new JwtSecurityToken(\r\n\t\t\t\tissuer: _config[\"Tokens:Issuer\"],\r\n\t\t\t\taudience: _config[\"Tokens:Audience\"],\r\n\t\t\t\tclaims: claims,\r\n\t\t\t\texpires: DateTime.UtcNow.AddDays(29),\r\n\t\t\t\tsigningCredentials: creds\r\n\t\t\t);\r\n\t\t\treturn new\r\n\t\t\t{\r\n\t\t\t\ttoken = new JwtSecurityTokenHandler().WriteToken(token),\r\n\t\t\t\texpiration = token.ValidTo\r\n\t\t\t};\r\n\t\t}\r\n\t\tprivate async Task<Object> CreateToken(ApplicationUser user)\r\n\t\t{\r\n\t\t\tvar claims = await CreateUserClaims(user);\r\n\t\t\tvar token = CreateToken(claims);\r\n\t\t\treturn token;\r\n\t\t}\r\n    [HttpPost(\"token\")]\r\n\t\t[AllowAnonymous]\r\n\t\tpublic async Task<IActionResult> CreateToken([FromBody] CredentialModel model)\r\n\t\t{\r\n\t\t\tvar user = await _userManager.FindByNameAsync(model.UserName);\r\n\t\t\tif (user != null)\r\n\t\t\t{\r\n\t\t\t\tif (_hasher.VerifyHashedPassword(user, user.PasswordHash, model.Password)\r\n\t\t\t\t\t== PasswordVerificationResult.Success)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar token = await CreateToken(user);\r\n\t\t\t\t\treturn Ok(token);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthrow new ApiException(\"Bad email or password.\");\r\n\t\t}\r\n\r\nI have confirmed through the Chrome debugger Network tab that the JWT in my request is the JWT I want the API to get. \r\n\r\n**Because of that I will leave the Angular request code out of this post.**\r\n\r\nHere is a Controller that returns items by UserId\r\n\r\n    [HttpGet]\r\n\t\tpublic async Task<IActionResult> Get()\r\n\t\t{\r\n\t\t\tvar artists = await _manageArtistService.GetAllByUser(this.User);\r\n\t\t\tif (artists == null) return NotFound($\"Artists could not be found\");\r\n\t\t\treturn Ok(artists);\r\n\t\t}\r\n\r\nHere is the service the controller calls\r\n\r\n    public async Task<IEnumerable<ManageArtistView>> GetAllByUser(ClaimsPrincipal user)\r\n\t\t{\r\n\t\t\t// gets all artists of a given user, sorted by artist\r\n\t\t\tvar userId = _userService.GetUserId(user);\r\n\t\t\tvar artists = await _manageArtistRepository.GetAllByUser(userId);\r\n\t\t\treturn artists;\r\n\t\t}\r\n\r\nIn the `UserService.cs` I have attempted a few different means of accessing the current user. I check the `this.User` that was passed from the Controller. \r\n\r\nI also check the current context in `_context` - a Singleton you can see in the `Startup.cs`.\r\n\r\nThere is also the `_caller` which is from this line in `Startup.cs`\r\n\r\n    services.AddTransient<ClaimsPrincipal>(s => s.GetService<IHttpContextAccessor>().HttpContext.User);\r\n\r\nWhen I inspect any of those variables, the `Claims` object **does not** contain the same claims as the JWT that was sent during the request. \r\n\r\n**I have verified the claims do not match by checking the claims at [jwt.io][1].**\r\n\r\nTo be specific, I'll give a scenario:\r\n\r\nI sign into my app with email `user@example.com`. That email is then set as a claim (Sub) as `user.UserName` inside the `CreateUserClaims()` function in the `AuthController.cs`:\r\n\r\n    var newClaims = new[]\r\n\t\t\t{\r\n\t\t\t\tnew Claim(JwtRegisteredClaimNames.Sub, user.UserName),\r\n\t\t\t\tnew Claim(JwtRegisteredClaimNames.Jti, Guid.NewGuid().ToString()),\r\n\t\t\t\tnew Claim(JwtRegisteredClaimNames.NameId, user.Id)\r\n\t\t\t}.Union(userClaims).ToList();\r\n\r\nThen some other properties are set and eventually the token is returned to the client. The client stores it in `localStorage`.\r\n\r\nThe client then makes a request, including the JWT in the header and adds it to the request options like this (Angular service):\r\n\r\n    private headers = new Headers(\r\n\t\t{\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': 'Bearer ' + this.authService.token\r\n\t\t});\r\n\tprivate options = new RequestOptions({ headers: this.headers });\r\n\r\nI check the Header in the Network tab and it contains the JWT - I check it on [jwt.io][1] and it looks good - has the proper email and other claims.\r\n\r\nNow I can logout of the app, sign in as a different user, get a new JWT, and make the request to that **same controller** shown above and the JWT will have the previous email, not the new one that I just signed in as. \r\n\r\nAnd I did go through the same checks, checking the JWT in the Header on the Network tab to ensure the claims contain the new email as the `sub` as well as the other claims. \r\n\r\nSo that means I was issued the proper JWT on the new sign in, but somehow the API is still looking at the old JWT.\r\n\r\nHow crazy is that?\r\n\r\nSomething else I have noticed is that even on that first login (pretend I just started the API with `dotnet run` and then I make my first request to the same controller shown above it will be missing the `nameid` claim. I can go check the JWT that was sent in the Header request and it **does have the `nameid` claim.** So, again, **the api will issue the proper JWT but when I send it back over HTTP in a request the API does not have the same JWT that I sent in the request.**\r\n\r\n**ONE MORE THING**\r\nI log the JWT in the console for simplicity. I went back and found the first one I started using today, at 9am. Its `jti` is the same as the one that is currently in the .net core API. It's now 4:45pm. I have 9 different JTWs in my console between those two times (9am and 4:45pm), all issued from the API. But the API seems to have kept the first one it created this morning - even after I have stopped and started the project numerous times.\r\n\r\n\r\nPlease help me understand what I am doing wrong. I must not be fully understanding how JWTs are handled.\r\n\r\n\r\n  [1]: http://jwt.io"},{"Id":"6785561681","Type":"IssuesEvent","CreatedAt":"2017-10-30T18:44:03","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1487","RelatedDescription":"Closed issue \"Changing required password length\" (#1487) at aspnet/Identity","RelatedBody":"\r\nI’m using the following code:\r\n\r\n`\r\nservices.AddIdentity<ApplicationUser, IdentityRole>(options =>\r\n{\r\n\t// Password settings\r\n\toptions.Password.RequiredLength = 8;\r\n\toptions.Password.RequireNonAlphanumeric = false;\r\n\toptions.Password.RequireUppercase = false;\r\n})\r\n.AddEntityFrameworkStores<ApplicationDbContext>()\r\n.AddDefaultTokenProviders();\r\n`\r\n\r\nWhen i go to register, and click a single letter for password, the validation scripts still warn me about the default required length, which is 6 characters, instead of the new one i set (8 characters).\r\nIf i submit the form, i get the correct warning from the server, for the 8 characters.\r\n"},{"Id":"6783962430","Type":"IssuesEvent","CreatedAt":"2017-10-30T13:56:42","Actor":"pushist1y","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1490","RelatedDescription":"Opened issue \"IdentityConstants\" (#1490) at aspnet/Identity","RelatedBody":"Consider redeclaring `IdentityConstants` class properties as actual constants instead of static readonly fields. \r\n\r\nThese fields are used as authentication schema names. If the application uses more than one auth scheme it can specify the scheme to be used (or multiple) in `Authorize` attribute but the attribute only accepts compile-time constants as parameters. \r\n\r\nI've run into this issue when creating mixed MVC-WebAPI application with double authentication (cookies for MVC pages and JWT for API calls) and i had to declare a constant with value of `\"Identity.Application\"` to be used with `Authorize` attribute. "},{"Id":"6779775284","Type":"IssuesEvent","CreatedAt":"2017-10-29T04:42:14","Actor":"mkArtak","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1444","RelatedDescription":"Closed issue \"Email confirmation token becomes invalid after redeployment\" (#1444) at aspnet/Identity","RelatedBody":"Hi.\r\n\r\nI have an asp.net core 2 web application which is hosted in Azure AppService.\r\nWhen a new user signs up the application sends an email confirmation request to the user (as an email), with a link in it for the user to click.\r\nThe link uses a token generated using the following method:\r\n`UserManager<TUser>.GenerateEmailConfirmationTokenAsync(TUser user)`\r\n\r\nWhen user clicks the link, the AccountController handles that request and tries to find the user given the email address and the token:\r\n`IdentityResult result = await this.userManager.ConfirmEmailAsync(user, code);`\r\n\r\nHowever, if after generating the code a new deployment had happened, the ConfirmEmailAsync method would not be able to find the user with that code, so the confirmation request results in an error.\r\n\r\n\r\nHere is the list of relevant packages my project references:\r\n```\r\n<PackageReference Include=\"AWSSDK.SimpleNotificationService\" Version=\"3.3.0.21\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Authentication.Facebook\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Authentication.Google\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Authentication.MicrosoftAccount\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Authentication.Twitter\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Identity\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.StaticFiles\" Version=\"2.0.0\" />\r\n```\r\n"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"6803562069","Type":"IssuesEvent","CreatedAt":"2017-11-03T01:57:35","Actor":"suryagh","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2146","RelatedDescription":"Closed issue \"Mac: The specified SDK version [2.1.0-preview1-007042] from global.json [...] not found\" (#2146) at aspnet/KestrelHttpServer","RelatedBody":"On my Mac, I had an older version .net sdk and KestrelHttpServer cloned and compiled few months back.\r\n\r\nScenario, \r\n1. Today, installed latest .net sdk from (https://www.microsoft.com/net/learn/get-started/macos)\r\n 1.b) Is this the right approach? Should I be upgrading the `.net sdk`? Or, first uninstall the older `.net sdk`?\r\n2. Pulled the latest code from the `KestrelHttpServer` github repo\r\n3. Ran `./build.sh` on the latest `/KestrelHttpServer` with not errors\r\n4. Now, when I run `dotnet run` from the `KestrelHttpServer/samples/SampleApp`, I get following error:\r\n\r\n```\r\nThe specified SDK version [2.1.0-preview1-007042] from global.json [/Users/.../KestrelHttpServer/global.json] not found; install specified SDK version\r\nDid you mean to run dotnet SDK commands? Please install dotnet SDK from:\r\n  http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n```"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"6803029813","Type":"PullRequestEvent","CreatedAt":"2017-11-02T22:32:28","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1752","RelatedDescription":"Opened pull request \"Dispatch DocumentStructureChanged event on foreground thread.\" (#1752) at aspnet/Razor","RelatedBody":"- Had to add extra logic to track document structure changes so listeners could know if an event was on its way or not.\r\n- Added and fixed some tests.\r\n\r\n#1748"},{"Id":"6797822980","Type":"PullRequestEvent","CreatedAt":"2017-11-02T01:16:03","Actor":"natemcmaster","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1745","RelatedDescription":"Merged pull request \"Pin tool and package versions to make builds more repeatable\" (#1745) at aspnet/Razor","RelatedBody":"Part of https://github.com/aspnet/Universe/issues/575 and https://github.com/aspnet/KoreBuild/issues/239\r\n\r\nThis removes floating versions of dependencies. This includes the korebuild version and versions used by PackageReference's.\r\n\r\nDue to Razor's unique requirement for multiple versions of Roslyn packages, I've prefixed any of the 'dev' versions with VSIX_. These versions are also set here so our external dependency analysis doesn't fail in Universe. https://github.com/aspnet/Universe/blob/dev/build/dependencies.props#L50-L97\r\n\r\nOne more change: I moved a couple properties for the VS for Mac addin up to the version.props file. As much as possible, we're trying to make version.props the only file you need to manipulate to change the versions of build artifacts."}],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"6760798601","Type":"IssuesEvent","CreatedAt":"2017-10-24T22:00:58","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/67","RelatedDescription":"Closed issue \"External Logins does not set the Email\" (#67) at aspnet/Templates","RelatedBody":"- Enable Facebook Login\n- Login using Facebook for the first time\n- Email field is blank. It should be set from what we got from Facebook\n"},{"Id":"6760789807","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:58:48","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/86","RelatedDescription":"Closed issue \"Identity: Consider less generic name for ManageController\" (#86) at aspnet/Templates","RelatedBody":"Manage is a very generic name and you would probably expect http://abcdefg/Manage to be about managing something from your applications business domain rather than user accounts.\n\nManageAccount would probably be a better name.\n"},{"Id":"6760785159","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:57:37","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/115","RelatedDescription":"Closed issue \"Need more templates\" (#115) at aspnet/Templates","RelatedBody":"MVC 6 project templates should include a test project template. And the main ASP.NET 5 Preview Templates / Web Application or ... / Empty templates should have a few more sub-options, enabling for example addition and removal of XML support, creation of a minimal MVC project, or adding in EF (without choosing Individual User Accounts authentication).\n\nHopefully this will allow the new project dialogue to enable the options shown below -- plus a few options specific to MVC 6.\n![disabled project features](https://cloud.githubusercontent.com/assets/6431421/8257821/2a76a606-1665-11e5-8e75-cdb21473f6a1.png)\n"},{"Id":"6760779940","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:56:18","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/104","RelatedDescription":"Closed issue \"OrgAuth: Account Controller should return void\" (#104) at aspnet/Templates","RelatedBody":"Since https://github.com/aspnet/Mvc/issues/2409 is fixed. We should change the AccountController for SSO/ MultiOrg to return void\n"},{"Id":"6760777806","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:46","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/120","RelatedDescription":"Closed issue \"Template feedback\" (#120) at aspnet/Templates","RelatedBody":"Porting from MVC repo https://github.com/aspnet/Mvc/issues/2637\n"},{"Id":"6760775251","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:10","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/137","RelatedDescription":"Closed issue \"Need a SPA template\" (#137) at aspnet/Templates","RelatedBody":""},{"Id":"6760770959","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:54:08","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/365","RelatedDescription":"Closed issue \"Poor user and dev experience in Identity email confirmation\" (#365) at aspnet/Templates","RelatedBody":"There are two issues using the default template for identity when using email confirmation.\n\nFollowing the guide here: http://docs.asp.net/en/latest/security/authentication/accconfirm.html\n\nPoor user experience: When you click \"Register\" it sends the email off, but just redirects the user to the Home controller. Redirecting to something else to indicate they have to confirm their account would be a better example. Perhaps the default template should have such a view OOTB.\n\nPoor dev experience: When logging in with an external account (lets say Facebook) if the account doesn't exist you get thrown into AccountController.ExternalLoginConfirmation, great. This screen requires an email, so you complete the registration then you're logged in but never shoots off the email confirmation link here. Perhaps a commented out section in this action to deal with this would improve the dev experience here.\n"},{"Id":"6760770378","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:59","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/382","RelatedDescription":"Closed issue \"MVC Template Should Apply ResponseCache Attribute to Error Action\" (#382) at aspnet/Templates","RelatedBody":"HomeController.Error() should be updated:\n\n```\n    [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]\n    public IActionResult Error()\n    {\n        return View();\n    }\n```\n\nThere is no good scenario where you would want errors to be cached, either on the client or via a proxy, or to have error information stored in such caches (especially if it might contain sensitive information in stack traces, etc.).\n"},{"Id":"6760769801","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:51","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/406","RelatedDescription":"Closed issue \"Add a flow for changing email in the Manage page\" (#406) at aspnet/Templates","RelatedBody":"Porting from ASP.NET Identity repo https://github.com/aspnet/Identity/issues/727\n"},{"Id":"6760769204","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:42","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/423","RelatedDescription":"Closed issue \"Don't create Project_Readme.html for ASP.NET 5 Empty\" (#423) at aspnet/Templates","RelatedBody":"I created an empty project for both ASP.NET 4 and ASP.NET 5. The ASP.NET 5 project had a Project_Readme.html and the ASP.NET 4 one did not. I'm not aware if that was on purpose or not, but we should be consistent with the empty projects. I think we should not add the Project_Readme.html for all Empty projects.\n"},{"Id":"6760768174","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:28","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/444","RelatedDescription":"Closed issue \"Support On-Premises option for Work & School Accounts\" (#444) at aspnet/Templates","RelatedBody":"Support this for Web APIs and Web Apps.\n"},{"Id":"6760767634","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:19","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/451","RelatedDescription":"Closed issue \"ValidationSummary.All should be replaced with ModelOnly\" (#451) at aspnet/Templates","RelatedBody":"All the views in the Accounts folder use\n`<div asp-validation-summary=\"ValidationSummary.All\" class=\"text-danger\"></div>`\n\nThey should just use \n`<div asp-validation-summary=\"ValidationSummary.ModelOnly\" class=\"text-danger\"></div>`\n\nSo you get each error twice. \n\n![image](https://cloud.githubusercontent.com/assets/3605364/13896326/ae916ee2-ed2b-11e5-8bf5-f9ad5246e82c.png)\n"},{"Id":"6760767057","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:11","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/490","RelatedDescription":"Closed issue \"Show external providers on the Register page\" (#490) at aspnet/Templates","RelatedBody":"The individual auth template has a login page and a register page. Login shows a password login and external providers. Register only shows a password login. Register should also show external providers, as this is where new users will go to sign-up.\n"},{"Id":"6760766431","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:02","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/492","RelatedDescription":"Closed issue \"Add tests to project templates\" (#492) at aspnet/Templates","RelatedBody":"Hi,\n\nTesting is unfortunately a part of most of our jobs. I don't know if it is already planned/done but in visual studio when I create a new ASP.NET MVC 6 (or is it Core 1 ? Not sure) there are no tests. This is particularly annoying for the template including user accounts. I spent a few hours writing tests for the included templates.\n\nI was wondering whether other people would be interested ?\n"}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"6762343502","Type":"IssuesEvent","CreatedAt":"2017-10-25T07:30:40","Actor":"Pichasepong","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1060","RelatedDescription":"Opened issue \"Problems .net core 1.0.1 vs 2015 tooling preview 2 error logs file.Help Me. \" (#1060) at aspnet/Tooling","RelatedBody":"Problems installing on Server 2012 R2 ,Dot net core 1.0.1 vs 2015 tooling preview 2 error logs file.\r\n\r\n![product_dotnetcoreerror](https://user-images.githubusercontent.com/12063904/31985990-040a5f72-b991-11e7-9356-ddd06160a87c.jpg)\r\n"},{"Id":"6704265290","Type":"IssuesEvent","CreatedAt":"2017-10-11T19:06:00","Actor":"StefH","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/877","RelatedDescription":"Closed issue \"VS 2017 RC : How to define a multi framework project ?\" (#877) at aspnet/Tooling","RelatedBody":"I've this **csproj** file:\r\n\r\n```xml\r\n<Project ToolsVersion=\"15.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" />\r\n  <PropertyGroup>\r\n    <TargetFrameworks>netstandard1.3</TargetFrameworks>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Compile Include=\"**\\*.cs\" />\r\n    <EmbeddedResource Include=\"**\\*.resx\" />\r\n  </ItemGroup>\r\n  <ItemGroup Condition=\" '$(TargetFramework)' == 'netstandard1.3' \">\r\n    <PackageReference Include=\"JetBrains.Annotations\">\r\n      <Version>10.2.1</Version>\r\n    </PackageReference>\r\n    <PackageReference Include=\"NETStandard.Library\">\r\n      <Version>1.6.1</Version>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Microsoft.NET.Sdk\">\r\n      <Version>1.0.0-alpha-20161104-2</Version>\r\n      <PrivateAssets>All</PrivateAssets>\r\n    </PackageReference>\r\n    <PackageReference Include=\"Newtonsoft.Json\">\r\n      <Version>9.0.1</Version>\r\n    </PackageReference>\r\n  </ItemGroup>\r\n  <Import Project=\"$(MSBuildToolsPath)\\Microsoft.CSharp.targets\" />\r\n</Project>\r\n```\r\n\r\nWhich produces this error:\r\n```bash\r\nRestoring NuGet packages...\r\nTo prevent NuGet from restoring packages during build, open the Visual Studio Options dialog, click on the Package Manager node and uncheck 'Allow NuGet to download missing packages during build.'\r\nError occurred while restoring NuGet packages: Invalid restore input. Invalid target framework 'unsupported'. Input files: C:\\temp\\ClassLibrary1\\ClassLibrary1.csproj.\r\n1>------ Rebuild All started: Project: ClassLibrary1, Configuration: Debug Any CPU ------\r\n1>Build started 2016-11-23 07:43:43.\r\n1>Target DispatchToInnerBuilds:\r\n1>  Target _CheckForInvalidConfigurationAndPlatform:\r\n1>    C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Microsoft.Common.CurrentVersion.targets(733,5): error : The OutputPath property is not set for project 'ClassLibrary1.csproj'.  Please check to make sure that you have specified a valid combination of Configuration and Platform for this project.  Configuration='Debug'  Platform='AnyCPU'.  This error may also appear if some other project is trying to follow a project-to-project reference to this project, this project has been unloaded or is not included in the solution, and the referencing project does not build using the same or an equivalent Configuration or Platform.\r\n1>  Done building target \"_CheckForInvalidConfigurationAndPlatform\" in project \"ClassLibrary1.csproj\" -- FAILED.\r\n1>\r\n1>  Done building project \"ClassLibrary1.csproj\" -- FAILED.\r\n1>\r\n1>Build FAILED.\r\n```"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6780432155","Type":"IssuesEvent","CreatedAt":"2017-10-29T14:10:51","Actor":"smitpatel","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/276","RelatedDescription":"Closed issue \"Improved end to end testing support for MVC applications: Typo?\" (#276) at aspnet/Announcements","RelatedBody":"Hi @javiercn, I think the constructor name is wrong in the first example code block in #275\r\n\r\nShouldn't it be \r\n```\r\n        public MyApplicationFunctionalTests (WebApplicationTestFixture<Startup> fixture)\r\n        {\r\n            Client = fixture.Client;\r\n        }\r\n```\r\n\r\n"},{"Id":"6779929600","Type":"IssuesEvent","CreatedAt":"2017-10-29T07:24:18","Actor":"searus","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/276","RelatedDescription":"Opened issue \"Improved end to end testing support for MVC applications: Typo?\" (#276) at aspnet/Announcements","RelatedBody":"Hi, I think the constructor name is wrong in the first example code block in #275\r\n\r\nShouldn't it be \r\n```\r\n        public MyApplicationFunctionalTests (WebApplicationTestFixture<Startup> fixture)\r\n        {\r\n            Client = fixture.Client;\r\n        }\r\n```\r\n\r\n"},{"Id":"6777426880","Type":"IssuesEvent","CreatedAt":"2017-10-27T22:12:32","Actor":"javiercn","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/275","RelatedDescription":"Opened issue \"Improved end to end testing support for MVC applications\" (#275) at aspnet/Announcements","RelatedBody":"# Improved end to end testing support for MVC applications\r\n\r\nIn this release we have created a new package Microsoft.AspNetCore.Mvc.Testing to help streamline\r\nend to end testing of MVC applications using TestServer.\r\n\r\nThis package takes care of some of the typical pitfalls users run into when trying to test MVC applications\r\nusing TestServer.\r\n* It copies the .deps file from your project into the test assembly bin folder.\r\n* It sets the content root the application's project root so that static files and views can be found.\r\n* It provides a class `WebApplicationTestFixture<TStartup>` that streamlines the bootstrapping of your app on\r\nTestServer.\r\n\r\n## Sample end to end in memory test using xUnit\r\n\r\n```csharp\r\nusing Xunit;\r\n\r\nnamespace MyApplication.FunctionalTests\r\n{\r\n    public class MyApplicationFunctionalTests : IClassFixture<WebApplicationTestFixture<Startup>>\r\n    {\r\n        public TempDataInSessionTest(WebApplicationTestFixture<Startup> fixture)\r\n        {\r\n            Client = fixture.Client;\r\n        }\r\n\r\n        public HttpClient Client { get; }\r\n\r\n        [Fact]\r\n        public async Task GetHomePage()\r\n        {\r\n            // Arrange & Act\r\n            var response = await Client.GetAsync(\"/\");\r\n\r\n            // Assert\r\n            Assert.Equal(HttpStatusCodes.OK, response.StatusCode);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n## Important notes\r\n\r\n### Shadow copying needs to be disabled\r\nFor end to end in-memory tests to work properly, shadow copying needs to be disabled on your test framework of choice, as it causes the tests to execute in a different folder than the output folder.\r\nFor instructions on how to do this on xUnit see https://xunit.github.io/docs/configuring-with-json.html.\r\n\r\n### Your app needs to have a CreateWebHostBuilderMethod on the Program class\r\nBy convention our ```WebApplicationTestFixture<TStartup>``` tries to find a method with the signature ```public static IWebHostBuilder CreateWebHostBuilder(string [] args)``` on the entry point class of the assembly where Startup is located. (Typically your Program class) If you don't have this method ```WebApplicationTestFixture<TStartup>``` won't be able to initialize your app in the same way it is done on a normal run. You can configure the WebHostBuilder yourself by overriding CreateWebHostBuilder on ```WebApplicationTestFixture<TStartup>```.\r\n\r\n### The test infrastructure needs to know the content root of the application under test\r\nTo set the content root for your app, ```WebApplicationTestFixture<TStartup>``` first locate your solution file ```(.sln)``` and then make a guess about where project might be. The Content Root of the application is defined by convention as ```<<SolutionFolder>>/<<ProjectAssemblyName>>```. For example, based on the folder structure defined below, the content root of the application is defined as ```c:\\work\\MyApp```. This is important because if not set correctly to the root folder of your application under test all views and static files will not be found.\r\n\r\n```\r\nc:/work/\r\n    MyApp.sln\r\n    MyApp/MyApp.csproj\r\n    MyApp.FunctionalTests/MyApp.FunctionalTests.csproj\r\n```\r\n\r\nThe process for determining the folder to use as the content root when running the tests is the following:\r\n* ```WebApplicationTestFixture<TStartup>``` starts on the bin folder of the test project, in the example above ```c:/work/MyApp.FunctionalTests/MyApp.FunctionalTests/bin/<<Configuration>>/<<Framework>>```\r\n* It navigates to the parent folder until it finds a ```.sln``` file.\r\n* It appends ```<<AssemblyName>>``` to the folder in which it found the ```.sln``` file and set that as the content root.\r\n\r\nIf you happen to be using a different convention for the layout of your projects, you can inherit from WebApplicationTestFixture and pass in the relative path from your solution to the application under test when calling the constructor. For example ```\"/src/MyApp\"```\r\n\r\n```csharp\r\npublic class MyAppTestFixture<TStartup> : WebApplicationTestFixture<TStartup> where TStartup : class\r\n{\r\n    public MyAppTestFixture(string solutionRelativePath)\r\n        : base(\"/src/MyApp\") { }\r\n}\r\n```"},{"Id":"6754805124","Type":"IssuesEvent","CreatedAt":"2017-10-23T21:16:00","Actor":"Eilon","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/274","RelatedDescription":"Opened issue \"ASP.NET/EF Core 2.0.3 patch pre-release test feed\" (#274) at aspnet/Announcements","RelatedBody":"Hi, we now have a public test feed that you can use to try out the ASP.NET/EF Core 2.0.3 patch!\r\n\r\nYou can test this pre-release patch by adding the following feed to your app's or machine's NuGet.config file:\r\n* `https://dotnet.myget.org/F/aspnet-2-0-2-october2017-patch-public/api/v3/index.json`\r\n   * ![image](https://user-images.githubusercontent.com/202643/31913542-4757d2a0-b7fc-11e7-9bf7-7157bd18a6ca.png)\r\n   * (please ignore the *name* of the feed; it is incorrect 😦)\r\n\r\n## Update your project\r\n1. Open an existing .NET Core 2.0 project's CSPROJ file\r\n2. Update the version of the `Microsoft.AspNetCore.All` package from `2.0.0` to `2.0.3-*`\r\n3. Update the version of all the other `<PackageReference>` items from `2.0.0` to `2.0.1-*` (*Note: This is a different version than the `.All` package!*)\r\n4. Add the following element to the `<PropertyGroup>` at the top of the CSPROJ file:\r\n   * `<NoWarn>$(NOWARN);NU1605</NoWarn>`\r\n5. From a command line window (terminal), run `dotnet restore` to restore the pre-release patch packages into the project (or restore packages from your IDE, such as Visual Studio 2017)\r\n6. You should now be able to run your project with the pre-release patch packages\r\n\r\n## Additional resources\r\n* More info on updating NuGet packages is available here:\r\n   * https://docs.microsoft.com/en-us/nuget/consume-packages/reinstalling-and-updating-packages\r\n* The full list of fixes and changes made in this patch are available using this query:\r\n   * https://github.com/search?utf8=%E2%9C%93&q=org%3Aaspnet+is%3Aissue+is%3Aclosed+milestone%3A2.0.3&type=Issues\r\n* You can browse the list of updated packages on this gallery page:\r\n   * https://dotnet.myget.org/gallery/aspnet-2-0-2-october2017-patch-public\r\n\r\n## Feedback\r\nWe are looking for feedback on this patch. We'd like to know if you have any issues with this patch by updating your apps and libraries to the latest packages and seeing if it fixes the issues you've had, or if it introduces any new issues. If you have any issues or questions, please reply on the [discussion thread](XYZ) to let us know as soon as possible.\r\n\r\n## What's next\r\nWe will post an update when the patch is publicly available on [NuGet.org](https://nuget.org).\r\n\r\nThanks,\r\nEilon"},{"Id":"6704873205","Type":"IssuesEvent","CreatedAt":"2017-10-11T21:19:35","Actor":"jbagga","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/273","RelatedDescription":"Opened issue \"Use ContractResolver to create paths from expressions for json-patch\" (#273) at aspnet/Announcements","RelatedBody":"`JsonPatchDocumentOfT.cs` will use the `ContractResolver` provided to get paths instead of forcing to lower case.\r\n\r\nAddresses aspnet/JsonPatch#90.\r\n\r\nSee aspnet/JsonPatch for discussion.\r\n"},{"Id":"6692649574","Type":"IssuesEvent","CreatedAt":"2017-10-09T17:08:31","Actor":"Tratcher","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/271","RelatedDescription":"Opened issue \"WsFederation 2.0.0-preview1 out of band release\" (#271) at aspnet/Announcements","RelatedBody":"WsFederation preview support is now available for ASP.NET Core 2.0.0. The Microsoft.AspNetCore.Authentication.WsFederation 2.0.0-preview1 package is available at https://www.nuget.org/packages/Microsoft.AspNetCore.Authentication.WsFederation/. This is a standalone preview that targets netstandard2.0 and should work with existing ASP.NET Core 2.0.0 applications (.NET Core 2.0 or .NET 4.6.1). A non-preview ASP.NET Core 2.0.0 compatible package will follow once we’ve addressed your feedback.\r\n \r\nThe code is available at https://github.com/aspnet/security/tree/rel/2.0.0-ws-preview1 and issues can be filed at https://github.com/aspnet/security/issues. Please give us a 👍 from the reactions menu on the linked discussion post if you have successfully used this component and are ready for the final release.\r\n \r\nThis component is a port from Microsoft.Owin.Security.WsFederation and uses many of the same mechanics. It has also been updated to integrate with ASP.NET Core 2.0’s authentication model. See the samples below.\r\n \r\nAside from updating the usage pattern to match ASP.NET Core, there are also some functional changes to be aware of.\r\nA.\tThis component no longer checks every form post request for sign-in messages by default. Sign-in callbacks are restricted to the \"/signin-wsfed\" path by default. The CallbackPath can be changed to the application root “/” used by some auth providers if you also enable SkipUnrecognizedRequests to allow sharing that request path with other components.\r\nB.\tThis component no longer allows unsolicited logins by default. That WsFederation protocol feature is susceptible to XSRF attacks. See the AllowUnsolicitedLogins option to opt into that feature if your application requires it.\r\n\r\nSee https://github.com/aspnet/Security/issues/1473 for discussion.\r\n \r\nSamples:\r\n \r\nFor applications only using WsFederation (similar to using OpenIdConnect):\r\n \r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddAuthentication(sharedOptions =>\r\n            {\r\n                sharedOptions.DefaultScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n                sharedOptions.DefaultSignInScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n                sharedOptions.DefaultChallengeScheme = WsFederationDefaults.AuthenticationScheme;\r\n            })\r\n            .AddWsFederation(options =>\r\n            {\r\n                options.Wtrealm = Configuration[\"wsfed:realm\"];\r\n                options.MetadataAddress = Configuration[\"wsfed:metadata\"];\r\n            })\r\n            .AddCookie();\r\n        }\r\n \r\n        public void Configure(IApplicationBuilder app)\r\n        {\r\n           app.UseAuthentication();\r\n \r\n                         // …\r\n        }\r\n \r\nFor applications using WsFederation with Identity:\r\n \r\n            services.AddAuthentication()\r\n                .AddWsFederation(options =>\r\n                {\r\n                    options.Wtrealm = Configuration[\"wsfed:realm\"];\r\n                    options.MetadataAddress = Configuration[\"wsfed:metadata\"];\r\n                });\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"917884946324250624","CreatedAt":"2017-10-10T22:49:59+00:00","UserScreenname":"aspnet","Text":"The #aspnet Community Standup starts now - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":9,"RawContent":null},{"Id":"917877107904036865","CreatedAt":"2017-10-10T22:18:50+00:00","UserScreenname":"aspnet","Text":"Join us in a half hour (3:45 PM Pacific) for this week's #aspnet Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"915262407743647744","CreatedAt":"2017-10-03T17:08:57+00:00","UserScreenname":"aspnet","Text":"We're live at https://t.co/4Ioo9jNSN2 for the exciting #SignalR deep dive. Join us now!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":34,"FavoriteCount":22,"RawContent":null},{"Id":"915242491774869504","CreatedAt":"2017-10-03T15:49:49+00:00","UserScreenname":"aspnet","Text":"Join us for some #SignalR Core demos at 10 AM PDT (UTC-7) on #ASPNET Community Standup w/ SignalR dev @moozzyk.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":57,"FavoriteCount":26,"RawContent":null},{"Id":"912821323675529216","CreatedAt":"2017-09-26T23:28:57+00:00","UserScreenname":"aspnet","Text":"This week's community links from the #ASPNET Community Standup https://t.co/M37VVhlzcZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":8,"RawContent":null},{"Id":"912799120355581952","CreatedAt":"2017-09-26T22:00:43+00:00","UserScreenname":"aspnet","Text":"Join us at 3:45 PM Pacific (UTC+8) for the #ASPNET Community Standup. #dotNetConf recap, @SignalR and more.\nhttps://t.co/sgzsUBZksP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":10,"RawContent":null}]}},"RunOn":"2017-11-06T05:30:10.0686034Z","RunDurationInMilliseconds":8513}