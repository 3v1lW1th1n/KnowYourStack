{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework 4.7.1 Runtime and Compiler Features","PublishedOn":"2017-09-28T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post describes the new Runtime, Compiler and Base Class Library (BCL) improvements in the .NET Framework 4.7.1. You can try out these features by downloading the Developer Pack, described in the Welcome to the .NET Framework 4.7.1 Early Access blog post.  BCL &#8211; .NET Standard 2.0 Support .NET Framework 4.7.1 has built-in support for .NET Standard 2.0. .NET Framework 4.7.1... <a aria-label=\"read more about .NET Framework 4.7.1 Runtime and Compiler Features\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/28/net-framework-4-7-1-runtime-and-compiler-features/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/28/net-framework-4-7-1-runtime-and-compiler-features/","RawContent":null},{"Title":"Build a web service with F# and .NET Core 2.0","PublishedOn":"2017-09-26T00:00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Earlier this year, I wrote about an update to the roadmap for F# and .NET Core. I had mentioned that there were a number of things you could build with F# and .NET Core today, such as web services. In this post, I&#8217;ll walk through building a web service with F# and .NET Core 2.0... <a aria-label=\"read more about Build a web service with F# and .NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/26/build-a-web-service-with-f-and-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/26/build-a-web-service-with-f-and-net-core-2-0/","RawContent":null},{"Title":".NET Framework September 2017 Preview of Quality Rollup","PublishedOn":"2017-09-25T00:00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the September 2017 Preview of Quality Rollup. This type of rollup is intended for businesses that want to the preview or use quality improvements as soon as they are available. This update applies to Windows 10 Update 1607 (Anniversary Update) and to Windows Server 2016. FYI: The KBs for Windows Server 2016... <a aria-label=\"read more about .NET Framework September 2017 Preview of Quality Rollup\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/25/net-framework-september-2017-preview-of-quality-rollup/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/25/net-framework-september-2017-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Core September 2017 Update — macOS High Sierra Support","PublishedOn":"2017-09-22T00:00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We released .NET Core updates for macOS High Sierra Support and additional quality fixes. You can download and install the update for Windows, macOS and Linux. This update is for .NET Core 1.0 and 1.1. The initial .NET Core 2.0 release includes similar improvements, so is not being updated with this release. Downloads .NET Core 1.0.7 .NET... <a aria-label=\"read more about .NET Core September 2017 Update &#8212; macOS High Sierra Support\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/22/net-core-september-2017-update-macos-high-sierra-support/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/22/net-core-september-2017-update-macos-high-sierra-support/","RawContent":null},{"Title":".NET Framework 4.7.1 Accessibility and WPF Improvements","PublishedOn":"2017-09-21T00:00:00","CommentsCount":16,"FacebookCount":0,"Summary":"This post describes the new WPF and accessibility features and improvements in .NET Framework 4.7.1. You can try out these features by downloading the Developer Pack, described in the Welcome to the .NET Framework 4.7.1 Early Access blog post. Accessibility improvements .NET Framework 4.7.1 brings in a lot of accessibility improvements across different libraries to align with the... <a aria-label=\"read more about .NET Framework 4.7.1 Accessibility and WPF Improvements\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/21/net-framework-4-7-1-accessibility-and-wpf-improvements/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/21/net-framework-4-7-1-accessibility-and-wpf-improvements/","RawContent":null},{"Title":"Watch .NET Conf 2017!","PublishedOn":"2017-09-19T00:00:00","CommentsCount":12,"FacebookCount":0,"Summary":".NET Conf starts today. It&#8217;s a three-day, free, virtual and global .NET conference. All you need to do is point your web browser to channel9.msdn.com, starting at 8AM Pacific Time. We have a packed agenda with a great set of expert .NET developers. What will you learn? Many things. You will learn to build for... <a aria-label=\"read more about Watch .NET Conf 2017!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/19/watch-net-conf-2017/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/19/watch-net-conf-2017/","RawContent":null},{"Title":".NET Framework 4.7.1 ASP.NET and Configuration features","PublishedOn":"2017-09-14T00:00:00","CommentsCount":24,"FacebookCount":0,"Summary":"This post describes the new ASP.NET, Configuration and System.Messaging features and improvements in the .NET Framework 4.7.1. More information on the build these features are available in and how to get the Developer Pack is covered in the Welcome to the .NET Framework 4.7.1 Early Access blog post. Configuration builders Configuration builders allow developers to inject and build... <a aria-label=\"read more about .NET Framework 4.7.1 ASP.NET and Configuration features\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/13/net-framework-4-7-1-asp-net-and-configuration-features/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/13/net-framework-4-7-1-asp-net-and-configuration-features/","RawContent":null},{"Title":".NET Framework September 2017 Security and Quality Rollup","PublishedOn":"2017-09-13T00:00:00","CommentsCount":21,"FacebookCount":0,"Summary":"Last Updated: 2017.09.21. Today, we are releasing the September 2017 Security and Quality Rollup and Security Only Update. This update applies to Windows 7 and later client versions and Windows Server 2008 and later server versions. This update has known issues. Please see them at the bottom of the update. Security This release contains the... <a aria-label=\"read more about .NET Framework September 2017 Security and Quality Rollup\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/12/net-framework-september-2017-security-and-quality-rollup/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/12/net-framework-september-2017-security-and-quality-rollup/","RawContent":null},{"Title":"The week in .NET – Let’s Encrypt Web App Renewer, Seattle CodeCamp 2017","PublishedOn":"2017-08-29T00:00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Previous posts: Project File Tools, Maira Wenzel, Mixed Reality in Miami .NET Core 2.0, ASP.NET Core 2.0, Entity Framework 2.0, Visual Studio 2017 Update 3, enterprise Entity Framework Core in Boston Rezoom.SQL, Protobuf in Orlando Open-source project of the week: Let&#8217;s Encrypt Azure Web App Renewer There&#8217;s a growing consensus that all web sites should... <a aria-label=\"read more about The week in .NET &#8211; Let&#8217;s Encrypt Web App Renewer, Seattle CodeCamp 2017\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/29/the-week-in-net/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/29/the-week-in-net/","RawContent":null},{"Title":"UWP & .NET Standard 2.0: A preview is now available!","PublishedOn":"2017-08-25T00:00:00","CommentsCount":50,"FacebookCount":0,"Summary":"Today, we released the first Preview of Visual Studio 2017 version 15.4. This includes an update to the UWP tooling that supports .NET Standard 2.0. In this post, I&#8217;ll outline what this means for UWP development with .NET. Prerequisites In order to use .NET Standard 2.0 in UWP, you need to target Fall Creators Update (FCU)... <a aria-label=\"read more about UWP &#38; .NET Standard 2.0: A preview is now available!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6650451504","Type":"IssuesEvent","CreatedAt":"2017-09-28T16:22:10","Actor":"hughbe","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/87","RelatedDescription":"Opened issue \"PRs to repos outside of dotnet/* pattern should not always thank for signing the CLA\" (#87) at dotnet/home","RelatedBody":"For example: https://github.com/mono/libgdiplus/pull/109\r\n\r\nI have already signed the CLI. On the dotnet/corefx etc. projects, I don't get the extra message:\r\n\r\n```\r\n@hughbe,\r\nThanks for having already signed the Contribution License Agreement. Your agreement was validated by .NET Foundation. We will now review your pull request.\r\nThanks,\r\n.NET Foundation Pull Request Bot\r\n```\r\n\r\nJust a small gripe, as I get an email each time I do this. I've seen this in Mono and Xunit.\r\n\r\n/cc @karelz I know this is unrelated to corefx but maybe you know the right person/repo to route this to :D\r\n"},{"Id":"6515896963","Type":"PullRequestEvent","CreatedAt":"2017-08-26T22:20:18","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/85","RelatedDescription":"Merged pull request \"Create telerik-ui-for-uwp.md\" (#85) at dotnet/home","RelatedBody":"Submission of Telerik UI for UWP"},{"Id":"6515896506","Type":"PullRequestEvent","CreatedAt":"2017-08-26T22:19:49","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/86","RelatedDescription":"Merged pull request \"Corrected list of maintainers\" (#86) at dotnet/home","RelatedBody":""},{"Id":"6483200432","Type":"PullRequestEvent","CreatedAt":"2017-08-18T19:58:41","Actor":"gep13","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/86","RelatedDescription":"Opened pull request \"Corrected list of maintainers\" (#86) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6645912196","Type":"IssuesEvent","CreatedAt":"2017-09-27T19:47:08","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/32","RelatedDescription":"Opened issue \".NET Framework 4.7.1 provides built-in support for .NET Standard 2.0\" (#32) at dotnet/announcements","RelatedBody":"## Summary\r\n\r\n.NET Framework 4.7.1 will have built-in support for .NET Standard 2.0. This means that you don't have to deploy any additional files or use binding redirects to use .NET Standard 2.0 libraries.\r\n\r\nFor a demo, check out [this video][video].\r\n\r\n## Details\r\n\r\nWhile libraries targeting [.NET Standard 2.0][ns20post] are can be consumed by applications and libraries [targeting .NET Framework 4.6.1][nstable] and higher, not all files that are required for .NET Standard libraries were part of .NET Framework 4.6.1. In fact, .NET Framework 4.6.1 was shipped before .NET Standard 2.0 was even designed. That's why building an application targeting .NET Framework 4.6.1 (as well as 4.6.2 and 4.7) will have to deploy additional files.\r\n\r\n* If you use **Visual Studio 2017 15.3** or higher, these files are automatically copied to the application's output folder.\r\n\r\n* If you use **Visual Studio 2015 and [use NuGet 3.6][nuget36]**, we'll prompt you to install a [support package][vs2015support] which will handle copying the files to the output directory.\r\n\r\nStarting with .NET Framework 4.7.1 these files no longer have to be deployed with the application -- they are built right into the .NET Framework itself.\r\n\r\n.NET Framework 4.7.1 also adds[about 200 missing APIs][missingapis] that were part of .NET Standard 2.0 but not actually implemented by .NET Framework 4.6.1, 4.6.2 or 4.7.\r\n\r\nThis also removes the need for [binding redirects][netfx-issues] when using .NET Standard libraries on .NET Framework because the CLR automatically unifies version numbers of assemblies that are part of the platform.\r\n\r\nLearn more [by reading the .NET Standard FAQ](http://aka.ms/netstandardfaq).\r\n\r\n## Discussion\r\n\r\nDiscussion\r\n\r\nFor a discussion, please go to dotnet/standard#514.\r\n\r\n[ns20post]: https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-standard-2-0/\r\n[nstable]: https://docs.microsoft.com/en-us/dotnet/standard/net-standard\r\n[nuget36]: https://dist.nuget.org/visualstudio-2015-vsix/v3.6.0/NuGet.Tools.vsix\r\n[vs2015support]: https://aka.ms/netstandard-build-support-netfx\r\n[missingapis]: https://github.com/dotnet/standard/blob/master/netstandard/src/ApiCompatBaseline.net461.txt\r\n[netfx-issues]: https://github.com/dotnet/standard/issues/481\r\n[video]: https://www.youtube.com/watch?v=u67Eu_IgEMs\r\n\r\nhttps://github.com/dotnet/standard/issues/514"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"6689206688","Type":"PullRequestEvent","CreatedAt":"2017-10-08T23:23:29","Actor":"adityamandaleeka","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14386","RelatedDescription":"Opened pull request \"Fix incorrect name of class in RyuJIT overview\" (#14386) at dotnet/coreclr","RelatedBody":"I was just reading this and noticed a minor error: the parent class for `Interval` and `RegRecord` is `Referenceable`."},{"Id":"6689134511","Type":"IssuesEvent","CreatedAt":"2017-10-08T22:29:09","Actor":"devsko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/14250","RelatedDescription":"Closed issue \"Question about RyuJIT\" (#14250) at dotnet/coreclr","RelatedBody":"Hi, I'm working on some optimizations of our software and use the packages System.Memory and System.Numerics.Vector. Both are relying on optimizations in RyuJIT. Our software runs mainly on .NET Framework (not CoreCLR) and most of these optimizations are not available at the moment (please correct me if I'm wrong here).\r\nI would like to know if there are any plans to port these jitter optimizations to .NET \r\nThanks"},{"Id":"6689092831","Type":"PullRequestEvent","CreatedAt":"2017-10-08T21:58:32","Actor":"mikedn","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14385","RelatedDescription":"Opened pull request \"Generate xorps instead of xorpd\" (#14385) at dotnet/coreclr","RelatedBody":"xorps is one byte shorter when AVX is not used. Also saves a call to genGetInsForOper."},{"Id":"6688534064","Type":"IssuesEvent","CreatedAt":"2017-10-08T15:50:52","Actor":"AndyAyersMS","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/11805","RelatedDescription":"Closed issue \"Numerous test build warnings for conv_ovf_i8_i.ilproj\" (#11805) at dotnet/coreclr","RelatedBody":"`JIT\\IL_Conformance\\Old\\Conformance_Base\\conv_ovf_i8_i.ilproj` causes a whole bunch of warnings when building tests.\r\n\r\nNot sure why this one test project gets singled out. It lacks the `<RestorePackages>` element (and adding that quashes the warnings, at least in an incremental rebuild), but then so do many other ilproj files in the same directory. \r\n\r\nSample warning:\r\n```\r\nC:\\Program Files (x86)\\MSBuild\\14.0\\bin\\Microsoft.Common.CurrentVersion.targets(1820,5): warning MSB3268:\r\nThe primary reference \"D:\\j\\workspace\\x64_release_w---0575cb46\\bin\\TargetingPack\\/Microsoft.CodeAnalysis.VisualBasic.dll\" could not be resolved because it has an indirect dependency on the framework assembly \"System.Runtime, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" which could not be resolved in the currently targeted framework. \".NETFramework,Version=v4.0\". \r\nTo resolve this problem, either remove the reference \"D:\\j\\workspace\\x64_release_w---0575cb46\\bin\\TargetingPack\\/Microsoft.CodeAnalysis.VisualBasic.dll\" or retarget your application to a framework version which contains \"System.Runtime, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\". \r\n[D:\\j\\workspace\\x64_release_w---0575cb46\\tests\\src\\JIT\\IL_Conformance\\Old\\Conformance_Base\\conv_ovf_i8_i.ilproj]\r\n```"},{"Id":"6688181935","Type":"PullRequestEvent","CreatedAt":"2017-10-08T11:36:55","Actor":"mikedn","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14384","RelatedDescription":"Opened pull request \"Ifdef out legacy uses of GT_ASG_op\" (#14384) at dotnet/coreclr","RelatedBody":"GT_ASG_op nodes are only generated when the legacy backend is used."},{"Id":"6688175949","Type":"IssuesEvent","CreatedAt":"2017-10-08T11:32:21","Actor":"arekpalinski","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/14354","RelatedDescription":"Closed issue \"Failing test crashes dotnet process\" (#14354) at dotnet/coreclr","RelatedBody":"I have a consistency failing test case (xunit) for a given seed of `new Random())`. It's here:\r\nhttps://github.com/arekpalinski/ravendb/blob/RavenDB-8903/test/FastTests/Blittable/PeepingTomTest.cs#L30\r\n\r\nRunning this single test from the command line results in the following exception:\r\n```\r\nC:\\workspace\\ravendb-4.0 [RavenDB-8903]> cd .\\test\\FastTests\r\nC:\\workspace\\ravendb-4.0\\test\\FastTests [RavenDB-8903]> dotnet xunit -method FastTests.Blittable.PeepingTomTest.PeepingTomStreamShouldPeepCorrectlyWithRandomValues\r\nDetecting target frameworks in FastTests.csproj...\r\nBuilding for framework netcoreapp2.0...\r\n[....]\r\nRunning .NET Core tests for framework netcoreapp2.0...\r\nxUnit.net Console Runner (64-bit .NET Core 4.6.00001.0)\r\n  Discovering: FastTests\r\n  Discovered:  FastTests\r\n  Starting:    FastTests\r\n    FastTests.Blittable.PeepingTomTest.PeepingTomStreamShouldPeepCorrectlyWithRandomValues(seed: 1291481720) [FAIL]\r\n      System.ArgumentOutOfRangeException : The length cannot be greater than the capacity.\r\n      Parameter name: valueCount\r\n      Stack Trace:\r\n           at System.Buffer.InternalBlockCopy(Array src, Int32 srcOffsetBytes, Array dst, Int32 dstOffsetBytes, Int32 byteCount)\r\n           at System.IO.MemoryStream.Write(Byte[] buffer, Int32 offset, Int32 count)\r\n        C:\\workspace\\ravendb-4.0\\test\\FastTests\\Blittable\\PeepingTomTest.cs(61,0): at FastTests.Blittable.PeepingTomTest.PeepingTomStreamTest(Int32 originalSize, Int32 chunkSizeToRead, Int32 offset, JsonOperationContext context)\r\n        C:\\workspace\\ravendb-4.0\\test\\FastTests\\Blittable\\PeepingTomTest.cs(43,0): at FastTests.Blittable.PeepingTomTest.PeepingTomStreamShouldPeepCorrectlyWithRandomValues(Int32 seed)\r\n  Finished:    FastTests\r\n=== TEST EXECUTION SUMMARY ===\r\n   FastTests  Total: 2, Errors: 0, Failed: 1, Skipped: 0, Time: 0.213s\r\n```\r\n\r\nThe problem is that running all tests of `FastTests` project makes `dotnet` process crash.\r\n\r\nIn order to reproduce:\r\n\r\n1) clone my repository: `git clone git@github.com:arekpalinski/ravendb.git`\r\n2) checkout `RavenDB-8903` branch: `git checkout RavenDB-8903` (failing test case is just there)\r\n3) `> cd .\\test\\FastTests`\r\n4) `> dotnet xunit`\r\nthen I'm getting `dotnet has stopped working` window:\r\n\r\n```\r\n[Window Title]\r\ndotnet\r\n\r\n[Main Instruction]\r\ndotnet has stopped working\r\n\r\n[Content]\r\nA problem caused the program to stop working correctly. Windows will close the program and notify you if a solution is available.\r\n\r\n[Debug] [Close program]\t\r\n```\r\n5) `> dotnet test` results in `the active test run was aborted. Reason:`\r\n\r\n```\r\nC:\\workspace\\ravendb-4.0\\test\\FastTests [RavenDB-8903]> dotnet test\r\nBuild started, please wait...\r\nBuild completed.\r\n\r\nTest run for C:\\workspace\\ravendb-4.0\\test\\FastTests\\bin\\Debug\\netcoreapp2.0\\FastTests.dll(.NETCoreApp,Version=v2.0)\r\nMicrosoft (R) Test Execution Command Line Tool Version 15.3.0-preview-20170628-02\r\nCopyright (c) Microsoft Corporation.  All rights reserved.\r\n\r\nStarting test execution, please wait...\r\n[xUnit.net 00:00:01.0106157]   Discovering: FastTests\r\n[xUnit.net 00:00:01.5553485]   Discovered:  FastTests\r\n[xUnit.net 00:00:01.5615060]   Starting:    FastTests\r\n[xUnit.net 00:00:04.1890521]     FastTests.Voron.Backups.BackupToOneZipFile.FullBackupToOneZipFile [SKIP]\r\n[xUnit.net 00:00:04.1894934]       Should add database record to backup and restore\r\n[xUnit.net 00:00:04.1926077]     FastTests.Voron.Backups.BackupToOneZipFile.IncrementalBackupToOneZipFile [SKIP]\r\n[xUnit.net 00:00:04.1929328]       Should add database record to backup and restore\r\nSkipped  FastTests.Voron.Backups.BackupToOneZipFile.FullBackupToOneZipFile\r\nStandard Output Messages:\r\n Should add database record to backup and restore\r\nSkipped  FastTests.Voron.Backups.BackupToOneZipFile.IncrementalBackupToOneZipFile\r\nStandard Output Messages:\r\n Should add database record to backup and restore\r\nThe active test run was aborted. Reason:\r\n\r\nTotal tests: 491. Passed: 489. Failed: 0. Skipped: 2.\r\nTest Run Failed.\r\nTest execution time: 16.9560 Seconds\r\n```\r\n\r\nIf  steps 4. or 5. don't error then repeat that command (I have checked it on two machines, it typically errors on 1-2 run)\r\n\r\nIn the event viewer I see:\r\n1) Error:\r\n```\r\nFaulting application name: dotnet.exe, version: 2.0.25521.1, time stamp: 0x597139df\r\nFaulting module name: coreclr.dll, version: 4.6.25519.2, time stamp: 0x596f8abf\r\nException code: 0xc0000005\r\nFault offset: 0x000000000017543d\r\nFaulting process id: 0x445c\r\nFaulting application start time: 0x01d33e7bc7f4e93a\r\nFaulting application path: C:\\Program Files\\dotnet\\dotnet.exe\r\nFaulting module path: C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\2.0.0\\coreclr.dll\r\nReport Id: 0aa9cb7b-3192-4663-a977-f89f83393918\r\nFaulting package full name: \r\nFaulting package-relative application ID: \r\n```\r\n\r\n2) Information:\r\n```Fault bucket 120844845049, type 4\r\nEvent Name: APPCRASH\r\nResponse: Not available\r\nCab Id: 0\r\n\r\nProblem signature:\r\nP1: dotnet.exe\r\nP2: 2.0.25521.1\r\nP3: 597139df\r\nP4: coreclr.dll\r\nP5: 4.6.25519.2\r\nP6: 596f8abf\r\nP7: c0000005\r\nP8: 000000000017543d\r\nP9: \r\nP10: \r\n\r\nAttached files:\r\n\\\\?\\C:\\ProgramData\\Microsoft\\Windows\\WER\\Temp\\WER1A19.tmp.dmp\r\n\\\\?\\C:\\ProgramData\\Microsoft\\Windows\\WER\\Temp\\WER1DD3.tmp.WERInternalMetadata.xml\r\n\\\\?\\C:\\ProgramData\\Microsoft\\Windows\\WER\\Temp\\WER1DE2.tmp.csv\r\n\\\\?\\C:\\ProgramData\\Microsoft\\Windows\\WER\\Temp\\WER1E31.tmp.txt\r\n\r\nThese files may be available here:\r\nC:\\ProgramData\\Microsoft\\Windows\\WER\\ReportArchive\\AppCrash_dotnet.exe_a2f014eb8768a54acfd6ef4ac57aab80254f1d94_7fa847c7_4c5d4788\r\n\r\nAnalysis symbol: \r\nRechecking for solution: 0\r\nReport Id: 0aa9cb7b-3192-4663-a977-f89f83393918\r\nReport Status: 268435456\r\nHashed bucket: 31ebdac9f30a6f76d8a7a312202c287d\r\n```\r\n\r\nThe above errors has been exported. \r\n\r\nIn `C:\\ProgramData\\Microsoft\\Windows\\WER\\ReportArchive\\AppCrash_dotnet.exe_a2f014eb8768a54acfd6ef4ac57aab80254f1d94_7fa847c7_4c5d4788` I found `Report.wer` file  (there were no more files there). \r\n\r\nAlso caught Process Monitor results during `> dotnet xunit` \r\n\r\nEveryting can be found here: https://1drv.ms/f/s!AqoX7tk71dAv6W38PLbkgFDXIRJB\r\n\r\nDotnet info:\r\n```\r\n> dotnet --info\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.15063\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.0\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n```"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"6689531745","Type":"IssuesEvent","CreatedAt":"2017-10-09T03:00:22","Actor":"felpel","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7788","RelatedDescription":"Opened issue \"dotnet restore fails with private feeds\" (#7788) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n- Create a private feed on VSTS;\r\n- Clone VSTS' Git repository;\r\n- Configure `NuGet.config` accordingly:\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <packageSources>\r\n    <clear/>\r\n    <add key=\"MyPrivateFeed\" value=\"https://{myPrivateRepo}.pkgs.visualstudio.com/_packaging/{MyPackages}/nuget/v3/index.json\"/>\r\n  </packageSources>\r\n</configuration>\r\n```\r\n- Call `dotnet restore`\r\n\r\n## Expected  behavior\r\nI should be able to restore my private feeds' packages. It works fine in a similar Windows environment.\r\n\r\n## Actual behavior\r\nI'm unable to restore packages from our private VSTS feeds when I call `dotnet restore`:\r\n\r\n```\r\n  Restoring packages for /Users/Marie-Francoise/Felix/Git/AutoVu.SaaS.Ptms.DataShareService/src/AutoVu.SaaS.Ptms.Dss.Business.Abstractions/AutoVu.SaaS.Ptms.Dss.Business.Abstractions.csproj...\r\n  Restoring packages for /Users/Marie-Francoise/Felix/Git/AutoVu.SaaS.Ptms.DataShareService/src/AutoVu.SaaS.Ptms.Dss.Business.Server/AutoVu.SaaS.Ptms.Dss.Business.Server.csproj...\r\n  Restoring packages for /Users/Marie-Francoise/Felix/Git/AutoVu.SaaS.Ptms.DataShareService/src/AutoVu.SaaS.Ptms.Dss.AzureFunctions/AutoVu.SaaS.Ptms.Dss.AzureFunctions.csproj...\r\n  Restoring packages for /Users/Marie-Francoise/Felix/Git/AutoVu.SaaS.Ptms.DataShareService/src/AutoVu.SaaS.Ptms.Dss.DataLayer/AutoVu.SaaS.Ptms.Dss.DataLayer.csproj...\r\n/usr/local/share/dotnet/sdk/2.0.0/NuGet.targets(102,5): error : Unable to load the service index for source https://autovurnd.pkgs.visualstudio.com/_packaging/AutoVuPackages/nuget/v3/index.json. [/Users/Marie-Francoise/Felix/Git/AutoVu.SaaS.Ptms.DataShareService/AutoVu.SaaS.Ptms.Dss.sln]\r\n/usr/local/share/dotnet/sdk/2.0.0/NuGet.targets(102,5): error :   Response status code does not indicate success: 401 (Unauthorized). [/Users/Marie-Francoise/Felix/Git/AutoVu.SaaS.Ptms.DataShareService/AutoVu.SaaS.Ptms.Dss.sln]\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\nOutils en ligne de commande .NET (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.13\r\n OS Platform: Darwin\r\n RID:         osx.10.12-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.0.0/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n```\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"6687776664","Type":"IssuesEvent","CreatedAt":"2017-10-08T05:20:31","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/7592","RelatedDescription":"Closed issue \"publish ignores folders with underscore in name\" (#7592) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nCreate folder in wwwroot directory with the name \"jspm_packages\" prior to running publish\r\nRun dot net publish\r\n\r\n## Expected  behavior\r\nThe wwwroot folder in the output directory should contain a folder named \"jspm_packages\"\r\n\r\n## Actual behavior\r\nThe folder \"jspm_packages\" is missing from the wwwroot folder in the output directory.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.12\r\n OS Platform: Darwin\r\n RID:         osx.10.12-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.0.0/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"6687123105","Type":"IssuesEvent","CreatedAt":"2017-10-07T19:35:01","Actor":"Leoat12","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7787","RelatedDescription":"Opened issue \"Cannot run application in another machine due to wrong path for dependencies. \" (#7787) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\n1) Create a project with the following .csproj.\r\n\r\n`<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n    <RuntimeIdentifiers>win10-x64;ubuntu.16.04-x64</RuntimeIdentifiers>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"MySql.Data\" Version=\"8.0.9-dmr\" />\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"10.0.3\" />\r\n    <PackageReference Include=\"NUnit\" Version=\"3.8.1\" />\r\n    <PackageReference Include=\"TweetinviAPI\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>`\r\n\r\n2) Use the following commands:\r\n`PS> dotnet restore\r\nPS> dotnet publish -c Release -r ubuntu.16.04-x64`\r\n\r\n3) Execute the program on Ubuntu machine.\r\n\r\n## Expected  behavior\r\n\r\nThe applications is run successfully. \r\n\r\n## Actual behavior\r\n\r\nIt throws an error:\r\n`Error:\r\n  An assembly specified in the application dependencies manifest (Twitter.deps.json) was not found:\r\n    package: 'Autofac', version: '4.6.0'\r\n    path: 'lib/netstandard1.1/Autofac.dll'`\r\n\r\n## Environment data\r\n\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.15063\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.0\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n\r\n## Diagnostic \r\n\r\nIt is failing to looking for the dependencies in the right place. On _runtimeconfig.dev.json_ file there is this in all deployments.\r\n\r\n`{\r\n  \"runtimeOptions\": {\r\n    \"additionalProbingPaths\": [\r\n      \"C:\\\\Users\\\\leoat\\\\.dotnet\\\\store\\\\|arch|\\\\|tfm|\",\r\n      \"C:\\\\Users\\\\leoat\\\\.nuget\\\\packages\",\r\n      \"C:\\\\Program Files\\\\dotnet\\\\sdk\\\\NuGetFallbackFolder\"\r\n    ]\r\n  }\r\n}`\r\n\r\nThese paths exist on my computer, but not in the target Ubuntu machine, of course. I can reproduce the error on my own computer by removing all these paths. As a self-contained deployment, it should be looking for the dependencies on the _publish_ folder, they are all there, but it is looking for them in the wrong place.\r\n\r\n**Thanks you for the help!** \r\n\r\n\r\n\r\n\r\n"},{"Id":"6686799126","Type":"IssuesEvent","CreatedAt":"2017-10-07T15:46:58","Actor":"Petermarcu","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7786","RelatedDescription":"Opened issue \"System.IO.FileNotFoundException when using PrivateAssets = \"All\"\" (#7786) at dotnet/cli","RelatedBody":"@KshitizGIT commented on [Sun Sep 03 2017](https://github.com/dotnet/core/issues/933)\n\nI have a project layout like this.\r\n\r\nAssembly A -> Assembly B -> Assembly C.\r\n\r\nProgram lives in Assembly A.\r\nClassB lives in Assembly B.\r\nClassC lives in Assembly C.\r\n\r\nI don't want AssemblyC to be directly accessible in AssemblyA. So I added   PrivateAssets = \"All\" in the ProjectReference element in the AssemblyB.csproj file \r\n\r\nClassB creates a instance of ClassC.\r\n\r\nProgram creates a instance of ClassB.\r\n\r\nBut this is causing a System.IO.FileNotFoundException : Couldnot load file or assembly 'C'.\r\n\r\nI have attached the project. Please look into it.\r\n\r\n[Dependency.zip](https://github.com/dotnet/core/files/1272843/Dependency.zip)\r\n\r\n\n\n"},{"Id":"6686462671","Type":"IssuesEvent","CreatedAt":"2017-10-07T11:30:28","Actor":"danielzoeller","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/7765","RelatedDescription":"Closed issue \"Can't build dotnet core 2.0 console apps after reinstall\" (#7765) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nI previously had dotnet 2.0 and VS 2017 installed and working fine.  I had to do a system restore on my surface pro and then VS 2017 stopped working.  I uninstalled VS 2017 and dotnet core.  Then reinstalled both but I specifically can't get dotnet core 2.0 console apps to build.  Strangely enough, asp.net core 2.0 apps seem to be working just fine.  Also, I can build console apps for dotnet 1.1 just fine as well.\r\n\r\nEven a simple Hello world app created from the CLI doesn't seem to work:\r\n\r\n$ dotnet new console\r\n$ dotnet restore\r\n$ dotnet run\r\n\r\n## Expected  behavior\r\nConsole app should run.\r\n\r\n## Actual behavior\r\nHere is the error I get:\r\n\r\n```\r\nC:\\Users\\danzo\\AppData\\Local\\Temp\\.NETCoreApp,Version=v2.0.AssemblyAttributes.cs(4,20): error CS0400: The type or namespace name 'System' could not be found in the global namespace (are you missing an assembly reference?) [C:\\Users\\danzo\\Source\\repos\\Hello\\Hello.csproj]\r\nobj\\Debug\\netcoreapp2.0\\Hello.AssemblyInfo.cs(10,12): error CS0246: The type or namespace name 'System' could not be found (are you missing a using directive or an assembly reference?) [C:\\Users\\danzo\\Source\\repos\\Hello\\Hello.csproj]\r\nobj\\Debug\\netcoreapp2.0\\Hello.AssemblyInfo.cs(11,12): error CS0246: The type or namespace name 'System' could not be found (are you missing a using directive or an assembly reference?) \r\n\r\n[OMITTED ABOUT 30 SIMILAR ERRORS FOR BREVITY]\r\n\r\nThe build failed. Please fix the build errors and run again.\r\n```\r\n\r\n## Environment data\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.15063\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.0\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n\r\n----------------------------------------------------\r\n**Thank you for any help you can provide me!**\r\n\r\n\r\n\r\n\r\n"},{"Id":"6685871949","Type":"PullRequestEvent","CreatedAt":"2017-10-07T02:01:48","Actor":"KevinRansom","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/7785","RelatedDescription":"Merged pull request \"Update CoreSetup to preview1-25806-02 (master)\" (#7785) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"6689316337","Type":"IssuesEvent","CreatedAt":"2017-10-09T00:46:43","Actor":"Petermarcu","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/528","RelatedDescription":"Closed issue \".Close() on TcpClient & Socket missing for some platforms\" (#528) at dotnet/standard","RelatedBody":"@danielgerlag commented on [Mon Sep 11 2017](https://github.com/dotnet/core/issues/956)\n\n# .Close() on TcpClient & Socket missing for some platforms\r\n\r\n.Close() on TcpClient & Socket (System.Net.Sockets) is available in .net standard 2.0, only if compiling on a Windows machine... if I try compile on a Mac, these methods are missing.\r\nAlso, have to explicitly reference `System.Net.Sockets` when building from the Mac.\r\n\r\n# General\r\n\r\n.NET Standard 2.0\r\nWindows 10 vs. MacOS\r\n\n\n---\n\n@Petermarcu commented on [Thu Oct 05 2017](https://github.com/dotnet/core/issues/956#issuecomment-334622113)\n\n@weshaggard, we use the same ref's in both cases don't we? Any idea what may be going on?\n\n---\n\n@weshaggard commented on [Fri Oct 06 2017](https://github.com/dotnet/core/issues/956#issuecomment-334810208)\n\nYes we use the same ref everywhere when targeting netstandard20. @danielgerlag can you share more of how you are building? \r\n\r\nClose should be available on both of those types when targeting netstandard20\n\n"},{"Id":"6685680055","Type":"IssuesEvent","CreatedAt":"2017-10-06T23:45:39","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/529","RelatedDescription":"Opened issue \".NET Standard and Click Once\" (#529) at dotnet/standard","RelatedBody":"## Summary\r\n\r\nThere is currently a bug that prevents ClickOnce setups from correctly deploying all the necessary .NET Standard support files. But you can work this around by editing your project file.\r\n\r\n## Symptoms and root cause\r\n\r\nRunning the application from inside of Visual Studio succeeds, so does publishing and installing. But when the application is launched, it crashes with with an exception [like this one](https://github.com/dotnet/core/issues/1010):\r\n\r\n> Unable to initialize the application (Could not load file or assembly 'System.Runtime, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The System cannot find the file specified.\r\n\r\nThe root cause is bug in the way ClickOnce discovers and packages dependencies from the application project.\r\n\r\n## Workaround\r\n\r\nIn order to make sure the right files are added to your installer, you need to add a custom target to your project file:\r\n\r\n1. Right click your project and select **Unload Project**.\r\n2. Then, right click your project again and select **Edit \\<your project\\>**.\r\n3. Locate the first `<Import>` element and copy & paste the code from below before the `<Import>` element.\r\n4. Right click your project and select **Reload Project**\r\n\r\n```xml\r\n  <ItemGroup>\r\n    <PublishFile Include=\"netfx.force.conflicts\">\r\n      <Visible>False</Visible>\r\n      <PublishState>Exclude</PublishState>\r\n      <IncludeHash>True</IncludeHash>\r\n      <FileType>Assembly</FileType>\r\n    </PublishFile>\r\n  </ItemGroup>\r\n  <Target Name=\"FixClickOnceDependencies\" BeforeTargets=\"_DeploymentComputeClickOnceManifestInfo\">\r\n    <ItemGroup>\r\n      <_noCopyRefs Include=\"@(ReferencePath)\" Condition=\"'%(ReferencePath.Private)' == 'false'\" />\r\n      <_noCopyRefsByFileName Include=\"@(_noCopyRefs->'%(FileName)')\">\r\n        <OriginalItem>%(Identity)</OriginalItem>\r\n      </_noCopyRefsByFileName>\r\n      <_libByFileName Include=\"@(ReferenceCopyLocalPaths->'%(FileName)')\">\r\n        <OriginalItem>%(Identity)</OriginalItem>\r\n      </_libByFileName>\r\n      <_overlappingRefByFileName Include=\"@(_noCopyRefsByFileName)\" Condition=\"'@(_noCopyRefsByFileName)' == '@(_libByFileName)' AND '%(Identity)' != ''\" />\r\n      <_overlappingLibByFileName Include=\"@(_libByFileName)\" Condition=\"'@(_noCopyRefsByFileName)' == '@(_libByFileName)' AND '%(Identity)' != ''\" />\r\n      <_overlappingRef Include=\"@(_overlappingRefByFileName->'%(OriginalItem)')\" />\r\n      <_overlappingLib Include=\"@(_overlappingLibByFileName->'%(OriginalItem)')\" />\r\n    </ItemGroup>\r\n    <ItemGroup Condition=\"'@(_overlappingRef)' != ''\">\r\n      <ReferencePath Remove=\"@(_overlappingRef)\" />\r\n      <ReferencePath Include=\"@(_overlappingLib)\">\r\n        <Private>True</Private>\r\n      </ReferencePath>\r\n    </ItemGroup>\r\n  </Target>\r\n```"},{"Id":"6685025919","Type":"IssuesEvent","CreatedAt":"2017-10-06T20:06:21","Actor":"Petermarcu","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/528","RelatedDescription":"Opened issue \".Close() on TcpClient & Socket missing for some platforms\" (#528) at dotnet/standard","RelatedBody":"@danielgerlag commented on [Mon Sep 11 2017](https://github.com/dotnet/core/issues/956)\n\n# .Close() on TcpClient & Socket missing for some platforms\r\n\r\n.Close() on TcpClient & Socket (System.Net.Sockets) is available in .net standard 2.0, only if compiling on a Windows machine... if I try compile on a Mac, these methods are missing.\r\nAlso, have to explicitly reference `System.Net.Sockets` when building from the Mac.\r\n\r\n# General\r\n\r\n.NET Standard 2.0\r\nWindows 10 vs. MacOS\r\n\n\n---\n\n@Petermarcu commented on [Thu Oct 05 2017](https://github.com/dotnet/core/issues/956#issuecomment-334622113)\n\n@weshaggard, we use the same ref's in both cases don't we? Any idea what may be going on?\n\n---\n\n@weshaggard commented on [Fri Oct 06 2017](https://github.com/dotnet/core/issues/956#issuecomment-334810208)\n\nYes we use the same ref everywhere when targeting netstandard20. @danielgerlag can you share more of how you are building? \r\n\r\nClose should be available on both of those types when targeting netstandard20\n\n"},{"Id":"6678441453","Type":"IssuesEvent","CreatedAt":"2017-10-05T14:15:42","Actor":"Priya-John","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/527","RelatedDescription":"Opened issue \"HttpCookie class is not present in .netCore\" (#527) at dotnet/standard","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"6689770355","Type":"PullRequestEvent","CreatedAt":"2017-10-09T05:18:44","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/24506","RelatedDescription":"Merged pull request \"Update ProjectNTfs, ProjectNTfsTestILC to beta-25809-00, beta-25809-00, respectively (master)\" (#24506) at dotnet/corefx","RelatedBody":""},{"Id":"6689765479","Type":"IssuesEvent","CreatedAt":"2017-10-09T05:15:50","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/24505","RelatedDescription":"Closed issue \"Test: System.IO.Tests.FileStream_BeginEndWrite_AsyncWrites/WriteAsyncMiniStress failed with \"System.IO.IOException : No space left on device\"\" (#24505) at dotnet/corefx","RelatedBody":"Opened on behalf of @Jiayili1\n\nThe test `System.IO.Tests.FileStream_BeginEndWrite_AsyncWrites/WriteAsyncMiniStress` has failed.\n\nSystem.IO.IOException : No space left on device\n\n        Stack Trace:\n\n           at System.IO.FileStream.WriteNative(ReadOnlySpan`1 source) in /root/coreclr/src/mscorlib/shared/System/IO/FileStream.Unix.cs:line 621\n       at System.IO.FileStream.WriteSpan(ReadOnlySpan`1 source) in /root/coreclr/src/mscorlib/shared/System/IO/FileStream.Unix.cs:line 607\n       at System.IO.FileStream.Write(Byte[] array, Int32 offset, Int32 count) in /root/coreclr/src/mscorlib/shared/System/IO/FileStream.cs:line 412\n       at System.IO.Stream.<>c.<BeginWriteInternal>b__49_0(Object <p0>) in /root/coreclr/src/mscorlib/src/System/IO/Stream.cs:line 484\n       at System.Threading.Tasks.Task`1.InnerInvoke() in /root/coreclr/src/mscorlib/src/System/Threading/Tasks/future.cs:line 616\n       at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state) in /root/coreclr/src/mscorlib/shared/System/Threading/ExecutionContext.cs:line 151\n       at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot) in /root/coreclr/src/mscorlib/src/System/Threading/Tasks/Task.cs:line 2440\n    --- End of stack trace from previous location where exception was thrown ---\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() in /root/coreclr/src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionServicesCommon.cs:line 130\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) in /root/coreclr/src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs:line 152\n       at System.IO.Stream.EndWrite(IAsyncResult asyncResult) in /root/coreclr/src/mscorlib/src/System/IO/Stream.cs:line 554\n       at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization) in /root/coreclr/src/mscorlib/src/System/Threading/Tasks/FutureFactory.cs:line 533\n    --- End of stack trace from previous location where exception was thrown ---\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() in /root/coreclr/src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionServicesCommon.cs:line 130\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) in /root/coreclr/src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs:line 152\n       at System.IO.Tests.FileStream_AsyncWrites.<WriteAsyncMiniStress>d__24.MoveNext() in /root/corefx-1046379/src/System.IO.FileSystem/tests/FileStream/WriteAsync.cs:line 412\n    --- End of stack trace from previous location where exception was thrown ---\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() in /root/coreclr/src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionServicesCommon.cs:line 130\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) in /root/coreclr/src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs:line 152\n    --- End of stack trace from previous location where exception was thrown ---\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() in /root/coreclr/src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionServicesCommon.cs:line 130\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) in /root/coreclr/src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs:line 152\n    --- End of stack trace from previous location where exception was thrown ---\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() in /root/coreclr/src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionServicesCommon.cs:line 130\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) in /root/coreclr/src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs:line 152\nBuild : Master - 20171009.01 (Core Tests)\nFailing configurations:\n- Fedora.26.Amd64-x64\n  - Release\n\nDetail: https://mc.dot.net/#/product/netcore/master/source/official~2Fcorefx~2Fmaster~2F/type/test~2Ffunctional~2Fcli~2F/build/20171009.01/workItem/System.IO.FileSystem.Tests/analysis/xunit/System.IO.Tests.FileStream_BeginEndWrite_AsyncWrites~2FWriteAsyncMiniStress"},{"Id":"6689697751","Type":"IssuesEvent","CreatedAt":"2017-10-09T04:34:10","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/24508","RelatedDescription":"Opened issue \"FailFast in System.ConsolePal.WindowsConsoleStream.WriteFileNative\" (#24508) at dotnet/corefx","RelatedBody":"While debugging OpenCover, which invoked xunit.console, I got the following failfast: possibly due to me debugging. \r\n\r\nI don't have a repro or locals but this probably should not terminate here.\r\n\r\n```\r\n                    if (useFileAPIs)\r\n                    {\r\n                        int numBytesWritten;\r\n                        writeSuccess = (0 != Interop.Kernel32.WriteFile(hFile, p + offset, count, out numBytesWritten, IntPtr.Zero));\r\n                        Debug.Assert(!writeSuccess || count == numBytesWritten);  <<<<<\r\n                    }\r\n```\r\n\r\n```\r\nCannot instrument C:\\git\\corefx\\bin\\testhost\\netcoreapp-Windows_NT-Debug-x64\\shared\\Microsoft.NETCore.App\\9.9.9\\System.Private.CoreLib.dll as no PDB/MDB could be loaded\r\nxUnit.net console test runner (64-bit .NET Core)\r\nFailFast:\r\n\r\n   at System.Diagnostics.Debug.Assert(Boolean condition, String message, String detailMessage) in E:\\A\\_work\\1111\\s\\src\\mscorlib\\shared\\System\\Diagnostics\\Debug.cs:line 97\r\n   at System.Diagnostics.Debug.Assert(Boolean condition) in E:\\A\\_work\\1111\\s\\src\\mscorlib\\shared\\System\\Diagnostics\\Debug.cs:line 80\r\n   at System.ConsolePal.WindowsConsoleStream.WriteFileNative(IntPtr hFile, Byte[] bytes, Int32 offset, Int32 count, Boolean useFileAPIs) in C:\\git\\corefx\\src\\System.Console\\src\\System\\ConsolePal.Windows.cs:line 1210\r\n   at System.ConsolePal.WindowsConsoleStream.Write(Byte[] buffer, Int32 offset, Int32 count) in C:\\git\\corefx\\src\\System.Console\\src\\System\\ConsolePal.Windows.cs:line 1131\r\n   at System.IO.StreamWriter.Flush(Boolean flushStream, Boolean flushEncoder) in C:\\git\\corefx\\src\\System.Runtime.Extensions\\src\\System\\IO\\StreamWriter.cs:line 260\r\n   at System.IO.StreamWriter.WriteLine(String value) in C:\\git\\corefx\\src\\System.Runtime.Extensions\\src\\System\\IO\\StreamWriter.cs:line 554\r\n   at System.IO.SyncTextWriter.WriteLine(String value) in C:\\git\\corefx\\src\\System.Console\\src\\System\\IO\\SyncTextWriter.cs:line 280\r\n   at System.IO.TextWriter.WriteLine(String format, Object arg0, Object arg1) in C:\\git\\corefx\\src\\System.Runtime.Extensions\\src\\System\\IO\\TextWriter.cs:line 484\r\n   at System.Console.WriteLine(String format, Object arg0, Object arg1) in C:\\git\\corefx\\src\\System.Console\\src\\System\\Console.cs:line 566\r\n   at Xunit.ConsoleClient.Program.Main(String[] args)\r\n\r\n   at System.Environment.FailFast(System.String, System.Exception)\r\n   at System.Diagnostics.Debug.ShowAssertDialog(System.String, System.String, System.String)\r\n   at System.Diagnostics.Debug.Assert(Boolean, System.String, System.String)\r\n   at System.Diagnostics.Debug.Assert(Boolean)\r\n   at System.ConsolePal+WindowsConsoleStream.WriteFileNative(IntPtr, Byte[], Int32, Int32, Boolean)\r\n   at System.ConsolePal+WindowsConsoleStream.Write(Byte[], Int32, Int32)\r\n   at System.IO.StreamWriter.Flush(Boolean, Boolean)\r\n   at System.IO.StreamWriter.WriteLine(System.String)\r\n   at System.IO.SyncTextWriter.WriteLine(System.String)\r\n   at System.IO.TextWriter.WriteLine(System.String, System.Object, System.Object)\r\n   at System.Console.WriteLine(System.String, System.Object, System.Object)\r\n   at Xunit.ConsoleClient.Program.Main(System.String[])\r\nC\r\n```"},{"Id":"6689651342","Type":"IssuesEvent","CreatedAt":"2017-10-09T04:05:54","Actor":"ejsmith","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/24507","RelatedDescription":"Opened issue \"Difference between Windows and OSX\" (#24507) at dotnet/corefx","RelatedBody":"The following test passes when running on Windows, but fails when running on OSX.\r\n\r\n```c#\r\n[Fact]\r\npublic void NonAbsoluteUriShouldThrow()\r\n{\r\n   Assert.Throws<UriFormatException>(() => new Uri(\"/api/\", UriKind.Absolute));\r\n}\r\n```"},{"Id":"6689564328","Type":"PullRequestEvent","CreatedAt":"2017-10-09T03:18:17","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/24506","RelatedDescription":"Opened pull request \"Update ProjectNTfs, ProjectNTfsTestILC to beta-25809-00, beta-25809-00, respectively (master)\" (#24506) at dotnet/corefx","RelatedBody":""},{"Id":"6689523287","Type":"IssuesEvent","CreatedAt":"2017-10-09T02:55:36","Actor":"dotnet-mc-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/24505","RelatedDescription":"Opened issue \"Test: System.IO.Tests.FileStream_BeginEndWrite_AsyncWrites/WriteAsyncMiniStress failed with \"System.IO.IOException : No space left on device\"\" (#24505) at dotnet/corefx","RelatedBody":"Opened on behalf of @Jiayili1\n\nThe test `System.IO.Tests.FileStream_BeginEndWrite_AsyncWrites/WriteAsyncMiniStress` has failed.\n\nSystem.IO.IOException : No space left on device\n\n        Stack Trace:\n\n           at System.IO.FileStream.WriteNative(ReadOnlySpan`1 source) in /root/coreclr/src/mscorlib/shared/System/IO/FileStream.Unix.cs:line 621\n       at System.IO.FileStream.WriteSpan(ReadOnlySpan`1 source) in /root/coreclr/src/mscorlib/shared/System/IO/FileStream.Unix.cs:line 607\n       at System.IO.FileStream.Write(Byte[] array, Int32 offset, Int32 count) in /root/coreclr/src/mscorlib/shared/System/IO/FileStream.cs:line 412\n       at System.IO.Stream.<>c.<BeginWriteInternal>b__49_0(Object <p0>) in /root/coreclr/src/mscorlib/src/System/IO/Stream.cs:line 484\n       at System.Threading.Tasks.Task`1.InnerInvoke() in /root/coreclr/src/mscorlib/src/System/Threading/Tasks/future.cs:line 616\n       at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state) in /root/coreclr/src/mscorlib/shared/System/Threading/ExecutionContext.cs:line 151\n       at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot) in /root/coreclr/src/mscorlib/src/System/Threading/Tasks/Task.cs:line 2440\n    --- End of stack trace from previous location where exception was thrown ---\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() in /root/coreclr/src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionServicesCommon.cs:line 130\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) in /root/coreclr/src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs:line 152\n       at System.IO.Stream.EndWrite(IAsyncResult asyncResult) in /root/coreclr/src/mscorlib/src/System/IO/Stream.cs:line 554\n       at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization) in /root/coreclr/src/mscorlib/src/System/Threading/Tasks/FutureFactory.cs:line 533\n    --- End of stack trace from previous location where exception was thrown ---\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() in /root/coreclr/src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionServicesCommon.cs:line 130\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) in /root/coreclr/src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs:line 152\n       at System.IO.Tests.FileStream_AsyncWrites.<WriteAsyncMiniStress>d__24.MoveNext() in /root/corefx-1046379/src/System.IO.FileSystem/tests/FileStream/WriteAsync.cs:line 412\n    --- End of stack trace from previous location where exception was thrown ---\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() in /root/coreclr/src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionServicesCommon.cs:line 130\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) in /root/coreclr/src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs:line 152\n    --- End of stack trace from previous location where exception was thrown ---\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() in /root/coreclr/src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionServicesCommon.cs:line 130\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) in /root/coreclr/src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs:line 152\n    --- End of stack trace from previous location where exception was thrown ---\n       at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() in /root/coreclr/src/mscorlib/src/System/Runtime/ExceptionServices/ExceptionServicesCommon.cs:line 130\n       at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) in /root/coreclr/src/mscorlib/src/System/Runtime/CompilerServices/TaskAwaiter.cs:line 152\nBuild : Master - 20171009.01 (Core Tests)\nFailing configurations:\n- Fedora.26.Amd64-x64\n  - Release\n\nDetail: https://mc.dot.net/#/product/netcore/master/source/official~2Fcorefx~2Fmaster~2F/type/test~2Ffunctional~2Fcli~2F/build/20171009.01/workItem/System.IO.FileSystem.Tests/analysis/xunit/System.IO.Tests.FileStream_BeginEndWrite_AsyncWrites~2FWriteAsyncMiniStress"},{"Id":"6689506406","Type":"PullRequestEvent","CreatedAt":"2017-10-09T02:46:08","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/24503","RelatedDescription":"Merged pull request \"Update CoreFx to preview1-25809-01 (master)\" (#24503) at dotnet/corefx","RelatedBody":""},{"Id":"6689439739","Type":"IssuesEvent","CreatedAt":"2017-10-09T02:06:39","Actor":"Jiayili1","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/24504","RelatedDescription":"Opened issue \"System.Threading.Tests.MutexTests.CrossProcess_NamedMutex_ProtectedFileAccessAtomic failed with \"Xunit.Sdk.TrueException\" in CI\" (#24504) at dotnet/corefx","RelatedBody":"Failed test: System.Threading.Tests.MutexTests.CrossProcess_NamedMutex_ProtectedFileAccessAtomic\r\n\r\nConfiguration: osx10.12_debug\r\n\r\nDetail: https://ci.dot.net/job/dotnet_corefx/job/master/job/osx10.12_debug/3255/testReport/System.Threading.Tests/MutexTests/CrossProcess_NamedMutex_ProtectedFileAccessAtomic_prefix____d3e87b891666440cbeba7116a70ac17d___/\r\n\r\nMESSAGE:\r\n~~~\r\nAssert.True() Failure\\nExpected: True\\nActual: False\r\n~~~\r\nSTACK TRACE:\r\n~~~\r\nat System.Threading.Tests.ThreadTestHelpers.<>c__DisplayClass3_0.<CreateGuardedThread>b__2() in /Users/dotnet-bot/j/workspace/dotnet_corefx/master/osx10.12_debug/src/Common/tests/System/Threading/ThreadTestHelpers.cs:line 48 \r\nat System.Threading.Tests.ThreadTestHelpers.RunTestInBackgroundThread(Action test) in /Users/dotnet-bot/j/workspace/dotnet_corefx/master/osx10.12_debug/src/Common/tests/System/Threading/ThreadTestHelpers.cs:line 100 \r\nat System.Threading.Tests.MutexTests.CrossProcess_NamedMutex_ProtectedFileAccessAtomic(String prefix) in /Users/dotnet-bot/j/workspace/dotnet_corefx/master/osx10.12_debug/src/System.Threading/tests/MutexTests.cs:line 227\r\n~~~"},{"Id":"6689414361","Type":"PullRequestEvent","CreatedAt":"2017-10-09T01:51:42","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/24503","RelatedDescription":"Opened pull request \"Update CoreFx to preview1-25809-01 (master)\" (#24503) at dotnet/corefx","RelatedBody":""},{"Id":"6689329362","Type":"IssuesEvent","CreatedAt":"2017-10-09T00:55:48","Actor":"Petermarcu","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/24502","RelatedDescription":"Opened issue \"Cannot use DBDataReader as Structured SQL Parameter with 2.0 Update\" (#24502) at dotnet/corefx","RelatedBody":"@Coder3333 commented on [Thu Sep 21 2017](https://github.com/dotnet/core/issues/983)\n\nThis article details how to use a DBDataReader as a Structured input parameter to a SQL query:\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/framework/data/adonet/sql/table-valued-parameters\r\n\r\nThis worked just fine with Core 1.1, but since I updated to Core 2.0, it no longer works.  If I use DataTable as input, instead of a DBDataReader, the exact same code works.\r\n\r\nThe error I get is: \r\n\"Specified method is not supported\"\r\n   at System.Data.SqlClient.TdsParser.TdsExecuteRPC(_SqlRPC[] rpcArray, Int32 timeout, Boolean inSchema, TdsParserStateObject stateObj, Boolean isCommandProc, Boolean sync, TaskCompletionSource`1 completion, Int32 startRpc, Int32 startParam)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)\r\n   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)\r\n   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)\r\n   at System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()\r\n\r\n\n\n---\n\n@nil4 commented on [Sun Oct 08 2017](https://github.com/dotnet/core/issues/983#issuecomment-335007721)\n\nConfirmed, same here.\n\n"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"6689097093","Type":"IssuesEvent","CreatedAt":"2017-10-08T22:01:34","Actor":"sjb-sjb","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22592","RelatedDescription":"Opened issue \"Inappropriate generation of CS 1612\" (#22592) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nVisual C# 2017 - 00369-60000-00001-AA549\r\n\r\n**Steps to Reproduce**:\r\nUnfortunately this error can be inappropriately generated when assigning to a property (i.e. invoking a property setter). An immutable struct can still have a valid property setter, as long as the property setter doesn't actually assign to any fields in the struct. For example, \r\n\r\n   public struct Relay { \r\n       public Relay(Func<string> getText, Action<string> setText) \r\n       { \r\n               this.GetText = getText; \r\n               this.SetText = setText; \r\n       } \r\n       private readonly Func<string> GetText; \r\n       private readonly Action<string> SetText; \r\n       public string Text { \r\n           get { return this.GetText(); } \r\n           set { this.SetText(value); } \r\n       } \r\n   } \r\n   class Example { \r\n       private Relay Relay { \r\n           get { return new Relay(() => this.text, t => { this.text = t; });  } \r\n       } \r\n       private string text; \r\n       public Method() { \r\n           var r = new Relay(); \r\n           r.Text = \"hello\"; // not a compile error (although there is a null reference) \r\n           this.Relay.Text = \"hello\";  // error 1612 inappropriately generated by the compiler \r\n           r = this.Relay; \r\n           r.Text = \"hello\"; // no compiler error is generated, and none would be appropriate\r\n   } \r\n\r\n**Expected Behavior**:\r\nSee above. The compiler error should only be generated when a field in the struct is going to be assigned, not when a property is being assigned. \r\n\r\n**Actual Behavior**:\r\nThe compiler error is generated when assigning to a property, not only a field. \r\n\r\n"},{"Id":"6688063223","Type":"IssuesEvent","CreatedAt":"2017-10-08T09:56:12","Actor":"AdamSpeight2008","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22591","RelatedDescription":"Opened issue \"Fix All in Document, Project, Solution (Test?)\" (#22591) at dotnet/roslyn","RelatedBody":"An interesting side discussion from PR#19999, around a test project to test fix all, and suitable candidate for the codefix to use. \r\n\r\n> @paul1956 **typed**\r\n>An interesting test would be to run this codefix on a copy of Roslyn source \"Solution\" because I believe you will get an OutOfMemory exception. Yet this is a perfect example of where a solution wide CodeFix is needed.\r\n>\r\n> @AdamSpeight2008 **typed**\r\n> @paul1956 It would be a good test. You'll be able to see the smoke from VS for miles.\r\n>\r\n>@AdamSpeight2008 isn't that a problem? If there is a limit of X fixes before bad things happen how about limiting code fixes to a smaller number or 75% of available memory, or fix the algorithm to aggregate each document. I would be much happier if a code fix stopped after 50 (100, 500...) fixes (and I could run it again) which might be one fix in each of 50 files or 50 fixes in one document, then what I have today, where I have to search for the error, go to the file, fix all the issues then find another file (which might have 1 issue), and repeat for each file. Switching from Implicit to Explicit declarations in just the Roslyn VB CodeAnalysis project is 39,000 changes and going the other way is even more. Changing to Optional Default Parameter is around 6000 changes in ~800 files (very rough guess).\r\n>\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"6689551147","Type":"PullRequestEvent","CreatedAt":"2017-10-09T03:10:58","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4695","RelatedDescription":"Opened pull request \"WebAssembly instance method support\" (#4695) at dotnet/corert","RelatedBody":"Implements instance method support for WebAssembly. String.Length now works (there aren't many testable instance methods since we don't have newobj yet). By doing this, many more methods start compiling, so I had to fix bugs related to those.\r\n\r\nIncludes:\r\n* Fixing instance method 'this' parameter handling\r\n* Correcting method names to include their types since LLVM was treating all methods with the same short name as the same method\r\n* Implementing ldfld for instance fields. Fixes #4530 \r\n* Implementing leave opcode to fix bad codegen that made LLVM fail compilation\r\n* Creating trap stubs for RuntimeImport methods since we can't build the runtime yet, but ignoring them would fail compilation\r\n"},{"Id":"6687934220","Type":"PullRequestEvent","CreatedAt":"2017-10-08T07:59:03","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/4258","RelatedDescription":"Closed pull request \"Hook up target architecture to MSBuild\" (#4258) at dotnet/corert","RelatedBody":"On @sandreenko's machine when running the `desktop` project, `RuntimeInformation.ProcessArchitecture` (that we use to match CPU architecture of the host) reports x86 and then it goes ahead and loads an x64 RyuJIT DLL into the process without any problems. Looks like `ProcessArchitecture` is a lie on desktop CLR."},{"Id":"6687907251","Type":"IssuesEvent","CreatedAt":"2017-10-08T07:34:14","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/4694","RelatedDescription":"Opened issue \"Intermittent failure in leakgenthrd test\" (#4694) at dotnet/corert","RelatedBody":"```\r\n       D:\\j\\workspace\\debug_windows_nt28ae10f6\\tests_downloaded\\CoreCLR\\GC\\Scenarios\\LeakGen\\leakgenthrd\\\\*.dll \r\n                0 file(s) copied.\r\n        Test should return with ExitCode 100 ...\r\n        Test Passed\r\n        Expected: 100\r\n        Actual: -1073741819\r\n        END EXECUTION - FAILED\r\n        FAILED\r\n        Test Harness Exitcode is : 1\r\n```\r\n\r\nThis fails about 5% of time in the CI. Example: https://ci.dot.net/job/dotnet_corert/job/master/job/debug_windows_nt/1228/\r\n\r\nThis test hasn't been touched in the CoreCLR repo for years: https://github.com/dotnet/coreclr/tree/master/tests/src/GC/Scenarios/LeakGen"},{"Id":"6687900503","Type":"PullRequestEvent","CreatedAt":"2017-10-08T07:27:43","Actor":"jkoritzinsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4693","RelatedDescription":"Opened pull request \"Implement dup IL instruction\" (#4693) at dotnet/corert","RelatedBody":"Fixes #4513 "},{"Id":"6687560230","Type":"PullRequestEvent","CreatedAt":"2017-10-08T01:48:51","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4692","RelatedDescription":"Merged pull request \"Merge master to nmirror\" (#4692) at dotnet/corert","RelatedBody":""},{"Id":"6687560074","Type":"PullRequestEvent","CreatedAt":"2017-10-08T01:48:41","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4692","RelatedDescription":"Opened pull request \"Merge master to nmirror\" (#4692) at dotnet/corert","RelatedBody":""},{"Id":"6686997756","Type":"PullRequestEvent","CreatedAt":"2017-10-07T18:03:58","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4691","RelatedDescription":"Opened pull request \"Update RyuJIT\" (#4691) at dotnet/corert","RelatedBody":""},{"Id":"6686913469","Type":"IssuesEvent","CreatedAt":"2017-10-07T17:05:18","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/4690","RelatedDescription":"Opened issue \"InitializeArray intrinsic must always be expanded\" (#4690) at dotnet/corert","RelatedBody":"I'm hitting the `NO_WAY(\"JIT must expand the intrinsic!\");` in Microsoft.CSharp assembly. This is in the same spirit as dotnet/coreclr#9948.\r\n\r\nTo repro, compile a hello world app with\r\n\r\n```\r\n--singlemethodtypename Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder,Microsoft.CSharp --singlemethodname .cctor --codegenopt NGenDump=*\r\n```\r\n\r\nFrom the looks, this is caused by a stack spill somewhere else than `ldtoken`. This doesn't repro if `-O` is passed.\r\n\r\nNGenDump: \r\n[ngendump.txt](https://github.com/dotnet/corert/files/1366303/ngendump.txt)\r\n\r\n"},{"Id":"6685911246","Type":"PullRequestEvent","CreatedAt":"2017-10-07T02:38:15","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4688","RelatedDescription":"Merged pull request \"Merge nmirror to master\" (#4688) at dotnet/corert","RelatedBody":""},{"Id":"6685812261","Type":"PullRequestEvent","CreatedAt":"2017-10-07T01:11:36","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4689","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#4689) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"6685801949","Type":"PullRequestEvent","CreatedAt":"2017-10-07T01:03:48","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4689","RelatedDescription":"Opened pull request \"Merge changes from TFS\" (#4689) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"6685796565","Type":"PullRequestEvent","CreatedAt":"2017-10-07T00:59:54","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4688","RelatedDescription":"Opened pull request \"Merge nmirror to master\" (#4688) at dotnet/corert","RelatedBody":""},{"Id":"6685782476","Type":"PullRequestEvent","CreatedAt":"2017-10-07T00:49:12","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4687","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#4687) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"916703209548214272","CreatedAt":"2017-10-07T16:34:11+00:00","UserScreenname":"dotnet","Text":"Join @terrajobst at his fire place for a story about .NET Standard versioning. https://t.co/8JAOGpk0Pm","Source":"<a href=\"http://twitter.com/#!/download/ipad\" rel=\"nofollow\">Twitter for iPad</a>","RetweetCount":47,"FavoriteCount":24,"RawContent":null},{"Id":"912821941706268673","CreatedAt":"2017-09-26T23:31:24+00:00","UserScreenname":"dotnet","Text":"Build a web service with F# and .NET Core 2.0 https://t.co/2jSgo1gbty","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":112,"FavoriteCount":64,"RawContent":null}]}},"RunOn":"2017-10-09T05:30:18.1744903Z","RunDurationInMilliseconds":6420}