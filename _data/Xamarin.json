{"Data":{"Blog":{"FeedItems":[{"Title":"Publish to Azure from Visual Studio for Mac","PublishedOn":"2017-11-02T19:28:47+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>As a cloud first, mobile first IDE, Visual Studio for Mac is designed to work side by side with Azure. In this post, you&#8217;ll create an ASP.NET Core project, edit the site to be unique, and then deploy the project to Azure. To complete this task, make sure your setup meets the following requirements: Visual Studio [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/publish-azure-visual-studio-mac/\">Publish to Azure from Visual Studio for Mac</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/publish-azure-visual-studio-mac/","RawContent":null},{"Title":"Xamarin Developer Events in November","PublishedOn":"2017-11-02T12:55:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>The Xamarin and .Net mobile developer community is growing like never before and with so many new events upcoming, there is more opportunity than ever to learn about new and exciting releases, tooling, and updates on Xamarin and related technologies. Network with your local developer community while discussing this month’s ranging topics from optimizing your [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/xamarin-developer-events-november/\">Xamarin Developer Events in November</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/xamarin-developer-events-november/","RawContent":null},{"Title":"Augmented Reality in Xamarin.Android with ARCore","PublishedOn":"2017-10-30T19:50:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Now that you&#8217;ve had a chance to augment reality in your Xamarin iOS apps with ARKit, it&#8217;s time to explore Google&#8217;s take on AR in your Xamarin Android apps. The new ARCore SDK provides APIs for Augmented Reality features, such as motion tracking, plane detection, and light estimation. These are the building blocks you will [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/augmented-reality-xamarin-android-arcore/\">Augmented Reality in Xamarin.Android with ARCore</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/augmented-reality-xamarin-android-arcore/","RawContent":null},{"Title":"Go Large with iOS 11","PublishedOn":"2017-10-26T19:36:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>One of the more obvious user interface changes in iOS 11 is the larger titles that are used across the system apps, from the App Store and Apple Music to Notes and Mail. The Health and Contact apps are shown below: The title animates off the screen and shrinks to a normal-sized navigation bar when [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/go-large-ios-11/\">Go Large with iOS 11</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/go-large-ios-11/","RawContent":null},{"Title":"Introducing the Android SDK Manager","PublishedOn":"2017-10-25T19:55:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>To make the process of managing Android SDKs as smooth as possible, we’ve revamped the Android SDK Manager in Visual Studio for Mac to create a seamless, integrated experience. Not only does this new SDK Manager offer a one-stop shop for all things Android SDK, we&#8217;re also introducing support for automatic SDK dependency resolution. So, let’s [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/introducing-android-sdk-manager/\">Introducing the Android SDK Manager</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/introducing-android-sdk-manager/","RawContent":null},{"Title":"3 Big Things To Explore in the Xamarin.Forms 2.5.0 Pre-Release","PublishedOn":"2017-10-24T19:52:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Over the past year we’ve been working on a couple of &#8220;big things&#8221; that enable you to create more performant applications on more platforms. With our latest stable release, version 2.4.0, we introduced performance optimized renderers on Android, nicknamed Fast Renderers. While faster platform renderers are a clear win, you really start to see the big [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/3-big-things-explore-xamarin-forms-2-5-0-pre-release/\">3 Big Things To Explore in the Xamarin.Forms 2.5.0 Pre-Release</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/3-big-things-explore-xamarin-forms-2-5-0-pre-release/","RawContent":null},{"Title":"Five-Star Apps with Mobile Center Test","PublishedOn":"2017-10-20T12:33:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Five-star mobile apps are all about consistent and predictable output. It&#8217;s not a good experience for users when an app suddenly crashes or doesn’t format correctly on their mobile screens. Developers can easily avoid these scenarios by testing for various scenarios on different devices, and Visual Studio Mobile Center makes it easy to test your mobile [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/five-star-apps-with-visual-studio-mobile-center-test/\">Five-Star Apps with Mobile Center Test</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/five-star-apps-with-visual-studio-mobile-center-test/","RawContent":null},{"Title":"Upcoming Webinar | Build Better Games with Unity and Microsoft Azure","PublishedOn":"2017-10-19T18:51:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Register now to join David Antognoli on Tuesday, November 7 at 9 am PT to learn how to take your Unity games to the next level with powerful cloud services. He’ll walk through how to connect your apps to Microsoft Azure, adding compelling features that users love, like leaderboards and heatmaps, and demo how new [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/upcoming-webinar-build-better-games-unity-microsoft-azure/\">Upcoming Webinar | Build Better Games with Unity and Microsoft Azure</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/upcoming-webinar-build-better-games-unity-microsoft-azure/","RawContent":null},{"Title":"Plugin and Permission Changes with iOS 11","PublishedOn":"2017-10-18T20:24:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>iOS 11 introduced some fun updates around permissions when accessing certain features on the device. I first noticed these changes when trying to access a user location with the Geolocator Plugin in a Xamarin.Forms application. To my surprise, nothing happened. Upon further investigation of the application&#8217;s Output, I noticed a message explaining exactly what I [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/plugin-permission-changes-ios-11/\">Plugin and Permission Changes with iOS 11</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/plugin-permission-changes-ios-11/","RawContent":null},{"Title":"Adaptive UI with Xamarin.Forms","PublishedOn":"2017-10-16T20:58:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Xamarin.Forms has supported iOS, Android, and Windows for a long time. We&#8217;ve also added new platforms to keep up with the changing landscape, such as Tizen and macOS, with Linux and Windows WPF on the horizon. These platforms run on a wide variety of devices including phones, tablets, desktops, and TVs. This presents an interesting [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/adaptive-ui-xamarin-forms/\">Adaptive UI with Xamarin.Forms</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/adaptive-ui-xamarin-forms/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"6802754015","Type":"PullRequestEvent","CreatedAt":"2017-11-02T21:20:40","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1003","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] ApkSigner Failed if minsdk > maxSdk\" (#1003) at xamarin/xamarin-android","RelatedBody":"Fixes https://bugzilla.xamarin.com/show_bug.cgi?id=60444\r\n\r\nWe should NOT ever pass a minSdk value that is greater than\r\nthe maxSdk. It results in the following error\r\n\r\n\tMin API Level (10) > max API Level (8)\r\n\r\nSo we should check the values and use the minimum value\r\nfor the minSdk."},{"Id":"6802404745","Type":"PullRequestEvent","CreatedAt":"2017-11-02T20:05:17","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1005","RelatedDescription":"Opened pull request \"[tests] Windows not writing AndroidManifest.xml to disk\" (#1005) at xamarin/xamarin-android","RelatedBody":"When debugging this particular test on Windows, it was never writing\r\n`AndroidManifest.xml` to disk after the first build.\r\n\r\nThis expression was false, because the times are equal:\r\nhttps://github.com/xamarin/xamarin-android/blob/master/src/Xamarin.Android.Build.Tasks/Tests/Xamarin.ProjectTools/Common/XamarinProject.cs#L352\r\n\r\nClearing the `Timestamp` on the project item, forces the file to be\r\nrewritten, and the test now passes on Windows."},{"Id":"6801456010","Type":"PullRequestEvent","CreatedAt":"2017-11-02T16:52:07","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1002","RelatedDescription":"Merged pull request \"[Xamarin.Android.ProjectTools] Fix logic error in native crash detection.\" (#1002) at xamarin/xamarin-android","RelatedBody":"Commit 855ad009 added logic to detect if a test had a native crash and to\r\nretry the test. There was a flaw in the logic such that it would\r\nrun every test twice...\r\n\r\nThis fixes that."},{"Id":"6801441236","Type":"PullRequestEvent","CreatedAt":"2017-11-02T16:49:25","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1004","RelatedDescription":"Merged pull request \"[tests] fixed Forms project TargetFrameworkVersion\" (#1004) at xamarin/xamarin-android","RelatedBody":"Other Android projects (such as test APKs), set `TargetFrameworkVersion`\r\nby importing `Configuration.props` and using `$(AndroidFrameworkVersion)`.\r\n`AndroidUseLatestPlatformSdk` should also be set to `false`.\r\n\r\nNot sure why this hasn't caused any issues yet, I first noticed this\r\ncausing a failure on PR #997."},{"Id":"6801409791","Type":"PullRequestEvent","CreatedAt":"2017-11-02T16:43:43","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1001","RelatedDescription":"Merged pull request \"Don't optimize URL encoding\" (#1001) at xamarin/xamarin-android","RelatedBody":"Fixes: https://bugzilla.xamarin.com/show_bug.cgi?id=60473\r\n\r\nIn the case when the URL doesn't contain any query elements we\r\noptimized for speed and memory by not using UrlBuilder to do the\r\nencoding work on the URL. However, it causes problems with URLs\r\nthat are sent pre-encoded.\r\n\r\nRemove the optimization and rely on UrlBuilder in all cases."},{"Id":"6801329461","Type":"PullRequestEvent","CreatedAt":"2017-11-02T16:29:00","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/997","RelatedDescription":"Closed pull request \"[build] change path used for xabuild in Makefile\" (#997) at xamarin/xamarin-android","RelatedBody":"Use `bin/$(CONFIGURATION)/bin/xabuild` instead of `tools/scripts/xabuild`\r\n\r\nThis will help figure out what is going on in #949"},{"Id":"6801238643","Type":"PullRequestEvent","CreatedAt":"2017-11-02T16:13:13","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1004","RelatedDescription":"Opened pull request \"[tests] fixed Forms project TargetFrameworkVersion\" (#1004) at xamarin/xamarin-android","RelatedBody":"Other Android projects (such as test APKs), set `TargetFrameworkVersion`\r\nby importing `Configuration.props` and using `$(AndroidFrameworkVersion)`.\r\n`AndroidUseLatestPlatformSdk` should also be set to `false`.\r\n\r\nNot sure why this hasn't caused any issues yet, I first noticed this\r\ncausing a failure on PR #997."},{"Id":"6801075264","Type":"PullRequestEvent","CreatedAt":"2017-11-02T15:46:27","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/995","RelatedDescription":"Closed pull request \"[tests] fix CheckSequencePointGeneration tests\" (#995) at xamarin/xamarin-android","RelatedBody":"On Windows all of the `CheckSequencePointGeneration` tests were failing.\r\n\r\nLooking into, there appeared to be a couple things wrong with the test:\r\n- The lookup for `inApkRuntime` looks like it should filter against\r\n`Runtime == expectedRuntime` instead of `inApk.Length`\r\n- `Assert.IsNotNull` will not work against `ProjectBuilder.RuntimeInfo`,\r\nwhich is a struct\r\n\r\nI'm not sure how these tests are working at the moment on other platforms."},{"Id":"6800882798","Type":"PullRequestEvent","CreatedAt":"2017-11-02T15:14:52","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1003","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] ApkSigner Failed if minsdk > maxSdk\" (#1003) at xamarin/xamarin-android","RelatedBody":"Fixes https://bugzilla.xamarin.com/show_bug.cgi?id=60444\r\n\r\nWe should NOT ever pass a minSdk value that is greater than\r\nthe maxSdk. It results in the following error\r\n\r\n\tMin API Level (10) > max API Level (8)\r\n\r\nSo we should check the values and use the minimum value\r\nfor the minSdk."},{"Id":"6800540447","Type":"PullRequestEvent","CreatedAt":"2017-11-02T14:17:52","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1002","RelatedDescription":"Opened pull request \"[Xamarin.Android.ProjectTools] Fix logic error in native crash detection.\" (#1002) at xamarin/xamarin-android","RelatedBody":"Commit 855ad009 added logic to detect if a test had a native crash and to\r\nretry the test. There was a flaw in the logic such that it would\r\nrun every test twice...\r\n\r\nThis fixes that."},{"Id":"6800091768","Type":"PullRequestEvent","CreatedAt":"2017-11-02T12:50:41","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1001","RelatedDescription":"Opened pull request \"Don't optimize URL encoding\" (#1001) at xamarin/xamarin-android","RelatedBody":"Fixes: https://bugzilla.xamarin.com/show_bug.cgi?id=60473\r\n\r\nIn the case when the URL doesn't contain any query elements we\r\noptimized for speed and memory by not using UrlBuilder to do the\r\nencoding work on the URL. However, it causes problems with URLs\r\nthat are sent pre-encoded.\r\n\r\nRemove the optimization and rely on UrlBuilder in all cases."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"6802999991","Type":"PullRequestEvent","CreatedAt":"2017-11-02T22:23:54","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1249","RelatedDescription":"Merged pull request \"[Core] Hide SetSafeAreaInsets\" (#1249) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n Hide SetSafeAreaInsets\r\n\r\n### Behavioral Changes ###\r\n\r\nuser's won't be able to set safe area insets\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense"},{"Id":"6802320695","Type":"PullRequestEvent","CreatedAt":"2017-11-02T19:46:54","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1249","RelatedDescription":"Opened pull request \"[Core] Hide SetSafeAreaInsets\" (#1249) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n Hide SetSafeAreaInsets\r\n\r\n### Behavioral Changes ###\r\n\r\nuser's won't be able to set safe area insets\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense"},{"Id":"6801875561","Type":"PullRequestEvent","CreatedAt":"2017-11-02T18:12:52","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1233","RelatedDescription":"Closed pull request \"[Android] Rename CreateRenderer overload for backward compatibility with previewer\" (#1233) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nHaving a second public overload of CreateRenderer causes problems for the previewer when it reflects on the method name; to maintain backward compatibility we need to use a different name for the new overload of the method.\r\n\r\n### Bugs Fixed ###\r\n\r\n- Allows vNext to work with the existing previewer.\r\n\r\n### API Changes ###\r\n\r\n`public static IVisualElementRenderer CreateRenderer(VisualElement element, Context context)` => `public static IVisualElementRenderer CreateRenderer2(VisualElement element, Context context)`\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6801864577","Type":"PullRequestEvent","CreatedAt":"2017-11-02T18:10:37","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1237","RelatedDescription":"Merged pull request \"[Android] Change overload of CreateRenderer to internal for previewer compatibility\" (#1237) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis changes one of the overloads of `CreateRenderer` to `internal` to avoid confusing the previewer during reflection. \r\n\r\nTrying this out as an alternative to #1233.\r\n\r\n### API Changes ###\r\n\r\n`public static IVisualElementRenderer CreateRenderer(VisualElement element, Context context)` =>\r\n`internal static IVisualElementRenderer CreateRenderer(VisualElement element, Context context)`\r\n\r\n### Behavioral Changes ###\r\n\r\nThird-party code using `CreateRenderer` will not have access to the new version of the method for the time being. This is expected to have limited impact, as the new version of the method is only necessary to ensure controls work with multi-activity applications in embedding scenarios.\r\n\r\nIn the future, changes to previewer should allow us to make the overload public.\r\n\r\n\r\n"},{"Id":"6801835622","Type":"PullRequestEvent","CreatedAt":"2017-11-02T18:04:56","Actor":"jassmith","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1238","RelatedDescription":"Merged pull request \"[iOS] Fixes for iOS11 \" (#1238) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFixes and new features for iOS11 support.\r\n\r\nPlatform specifics for `SafeArea`, `SafeAreaInsets`  and `LargeTitles`.\r\n\r\n\r\n### Bugs Fixed ###\r\n\r\n- https://bugzilla.xamarin.com/show_bug.cgi?id=60054\r\n- https://bugzilla.xamarin.com/show_bug.cgi?id=59927\r\n\r\n### API Changes ###\r\n\r\nAdded:\r\nPage iOS Platform Specific\r\n ```\r\npublic enum LargeTitleDisplayMode\r\n {\r\n \tAutomatic,\r\n \tAlways,\r\n \tNever\r\n }\r\n\r\n\r\npublic static readonly BindableProperty LargeTitleDisplayProperty = BindableProperty.Create(nameof(LargeTitleDisplay), typeof(LargeTitleDisplayMode), typeof(Page), LargeTitleDisplayMode.Automatic);\r\n\r\npublic static LargeTitleDisplayMode GetLargeTitleDisplay(BindableObject element)\r\npublic static void SetLargeTitleDisplay(BindableObject element, LargeTitleDisplayMode value)\r\npublic static IPlatformElementConfiguration<iOS, FormsElement> SetLargeTitleDisplay(this IPlatformElementConfiguration<iOS, FormsElement> config, LargeTitleDisplayMode value)\r\npublic static LargeTitleDisplayMode LargeTitleDisplay(this IPlatformElementConfiguration<iOS, FormsElement> config)\r\npublic static bool UsingSafeArea(this IPlatformElementConfiguration<iOS, FormsElement> config)\r\n\r\n\r\n\r\nstatic readonly BindablePropertyKey SafeAreaInsetsPropertyKey = BindableProperty.CreateReadOnly(nameof(SafeAreaInsets), typeof(Thickness), typeof(Page), default(Thickness))\r\n\r\npublic static readonly BindableProperty SafeAreaInsetsProperty = SafeAreaInsetsPropertyKey.BindableProperty;\r\n\r\npublic static Thickness GetSafeAreaInsets(BindableObject element)\r\npublic static Thickness SafeAreaInsets(this IPlatformElementConfiguration<iOS, FormsElement> config)\r\npublic static IPlatformElementConfiguration<iOS, FormsElement> SetSafeAreaInsets(this IPlatformElementConfiguration<iOS, FormsElement> config, Thickness value)\r\n\r\n```\r\nNavigationPage iOS Platform Specific\r\n```\r\npublic static readonly BindableProperty UseLargeTitlesProperty = BindableProperty.Create(\"UseLargeTitles\", typeof(bool), typeof(Page), false);\r\n\r\npublic static bool GetPrefersLargeTitles(BindableObject element)\r\npublic static void SetPrefersLargeTitles(BindableObject element, bool value)\r\npublic static IPlatformElementConfiguration<iOS, FormsElement> SetPrefersLargeTitles(this IPlatformElementConfiguration<iOS, FormsElement> config, bool value)\r\npublic static bool PrefersLargeTitles(this IPlatformElementConfiguration<iOS, FormsElement> config)\r\n\r\n```\r\n\r\nCellRenderer\r\n```\r\npublic virtual void SetBackgroundColor(UITableViewCell tableViewCell, Cell cell, UIColor color)\r\n```\r\n\r\n### Behavioral Changes ###\r\n\r\nCellView will extend the view background color to the UITableViewCell, this way it will look good when we Layout the ContentView frame with insets.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n\r\nListview with ViewCell with NO Safe area\r\n![simulator screen shot - iphone x - 2017-11-02 at 15 28 04](https://user-images.githubusercontent.com/1235097/32334520-8a3e1f46-bfe2-11e7-8ed3-94699c2b25dd.png)\r\n\r\nListview with ViewCell with Safe area\r\n![simulator screen shot - iphone x - 2017-11-02 at 15 27 54](https://user-images.githubusercontent.com/1235097/32334521-8a5e4122-bfe2-11e7-9df9-26f059653e46.png)\r\n\r\nCarouselPage with NO Safe area\r\n![simulator screen shot - iphone x - 2017-11-02 at 15 27 39](https://user-images.githubusercontent.com/1235097/32334523-8a80f762-bfe2-11e7-9ee5-8316c9069c99.png)\r\n\r\nCarouselPage with Safe area\r\n![simulator screen shot - iphone x - 2017-11-02 at 15 27 21](https://user-images.githubusercontent.com/1235097/32334524-8ac3f4ea-bfe2-11e7-8baf-431fc34ddd87.png)\r\n\r\nTabbedPage with NO Safe area\r\n![simulator screen shot - iphone x - 2017-11-02 at 15 27 12](https://user-images.githubusercontent.com/1235097/32334527-8b6c140e-bfe2-11e7-9df7-17866a71b320.png)\r\n\r\nTabbedPage with Safe area\r\n![simulator screen shot - iphone x - 2017-11-02 at 15 27 02](https://user-images.githubusercontent.com/1235097/32334528-8b90d514-bfe2-11e7-87eb-e05432783832.png)\r\n\r\nNavigationPage with NO Safe area\r\n![simulator screen shot - iphone x - 2017-11-02 at 15 25 51](https://user-images.githubusercontent.com/1235097/32334530-8bd083b2-bfe2-11e7-881d-996b85c854c1.png)\r\n\r\nNavigationPage with Safe area\r\n![simulator screen shot - iphone x - 2017-11-02 at 15 25 42](https://user-images.githubusercontent.com/1235097/32334531-8bfa4f94-bfe2-11e7-933c-786c7cda1048.png)\r\n\r\nContentPage with NO Safe area\r\n![simulator screen shot - iphone x - 2017-11-02 at 15 25 32](https://user-images.githubusercontent.com/1235097/32334532-8c1f33b8-bfe2-11e7-99a0-161ac870ec5f.png)\r\n\r\nContentPage with Safe area\r\n![simulator screen shot - iphone x - 2017-11-02 at 15 25 24](https://user-images.githubusercontent.com/1235097/32334533-8c5cb88c-bfe2-11e7-8b1d-66f06d6a8632.png)\r\n\r\nListView with Grouping safe area\r\n![simulator screen shot - iphone x - 2017-11-02 at 15 36 42](https://user-images.githubusercontent.com/1235097/32335058-eac788ce-bfe3-11e7-838f-6369ab8eca5b.png)\r\n\r\nlandscape\r\n![simulator screen shot - iphone x - 2017-11-02 at 15 37 07](https://user-images.githubusercontent.com/1235097/32335061-eb12a3e0-bfe3-11e7-8418-086cd2922dc4.png)\r\n\r\n\r\nListView with Grouping NO safe area (see group header scrolling up)\r\n![simulator screen shot - iphone x - 2017-11-02 at 15 36 15](https://user-images.githubusercontent.com/1235097/32335057-ea57d7ea-bfe3-11e7-8a99-06889cd38795.png)\r\n\r\nlandscape\r\n![simulator screen shot - iphone x - 2017-11-02 at 15 37 47](https://user-images.githubusercontent.com/1235097/32335062-eb9b7d28-bfe3-11e7-867d-87336462d2b7.png)\r\n\r\nTableView with Safe Area\r\n![simulator screen shot - iphone x - 2017-11-02 at 15 37 58](https://user-images.githubusercontent.com/1235097/32335063-ebca66ba-bfe3-11e7-8a85-293c9c540f1c.png)\r\n\r\nlandscape\r\n![simulator screen shot - iphone x - 2017-11-02 at 15 38 00](https://user-images.githubusercontent.com/1235097/32335064-ebfbca84-bfe3-11e7-8244-3af7bd0287a4.png)\r\n\r\nTableView with no Safe Area (we do set the background color to viewcell view but layout the cell in the right place)\r\n![simulator screen shot - iphone x - 2017-11-02 at 15 38 10](https://user-images.githubusercontent.com/1235097/32335065-ec3e9aee-bfe3-11e7-9d14-910706338d46.png)\r\n\r\nlandscape\r\n![simulator screen shot - iphone x - 2017-11-02 at 15 38 15](https://user-images.githubusercontent.com/1235097/32335069-ed2a2770-bfe3-11e7-93b9-5cb0f30bbb99.png)"},{"Id":"6799012181","Type":"PullRequestEvent","CreatedAt":"2017-11-02T08:47:06","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1248","RelatedDescription":"Merged pull request \"[Controls] Add info  when using FastRenderers\" (#1248) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nJust some info on the gallery when using Fast Renderers flag\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"6803870648","Type":"PullRequestEvent","CreatedAt":"2017-11-03T04:24:38","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2954","RelatedDescription":"Opened pull request \"[Generator] BindAs attribute for smart enums of an array of nullable values generates code that doesn't compile, Fixes bug 57797\" (#2954) at xamarin/xamarin-macios","RelatedBody":"https://bugzilla.xamarin.com/show_bug.cgi?id=57797\r\n\r\nWe now correctly compile array of nullable types\r\n\r\nBuild diff: https://gist.github.com/dalexsoto/65f791ca3c0519dd7440596e3cd29490"},{"Id":"6803565257","Type":"PullRequestEvent","CreatedAt":"2017-11-03T01:59:04","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2953","RelatedDescription":"Opened pull request \"Merge xcode9.1 into master\" (#2953) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"6802615088","Type":"PullRequestEvent","CreatedAt":"2017-11-02T20:50:59","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2952","RelatedDescription":"Merged pull request \"[mono] mono 5.4.99 is the maximum, compatible version to build everything. Fixes #60394\" (#2952) at xamarin/xamarin-macios","RelatedBody":"Newer mono includes a Mono.Cecil with a breaking change that break xtro [1].\nThe fix cannot be compatible with stable and newer mono so it must wait that\nwe bump/require 2017-10.\n\nThis reverts PR2928 manually (the github generated revert [3] showed other\ncommits)\n\n[1] https://bugzilla.xamarin.com/show_bug.cgi?id=60394\n[2] https://github.com/xamarin/xamarin-macios/pull/2928\n[3] https://github.com/xamarin/xamarin-macios/pull/2933"},{"Id":"6802161714","Type":"PullRequestEvent","CreatedAt":"2017-11-02T19:11:40","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2952","RelatedDescription":"Opened pull request \"[mono] mono 5.4.99 is the maximum, compatible version to build everything. Fixes #60394\" (#2952) at xamarin/xamarin-macios","RelatedBody":"Newer mono includes a Mono.Cecil with a breaking change that break xtro [1].\nThe fix cannot be compatible with stable and newer mono so it must wait that\nwe bump/require 2017-10.\n\nThis reverts PR2928 manually (the github generated revert [3] showed other\ncommits)\n\n[1] https://bugzilla.xamarin.com/show_bug.cgi?id=60394\n[2] https://github.com/xamarin/xamarin-macios/pull/2928\n[3] https://github.com/xamarin/xamarin-macios/pull/2933"},{"Id":"6802112693","Type":"PullRequestEvent","CreatedAt":"2017-11-02T19:01:01","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2409","RelatedDescription":"Merged pull request \"[msbuild] Set the target architecture in the Info.plist UIRequiredDev…\" (#2409) at xamarin/xamarin-macios","RelatedBody":"…iceCapabilities\r\n\r\nFixes https://bugzilla.xamarin.com/show_bug.cgi?id=58544"},{"Id":"6802081267","Type":"PullRequestEvent","CreatedAt":"2017-11-02T18:54:40","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2940","RelatedDescription":"Merged pull request \"[security] Add RequestSharedWebCredential overload. Fixes #60423\" (#2940) at xamarin/xamarin-macios","RelatedBody":"* The original API was incorrect. Lack of documentation at binding time?\n* Use a strong dictionary to expose the credentials\n\nreference:\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=60423"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"926171028203634688","CreatedAt":"2017-11-02T19:35:55+00:00","UserScreenname":"xamarinhq","Text":"Learn how to publish to #Azure from #VS4Mac: https://t.co/wnNmElsQrM https://t.co/8LXVjJhLNc","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":25,"FavoriteCount":10,"RawContent":null},{"Id":"926115185240178688","CreatedAt":"2017-11-02T15:54:01+00:00","UserScreenname":"xamarinhq","Text":"Add cross-platform charts to any app the easy way with #MicroCharts: https://t.co/VeqfS1vfIL https://t.co/FC7lbCKhg8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":87,"FavoriteCount":32,"RawContent":null},{"Id":"926072405449207809","CreatedAt":"2017-11-02T13:04:01+00:00","UserScreenname":"xamarinhq","Text":"Find a #Xamarin event near you this November! | https://t.co/doSJzuJkKi https://t.co/jrw1KqJh7p","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":17,"FavoriteCount":11,"RawContent":null},{"Id":"925755062617608192","CreatedAt":"2017-11-01T16:03:01+00:00","UserScreenname":"xamarinhq","Text":"Bring 3D Models to life in augmented reality with #UrhoSharp: https://t.co/0c8YDgfF2Z https://t.co/ZZaItGQ29a","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":24,"RawContent":null},{"Id":"925391160755085318","CreatedAt":"2017-10-31T15:57:00+00:00","UserScreenname":"xamarinhq","Text":"Next week we're hosting a webinar on building better games with #Unity3D &amp; Microsoft #Azure—sign up now to join us: https://t.co/0c8to6tPmT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":30,"FavoriteCount":13,"RawContent":null},{"Id":"925090534133321728","CreatedAt":"2017-10-30T20:02:25+00:00","UserScreenname":"xamarinhq","Text":"Add Augmented Reality to your #XamarinAndroid apps with #ARCore: https://t.co/TwpBAAMyUJ https://t.co/2x7nUJzpF3","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":37,"RawContent":null},{"Id":"925031289010388992","CreatedAt":"2017-10-30T16:07:00+00:00","UserScreenname":"xamarinhq","Text":"Add push notifications to your iOS apps with #Azure Notification Hubs: https://t.co/GJAQDvFyAl","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":41,"FavoriteCount":14,"RawContent":null},{"Id":"924811843180392449","CreatedAt":"2017-10-30T01:35:00+00:00","UserScreenname":"xamarinhq","Text":"Easy iOS app provisioning with fastlane and #VS4Mac: https://t.co/wNcfcCJn1v","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":19,"RawContent":null},{"Id":"924464051752787968","CreatedAt":"2017-10-29T02:33:00+00:00","UserScreenname":"xamarinhq","Text":"#Xamarin's @davidortinau shares his top 5 ways to boost your #XamarinForms start up time (+ a couple bonus tips!): https://t.co/OqbHBRux5G","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":99,"FavoriteCount":42,"RawContent":null},{"Id":"923943119493713920","CreatedAt":"2017-10-27T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to add local notifications to a native #Xamarin.Mac app using our Pomodoro sample project: https://t.co/fmHnM8m18Z","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":35,"FavoriteCount":13,"RawContent":null},{"Id":"923637228332552193","CreatedAt":"2017-10-26T19:47:30+00:00","UserScreenname":"xamarinhq","Text":"Add large titles to your iOS 11 apps in this post from @conceptdev: https://t.co/RDyk6GDVUU https://t.co/ZOsrbAC1sc","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":30,"FavoriteCount":16,"RawContent":null},{"Id":"923566386881974272","CreatedAt":"2017-10-26T15:06:00+00:00","UserScreenname":"xamarinhq","Text":"#Xamarin's Charles Petzold shows you how to get started with #SkiaSharp for #XamarinForms: https://t.co/mlySNk9fev","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":17,"RawContent":null},{"Id":"923279245887135745","CreatedAt":"2017-10-25T20:05:00+00:00","UserScreenname":"xamarinhq","Text":"Introducing the Android SDK Manager: https://t.co/U1OxP9CeeJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":31,"RawContent":null},{"Id":"923217836167847937","CreatedAt":"2017-10-25T16:00:59+00:00","UserScreenname":"xamarinhq","Text":"Have you saved the date yet? Visit https://t.co/swPXPdFtSt and add a calendar reminder to join us live online Novem… https://t.co/uLp7HDcxD4","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":28,"FavoriteCount":16,"RawContent":null},{"Id":"923216833938935809","CreatedAt":"2017-10-25T15:57:00+00:00","UserScreenname":"xamarinhq","Text":"Try out the latest new features for #Xamarin in #VS2017 without affecting your production environment: https://t.co/6QFngIYygP","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":19,"RawContent":null},{"Id":"923005188637646853","CreatedAt":"2017-10-25T01:56:00+00:00","UserScreenname":"xamarinhq","Text":"Don't miss our 11/7 webinar on building better games with #Unity3D and Microsoft #Azure! Register now to join us: https://t.co/0c8to6tPmT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":24,"FavoriteCount":16,"RawContent":null},{"Id":"922915335824478210","CreatedAt":"2017-10-24T19:58:57+00:00","UserScreenname":"xamarinhq","Text":"Check out 3 BIG new features to explore in the #XamarinForms 2.5.0 Pre-Release: https://t.co/Du28Gz40ru","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":75,"RawContent":null}]}},"RunOn":"2017-11-03T05:30:45.2581432Z","RunDurationInMilliseconds":3802}