{"Data":{"Blog":{"FeedItems":[{"Title":"Understanding the Whys, Whats, and Whens of ValueTask","PublishedOn":"2018-11-07T18:00:31+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The .NET Framework 4 saw the introduction of the System.Threading.Tasks namespace, and with it the Task class. This type and the derived Task&#60;TResult&#62; have long since become a staple of .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/07/understanding-the-whys-whats-and-whens-of-valuetask/","RawContent":null},{"Title":"Announcing .NET Standard 2.1","PublishedOn":"2018-11-05T17:42:38+00:00","CommentsCount":73,"FacebookCount":0,"Summary":"Since we shipped .NET Standard 2.0 about a year ago, we&#8217;ve shipped two updates to .NET Core 2.1 and are about to release .NET Core 2.2. It&#8217;s time to update the standard to include some of...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/05/announcing-net-standard-2-1/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access build 3673","PublishedOn":"2018-10-30T19:27:39+00:00","CommentsCount":18,"FacebookCount":0,"Summary":"We are happy to share the next Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a single package that bundles the .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/30/announcing-net-framework-4-8-early-access-build-3673/","RawContent":null},{"Title":"Bringing .NET application performance analysis to Linux","PublishedOn":"2018-10-24T21:36:02+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Both the Windows and Linux ecosystems have a swath of battle-hardened performance analysis and investigation tools. But up until recently, developers and platform engineers could use none of these...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/24/bringing-net-application-performance-analysis-to-linux/","RawContent":null},{"Title":".NET Core Source Code Analysis with Intel® VTune™ Amplifier","PublishedOn":"2018-10-23T21:04:49+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"This post was written by Varun Venkatesan, Li Tian, Denis Pravdin, who are engineers at Intel. They are excited to share .NET Core-specific enhancements that Intel has made to VTune Amplifier...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/23/net-core-source-code-analysis-with-intel-vtune-amplifier/","RawContent":null},{"Title":"Call For Participation: .NET and TypeScript at FOSDEM conference","PublishedOn":"2018-10-23T20:16:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The organizers of the FOSDEM 2019 conference have allocated a “Developer Room” on Saturday February 2nd 2019 for .NET and TypeScript discussions in Brussels Belgium.   FOSDEM is one of Europe’s most...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/23/call-for-participation-net-and-typescript-at-fosdem-conference/","RawContent":null},{"Title":".NET Framework October 2018 Preview of Quality Rollup","PublishedOn":"2018-10-18T20:44:34+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Today, we are releasing the October 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. CLR Updated Japanese dates that...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/18/net-framework-october-2018-preview-of-quality-rollup/","RawContent":null},{"Title":"Announcing .NET Core 2.2 Preview 3","PublishedOn":"2018-10-18T01:03:01+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.2 Preview 3. We have made more improvements to the overall release that we would love to get your feedback on, either in the comments or at dotnet/core #2004....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/17/announcing-net-core-2-2-preview-3/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.2 Preview 3","PublishedOn":"2018-10-17T20:10:48+00:00","CommentsCount":23,"FacebookCount":0,"Summary":"Today we are making EF Core 2.2 Preview 3 available, together with a new preview of our data provider for Cosmos DB and updated spatial extensions for various providers. Preview 3 is going to be the...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/17/announcing-entity-framework-core-2-2-preview-3/","RawContent":null},{"Title":"Automating Release Notes with Azure Functions","PublishedOn":"2018-10-16T15:00:44+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We can all agree that tracking the progress of a project enhances productivity and is an effective way to keep everyone involved of its progress. When it comes to managing your project in Azure DevOps...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/16/automating-release-notes-with-azure-functions/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8520090559","Type":"PullRequestEvent","CreatedAt":"2018-11-01T16:20:08","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Merged pull request \"Update logo for couchbase-lite in projects.json\" (#113) at dotnet/foundation","RelatedBody":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser."},{"Id":"8448824845","Type":"PullRequestEvent","CreatedAt":"2018-10-19T12:44:07","Actor":"SeanKilleen","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Opened pull request \"Update logo for couchbase-lite in projects.json\" (#113) at dotnet/foundation","RelatedBody":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65"},{"Id":"8341294365","Type":"IssuesEvent","CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Opened issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112) at dotnet/foundation","RelatedBody":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n"},{"Id":"8203056810","Type":"IssuesEvent","CreatedAt":"2018-09-02T16:49:34","Actor":"adamralph","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/111","RelatedDescription":"Opened issue \"Sourcelink location is confusing\" (#111) at dotnet/home","RelatedBody":"The README has link under the \"Cameron Taggart\" section pointing to https://github.com/ctaggart/SourceLink but the project now seems to live under the \"dotnet\" org in https://github.com/dotnet/sourcelink/ which suggests the link should be changed to that, and moved under the \"Microsoft\" section."},{"Id":"8173033759","Type":"PullRequestEvent","CreatedAt":"2018-08-27T16:21:56","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/110","RelatedDescription":"Merged pull request \"Fix - add missing comma\" (#110) at dotnet/home","RelatedBody":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix."},{"Id":"8163761410","Type":"PullRequestEvent","CreatedAt":"2018-08-24T15:35:46","Actor":"jkonicki","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/110","RelatedDescription":"Opened pull request \"Fix - add missing comma\" (#110) at dotnet/home","RelatedBody":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix."},{"Id":"8160074991","Type":"PullRequestEvent","CreatedAt":"2018-08-23T23:10:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/108","RelatedDescription":"Merged pull request \"Fix errors in projects.json\" (#108) at dotnet/home","RelatedBody":""},{"Id":"8160071932","Type":"PullRequestEvent","CreatedAt":"2018-08-23T23:09:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/109","RelatedDescription":"Merged pull request \"Add Steeltoe to the project listing\" (#109) at dotnet/home","RelatedBody":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8554126718","Type":"PullRequestEvent","CreatedAt":"2018-11-08T04:28:16","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20872","RelatedDescription":"Opened pull request \"Add work item dumping support to SOS' ThreadPool command\" (#20872) at dotnet/coreclr","RelatedBody":"Adds a -wi switch to the ThreadPool command that will enumerate all queues dumping out all found work items.\r\n\r\nFor example, given this program:\r\n```C#\r\nusing System;\r\nusing System.Linq;\r\nusing System.Threading;\r\nusing System.Threading.Tasks;\r\n\r\nclass Program\r\n{\r\n    static void Main()\r\n    {\r\n        for (int i = 0; i < Environment.ProcessorCount; i++) Task.Run(QueueWork);\r\n        QueueWork();\r\n        Console.ReadLine();\r\n    }\r\n\r\n    static void QueueWork()\r\n    {\r\n        Task.Run(A);\r\n        ThreadPool.QueueUserWorkItem(B, null);\r\n        ThreadPool.QueueUserWorkItem(C, 42, true);\r\n        Task.Run(D);\r\n    }\r\n\r\n    static void A() => Thread.CurrentThread.Join();\r\n    static void B(object s) => Thread.CurrentThread.Join();\r\n    static void C(int s) => Thread.CurrentThread.Join();\r\n    static async Task D() { await Task.Yield(); Thread.CurrentThread.Join(); }\r\n}\r\n```\r\nrunning it and quickly attaching WinDBG/sos yielded the following output:\r\n```\r\n0:022> !threadpool -wi\r\nCPU utilization: 19%\r\nWorker Thread: Total: 11 Running: 11 Idle: 0 MaxLimit: 32767 MinLimit: 8\r\nWork Request in Queue: 1\r\n    AsyncTimerCallbackCompletion TimerInfo@000001d831d959b0\r\n\r\nQueued work items:\r\n           Queue          Address Work Item\r\n        [Global] 000001d819a337d0 System.Threading.QueueUserWorkItemCallbackDefaultContext => Program.B(System.Object)\r\n        [Global] 000001d819a38300 System.Threading.QueueUserWorkItemCallbackDefaultContext => Program.B(System.Object)\r\n        [Global] 000001d819a3a308 System.Threading.QueueUserWorkItemCallbackDefaultContext => Program.B(System.Object)\r\n        [Global] 000001d819a3c310 System.Threading.QueueUserWorkItemCallbackDefaultContext => Program.B(System.Object)\r\n        [Global] 000001d819a3e318 System.Threading.QueueUserWorkItemCallbackDefaultContext => Program.B(System.Object)\r\n        [Global] 000001d819a40320 System.Threading.QueueUserWorkItemCallbackDefaultContext => Program.B(System.Object)\r\n        [Global] 000001d819a42328 System.Threading.QueueUserWorkItemCallbackDefaultContext => Program.B(System.Object)\r\n        [Global] 000001d819a33830 System.Threading.QueueUserWorkItemCallbackDefaultContext`1[[System.Int32, System.Private.CoreLib]] => Program.C(Int32)\r\n        [Global] 000001d819a33890 System.Threading.Tasks.Task`1[[System.Threading.Tasks.Task, System.Private.CoreLib]] => Program.D()\r\n        [Global] 000001d819a40498 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib],[Program+d__5, test]]\r\n        [Global] 000001d819a36470 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib],[Program+d__5, test]]\r\n        [Global] 000001d819a3e490 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib],[Program+d__5, test]]\r\n        [Global] 000001d819a3c488 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib],[Program+d__5, test]]\r\n        [Global] 000001d819a3a480 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib],[Program+d__5, test]]\r\n        [Global] 000001d819a424a0 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib],[Program+d__5, test]]\r\n        [Global] 000001d819a38528 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib],[Program+d__5, test]]\r\n        [Global] 000001d819a34480 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib],[Program+d__5, test]]\r\n000001d819a34080 000001d819a34288 System.Threading.Tasks.Task => Program.A()\r\n000001d819a36080 000001d819a36278 System.Threading.Tasks.Task => Program.A()\r\n000001d819a38080 000001d819a38280 System.Threading.Tasks.Task => Program.A()\r\n000001d819a3a080 000001d819a3a288 System.Threading.Tasks.Task => Program.A()\r\n000001d819a3c080 000001d819a3c290 System.Threading.Tasks.Task => Program.A()\r\n000001d819a3e080 000001d819a3e298 System.Threading.Tasks.Task => Program.A()\r\n000001d819a40080 000001d819a402a0 System.Threading.Tasks.Task => Program.A()\r\n000001d819a42080 000001d819a422a8 System.Threading.Tasks.Task => Program.A()\r\nStatistics:\r\n              MT    Count    TotalSize Class Name\r\n00007ffee06b8e60        1           32 System.Threading.QueueUserWorkItemCallbackDefaultContext`1[[System.Int32, System.Private.CoreLib]]\r\n00007fff34ecc928        1           72 System.Threading.Tasks.Task`1[[System.Threading.Tasks.Task, System.Private.CoreLib]]\r\n00007fff34eddb70        7          224 System.Threading.QueueUserWorkItemCallbackDefaultContext\r\n00007fff34eca440        8          512 System.Threading.Tasks.Task\r\n00007ffee07814d8        8          896 System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib],[Program+<D>d__5, test]]\r\nTotal 25 objects\r\n\r\n--------------------------------------\r\nNumber of Timers: 1\r\n--------------------------------------\r\nCompletion Port Thread:Total: 0 Free: 0 MaxFree: 16 CurrentLimit: 0 MaxLimit: 1000 MinLimit: 8\r\n```\r\n\r\ncc: @noahfalk, @mikem8361, @kouvel "},{"Id":"8554123095","Type":"IssuesEvent","CreatedAt":"2018-11-08T04:26:56","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/16783","RelatedDescription":"Closed issue \"Roundtrip string format for single/double doesn't roundtrip -0\" (#16783) at dotnet/coreclr","RelatedBody":"The string format \"R\" is supposed to allow you to get back the same value as you initially had. When the value is negative zero, the negative gets dropped and the value does not round trip. This can be easily seen when dividing 1 by the value as you will get either positive or negative infinity.\r\n\r\n```csharp\r\ndouble initialValue = -0.0;\r\nstring valueString = initialValue.ToString(\"R\", CultureInfo.InvariantCulture);\r\ndouble roundTripped = double.Parse(valueString, CultureInfo.InvariantCulture);\r\nConsole.WriteLine(\"1 / initialValue : \" + 1 / initialValue);\r\nConsole.WriteLine(\"1 / roundTripped : \" + 1 / roundTripped);\r\n\r\n// Output:\r\n// 1 / initialValue : -∞\r\n// 1 / roundTripped : ∞\r\n```"},{"Id":"8554122538","Type":"IssuesEvent","CreatedAt":"2018-11-08T04:26:43","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/17467","RelatedDescription":"Closed issue \"Double doesn't Parse correctly\" (#17467) at dotnet/coreclr","RelatedBody":"While doing some mathematical stuff that worked fine in Java I found that C# / .NET does a rather poor job on parsing double values:\r\n```code\r\nNumber2Parse=4.3413853813852797e+192 IEEE754=67ee7316b1545878 C#=4.3413853813852797E+192\r\nNumber2Parse=4.34138538138528e+192 IEEE754=67ee7316b1545878 C#=4.3413853813852797E+192\r\n```\r\nYou can verify in any browser that 4.3413853813852797e+192 and 4.34138538138528e+192 are distinct values.  Version: CLR v4.0.30319\r\n\r\n```c#\r\nusing System;\r\n\r\nnamespace mathbug\r\n{\r\n    class Program\r\n    {\r\n        static void ShowNumber(string number2Parse)\r\n        {\r\n            double d = Double.Parse(number2Parse);\r\n            ulong ieee754 = (ulong)BitConverter.DoubleToInt64Bits(d);\r\n            Console.WriteLine(\"Number2Parse=\" + number2Parse + \" IEEE754=\" + Convert.ToString((long)ieee754, 16) + \" C#=\" + d.ToString(\"G17\"));\r\n        }\r\n \r\n        static void Main(string[] args)\r\n        {\r\n            ShowNumber(\"4.3413853813852797e+192\");\r\n            ShowNumber(\"4.34138538138528e+192\");\r\n        }\r\n    }\r\n}\r\n```"},{"Id":"8554122378","Type":"IssuesEvent","CreatedAt":"2018-11-08T04:26:40","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/1316","RelatedDescription":"Closed issue \"Double.Parse gets the wrong answer for inputs with as few as 1 significant digits.\" (#1316) at dotnet/coreclr","RelatedBody":"There are a number of issues with `Double.Parse`. Ideally we would like it to follow the [IEEE spec](http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=4610935&tag=1) section 5.12.2 (for inputs of 20 or fewer digits, round to nearest representable double, but when two distinct representable numbers are precisely equidistant, round to even), give results that are the same when run on x86 vs x64 (we currently differ on the string `\"0.6822871999174\"`, for example, only returning the correct result on x86), and be monotonic. It is currently none of those.\n\nHere is a short snippet of C# code that illustrates all three issues. When run on x64, it demonstrates that `Double.Parse` is not monotonic.\n\n``` cs\n            Console.WriteLine(\"{0:G17}  {0:R}\", Double.Parse(\"0.6822871999174000000\"));\n            Console.WriteLine(\"{0:G17}  {0:R}\", Double.Parse(\"0.6822871999174000001\"));\n```\n\nThe strings \"1e126\" and \"5e-107\"appear to parse into different numbers from double.Parse depending on whether you're running on a 32-bit or 64-bit runtime. The former gets the right result from double.Parse only on 64-bit systems; the latter gets the right result from double.Parse only on 32-bit systems.\n\nSee also https://github.com/dotnet/roslyn/issues/4221, which demonstrates that this bug is inherited into the compile-time behavior of the C# compiler. Because the VS IDE runs in x86 and the batch compiler runs in x64, the design-time and run-time experiences are inconsistent.\n"},{"Id":"8554114723","Type":"PullRequestEvent","CreatedAt":"2018-11-08T04:23:50","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20707","RelatedDescription":"Merged pull request \"Fixing up the Double/Single parsing code to be correct\" (#20707) at dotnet/coreclr","RelatedBody":"This cleans up the `System.Double` and `System.Single` parsing code to be correct. It is a port of the Roslyn \"RealParser\" code with a few modifications:\r\n* It was updated to use our `Number.BigInteger` structure, rather than `System.Numerics.BigInteger`\r\n* It was updated to have a fast-path for sequences up to 15 digits and exponents up to +/-22\r\n  * With plans for a future PR to expand this to 19 digits and exponents up to +/-27 (using 80-bit extended precision floating-point arithmetic)\r\n\r\nFor numbers that hit the fast-path, we are no slower than the current implementation and up to 30% faster. For numbers that have to fallback to the slow-path, the worst case I saw was 500% slower (for `double.Epsilon`).\r\n* The slowdown was expected for the `slow-path`, as you must consider and construct a `BigInteger` containing up to 768 digits (but no more digits than the length of the input string). You must then do various arithmetic operations (including division) to compute the correct and precisely rounded result.\r\n  * There are a likely a few places we could improve the algorithm, if and as needed (called out throughout the PR).\r\n* It is additionally worth noting that, the numbers that fall into the slow-path are not expected to be common input cases.\r\n  * After the number has been parsed from it's exact string, you can round-trip it (to string, and back to the nearest representable double) using at most 17 digits. As such, most inputs are expected to have 17 or less significant digits\r\n  * Due to the distribution of floating-point numbers, over half of the unique values lie between -1 and +1 (the delta between each unique value changes at every power of 2). As such, most inputs are expected to fall in this range\r\n  * One could also speculate that the magnitude of most inputs will be between 10^27 and 10^-27, given the range and a looking at a list of special values that fall into and outside this range: https://en.wikipedia.org/wiki/Orders_of_magnitude_(numbers)\r\n\r\nThis should resolve:\r\n* https://github.com/dotnet/coreclr/issues/1316\r\n* https://github.com/dotnet/coreclr/issues/17467\r\n* https://github.com/dotnet/coreclr/issues/16783"},{"Id":"8553919444","Type":"PullRequestEvent","CreatedAt":"2018-11-08T03:15:56","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20146","RelatedDescription":"Merged pull request \"Expose 64-bit only hardware intrinsic in nested classes\" (#20146) at dotnet/coreclr","RelatedBody":"This PR contribute to https://github.com/dotnet/coreclr/issues/20062\r\n\r\n1. Each ISA class may have a nested class named `X64` to contain 64-bit only hardware intrinsic. .\r\n2. This PR only moves \"intrinsic\" into the nested classes, and helper intrinsic will support 32-bit platforms by fallback or JIT in the next steps."},{"Id":"8553918560","Type":"PullRequestEvent","CreatedAt":"2018-11-08T03:15:39","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20147","RelatedDescription":"Merged pull request \"Move the various helper intrinsics to be implemented on the S.R.Intrinsics.Vector types\" (#20147) at dotnet/coreclr","RelatedBody":""},{"Id":"8553904828","Type":"PullRequestEvent","CreatedAt":"2018-11-08T03:11:20","Actor":"swaroop-sridhar","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20871","RelatedDescription":"Opened pull request \"WIP: Test Marshall.LoadLibrary API\" (#20871) at dotnet/coreclr","RelatedBody":""},{"Id":"8553880158","Type":"PullRequestEvent","CreatedAt":"2018-11-08T03:03:43","Actor":"echesakovMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20740","RelatedDescription":null,"RelatedBody":"Lower fast tail call can replace local variables (holding Caller stack arguments) with new temps in order to set up Callee stack arguments correctly. This involves patching corresponding LCL_VAR and LCL_VAR_ADDR nodes and replacing them with the location of a new temp. \r\n\r\nThis is not done for control expression which continues pointing to the old location and can contain a Callee argument. \r\n\r\nI attached assemblies for the regression test.\r\n\r\n**Before** \r\n```asm\r\n; Assembly listing for method Der1:M(int,int,int,int,int,ref):this\r\n; Emitting BLENDED_CODE for X64 CPU with AVX - Unix\r\n; compiler->opts.MinOpts() is true\r\n; rbp based frame\r\n; fully interruptible\r\n; Final local variable assignments\r\n;\r\n;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp-0x08]   this class-hnd\r\n;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp-0x0C]\r\n;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp-0x10]\r\n;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp-0x14]\r\n;  V04 arg4         [V04    ] (  1,  1   )     int  ->  [rbp-0x18]\r\n;  V05 arg5         [V05    ] (  1,  1   )     int  ->  [rbp-0x1C]\r\n;  V06 arg6         [V06    ] (  1,  1   )     ref  ->  [rbp+0x10]   class-hnd\r\n;# V07 OutArgs      [V07    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]\r\n;  V08 tmp1         [V08    ] (  1,  1   )     ref  ->  [rbp-0x28]   must-init\r\n;\r\n; Lcl frame size = 48\r\n\r\nG_M20380_IG01:\r\n       55                   push     rbp\r\n       4883EC30             sub      rsp, 48\r\n       488D6C2430           lea      rbp, [rsp+30H]\r\n       33C0                 xor      rax, rax\r\n       488945D8             mov      qword ptr [rbp-28H], rax\r\n       48897DF8             mov      gword ptr [rbp-08H], rdi\r\n       8975F4               mov      dword ptr [rbp-0CH], esi\r\n       8955F0               mov      dword ptr [rbp-10H], edx\r\n       894DEC               mov      dword ptr [rbp-14H], ecx\r\n       448945E8             mov      dword ptr [rbp-18H], r8d\r\n       44894DE4             mov      dword ptr [rbp-1CH], r9d\r\n\r\nG_M20380_IG02:\r\n       33FF                 xor      rdi, rdi\r\n       488B7510             mov      rsi, gword ptr [rbp+10H]\r\n       488975D8             mov      gword ptr [rbp-28H], rsi\r\n       90                   nop\r\n\r\nG_M20380_IG03:\r\n       48897D10             mov      gword ptr [rbp+10H], rdi\r\n       488B7DD8             mov      rdi, gword ptr [rbp-28H]\r\n       8B75F4               mov      esi, dword ptr [rbp-0CH]\r\n       8B55F0               mov      edx, dword ptr [rbp-10H]\r\n       8B4DEC               mov      ecx, dword ptr [rbp-14H]\r\n       448B45E8             mov      r8d, dword ptr [rbp-18H]\r\n       448B4DE4             mov      r9d, dword ptr [rbp-1CH]\r\n       488B4510             mov      rax, gword ptr [rbp+10H]\r\n       488B00               mov      rax, qword ptr [rax]\r\n       488B4048             mov      rax, qword ptr [rax+72]\r\n       488B4020             mov      rax, qword ptr [rax+32]\r\n\r\nG_M20380_IG04:\r\n       488D6500             lea      rsp, [rbp]\r\n       5D                   pop      rbp\r\n       48FFE0               rex.jmp  rax\r\n\r\n; Total bytes of code 96, prolog size 37 for method Der1:M(int,int,int,int,int,ref):this\r\n; ============================================================\r\n```\r\n\r\nNote that in G_M20380_IG03 we continue using \"trashed\" local at [rbp+10H] in control expression but we should have used a new temp spilled at [rbp-28H]\r\n```asm\r\n       488B4510             mov      rax, gword ptr [rbp+10H]\r\n       488B00               mov      rax, qword ptr [rax]\r\n       488B4048             mov      rax, qword ptr [rax+72]\r\n       488B4020             mov      rax, qword ptr [rax+32]\r\n```\r\n\r\n\r\n**After**\r\n```asm\r\n; Assembly listing for method Der1:M(int,int,int,int,int,ref):this\r\n; Emitting BLENDED_CODE for X64 CPU with AVX - Unix\r\n; compiler->opts.MinOpts() is true\r\n; rbp based frame\r\n; fully interruptible\r\n; Final local variable assignments\r\n;\r\n;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp-0x08]   this class-hnd\r\n;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp-0x0C]\r\n;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp-0x10]\r\n;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp-0x14]\r\n;  V04 arg4         [V04    ] (  1,  1   )     int  ->  [rbp-0x18]\r\n;  V05 arg5         [V05    ] (  1,  1   )     int  ->  [rbp-0x1C]\r\n;  V06 arg6         [V06    ] (  1,  1   )     ref  ->  [rbp+0x10]   class-hnd\r\n;# V07 OutArgs      [V07    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]\r\n;  V08 tmp1         [V08    ] (  1,  1   )     ref  ->  [rbp-0x28]   must-init\r\n;\r\n; Lcl frame size = 48\r\n\r\nG_M20380_IG01:\r\n       55                   push     rbp\r\n       4883EC30             sub      rsp, 48\r\n       488D6C2430           lea      rbp, [rsp+30H]\r\n       33C0                 xor      rax, rax\r\n       488945D8             mov      qword ptr [rbp-28H], rax\r\n       48897DF8             mov      gword ptr [rbp-08H], rdi\r\n       8975F4               mov      dword ptr [rbp-0CH], esi\r\n       8955F0               mov      dword ptr [rbp-10H], edx\r\n       894DEC               mov      dword ptr [rbp-14H], ecx\r\n       448945E8             mov      dword ptr [rbp-18H], r8d\r\n       44894DE4             mov      dword ptr [rbp-1CH], r9d\r\n\r\nG_M20380_IG02:\r\n       33FF                 xor      rdi, rdi\r\n       488B7510             mov      rsi, gword ptr [rbp+10H]\r\n       488975D8             mov      gword ptr [rbp-28H], rsi\r\n       90                   nop\r\n\r\nG_M20380_IG03:\r\n       48897D10             mov      gword ptr [rbp+10H], rdi\r\n       488B7DD8             mov      rdi, gword ptr [rbp-28H]\r\n       8B75F4               mov      esi, dword ptr [rbp-0CH]\r\n       8B55F0               mov      edx, dword ptr [rbp-10H]\r\n       8B4DEC               mov      ecx, dword ptr [rbp-14H]\r\n       448B45E8             mov      r8d, dword ptr [rbp-18H]\r\n       448B4DE4             mov      r9d, dword ptr [rbp-1CH]\r\n       488B45D8             mov      rax, gword ptr [rbp-28H]\r\n       488B00               mov      rax, qword ptr [rax]\r\n       488B4048             mov      rax, qword ptr [rax+72]\r\n       488B4020             mov      rax, qword ptr [rax+32]\r\n\r\nG_M20380_IG04:\r\n       488D6500             lea      rsp, [rbp]\r\n       5D                   pop      rbp\r\n       48FFE0               rex.jmp  rax\r\n\r\n; Total bytes of code 96, prolog size 37 for method Der1:M(int,int,int,int,int,ref):this\r\n; ============================================================\r\n```\r\n\r\nFixes #20625"},{"Id":"8553879924","Type":"PullRequestEvent","CreatedAt":"2018-11-08T03:03:39","Actor":"echesakovMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20740","RelatedDescription":"Closed pull request \"Fix \"Lower fast tail call doesn't patch control expression\"\" (#20740) at dotnet/coreclr","RelatedBody":"Lower fast tail call can replace local variables (holding Caller stack arguments) with new temps in order to set up Callee stack arguments correctly. This involves patching corresponding LCL_VAR and LCL_VAR_ADDR nodes and replacing them with the location of a new temp. \r\n\r\nThis is not done for control expression which continues pointing to the old location and can contain a Callee argument. \r\n\r\nI attached assemblies for the regression test.\r\n\r\n**Before** \r\n```asm\r\n; Assembly listing for method Der1:M(int,int,int,int,int,ref):this\r\n; Emitting BLENDED_CODE for X64 CPU with AVX - Unix\r\n; compiler->opts.MinOpts() is true\r\n; rbp based frame\r\n; fully interruptible\r\n; Final local variable assignments\r\n;\r\n;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp-0x08]   this class-hnd\r\n;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp-0x0C]\r\n;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp-0x10]\r\n;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp-0x14]\r\n;  V04 arg4         [V04    ] (  1,  1   )     int  ->  [rbp-0x18]\r\n;  V05 arg5         [V05    ] (  1,  1   )     int  ->  [rbp-0x1C]\r\n;  V06 arg6         [V06    ] (  1,  1   )     ref  ->  [rbp+0x10]   class-hnd\r\n;# V07 OutArgs      [V07    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]\r\n;  V08 tmp1         [V08    ] (  1,  1   )     ref  ->  [rbp-0x28]   must-init\r\n;\r\n; Lcl frame size = 48\r\n\r\nG_M20380_IG01:\r\n       55                   push     rbp\r\n       4883EC30             sub      rsp, 48\r\n       488D6C2430           lea      rbp, [rsp+30H]\r\n       33C0                 xor      rax, rax\r\n       488945D8             mov      qword ptr [rbp-28H], rax\r\n       48897DF8             mov      gword ptr [rbp-08H], rdi\r\n       8975F4               mov      dword ptr [rbp-0CH], esi\r\n       8955F0               mov      dword ptr [rbp-10H], edx\r\n       894DEC               mov      dword ptr [rbp-14H], ecx\r\n       448945E8             mov      dword ptr [rbp-18H], r8d\r\n       44894DE4             mov      dword ptr [rbp-1CH], r9d\r\n\r\nG_M20380_IG02:\r\n       33FF                 xor      rdi, rdi\r\n       488B7510             mov      rsi, gword ptr [rbp+10H]\r\n       488975D8             mov      gword ptr [rbp-28H], rsi\r\n       90                   nop\r\n\r\nG_M20380_IG03:\r\n       48897D10             mov      gword ptr [rbp+10H], rdi\r\n       488B7DD8             mov      rdi, gword ptr [rbp-28H]\r\n       8B75F4               mov      esi, dword ptr [rbp-0CH]\r\n       8B55F0               mov      edx, dword ptr [rbp-10H]\r\n       8B4DEC               mov      ecx, dword ptr [rbp-14H]\r\n       448B45E8             mov      r8d, dword ptr [rbp-18H]\r\n       448B4DE4             mov      r9d, dword ptr [rbp-1CH]\r\n       488B4510             mov      rax, gword ptr [rbp+10H]\r\n       488B00               mov      rax, qword ptr [rax]\r\n       488B4048             mov      rax, qword ptr [rax+72]\r\n       488B4020             mov      rax, qword ptr [rax+32]\r\n\r\nG_M20380_IG04:\r\n       488D6500             lea      rsp, [rbp]\r\n       5D                   pop      rbp\r\n       48FFE0               rex.jmp  rax\r\n\r\n; Total bytes of code 96, prolog size 37 for method Der1:M(int,int,int,int,int,ref):this\r\n; ============================================================\r\n```\r\n\r\nNote that in G_M20380_IG03 we continue using \"trashed\" local at [rbp+10H] in control expression but we should have used a new temp spilled at [rbp-28H]\r\n```asm\r\n       488B4510             mov      rax, gword ptr [rbp+10H]\r\n       488B00               mov      rax, qword ptr [rax]\r\n       488B4048             mov      rax, qword ptr [rax+72]\r\n       488B4020             mov      rax, qword ptr [rax+32]\r\n```\r\n\r\n\r\n**After**\r\n```asm\r\n; Assembly listing for method Der1:M(int,int,int,int,int,ref):this\r\n; Emitting BLENDED_CODE for X64 CPU with AVX - Unix\r\n; compiler->opts.MinOpts() is true\r\n; rbp based frame\r\n; fully interruptible\r\n; Final local variable assignments\r\n;\r\n;  V00 this         [V00    ] (  1,  1   )     ref  ->  [rbp-0x08]   this class-hnd\r\n;  V01 arg1         [V01    ] (  1,  1   )     int  ->  [rbp-0x0C]\r\n;  V02 arg2         [V02    ] (  1,  1   )     int  ->  [rbp-0x10]\r\n;  V03 arg3         [V03    ] (  1,  1   )     int  ->  [rbp-0x14]\r\n;  V04 arg4         [V04    ] (  1,  1   )     int  ->  [rbp-0x18]\r\n;  V05 arg5         [V05    ] (  1,  1   )     int  ->  [rbp-0x1C]\r\n;  V06 arg6         [V06    ] (  1,  1   )     ref  ->  [rbp+0x10]   class-hnd\r\n;# V07 OutArgs      [V07    ] (  1,  1   )  lclBlk ( 0) [rsp+0x00]\r\n;  V08 tmp1         [V08    ] (  1,  1   )     ref  ->  [rbp-0x28]   must-init\r\n;\r\n; Lcl frame size = 48\r\n\r\nG_M20380_IG01:\r\n       55                   push     rbp\r\n       4883EC30             sub      rsp, 48\r\n       488D6C2430           lea      rbp, [rsp+30H]\r\n       33C0                 xor      rax, rax\r\n       488945D8             mov      qword ptr [rbp-28H], rax\r\n       48897DF8             mov      gword ptr [rbp-08H], rdi\r\n       8975F4               mov      dword ptr [rbp-0CH], esi\r\n       8955F0               mov      dword ptr [rbp-10H], edx\r\n       894DEC               mov      dword ptr [rbp-14H], ecx\r\n       448945E8             mov      dword ptr [rbp-18H], r8d\r\n       44894DE4             mov      dword ptr [rbp-1CH], r9d\r\n\r\nG_M20380_IG02:\r\n       33FF                 xor      rdi, rdi\r\n       488B7510             mov      rsi, gword ptr [rbp+10H]\r\n       488975D8             mov      gword ptr [rbp-28H], rsi\r\n       90                   nop\r\n\r\nG_M20380_IG03:\r\n       48897D10             mov      gword ptr [rbp+10H], rdi\r\n       488B7DD8             mov      rdi, gword ptr [rbp-28H]\r\n       8B75F4               mov      esi, dword ptr [rbp-0CH]\r\n       8B55F0               mov      edx, dword ptr [rbp-10H]\r\n       8B4DEC               mov      ecx, dword ptr [rbp-14H]\r\n       448B45E8             mov      r8d, dword ptr [rbp-18H]\r\n       448B4DE4             mov      r9d, dword ptr [rbp-1CH]\r\n       488B45D8             mov      rax, gword ptr [rbp-28H]\r\n       488B00               mov      rax, qword ptr [rax]\r\n       488B4048             mov      rax, qword ptr [rax+72]\r\n       488B4020             mov      rax, qword ptr [rax+32]\r\n\r\nG_M20380_IG04:\r\n       488D6500             lea      rsp, [rbp]\r\n       5D                   pop      rbp\r\n       48FFE0               rex.jmp  rax\r\n\r\n; Total bytes of code 96, prolog size 37 for method Der1:M(int,int,int,int,int,ref):this\r\n; ============================================================\r\n```\r\n\r\nFixes #20625"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8554038212","Type":"IssuesEvent","CreatedAt":"2018-11-08T03:55:33","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10291","RelatedDescription":"Closed issue \"dotnet run fails on ARM64\" (#10291) at dotnet/cli","RelatedBody":"dotnet run doesn't work for me on Linux ARM64. \r\n\r\n/cc @livarcocc @RussKeldorph \r\n\r\n```\r\nrich@live-pc:~/testapp$ uname -a\r\nLinux live-pc 3.10.105-bsp-1.2 #2 SMP PREEMPT Sat Oct 27 19:24:05 IST 2018 aarch64 aarch64 aarch64 GNU/Linux\r\nrich@live-pc:~/testapp$ lsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID: neon\r\nDescription:    KDE neon User Edition 5.14\r\nRelease:        18.04\r\nCodename:       bionic\r\nrich@live-pc:~$ time dotnet new console -o testapp\r\nThe template \"Console Application\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on testapp/testapp.csproj...\r\n  Restoring packages for /home/rich/testapp/testapp.csproj...\r\n  Generating MSBuild file /home/rich/testapp/obj/testapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /home/rich/testapp/obj/testapp.csproj.nuget.g.targets.\r\n  Restore completed in 2 sec for /home/rich/testapp/testapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    0m17.732s\r\nuser    0m23.360s\r\nsys     0m1.910s\r\nrich@live-pc:~$ cd testapp/\r\nrich@live-pc:~/testapp$ time dotnet build\r\nMicrosoft (R) Build Engine version 15.9.8-preview+g0a5001fc4d for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 342.77 ms for /home/rich/testapp/testapp.csproj.\r\n/usr/share/dotnet/sdk/3.0.100-alpha1-009697/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(142,5): message NETSDK1057: You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview [/home/rich/testapp/testapp.csproj]\r\n  testapp -> /home/rich/testapp/bin/Debug/netcoreapp3.0/testapp.dll\r\n\r\nBuild succeeded.                                             \r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:21.04\r\n\r\nreal    0m25.204s\r\nuser    0m25.080s\r\nsys     0m2.180s\r\nrich@live-pc:~/testapp$ time dotnet run\r\nSystem.ComponentModel.Win32Exception (8): Exec format error\r\n   at Interop.Sys.ForkAndExecProcess(String filename, String[] argv, String[] envp, String cwd, Boolean redirectStdin, Boolean redirectStdout, Boolean redirectStderr, Boolean setUser, UInt32 userId, UInt32 groupId, Int32& lpChildPid, Int32& stdinFd, Int32& stdoutFd, Int32& stderrFd, Boolean shouldThrow) \r\n   at System.Diagnostics.Process.StartCore(ProcessStartInfo startInfo)\r\n   at System.Diagnostics.Process.Start()\r\n   at Microsoft.DotNet.Cli.Utils.Command.Execute()\r\n   at Microsoft.DotNet.Tools.Run.RunCommand.Execute()\r\n   at Microsoft.DotNet.Tools.Run.RunCommand.Run(String[] args)\r\n   at Microsoft.DotNet.Cli.Program.ProcessArgs(String[] args, ITelemetry telemetryClient)\r\n   at Microsoft.DotNet.Cli.Program.Main(String[] args)\r\n\r\nreal    0m17.997s\r\nuser    0m23.190s\r\nsys     0m2.150s\r\nrich@live-pc:~/testapp$ time dotnet bin/Debug/netcoreapp3.0/testapp.dll\r\nHello World!\r\n\r\nreal    0m0.682s\r\nuser    0m0.570s\r\nsys     0m0.060s\r\nrich@live-pc:~/testapp$\r\n```\r\n"},{"Id":"8553459434","Type":"PullRequestEvent","CreatedAt":"2018-11-08T00:58:27","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10294","RelatedDescription":"Merged pull request \"Insert NuGet Build 5.0.0-preview1.5663 into cli\" (#10294) at dotnet/cli","RelatedBody":"Insert NuGet Build 5.0.0-preview1.5663 into cli release/2.2.2xx branch"},{"Id":"8553406825","Type":"IssuesEvent","CreatedAt":"2018-11-08T00:43:50","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10298","RelatedDescription":"Closed issue \"Make \"dotnet tool install --local\" equivalent to \"dotnet tool install\"\" (#10298) at dotnet/cli","RelatedBody":""},{"Id":"8553373020","Type":"IssuesEvent","CreatedAt":"2018-11-08T00:33:57","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10286","RelatedDescription":"Closed issue \"dotnet add library\" (#10286) at dotnet/cli","RelatedBody":"We need `dotnet add library` . Adding library will make the library exports available to us without using any DLLImport.\r\n\r\n"},{"Id":"8553357662","Type":"IssuesEvent","CreatedAt":"2018-11-08T00:29:29","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10298","RelatedDescription":"Opened issue \"Make \"dotnet tool install --local\" equivalent to \"dotnet tool install\"\" (#10298) at dotnet/cli","RelatedBody":""},{"Id":"8552847070","Type":"IssuesEvent","CreatedAt":"2018-11-07T22:22:13","Actor":"normj","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10297","RelatedDescription":"Opened issue \"Multi Targeting with Global Tools\" (#10297) at dotnet/cli","RelatedBody":"I'm looking for suggestions on how to handle multiple target frameworks. I have a tool that will be inspecting some target assemblies and I want the global tool to be using the same framework as the target assemblies were complied for.\r\n\r\nI had tried the following csproj file where I conditionally set the `ToolCommandName` based on the TFM\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFrameworks>netcoreapp2.1;netcoreapp2.2</TargetFrameworks>\r\n    <IsPackable>true</IsPackable>\r\n    <PackAsTool>true</PackAsTool>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\"'$(TargetFramework)' == 'netcoreapp2.1'\">\r\n    <ToolCommandName>dotnet-tfm-test-2.1</ToolCommandName>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\"'$(TargetFramework)' == 'netcoreapp2.2'\">\r\n    <ToolCommandName>dotnet-tfm-test-2.2</ToolCommandName>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nBut it looks like the ToolCommandName is not evaluated at build time but instead at pack time so in my nuget package the netcoreapp2.1 and netcoreapp2.2 file DotnetToolSettings.xml is setting command name to dotnet-tfm-test-2.2 for both the netcoreapp2.1 and netcoreapp2.2 version.\r\n\r\nSo far the best plan I have come up with is to create two different projects and publish two separate global tools. \r\n"},{"Id":"8552754178","Type":"PullRequestEvent","CreatedAt":"2018-11-07T22:03:49","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/10192","RelatedDescription":"Closed pull request \"Insert NuGet Build 5.0.0-preview1.5590 into cli\" (#10192) at dotnet/cli","RelatedBody":"Insert NuGet Build 5.0.0-preview1.5590 into cli master branch"},{"Id":"8552751573","Type":"PullRequestEvent","CreatedAt":"2018-11-07T22:03:19","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10289","RelatedDescription":"Merged pull request \"Merge release/2.1.5xx to release/2.2.1xx\" (#10289) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8553689100","Type":"PullRequestEvent","CreatedAt":"2018-11-08T02:05:43","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/963","RelatedDescription":"Opened pull request \"Add ISOWeek\" (#963) at dotnet/standard","RelatedBody":"This fixes #956 "},{"Id":"8553679077","Type":"IssuesEvent","CreatedAt":"2018-11-08T02:02:41","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/958","RelatedDescription":"Closed issue \"Fails to see certificates in X509Store for StoreLocation.CurrentUser\" (#958) at dotnet/standard","RelatedBody":"Running in UWP application in Visual Studio 2017 on Windows 10 version 1803. Running as Administrator does not change result.  Sees LocalMachine certificates.  Current User should be able to access their own Certificates.  What permissions does a cross platform application need to support seeing own personal certificate store certificates? \r\n\r\ncode sample to illustrate:\r\n\r\nint certCountInStore = 0;\r\nint certCountInMyStore = 0;\r\n//=======Sees machine certs\r\nX509Store machStore = new X509Store(StoreName.TrustedPublisher, StoreLocation.LocalMachine);\r\nmachStore.Open(OpenFlags.ReadOnly);\r\nX509Certificate2Collection machcollection = (X509Certificate2Collection)machStore.Certificates;\r\ncertCountInStore = machcollection.Count;\r\nmachStore.Close();\r\n//==========does not see Current User Certs\r\nX509Store myStore = new X509Store(StoreName.My,StoreLocation.CurrentUser);\r\nmyStore.Open(OpenFlags.ReadOnly);\r\nX509Certificate2Collection mycollection = (X509Certificate2Collection)myStore.Certificates;\r\ncertCountInMyStore = mycollection.Count;\r\nmyStore.Close();\r\n"},{"Id":"8553655111","Type":"IssuesEvent","CreatedAt":"2018-11-08T01:55:38","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/961","RelatedDescription":"Closed issue \"x2\" (#961) at dotnet/standard","RelatedBody":""},{"Id":"8553650188","Type":"IssuesEvent","CreatedAt":"2018-11-08T01:54:16","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/962","RelatedDescription":"Closed issue \"System.IO.Path.GetRelativePath() missing in .NET Standard 2.0\" (#962) at dotnet/standard","RelatedBody":"If I create a new .NET Standard 2.0 Class Library project using Visual Studio 2017, I cannot use System.IO.GetRelativePath(), it's not available.\r\n\r\nI tried adding a reference to System.Runtime.Extensions from NuGet, which contains the implementation, but it's still not available.\r\n\r\nIf I create a new .NET Core 2.1 class library then the method is available.\r\n\r\nIs there a workaround for this issue? I can't change the project type."},{"Id":"8553513916","Type":"IssuesEvent","CreatedAt":"2018-11-08T01:13:54","Actor":"sam-piper","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/962","RelatedDescription":"Opened issue \"System.IO.Path.GetRelativePath() missing in .NET Standard 2.0\" (#962) at dotnet/standard","RelatedBody":"If I create a new .NET Standard 2.0 Class Library project using Visual Studio 2017, I cannot use System.IO.GetRelativePath(), it's not available.\r\n\r\nI tried adding a reference to System.Runtime.Extensions from NuGet, which contains the implementation, but it's still not available.\r\n\r\nIf I create a new .NET Core 2.1 class library then the method is available.\r\n\r\nIs there a workaround for this issue? I can't change the project type."},{"Id":"8553291878","Type":"IssuesEvent","CreatedAt":"2018-11-08T00:10:29","Actor":"ferrata","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/961","RelatedDescription":"Opened issue \"x2\" (#961) at dotnet/standard","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8554187241","Type":"PullRequestEvent","CreatedAt":"2018-11-08T04:52:03","Actor":"bartonjs","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/32783","RelatedDescription":"Merged pull request \"Correct OPENSSL_ROOT_DIR environment variable.\" (#32783) at dotnet/corefx","RelatedBody":"cmake should not be included as part of environment variable. Var must also be properly end quoted."},{"Id":"8554113130","Type":"PullRequestEvent","CreatedAt":"2018-11-08T04:23:14","Actor":"tannergooding","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/33327","RelatedDescription":"Opened pull request \" Cleaning up some tests that utilize the double/single parser\" (#33327) at dotnet/corefx","RelatedBody":"This is the CoreFX side change to https://github.com/dotnet/coreclr/pull/20707"},{"Id":"8554078328","Type":"PullRequestEvent","CreatedAt":"2018-11-08T04:09:55","Actor":"wfurt","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/33326","RelatedDescription":"Merged pull request \"add build-id to FreeBSD native code\" (#33326) at dotnet/corefx","RelatedBody":"This should help with publishing symbols on freebsd\r\n\r\n```\r\n[furt@toweinfu-d11 ~/git/wfurt-corefx]$ readelf -Wl artifacts/bin/native/netcoreapp-FreeBSD-Debug-x64/System.Native.so\r\n\r\nElf file type is DYN (Shared object file)\r\nEntry point 0xa000\r\nThere are 9 program headers, starting at offset 64\r\n\r\nProgram Headers:\r\n  Type           Offset   VirtAddr           PhysAddr           FileSiz  MemSiz   Flg Align\r\n  PHDR           0x000040 0x0000000000000040 0x0000000000000040 0x0001f8 0x0001f8 R   0x8\r\n  LOAD           0x000000 0x0000000000000000 0x0000000000000000 0x0095b0 0x0095b0 R   0x1000\r\n  LOAD           0x00a000 0x000000000000a000 0x000000000000a000 0x00dd00 0x00dd00 R E 0x1000\r\n  LOAD           0x018000 0x0000000000018000 0x0000000000018000 0x0011b8 0x002130 RW  0x1000\r\n  DYNAMIC        0x019028 0x0000000000019028 0x0000000000019028 0x000170 0x000170 RW  0x8\r\n  GNU_RELRO      0x019000 0x0000000000019000 0x0000000000019000 0x0001b8 0x001000 R   0x1\r\n  GNU_EH_FRAME   0x006e48 0x0000000000006e48 0x0000000000006e48 0x0007e4 0x0007e4 R   0x1\r\n  GNU_STACK      0x000000 0x0000000000000000 0x0000000000000000 0x000000 0x000000 RW  0\r\n  NOTE           0x0020b4 0x00000000000020b4 0x00000000000020b4 0x000024 0x000024 R   0x4\r\n\r\n Section to Segment mapping:\r\n  Segment Sections...\r\n   00\r\n   01     .rodata .note.gnu.build-id .dynsym .gnu.version .gnu.version_r .gnu.hash .hash .dynstr .rela.dyn .rela.plt .eh_frame_hdr .eh_frame\r\n   02     .text .init .fini .plt\r\n   03     .data .got.plt .ctors .dtors .jcr .dynamic .got .bss\r\n   04     .dynamic\r\n   05     .ctors .dtors .jcr .dynamic .got\r\n   06     .eh_frame_hdr\r\n   07\r\n   08     .note.gnu.build-id\r\n```\r\n"},{"Id":"8553965340","Type":"PullRequestEvent","CreatedAt":"2018-11-08T03:30:42","Actor":"wfurt","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/33326","RelatedDescription":"Opened pull request \"add build-id to FreeBSD native code\" (#33326) at dotnet/corefx","RelatedBody":"This should help with publishing symbols on freebsd\r\n\r\n```\r\n[furt@toweinfu-d11 ~/git/wfurt-corefx]$ readelf -Wl artifacts/bin/native/netcoreapp-FreeBSD-Debug-x64/System.Native.so\r\n\r\nElf file type is DYN (Shared object file)\r\nEntry point 0xa000\r\nThere are 9 program headers, starting at offset 64\r\n\r\nProgram Headers:\r\n  Type           Offset   VirtAddr           PhysAddr           FileSiz  MemSiz   Flg Align\r\n  PHDR           0x000040 0x0000000000000040 0x0000000000000040 0x0001f8 0x0001f8 R   0x8\r\n  LOAD           0x000000 0x0000000000000000 0x0000000000000000 0x0095b0 0x0095b0 R   0x1000\r\n  LOAD           0x00a000 0x000000000000a000 0x000000000000a000 0x00dd00 0x00dd00 R E 0x1000\r\n  LOAD           0x018000 0x0000000000018000 0x0000000000018000 0x0011b8 0x002130 RW  0x1000\r\n  DYNAMIC        0x019028 0x0000000000019028 0x0000000000019028 0x000170 0x000170 RW  0x8\r\n  GNU_RELRO      0x019000 0x0000000000019000 0x0000000000019000 0x0001b8 0x001000 R   0x1\r\n  GNU_EH_FRAME   0x006e48 0x0000000000006e48 0x0000000000006e48 0x0007e4 0x0007e4 R   0x1\r\n  GNU_STACK      0x000000 0x0000000000000000 0x0000000000000000 0x000000 0x000000 RW  0\r\n  NOTE           0x0020b4 0x00000000000020b4 0x00000000000020b4 0x000024 0x000024 R   0x4\r\n\r\n Section to Segment mapping:\r\n  Segment Sections...\r\n   00\r\n   01     .rodata .note.gnu.build-id .dynsym .gnu.version .gnu.version_r .gnu.hash .hash .dynstr .rela.dyn .rela.plt .eh_frame_hdr .eh_frame\r\n   02     .text .init .fini .plt\r\n   03     .data .got.plt .ctors .dtors .jcr .dynamic .got .bss\r\n   04     .dynamic\r\n   05     .ctors .dtors .jcr .dynamic .got\r\n   06     .eh_frame_hdr\r\n   07\r\n   08     .note.gnu.build-id\r\n```\r\n"},{"Id":"8553919395","Type":"PullRequestEvent","CreatedAt":"2018-11-08T03:15:55","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/33325","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#33325) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"8554125745","Type":"PullRequestEvent","CreatedAt":"2018-11-08T04:27:54","Actor":"mavasani","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30984","RelatedDescription":"Merged pull request \"Unused members analyzer: Do not flag write-only properties that are n…\" (#30984) at dotnet/roslyn","RelatedBody":"…ot read\r\n\r\nFixes #30894"},{"Id":"8554099117","Type":"PullRequestEvent","CreatedAt":"2018-11-08T04:17:45","Actor":"jasonmalinowski","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30804","RelatedDescription":"Merged pull request \"Use IVsAsyncFileChangeEx throughout Roslyn\" (#30804) at dotnet/roslyn","RelatedBody":"This change is a fairly mechanical change to move over to IVsAsyncFileChangeEx, without making larger changes to Roslyn. Notably, Roslyn has always called the file watching service with one request at time, to avoid starving off the thread pool. Since the entrypoints are now async, we could start doing more in parallel to to allow the underlying service to implement things more efficiently.\r\n\r\nAlso, the implementation for FileChangeTracker is decidedly not great and still uses synchronous entrypoints in a few places. Since that part of the code is actively going away once we move the remaining uses too FileChangeWatcher, we'll just do a cheap approach now."},{"Id":"8553973172","Type":"PullRequestEvent","CreatedAt":"2018-11-08T03:33:14","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30743","RelatedDescription":null,"RelatedBody":"Closes #18104"},{"Id":"8553973094","Type":"PullRequestEvent","CreatedAt":"2018-11-08T03:33:12","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30743","RelatedDescription":"Closed pull request \"Implement 'Complete Statement' on semicolon\" (#30743) at dotnet/roslyn","RelatedBody":"Closes #18104"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8549404408","Type":"IssuesEvent","CreatedAt":"2018-11-07T12:50:56","Actor":"iarischenko","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5874","RelatedDescription":"Closed issue \"unwinding support for ARM is not fully implemented\" (#5874) at dotnet/corert","RelatedBody":"Code for unwinding on ARM is implemeted under `_LIBUNWIND_ARM_EHABI` define. \r\nThe code is not implemented in src/Native/Runtime/unix/UnwindHelpers.cpp  strings 326, 358, 378\r\n\r\nExample:\r\n` 354 #if _LIBUNWIND_SUPPORT_DWARF_UNWIND`\r\n` implementation`\r\n` 357 #else`\r\n`             PORTABILITY_ASSERT(\"  ...  \")`\r\n`359 #endif`\r\n\r\nThe code triggers unconditional assert() in run-time. \r\n\r\ncc @dotnet/arm32-contrib                                    \r\n\r\nThe support for unwinding for implemented in the following pull request:\r\nhttps://github.com/dotnet/corert/pull/5249 "},{"Id":"8549363638","Type":"PullRequestEvent","CreatedAt":"2018-11-07T12:42:54","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6533","RelatedDescription":"Merged pull request \"Linux\\arm Use r11 as frame pointer for unwinding\" (#6533) at dotnet/corert","RelatedBody":"The convention for frame pointer is different between CoreCLR ABI and\r\nCoreRT ABI for historic reasons. CoreCLR ABI uses R11 as frame pointer.\r\nIt is better to follow CoreCLR ABI for CoreRT.\r\n\r\nThe commit is connected with the #5874 issue. "}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"8553497043","Type":"IssuesEvent","CreatedAt":"2018-11-08T01:09:01","Actor":"peterhuene","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/2644","RelatedDescription":"Closed issue \"Runtime Id does not follow generic naming convention in published arm64 releases\" (#2644) at dotnet/sdk","RelatedBody":"I am working on adding support for linux-arm64 to the [azure-pipelines-agent](https://github.com/Microsoft/azure-pipelines-agent/pull/1921).  \r\n\r\nI noticed that the current arm32 release of the dotnet core SDK @ https://dotnetcli.azureedge.net/dotnet/Sdk/2.1.403/dotnet-sdk-2.1.403-linux-arm.tar.gz uses a generic name \"linux-arm\" \r\nfor the Runtime Id:\r\n![image](https://user-images.githubusercontent.com/2018336/47970546-9236c780-e04c-11e8-81c7-d5966bf948b9.png)\r\n\r\nHowever, the current arm64 release of the dotnet core SDK @ https://dotnetcli.azureedge.net/dotnet/Sdk/2.1.403/dotnet-sdk-2.1.403-linux-arm64.tar.gz uses a platform specific name \"ubuntu.18.04-arm64\" instead of an expected generic name of \"linux-arm64\" for the Runtime Id:\r\n![image](https://user-images.githubusercontent.com/2018336/47970485-9ca49180-e04b-11e8-88c2-5d0b09f34f0b.png)\r\n\r\n\r\nIs this expected, or should both releases report a generic name for the Runtime Id?\r\n"},{"Id":"8552448513","Type":"IssuesEvent","CreatedAt":"2018-11-07T21:06:32","Actor":"MichaelSimons","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2652","RelatedDescription":"Opened issue \"CreateAppHost task fails within Nano Server containers in 3.0\" (#2652) at dotnet/sdk","RelatedBody":"Using SDK version 3.0.100-preview-009734\r\n\r\n1. Start with a `microsoft/nanoserver` container with dotnet 3.0 SDK installed (e.g. `microsoft/dotnet-nightly:3.0-sdk` [Dockerfile](https://github.com/dotnet/dotnet-docker/blob/8246e49feb420454055daddbac2120b40dc88c41/3.0/runtime/nanoserver-1803/amd64/Dockerfile))\r\n2. mkdir app\r\n3. cd app\r\n4. dotnet new\r\n5. dotnet build\r\n\r\nResults:\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009734\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.RuntimeIdentifierInference.targets(142,5): message NETSDK1057: You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview [C:\\app\\app.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009734\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(293,5): error MSB4018: The \"CreateAppHost\" task failed unexpectedly. [C:\\app\\app.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009734\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(293,5): error MSB4018: System.EntryPointNotFoundException: Unable to find an entry point named 'BeginUpdateResource' in DLL 'Kernel32'. [C:\\app\\app.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009734\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(293,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResourceUpdater.Kernel32.BeginUpdateResource(String pFileName, Boolean bDeleteExistingResources) [C:\\app\\app.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009734\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(293,5): error MSB4018:    at Microsoft.NET.Build.Tasks.AppHost.Create(String appHostSourceFilePath, String appHostDestinationFilePath, String appBinaryFilePath, Boolean windowsGraphicalUserInterface, String intermediateAssembly, Logger log) in /_/src/Tasks/Microsoft.NET.Build.Tasks/AppHost.cs:line 82 [C:\\app\\app.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009734\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(293,5): error MSB4018:    at Microsoft.NET.Build.Tasks.CreateAppHost.ExecuteCore() in /_/src/Tasks/Microsoft.NET.Build.Tasks/CreateAppHost.cs:line 38 [C:\\app\\app.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009734\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(293,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() in /_/src/Tasks/Common/TaskBase.cs:line 35 [C:\\app\\app.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009734\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(293,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\\app\\app.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009734\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(293,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [C:\\app\\app.csproj]\r\n\r\nBuild FAILED.\r\n```\r\n"},{"Id":"8552406818","Type":"PullRequestEvent","CreatedAt":"2018-11-07T20:58:51","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/2537","RelatedDescription":"Closed pull request \"Insert NuGet Build 5.0.0-preview1.5495 into sdk\" (#2537) at dotnet/sdk","RelatedBody":"Insert NuGet Build 5.0.0-preview1.5495 into sdk release/2.1.4xx branch"},{"Id":"8551926198","Type":"IssuesEvent","CreatedAt":"2018-11-07T19:29:19","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/2601","RelatedDescription":"Closed issue \"Implicit selection of `Microsoft.AspNetCore.App` broken in new SDK\" (#2601) at dotnet/sdk","RelatedBody":"When we upgraded to the new SDK (2.2.100-preview3-009430) we started experiencing the following errors in our templating tests:\r\n\r\n```\r\nerror NU1604: Project dependency Microsoft.AspNetCore.App does not contain an inclusive lower bound. Include a lower bound in the dependency version to ensure consistent restore results.\r\nerror NU1608: Detected package version outside of dependency constraint: Microsoft.AspNetCore.App 2.1.0 requires Microsoft.AspNetCore.Razor.Design (= 2.1.0) but version Microsoft.AspNetCore.Razor.Design 3.0.0-alpha1-10653 was resolved.\r\n```\r\n\r\nI've created a minimal repro of this issue [here](https://github.com/ryanbrandenburg/ImplicitSDKDemo). You can work around this by explicitly giving the version of `Microsoft.AspNetCore.App` as ` Version=\"3.0.0-alpha1-10653\"`, but it's my understanding that the implicit scenario is not only supported, but the recommended path.\r\n\r\nIf you'd like to see it in the \"real\" environment the repro steps against Templating are as follows:\r\n\r\n1. Acquire SDK version 2.2.100-preview3-009430.\r\n1. `git clone https://github.com/aspnet/Templating`\r\n2. `./run.ps1 -update upgrade deps`\r\n3. `./build.cmd` Observe the test failures.\r\n\r\ndotnet --info:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100-preview3-009430\r\n Commit:    e0a11c9929\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Users\\rybrande\\.dotnet\\x64\\sdk\\2.2.100-preview3-009430\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview1-26907-05\r\n  Commit:  96537a8f64\r\n\r\n.NET Core SDKs installed:\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100-preview2-009404 [C:\\Users\\rybrande\\.dotnet\\x64\\sdk]\r\n  2.2.100-preview3-009430 [C:\\Users\\rybrande\\.dotnet\\x64\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.0-preview2-35157 [C:\\Users\\rybrande\\.dotnet\\x64\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0-preview3-35497 [C:\\Users\\rybrande\\.dotnet\\x64\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 3.0.0-alpha1-10620 [C:\\Users\\rybrande\\.dotnet\\x64\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 3.0.0-alpha1-10653 [C:\\Users\\rybrande\\.dotnet\\x64\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0-preview2-35157 [C:\\Users\\rybrande\\.dotnet\\x64\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0-preview3-35497 [C:\\Users\\rybrande\\.dotnet\\x64\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-alpha1-10620 [C:\\Users\\rybrande\\.dotnet\\x64\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-alpha1-10653 [C:\\Users\\rybrande\\.dotnet\\x64\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.0-preview2-26905-02 [C:\\Users\\rybrande\\.dotnet\\x64\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0-preview3-27014-02 [C:\\Users\\rybrande\\.dotnet\\x64\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview1-26907-05 [C:\\Users\\rybrande\\.dotnet\\x64\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```"},{"Id":"8551917784","Type":"IssuesEvent","CreatedAt":"2018-11-07T19:27:53","Actor":"ryanbrandenburg","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2651","RelatedDescription":"Opened issue \"Implicit selection of `Microsoft.AspNetCore.App` broken in new SDK\" (#2651) at dotnet/sdk","RelatedBody":"When we upgraded to the new SDK (3.0.100-preview-009730) we started experiencing the following errors in our templating tests:\r\n\r\n```\r\nC:\\Users\\rybrande\\.nuget\\packages\\microsoft.aspnetcore.app\\2.1.0\\build\\netcoreapp2.1\\Microsoft.AspNetCore.App.targets(14,5): error : This version of Microsoft.AspNetCore.App is only compatible with the netcoreapp2.1 target framework. Please target netcoreapp2.1 or choose a version of Microsoft.AspNetCore.App compatible with netcoreapp3.0.\r\n```\r\n\r\nI've created a minimal repro of this issue [here](https://github.com/ryanbrandenburg/ImplicitSDKDemo). You can work around this by explicitly giving the version of `Microsoft.AspNetCore.App` as ` Version=\"3.0.0-alpha1-10653\"`, but it's my understanding that the implicit scenario is not only supported, but the recommended path.\r\n\r\nIf you'd like to see it in the \"real\" environment the repro steps against Templating are as follows:\r\n\r\n1. Acquire SDK version 3.0.100-preview-009730.\r\n1. `git clone https://github.com/aspnet/Templating`\r\n2. `./run.ps1 -update upgrade deps`\r\n3. `./build.cmd` Observe the test failures.\r\n\r\ndotnet --info:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-009730\r\n Commit:    6a33a587e8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Users\\rybrande\\.dotnet\\x64\\sdk\\3.0.100-preview-009730\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview1-26907-05\r\n  Commit:  96537a8f64\r\n\r\n.NET Core SDKs installed:\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500-preview-009398 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100-preview2-009404 [C:\\Users\\rybrande\\.dotnet\\x64\\sdk]\r\n  2.2.200-preview-009431 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview-009730 [C:\\Users\\rybrande\\.dotnet\\x64\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.0-preview2-35157 [C:\\Users\\rybrande\\.dotnet\\x64\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0-preview3-35364 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 3.0.0-alpha1-10620 [C:\\Users\\rybrande\\.dotnet\\x64\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 3.0.0-alpha1-10663 [C:\\Users\\rybrande\\.dotnet\\x64\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0-preview2-35157 [C:\\Users\\rybrande\\.dotnet\\x64\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0-preview3-35364 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-alpha1-10620 [C:\\Users\\rybrande\\.dotnet\\x64\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-alpha1-10663 [C:\\Users\\rybrande\\.dotnet\\x64\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-alpha1-10706 [C:\\Users\\rybrande\\.dotnet\\x64\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.DesktopUI.App 3.0.0-alpha-27030-3 [C:\\Users\\rybrande\\.dotnet\\x64\\shared\\Microsoft.DesktopUI.App]\r\n  Microsoft.NETCore.App 2.2.0-preview2-26905-02 [C:\\Users\\rybrande\\.dotnet\\x64\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0-preview3-27001-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27104-01 [C:\\Users\\rybrande\\.dotnet\\x64\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview1-26907-05 [C:\\Users\\rybrande\\.dotnet\\x64\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nCC @livarcocc @mkArtakMSFT"},{"Id":"8551778319","Type":"PullRequestEvent","CreatedAt":"2018-11-07T19:03:04","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2649","RelatedDescription":"Merged pull request \"[Darc-Update] Update dependencies from build 20181106.6 of https://github.com/dotnet/arcade\" (#2649) at dotnet/sdk","RelatedBody":"This change updates the dependencies from https://github.com/dotnet/arcade to the following\n\n- Microsoft.AspNetCore.ApiVersioning - 1.0.0-beta.18556.6\n- symbols/Microsoft.AspNetCore.ApiVersioning.Swashbuckle.1.0.0-beta.18556.6.symbols.nupkg - 1.0.0-beta.18556.6\n- symbols/Microsoft.DotNet.ApiCompat.1.0.0-beta.18556.6.symbols.nupkg - 1.0.0-beta.18556.6\n- symbols/Microsoft.DotNet.Arcade.Sdk.1.0.0-beta.18556.6.symbols.nupkg - 1.0.0-beta.18556.6\n- symbols/Microsoft.DotNet.Build.Tasks.Feed.2.2.0-beta.18556.6.symbols.nupkg - 2.2.0-beta.18556.6\n- symbols/Microsoft.DotNet.Build.Tasks.Packaging.1.0.0-beta.18556.6.symbols.nupkg - 1.0.0-beta.18556.6\n- symbols/Microsoft.DotNet.CodeAnalysis.1.0.0-beta.18556.6.symbols.nupkg - 1.0.0-beta.18556.6\n- symbols/Microsoft.DotNet.Darc.1.0.0-beta.18556.6.symbols.nupkg - 1.0.0-beta.18556.6\n- symbols/Microsoft.DotNet.DarcLib.1.0.0-beta.18556.6.symbols.nupkg - 1.0.0-beta.18556.6\n- symbols/Microsoft.DotNet.Deployment.Tasks.Links.1.0.0-beta.18556.6.symbols.nupkg - 1.0.0-beta.18556.6\n- symbols/Microsoft.AspNetCore.ApiVersioning.Analyzers.1.0.0-beta.18556.6.symbols.nupkg - 1.0.0-beta.18556.6\n- symbols/Microsoft.DotNet.GenAPI.1.0.0-beta.18556.6.symbols.nupkg - 1.0.0-beta.18556.6\n- symbols/Microsoft.DotNet.Helix.Client.1.0.0-beta.18556.6.symbols.nupkg - 1.0.0-beta.18556.6\n- symbols/Microsoft.DotNet.Helix.JobSender.1.0.0-beta.18556.6.symbols.nupkg - 1.0.0-beta.18556.6\n- symbols/Microsoft.DotNet.Helix.Sdk.1.0.0-beta.18556.6.symbols.nupkg - 1.0.0-beta.18556.6\n- symbols/Microsoft.DotNet.Maestro.Client.1.0.0-beta.18556.6.symbols.nupkg - 1.0.0-beta.18556.6\n- symbols/Microsoft.DotNet.Maestro.Tasks.1.0.0-beta.18556.6.symbols.nupkg - 1.0.0-beta.18556.6\n- symbols/Microsoft.DotNet.SignCheck.1.0.0-beta.18556.6.symbols.nupkg - 1.0.0-beta.18556.6\n- symbols/Microsoft.DotNet.SignTool.1.0.0-beta.18556.6.symbols.nupkg - 1.0.0-beta.18556.6\n- symbols/Microsoft.DotNet.SwaggerGenerator.CmdLine.1.0.0-beta.18556.6.symbols.nupkg - 1.0.0-beta.18556.6\n- symbols/Microsoft.DotNet.SwaggerGenerator.MSBuild.1.0.0-beta.18556.6.symbols.nupkg - 1.0.0-beta.18556.6\n- symbols/Microsoft.DotNet.GenFacades.1.0.0-beta.18556.6.symbols.nupkg - 1.0.0-beta.18556.6\n- symbols/Microsoft.DotNet.XUnitExtensions.2.4.0-beta.18556.6.symbols.nupkg - 2.4.0-beta.18556.6\n- symbols/Microsoft.AspNetCore.ApiVersioning.1.0.0-beta.18556.6.symbols.nupkg - 1.0.0-beta.18556.6\n- Microsoft.DotNet.SwaggerGenerator.MSBuild - 1.0.0-beta.18556.6\n- Microsoft.AspNetCore.ApiVersioning.Analyzers - 1.0.0-beta.18556.6\n- Microsoft.AspNetCore.ApiVersioning.Swashbuckle - 1.0.0-beta.18556.6\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18556.6\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18556.6\n- Microsoft.DotNet.Build.Tasks.Feed - 2.2.0-beta.18556.6\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18556.6\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.18556.6\n- Microsoft.DotNet.Darc - 1.0.0-beta.18556.6\n- Microsoft.DotNet.DarcLib - 1.0.0-beta.18556.6\n- Microsoft.DotNet.XUnitExtensions - 2.4.0-beta.18556.6\n- Microsoft.DotNet.Deployment.Tasks.Links - 1.0.0-beta.18556.6\n- Microsoft.DotNet.GenFacades - 1.0.0-beta.18556.6\n- Microsoft.DotNet.Helix.Client - 1.0.0-beta.18556.6\n- Microsoft.DotNet.Helix.JobSender - 1.0.0-beta.18556.6\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18556.6\n- Microsoft.DotNet.Maestro.Client - 1.0.0-beta.18556.6\n- Microsoft.DotNet.Maestro.Tasks - 1.0.0-beta.18556.6\n- Microsoft.DotNet.SignCheck - 1.0.0-beta.18556.6\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18556.6\n- Microsoft.DotNet.SwaggerGenerator.CmdLine - 1.0.0-beta.18556.6\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18556.6"},{"Id":"8551440758","Type":"PullRequestEvent","CreatedAt":"2018-11-07T18:03:18","Actor":"nugetlurker","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2650","RelatedDescription":"Opened pull request \"Insert NuGet Build 5.0.0-preview1.5663 into sdk\" (#2650) at dotnet/sdk","RelatedBody":"Insert NuGet Build 5.0.0-preview1.5663 into sdk release/2.2.2xx branch"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1055215025982398465","CreatedAt":"2018-10-24T21:50:41+00:00","UserScreenname":"dotnet","Text":"Bringing .NET application performance analysis to Linux https://t.co/jivjRwPVBM","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":108,"FavoriteCount":61,"RawContent":null},{"Id":"1054879096981704704","CreatedAt":"2018-10-23T23:35:50+00:00","UserScreenname":"dotnet","Text":".NET Core Source Code Analysis with Intel® VTune™ Amplifier https://t.co/2I1YLWYbKb","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":64,"FavoriteCount":27,"RawContent":null},{"Id":"1054829662738608128","CreatedAt":"2018-10-23T20:19:24+00:00","UserScreenname":"dotnet","Text":"Call For Participation: .NET and TypeScript at FOSDEM conference https://t.co/xjDh49lbko","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":12,"RawContent":null},{"Id":"1053032574933581824","CreatedAt":"2018-10-18T21:18:24+00:00","UserScreenname":"dotnet","Text":".NET Framework October 2018 Preview of Quality Rollup\n\nhttps://t.co/P6vAFbZLAa","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":9,"RawContent":null},{"Id":"1052575934572843009","CreatedAt":"2018-10-17T15:03:53+00:00","UserScreenname":"dotnet","Text":"Our @terrajobst is teaching how to build a compiler, LIVE on Youtube and Twitch.  Tune in at:… https://t.co/oTbrZVriwS","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":6,"RawContent":null}]}},"RunOn":"2018-11-08T05:30:31.5863981Z","RunDurationInMilliseconds":8379}