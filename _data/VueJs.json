{"Data":{"Vue-Issues":{"Issues":[{"Id":"325423873","IsPullRequest":false,"CreatedAt":"2018-05-22T19:33:01","Actor":"choyg","Number":"8231","RawContent":null,"Title":"v-model on mobile not updating until a space is pressed","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/yyx990803/xkkbfL3L/?utm_source=website&utm_medium=embed&utm_campaign=xkkbfL3L](https://jsfiddle.net/yyx990803/xkkbfL3L/?utm_source=website&utm_medium=embed&utm_campaign=xkkbfL3L)\r\n\r\n### Steps to reproduce\r\nhttps://www.youtube.com/watch?v=y8CASLitwdw\r\n\r\n1. Type into input/textarea with Android (don't have iOS to test with)\r\n\r\n### What is expected?\r\nInput data should be updated per keypress\r\n\r\n### What is actually happening?\r\nInput data is only updated after a space is pressed\r\n\r\n---\r\nReproduced on Android 7.1 Chrome 66 and Android  4.4.2 Firefox 60\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8231","RelatedDescription":"Closed issue \"v-model on mobile not updating until a space is pressed\" (#8231)"},{"Id":"325320846","IsPullRequest":false,"CreatedAt":"2018-05-22T18:26:07","Actor":"windyflying","Number":"8228","RawContent":null,"Title":"Error in render: \"ReferenceError: \"sp\" undefined\"","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codepen.io/windyflying/pen/JvzvRb](https://codepen.io/windyflying/pen/JvzvRb)\r\n\r\n### Steps to reproduce\r\n1.用Chrome或Firefox或Edge打开重现链接，查看结果，代码按预期工作。\r\n2.用IE11打开重现链接，代码不能按预期运行。检查浏览器控制台，有运行时错误，如标题。\r\n\r\n### What is expected?\r\n没有运行时错误\r\n\r\n### What is actually happening?\r\n出现运行时错误\r\n\r\n---\r\n编译后的模板函数在IE11、 IE10和工作正常的浏览器的不一致。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8228","RelatedDescription":"Closed issue \"Error in render: \"ReferenceError: \"sp\" undefined\"\" (#8228)"},{"Id":"325287081","IsPullRequest":false,"CreatedAt":"2018-05-22T18:01:09","Actor":"tornography","Number":"8227","RawContent":null,"Title":"css modules get overridden by global styles","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/9lw567vr9y](https://codesandbox.io/s/9lw567vr9y)\r\n\r\n### Steps to reproduce\r\nNote: Sandbox is behaving diffeerently from actual code!\r\n\r\n1. @import '~bootstrap/scss/bootstrap.scss'; // in App.vue\r\n2. add `class=\"list-group-item\"` and `:class=\"$style.listGroupItem\"`\r\n3. set `<style modlue>`\r\n4. define \".listGroupItem\" and set `display: flex;`\r\n\r\n### What is expected?\r\nIt's expected that `display: flex` is overriding `display: block` from bootstrap styling.\r\n\r\n### What is actually happening?\r\nThe global bootstrap styling is loaded after css module, so due to the same css specificity, order of loading wins.\r\nAnd so bootstrap is overriding css modules.\r\n\r\n---\r\nBahavior is ok if I switch to `<style scoped lang=\"scss\">`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8227","RelatedDescription":"Closed issue \"css modules get overridden by global styles\" (#8227)"},{"Id":"325274844","IsPullRequest":false,"CreatedAt":"2018-05-22T17:52:44","Actor":"gtarsia","Number":"8226","RawContent":null,"Title":"console.warn when Vue is already defined on window","State":"closed","Body":"### What problem does this feature solve?\r\nI went from referencing vue from unpkg from an html `<script>` to using webpack.  \r\nI forgot to remove those `<script>`, so I went a bit crazy because Vue.set wasn't doing anything.  \r\n\r\nI think this warning would really help with that problem for people making that mistake when migrating to webpack.\r\n\r\n### What does the proposed API look like?\r\nI don't think the API would change.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8226","RelatedDescription":"Closed issue \"console.warn when Vue is already defined on window\" (#8226)"},{"Id":"325392268","IsPullRequest":false,"CreatedAt":"2018-05-22T17:45:02","Actor":"miljan-aleksic","Number":"8230","RawContent":null,"Title":"v-model support with functional components","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/0mj5l70xwn](https://codesandbox.io/s/0mj5l70xwn)\r\n\r\n### Steps to reproduce\r\nSet two inputs with v-model, one directly and another using a functional component as wrapper.\r\n\r\n### What is expected?\r\nThe same binding behaviour on both inputs.\r\n\r\n### What is actually happening?\r\nOnly the standard input works, the functional component input doesn't get bind the value but it does get binded an input event with an unexpected behaviout. \r\n\r\n---\r\nThe reason I would wrap an input into a functional component is to customize it look, while expecting vue to still apply all the v-model workarounds around it.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8230","RelatedDescription":"Closed issue \"v-model support with functional components\" (#8230)"},{"Id":"325387041","IsPullRequest":true,"CreatedAt":"2018-05-22T17:12:41","Actor":"KaelWD","Number":"8229","RawContent":null,"Title":"fix(types): add refInFor to VNodeData","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nSee #4035 and #8225\r\n`refInFor` is also mentioned in https://github.com/vuejs/babel-plugin-transform-vue-jsx#difference-from-react-jsx and can be seen in the generated code on https://vuejs.org/v2/guide/render-function.html#Template-Compilation\r\n","Url":"https://github.com/vuejs/vue/pull/8229","RelatedDescription":"Open PR \"fix(types): add refInFor to VNodeData\" (#8229)"},{"Id":"325256117","IsPullRequest":false,"CreatedAt":"2018-05-22T14:00:50","Actor":"adalberth","Number":"8225","RawContent":null,"Title":"Vue refs works differently in template vs render function","State":"closed","Body":"### Version\r\n2.5.17-beta.0\r\n\r\n### Reproduction link\r\n[https://codepen.io/Stupid/pen/WJmgjm?editors=1010](https://codepen.io/Stupid/pen/WJmgjm?editors=1010)\r\n\r\n### Steps to reproduce\r\nCreate ref within template and in render function, template returns array, render function returns latest item in loop.\r\n\r\n### What is expected?\r\nrender functions should return an array of the \"refs\" (https://vuejs.org/v2/guide/render-function.html#v-if-and-v-for) \r\n\r\n### What is actually happening?\r\nOf course it makes sense that the render function returns the last ref as JS should. But in vue shouldn't it return an array as the template do?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8225","RelatedDescription":"Closed issue \"Vue refs works differently in template vs render function\" (#8225)"},{"Id":"325233231","IsPullRequest":false,"CreatedAt":"2018-05-22T10:29:16","Actor":"windyflying","Number":"8224","RawContent":null,"Title":"Error in render: \"ReferenceError: \"sp\" undefined\"","State":"closed","Body":"## Vue.js version\r\n2.5.16\r\n\r\n## Reproduction Link\r\n[codepen](https://codepen.io/windyflying/pen/JvzvRb)\r\n\r\n## Steps to reproduce\r\nPlease open the link in IE11 and inspect the console panel\r\n\r\n## What is Expected?\r\n![expected](https://user-images.githubusercontent.com/13942593/40357065-9bcca5ee-5ded-11e8-8043-df9341f15480.png)\r\n\r\n## What is actually happening?\r\n![real](https://user-images.githubusercontent.com/13942593/40356053-9ce8120e-5dea-11e8-9392-24d2ef49069f.png)\r\n\r\n## More information\r\nIt works well in latest Chrome and Firefox and Edge\r\nthe generated code snippets:\r\nnormal:\r\n![chorme](https://user-images.githubusercontent.com/13942593/40356663-51139e1e-5dec-11e8-9f35-d8ec40f579c0.png)\r\nwrong:\r\n![vue-parser-ie](https://user-images.githubusercontent.com/13942593/40356693-710a9254-5dec-11e8-86e3-fbb75f8772cb.png)\r\n\r\n","Url":"https://github.com/vuejs/vue/issues/8224","RelatedDescription":"Closed issue \"Error in render: \"ReferenceError: \"sp\" undefined\"\" (#8224)"},{"Id":"325182382","IsPullRequest":false,"CreatedAt":"2018-05-22T09:51:14","Actor":"DengRiGuang","Number":"8221","RawContent":null,"Title":"vue中photo数组的图片地址没变，源数据改变了，view视图没刷新","State":"closed","Body":"### Version\r\n2.5.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/336166/?utm_source=website&utm_medium=embed&utm_campaign=50wL7mdz](https://jsfiddle.net/50wL7mdz/336166/?utm_source=website&utm_medium=embed&utm_campaign=50wL7mdz)\r\n\r\n### Steps to reproduce\r\nphoto数组是图片的链接，然后调用更新图片接口，图片地址没变，图片的数据改变了。\r\nupdatePhoto() {\r\n      API.template.updatephoto(this.changePhoto).then(res => {\r\n        console.log(\"update\");\r\n        if(res.code===1){\r\n          console.log('1')\r\n          this.$nextTick(function(){\r\n            this.photo.splice(this.tailoring.num, 1, this.userphoto);\r\n            location.reload();\r\n          })\r\n        }else{\r\n          this.uploadPhoto();\r\n        }\r\n      });\r\n    },\r\n\r\n### What is expected?\r\n更新图片后，视图能够刷新，而不是要通过location.reload();刷新页面才能显示出来\r\n\r\n### What is actually happening?\r\n视图没有刷新要手动刷新才能展示出来\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8221","RelatedDescription":"Closed issue \"vue中photo数组的图片地址没变，源数据改变了，view视图没刷新\" (#8221)"},{"Id":"325186492","IsPullRequest":false,"CreatedAt":"2018-05-22T09:49:22","Actor":"zisuzon","Number":"8222","RawContent":null,"Title":".trim modifier for every v-model and value in input like fields of form","State":"closed","Body":"### What problem does this feature solve?\r\nOur team was working on a project using NUXT and It is in production now. One thing we missed is to trim the input value. We know there is a modifier '.trim' which works with v-model. But in our app we used 'v-model' and in some special cases 'value' attribute of input tag. \r\n\r\n\r\n### What does the proposed API look like?\r\nThere are so many input fields in various pages and we thought it would be cool if there is an option by which all v-model will automatically trim the input value by-default instead of adding .trim in everywhere manually.\r\n\r\nAlso a modifier to trim the value attribute.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8222","RelatedDescription":"Closed issue \".trim modifier for every v-model and value in input like fields of form\" (#8222)"},{"Id":"325198487","IsPullRequest":false,"CreatedAt":"2018-05-22T09:13:58","Actor":"zhangchunlin","Number":"8223","RawContent":null,"Title":"render() a component with a v-bind property will disappear","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/u27d2kh8/3/](https://jsfiddle.net/u27d2kh8/3/)\r\n\r\n### Steps to reproduce\r\nin https://jsfiddle.net/u27d2kh8/4/ we cannot see the age column\r\nBut in https://jsfiddle.net/u27d2kh8/1/ we can see it, the difference is that:\r\n\r\nin 4: template: '<span :test={{myt1}}> age is: {{myage}}</span>'\r\nin 1: template: '<span>age is: {{myage}}</span>'\r\n\r\n### What is expected?\r\nCan show the v-bind property.\r\n\r\n### What is actually happening?\r\nThe span disappear after add a v-bind property\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8223","RelatedDescription":"Closed issue \"render() a component with a v-bind property will disappear\" (#8223)"},{"Id":"325172348","IsPullRequest":false,"CreatedAt":"2018-05-22T08:30:29","Actor":"larsmars","Number":"8218","RawContent":null,"Title":"vuejs.org documentation","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[ https://012.vuejs.org/guide/custom-filter.html]( https://012.vuejs.org/guide/custom-filter.html)\r\n\r\n### Steps to reproduce\r\nGo to this link:\r\n\r\nhttps://012.vuejs.org/guide/custom-filter.html\r\n\r\nThis is my top google hit when I search for vue.js custom filter.\r\n\r\n\r\n\r\n\r\n### What is expected?\r\nThe two way filter guide is not working depricated, should be labeled removed/depricated/replaced and link to solution in documentation\r\n\r\n### What is actually happening?\r\nThe two way filter guid is not working depricated, should be labeled removed/depricated/replaced and link to solution in documentation\r\n\r\n---\r\nThe two way filter guid is not working depricated, should be labeled removed/depricated/replaced and link to solution in documentation\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8218","RelatedDescription":"Closed issue \"vuejs.org documentation\" (#8218)"},{"Id":"325181981","IsPullRequest":false,"CreatedAt":"2018-05-22T08:04:32","Actor":"AbediMostafa","Number":"8220","RawContent":null,"Title":" Any way to tell when all images is done rendering?","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/8220","RelatedDescription":"Closed issue \" Any way to tell when all images is done rendering?\" (#8220)"},{"Id":"325177726","IsPullRequest":false,"CreatedAt":"2018-05-22T07:50:23","Actor":"DengRiGuang","Number":"8219","RawContent":null,"Title":"vue中photo数组的图片地址没变，源数据改变了，view视图没刷新","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n`updatePhoto() {\r\n      API.template.updatephoto(this.changePhoto).then(res => {\r\n        console.log(\"update\");\r\n        if(res.code===1){\r\n          console.log('1')\r\n          this.$nextTick(function(){\r\n            this.photo.splice(this.tailoring.num, 1, this.userphoto);\r\n            location.reload();\r\n          })\r\n        }else{\r\n          this.uploadPhoto();\r\n        }\r\n      });\r\n    },`","Url":"https://github.com/vuejs/vue/issues/8219","RelatedDescription":"Closed issue \"vue中photo数组的图片地址没变，源数据改变了，view视图没刷新\" (#8219)"},{"Id":"325161639","IsPullRequest":true,"CreatedAt":"2018-05-22T06:51:05","Actor":"mathieutu","Number":"8217","RawContent":null,"Title":"fix #8093: Use custom toString method in object rendering.","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\n**Description:**\r\n\r\nHi, \r\nWhen interpolating an object, it uses the JSON.stringify method instead of toString, which is normally the proper method to set a way to convert an object to a string. \r\nThis PR allow you to use your custom `toString` method to render your object if it exists. It's tested (I've also added a test for toJson), and it should not be a breaking change.\r\n\r\nThanks you for your amazing work folks, and see you in Paris next month!","Url":"https://github.com/vuejs/vue/pull/8217","RelatedDescription":"Open PR \"fix #8093: Use custom toString method in object rendering.\" (#8217)"},{"Id":"325058755","IsPullRequest":false,"CreatedAt":"2018-05-21T21:13:58","Actor":"dylanized","Number":"8216","RawContent":null,"Title":"Automatically populate component name from filename","State":"closed","Body":"### What problem does this feature solve?\r\nSometimes a .vue component doesn't have any script properties except for name. (Consider, for instance, a component that includes global components, or a very simple display-only component).  In this case, the script looks like this:\r\n\r\n```\r\n<script>\r\nexport default {\r\n  name: 'ComponentName',\r\n};\r\n</script>\r\n```\r\n\r\nIt would be helpful if this could be removed entirely, and the name be extracted from the component filename.\r\n\r\nThis would be especially helpful to beginners, who could now create simple components with just a <template> section\r\n\r\n### What does the proposed API look like?\r\nIf no <script> tag in a .vue file, or no name property set in the script tag, then automatically extract the component's filename and set the name property.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8216","RelatedDescription":"Closed issue \"Automatically populate component name from filename\" (#8216)"},{"Id":"324996227","IsPullRequest":false,"CreatedAt":"2018-05-21T17:42:35","Actor":"diervo","Number":"8215","RawContent":null,"Title":"DOM out of sync for input changes when vNode value match new current state.","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/0qo6z8x6qw](https://codesandbox.io/s/0qo6z8x6qw)\r\n\r\n### Steps to reproduce\r\nIn the example we have an input which accepts numbers. \r\nIf an alphanumeric character is introduced, we want to reset the input to the initial value \"100\"\r\nWith the default value set \"100\", typing a number and then a letter, things work as expected and the value is reset.\r\nWith the default value set \"100\", typing a character will result in to the DOM being out of sync.\r\n\r\n### What is expected?\r\nThe DOM should always be in sync with the property value.\r\n\r\n### What is actually happening?\r\nDOM gets out of sync: If after a DOM modification on an input the value happens to be the same as the current vNode value, the diffing will ignore the node and leave it untouched.\r\n\r\n---\r\nI believe this is due to a problem on the algorithm for vNode diffing where we just check for === from vNode properties.\r\nI found very odd that this issue hasn't been raised since it seems that any sort of inline normalization of values could potentially run into this cases.\r\n\r\nMaybe there is a trivial workaround or different pattern for this type of cases?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8215","RelatedDescription":"Closed issue \"DOM out of sync for input changes when vNode value match new current state.\" (#8215)"},{"Id":"324977537","IsPullRequest":true,"CreatedAt":"2018-05-21T16:24:24","Actor":"posva","Number":"8214","RawContent":null,"Title":"feat(warn): warn when an existing property starting with $ is not pro…","State":"open","Body":"…perly accessed\r\n\r\nCloses #8213\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8214","RelatedDescription":"Open PR \"feat(warn): warn when an existing property starting with $ is not pro…\" (#8214)"},{"Id":"324949925","IsPullRequest":false,"CreatedAt":"2018-05-21T15:04:05","Actor":"carneiroskeeled","Number":"8213","RawContent":null,"Title":"Vue props throw incomprehensible error when passing variables starting with symbols","State":"open","Body":"### Version\r\n2.5.17-beta.0\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/r0lr534k94](https://codesandbox.io/s/r0lr534k94)\r\n\r\n### Steps to reproduce\r\nOpen the console and see the error:\r\n```Javascript\r\nproxyConsole.js:72 [Vue warn]: Property or method \"$_testMixin_testData\" is not defined on the instance but referenced during render. Make sure that this property is reactive, either in the data option, or for class-based components, by initializing the property. See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.\r\n\r\nfound in\r\n\r\n---> <TestMixin> at /src/App.vue\r\n       <Root>\r\n```\r\n\r\n### What is expected?\r\nIt's expected for the prop to be defined\r\n\r\n### What is actually happening?\r\nThe prop is undefined if the variable contains symbols in the beginning\r\n\r\n---\r\nI am not completely sure if this is a bug or intended, since I think it is a bug I opened this issue, yet if this is intended the error shown should be giving more details, it took me some time to understand what was the error because it isn't clear just from the error message.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8213","RelatedDescription":"Open issue \"Vue props throw incomprehensible error when passing variables starting with symbols\" (#8213)"},{"Id":"324828277","IsPullRequest":false,"CreatedAt":"2018-05-21T08:28:23","Actor":"peipeichengbao","Number":"8211","RawContent":null,"Title":"Can vue support \"template url\"?","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://cn.vuejs.org/v2/guide/components-edge-cases.html#X-Templates](https://cn.vuejs.org/v2/guide/components-edge-cases.html#X-Templates)\r\n\r\n### Steps to reproduce\r\nI don't want to use \".vue\" and webpack because my web page size need smaller. So I just use \"<script src='assets/js/vue.min.js'></script>\". Now, I need to package some components and I found that vue only support \"template\", I must write my view as string or use \"text/x-template\", but \"x-template\" divided view and controller into two scripts. So, is there a better solution?\r\n\r\n### What is expected?\r\njust like angular's templateUrl\r\n\r\n### What is actually happening?\r\nX-template becomes hard to maintain when components become more and more.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8211","RelatedDescription":"Closed issue \"Can vue support \"template url\"?\" (#8211)"},{"Id":"324830232","IsPullRequest":true,"CreatedAt":"2018-05-21T08:26:33","Actor":"posva","Number":"8212","RawContent":null,"Title":"fix(types): add model option to functional components","State":"open","Body":"Closes #8210\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8212","RelatedDescription":"Open PR \"fix(types): add model option to functional components\" (#8212)"},{"Id":"324817263","IsPullRequest":false,"CreatedAt":"2018-05-21T07:35:57","Actor":"lazarljubenovic","Number":"8210","RawContent":null,"Title":"FunctionComponentOptions interface should allow `model`","State":"open","Body":"### What problem does this feature solve?\r\nIt allows developers to use a functional way of declaring a component and utilizing the `model` config at the same time. It's already possible when using pure JavaScript.\r\n\r\n### What does the proposed API look like?\r\nAdd the missing part of the interface\r\n\r\n```\r\n  model?: {\r\n    prop?: string;\r\n    event?: string;\r\n  };\r\n```\r\n\r\nto the existing interface `FunctionalComponentOptions<Props = DefaultProps, PropDefs = PropsDefinition<Props>>`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8210","RelatedDescription":"Open issue \"FunctionComponentOptions interface should allow `model`\" (#8210)"},{"Id":"324763302","IsPullRequest":false,"CreatedAt":"2018-05-21T06:46:52","Actor":"axy541877028","Number":"8209","RawContent":null,"Title":"tabs keep-alive memory leaks","State":"closed","Body":"### Version\r\n2.5.2\r\n\r\n### Reproduction link\r\n[http://panjiachen.github.io/vue-element-admin/#/example/table/dynamic-table](http://panjiachen.github.io/vue-element-admin/#/example/table/dynamic-table)\r\n\r\n### Steps to reproduce\r\nhttp://img.cdn.test.jookee.com/1526866395000Video_2018-05-21_092951.wmv    \r\nIf the link step is repeated 2-3 times or more, memory is checked for memory leaks\r\n\r\n### What is expected?\r\nWith different levels of routing jump I will clear the value inside the include, the same level will not, in order to achieve cache local function\r\n\r\n### What is actually happening?\r\nRepeatedly, memory usage continues to increase, feeling that the memory of the vue instance or the cleared component is not cleared. Click several times is very easy to memory leak, I used this method in the project, the effect is greater Click twice to use memory 100M\r\n\r\n---\r\nTabs Keep-alive how to free cached memory\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8209","RelatedDescription":"Closed issue \"tabs keep-alive memory leaks\" (#8209)"},{"Id":"324716364","IsPullRequest":false,"CreatedAt":"2018-05-20T15:11:09","Actor":"aebrs","Number":"8208","RawContent":null,"Title":"index.vue template with unpredictable HTML elements","State":"closed","Body":"### What problem does this feature solve?\r\nHi,\r\nUsing vue.js I need to create an index.vue page for product and people, where number of text box and drop down list are not fixed, I mean some product has 5 props other may have 10.\r\nI tried to add all html element using v-html, but it seems not a wise way.\r\nSome offered to use components, it sounds little complicated or confusing.\r\nI am looking for a sample or good example.\r\nThanks in advance.\r\n\r\n### What does the proposed API look like?\r\nI tried to add all html element using v-html, but it seems not a wise way.\r\nSome offered to use components, it sounds little complicated or confusing.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8208","RelatedDescription":"Closed issue \"index.vue template with unpredictable HTML elements\" (#8208)"},{"Id":"324715812","IsPullRequest":false,"CreatedAt":"2018-05-20T15:01:16","Actor":"aebrs","Number":"8207","RawContent":null,"Title":"index.vue with undefined elements","State":"closed","Body":"Hi, \r\nUsing vue.js I need to create an index.vue page for product and people, where number of text box and drop down list are not fixed, I mean some product has 5 props other may have 10.\r\nI tried to add all html element using v-html, but it seems not a wise way.\r\nSome offered to use components, it sounds little complicated or confusing.\r\nI am looking for a sample or good example.\r\nThanks in advance.","Url":"https://github.com/vuejs/vue/issues/8207","RelatedDescription":"Closed issue \"index.vue with undefined elements\" (#8207)"},{"Id":"324702346","IsPullRequest":false,"CreatedAt":"2018-05-20T12:41:55","Actor":"hmexx","Number":"8205","RawContent":null,"Title":"Allow <template> block splitting in single-file-components, for organisational/readability purposes. (<template-block> ?)","State":"closed","Body":"### What problem does this feature solve?\r\nI love Vuejs, and .vue SFCs. But occasionally I end up with an HTML template that's extremely large and hard to read. **I'm talking about components where all the sub-parts are tightly coupled and breaking them down into sub-components is not an obvious win**.\r\n\r\nI could break them down anyway, but that's considerable amount of work considering the tight coupling. I'll either send a LOT of state down using props, or i'll have to move the state to Vuex, even though I'd prefer to keep that state local to that parent SFC.\r\n\r\nA nice solution, would be to just allow something akin to template macros/splitting within Vue. See below for a random syntax example.\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\n<template>\r\n    ... 5 lines of html ...\r\n   <step1/>\r\n   <step2/>\r\n</template>\r\n\r\n<step1> \r\n... 30 lines of html ...\r\n</step1>\r\n\r\n<step2>\r\n... 40 lines of html...\r\n</step2>\r\n\r\n<script></script>\r\n<style></style>\r\n```\r\n\r\nBecause it's all in one file, and all the templates use the same script and style scope, you can just copy/paste things around, and organise. No props, no imports. It's basically just like macros. If I could have the IDE or an extension do this I wouldn't need for vue to do it.  Code folding has never really worked well for me.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8205","RelatedDescription":"Closed issue \"Allow <template> block splitting in single-file-components, for organisational/readability purposes. (<template-block> ?)\" (#8205)"},{"Id":"324705413","IsPullRequest":false,"CreatedAt":"2018-05-20T12:24:44","Actor":"liyang0513","Number":"8206","RawContent":null,"Title":"resolveAsset is not a function","State":"closed","Body":"\r\n![Uploading QQ截图20180520202422.jpg…]()\r\n","Url":"https://github.com/vuejs/vue/issues/8206","RelatedDescription":"Closed issue \"resolveAsset is not a function\" (#8206)"},{"Id":"324702186","IsPullRequest":false,"CreatedAt":"2018-05-20T11:28:45","Actor":"hmexx","Number":"8204","RawContent":null,"Title":"Feature request: Allow  <template> block splitting in single-file-components, for organisational/readability purposes. (<template-block> ?) ","State":"closed","Body":"I love Vuejs, and .vue SFCs. But occasionally I end up with an HTML template that's extremely large and hard to read. **I'm talking about components where all the sub-parts are tightly coupled and breaking them down into sub-components is not an obvious win**.\r\n\r\nI could break them down anyway, but that's considerable amount of work considering the tight coupling. I'll either send a LOT of state down using props, or i'll have to move the state to Vuex, even though I'd prefer to keep that state local to that parent SFC.\r\n\r\nA nice solution, would be to just allow something akin to template macros/splitting within Vue. Here's a random syntax example.\r\n```javascript\r\n<template>\r\n    ... 5 lines of html ...\r\n   <step1/>\r\n   <step2/>\r\n</template>\r\n\r\n<step1> \r\n... 30 lines of html ...\r\n</step1>\r\n\r\n<step2>\r\n... 40 lines of html...\r\n</step2>\r\n\r\n<script></script>\r\n<style></style>\r\n```\r\n\r\nBecause it's all in one file, and all the templates use the same script and style scope, you can just copy/paste things around, and organise. No props, no imports. It's basically just like macros. If I could have the IDE or an extension do this I wouldn't need for vue to do it.  Code folding has never really worked well for me.\r\n\r\nThoughts appreciated, and keep up the amazing work!","Url":"https://github.com/vuejs/vue/issues/8204","RelatedDescription":"Closed issue \"Feature request: Allow  <template> block splitting in single-file-components, for organisational/readability purposes. (<template-block> ?) \" (#8204)"},{"Id":"324601616","IsPullRequest":false,"CreatedAt":"2018-05-19T10:04:36","Actor":"Flcwl","Number":"8202","RawContent":null,"Title":"it lead the data can't be rendered in real time while v-for in items is a empty array","State":"closed","Body":"### Version\r\n2.5.2\r\n\r\n### Reproduction link\r\n[https://www.what.mean?](https://www.what.mean? I don't have it)\r\n\r\n### Steps to reproduce\r\n\r\n` <span v-for=\"(item, index) in dots\" :key=\"item.id\" :class=\"['dot', {active: currentIndex === index}]\">\r\n      </span>\r\n{{currentIndex}}    <!-- no change but console can -->\r\n`\r\n\r\nit lead the data(currentIndex...) can't be rendered in real time while items is a empty array. maybe the :key=\"item.id\" make error.\r\nremove the `:key=\"item.id\" ` is OK.\r\nhow I can solve it?\r\n\r\n`  data() {\r\n    return {\r\n      dots: [],\r\n      currentIndex: 0\r\n    }\r\n  }, \r\n  mounted() {\r\n    setTimeout(() => {\r\n      this._initDots();  // length = 5\r\n    }, 20);\r\n  },\r\n  methods: {\r\n    _initDots(){\r\n      this.dots = Array(this.children.length);\r\n      // console.log(this.dots);\r\n    },\r\n}`\r\n\r\n### What is expected?\r\n{{currentIndex}} can change in real time\r\nand for can iterate in right way\r\n\r\n### What is actually happening?\r\n\r\n` <span v-for=\"(item, index) in dots\" :key=\"item.id\" :class=\"['dot', {active: currentIndex === index}]\">\r\n      </span>\r\n{{currentIndex}}    <!-- no change -->\r\n`\r\n\r\nit lead the data(currentIndex...) can't be rendered in real time while items is a empty array. maybe the :key=\"item.id\" make error.\r\nremove the `:key=\"item.id\" ` is OK.\r\nhow I can solve it?\r\n\r\n`  data() {\r\n    return {\r\n      dots: [],\r\n      currentIndex: 0\r\n    }\r\n  }, \r\n  mounted() {\r\n    setTimeout(() => {\r\n      this._initDots();  // length = 5\r\n    }, 20);\r\n  },\r\n  methods: {\r\n    _initDots(){\r\n      this.dots = Array(this.children.length);\r\n      // console.log(this.dots);\r\n    },\r\n}`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8202","RelatedDescription":"Closed issue \"it lead the data can't be rendered in real time while v-for in items is a empty array\" (#8202)"},{"Id":"324617052","IsPullRequest":false,"CreatedAt":"2018-05-19T09:44:52","Actor":"fengxuemiao","Number":"8203","RawContent":null,"Title":"在ie>9时候， 在table中使用templete 失效，怎么解决","State":"closed","Body":"        <tbody>\r\n            <template v-for=\"item in arrList \">\r\n                <tr v-for=\"(res,index) in item.list\" >\r\n                    <td :rowspan=\"item.list.length\" v-if=\"index==0\">{{item.created_name}}</td>\r\n                    <td>{{res.no}}</td>\r\n                    <td>{{res.cpname}}</td>\r\n                    <td>{{res.time_name}}</td>\r\n                    <td>{{res.type}}</td>\r\n                    <td>{{res.speed}}</td>                           \r\n                </tr>\r\n            </template>\r\n        </tbody>","Url":"https://github.com/vuejs/vue/issues/8203","RelatedDescription":"Closed issue \"在ie>9时候， 在table中使用templete 失效，怎么解决\" (#8203)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"325349491","IsPullRequest":false,"CreatedAt":"2018-05-22T18:06:59","Actor":"polyphonic13","Number":"2207","RawContent":null,"Title":"Router Link Context Menu","State":"closed","Body":"### What problem does this feature solve?\r\n# Background\r\n\r\nCurrently, there is a lack of right-click context menu for Router Links. This would be a great addition to vue-router, router link elements.\r\n\r\nThe following points are cited from the vue-router documents: \r\n>It works the same way in both HTML5 history mode and hash mode, so if you ever decide to switch mode, or when the router falls back to hash mode in IE9, nothing needs to be changed.\r\n\r\n>In HTML5 history mode, router-link will intercept the click event so that the browser doesn't try to reload the page.\r\n\r\n>When you are using the base option in HTML5 history mode, you don't need to include it in to prop's URLs.\r\n\r\nHowever, there are cases where the user may wish to open a router-link in a new window, in order to maximize productivity. For example, our team is currently rebuilding an internal campaign management system. There are several sections to this, which can be viewed simultaneously by our end users. The users prefer the option to open multiple tabs, in order to see sets of data side-by-side. \r\n\r\nAt present, there is no context menu associated with view router links--right-clicks open the standard browser context menu. This prevents offering the user the *option* to navigate to a link in a new tab. \r\n\r\n# Proposal\r\n\r\nAdd an optional context menu feature to router-link elements. The feature would include the following: \r\n- mimic browser's native right-click context menu for anchor tags\r\n- open a router-link using the `target=_blank` method, when option selected by user from context menu\r\n- open router-links in same tab by default\r\n- optional: only include the context menu if a property is set to true within the code (TBD) \r\n\r\n\r\n\r\n### What does the proposed API look like?\r\n`<router-link to=\"/my-route\" has-context-menu=\"true\"></router-link>`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2207","RelatedDescription":"Closed issue \"Router Link Context Menu\" (#2207)"},{"Id":"325283002","IsPullRequest":false,"CreatedAt":"2018-05-22T13:00:18","Actor":"victor192","Number":"2206","RawContent":null,"Title":"$router.push encodes special characters","State":"closed","Body":"If I write the following code `$router.push({query: {q: 'sort(desc)'}})` then in the browser url the following string is displayed: `?q=sort%28desc%29`. Is it possible to make the `push` method not encode special characters?","Url":"https://github.com/vuejs/vue-router/issues/2206","RelatedDescription":"Closed issue \"$router.push encodes special characters\" (#2206)"},{"Id":"325124916","IsPullRequest":false,"CreatedAt":"2018-05-22T06:41:49","Actor":"SecMao","Number":"2205","RawContent":null,"Title":"Nginx cases the same content in router page reloading","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/8e1ghfme/2/](https://jsfiddle.net/8e1ghfme/2/)\r\n\r\n### Steps to reproduce\r\nI have a project in which pages are split to left/middle/right parts. The left and right parts in different routers display different Component. But the middle part keeps unchanged. When I played in my own project, switch the routers, everything goes well. Then I published the project to Production Environment, where we use nginx to redirect request. The problem occurs. When I change route 1 to route 2, the middle part reload too. \r\n\r\nmy router config:\r\nnew Router({\r\n  mode: 'history',\r\n  routes: [\r\n    {\r\n      path:  '/index',\r\n      components: {\r\n        Left: Left,\r\n        Middle: Middle,\r\n        Right: Right\r\n      }\r\n    },\r\n    {\r\n      path: '/working',\r\n      components: {\r\n        Left: workingLeft,\r\n        Middle: Middle,\r\n        Right: workingRight\r\n      }\r\n    },\r\n    {\r\n      path: '/powermode',\r\n      components: {\r\n        Left: workingLeft,\r\n        Middle: Middle,\r\n        Right: powerRight\r\n      }\r\n    }\r\n  ]\r\n})\r\n\r\n### What is expected?\r\nsame component in different routers do not reload\r\n\r\n### What is actually happening?\r\nsame component in different routers do reload\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2205","RelatedDescription":"Closed issue \"Nginx cases the same content in router page reloading\" (#2205)"},{"Id":"324745355","IsPullRequest":true,"CreatedAt":"2018-05-20T21:46:06","Actor":"petkunandrew","Number":"2204","RawContent":null,"Title":"fix grammar getting-started.md (ru)","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2204","RelatedDescription":"Open PR \"fix grammar getting-started.md (ru)\" (#2204)"},{"Id":"324600172","IsPullRequest":true,"CreatedAt":"2018-05-19T04:31:56","Actor":"emanuelmutschlechner","Number":"2203","RawContent":null,"Title":"Add feature external routes","State":"open","Body":"This commit adds support for external routes in `routes` of the router.\r\n\r\nFeature request:\r\n#1280\r\n\r\nLive demo:\r\nhttps://7496x53w10.codesandbox.io/\r\n\r\nInteractive example:\r\nhttps://codesandbox.io/s/7496x53w10","Url":"https://github.com/vuejs/vue-router/pull/2203","RelatedDescription":"Open PR \"Add feature external routes\" (#2203)"},{"Id":"324352138","IsPullRequest":false,"CreatedAt":"2018-05-18T12:01:49","Actor":"korewayume","Number":"2202","RawContent":null,"Title":"Sometimes the feat `Lazy Loading Routes`  has odd build problem.","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/korewayume/abc](https://github.com/korewayume/abc)\r\n\r\n### Steps to reproduce\r\n\r\nrun command : `npm run serve`\r\n\r\ncommit init is generate by @vue/cli 3.0.0-beta.10\r\n\r\ncommit success write two `.vue` files:  `src/views/a/index.vue` and `src/views/b/index.vue`, they only have one line different. And `src/views/a/index.vue` is not referenced by `vue-router`.\r\n\r\ncommit error toggle the line `import router from '@/router';` comment status, and now they are same.\r\n\r\nThe later commit show some odd behavior about `Lazy Loading Routes`,  even throught the `asComponent` func never used.\r\n\r\n### What is expected?\r\n`Lazy Loading Routes`  work well\r\n\r\n### What is actually happening?\r\n`Lazy Loading Routes` makes odd\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2202","RelatedDescription":"Closed issue \"Sometimes the feat `Lazy Loading Routes`  has odd build problem.\" (#2202)"},{"Id":"323740543","IsPullRequest":false,"CreatedAt":"2018-05-16T19:04:34","Actor":"aligajani","Number":"2201","RawContent":null,"Title":"How to make sure visiting login route while being authenticated doesn't result in 404 but rather redirect to home?","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/chrisvfritz/50wL7mdz/](https://jsfiddle.net/chrisvfritz/50wL7mdz/)\r\n\r\n### Steps to reproduce\r\n**Login Route**\r\n\r\n```\r\n {\r\n        path: '/login',\r\n        name: 'login',\r\n        component: Login,\r\n        meta: { auth: false }\r\n    },\r\n```\r\n\r\n\r\n**404**\r\n\r\n```\r\n{\r\n        path: '/404',\r\n        name: 'error-404',\r\n        component: Error404\r\n    },\r\n```\r\n\r\n**Home**\r\n\r\n```\r\n{\r\n        path: '/',\r\n        name: 'default',\r\n        component: Home,\r\n        meta: { auth: true }\r\n    }\r\n```\r\n\r\n### What is expected?\r\nVisiting login route while authenticated should redirect to home\r\n\r\n### What is actually happening?\r\nVisiting login router while authenticated redirects to 404 route\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2201","RelatedDescription":"Closed issue \"How to make sure visiting login route while being authenticated doesn't result in 404 but rather redirect to home?\" (#2201)"},{"Id":"323733732","IsPullRequest":false,"CreatedAt":"2018-05-16T18:22:30","Actor":"aligajani","Number":"2200","RawContent":null,"Title":"How to make sure visiting login route while being authenticated doesn't result in 404 but rather redirect to home?","State":"closed","Body":"**Login Route**\r\n\r\n```\r\n {\r\n        path: '/login',\r\n        name: 'login',\r\n        component: Login,\r\n        meta: { auth: false }\r\n    },\r\n```\r\n\r\n\r\n**404**\r\n\r\n```\r\n{\r\n        path: '/404',\r\n        name: 'error-404',\r\n        component: Error404\r\n    },\r\n```\r\n\r\n**Home**\r\n\r\n```\r\n{\r\n        path: '/',\r\n        name: 'default',\r\n        component: Home,\r\n        meta: { auth: true }\r\n    }\r\n```","Url":"https://github.com/vuejs/vue-router/issues/2200","RelatedDescription":"Closed issue \"How to make sure visiting login route while being authenticated doesn't result in 404 but rather redirect to home?\" (#2200)"},{"Id":"323050961","IsPullRequest":false,"CreatedAt":"2018-05-15T17:18:32","Actor":"eunjae-lee","Number":"2199","RawContent":null,"Title":"A link to named router is not working with root path of nested routes.","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/63b7utzm/19/](https://jsfiddle.net/63b7utzm/19/)\r\n\r\n### Steps to reproduce\r\nFrom the link above, click `/user`.\r\n\r\n### What is expected?\r\nIt's supposed to render `UserHome` component.\r\n\r\n### What is actually happening?\r\nbut it's just rendering `User` component.\r\n\r\n---\r\nIf you try with https://jsfiddle.net/kx7spvh3/1/ , it will work fine.\r\nThe only difference is, this one has links with actual path instead of route names.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2199","RelatedDescription":"Closed issue \"A link to named router is not working with root path of nested routes.\" (#2199)"},{"Id":"323041543","IsPullRequest":false,"CreatedAt":"2018-05-15T02:09:01","Actor":"tanzhiyu","Number":"2198","RawContent":null,"Title":"vue-router滚动行为还支持吗","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2198","RelatedDescription":"Closed issue \"vue-router滚动行为还支持吗\" (#2198)"},{"Id":"323034619","IsPullRequest":false,"CreatedAt":"2018-05-15T01:25:22","Actor":"f2009","Number":"2197","RawContent":null,"Title":"Android8.0版本路由问题","State":"closed","Body":"点击路由跳转链接的时候，第一次点击无反应需要再点一次。之前判断是组件加载慢，但长时间组件都加载不出来就不太合理了。尝试再点一次立刻就加载出来了。或者我连点2次也能很快加载出来。\r\n经测试该现象也只有在Android8.0手机会重现。","Url":"https://github.com/vuejs/vue-router/issues/2197","RelatedDescription":"Closed issue \"Android8.0版本路由问题\" (#2197)"},{"Id":"322599149","IsPullRequest":false,"CreatedAt":"2018-05-14T15:10:38","Actor":"djvonavi","Number":"2194","RawContent":null,"Title":"wrong work history push state","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://95.213.163.110:3001/user/578f9322f833fde7b4f479f8](http://95.213.163.110:3001/user/578f9322f833fde7b4f479f8)\r\n\r\n### Steps to reproduce\r\nclick to  Объявления and see browser adreess\r\n\r\n### What is expected?\r\nlink change to http://95.213.163.110:3001/user/578f9322f833fde7b4f479f8//ads\r\n\r\n### What is actually happening?\r\nlink change to http://95.213.163.110:3001/user/578f9322f833fde7b4f479f8/ads\r\n\r\n---\r\nI'm using a vue-router, and history is fashion. I have references such as `/user/578f9322f833fde7b4f479f8//ads, the link itself is spelled correctly, and the request to the server goes along the correct path, but in the address bar the link changes to /user/578f9322f833fde7b4f479f8/ads, that is, without 1 slash, and naturally the page refreshes an incident.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2194","RelatedDescription":"Closed issue \"wrong work history push state\" (#2194)"},{"Id":"322768061","IsPullRequest":false,"CreatedAt":"2018-05-14T10:59:52","Actor":"machao1990","Number":"2196","RawContent":null,"Title":"there are some problems with vue-router in a iframe in ie10","State":"open","Body":"### Version\r\n2.8.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/mage1990/pcoucsx6/2/](https://jsfiddle.net/mage1990/pcoucsx6/2/)\r\n\r\n### Steps to reproduce\r\nopen the link above in ie10,not the ie10 in ie11's or edge's  f12\r\nclick the detail button in the list component\r\nclick the back button in the detail component\r\nclick the detail button again button again\r\nThe page turns white\r\n\r\n### What is expected?\r\nThe page can be displayed normally.\r\n\r\n### What is actually happening?\r\nThe page turns white\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2196","RelatedDescription":"Open issue \"there are some problems with vue-router in a iframe in ie10\" (#2196)"},{"Id":"322731684","IsPullRequest":false,"CreatedAt":"2018-05-14T09:10:46","Actor":"raxxarr","Number":"2195","RawContent":null,"Title":"replaceState needs third argument","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/raxxarr/router-demo.git](https://github.com/raxxarr/router-demo.git)\r\n\r\n### Steps to reproduce\r\n- in latest Safari(OS X or iOS)\r\n- add base element: `<base href=\"/app/\">`\r\n- set router mode: history\r\n1. open page 1 via url: localhost:8080/app/p1\r\n2. navigate to /app/p2 by clicking button\r\n3. click history back button on browser\r\n\r\n\r\n### What is expected?\r\njump back to /app/p1\r\n\r\n### What is actually happening?\r\njump to /app/\r\n\r\n---\r\nThis issue is caused by using replaceState without giving a third argument when trying to fix a Firefox scroll issue (https://github.com/vuejs/vue-router/blob/dev/src/util/scroll.js#L9)； This works fine on most browsers except for Safari.\r\nAccording to whatwg spec，if the 3rd argument is not given，browser should set current url into history，but Safari set the base url.\r\nHere is Webkit source code: https://trac.webkit.org/browser/webkit/branches/safari-605.2.8.1-branch/Source/WebCore/page/History.cpp#L157\r\nHere is Blink source code: https://chromium.googlesource.com/chromium/blink/ /master/Source/core/frame/History.cpp#153\r\nAs is seen, what Safari do is not what we expect when we omit the 3rd argument.\r\n\r\nAlthough this is not really a vue-router bug, we can add a third argument(current path) to avoid something weird happen.\r\n\r\nps: this bug is confirmed by Webkit https://bugs.webkit.org/show_bug.cgi?id=182678\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2195","RelatedDescription":"Open issue \"replaceState needs third argument\" (#2195)"},{"Id":"322493811","IsPullRequest":true,"CreatedAt":"2018-05-12T08:30:04","Actor":"emanuelmutschlechner","Number":"2193","RawContent":null,"Title":"feat(link): add 'exact-path' matching option","State":"open","Body":"Improves unfinished pull request #2070 and closes issue #2040","Url":"https://github.com/vuejs/vue-router/pull/2193","RelatedDescription":"Open PR \"feat(link): add 'exact-path' matching option\" (#2193)"},{"Id":"322042296","IsPullRequest":true,"CreatedAt":"2018-05-10T19:51:03","Actor":"Ziming98","Number":"2192","RawContent":null,"Title":"Update data-fetching.md","State":"closed","Body":"我做过实验,在HTML5 History 模式下watch才会监听并且有效执行\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2192","RelatedDescription":"Closed or merged PR \"Update data-fetching.md\" (#2192)"},{"Id":"322033328","IsPullRequest":false,"CreatedAt":"2018-05-10T18:48:12","Actor":"armandomendivil","Number":"2191","RawContent":null,"Title":"Reload page when router-link is clicked in the same route","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/aevdnmzw/](http://jsfiddle.net/aevdnmzw/)\r\n\r\n### Steps to reproduce\r\nclick home link multiple times and look like it is just created just once\r\n\r\n### What is expected?\r\nI wanna reload the same page clicking  router-link\r\n\r\n### What is actually happening?\r\nIt is just created once\r\n\r\n---\r\nI'm using element-ui but I'm lookin' that is a behavior for vue-router, I know is not a bug but I want to know how can I do to get my expected behavior, Cheers!\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2191","RelatedDescription":"Closed issue \"Reload page when router-link is clicked in the same route\" (#2191)"},{"Id":"321681347","IsPullRequest":true,"CreatedAt":"2018-05-09T18:40:42","Actor":"trainiac","Number":"2190","RawContent":null,"Title":"Update navigation-guards.md","State":"open","Body":"Be consistent with referring to guard function names.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2190","RelatedDescription":"Open PR \"Update navigation-guards.md\" (#2190)"},{"Id":"321511805","IsPullRequest":false,"CreatedAt":"2018-05-09T10:14:23","Actor":"zsh2017","Number":"2189","RawContent":null,"Title":"vue-router的beforeEach守卫中，抓不到vuex里getters中属性值","State":"closed","Body":"在控制台中打印router.app.$options.store.getters可以看到值。\r\n但是序列化和Object.assign这个对象的时候，显示的是重置初始化的state数据","Url":"https://github.com/vuejs/vue-router/issues/2189","RelatedDescription":"Closed issue \"vue-router的beforeEach守卫中，抓不到vuex里getters中属性值\" (#2189)"},{"Id":"321035558","IsPullRequest":false,"CreatedAt":"2018-05-08T04:05:25","Actor":"mrnateriver","Number":"2188","RawContent":null,"Title":"next() callback in beforeRouteEnter stopped working with Vue 2.5.16","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/09Lom5h4/3/](http://jsfiddle.net/09Lom5h4/3/)\r\n\r\n### Steps to reproduce\r\nReproduced with Vue 2.5.16.\r\n\r\n1. Open provided jsfiddle.net link;\r\n2. Open browser console;\r\n3. Click on 'first a' ;\r\n4. Click on 'first b' ;\r\n5. Click on 'second a' ;\r\n6. Click on 'second b';\r\n7. And click on 'first a' again;\r\n8. Inspect console output.\r\n\r\n### What is expected?\r\nCallback passed to next() call in beforeRouteEnter hook must be called at all times.\r\n\r\nExpected console output:\r\n```\r\nbeforeRouteEnter:\r\nvue-component-3: mounted\r\nvm.title: first_a\r\nbeforeRouteEnter:\r\nvm.title: first_b\r\nbeforeRouteEnter:\r\nvue-component-4: mounted\r\nvm.title: second_a\r\nbeforeRouteEnter:\r\nvm.title: second_b\r\nbeforeRouteEnter:\r\nvue-component-3: mounted\r\nvm.title: first_a\r\n```\r\n\r\n### What is actually happening?\r\nSomething very peculiar.\r\n\r\nThe callback (let's call it CB) that's passed to next() only gets called for an instance of component that is mounted first. Any transitions to other instances of that component *do* trigger beforeRouteEnter hook, but CB doesn't get called. However, if you transition to other instances, and then back to the first one, CB gets called again.\r\n\r\nActual console output:\r\n```\r\nbeforeRouteEnter:\r\nvue-component-3: mounted\r\nvm.title: first_a\r\nbeforeRouteEnter:\r\n<-- missing output: vm.title: first_b\r\nbeforeRouteEnter:\r\nvue-component-4: mounted\r\nvm.title: second_a\r\nbeforeRouteEnter:\r\n<-- missing output: vm.title: second_b\r\nbeforeRouteEnter:\r\nvm.title: first_b <-- this is another bug, which is already reported, issue 2062\r\nvue-component-3: mounted\r\n```\r\n\r\n---\r\nThis behaviour appeared somewhere between Vue versions 2.5.13 and 2.5.16, (almost) everything is fine with 2.5.13:\r\n\r\nhttp://jsfiddle.net/09Lom5h4/4/\r\n\r\nI said *almost* fine, because it overlaps with another bug:\r\n\r\nhttps://github.com/vuejs/vue-router/issues/2062\r\n\r\nI've actually used the JSFiddle from that issue to demonstrate this one.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2188","RelatedDescription":"Open issue \"next() callback in beforeRouteEnter stopped working with Vue 2.5.16\" (#2188)"},{"Id":"320531792","IsPullRequest":false,"CreatedAt":"2018-05-05T18:40:15","Actor":"KnorienChang","Number":"2187","RawContent":null,"Title":"history模式下，index.html在二级路由下刷新页面无法读取static文件夹中的资源文件","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://xxx.xx.xxx](https://xxx.xx.xxx)\r\n\r\n### Steps to reproduce\r\nvue-cli(2.9.3) vue-router 3.0.1 ，在index.html引用static文件夹下的静态资源，当路由的模式为history且为二级路由的时候，刷新页面并不能正确的获取到静态资源的文件。因vue-cli生成的项目，无法提供例子。\r\n\r\n### What is expected?\r\n能否在history模式下，刷新的时候也能够正常的读取到static目录下的静态资源文件\r\n\r\n### What is actually happening?\r\n在history模式下且在二级路由的时候，刷新页面的时候不能正确的读取到static文件夹下的静态资源文件\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2187","RelatedDescription":"Closed issue \"history模式下，index.html在二级路由下刷新页面无法读取static文件夹中的资源文件\" (#2187)"},{"Id":"320501662","IsPullRequest":true,"CreatedAt":"2018-05-05T11:26:48","Actor":"posva","Number":"2186","RawContent":null,"Title":"Revert \"fix typo for navigation.md\"","State":"closed","Body":"Reverts vuejs/vue-router#2178","Url":"https://github.com/vuejs/vue-router/pull/2186","RelatedDescription":"Closed or merged PR \"Revert \"fix typo for navigation.md\"\" (#2186)"},{"Id":"320392958","IsPullRequest":false,"CreatedAt":"2018-05-04T19:07:41","Actor":"sobolevn","Number":"2185","RawContent":null,"Title":"Ship Flow types","State":"open","Body":"### What problem does this feature solve?\r\nI am currently working on providing better developer experience for ones using `flow` +  `vue`: https://github.com/sobolevn/vue-flow-typed\r\n\r\nI have noticed that you already have pretty much all the needed types in https://github.com/vuejs/vue-router/blob/dev/flow/declarations.js So, maybe it would be better to ship them with the package?\r\n\r\nOr if they are not ready for the \"production\" shipping, is there anything I can help with?\r\nIf you are not interested in providing these types for now, I will just create a custom package at https://github.com/sobolevn/vue-flow-typed\r\n\r\nThanks!\r\n\r\n\r\n### What does the proposed API look like?\r\n-\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2185","RelatedDescription":"Open issue \"Ship Flow types\" (#2185)"},{"Id":"318269072","IsPullRequest":true,"CreatedAt":"2018-05-04T14:17:53","Actor":"Matsukiyo","Number":"2178","RawContent":null,"Title":"fix typo for navigation.md","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2178","RelatedDescription":"Closed or merged PR \"fix typo for navigation.md\" (#2178)"},{"Id":"320236857","IsPullRequest":false,"CreatedAt":"2018-05-04T11:13:18","Actor":"kirillbunin","Number":"2184","RawContent":null,"Title":"[Docs] Incomplete Navigation Resolution Flow","State":"open","Body":"### What problem does this feature solve?\r\nhttps://github.com/vuejs/vue-router/blob/dev/docs/en/advanced/navigation-guards.md#the-full-navigation-resolution-flow\r\n\r\nI think the docs are lacking full flow, not mentioning 'beforeRouteLeave' for example. Would be cool if diagram were to be created, such as used on Vue lifecycle\r\n\r\nhttps://vuejs.org/v2/guide/instance.html#Lifecycle-Diagram\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2184","RelatedDescription":"Open issue \"[Docs] Incomplete Navigation Resolution Flow\" (#2184)"},{"Id":"319475424","IsPullRequest":false,"CreatedAt":"2018-05-02T22:09:43","Actor":"sheggi","Number":"2183","RawContent":null,"Title":"Configruation for enable/disable ensureSlash() in hash mode ","State":"closed","Body":"### What problem does this feature solve?\r\nUse Case:\r\nvue-route is used beside other scripts, where plain anchors are used.\r\nClicking a link for `#top` we get `#/top` because of ensureSlash() in hash mode. (There is no route defined for `/top`).\r\nTherefore the other script can't complete because the hash with slash is not recognized.\r\n\r\nI guess the ensureSlash() is only required for matching the `/` home route or `/any...` any other route.\r\n\r\nIs there otherwise a dependency I don't see, where ensureHash() is required?\r\n\r\n### What does the proposed API look like?\r\nHaving a configuration is preferable for disabling the default behaviour.\r\n\r\n```js\r\nrouter  = new VueRouter({\r\n    ensureHash: false\r\n});\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2183","RelatedDescription":"Closed issue \"Configruation for enable/disable ensureSlash() in hash mode \" (#2183)"},{"Id":"318599337","IsPullRequest":true,"CreatedAt":"2018-05-02T21:51:31","Actor":"TheLarkInn","Number":"2180","RawContent":null,"Title":"chore(package.json): add sideEffects: false field to package.json","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nThis PR adds the `\"sideEffects\": false` property in vue-router's `package.json` file. This allow's webpack (for those who want to opt-in to requiring vue-routers's original source files (instead of the flattened esm bundles) and want to remove flow type through a babel-transform, then this will allow webpack to aggressively ignore and treeshake unused exports throughout the module system (if they exist!)\r\n\r\nIn many cases this can yield hidden and surprising build time improvements and size reductions in the case that modules flattened from rollup aren't actually needed when webpack performs a scope analysis. \r\n\r\nThe angular team has adopted this approach for the CLI yielding some strong build time speed for webpack (since unused exports are also not resolved, parsed, etc.). From my assessment of the module graph created, it looks that there are no sideEffects created against existing re-exports throughout the codebase, therefore even if a user did opt in on their own will, and remove flow types, there should be no danger of removing code that is needed and causing breakages. \r\n\r\nOverall, this already will not be a breaking change in any way but just provides extra benefits to those (and for the cli (if realized) when using webpack 4 and `mode: production`).\r\n\r\nHappy to answer any other questions.\r\n~Sean + [webpack team](https://github.com/webpack) ","Url":"https://github.com/vuejs/vue-router/pull/2180","RelatedDescription":"Closed or merged PR \"chore(package.json): add sideEffects: false field to package.json\" (#2180)"},{"Id":"319171358","IsPullRequest":false,"CreatedAt":"2018-05-01T11:00:45","Actor":"nowy","Number":"2182","RawContent":null,"Title":"Typescript: `Location` interface typing for query should include arrays","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/en/essentials/navigation.html](https://router.vuejs.org/en/essentials/navigation.html)\r\n\r\n### Steps to reproduce\r\nWhen programmatically navigating on vue router, pass through a dictionary with a param as an array. E.g.\r\n``` json\r\n{\r\n  \"foo\": [\"bar\"]\r\n}\r\n```\r\n\r\n### What is expected?\r\nTypes are expected to work\r\n\r\n### What is actually happening?\r\nIn `router.d.ts`, the typing for `query`, under `Location` is set to:\r\n`Dictionary<string>`.\r\n\r\nThis should be set to allow arrays too. Potentially numbers as well?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2182","RelatedDescription":"Open issue \"Typescript: `Location` interface typing for query should include arrays\" (#2182)"},{"Id":"318926327","IsPullRequest":false,"CreatedAt":"2018-04-30T20:48:02","Actor":"mgarcia96","Number":"2181","RawContent":null,"Title":"Vue router push not working on Firefox","State":"closed","Body":"### Version\r\n2.8.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/332372/](https://jsfiddle.net/50wL7mdz/332372/)\r\n\r\n### Steps to reproduce\r\n[Firefox - Last version]\r\n\r\nJust added a event to a link, add a param to the vuex and then push the step-2 route, and it doens't works on firefox\r\n\r\n### What is expected?\r\nChange url\r\n\r\n### What is actually happening?\r\nNot working url\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2181","RelatedDescription":"Closed issue \"Vue router push not working on Firefox\" (#2181)"},{"Id":"318302414","IsPullRequest":false,"CreatedAt":"2018-04-27T07:43:34","Actor":"adityarw","Number":"2179","RawContent":null,"Title":"am unable to use multiple views giving error","State":"closed","Body":"### Version\r\n2.5.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/posva/6du90epg/](https://jsfiddle.net/posva/6du90epg/)\r\n\r\n### Steps to reproduce\r\nam new to vue please help me..\r\n\r\nrouting code :\r\n\r\nimport Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport HelloWorld from '@/components/HelloWorld'\r\nimport HelloWorlds from '@/components/HelloWorlds'\r\n\r\nVue.use(Router)\r\n\r\nexport default new Router({\r\nroutes: [\r\n{\r\npath: '/',\r\ncomponent: {\r\ndefault: HelloWorld,\r\nb: HelloWorlds\r\n}\r\n},\r\n{\r\npath: 'nav',\r\nname: 'HelloWorlds',\r\ncomponent: HelloWorlds\r\n}\r\n]\r\n})\r\n\r\nVue component\r\n\r\n<script> export default { name: 'App' } </script> <style> #app { font-family: 'Avenir', Helvetica, Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; text-align: center; color: #2c3e50; margin-top: 60px; } </style>\r\n\r\n### What is expected?\r\ni need to show 2 view one above the other. \r\n\r\n### What is actually happening?\r\ngiving error like this\r\n[Vue warn]: Failed to mount component: template or render function not defined.\r\n\r\nfound in\r\n\r\n---> <Anonymous>\r\n       <App> at src/App.vue\r\n         <Root>\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2179","RelatedDescription":"Closed issue \"am unable to use multiple views giving error\" (#2179)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"325538883","IsPullRequest":true,"CreatedAt":"2018-05-23T03:45:10","Actor":"Jinjiang","Number":"1282","RawContent":null,"Title":"Update _redirects for zh-cn","State":"open","Body":"`/zh-cn/* /zh/:splat`","Url":"https://github.com/vuejs/vuex/pull/1282","RelatedDescription":"Open PR \"Update _redirects for zh-cn\" (#1282)"},{"Id":"325423929","IsPullRequest":false,"CreatedAt":"2018-05-22T19:03:15","Actor":"vog","Number":"1281","RawContent":null,"Title":"Syntactic sugar for commiting mutations","State":"open","Body":"### What problem does this feature solve?\r\nCommitting mutations has a very strange syntax, which really stands out negatively, compared to the otherwise very elegant APIs found in the Vue/Vuex ecosystem:\r\n\r\n    this.$store.commit('someMutation', args...)\r\n\r\nThe docs mention that this is to emphasize that a commit is not a direct call to the mutation. I don't think this line of reasoning holds in the Vue/Vuex world. In almost all other aspects of Vue/Vuex, the API looks straight forward (e.g. just getting and setting properties), but under the hood a lot of additional logic runs (dependency tracking, etc.). So there is really no need to make committing mutations more cumbersome than they need to be.\r\n\r\nIn addition to making the code harder to read, this leads to additional rules about argument passing.\r\n\r\nMoreover, it is very hard to spot typos in the mutation name early on, as the mutation name is just a string - let alone checking that the call to `commit()` received the correct arguments according to the mutation function. These types of errors should be easy to spot at compile time, but with the current syntax, these are all pushed into runtime.\r\n\r\nFinally, this cumbersome syntax might be (correctly) perceived as boilerplate, especially to beginners. Hence, replacing the commit syntax with a more straight forward syntax might improve the adoption of Vuex.\r\n\r\n### What does the proposed API look like?\r\nInstead of:\r\n\r\n    this.$store.commit('someMutation', args...)\r\n\r\none should be allowed to write:\r\n\r\n    this.$store.someMutation(args...)\r\n\r\nMoreover, it would be great if looking at `this.$store` in the developer console all available mutation methods are shown. That is, the methods should be real properties of this.$store, collected once at program start.\r\n\r\nUnder the hood, of course, these methods might all call some central commit() function.\r\n\r\nAlternative syntax: The above syntax might introduce some name collisions. For example, someone might name one of their mutations \"state\", for whatever reason, making \"this.$store.state\" ambiguous. For the sake of simplicity, these names should just be forbidden as mutation names. But if this is not an option for whatever reason, an intermediate object might do the trick as well. This would be less beautiful, but still better than what we have today:\r\n\r\n    this.$store.commit.someMutation(args...)\r\n\r\nor shorter:\r\n\r\n    this.$store.c.someMutation(args...)\r\n\r\nAs an additional proposal, the old `this.$store.commit()` syntax should be marked deprecated.  And removed in future Vuex versions. This generic call is not needed. Any generic commit call might as well be formulated as `this.$store[mutationName](args...)`, which is still easy to understand and even shorter than `this.$store.commit(mutationName, args...)`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1281","RelatedDescription":"Open issue \"Syntactic sugar for commiting mutations\" (#1281)"},{"Id":"325248154","IsPullRequest":true,"CreatedAt":"2018-05-22T11:22:13","Actor":"ioslh","Number":"1280","RawContent":null,"Title":"Update mutations.md","State":"closed","Body":"mutations 使用 commit 触发；\r\nactions 使用 dispatch 触发。","Url":"https://github.com/vuejs/vuex/pull/1280","RelatedDescription":"Closed or merged PR \"Update mutations.md\" (#1280)"},{"Id":"325171763","IsPullRequest":true,"CreatedAt":"2018-05-22T07:29:58","Actor":"Alex-Sokolov","Number":"1279","RawContent":null,"Title":"[RU] Translation moved to VuePress","State":"open","Body":"P.S.: Maybe delete `docs/core-concepts.md`? Seems like it not used anywhere in VuePress","Url":"https://github.com/vuejs/vuex/pull/1279","RelatedDescription":"Open PR \"[RU] Translation moved to VuePress\" (#1279)"},{"Id":"325136423","IsPullRequest":true,"CreatedAt":"2018-05-22T05:06:12","Actor":"nicedchy","Number":"1278","RawContent":null,"Title":"[docs]: add vuepress lang-ja directory","State":"closed","Body":"I moved from gitbook to vuepress for lang-ja directory.","Url":"https://github.com/vuejs/vuex/pull/1278","RelatedDescription":"Closed or merged PR \"[docs]: add vuepress lang-ja directory\" (#1278)"},{"Id":"324728427","IsPullRequest":false,"CreatedAt":"2018-05-22T02:14:10","Actor":"Jinjiang","Number":"1275","RawContent":null,"Title":"[docs] incompatible with vuepress","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/Jinjiang/vuex/tree/vuepress](https://github.com/Jinjiang/vuex/tree/vuepress)\r\n\r\n### Steps to reproduce\r\nnpm run docs\r\n\r\n### What is expected?\r\nJust try vuepress to dev/build docs\r\n\r\npreview: https://5b01b3bb3672df726f83886e--objective-stonebraker-ca8353.netlify.com\r\n\r\n### What is actually happening?\r\nThere always be some errors, until I changed some dev deps:\r\n\r\n1. remove `rollup-plugin-buble`\r\n2. remove (or upgrade v3 -> v4) `webpack`\r\n\r\nby https://github.com/Jinjiang/vuex/commit/b74690d08cb43bff4eaa2031553e004922d802e2\r\n\r\nBut if I changed them, it failed with other npm scripts.\r\n\r\n---\r\nvuepress error branch:\r\n[https://github.com/Jinjiang/vuex/tree/test](https://github.com/Jinjiang/vuex/tree/test)\r\n\r\nvuepress error message:\r\n\r\n```bash\r\n> vuepress dev docs\r\n\r\nExtracting site metadata...TypeError: Cannot destructure property `createHash` of 'undefined' or 'null'.\r\n    at Object.<anonymous> (/Users/xxxxxxxx/vuex/node_modules/mini-css-extract-plugin/dist/index.js:26:44)\r\n    at Module._compile (module.js:641:30)\r\n    at Object.Module._extensions..js (module.js:652:10)\r\n    at Module.load (module.js:560:32)\r\n    at tryModuleLoad (module.js:503:12)\r\n    at Function.Module._load (module.js:495:3)\r\n    at Module.require (module.js:585:17)\r\n    at require (internal/module.js:11:18)\r\n    at Object.<anonymous> (/Users/xxxxxxxx/vuex/node_modules/mini-css-extract-plugin/dist/cjs.js:3:18)\r\n    at Module._compile (module.js:641:30)\r\n    at Object.Module._extensions..js (module.js:652:10)\r\n    at Module.load (module.js:560:32)\r\n    at tryModuleLoad (module.js:503:12)\r\n    at Function.Module._load (module.js:495:3)\r\n    at Module.require (module.js:585:17)\r\n    at require (internal/module.js:11:18)\r\n```\r\n\r\nI guess this should be considered as a bug of vuepress or we can do something in Vuex repo to walk around.\r\n\r\nThanks.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1275","RelatedDescription":"Closed issue \"[docs] incompatible with vuepress\" (#1275)"},{"Id":"325024071","IsPullRequest":true,"CreatedAt":"2018-05-21T22:33:11","Actor":"Jinjiang","Number":"1277","RawContent":null,"Title":"[docs] using vuepress","State":"closed","Body":"I only preserved English and Chinese versions. Other languages are moved to `docs-gitbook` folder temporarily. If any language is good to use vuepress too, it can be done with the folder.\r\n\r\nPreview: https://5b03148e3672df542683886f--objective-stonebraker-ca8353.netlify.com\r\n\r\nAdditionally, this PR has:\r\n* fixed e2e test error\r\n* upgraded webpack to v4\r\n* upgraded vue-loader to v15\r\n* upgraded rollup-plugin-buble to v0.19\r\n\r\nRef: #1275 \r\n\r\nThanks.","Url":"https://github.com/vuejs/vuex/pull/1277","RelatedDescription":"Closed or merged PR \"[docs] using vuepress\" (#1277)"},{"Id":"324804247","IsPullRequest":true,"CreatedAt":"2018-05-21T10:36:03","Actor":"suexcxine","Number":"1276","RawContent":null,"Title":"Fix typo","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1276","RelatedDescription":"Closed or merged PR \"Fix typo\" (#1276)"},{"Id":"322147340","IsPullRequest":false,"CreatedAt":"2018-05-18T16:12:40","Actor":"smithyj","Number":"1262","RawContent":null,"Title":"Can you add hooks before and after mutation actions ?","State":"closed","Body":"### What problem does this feature solve?\r\ncome true global loading plugins\r\n\r\n### What does the proposed API look like?\r\nfor example:\r\nstore.subscribeBeforeAction()\r\nstore.subscribeAfterAction()\r\nstore.subscribeBeforeMutation()\r\nstore.subscribeAfterMutation()\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1262","RelatedDescription":"Closed issue \"Can you add hooks before and after mutation actions ?\" (#1262)"},{"Id":"324461349","IsPullRequest":false,"CreatedAt":"2018-05-18T15:44:54","Actor":"ciddan","Number":"1274","RawContent":null,"Title":"The TypeScript definition files incorrectly specifies the map* functions as named exports.","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/ciddan/vuex-ts-issue](https://github.com/ciddan/vuex-ts-issue)\r\n\r\n### Steps to reproduce\r\nReproduction of an issue with the TypeScript type definitions in Vuex.\r\n\r\n1. Clone the provided repository.\r\n2. run npm install\r\n3. run npm start\r\n4. Open browser and go to http://localhost:8080.\r\n5. Open dev tools and look at the console output.\r\n\r\n\r\n### What is expected?\r\nThat the first log output: ```mapActions from: import { mapActions } undefined``` isn't undefined.\r\n\r\n### What is actually happening?\r\nmapActions is undefined.\r\n\r\n---\r\nPlease read the README in the linked repository for full information on the issue.\r\n\r\nWe ran into this issue while working on TypeScript decorators that required the use of the various map functions.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1274","RelatedDescription":"Open issue \"The TypeScript definition files incorrectly specifies the map* functions as named exports.\" (#1274)"},{"Id":"324435156","IsPullRequest":false,"CreatedAt":"2018-05-18T14:33:07","Actor":"ciddan","Number":"1273","RawContent":null,"Title":"The TypeScript definition files incorrectly specifies the map* functions as named exports","State":"closed","Body":"This is incorrect:\r\nhttps://github.com/vuejs/vuex/blob/4d573e9960f8cca33fdf9051521a203b03b18ae5/types/index.d.ts#L6\r\n\r\nLooking at vuex.js and vuex.common.js all of these functions are exported in the default export, not as named exports. This breaks our TypeScript/SystemJS project - since the TypeScript type of the default export only contains Store and install. Importing the map functions as named exports, i.e:\r\n``` typescript\r\nimport { mapActions } from \"vuex\";\r\n```\r\ndoesn't work either - since they're undefined at run time (SystemJS handles default and named exports differently). \r\n\r\nWith \"system\" as the module format defined in tsconfig.json usage of a a named export is compiled to:\r\n``` javascript\r\nvuex_1.mapActions\r\n```\r\nWhereas usage of a default export is compiled to:\r\n``` javascript\r\nvuex_1.default.Store\r\n```\r\n\r\nThe map functions should be exported together with Store and install here:\r\nhttps://github.com/vuejs/vuex/blob/4d573e9960f8cca33fdf9051521a203b03b18ae5/types/index.d.ts#L129-L132\r\n\r\nFor reference, this is the export from vuex.js:\r\nhttps://github.com/vuejs/vuex/blob/4d573e9960f8cca33fdf9051521a203b03b18ae5/dist/vuex.js#L925-L936","Url":"https://github.com/vuejs/vuex/issues/1273","RelatedDescription":"Closed issue \"The TypeScript definition files incorrectly specifies the map* functions as named exports\" (#1273)"},{"Id":"324245654","IsPullRequest":true,"CreatedAt":"2018-05-18T04:33:01","Actor":"thoughtkun","Number":"1271","RawContent":null,"Title":"Update mutations.md","State":"closed","Body":"there is no payload **amount**","Url":"https://github.com/vuejs/vuex/pull/1271","RelatedDescription":"Closed or merged PR \"Update mutations.md\" (#1271)"},{"Id":"324257404","IsPullRequest":false,"CreatedAt":"2018-05-18T04:29:31","Actor":"falstack","Number":"1272","RawContent":null,"Title":"TypeError: Cannot read property '${anyKey}' of undefined","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/m99jmqsa/2/](https://jsfiddle.net/m99jmqsa/2/)\r\n\r\n### Steps to reproduce\r\n```\r\n1：open：https://jsfiddle.net/m99jmqsa/2/\r\n2：open chrome console\r\n3：look error\r\n4：rewrite [html] \"<!-- <div>{{myData2}}</div> --> \" to \"<div>{{myData2}}</div>\"\r\n5：run，look error\r\n```\r\n\r\n### What is expected?\r\nnoError, can render success\r\n\r\n### What is actually happening?\r\nrender error\r\n\r\n---\r\nwhen i get a object，it may very deep，{ a: 1, b: { c: 2, d: { e: 3 } } }...\r\n\r\nhow can i set init state?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1272","RelatedDescription":"Closed issue \"TypeError: Cannot read property '${anyKey}' of undefined\" (#1272)"},{"Id":"323908118","IsPullRequest":true,"CreatedAt":"2018-05-17T23:45:25","Actor":"cho0o0","Number":"1269","RawContent":null,"Title":"add an example of subscribeAction in plugins.md","State":"closed","Body":"I think an example of `subscribeAction` is missing in the document for elaborating the usage of it.","Url":"https://github.com/vuejs/vuex/pull/1269","RelatedDescription":"Closed or merged PR \"add an example of subscribeAction in plugins.md\" (#1269)"},{"Id":"323915993","IsPullRequest":false,"CreatedAt":"2018-05-17T08:13:46","Actor":"teamonn","Number":"1270","RawContent":null,"Title":"><script>alert(666)</script>","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vuex/issues/1270","RelatedDescription":"Closed issue \"><script>alert(666)</script>\" (#1270)"},{"Id":"323257307","IsPullRequest":false,"CreatedAt":"2018-05-15T15:00:15","Actor":"matthewmorgan","Number":"1268","RawContent":null,"Title":"Programmatically create getters and setters for defined store properties","State":"open","Body":"### What problem does this feature solve?\r\nTedious boilerplate is currently required to create a store property with vanilla getters and setters.  EG\r\n\r\n```javascript\r\nconst createStore = () => new Vuex.Store({\r\n  state: {\r\n    version: null,\r\n  },\r\n  getters: {\r\n    version(state){\r\n        return state.version;\r\n    }\r\n  },\r\n  setters: {\r\n    setVersion(state, version){\r\n      state.version = version;\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nI don't currently understand the life cycle or structure of the store well enough to programmatically add getters and setters.  Naively, I tried implementing a module to automatically generate a `getters` object to inject into the store something like this:\r\n\r\n```javascript\r\nexport default (state) => {\r\n  let result = Object.keys(state)\r\n    .reduce((getters, key) => {\r\n      const getterMethodName = `${key.charAt(0)}${[...key].slice(1,).join('')}`;\r\n      getters[getterMethodName] = function(state){ return state[key]};\r\n      return getters;\r\n    }, {});\r\n};\r\n```\r\n\r\nThis didn't work, and I'm not sure how to proceed, but it seems like providing vanilla getters and setters that are a function of the property name, but could be overridden with an explicit implementation would make Vuex development friendlier and faster.\r\n\r\nThis idea could be extended to actions and mutations.\r\n\r\nPlease feel free to point out problems with this idea or my understanding of the store, or even better, that someone has already implemented it and where!\r\n\r\n### What does the proposed API look like?\r\nNo visible changes to the current store creation API would be required.  Any store key defined in the `state` object on store creation would generate getters and setters on store creation.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1268","RelatedDescription":"Open issue \"Programmatically create getters and setters for defined store properties\" (#1268)"},{"Id":"322621739","IsPullRequest":false,"CreatedAt":"2018-05-13T19:47:16","Actor":"ChristianStornowski","Number":"1267","RawContent":null,"Title":"Adjust vuex types for using state values and modules in one store","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/14njpn10p3](https://codesandbox.io/s/14njpn10p3)\r\n\r\n### Steps to reproduce\r\n1. Create a project like https://codesandbox.io/s/14njpn10p3\r\n2. npm run test:types\r\n\r\n\r\n### What is expected?\r\nno type errors.\r\n\r\n### What is actually happening?\r\nsrc/test.ts(46,41): error TS2345: Argument of type '{ state: { value: number; }; modules: { a: Module<AModule, RootState>; }; }' is not assignable to parameter of type 'StoreOptions<RootState>'.\r\n  Types of property 'state' are incompatible.\r\n    Type '{ value: number; }' is not assignable to type 'RootState | undefined'.\r\n      Type '{ value: number; }' is not assignable to type 'RootState'.\r\n        Property 'a' is missing in type '{ value: number; }'.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1267","RelatedDescription":"Open issue \"Adjust vuex types for using state values and modules in one store\" (#1267)"},{"Id":"322501191","IsPullRequest":false,"CreatedAt":"2018-05-12T10:40:18","Actor":"zjafei","Number":"1266","RawContent":null,"Title":"希望有一个可以获取vuxe中action是否进行中状态的插件","State":"open","Body":"### What problem does this feature solve?\r\naction基本是处理异步业务的。loading的状态是很重要的。\r\n我现在的做法是在每个action中都设置一个isLoading的state\r\n但是我希望 每个action在开始时候在全局的isLoading的action的map里面注册一下loading的状态，\r\n在走完最后一个next后再注销一下。\r\n我通过查询这个action的map就可以知道对应的action的状态\r\n而不用去手动注册好多的isLoading的state \r\n\r\n\r\n### What does the proposed API look like?\r\n`vue.use(vuxeLoading);\r\n\r\nconst {someActionLoadingState} = vue.vuxeLoading;\r\n\r\nconsole.log(someActionLoadingState) // true or false`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1266","RelatedDescription":"Open issue \"希望有一个可以获取vuxe中action是否进行中状态的插件\" (#1266)"},{"Id":"322434498","IsPullRequest":false,"CreatedAt":"2018-05-11T21:06:03","Actor":"rv-akim","Number":"1265","RawContent":null,"Title":"add a `mapDataFromGetters` helper ","State":"open","Body":"### What problem does this feature solve?\r\nThis would allow developers to hydrate component state in the `data` property  from the store, without having to do it in mounted.\r\n\r\nThe problem right now with `mapGetters` and `mapState` is that they are defined in computed after data gets evaluated.\r\n\r\nI want to get away from:\r\n\r\n```\r\ndata() {\r\n  return {\r\n    firstName: this.$store.getters.firstName,\r\n    lastName: this.$store.getters.lastName,\r\n  }\r\n}\r\n```\r\n\r\nSetting these values in mounted and using computed values on mount seems to be a lot of boiler plate when I simply want to hydrate data using store values in `data` of a component.\r\n\r\n### What does the proposed API look like?\r\nThe above example would translate roughly to this:\r\n```\r\nfunction mapGettersToData(gettersObj, context) {\r\n  const mappedGetters = {};\r\n  Object.keys(gettersObj).forEach((key, i) => {\r\n     mappedGetters[key] = context.$store.getters[Object.values(gettersObj)[i]];\r\n  });\r\n  return mappedGetters;\r\n}\r\n```\r\n```\r\ndata() {\r\n  return {\r\n    ...mapGettersToData({\r\n      propName: 'path/to/getter',\r\n    }, this),\r\n  };\r\n}\r\n```\r\n\r\nOr extend mapGetters/mapState to work in data property of a component\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE --> ","Url":"https://github.com/vuejs/vuex/issues/1265","RelatedDescription":"Open issue \"add a `mapDataFromGetters` helper \" (#1265)"},{"Id":"322428565","IsPullRequest":true,"CreatedAt":"2018-05-11T20:43:49","Actor":"DanielRuf","Number":"1264","RawContent":null,"Title":"chore: migrate to CircleCI 2 and add Node.js 10","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1264","RelatedDescription":"Open PR \"chore: migrate to CircleCI 2 and add Node.js 10\" (#1264)"},{"Id":"322275360","IsPullRequest":false,"CreatedAt":"2018-05-11T12:15:11","Actor":"teamonn","Number":"1263","RawContent":null,"Title":"null 值一刷新变成了 Object {__ob__: Observer}","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n\r\n我一个数据放在vuex，直接进入页面是null（初始值）。但是我再在当前这个页面刷新，这个值就成了Object {__ob__: Observer}。\r\n\r\n我序列化这个值是{}，有木有小伙伴也遇到这种奇怪的bug？","Url":"https://github.com/vuejs/vuex/issues/1263","RelatedDescription":"Closed issue \"null 值一刷新变成了 Object {__ob__: Observer}\" (#1263)"},{"Id":"321864784","IsPullRequest":false,"CreatedAt":"2018-05-10T09:18:51","Actor":"GopherJ","Number":"1261","RawContent":null,"Title":"Why can I change my store directly by a getter?","State":"open","Body":"### What problem does this feature solve?\r\n```javascript\r\nconst getters = {\r\n    GET_QUERY(state) {\r\n         return state.query;\r\n    }\r\n}\r\n```\r\nthen I can change by store directly by using `this.GET_QUERY`, so that every time I need to use `cloneDeep` to avoid that my store would be changed.\r\n\r\nCan getter be read-only like using `Object.defineProperty`:\r\n```javascript\r\nObject.defineProperty(store.getters, 'GET_QUERY', {\r\n   enumerable: true,\r\n   get() {\r\n       return store.state.query;\r\n   }\r\n})\r\n```\r\n\r\n### What does the proposed API look like?\r\n```\r\nconst getters = {\r\n    GET_QUERY(state) {\r\n         return state.query;\r\n    }\r\n}\r\n```\r\n`this.GET_QUERY.a = {}` won't be successful.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1261","RelatedDescription":"Open issue \"Why can I change my store directly by a getter?\" (#1261)"},{"Id":"321863505","IsPullRequest":false,"CreatedAt":"2018-05-10T09:14:31","Actor":"GopherJ","Number":"1260","RawContent":null,"Title":"Why can I change my store directly by a getter?","State":"closed","Body":"```javascript\r\nconst getters = {\r\n    GET_QUERY(state) {\r\n         return state.query;\r\n    }\r\n}\r\n```\r\nthen I can change by store directly by using `this.GET_QUERY`, so that every time I need to use `cloneDeep` to avoid that my store would be changed.\r\n\r\nCan getter be read-only like using `Object.defineProperty`:\r\n```javascript\r\nObject.defineProperty(store.getters, 'GET_QUERY', {\r\n   enumerable: true,\r\n   get() {\r\n       return store.state.query;\r\n   }\r\n})\r\n```","Url":"https://github.com/vuejs/vuex/issues/1260","RelatedDescription":"Closed issue \"Why can I change my store directly by a getter?\" (#1260)"},{"Id":"320843685","IsPullRequest":false,"CreatedAt":"2018-05-07T15:26:56","Actor":"hjJunior","Number":"1259","RawContent":null,"Title":"vuex unknown action type","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\nI tried to reproduce here, but my code is a little different, I'm using by npm\r\n[https://jsfiddle.net/sgwe6qde/4/](https://jsfiddle.net/sgwe6qde/4/)\r\n\r\n### Steps to reproduce\r\nCall to action from store module\r\n\r\n### What is expected?\r\nI expected the function to be executed\r\n\r\n### What is actually happening?\r\nI'm getting the error saying 'unknown action type: matriculas/fetchMatriculaTab'\r\n\r\n---\r\nI tried to search about it on web, and I solve to put namespaced: true, but I keep got this error,\r\nI also have tried to use mapAction in another way\r\n`...Vuex.mapActions('matriculas', ['fetchMatriculaTab'])`\r\nSo at this way, I get error saying  'module namespaec not found'\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1259","RelatedDescription":"Closed issue \"vuex unknown action type\" (#1259)"},{"Id":"320524785","IsPullRequest":false,"CreatedAt":"2018-05-05T17:00:36","Actor":"jmcooper","Number":"1258","RawContent":null,"Title":"Add ability to access namespaced getters with dot notation","State":"open","Body":"### What problem does this feature solve?\r\nWhen working with a namespaced module (e.g. a users module), you can access items on the user module's state like this: \r\n`this.$store.state.users.user`\r\n\r\nHowever, you can't access getters in the same way.  This will return an error:\r\n`this.$store.getters.users.newUsers`\r\n\r\nBecause `getters.users` is undefined. Instead you have to access it with bracket notation: `this.$store.getters['users/newUsers']`\r\n\r\nThis is true even though, without modules, I can access getters with dot notation:\r\n`this.$store.getters.newUsers`\r\n\r\nIs there a reason why this isn't possible with getters? It would be nice if we could access namespaced getters in the same way we can with namespaced state.  This current behavior seems inconsistent.\r\n\r\n### What does the proposed API look like?\r\nGiven a `users` namespaced module, add the ability to access getters with: `this.$store.getters.users.newUsers`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1258","RelatedDescription":"Open issue \"Add ability to access namespaced getters with dot notation\" (#1258)"},{"Id":"319468849","IsPullRequest":false,"CreatedAt":"2018-05-03T17:18:48","Actor":"jatarga","Number":"1256","RawContent":null,"Title":"Module reusing is not working","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/18l8w90v34](https://codesandbox.io/s/18l8w90v34)\r\n\r\n### Steps to reproduce\r\nhttps://codesandbox.io/s/18l8w90v34\r\n\r\n### What is expected?\r\nMultiple instance of a component with it's (namespaced) store should not share the same state, because I'm initializing the state with new function instance:\r\n\r\n``` js\r\n    export default {\r\n         namespaced: true,\r\n         state: function() {\r\n              // new instance for each component?\r\n              return {\r\n                 counter: 100\r\n              };\r\n          },\r\n        getters: {\r\n            counter: state => state.counter\r\n        },\r\n        mutations: {\r\n             updateCounter(state, counter) {\r\n                 state.counter = counter;\r\n             }\r\n         }\r\n     };\r\n```\r\n\r\n### What is actually happening?\r\nI have a `DepartmentContactSelectorRow `component with it's own store, and want to use that component in different pages but Vuex using same store state for all instances of `DepartmentContactSelectorRow`, although I return `state `with new function instance. I tried it with namespaced and not-namespaced but still same problem. Please check the demo I provided.\r\n\r\nReference doc: https://vuex.vuejs.org/en/modules.html (bottom of page)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1256","RelatedDescription":"Closed issue \"Module reusing is not working\" (#1256)"},{"Id":"319553989","IsPullRequest":false,"CreatedAt":"2018-05-02T13:32:58","Actor":"acan13","Number":"1257","RawContent":null,"Title":"registerModule option to preserve state while initializing attributes added since previous initialization","State":"open","Body":"### What problem does this feature solve?\r\nContext: Currently if you use registerModule with {preserveState: false} it will reinitialize the entire module state and overwrite all the values. If you use {preserveState: true} it will not do anything to the current values.\r\n\r\n\r\nProblem: What if you wish to preserve the values, but you have added attributes since the last time the module was initialized? If you use {preserveState: true} it will not add the new attribute (possible breaking things) while if you use {preserveState: false} it will overwrite all of the state already there. \r\n\r\n\r\nFeature request: Could there be a happy medium where vuex will only initialize attributes that aren't already present?\r\n\r\n\r\nUse case: We are using vue persisted state to persist UI settings stored in vuex. Because we reuse these settings in a few different apps, we store the module definitions in a shared folder and then import them into our different apps using registerModule. If we use {preserveState: false} then the settings in place are overwritten while if we use {preserveState: true} the new settings we add don't get added to the store.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nThe current behavior makes sense to me, so I would propose leaving it and adding another option. I have no idea what to call it, but something like:\r\n```javascript\r\nVue.registerModule('mymodule', myModule, {preserveState: true, updateAttributes: true});\r\n```\r\n\r\nI'm new to this, but I would be willing to look into how to implement it if people think it would be a good idea.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1257","RelatedDescription":"Open issue \"registerModule option to preserve state while initializing attributes added since previous initialization\" (#1257)"},{"Id":"318732713","IsPullRequest":false,"CreatedAt":"2018-04-30T08:51:17","Actor":"ChristianStornowski","Number":"1255","RawContent":null,"Title":"Vuex types are not working with Typescript 2.8.3 for a root store with modules and state key-value pairs","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex](https://github.com/vuejs/vuex)\r\n\r\n### Steps to reproduce\r\n1. clone https://github.com/vuejs/vuex\r\n2. change to typescript 2.8.3\r\n3. npm run test:types\r\n\r\n### What is expected?\r\nNo type error or warning was printed in console\r\n\r\n### What is actually happening?\r\nerror TS2345: Argument of type '{ state: { value: number; }; modules: { a: { modules: { b: { state: { value: number; }; }; }; }; ...' is not assignable to parameter of type 'StoreOptions<RootState>'.\r\n  Types of property 'state' are incompatible.\r\n    Type '{ value: number; }' is not assignable to type 'RootState | undefined'.\r\n      Type '{ value: number; }' is not assignable to type 'RootState'.\r\n        Property 'a' is missing in type '{ value: number; }'.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1255","RelatedDescription":"Closed issue \"Vuex types are not working with Typescript 2.8.3 for a root store with modules and state key-value pairs\" (#1255)"},{"Id":"318608492","IsPullRequest":true,"CreatedAt":"2018-04-28T07:24:06","Actor":"bibi7","Number":"1254","RawContent":null,"Title":"Fix: amend the code in eg.","State":"closed","Body":"Signed-off-by: wangzhaojie <wangzhaojie@antiy.cn>\r\nhey there,  today i'm learing vuex and i find that a little mistake which may be wrong in this md.\r\ni think use `this.state` instead of `state` may be good cuz the console will not go red\r\nhave fun : )","Url":"https://github.com/vuejs/vuex/pull/1254","RelatedDescription":"Closed or merged PR \"Fix: amend the code in eg.\" (#1254)"},{"Id":"318599035","IsPullRequest":true,"CreatedAt":"2018-04-28T04:22:31","Actor":"TheLarkInn","Number":"1253","RawContent":null,"Title":"chore(package.json): add sideEffects: false field to package.json","State":"open","Body":"This PR adds the `\"sideEffects\": false` property in vuex's `package.json` file. This allow's webpack (for those who want to opt-in to requiring vuex's original source files (instead of the flattened esm bundles), then this will allow webpack to aggressively ignore and treeshake unused exports throughout the module system. \r\n\r\nIn many cases this can yield hidden and surprising build time improvements and size reductions in the case that modules flattened from rollup aren't actually needed when webpack performs a scope analysis. \r\n\r\nThe angular team has adopted this approach for the CLI yielding some strong build time speed for webpack (since unused exports are also not resolved, parsed, etc.). From my assessment of the module graph created, it looks that there are no sideEffects created against existing re-exports throughout the codebase, therefore even if a user did opt in on their own will, and remove flow types, there should be no danger of removing code that is needed and causing breakages. \r\n\r\nOverall, this already will not be a breaking change in any way but just provides extra benefits to those (and for the cli (if realized) when using webpack 4 and `mode: production`). Users would still have to explicitly alias vuex (as it shows in your examples folder to realize these build speed and size wins). \r\n\r\nHappy to answer any other questions.\r\n~Sean + [webpack team](https://github.com/webpack) \r\n\r\nRelated: https://github.com/vuejs/vue/pull/8099","Url":"https://github.com/vuejs/vuex/pull/1253","RelatedDescription":"Open PR \"chore(package.json): add sideEffects: false field to package.json\" (#1253)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-05-23T05:30:36.0409935Z","RunDurationInMilliseconds":3368}