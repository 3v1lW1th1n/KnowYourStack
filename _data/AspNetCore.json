{"Data":{"Blog":{"FeedItems":[{"Title":"Configuring a Server-side Blazor app with Azure App Configuration","PublishedOn":"2019-07-01T17:01:11+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With .NET Core 3.0 Preview 6, we added authentication &#38; authorization support to server-side Blazor apps. It only takes a matter of seconds to wire up an app to Azure Active Directory with support...","Href":"https://devblogs.microsoft.com/aspnet/configuring-a-server-side-blazor-app-with-azure-app-configuration/","RawContent":null},{"Title":"Forwarded Headers Middleware Updates in .NET Core 3.0 preview 6","PublishedOn":"2019-06-20T15:00:19+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"With the ASP.NET Core 2.1 release, we included UseHsts and UseHttpRedirection by default. These methods put a site into an infinite loop if deployed to an Azure Linux App Service, Azure Linux virtual...","Href":"https://devblogs.microsoft.com/aspnet/forwarded-headers-middleware-updates-in-net-core-3-0-preview-6/","RawContent":null},{"Title":"ASP.NET Core and Blazor updates in .NET Core 3.0 Preview 6","PublishedOn":"2019-06-12T17:00:27+00:00","CommentsCount":69,"FacebookCount":0,"Summary":".NET Core 3.0 Preview 6 is now available and it includes a bunch of new updates to ASP.NET Core and Blazor.\nHere&#8217;s the list of what&#8217;s new in this preview:\nNew Razor features: @attribute,...","Href":"https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-6/","RawContent":null},{"Title":"What’s new in Azure SignalR 1.1.0 Preview 1","PublishedOn":"2019-06-03T08:17:45+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We just shipped 1&#46;1.0 Preview 1 of Azure SignalR Service SDK to support some new features in ASP.NET Core 3.0, including endpoint routing and server-side Blazor. Let&#8217;s take a look how you...","Href":"https://devblogs.microsoft.com/aspnet/whats-new-in-azure-signalr-1-1-0-preview-1/","RawContent":null},{"Title":"ASP.NET Core updates in .NET Core 3.0 Preview 5","PublishedOn":"2019-05-06T16:00:58+00:00","CommentsCount":22,"FacebookCount":0,"Summary":"ASP.NET Core updates in .NET Core 3.0 Preview 5\n.NET Core 3.0 Preview 5 is now available. This iteration was brief for the team and primarily includes bug fixes and improvements to the more...","Href":"https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-0-preview-5/","RawContent":null},{"Title":"Azure SignalR Service now supports ASP.NET!","PublishedOn":"2019-04-27T00:30:04+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"We’ve just shipped the official version of the SignalR Service SDK with ASP.NET support:\nMicrosoft.Azure.SignalR.AspNet v1.0.0 \nAzure SignalR Service is a fully managed Azure service for real-time...","Href":"https://devblogs.microsoft.com/aspnet/azure-signalr-service-now-supports-asp-net/","RawContent":null},{"Title":"ASP.NET Core updates in .NET Core 3.0 Preview 4","PublishedOn":"2019-04-18T22:10:18+00:00","CommentsCount":23,"FacebookCount":0,"Summary":".NET Core 3.0 Preview 4 is now available and it includes a bunch of new updates to ASP.NET Core.\nHere&#8217;s the list of what&#8217;s new in this preview:\nRazor Components renamed back to server-side...","Href":"https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-0-preview-4/","RawContent":null},{"Title":"Blazor now in official preview!","PublishedOn":"2019-04-18T22:06:21+00:00","CommentsCount":65,"FacebookCount":0,"Summary":"With this newest Blazor release we&#8217;re pleased to announce that Blazor is now in official preview! Blazor is no longer experimental and we are committing to ship it as a supported web UI...","Href":"https://devblogs.microsoft.com/aspnet/blazor-now-in-official-preview/","RawContent":null},{"Title":"Updated Razor support in Visual Studio Code, now with Blazor support","PublishedOn":"2019-04-18T22:02:12+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today we are pleased to announce improved Razor tooling support in Visual Studio Code with the latest C# extension. This latest release includes improved Razor diagnostics and support for tag helpers...","Href":"https://devblogs.microsoft.com/aspnet/updated-razor-support-in-visual-studio-code-now-with-blazor-support/","RawContent":null},{"Title":".NET Core Workers in Azure Container Instances","PublishedOn":"2019-04-15T17:00:41+00:00","CommentsCount":19,"FacebookCount":0,"Summary":".NET Core Workers in Azure Container Instances\nIn .NET Core 3.0 we are introducing a new type of application template called Worker Service. This template is intended to give you a starting point for...","Href":"https://devblogs.microsoft.com/aspnet/dotnet-core-workers-in-azure-container-instances/","RawContent":null}],"ResultType":"Feed"},"AspNetCore-Issues":{"Issues":[{"Id":"464420014","IsPullRequest":true,"CreatedAt":"2019-07-05T00:32:44","Actor":"rynowak","Number":"11911","RawContent":null,"Title":"Blazor API review changes: CompilerServices","State":"open","Body":"Fixes: #11907\r\n\r\nThese are the changes from the compiler-related API review that are safe\r\nto make (these methods are not used).\r\n\r\nI'll follow up with `BindMethods.GetValue` separately because that's\r\nused by the compiler.\r\n","Url":"https://github.com/aspnet/AspNetCore/pull/11911","RelatedDescription":"Open PR \"Blazor API review changes: CompilerServices\" (#11911)"},{"Id":"464414642","IsPullRequest":false,"CreatedAt":"2019-07-04T23:44:45","Actor":"jbomhold3","Number":"11910","RawContent":null,"Title":"Blazor OnAfterRender Recursive Warning","State":"open","Body":"It would be nice to have a warning in the tooling about recursion when using StateHasChanged() in OnAfterRender event.  Should warn only if with the top level of the method not if used in a conditional statement. Not a pressing issue but it would be a nice, oops I didn't mean to have that their anyways notice. Even better for newer users that have no idea that would happen.","Url":"https://github.com/aspnet/AspNetCore/issues/11910","RelatedDescription":"Open issue \"Blazor OnAfterRender Recursive Warning\" (#11910)"},{"Id":"464412197","IsPullRequest":false,"CreatedAt":"2019-07-04T23:21:21","Actor":"WHumphreys","Number":"11909","RawContent":null,"Title":"SignalR issue with  '@' in path","State":"open","Body":"Visual Studio 2019\r\n\r\nWhen using 'Add Client-Side Library' within Visual Studio to add the SignalR JS Library's the following path is created by default:\r\n\r\n\"~/lib/@aspnet/signalr/dist/browser/signalr.js\"\r\n\r\nWhen this is used in a Razor Page (I guess all of them but I have not tested) Visual Studio will not compile.\r\n\r\nError: 'The name 'aspnet' does not exist in the current context'\r\n\r\nIt is the '@' that is the issue. I don't need a work around as its easy enough to fix but I don't see why its there in the first place. I also know I can change the install path in the 'Add Client-Side Library' (NOW) as well. \r\n\r\nWe as programmers have enough to learn and remember with all the goal posts you keep changing but silly things like this are becoming to the point I'm seriously debating dropping everything .NET etc.\r\n\r\nWhy would you ever put a symbol in the path that your own products complain about. Do you not test this stuff?\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/11909","RelatedDescription":"Open issue \"SignalR issue with  '@' in path\" (#11909)"},{"Id":"464409464","IsPullRequest":false,"CreatedAt":"2019-07-04T22:56:28","Actor":"Andrzej-W","Number":"11908","RawContent":null,"Title":"Blazor should throw when there are duplicate @key values in components","State":"open","Body":"### Describe the bug\r\nCurrently it is possible to create components with duplicate @key values. It is even documented:\r\n> If clashing @key values are requested within the same parent, the @key values won't be honored.\r\n\r\n### Expected behavior\r\nBlazor should throw exception, because it is potentially serious bug with catastrophic consequences.\r\n\r\n### Additional context\r\nPeople who use @key expect that it works. If it doesn't some serious bugs are possible, usually related to unexpected lifecycle methods calls.","Url":"https://github.com/aspnet/AspNetCore/issues/11908","RelatedDescription":"Open issue \"Blazor should throw when there are duplicate @key values in components\" (#11908)"},{"Id":"464403823","IsPullRequest":false,"CreatedAt":"2019-07-04T22:09:00","Actor":"rynowak","Number":"11907","RawContent":null,"Title":"Blazor API Review: Compiler Services","State":"open","Body":"# Summary\r\n\r\nThese are APIs that are used *mostly* by the compiler - some are used *exclusively* by the compiler. I'm err-ing on the side of safety here by including things that the compiler touches so that we look at them.\r\n\r\nAt a high-level I plan on parking compiler-specific things in `Microsoft.AspNetCore.Components.CompilerServices` - similar to what the [BCL does](https://docs.microsoft.com/en-us/dotnet/api/system.runtime.compilerservices?view=netframework-4.8). \r\n\r\nThe primary thing to figure out with all of these APIs is whether there's any use case for a user to call them, or if they are purely an artifact of the compiler.\r\n\r\n## APIs\r\n\r\n```C#\r\nnamespace Microsoft.AspNetCore.Components\r\n{\r\n    public static partial class BindMethods\r\n    {\r\n        public static Microsoft.AspNetCore.Components.EventCallback GetEventHandlerValue<T>(Microsoft.AspNetCore.Components.EventCallback value) where T : Microsoft.AspNetCore.Components.UIEventArgs { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<T> GetEventHandlerValue<T>(Microsoft.AspNetCore.Components.EventCallback<T> value) where T : Microsoft.AspNetCore.Components.UIEventArgs { throw null; }\r\n        public static System.MulticastDelegate GetEventHandlerValue<T>(System.Action value) where T : Microsoft.AspNetCore.Components.UIEventArgs { throw null; }\r\n        public static System.MulticastDelegate GetEventHandlerValue<T>(System.Action<T> value) where T : Microsoft.AspNetCore.Components.UIEventArgs { throw null; }\r\n        public static System.MulticastDelegate GetEventHandlerValue<T>(System.Func<System.Threading.Tasks.Task> value) where T : Microsoft.AspNetCore.Components.UIEventArgs { throw null; }\r\n        public static System.MulticastDelegate GetEventHandlerValue<T>(System.Func<T, System.Threading.Tasks.Task> value) where T : Microsoft.AspNetCore.Components.UIEventArgs { throw null; }\r\n        public static string GetEventHandlerValue<T>(string value) where T : Microsoft.AspNetCore.Components.UIEventArgs { throw null; }\r\n        public static string GetValue(System.DateTime value, string format) { throw null; }\r\n        public static T GetValue<T>(T value) { throw null; }\r\n    }\r\n}\r\n```\r\n\r\nAll of the `GetEventHandlerValue` methods can be removed, they are unused since we introduced `EventCallback`.\r\n- [x] Remove `GetEventHandlerValue` methods\r\n\r\nThe `GetValue` methods will be used by `bind` when we need to convert a value to a string. These needs to have some further design iteration. For now we need to answer whether these will be used by user-code or not. I think we need to err on the side of making them usable.\r\n- [ ] Make a design proposal for `BindMethods.GetValue`\r\n\r\n```C#\r\nnamespace Microsoft.AspNetCore.Components\r\n{\r\n    public sealed partial class EventCallbackFactory\r\n    {\r\n        public EventCallbackFactory() { }\r\n        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]\r\n        public Microsoft.AspNetCore.Components.EventCallback Create(object receiver, Microsoft.AspNetCore.Components.EventCallback callback) { throw null; }\r\n        public Microsoft.AspNetCore.Components.EventCallback Create(object receiver, System.Action callback) { throw null; }\r\n        public Microsoft.AspNetCore.Components.EventCallback Create(object receiver, System.Action<object> callback) { throw null; }\r\n        public Microsoft.AspNetCore.Components.EventCallback Create(object receiver, System.Func<object, System.Threading.Tasks.Task> callback) { throw null; }\r\n        public Microsoft.AspNetCore.Components.EventCallback Create(object receiver, System.Func<System.Threading.Tasks.Task> callback) { throw null; }\r\n        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]\r\n        public Microsoft.AspNetCore.Components.EventCallback<T> CreateInferred<T>(object receiver, System.Action<T> callback, T value) { throw null; }\r\n        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]\r\n        public Microsoft.AspNetCore.Components.EventCallback<T> CreateInferred<T>(object receiver, System.Func<T, System.Threading.Tasks.Task> callback, T value) { throw null; }\r\n        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]\r\n        public Microsoft.AspNetCore.Components.EventCallback<T> Create<T>(object receiver, Microsoft.AspNetCore.Components.EventCallback callback) { throw null; }\r\n        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]\r\n        public Microsoft.AspNetCore.Components.EventCallback<T> Create<T>(object receiver, Microsoft.AspNetCore.Components.EventCallback<T> callback) { throw null; }\r\n        public Microsoft.AspNetCore.Components.EventCallback<T> Create<T>(object receiver, System.Action callback) { throw null; }\r\n        public Microsoft.AspNetCore.Components.EventCallback<T> Create<T>(object receiver, System.Action<T> callback) { throw null; }\r\n        public Microsoft.AspNetCore.Components.EventCallback<T> Create<T>(object receiver, System.Func<System.Threading.Tasks.Task> callback) { throw null; }\r\n        public Microsoft.AspNetCore.Components.EventCallback<T> Create<T>(object receiver, System.Func<T, System.Threading.Tasks.Task> callback) { throw null; }\r\n    }\r\n    public static partial class EventCallbackFactoryBinderExtensions\r\n    {\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIChangeEventArgs> CreateBinder(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Action<bool> setter, bool existingValue, System.Globalization.CultureInfo culture = null) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIChangeEventArgs> CreateBinder(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Action<System.DateTime> setter, System.DateTime existingValue, System.Globalization.CultureInfo culture = null) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIChangeEventArgs> CreateBinder(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Action<System.DateTime> setter, System.DateTime existingValue, string format, System.Globalization.CultureInfo culture = null) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIChangeEventArgs> CreateBinder(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Action<decimal> setter, decimal existingValue, System.Globalization.CultureInfo culture = null) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIChangeEventArgs> CreateBinder(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Action<double> setter, double existingValue, System.Globalization.CultureInfo culture = null) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIChangeEventArgs> CreateBinder(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Action<int> setter, int existingValue, System.Globalization.CultureInfo culture = null) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIChangeEventArgs> CreateBinder(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Action<long> setter, long existingValue, System.Globalization.CultureInfo culture = null) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIChangeEventArgs> CreateBinder(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Action<bool?> setter, bool? existingValue, System.Globalization.CultureInfo culture = null) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIChangeEventArgs> CreateBinder(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Action<System.DateTime?> setter, System.DateTime? existingValue, System.Globalization.CultureInfo culture = null) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIChangeEventArgs> CreateBinder(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Action<decimal?> setter, decimal? existingValue, System.Globalization.CultureInfo culture = null) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIChangeEventArgs> CreateBinder(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Action<double?> setter, double? existingValue, System.Globalization.CultureInfo culture = null) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIChangeEventArgs> CreateBinder(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Action<int?> setter, int? existingValue, System.Globalization.CultureInfo culture = null) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIChangeEventArgs> CreateBinder(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Action<long?> setter, long? existingValue, System.Globalization.CultureInfo culture = null) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIChangeEventArgs> CreateBinder(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Action<float?> setter, float? existingValue, System.Globalization.CultureInfo culture = null) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIChangeEventArgs> CreateBinder(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Action<float> setter, float existingValue, System.Globalization.CultureInfo culture = null) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIChangeEventArgs> CreateBinder(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Action<string> setter, string existingValue, System.Globalization.CultureInfo culture = null) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIChangeEventArgs> CreateBinder<T>(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Action<T> setter, T existingValue, System.Globalization.CultureInfo culture = null) { throw null; }\r\n    }\r\n    public static partial class EventCallbackFactoryUIEventArgsExtensions\r\n    {\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIChangeEventArgs> Create(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Action<Microsoft.AspNetCore.Components.UIChangeEventArgs> callback) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIClipboardEventArgs> Create(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Action<Microsoft.AspNetCore.Components.UIClipboardEventArgs> callback) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIDragEventArgs> Create(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Action<Microsoft.AspNetCore.Components.UIDragEventArgs> callback) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIErrorEventArgs> Create(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Action<Microsoft.AspNetCore.Components.UIErrorEventArgs> callback) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIEventArgs> Create(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Action<Microsoft.AspNetCore.Components.UIEventArgs> callback) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIFocusEventArgs> Create(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Action<Microsoft.AspNetCore.Components.UIFocusEventArgs> callback) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIKeyboardEventArgs> Create(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Action<Microsoft.AspNetCore.Components.UIKeyboardEventArgs> callback) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIMouseEventArgs> Create(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Action<Microsoft.AspNetCore.Components.UIMouseEventArgs> callback) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIPointerEventArgs> Create(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Action<Microsoft.AspNetCore.Components.UIPointerEventArgs> callback) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIProgressEventArgs> Create(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Action<Microsoft.AspNetCore.Components.UIProgressEventArgs> callback) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UITouchEventArgs> Create(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Action<Microsoft.AspNetCore.Components.UITouchEventArgs> callback) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIWheelEventArgs> Create(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Action<Microsoft.AspNetCore.Components.UIWheelEventArgs> callback) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIChangeEventArgs> Create(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Func<Microsoft.AspNetCore.Components.UIChangeEventArgs, System.Threading.Tasks.Task> callback) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIClipboardEventArgs> Create(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Func<Microsoft.AspNetCore.Components.UIClipboardEventArgs, System.Threading.Tasks.Task> callback) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIDragEventArgs> Create(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Func<Microsoft.AspNetCore.Components.UIDragEventArgs, System.Threading.Tasks.Task> callback) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIErrorEventArgs> Create(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Func<Microsoft.AspNetCore.Components.UIErrorEventArgs, System.Threading.Tasks.Task> callback) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIEventArgs> Create(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Func<Microsoft.AspNetCore.Components.UIEventArgs, System.Threading.Tasks.Task> callback) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIFocusEventArgs> Create(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Func<Microsoft.AspNetCore.Components.UIFocusEventArgs, System.Threading.Tasks.Task> callback) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIKeyboardEventArgs> Create(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Func<Microsoft.AspNetCore.Components.UIKeyboardEventArgs, System.Threading.Tasks.Task> callback) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIMouseEventArgs> Create(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Func<Microsoft.AspNetCore.Components.UIMouseEventArgs, System.Threading.Tasks.Task> callback) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIPointerEventArgs> Create(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Func<Microsoft.AspNetCore.Components.UIPointerEventArgs, System.Threading.Tasks.Task> callback) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIProgressEventArgs> Create(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Func<Microsoft.AspNetCore.Components.UIProgressEventArgs, System.Threading.Tasks.Task> callback) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UITouchEventArgs> Create(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Func<Microsoft.AspNetCore.Components.UITouchEventArgs, System.Threading.Tasks.Task> callback) { throw null; }\r\n        public static Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.UIWheelEventArgs> Create(this Microsoft.AspNetCore.Components.EventCallbackFactory factory, object receiver, System.Func<Microsoft.AspNetCore.Components.UIWheelEventArgs, System.Threading.Tasks.Task> callback) { throw null; }\r\n    }\r\n}\r\n```\r\n\r\nThe `EventCallbackFactory` methods are intended to be used from C# components as well as by the compiler. We generally need to use the C# compiler to resolve overloads when we have polymorphism. These need to be extension methods so that the compiler can use them, and so we can split them across assemblies. This allows us to separate the methods used for the DOM from *Blazor native*. \r\n\r\nWe'll move the `EventCallbackFactoryUIEventArgsExtensions` class to `M.A.Components.Web` as part of that review.\r\n\r\nI'm not proposing any changes to any of this as part of this work item. Other opinions?\r\n\r\n```C#\r\nnamespace Microsoft.AspNetCore.Components\r\n{\r\n    public static partial class RuntimeHelpers\r\n    {\r\n        public static T TypeCheck<T>(T value) { throw null; }\r\n    }\r\n}\r\n```\r\n\r\nThis is purely a compiler implementation detail.\r\n- [x] Move to `M.A.C.CompilerServices`\r\n\r\nI'm going to keep the name. You read that right. Ryan is naming something \"Helpers\". This is because the term is appropriate - this is a random pile of static \"Helper\" methods that the compiler needs - and that's the right design. And it's symmetric with [this](https://docs.microsoft.com/en-us/dotnet/api/system.runtime.compilerservices.runtimehelpers?view=netframework-4.8)\r\n\r\nI'm still going to argue against creating \"Helper\" class in all other situations 😆 \r\n\r\n```C#\r\nnamespace Microsoft.AspNetCore.Components\r\n{\r\n    public static partial class UIEventArgsRenderTreeBuilderExtensions\r\n    {\r\n        public static void AddAttribute(this Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, int sequence, string name, System.Action<Microsoft.AspNetCore.Components.UIChangeEventArgs> value) { }\r\n        public static void AddAttribute(this Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, int sequence, string name, System.Action<Microsoft.AspNetCore.Components.UIClipboardEventArgs> value) { }\r\n        public static void AddAttribute(this Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, int sequence, string name, System.Action<Microsoft.AspNetCore.Components.UIDragEventArgs> value) { }\r\n        public static void AddAttribute(this Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, int sequence, string name, System.Action<Microsoft.AspNetCore.Components.UIErrorEventArgs> value) { }\r\n        public static void AddAttribute(this Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, int sequence, string name, System.Action<Microsoft.AspNetCore.Components.UIFocusEventArgs> value) { }\r\n        public static void AddAttribute(this Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, int sequence, string name, System.Action<Microsoft.AspNetCore.Components.UIKeyboardEventArgs> value) { }\r\n        public static void AddAttribute(this Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, int sequence, string name, System.Action<Microsoft.AspNetCore.Components.UIMouseEventArgs> value) { }\r\n        public static void AddAttribute(this Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, int sequence, string name, System.Action<Microsoft.AspNetCore.Components.UIPointerEventArgs> value) { }\r\n        public static void AddAttribute(this Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, int sequence, string name, System.Action<Microsoft.AspNetCore.Components.UIProgressEventArgs> value) { }\r\n        public static void AddAttribute(this Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, int sequence, string name, System.Action<Microsoft.AspNetCore.Components.UITouchEventArgs> value) { }\r\n        public static void AddAttribute(this Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, int sequence, string name, System.Action<Microsoft.AspNetCore.Components.UIWheelEventArgs> value) { }\r\n        public static void AddAttribute(this Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, int sequence, string name, System.Func<Microsoft.AspNetCore.Components.UIChangeEventArgs, System.Threading.Tasks.Task> value) { }\r\n        public static void AddAttribute(this Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, int sequence, string name, System.Func<Microsoft.AspNetCore.Components.UIClipboardEventArgs, System.Threading.Tasks.Task> value) { }\r\n        public static void AddAttribute(this Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, int sequence, string name, System.Func<Microsoft.AspNetCore.Components.UIDragEventArgs, System.Threading.Tasks.Task> value) { }\r\n        public static void AddAttribute(this Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, int sequence, string name, System.Func<Microsoft.AspNetCore.Components.UIErrorEventArgs, System.Threading.Tasks.Task> value) { }\r\n        public static void AddAttribute(this Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, int sequence, string name, System.Func<Microsoft.AspNetCore.Components.UIFocusEventArgs, System.Threading.Tasks.Task> value) { }\r\n        public static void AddAttribute(this Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, int sequence, string name, System.Func<Microsoft.AspNetCore.Components.UIKeyboardEventArgs, System.Threading.Tasks.Task> value) { }\r\n        public static void AddAttribute(this Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, int sequence, string name, System.Func<Microsoft.AspNetCore.Components.UIMouseEventArgs, System.Threading.Tasks.Task> value) { }\r\n        public static void AddAttribute(this Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, int sequence, string name, System.Func<Microsoft.AspNetCore.Components.UIPointerEventArgs, System.Threading.Tasks.Task> value) { }\r\n        public static void AddAttribute(this Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, int sequence, string name, System.Func<Microsoft.AspNetCore.Components.UIProgressEventArgs, System.Threading.Tasks.Task> value) { }\r\n        public static void AddAttribute(this Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, int sequence, string name, System.Func<Microsoft.AspNetCore.Components.UITouchEventArgs, System.Threading.Tasks.Task> value) { }\r\n        public static void AddAttribute(this Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, int sequence, string name, System.Func<Microsoft.AspNetCore.Components.UIWheelEventArgs, System.Threading.Tasks.Task> value) { }\r\n    }\r\n}\r\n```\r\n\r\nThese should be deleted. These were used before we introduced `EventCallback` and aren't used anymore. \r\n\r\n- [x] Delete `UIEventArgsRenderTreeBuilderExtensions`","Url":"https://github.com/aspnet/AspNetCore/issues/11907","RelatedDescription":"Open issue \"Blazor API Review: Compiler Services\" (#11907)"},{"Id":"464391856","IsPullRequest":false,"CreatedAt":"2019-07-04T20:50:10","Actor":"kewinbrand","Number":"11906","RawContent":null,"Title":"Converting DateTime to localtime w/ ToLocalTime() always returns UTC","State":"open","Body":"Not sure if this issue belongs here.\r\n\r\nI created a simple console app in docker with the following code:\r\n\r\n```\r\nvar localTime =  DateTime.UtcNow.ToLocalTime();\r\nConsole.WriteLine(localTime);\r\nConsole.WriteLine(TimeZoneInfo.Local.ToString());\r\n```\r\nThe output is:\r\n07/04/2019 13:13:50\r\nGMT\r\n\r\nEven tough my system local time is GMT-3 (with timedatectl):\r\n\r\nLocal time: Thu 2019-07-04 10:22:50 -03\r\n  Universal time: Thu 2019-07-04 13:22:50 UTC\r\n        RTC time: Thu 2019-07-04 15:22:45\r\n       Time zone: America/Sao_Paulo (-03, -0300)\r\n     NTP enabled: yes\r\nNTP synchronized: yes\r\n RTC in local TZ: no\r\n      DST active: no\r\n Last DST change: DST ended at\r\n                  Sat 2019-02-16 23:59:59 -02\r\n                  Sat 2019-02-16 23:00:00 -03\r\n Next DST change: DST begins (the clock jumps one hour forward) at\r\n                  Sat 2019-11-02 23:59:59 -03\r\n                  Sun 2019-11-03 01:00:00 -02\r\n\r\nInfo:\r\nmicrosoft/dotnet:2.2-aspnetcore-runtime as base image for docker\r\n\r\nOS:\r\nNAME=\"CentOS Linux\"\r\nVERSION=\"7 (Core)\"\r\nID=\"centos\"\r\nID_LIKE=\"rhel fedora\"\r\nVERSION_ID=\"7\"\r\nPRETTY_NAME=\"CentOS Linux 7 (Core)\"\r\nANSI_COLOR=\"0;31\"\r\nCPE_NAME=\"cpe:/o:centos:centos:7\"\r\nHOME_URL=\"https://www.centos.org/\"\r\nBUG_REPORT_URL=\"https://bugs.centos.org/\"\r\n\r\nCENTOS_MANTISBT_PROJECT=\"CentOS-7\"\r\nCENTOS_MANTISBT_PROJECT_VERSION=\"7\"\r\nREDHAT_SUPPORT_PRODUCT=\"centos\"\r\nREDHAT_SUPPORT_PRODUCT_VERSION=\"7\"\r\n\r\nAm I missing something?\r\nThank you so far","Url":"https://github.com/aspnet/AspNetCore/issues/11906","RelatedDescription":"Open issue \"Converting DateTime to localtime w/ ToLocalTime() always returns UTC\" (#11906)"},{"Id":"464368472","IsPullRequest":false,"CreatedAt":"2019-07-04T18:41:28","Actor":"duaneking","Number":"11905","RawContent":null,"Title":"F# MVC Does not even support authentication out of the box.","State":"open","Body":"### Describe the bug\r\nThe F# Language is not treated as a first class citizen at all.  Testing, I can't even add authentication to a new projects created by the command line, and on Mac, I don't even get a UI.  If you try to look up why, you end up at a templating bug post in an archived github account that seems to suggest this issue just slipped through the cracks.\r\n\r\nThis is not just a feature request in my mind; this is me ringing the bell that this work looks half finished and makes devs like me that get to use F# as part of our day jobs feel like we do not matter to the ASP/Net/Core team, because we cant start new projects that can actually be USEFUL without doing a lot of extra work that shouldn't need to be done, that most people wont even try to do.  This makes me and others I know less invested in the language, and greatly harms the F# community as a whole since we devs effectively are left to feel like the language doesn't have a future based on how its being treated.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using any version of ASP.NET Core '...'\r\n2. dotnet new mvc -n love -o love -lang \"F#\" -au Individual\r\n\r\nThis fails with an invalid switch error; I know it's because the template doesn't support it but thats what this bug is about.  Honestly, not a single supported language in dotnet core should lack support for auth, period, as part of the security efforts MS has highly publicly marketed, it just doesn't make any sense not to support this from my perspective.  If VB can get great support, why cant F#? \r\n\r\n### Expected behavior\r\nI expect to see a project created that works and not to get random errors about the -au switch being unsupported.  This is a greater issue than just it not being supported; What use is a web api that can't be secured by a login? Why would you force a developer to do that work themselves when every other language gets this support out of the box when I can just use C# instead and it will \"just work\"?\r\n\r\n### Additional context\r\nThis is true as of the most recent stable version as of today, as I just reinstalled a devbox and added dotnet to it and still get this issue.\r\n\r\n### Is your feature request related to a problem? Please describe.\r\nI want to create my own MVC apps in F# and would like to have projects at home I can use to explore the language so I can be more effective and comfortable with it.  But I can't do that unless the projects I can create on the command line - since not all my devboxes are windows, Mac doesn't have a project options UI, and I use the command line no matte what platform I am on anyway - have what I need to get started; What I want in the best case is a project that is pure F# that includes the standard login stuff so I can just get to work on my idea and not have to worry about plumbing.\r\n\r\n### Describe the solution you'd like\r\nEffectively this command should not fail to create a new project:\r\n\r\ndotnet new mvc -n login -o login -lang \"F#\" -au Individual \r\n\r\nSupporting EF-core in F# without having to use a wrapper would be nice, too.\r\n\r\n### Additional context\r\nI'm happy to talk about this.","Url":"https://github.com/aspnet/AspNetCore/issues/11905","RelatedDescription":"Open issue \"F# MVC Does not even support authentication out of the box.\" (#11905)"},{"Id":"464361575","IsPullRequest":false,"CreatedAt":"2019-07-04T18:04:10","Actor":"Emzi0767","Number":"11904","RawContent":null,"Title":"Response.Body streams do not get flushed","State":"open","Body":"### Describe the bug\r\nIt appears that streams under `Context.Response.Body` do not get flushed, at least if they are replaced. I tested this with `GZipStream`, unsure whether that's the case for other stream types.\r\n\r\n### To Reproduce\r\nI am using ASP.NET Core 2.2 in this example, I am unsure whether this still applies to 3.0 as I am unable to test at this time.\r\n\r\nSteps:\r\n1. Create an empty ASP.NET Core Web API app\r\n2. Create an action like this:\r\n   ```cs\r\n   [Route(\"/test/{arg?}\")]\r\n   public IActionResult Test(string arg = null)\r\n   {\r\n       if (arg == \"gz\")\r\n       {\r\n           Response.Headers.Add(HeaderNames.ContentEncoding, \"gzip\");\r\n           Response.Body = new GZipStream(Response.Body, CompressionLevel.Optimal);\r\n       }\r\n\r\n       return Json(new { message = \"Hello world!\" });\r\n   }\r\n   ```\r\n3. Navigate to `<your app url>/test`\r\n4. Notice the response\r\n5. Navigate to `<your app url>/test/gz`\r\n6. Notice empty response\r\n\r\n### Expected behavior\r\nYou get the following message as a response from the server in both cases:\r\n```json\r\n{\r\n    \"message\": \"Hello world!\"\r\n}\r\n```\r\n\r\n### Additional context\r\nThis issue can be mitigated by implementing a middleware that forcefully flushes streams, like so:\r\n```cs\r\napp.Use(async (ctx, next) => \r\n{\r\n    await next();\r\n    if (ctx.Response.Body is GZipStream gz)\r\n        await gz.FlushAsync();\r\n});\r\n```\r\n\r\nThe middleware has to be inserted before MVC. Repeating steps 3 and 5 with the above inserted before MVC produces correct response in either case.","Url":"https://github.com/aspnet/AspNetCore/issues/11904","RelatedDescription":"Open issue \"Response.Body streams do not get flushed\" (#11904)"},{"Id":"464351400","IsPullRequest":true,"CreatedAt":"2019-07-04T17:13:59","Actor":"SteveSandersonMS","Number":"11903","RawContent":null,"Title":"Make ArrayBuilder<T>.ToSegment() safe even when reusing underlying arrays","State":"open","Body":"Previously, `ArrayBuilder<T>.ToSegment()` just captured a segment of the current `_items` array. If the builder later changed capacity, the segments would be referencing an array that the builder was no longer using. Historically this has been OK, because we never reused those arrays, and we didn't have any scenarios that involved array entries being overwritten/mutated later.\r\n\r\nHowever, we now have work underway to pool the underlying arrays (#11830). When resizing the builder, we'll return the `_items` array to the pool (and wipe it clean along the way, for safety). This would have broken `ToSegment` since the previously-issued segments would no longer be valid. This issue was discovered by @pranavkm in his work on https://github.com/aspnet/AspNetCore/pull/11830.\r\n\r\nThe fix in this PR is to define a new type `ArrayBuilderSegment<T>` that is like `ArraySegment<T>` but knows that the array has to be accessed through one extra level of indirection, i.e., we always use the latest `_items` on the builder, not whichever `_items` were in use when the segment was taken. This is now safe **as long as the builder itself hasn't subsequently been cleared or disposed**. In all our use cases, the builder will not have been cleared or disposed when we use these segments.","Url":"https://github.com/aspnet/AspNetCore/pull/11903","RelatedDescription":"Open PR \"Make ArrayBuilder<T>.ToSegment() safe even when reusing underlying arrays\" (#11903)"},{"Id":"464295193","IsPullRequest":false,"CreatedAt":"2019-07-04T15:47:17","Actor":"xgenvn","Number":"11899","RawContent":null,"Title":"Docker runtime is not able to binding gRPC service","State":"closed","Body":"### Describe the bug\r\n- It's able to build and run gRPC using default template under Windows, but cannot work using docker image build.\r\n\r\n### Logs\r\n```\r\ntodo-service_1  | crit: Microsoft.AspNetCore.Hosting.Diagnostics[6]\r\ntodo-service_1  |       Application startup exception\r\ntodo-service_1  | System.InvalidOperationException: Error binding gRPC service 'TodoService'.\r\ntodo-service_1  |  ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.\r\ntodo-service_1  |  ---> System.MissingMethodException: Method not found: 'Microsoft.AspNetCore.Builder.IEndpointConventionBuilder Microsoft.AspNetCore.Builder.RoutingEndpointConventionBuilderExtensions.WithDisplayName(Microsoft.AspNetCore.Builder.IEndpointConventionBuilder, System.String)'.\r\ntodo-service_1  |    at Grpc.AspNetCore.Server.Internal.GrpcServiceBinder`1.AddMethodCore(IMethod method, RequestDelegate requestDelegate, List`1 metadata)\r\ntodo-service_1  |    at Grpc.AspNetCore.Server.Internal.GrpcServiceBinder`1.AddMethod[TRequest,TResponse](Method`2 method, UnaryServerMethod`2 handler)\r\ntodo-service_1  |    at TodoPackage.TodoService.BindService(ServiceBinderBase serviceBinder, TodoServiceBase serviceImpl) in /app/obj/Release/netcoreapp3.0/TodoGrpc.cs:line 98\r\ntodo-service_1  |    --- End of inner exception stack trace ---\r\ntodo-service_1  |    at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)\r\ntodo-service_1  |    at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\ntodo-service_1  |    at Microsoft.AspNetCore.Builder.GrpcEndpointRouteBuilderExtensions.ReflectionBind[TService](ServiceBinderBase binder, TService service)\r\ntodo-service_1  |    at Microsoft.AspNetCore.Builder.GrpcEndpointRouteBuilderExtensions.MapGrpcService[TService](IEndpointRouteBuilder builder, Action`1 configureOptions)\r\ntodo-service_1  |    --- End of inner exception stack trace ---\r\ntodo-service_1  |    at Microsoft.AspNetCore.Builder.GrpcEndpointRouteBuilderExtensions.MapGrpcService[TService](IEndpointRouteBuilder builder, Action`1 configureOptions)\r\ntodo-service_1  |    at Microsoft.AspNetCore.Builder.GrpcEndpointRouteBuilderExtensions.MapGrpcService[TService](IEndpointRouteBuilder builder)\r\ntodo-service_1  |    at CoreGrpcCI.Startup.<>c.<Configure>b__1_0(IEndpointRouteBuilder endpoints) in /app/Startup.cs:line 36\r\ntodo-service_1  |    at Microsoft.AspNetCore.Builder.EndpointRoutingApplicationBuilderExtensions.UseEndpoints(IApplicationBuilder builder, Action`1 configure)\r\ntodo-service_1  |    at CoreGrpcCI.Startup.Configure(IApplicationBuilder app, IWebHostEnvironment env) in /app/Startup.cs:line 37\r\ntodo-service_1  |    at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)\r\ntodo-service_1  |    at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\ntodo-service_1  |    at Microsoft.AspNetCore.Hosting.ConfigureBuilder.Invoke(Object instance, IApplicationBuilder builder)\r\ntodo-service_1  |    at Microsoft.AspNetCore.Hosting.ConfigureBuilder.<>c__DisplayClass4_0.<Build>b__0(IApplicationBuilder builder)\r\ntodo-service_1  |    at Microsoft.AspNetCore.Hosting.GenericWebHostBuilder.<>c__DisplayClass13_0.<UseStartup>b__2(IApplicationBuilder app)\r\ntodo-service_1  |    at Microsoft.AspNetCore.HostFilteringStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder app)\r\ntodo-service_1  |    at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)\r\ntodo-service_1  | Unhandled exception. System.InvalidOperationException: Error binding gRPC service 'TodoService'.\r\ntodo-service_1  |  ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.\r\ntodo-service_1  |  ---> System.MissingMethodException: Method not found: 'Microsoft.AspNetCore.Builder.IEndpointConventionBuilder Microsoft.AspNetCore.Builder.RoutingEndpointConventionBuilderExtensions.WithDisplayName(Microsoft.AspNetCore.Builder.IEndpointConventionBuilder, System.String)'.\r\ntodo-service_1  |    at Grpc.AspNetCore.Server.Internal.GrpcServiceBinder`1.AddMethodCore(IMethod method, RequestDelegate requestDelegate, List`1 metadata)\r\ntodo-service_1  |    at Grpc.AspNetCore.Server.Internal.GrpcServiceBinder`1.AddMethod[TRequest,TResponse](Method`2 method, UnaryServerMethod`2 handler)\r\ntodo-service_1  |    at TodoPackage.TodoService.BindService(ServiceBinderBase serviceBinder, TodoServiceBase serviceImpl) in /app/obj/Release/netcoreapp3.0/TodoGrpc.cs:line 98\r\ntodo-service_1  |    --- End of inner exception stack trace ---\r\ntodo-service_1  |    at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)\r\ntodo-service_1  |    at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\ntodo-service_1  |    at Microsoft.AspNetCore.Builder.GrpcEndpointRouteBuilderExtensions.ReflectionBind[TService](ServiceBinderBase binder, TService service)\r\ntodo-service_1  |    at Microsoft.AspNetCore.Builder.GrpcEndpointRouteBuilderExtensions.MapGrpcService[TService](IEndpointRouteBuilder builder, Action`1 configureOptions)\r\ntodo-service_1  |    --- End of inner exception stack trace ---\r\ntodo-service_1  |    at Microsoft.AspNetCore.Builder.GrpcEndpointRouteBuilderExtensions.MapGrpcService[TService](IEndpointRouteBuilder builder, Action`1 configureOptions)\r\ntodo-service_1  |    at Microsoft.AspNetCore.Builder.GrpcEndpointRouteBuilderExtensions.MapGrpcService[TService](IEndpointRouteBuilder builder)\r\ntodo-service_1  |    at CoreGrpcCI.Startup.<>c.<Configure>b__1_0(IEndpointRouteBuilder endpoints) in /app/Startup.cs:line 36\r\ntodo-service_1  |    at Microsoft.AspNetCore.Builder.EndpointRoutingApplicationBuilderExtensions.UseEndpoints(IApplicationBuilder builder, Action`1 configure)\r\ntodo-service_1  |    at CoreGrpcCI.Startup.Configure(IApplicationBuilder app, IWebHostEnvironment env) in /app/Startup.cs:line 37\r\ntodo-service_1  |    at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)\r\ntodo-service_1  |    at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\ntodo-service_1  |    at Microsoft.AspNetCore.Hosting.ConfigureBuilder.Invoke(Object instance, IApplicationBuilder builder)\r\ntodo-service_1  |    at Microsoft.AspNetCore.Hosting.ConfigureBuilder.<>c__DisplayClass4_0.<Build>b__0(IApplicationBuilder builder)\r\ntodo-service_1  |    at Microsoft.AspNetCore.Hosting.GenericWebHostBuilder.<>c__DisplayClass13_0.<UseStartup>b__2(IApplicationBuilder app)\r\ntodo-service_1  |    at Microsoft.AspNetCore.HostFilteringStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder app)\r\ntodo-service_1  |    at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)\r\ntodo-service_1  |    at Microsoft.Extensions.Hosting.Internal.Host.StartAsync(CancellationToken cancellationToken)\r\ntodo-service_1  |    at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.RunAsync(IHost host, CancellationToken token)\r\ntodo-service_1  |    at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.RunAsync(IHost host, CancellationToken token)\r\ntodo-service_1  |    at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.Run(IHost host)\r\ntodo-service_1  |    at CoreGrpcCI.Program.Main(String[] args) in /app/Program.cs:line 11\r\ngrpc_todo-service_1 exited with code 139\r\n```\r\n\r\n### Additional Information\r\n\r\nDockerfile\r\n```\r\n#FROM mcr.microsoft.com/dotnet/core-nightly/aspnet:3.0\r\nFROM mcr.microsoft.com/dotnet/core-nightly/sdk:3.0-bionic AS build\r\nWORKDIR /app\r\n\r\n# copy csproj and restore as distinct layers\r\nCOPY *.csproj ./\r\nCOPY NuGet.config ./\r\nRUN dotnet restore\r\n\r\n# copy everything else and build app\r\nCOPY . ./\r\nWORKDIR /app\r\nRUN dotnet publish -c Release -o out\r\n\r\n# FROM mcr.microsoft.com/dotnet/core-nightly/aspnet:3.0 as runtime\r\n# WORKDIR /app\r\n# COPY --from=build /app/out ./\r\n\r\nENTRYPOINT [\"dotnet\", \"/app/out/CoreGrpcCI.dll\"]\r\n```\r\n\r\nI have tried several different versions but not been able to make it work.\r\nThe normal build in Windows works fine.","Url":"https://github.com/aspnet/AspNetCore/issues/11899","RelatedDescription":"Closed issue \"Docker runtime is not able to binding gRPC service\" (#11899)"},{"Id":"464320100","IsPullRequest":false,"CreatedAt":"2019-07-04T15:25:55","Actor":"valeriob","Number":"11902","RawContent":null,"Title":"Question : How to delete a file after download ?","State":"open","Body":"Hi,\r\nwe would like to generate a file on the fly on the file system Path.GetTempFileName(), then return  PhysicalFile(filePath) in the action controller and delete the file right after to avoid filling up the disk.\r\nWe created a custom Result to delete the file after it has been executed, look like it's working, but is this approach correct ?\r\n\r\n   public class PhysicalFileDeleteFileResult : PhysicalFileResult\r\n    {\r\n        public override async Task ExecuteResultAsync(ActionContext context)\r\n        {\r\n            await base.ExecuteResultAsync(context);\r\n            File.Delete(FileName);\r\n        }\r\n    }\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/11902","RelatedDescription":"Open issue \"Question : How to delete a file after download ?\" (#11902)"},{"Id":"464303854","IsPullRequest":false,"CreatedAt":"2019-07-04T14:45:59","Actor":"sven5","Number":"11901","RawContent":null,"Title":"Blazor with WindowsIdentity error: Safe handle has been closed","State":"open","Body":"### Describe the bug\r\nWhen using a custom AuthorizationHandler<T> the following Exception will be thrown when navigating through Blazor's router to a secured Page (using `@attribute [Authorize(Policy = \"customPolicy\")]`)\r\nWhen directly entering the URL in the browser and hitting Enter this error does not occur.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core: .NET Core 3.0 Preview 6\r\n2. Run this code - use custom AuthorizationHandler\r\n```csharp\r\n public class MyCustomAuthorizationHandler : AuthorizationHandler<LunchMenuRequirement>\r\n    {\r\n        private readonly UserManager<IntranetUser> _userManager;\r\n        private readonly ILogger<MyCustomAuthorizationHandler> _logger;\r\n\r\n        public MyCustomAuthorizationHandler(UserManager<IntranetUser> userManager, ILogger<MyCustomAuthorizationHandler> logger)\r\n        {\r\n            _userManager = userManager;\r\n            _logger = logger;\r\n        }\r\n protected override async Task HandleRequirementAsync(AuthorizationHandlerContext context, LunchMenuRequirement requirement)\r\n        {\r\n            if (context.User == null)\r\n            {\r\n                return;\r\n            }\r\n            IntranetUser user = null;\r\n            // **Exception is thrown by calling context.User.Identity.Name**\r\n            if (context.User.Identity is WindowsIdentity)\r\n            {\r\n                _logger.LogDebug($\"Principal's Identity is WindowsIdentity {context.User.Identity.Name}\");\r\n                var windowsLogin = context.User.Identity.Name;\r\n                user = await _userManager.Users.FirstOrDefaultAsync(u => u.NormalizedWindowsLogin == windowsLogin.ToUpperInvariant());\r\n            }\r\n            else if (context.User.Identity is ClaimsIdentity)\r\n            {\r\n                _logger.LogDebug($\"Principal's Identity is ClaimsIdentity {context.User.Identity.Name}\");\r\n                user = await _userManager.GetUserAsync(context.User);\r\n            }\r\n            if (user.IsStore)\r\n            {\r\n                context.Succeed(requirement);\r\n            }\r\n            else\r\n            {\r\n                if (await _userManager.IsInRoleAsync(user, \"SomeRole\"))\r\n                {\r\n                    context.Succeed(requirement);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n3. With these arguments '....'\r\n4. See error\r\n\r\n```\r\nError: System.ObjectDisposedException: Safe handle has been closed.\r\nObject name: 'SafeHandle'.\r\n   at System.Runtime.InteropServices.SafeHandle.DangerousAddRef(Boolean& success)\r\n   at System.StubHelpers.StubHelpers.SafeHandleAddRef(SafeHandle pHandle, Boolean& success)\r\n   at Interop.Advapi32.GetTokenInformation(SafeAccessTokenHandle TokenHandle, UInt32 TokenInformationClass, SafeLocalAllocHandle TokenInformation, UInt32 TokenInformationLength, UInt32& ReturnLength)\r\n   at System.Security.Principal.WindowsIdentity.GetTokenInformation(SafeAccessTokenHandle tokenHandle, TokenInformationClass tokenInformationClass, Boolean nullOnInvalidParam)\r\n   at System.Security.Principal.WindowsIdentity.get_User()\r\n   at System.Security.Principal.WindowsIdentity.<GetName>b__51_0()\r\n   at System.Security.Principal.WindowsIdentity.<>c__DisplayClass67_0.<RunImpersonatedInternal>b__0(Object <p0>)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Security.Principal.WindowsIdentity.RunImpersonatedInternal(SafeAccessTokenHandle token, Action action)\r\n   at System.Security.Principal.WindowsIdentity.RunImpersonated(SafeAccessTokenHandle safeAccessTokenHandle, Action action)\r\n   at System.Security.Principal.WindowsIdentity.GetName()\r\n   at xxx.Intranet.WebClient.Extensions.MyCustomAuthorizationHandler.HandleRequirementAsync(AuthorizationHandlerContext context, LunchMenuRequirement requirement) in C:\\Projekte\\xxx\\Intranet-App\\src\\xxx.Intranet\\xxx.Intranet.WebClient\\Extensions\\MyCustomAuthorizationHandler.cs:line 33\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationHandler`1.HandleAsync(AuthorizationHandlerContext context)\r\n   at Microsoft.AspNetCore.Authorization.DefaultAuthorizationService.AuthorizeAsync(ClaimsPrincipal user, Object resource, IEnumerable`1 requirements)\r\n   at Microsoft.AspNetCore.Components.AuthorizeViewCore.IsAuthorizedAsync(ClaimsPrincipal user)\r\n   at Microsoft.AspNetCore.Components.AuthorizeViewCore.OnParametersSetAsync()\r\n   at Microsoft.AspNetCore.Components.ComponentBase.CallStateHasChangedOnAsyncCompletion(Task task)\r\n```\r\n\r\n### Expected behavior\r\nI expect that this error does not occur.\r\n\r\n### Screenshots\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n### Additional context\r\nAdd any other context about the problem here.\r\nInclude the output of `dotnet --info`\r\n```\r\nC:\\WINDOWS\\system32>dotnet --info\r\n.NET Core SDK (gemäß \"global.json\"):\r\n Version:   3.0.100-preview6-012264\r\n Commit:    be3f0c1a03\r\n\r\nLaufzeitumgebung:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27804-01\r\n  Commit:  fdf81c6faf\r\n\r\n.NET Core SDKs installed:\r\n  2.1.800-preview-009677 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview6-012264 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview6.19307.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview6-27804-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview6-27804-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n\r\nI will try to create a small sample app to reproduce this issue if you require. ","Url":"https://github.com/aspnet/AspNetCore/issues/11901","RelatedDescription":"Open issue \"Blazor with WindowsIdentity error: Safe handle has been closed\" (#11901)"},{"Id":"464301744","IsPullRequest":false,"CreatedAt":"2019-07-04T14:41:25","Actor":"iniside","Number":"11900","RawContent":null,"Title":"SignalR - Send custom complex object from Custom client.","State":"open","Body":"I have working custom client for SignalR.\r\nI can send simple messages (using primitive types), but now I want to send complex object.\r\n\r\nOn The server side I have object like this:\r\n\r\n```\r\n    public class MessageWrapper\r\n    {\r\n        public string MessageType { get; set; }\r\n\r\n        public string MessageBody { get; set; }\r\n    }\r\n```\r\n\r\n```\r\n        public async Task HandleMessage(MessageWrapper message)\r\n        {\r\n            if (message.MessageBody != null)\r\n            {\r\n                if (message.MessageBody.Length > 0)\r\n                {\r\n                    if (message.MessageType.Length > 0)\r\n                    {\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n```\r\n\r\nAnd on client the sample message I send look like this:\r\n\r\n```\r\n{\r\n\t\"type\": 1,\r\n\t\"invocationId\": \"15CAC9A1446D4B22466FA6B842FE9D8F\",\r\n\t\"target\": \"HandleMessage\",\r\n\t\"arguments\": [\r\n\t\t{\r\n\t\t\t\"MessageType\": \"Spark.Events.MessageNameType\",\r\n\t\t\t\"MessageBody\": \"{\\\"TestProperty\\\":\\\"Test\\\"}\"\r\n\t\t}\r\n\t]\r\n}\r\n```\r\n\r\nThe message is correctly received on server side, but the object fields are all null.\r\n\r\nIs  there something special I need to do, to correctly encode complex parameter using json ?","Url":"https://github.com/aspnet/AspNetCore/issues/11900","RelatedDescription":"Open issue \"SignalR - Send custom complex object from Custom client.\" (#11900)"},{"Id":"464288980","IsPullRequest":false,"CreatedAt":"2019-07-04T14:14:17","Actor":"mathiassiig","Number":"11898","RawContent":null,"Title":"SignalR: No websocket availability in supported transports during negotiation","State":"open","Body":"**Server-side** \r\nI'm using ASP.NET Core 2.2 and SignalR 1.1.4\r\nI followed this tutorial: https://docs.microsoft.com/en-us/aspnet/core/tutorials/signalr?view=aspnetcore-2.2&tabs=visual-studio\r\n\r\n**Client-side**\r\nI'm using Unity 2017.3.2f1 and BestHTTP Pro which comes with a SignalRCore client.\r\n\r\nWhen attempting to establish a connection, the `NegotiationResult` comes with two `Supported Transports`: ServerSideEvents and LongPolling. In this, I also expect WebSockets to be available.\r\n\r\nIn the SignalR (server-side) tutorial, it's mentioned you have to add this:\r\n```\r\napp.UseSignalR(routes =>\r\n            {\r\n                routes.MapHub<ChatHub>(\"/chatHub\");\r\n            });\r\n```\r\n\r\nwhich I did (except renaming the endpoint). Do I also have to configure it with app.UseWebsockets? Or am I missing something otherwise obvious?","Url":"https://github.com/aspnet/AspNetCore/issues/11898","RelatedDescription":"Open issue \"SignalR: No websocket availability in supported transports during negotiation\" (#11898)"},{"Id":"464278160","IsPullRequest":true,"CreatedAt":"2019-07-04T13:51:11","Actor":"elken","Number":"11897","RawContent":null,"Title":"Amended changes from #7452","State":"open","Body":"- Removed VueDevelopmentServer\r\n- Added Dictionary for arguments to DevelopmentServer\r\n- Unobseleted ReactDevelopmentServer\r\n\r\nRE: \"over-specialised\" APIs, I agree with the idea that the ready signal might not be static text, but I think digging into that rabbit hole could lead to any number of implementations and all major frameworks do indeed return static text on success.","Url":"https://github.com/aspnet/AspNetCore/pull/11897","RelatedDescription":"Open PR \"Amended changes from #7452\" (#11897)"},{"Id":"464218399","IsPullRequest":false,"CreatedAt":"2019-07-04T12:51:20","Actor":"UndyingJellyfish","Number":"11895","RawContent":null,"Title":"ASP.NET Core Web API authorization through On-prem ADFS ","State":"closed","Body":"I found an old issue (#1920) where it was stated that it was not possible (then) to authorize requests via on-prem ADFS, is this still the case? If not, where would I find the doc for achieving this?","Url":"https://github.com/aspnet/AspNetCore/issues/11895","RelatedDescription":"Closed issue \"ASP.NET Core Web API authorization through On-prem ADFS \" (#11895)"},{"Id":"464235752","IsPullRequest":true,"CreatedAt":"2019-07-04T12:17:49","Actor":"benaadams","Number":"11896","RawContent":null,"Title":"Kestrel code tidyups","State":"open","Body":"/cc @halter73 @davidfowl ","Url":"https://github.com/aspnet/AspNetCore/pull/11896","RelatedDescription":"Open PR \"Kestrel code tidyups\" (#11896)"},{"Id":"464162280","IsPullRequest":false,"CreatedAt":"2019-07-04T11:06:21","Actor":"ZergZe","Number":"11892","RawContent":null,"Title":"Blazor app crashes in use null as @key=\"@...\"","State":"closed","Body":"### Describe the bug\r\nData sources may contain null as item.\r\n@key feature in this case crashes application.\r\n\r\n### To Reproduce\r\n```\r\n<ul>\r\n    @foreach(var str in DataSource) {\r\n        <li @key=\"@str\">@str</li>\r\n    }\r\n</ul>\r\n\r\n@code {\r\n    string[] DataSource = new string[] { null, \"String 1\", \"String 2\" };\r\n}\r\n```\r\n\r\n### Actual Result\r\n\r\n```\r\nArgumentNullException: Value cannot be null.\r\n Parameter name: value\r\nMicrosoft.AspNetCore.Components.RenderTree.RenderTreeBuilder.SetKey(object value)\r\n```\r\n\r\n### Expected behavior\r\nnull value can't be used as key (since several null item would be indistinguishable), so, key may be ignored for this li elemen. It should not crash app. It should not require workaround.\r\n\r\n### Possible workaround\r\n\r\n```\r\n    @foreach(var str in DataSource) {\r\n        @if(str != null) {\r\n            <li @key=\"@str\">@str</li>\r\n        } else {\r\n            <li>@str</li>\r\n        }\r\n    }\r\n```","Url":"https://github.com/aspnet/AspNetCore/issues/11892","RelatedDescription":"Closed issue \"Blazor app crashes in use null as @key=\"@...\"\" (#11892)"},{"Id":"464164416","IsPullRequest":false,"CreatedAt":"2019-07-04T11:02:22","Actor":"gurunathancs1991","Number":"11893","RawContent":null,"Title":"How to return data from Blazor JSInvokable method to triggered JS method as synchronous action","State":"closed","Body":"Am wrapping some existing JS plugins to blazor components. when doing so, i faced below issue.\r\ni have a callback method, which has triggered from JS to blazor using dotnet reference -> `invokeMethodAsync`\r\n\r\n`  this.dotnet.invokeMethodAsync(\"Trigger\", this.eventName, '');`\r\n\r\nit's perfectly triggers the `JSinvokable ` method. but here, i need to return the data from blazor source to JS function handler where it has been raised.\r\n\r\nInstead `invokeMethodAsync`, tried `invokeMethod`, getting the below error \r\n\r\nhttps://github.com/aspnet/Extensions/blob/master/src/JSInterop/Microsoft.JSInterop.JS/src/src/Microsoft.JSInterop.ts#L65\r\n\r\n**whether it is possible to return data from event call back to JS function from where it has been raised as synchronous action?**\r\n\r\n\r\n\r\nC# code:\r\n\r\n```\r\n\r\n    public class ExampleJsInterop\r\n    {\r\n        private readonly IJSRuntime _jsRuntime;\r\n\r\n        public ExampleJsInterop(IJSRuntime jsRuntime)\r\n        {\r\n            _jsRuntime = jsRuntime;\r\n        }\r\n\r\n        public object CallHelloHelperSayHello(string name)\r\n        {\r\n            // sayHello is implemented in wwwroot/exampleJsInterop.js\r\n            return _jsRuntime.InvokeAsync<object>(\r\n                \"exampleJsFunctions.sayHello\",\r\n                new DotNetObjectRef(new HelloHelper(name)));\r\n        }\r\n    }\r\n\r\n    public class HelloHelper\r\n    {\r\n        public HelloHelper(string name)\r\n        {\r\n            Name = name;\r\n        }\r\n\r\n        public string Name { get; set; }\r\n\r\n        [JSInvokable]\r\n        public string SayHello()\r\n        {\r\n            return $\"Hello, {Name}!\";\r\n        }\r\n    }\r\n```\r\n\r\nRazor code:\r\n\r\n```\r\n@inject IJSRuntime JSRuntime\r\n\r\n<button type=\"button\" class=\"btn btn-primary\" onclick=\"@TriggerNetInstanceMethod\">\r\n    Trigger .NET instance method HelloHelper.SayHello\r\n</button>\r\n\r\n@functions {\r\n\r\n \r\n    public void TriggerNetInstanceMethod()\r\n    {\r\n\r\n        var exampleJsInterop = new ExampleJsInterop(JSRuntime);\r\n        exampleJsInterop.CallHelloHelperSayHello(\"Blazor\");\r\n    }\r\n}\r\n\r\n```\r\nJs code: \r\n```\r\n\r\nwindow.exampleJsFunctions = {\r\n    showPrompt: function (text) {\r\n        return prompt(text, 'Type your name here');\r\n    },\r\n    displayWelcome: function (welcomeMessage) {\r\n        document.getElementById('welcome').innerText = welcomeMessage;\r\n    },\r\n    returnArrayAsyncJs: function () {\r\n        DotNet.invokeMethodAsync('BlazorSample', 'ReturnArrayAsync')\r\n            .then(data => {\r\n                data.push(4);\r\n                console.log(data);\r\n            });\r\n    },\r\n    sayHello: function (dotnetHelper) {\r\n        debugger;\r\n        dotnetHelper.invokeMethod('SayHello')\r\n            .then(r => {\r\n                debugger;\r\n                console.log(r);\r\n            });\r\n\r\n        console.log('function outside');\r\n    }\r\n};\r\n```\r\n\r\nHere HelloHelper class -> SayHello method is not triggered from JS to C# side when i particularly mapped via invokeMethod not invokeMethodAsync?\r\n\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/11893","RelatedDescription":"Closed issue \"How to return data from Blazor JSInvokable method to triggered JS method as synchronous action\" (#11893)"},{"Id":"464186715","IsPullRequest":true,"CreatedAt":"2019-07-04T10:18:23","Actor":"SteveSandersonMS","Number":"11894","RawContent":null,"Title":"Ensure DI scope is disposed","State":"open","Body":"Fixes https://github.com/aspnet/AspNetCore/issues/11848. Addresses the two cases from that issue:\r\n\r\n * If a circuit handler throws\r\n * If prerendering throws\r\n","Url":"https://github.com/aspnet/AspNetCore/pull/11894","RelatedDescription":"Open PR \"Ensure DI scope is disposed\" (#11894)"},{"Id":"464128251","IsPullRequest":false,"CreatedAt":"2019-07-04T08:14:14","Actor":"ddweber","Number":"11891","RawContent":null,"Title":"[SignalR] Possibility to catch custom (hub)exceptions in client","State":"open","Body":"I´ve read in aspnet/SignalR#3009 that it is possible to throw custom exceptions on the hub which inherit from `HubException ` so that they will be propagated to the clients.\r\nI want to catch this custom exceptions on the clients so that i can react accordingly. Is there any possible way to do that? I would like to do some kind of:\r\n\r\n```csharp\r\ntry\r\n{\r\n    connection.InvokeAsync().Wait();\r\n}\r\ncatch (CustomException ex) \r\n{\r\n    ...\r\n}\r\n\r\nOR\r\n\r\ncatch (Exception ex) when (ex is CustomException)\r\n{\r\n    ...\r\n}\r\n```\r\n\r\n\r\nAt the moment im doing it as the follwing because only the exception-message contains the name of the CustomException, but that is not ideal:\r\n```csharp\r\ntry\r\n{\r\n    connection.InvokeAsync().Wait();\r\n}\r\ncatch (Exception ex) when (ex.InnerException.Message.Contains(\"CustomExceptionName\"))\r\n{\r\n    ...\r\n}\r\n```","Url":"https://github.com/aspnet/AspNetCore/issues/11891","RelatedDescription":"Open issue \"[SignalR] Possibility to catch custom (hub)exceptions in client\" (#11891)"},{"Id":"464116740","IsPullRequest":false,"CreatedAt":"2019-07-04T07:47:22","Actor":"keeed","Number":"11890","RawContent":null,"Title":"Cannot connect to Blazor after a few refresh on OSX","State":"open","Body":"### Describe the bug\r\nAfter a few refresh, for some weird reasons, I cannot connect to blazor anymore. Basically browsers are saying that the site cannot be reached.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Create a component where a data is periodically being sent to a javascript via JsInterop.\r\n2. Refresh the browser several times. Hard to know when this is exactly happening but after a few refresh, it will occur.\r\n3.  Error should occur.\r\n\r\n### Expected behavior\r\nSite should still work even after several refresh attempts.\r\n\r\n### Screenshots\r\nHere's the last log:\r\n![image](https://user-images.githubusercontent.com/11542472/60648643-e6f83f80-9e72-11e9-9ec5-3c0a12c7c029.png)\r\n\r\n### Additional info\r\nRunning 3.0.100-preview6-012264 on OSX.\r\n\r\nLogging settings:\r\n\r\n![image](https://user-images.githubusercontent.com/11542472/60648728-17d87480-9e73-11e9-8a07-e9f3bc0cf91f.png)\r\n \r\n","Url":"https://github.com/aspnet/AspNetCore/issues/11890","RelatedDescription":"Open issue \"Cannot connect to Blazor after a few refresh on OSX\" (#11890)"},{"Id":"464109098","IsPullRequest":false,"CreatedAt":"2019-07-04T07:38:22","Actor":"Hoshani","Number":"11889","RawContent":null,"Title":"Unable to determine the desired template from the input template name: blazorserverside","State":"closed","Body":"I am trying to setup blazor server side but I keep getting this problem when trying to install it\r\n\r\nfollowing [this tutorial](https://docs.microsoft.com/en-us/aspnet/core/blazor/get-started?view=aspnetcore-3.0&tabs=visual-studio-code) from Microsoft and I get this error in powershell window\r\n\r\n\r\n```\r\nPS D:\\blazorTesting> dotnet new blazorserverside -o WebApplicationServerSide\r\nUsage: new [options]\r\n\r\nOptions:\r\n  -h, --help          Displays help for this command.\r\n  -l, --list          Lists templates containing the specified name. If no name is specified, lists all templates.\r\n  -n, --name          The name for the output being created. If no name is specified, the name of the current directory is used.\r\n  -o, --output        Location to place the generated output.\r\n  -i, --install       Installs a source or a template pack.\r\n  -u, --uninstall     Uninstalls a source or a template pack.\r\n  --nuget-source      Specifies a NuGet source to use during install.\r\n  --type              Filters templates based on available types. Predefined values are \"project\", \"item\" or \"other\".\r\n  --dry-run           Displays a summary of what would happen if the given command line were run if it would result in a template creation.\r\n  --force             Forces content to be generated even if it would change existing files.\r\n  -lang, --language   Filters templates based on language and specifies the language of the template to create.\r\n\r\n\r\nUnable to determine the desired template from the input template name: blazorserverside.\r\nThe following templates partially match the input. Be more specific with the template name and/or language.\r\n\r\nTemplates                                 Short Name            Language      Tags\r\n---------------------------------------------------------------------------------------------------\r\nBlazor (server-side)                      blazorserverside      [C#]          Web/Blazor\r\nBlazor (Server-side in ASP.NET Core)      blazorserverside      [C#]          Web/Blazor/ServerSide\r\n\r\nExamples:\r\n    dotnet new blazorserverside\r\n    dotnet new blazorserverside --auth Individual\r\n    dotnet new --help\r\n\r\n```","Url":"https://github.com/aspnet/AspNetCore/issues/11889","RelatedDescription":"Closed issue \"Unable to determine the desired template from the input template name: blazorserverside\" (#11889)"},{"Id":"464063460","IsPullRequest":false,"CreatedAt":"2019-07-04T05:06:51","Actor":"anurse","Number":"11888","RawContent":null,"Title":"[SignalR] Better integration with TestServer","State":"open","Body":"Right now, it's only possible to use TestServer with the non-WebSockets transports because we only provide a way to replace the `HttpMessageHandler`. We should consider providing a way to provide a `WebSocket` \"factory\" so that we can integrate properly with TestServer.\r\n\r\nIt might be most appropriate here to add an alternative to `WithUrl` on `HubConnectionBuilder`. Consider this possible test code:\r\n\r\n```csharp\r\nvar server = new TestServer(webHostBuilder);\r\nvar connection = new HubConnectionBuilder()\r\n\t.WithTestServer(server, HttpTransportType.WebSockets, o => {\r\n\t\t// Assorted other HttpConnectionOptions\r\n\t})\r\n\t.Build();\r\n```\r\n\r\nIt would be relatively simple to add this API once we have a way to swap out the WebSocket, though we'd probably need to do so in a new assembly to avoid layering issues.","Url":"https://github.com/aspnet/AspNetCore/issues/11888","RelatedDescription":"Open issue \"[SignalR] Better integration with TestServer\" (#11888)"},{"Id":"464059620","IsPullRequest":false,"CreatedAt":"2019-07-04T04:50:20","Actor":"StevenTCramer","Number":"11887","RawContent":null,"Title":"Use new file to supply a long list of assemblies to linker","State":"open","Body":"The Mono team has resolved https://github.com/mono/linker/issues/379\r\nYet in preview 6 we still get https://github.com/aspnet/AspNetCore/issues/5673\r\n\r\nI just want to track that this gets resolved as I have a fellow developer that continues to see this issue on brand new projects.\r\n\r\nhttps://github.com/aspnet/AspNetCore/blob/de911255936905b01e8accc43c426688150c63fd/src/Components/Blazor/Build/src/targets/Blazor.MonoRuntime.targets#L441\r\n\r\nI think _BlazorAssembliesToLink needs changed to pass a file instead.\r\n\r\nIf this is being tracked somewhere I apologize my searches don't find any open issues.\r\n\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/11887","RelatedDescription":"Open issue \"Use new file to supply a long list of assemblies to linker\" (#11887)"},{"Id":"464044595","IsPullRequest":false,"CreatedAt":"2019-07-04T03:38:44","Actor":"danroth27","Number":"11886","RawContent":null,"Title":"Web app templates now require account confirmation but Blazor Server App template doesn't","State":"open","Body":"It looks like the web app templates have been updated to require account confirmation:\r\n\r\n```csharp\r\nservices.AddDefaultIdentity<IdentityUser>(options => options.SignIn.RequireConfirmedAccount = true)\r\n```\r\n\r\nThis results in a different UI flow when registering a new user:\r\n\r\n![image](https://user-images.githubusercontent.com/1874516/60637979-74835300-9dd1-11e9-9fbd-f304f415ca03.png)\r\n\r\nThe Blazor Server App template doesn't have this option set, so when you register a new user you are immediately logged in:\r\n\r\n![image](https://user-images.githubusercontent.com/1874516/60638085-d6dc5380-9dd1-11e9-9eb6-946cfcc5dbd1.png)\r\n\r\n@blowdart @HaoK Should the Blazor Server App template be updated to require account confirmation as well?","Url":"https://github.com/aspnet/AspNetCore/issues/11886","RelatedDescription":"Open issue \"Web app templates now require account confirmation but Blazor Server App template doesn't\" (#11886)"},{"Id":"464042943","IsPullRequest":false,"CreatedAt":"2019-07-04T03:30:54","Actor":"jo-asakura","Number":"11885","RawContent":null,"Title":"HTTP Error 502.5 - ANCM Out-Of-Process Startup Failure","State":"open","Body":"### Describe the bug\r\n\r\nWhen I publish my website to the remote IIS server (using a publishing profile setup) I'm getting the following error: `HTTP Error 502.5 - ANCM Out-Of-Process Startup Failure`. When I try to use CLI to see what the error might be using `dotnet .\\<app>.dll` I'm getting nothing at all, it's just no console output what so ever.\r\n\r\nWhen I do same thing locally, running the app using CLI `dotnet .\\bin\\Release\\netcoreapp2.2\\<app>.dll` it runs just fine. It also runs perfectly fine when I launch it from Visual Studio.\r\n\r\nIt's been about 4 days since I saw that issue for the first time and since then I've tried everything I could find online:\r\n\r\n- `OutOfProcess` and `InProcess` (in latter case I get `HTTP Error 500.30 - ANCM In-Process Start Failure` error instead)\r\n- Deleting and reinstalling all possible files/folders/projects/sdks/frameworks.\r\n- Converted the entire app to run under core 2.1 and got same error. I then converted it back, no luck again.\r\n- I even went that far that I've created a brand new app, copied over `*.cs` files and configured brand new setup, no luck.\r\n\r\n#### web.config\r\n\r\n```json\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <system.webServer>\r\n    <security>\r\n      <requestFiltering>\r\n        <requestLimits maxAllowedContentLength=\"52428800\" />\r\n      </requestFiltering>\r\n    </security>\r\n  </system.webServer>\r\n  <location path=\".\" inheritInChildApplications=\"false\">\r\n    <system.webServer>\r\n      <handlers>\r\n        <add name=\"aspNetCore\" path=\"*\" verb=\"*\" modules=\"AspNetCoreModuleV2\" resourceType=\"Unspecified\" />\r\n      </handlers>\r\n      <aspNetCore processPath=\"dotnet\"\r\n                  arguments=\".\\Cccn.NetworkImport.Manager.dll\"\r\n                  stdoutLogEnabled=\"true\"\r\n                  stdoutLogFile=\".\\logs\\\"\r\n                  requestTimeout=\"01:00:00\"\r\n                  hostingModel=\"InProcess\">\r\n        <environmentVariables>\r\n          <environmentVariable name=\"COREHOST_TRACE\" value=\"1\" />\r\n        </environmentVariables>\r\n      </aspNetCore>\r\n    </system.webServer>\r\n    <system.serviceModel>\r\n      <bindings>\r\n        <basicHttpBinding>\r\n          <binding maxReceivedMessageSize=\"52428800\" />\r\n        </basicHttpBinding>\r\n        <basicHttpsBinding>\r\n          <binding maxReceivedMessageSize=\"52428800\" />\r\n        </basicHttpsBinding>\r\n      </bindings>\r\n    </system.serviceModel>\r\n  </location>\r\n</configuration>\r\n```\r\n\r\n#### Program.cs\r\n\r\n```cs\r\n    public class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            CreateWebHostBuilder(args).Build().Run();\r\n        }\r\n\r\n        public static IWebHostBuilder CreateWebHostBuilder(string[] args) =>\r\n            WebHost.CreateDefaultBuilder(args)\r\n                .UseStartup<Startup>()\r\n                .ConfigureKestrel((context, options) =>\r\n                {\r\n                    options.Limits.MaxRequestBodySize = null;\r\n                    options.Limits.MaxRequestBufferSize = null;\r\n                })\r\n                .UseSetting(WebHostDefaults.DetailedErrorsKey, \"true\")\r\n                .UseContentRoot(Directory.GetCurrentDirectory())\r\n                .UseIISIntegration()\r\n                .UseIIS()\r\n                .ConfigureLogging((hostingContext, logging) =>\r\n                {\r\n                    logging.AddConsole();\r\n                });\r\n    }\r\n```\r\n\r\nI would really appreciate any help or guidance since at this point I'm not sure what else I can do to troubleshoot the issue.\r\n\r\n### Screenshots\r\n\r\n- OutOfProcess:\r\n![image](https://user-images.githubusercontent.com/1740109/60637635-70a6ff00-9dd8-11e9-8049-6f41f6d29a62.png)\r\n\r\n- InProcess:\r\n![image](https://user-images.githubusercontent.com/1740109/60637653-81f00b80-9dd8-11e9-8b96-c24fec4e6a98.png)\r\n\r\n### Additional context\r\n\r\nThis is the error I see in the EventLog when I run it as `OutOfProcess`:\r\n```\r\nApplication  '/LM/W3SVC/1/ROOT' with physical root 'G:\\Web\\rosters\\' failed to\r\nstart process  with commandline 'G:\\Web\\rosters\\Cccn.NetworkImport.Manager.exe\r\n.\\Cccn.NetworkImport.Manager.dll' with multiple retries. The last try of  listening port\r\nis '21040'. See previous warnings for  details.\r\n```\r\n\r\nAnd the previous warning is:\r\n```\r\nApplication  '/LM/W3SVC/1/ROOT' with physical root 'G:\\Web\\rosters\\' failed to\r\nstart process  with commandline 'G:\\Web\\rosters\\Cccn.NetworkImport.Manager.exe\r\n.\\Cccn.NetworkImport.Manager.dll' at stage 'PostStartCheck', ErrorCode =  '0x8027025a',\r\nassigned port 21040, retryCounter '0'.\r\n```\r\n\r\nThis is the error I see in the EventLog when I run it as `InProcess`:\r\n```\r\nApplication  '/LM/W3SVC/1/ROOT' with physical root 'G:\\Web\\rosters\\' failed to load\r\nclr and  managed application. Managed server didn't initialize after 120000  ms.\r\n```\r\n\r\n### Logs\r\n\r\n- OutOfProcess: https://gist.github.com/jo-asakura/95b181bac107c162d8ab44651564219b\r\n- InProcess: https://gist.github.com/jo-asakura/317fae72ee290cfa05eb90925cfcf3f6\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/11885","RelatedDescription":"Open issue \"HTTP Error 502.5 - ANCM Out-Of-Process Startup Failure\" (#11885)"},{"Id":"464016761","IsPullRequest":false,"CreatedAt":"2019-07-04T01:25:37","Actor":"johncrim","Number":"11884","RawContent":null,"Title":"Support re-using GenericWebHostBuilder and GenericWebHostService","State":"open","Body":"### Problem statement\r\nI'm trying to help on this issue: https://github.com/microsoft/service-fabric-aspnetcore/issues/48\r\nin addition to private integration of ASP.NET Core 3.0 + kestrel hosting within Service Fabric. Consider a basic kestrel web server, exposing http and https endpoints, within a SF node.\r\n\r\nWe'd like to add support for using a generic host within Service Fabric ASP.NET Core 3.0 apps. The advantages of using a generic host are:\r\n* Use a single configuration instance, DI container, and web pipeline across multiple SF endpoints (eg 1 endpoint for http, 1 endpoint for https, perhaps another for gRPC) in a host\r\n* WebHostBuilder is deprecated, so we want to avoid investing in that if possible\r\n\r\nThe current ASP.NET Core hosting model within SF is mostly dictated by this project:\r\nhttps://github.com/microsoft/service-fabric-aspnetcore\r\nWhich is documented here:\r\nhttps://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-reliable-services-communication-aspnetcore\r\n\r\nIf you follow the documentation literally (see https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-reliable-services-communication-aspnetcore#kestrel-in-reliable-services), you end up with separate kestrel pipelines, DI containers, etc per endpoint. It's possible to work around this, but it's not trivial and many developers struggle with it, per Stack Overflow.\r\n\r\nIn order to implement a better, generic host-based hosting model for Service Fabric, it would be great to be able to re-use much of `GenericWebHostBuilder` and `GenericWebHostService` without copying + maintaining all the classes. Also note that `ISupportsStartup` and `ISupportsUseDefaultServiceProvider` are internal, so they can't be implemented. \r\n\r\n### Describe the solution you'd like\r\nI'd like to see a separation + make public of the portions of GenericHost that should be re-used in scenarios like this.\r\n\r\nIf it's helpful I can provide an implementation of a ServiceFabric host builder, with details on what the sticking points are.","Url":"https://github.com/aspnet/AspNetCore/issues/11884","RelatedDescription":"Open issue \"Support re-using GenericWebHostBuilder and GenericWebHostService\" (#11884)"},{"Id":"464015171","IsPullRequest":false,"CreatedAt":"2019-07-04T01:18:00","Actor":"danroth27","Number":"11883","RawContent":null,"Title":"Layout generated by Identity scaffolder conflicts with the layout in Blazor Server Apps","State":"open","Body":"The Identity scaffolder generates a layout if it doesn't detect one in the project. Blazor Server Apps have a layout, but it's implemented using components so the Identity scaffolder doesn't detect it. The layout added by the Identity scaffolder gets applied to the *_Host.cshtml* file used by the Blazor app:\r\n\r\n![image](https://user-images.githubusercontent.com/1874516/60633263-ac34cf80-9dbe-11e9-82c7-b86d7fc6e7d6.png)\r\n\r\nCan we update the Identity scaffolder to detect the *_Host.cshtml* file and not generate a layout?\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/11883","RelatedDescription":"Open issue \"Layout generated by Identity scaffolder conflicts with the layout in Blazor Server Apps\" (#11883)"},{"Id":"463995620","IsPullRequest":false,"CreatedAt":"2019-07-03T20:46:43","Actor":"danroth27","Number":"11882","RawContent":null,"Title":"Update readme generated by the identity scaffolder for .NET Core 3.0","State":"open","Body":"The readme for the identity scaffolder has some outdated content. It currently says:\r\n\r\n```\r\nThe generated UI requires MVC. To add MVC to your app:\r\n1. Call services.AddMvc() from your ConfigureServices method\r\n2. Call app.UseMvc() from your Configure method (after authentication)\r\n```\r\n\r\nIn .NET Core 3.0 we've switched to the new endpoint routing system, so instead of adding `app.UseMvc()` you need to add a call to `endpoints.MapRazorPages()` (and maybe also `endpoints.MapControllers()`?) in the call to `app.UseEndpoints()`.","Url":"https://github.com/aspnet/AspNetCore/issues/11882","RelatedDescription":"Open issue \"Update readme generated by the identity scaffolder for .NET Core 3.0\" (#11882)"}],"ResultType":"GitHubIssue"},"Identity-Issues":{"Issues":[{"Id":"385990535","IsPullRequest":true,"CreatedAt":"2018-12-19T00:12:57","Actor":"grahamehorner","Number":"2087","RawContent":null,"Title":"WIP: IUserTwoFactorTokenProvider token length POC","State":"closed","Body":"This is a WIP idea to support configuration of token length for UserTwoFactorTokenProviders","Url":"https://github.com/aspnet/Identity/pull/2087","RelatedDescription":"Closed or merged PR \"WIP: IUserTwoFactorTokenProvider token length POC\" (#2087)"},{"Id":"385943112","IsPullRequest":true,"CreatedAt":"2018-12-19T00:06:47","Actor":"grahamehorner","Number":"2086","RawContent":null,"Title":"Update Rfc6238AuthenticationService.cs","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2086","RelatedDescription":"Closed or merged PR \"Update Rfc6238AuthenticationService.cs\" (#2086)"},{"Id":"385172059","IsPullRequest":false,"CreatedAt":"2018-12-06T18:36:01","Actor":"Rightio-Limited","Number":"2084","RawContent":null,"Title":"Random Authentication Sign Outs in ASP.NET Core 2.1","State":"closed","Body":"I'm receiving user complaints saying they are being directed to the login screen randomly when it has only been a minute or so since they clicked a button that would have sent a message to the server side.\r\n\r\nHere is a log of one of the errors.\r\n`[INF] Executed action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" in 1473.4897ms (afa2e885)\r\n[INF] Request finished in 1474.816ms 200 application/json; charset=utf-8 (791a596a)\r\n[INF] Request starting HTTP/1.1 GET http://MyAppmanager.MyApp.co.uk/api/AgreementAPI/GetAgreements?searchTerm=1543309403289   (ca22a1cb)\r\n[INF] Entity Framework Core \"2.1.3-rtm-32065\" initialized '\"IdentityDbContext\"' using provider '\"Microsoft.EntityFrameworkCore.SqlServer\"' with options: \"None\" (9958f5bb)\r\n[INF] Executed DbCommand (\"1\"ms) [Parameters=[\"@__get_Item_0='?' (DbType = Int32)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT TOP(1) [e].[UserId], [e].[AcquisitionTeamId], [e].[AreaNumber], [e].[AuthorisationPassword], [e].[AutoBooking], [e].[AutoUpdateSoftware], [e].[AvayaFullName], [e].[AvayaName], [e].[AvaysExt], [e].[CanSellAgreement], [e].[ChangePassword], [e].[CompanyId], [e].[DateEnded], [e].[DateStarted], [e].[DebugLogs], [e].[DefaultQuotes], [e].[DepartmentId], [e].[EmailAddress], [e].[Forename], [e].[HomeServeEmployee], [e].[Initials], [e].[IsPurchaseOrderReviewer], [e].[JobTitle], [e].[LogonName], [e].[MaxLogins], [e].[Message], [e].[Name], [e].[Notes], [e].[PartTime], [e].[Password], [e].[ReportDDI], [e].[RoleId], [e].[Shift], [e].[ShowEngineerAlert], [e].[Surname], [e].[TerminationId], [e].[TrackFastVersion], [e].[UnreadMessage], [e].[VisibleOnChronicle]\r\nFROM [Users] AS [e]\r\nWHERE [e].[UserId] = @__get_Item_0\" (0723d8ff)\r\n[INF] AuthenticationScheme: \"Identity.Application\" signed out. (d3f50c8d)\r\n[INF] AuthenticationScheme: \"Identity.External\" signed out. (d3f50c8d)\r\n[INF] AuthenticationScheme: \"Identity.TwoFactorUserId\" signed out. (d3f50c8d)\r\n**[INF] \"Identity.Application\" was not authenticated. Failure message: \"No principal.\" (48071232)**\r\n[INF] Route matched with \"{action = \\\"GetAgreements\\\", controller = \\\"AgreementAPI\\\", page = \\\"\\\", area = \\\"\\\"}\". Executing action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" (a44c0341)\r\n[INF] Authorization failed. (b15dd539)\r\n[INF] Authorization failed for the request at filter '\"Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter\"'. (8b6446cb)\r\n[INF] Executing ChallengeResult with authentication schemes ([]). (f3dca807)\r\n[INF] AuthenticationScheme: \"Identity.Application\" was challenged. (d45f1f38)\r\n[INF] Executed action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" in 0.3846ms (afa2e885)\r\n[INF] Request finished in 9.3835ms 401  (791a596a)\r\n[INF] Request starting HTTP/1.1 POST http://MyAppmanager.MyApp.co.uk/API/CustomerAPI/WriteToLog/ application/x-www-form-urlencoded; charset=UTF-8 61 (ca22a1cb)\r\n[INF] Route matched with \"{action = \\\"WriteToLog\\\", controller = \\\"CustomerAPI\\\", page = \\\"\\\", area = \\\"\\\"}\". Executing action \"MyAppManager.Controllers.API.CustomerAPIController.WriteToLog (MyAppManager)\" (a44c0341)\r\n[INF] Executing action method \"MyAppManager.Controllers.API.CustomerAPIController.WriteToLog (MyAppManager)\" with arguments ([\"ERROR: WebAPI call is not authenticated\", \"error\"]) - Validation state: Valid (4e3479ed)\r\n[ERR] Client log: ERROR: WebAPI call is not authenticated (d4244074)\r\n`\r\n\r\n**Startup File**\r\n`public void ConfigureServices(IServiceCollection services)\r\n{\r\n\tservices.AddScoped<IRFDbRepository, RFDbRepository>();\r\n\tvar connection = _configuration.GetConnectionString(\"RFDbConnection\");\r\n\tservices.Configure<ConnectionStrings>(_configuration.GetSection(\"ConnectionStrings\"));\r\n\tservices.AddDbContext<RFDbContext>(options => options.UseSqlServer(connection));\r\n\tservices.AddDbContext<IdentityDbContext>(options => options.UseSqlServer(connection));\r\n\tservices.AddAutoMapper();\r\n\tservices.AddIdentity<User, UserRole>().AddDefaultTokenProviders();\r\n\tservices.AddTransient<IUserStore<User>, UserStore>();\r\n\tservices.AddTransient<IRoleStore<UserRole>, RoleStore>();\r\n\tservices.ConfigureApplicationCookie(options =>\r\n\t{\r\n\t\toptions.LoginPath = \"/Identity/Account/Login\";\r\n\t\toptions.LogoutPath = \"/Identity/Account/Logout\";\r\n\t\toptions.ExpireTimeSpan = TimeSpan.FromMinutes(60);\r\n\t\toptions.SlidingExpiration = true;                \r\n\t});\r\n\tservices.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1).AddRazorPagesOptions(options =>\r\n\t{\r\n\t\toptions.AllowAreas = true;\r\n\t\toptions.Conventions.AuthorizeAreaPage(\"Identity\", \"/Account/Logout\");\r\n\t});\r\n}`\r\n\r\n`public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory, IRFDbRepository rFDbRepository)\r\n{\r\n\tloggerFactory.AddFile(_configuration.GetValue<string>(\"Logging:LogFile\"));\r\n\tapp.UseStaticFiles();\r\n\tapp.UseAuthentication();\r\n\tapp.UseMvc(routes =>\r\n\t{\r\n\t\troutes.MapRoute(\r\n\t\t\tname: \"default\",\r\n\t\t\ttemplate: \"{controller=Home}/{action=Index}/{id?}\");\r\n\t\troutes.MapRoute(\r\n\t\t\tname: \"ActionApi\",\r\n\t\t\ttemplate: \"api/{controller}/{action}/{id?}\");\r\n\t});\r\n\trFDbRepository.TestConnection();\r\n}`\r\n\r\nAlso I've setup the app pool as below:\r\n![image](https://user-images.githubusercontent.com/43367982/49141893-8fe42800-f2ef-11e8-8ea3-c79e45ca65a3.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2084","RelatedDescription":"Closed issue \"Random Authentication Sign Outs in ASP.NET Core 2.1\" (#2084)"},{"Id":"387530281","IsPullRequest":true,"CreatedAt":"2018-12-04T23:53:47","Actor":"natemcmaster","Number":"2092","RawContent":null,"Title":"This repo will be archived, project moved to aspnet/AspNetCore","State":"closed","Body":"As a part of https://github.com/aspnet/AspNetCore/issues/3598, this repo will be made read-only soon. The source code and issues will move to https://github.com/aspnet/AspNetCore.","Url":"https://github.com/aspnet/Identity/pull/2092","RelatedDescription":"Closed or merged PR \"This repo will be archived, project moved to aspnet/AspNetCore\" (#2092)"},{"Id":"382432623","IsPullRequest":true,"CreatedAt":"2018-12-04T23:49:57","Actor":"HaoK","Number":"2075","RawContent":null,"Title":"Port retry handler test improvement to 2.1","State":"closed","Body":"Port of similar fix for 2.2 https://github.com/aspnet/Identity/pull/2052","Url":"https://github.com/aspnet/Identity/pull/2075","RelatedDescription":"Closed or merged PR \"Port retry handler test improvement to 2.1\" (#2075)"},{"Id":"387479804","IsPullRequest":false,"CreatedAt":"2018-12-04T21:12:03","Actor":"LosManos","Number":"2091","RawContent":null,"Title":"The non-scaffolded razor page \"Register\" does not recognise Password.RequiredLength.","State":"closed","Body":"### Describe the bug\r\nSetting password length through \r\n```\r\npublic void ConfigureServices(IServiceCollection services){\r\n  ...\r\n  services.Configure<IdentityOptions>(options =>\r\n  {\r\n    options.Password.RequiredLength = 1;\r\n  });\r\n  ...\r\n```\r\ndoes not change the non-scaffolded razor page as it always says \"The Password must be at least 6 and at max 100 characters long.\" if inputed password is < 6 characters.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Create a new ASP.NET Core Web 2.1 application\r\n2. Select \"Web application (Model-View Controller)\" \r\n3. Select \"Change authentication\"\r\n3.1. Select \"Individual User Account\"\r\n4. Select Ok to have the project scaffolded.\r\n5. Open file Startup.cs\r\n6. Add \r\n```\r\nservices.Configure<IdentityOptions>(options =>\r\n{\r\n  options.Password.RequiredLength = 1;\r\n});\r\n```\r\nto method `ConfigureServices`.\r\n7. Press F5 (or select your favourite start-debug method).\r\n8. In the web browser that pops up\r\n8.1. Select Register\r\n8.2. Type \"a@example.com\" as user name (or select your favourite fast-to-type email addresss).\r\n8.3. Type \"a\" as password (or any password shorter than 6 characters).\r\n8.4. Select Register\r\n\r\n### Expected behavior\r\nThe web page should have been updated with information about successful creation of user.\r\n\r\n### Actual behaviour\r\nThe web page says \"The Password must be at least 6 and at max 100 characters long.\"\r\n\r\n### Additional context\r\nI have a question at stack overflow https://stackoverflow.com/questions/53620708/how-do-i-set-password-options-in-aspnet-core-2-1 that explains the same issue if this is not clear enough.\r\n\r\nThis issue might be duplicate of #774.","Url":"https://github.com/aspnet/Identity/issues/2091","RelatedDescription":"Closed issue \"The non-scaffolded razor page \"Register\" does not recognise Password.RequiredLength.\" (#2091)"},{"Id":"386513703","IsPullRequest":false,"CreatedAt":"2018-12-02T00:47:54","Actor":"NinoFloris","Number":"2089","RawContent":null,"Title":"No way to Add a password after creating user, except through Reset","State":"closed","Body":"So we do have RemovePasswordAsync but where's AddPasswordAsync? \r\nWe currently hack around it by using a Reset token we generated before it, but we do really need it for upgrading OAuth/Connect accounts to full accounts.","Url":"https://github.com/aspnet/Identity/issues/2089","RelatedDescription":"Closed issue \"No way to Add a password after creating user, except through Reset\" (#2089)"},{"Id":"385940834","IsPullRequest":false,"CreatedAt":"2018-12-01T01:11:14","Actor":"grahamehorner","Number":"2085","RawContent":null,"Title":"Q: moving of source","State":"closed","Body":"Is the identity repo under the aspnet/aspnetcore like other repos have ? ","Url":"https://github.com/aspnet/Identity/issues/2085","RelatedDescription":"Closed issue \"Q: moving of source\" (#2085)"},{"Id":"386331000","IsPullRequest":true,"CreatedAt":"2018-11-30T20:17:17","Actor":"dougbu","Number":"2088","RawContent":null,"Title":"Remove `SetCompatibiltyVersion(...)` call in sample","State":"closed","Body":"- aspnet/Mvc#7156 2 of ?","Url":"https://github.com/aspnet/Identity/pull/2088","RelatedDescription":"Closed or merged PR \"Remove `SetCompatibiltyVersion(...)` call in sample\" (#2088)"},{"Id":"378822046","IsPullRequest":true,"CreatedAt":"2018-11-29T21:55:44","Actor":"grahamehorner","Number":"2060","RawContent":null,"Title":"Update Rfc6238AuthenticationService.cs","State":"closed","Body":"20bytes is 160bits","Url":"https://github.com/aspnet/Identity/pull/2060","RelatedDescription":"Closed or merged PR \"Update Rfc6238AuthenticationService.cs\" (#2060)"},{"Id":"380746507","IsPullRequest":false,"CreatedAt":"2018-11-29T20:17:46","Actor":"wijnsema","Number":"2067","RawContent":null,"Title":"BypassTowFactor in SignInManager:ExternalLoginSignInAsync should default to False","State":"closed","Body":"As requested by @brockallen in #850 it is now possible to bypass 2FA in case of an external login. \r\n\r\nI'm sure there are good reasons to bypass 2FA, however the current implementation is far to general: \r\n\r\n- All providers all treated equal (some providers might not even support 2FA at all)\r\n- All users all treated equal (users can have 2FA enabled or not)\r\n\r\nThis bypass of 2FA really needs more refinement.\r\n\r\n**What makes this really a problem is the fact that it is enabled in the UI templates!** \r\nAs a developer using the template and enabling 2FA you expect 2FA to work for both local and external login!\r\n\r\nFurthermore, the redirect to the 2FA page is missing, so changing to call to `bypassTwoFactor = false` results in a confusing error that the user already exists.\r\n\r\nIn my opinion the following fragment from ExternalLogin.cshtml.cs\r\n```C#\r\nvar result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, \r\n      info.ProviderKey, isPersistent: false, bypassTwoFactor: true);\r\nif (result.Succeeded)\r\n{\r\n   _logger.LogInformation(\"{Name} logged in with {LoginProvider} provider.\", \r\n      info.Principal.Identity.Name, info.LoginProvider);\r\n   return LocalRedirect(returnUrl);\r\n}\r\n```\r\nshould be replaced with\r\n```C#\r\nvar result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, \r\n   info.ProviderKey, isPersistent: false, bypassTwoFactor: false);\r\nif (result.Succeeded)\r\n{\r\n   _logger.LogInformation(\"{Name} logged in with {LoginProvider} provider.\", \r\n      info.Principal.Identity.Name, info.LoginProvider);\r\n   return LocalRedirect(returnUrl);\r\n}\r\nif (result.RequiresTwoFactor)\r\n{\r\n   return RedirectToPage(\"./LoginWith2fa\", new { ReturnUrl = returnUrl });\r\n}\r\n```\r\nIf you enabled bypassTwoFactor it will still work.\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2067","RelatedDescription":"Closed issue \"BypassTowFactor in SignInManager:ExternalLoginSignInAsync should default to False\" (#2067)"},{"Id":"378006056","IsPullRequest":false,"CreatedAt":"2018-11-29T20:04:09","Actor":"blowdart","Number":"2058","RawContent":null,"Title":"Survey: Your experience using Identity UI and customization","State":"closed","Body":"We're taking a survey about how your experiences using ASP.NET Core Identity, and specifically Identity UI as a package.\r\n\r\nPlease give us your feedback, and, if you're willing, you might get a phone call to talk about your experiences in detail.\r\n\r\nhttps://microsoft.qualtrics.com/jfe/form/SV_3mTmFYDZAQutZMF ","Url":"https://github.com/aspnet/Identity/issues/2058","RelatedDescription":"Closed issue \"Survey: Your experience using Identity UI and customization\" (#2058)"},{"Id":"384918165","IsPullRequest":false,"CreatedAt":"2018-11-29T04:38:32","Actor":"OphiCA","Number":"2082","RawContent":null,"Title":"No sign-out authentication handler is registered for the scheme 'Identity.External'","State":"closed","Body":"Hello,\r\n\r\nFor several months now I've been trying to solve an issue with Identity, where 30-min on the dot after signing in, I am greeted by an `Invalid Operation Exception`:\r\n\r\n> InvalidOperationException: No sign-out authentication handler is registered for the scheme 'Identity.External'. The registered sign-out schemes are: Identity.Application. Did you forget to call AddAuthentication().AddCookies(\"Identity.External\",...)?\r\n\r\nSince it was on my blog site, I didn't put too much effort into it, even though it was an annoyance. Now, I'm looking into possibly some real world client work where I'd like to use ASP.NET Core with Identity, but I can't be having this same issue.\r\n\r\nCould someone please tell me why this exception throws? I don't want to use external schemes, so why is it trying to sign out of one? When did it sign into one?\r\n\r\nHere's the relevant code from my app, hopefully someone can point me in the right direction because I sure as heck can't.\r\n\r\n**Startup.cs**\r\n\r\n\tpublic sealed class Startup {\r\n\t\tpublic void ConfigureServices(\r\n\t\t\tIServiceCollection services) {\r\n\t\t\t//...\r\n\t\t\tservices.AddApplicationIdentity();\r\n\t\t\t//...\r\n\t\t\tservices.ConfigureApplicationCookie(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Cookie.SameSite = SameSiteMode.Strict;\r\n\t\t\t\t\to.Cookie.SecurePolicy = CookieSecurePolicy.Always;\r\n\r\n\t\t\t\t\to.AccessDeniedPath = new PathString(\"/admin\");\r\n\t\t\t\t\to.ExpireTimeSpan = TimeSpan.FromHours(4);\r\n\t\t\t\t\to.LoginPath = new PathString(\"/admin\");\r\n\t\t\t\t\to.LogoutPath = new PathString(\"/admin/sign-out\");\r\n\t\t\t\t});\r\n\t\t\tservices.Configure<IdentityOptions>(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Password.RequiredLength = 8;\r\n\r\n\t\t\t\t\to.Lockout.DefaultLockoutTimeSpan = TimeSpan.FromMinutes(5);\r\n\t\t\t\t\to.Lockout.MaxFailedAccessAttempts = 5;\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tpublic void Configure(\r\n\t\t\tIApplicationBuilder app) {\r\n\t\t\t//...\r\n\t\t\tapp.UseAuthentication();\r\n\t\t\t//...\r\n\t\t}\r\n\t}\r\n\r\n**ServiceCollectionExtensions**\r\n\r\n\tpublic static class ServiceCollectionExtensions {\r\n\t\tpublic static IdentityBuilder AddApplicationIdentity(\r\n\t\t\tthis IServiceCollection services) {\r\n\t\t\tservices.AddAuthentication(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.DefaultAuthenticateScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t\to.DefaultChallengeScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t\to.DefaultSignInScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t}).AddCookie(IdentityConstants.ApplicationScheme,\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Events = new CookieAuthenticationEvents {\r\n\t\t\t\t\t\tOnValidatePrincipal = SecurityStampValidator.ValidatePrincipalAsync\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\tservices.TryAddScoped<IdentityErrorDescriber>();\r\n\t\t\tservices.TryAddScoped<ILookupNormalizer, UpperInvariantLookupNormalizer>();\r\n\t\t\tservices.TryAddScoped<IPasswordHasher<User>, PasswordHasher<User>>();\r\n\t\t\tservices.TryAddScoped<IPasswordValidator<User>, PasswordValidator<User>>();\r\n\t\t\tservices.TryAddScoped<IUserClaimsPrincipalFactory<User>, UserClaimsPrincipalFactory<User>>();\r\n\t\t\tservices.TryAddScoped<UserManager<User>>();\r\n\t\t\tservices.TryAddScoped<IUserStore<User>, ApplicationUserStore>();\r\n\t\t\tservices.TryAddScoped<IUserValidator<User>, UserValidator<User>>();\r\n\t\t\tservices.TryAddScoped<ISecurityStampValidator, SecurityStampValidator<User>>();\r\n\t\t\tservices.TryAddScoped<SignInManager<User>>();\r\n\r\n\t\t\treturn new IdentityBuilder(typeof(User), services);\r\n\t\t}\r\n\t}\r\n\r\nI'm not going to include the `ApplicationUserStore` because I highly doubt it has anything to do with the exception. I'd appreciate any help because I am just struggling at this point. Thanks!","Url":"https://github.com/aspnet/Identity/issues/2082","RelatedDescription":"Closed issue \"No sign-out authentication handler is registered for the scheme 'Identity.External'\" (#2082)"},{"Id":"383003537","IsPullRequest":false,"CreatedAt":"2018-11-22T13:29:00","Actor":"LindaLawton","Number":"2079","RawContent":null,"Title":"Remember me isPersistent understanding","State":"closed","Body":"This is more of a question but its not enough of a question that i could post it up on stack overflow without risking it just getting closed as primary opinion based or to broad.   So i am going to put it here in hopes of getting an answer.\r\n\r\nThe issue is the understanding of how remember me is supposed to work.    My problem is that its not doing what we would expect it to do.   \r\n\r\nManagement expects when a user logs in and clicks remember me that they will then not be required to type their login and password again for a month.  Whether or not they will still have to type in the 2fa code is up for debate.\r\n\r\nWhat is actually happening is that i can close the browser reboot and come back for about an hour and 15 minutes and then i will be forced to type my password again.    This still happens even with a valid `.AspNetCore.Identity.Application` cookie set that is not due to expire for another month.\r\n\r\nAfter digging around in the code i found that Remember me is actually isPersistent and it is defined as.\r\n\r\n>Flag indicating whether the sign-in cookie should persist after the browser is closed.\r\n\r\nWhich brings you to:\r\n\r\nThere are two different types of Cookies:\r\n\r\n- session cookies, held in memory, and which expire once the browser exits\r\n- persistent cookies, which have a time-to-live, are persisted on disk, and are sent by the browser until their time-to-live has elapsed.\r\n\r\nAll this being said remember machine 2fa works as expected i am not prompted again for the 2fa and i have a cookie on my machine `Identity.TwoFactorRememberMe`.\r\n\r\nSo I guess my question is why are we not getting a `Identity.FactorRememberMe` or why isn't sign in respecting a long life time of the `AspNetCore.Identity.Application` cookie?\r\n\r\nHow is this supposed to work exactly?   I am following the code here even though we have normal MVC and not razor pages like you have in the example.  I am still just calling \r\n\r\n>var signInUserResult = await _signInManager.PasswordSignInAsync(userName, password, rememberMe, true);\r\n\r\nNote: I am using Asp .net Identity in Identity server 4 application.\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2079","RelatedDescription":"Closed issue \"Remember me isPersistent understanding\" (#2079)"},{"Id":"383297898","IsPullRequest":false,"CreatedAt":"2018-11-21T22:08:40","Actor":"mmillican","Number":"2080","RawContent":null,"Title":"Replace a Role Validator","State":"closed","Body":"I am trying to create a custom role validator to support pseudo-multi-tenancy (which I know is not _officially_ supported in Identity) and am running into some issues.\r\n\r\nI've verified that my validator does work and is being called. However, the default validator appears to be called also. \r\n\r\nHere's my Identity service registration\r\n```\r\nservices.AddIdentity<User, Role>(setup =>\r\n    {\r\n        // Redacted settings\r\n    })\r\n    .AddRoleValidator<CustomRoleValidator<Role>>()\r\n    .AddEntityFrameworkStores<ApplicationDbContext>()\r\n    .AddDefaultTokenProviders();\r\n```\r\n\r\nHow can I _remove_ the default RoleValidator?","Url":"https://github.com/aspnet/Identity/issues/2080","RelatedDescription":"Closed issue \"Replace a Role Validator\" (#2080)"},{"Id":"382890054","IsPullRequest":true,"CreatedAt":"2018-11-20T23:38:12","Actor":"dotnet-maestro-bot","Number":"2078","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @javiercn\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/2078","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2078)"},{"Id":"382876972","IsPullRequest":true,"CreatedAt":"2018-11-20T23:38:12","Actor":"javiercn","Number":"2076","RawContent":null,"Title":"Update to IdentityServer 2.3.0","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2076","RelatedDescription":"Closed or merged PR \"Update to IdentityServer 2.3.0\" (#2076)"},{"Id":"382885320","IsPullRequest":true,"CreatedAt":"2018-11-20T23:19:15","Actor":"javiercn","Number":"2077","RawContent":null,"Title":"Update Identity Server dependencies to 2.3.0","State":"closed","Body":"This updates things on non-shipping product code, so it's ok to update (I asked).","Url":"https://github.com/aspnet/Identity/pull/2077","RelatedDescription":"Closed or merged PR \"Update Identity Server dependencies to 2.3.0\" (#2077)"},{"Id":"382068763","IsPullRequest":false,"CreatedAt":"2018-11-19T12:16:11","Actor":"wpqs","Number":"2074","RawContent":null,"Title":"Login doesn't show registered social logins after error","State":"closed","Body":"I'm using ASPNET Core 2.1 with Razor Pages UI Library and noticed that whilst registered social logins appear when I open the Login page, they disappear after an error like incorrect password.\r\n\r\nThere seems to be a bug in Identity\\Pages\\Account\\Login.cshtml.cs as \r\n````\r\n public IList<AuthenticationScheme> ExternalLogins { get; set; }\r\n\r\n````\r\nis only initialised in OnGetAsync(), but if an error happens OnPostAsync() then Page() is returned so OnGetAsyn() doesn't get called. Changing error handling in  OnPostAsync() so RedirectToPage() is returned seems to fix the problem.\r\n\r\nPlease confirm this is a bug and comment on my fix","Url":"https://github.com/aspnet/Identity/issues/2074","RelatedDescription":"Closed issue \"Login doesn't show registered social logins after error\" (#2074)"},{"Id":"381789469","IsPullRequest":true,"CreatedAt":"2018-11-17T00:27:58","Actor":"natemcmaster","Number":"2072","RawContent":null,"Title":"Upgrade projects to netcoreapp3.0","State":"closed","Body":"Changes:\r\n\r\n* Upgrade dependencies\r\n* Change TFM on Microsoft.AspNetCore.Identity to netcoreapp3.0\r\n* Remove .NET Framework tests\r\n\r\nPart of https://github.com/aspnet/AspNetCore/issues/3754","Url":"https://github.com/aspnet/Identity/pull/2072","RelatedDescription":"Closed or merged PR \"Upgrade projects to netcoreapp3.0\" (#2072)"},{"Id":"380931030","IsPullRequest":true,"CreatedAt":"2018-11-14T23:29:46","Actor":"pranavkm","Number":"2070","RawContent":null,"Title":"Use 3.0 configuration in RCLs","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2070","RelatedDescription":"Closed or merged PR \"Use 3.0 configuration in RCLs\" (#2070)"},{"Id":"378005714","IsPullRequest":false,"CreatedAt":"2018-11-14T21:00:55","Actor":"papyr","Number":"2057","RawContent":null,"Title":"AD directory user-groups; can IdentityRole be subclassed to implement Role-Groups or User-Groups","State":"closed","Body":"There is a disconnect with Active Directory, since we don't have support for User Groups in Identity, how can we implement or mirror this functionality inside ASP identity","Url":"https://github.com/aspnet/Identity/issues/2057","RelatedDescription":"Closed issue \"AD directory user-groups; can IdentityRole be subclassed to implement Role-Groups or User-Groups\" (#2057)"},{"Id":"380198930","IsPullRequest":false,"CreatedAt":"2018-11-14T17:33:59","Actor":"blankenbush","Number":"2065","RawContent":null,"Title":"Spelling error DeletePersonalData.cshtml.cs ","State":"closed","Body":"The word \"deleteing\" is wrong.  It should be \"deleting\" on line: 111; DeletePersonalData.cshtml.cs.\r\n\r\nAlso found in comment on line 183; SqlStoreTestBase.cs\r\n\r\n![capture](https://user-images.githubusercontent.com/187785/48412982-33401500-e714-11e8-903b-6e2fcc8e0a6a.PNG)\r\n","Url":"https://github.com/aspnet/Identity/issues/2065","RelatedDescription":"Closed issue \"Spelling error DeletePersonalData.cshtml.cs \" (#2065)"},{"Id":"380389829","IsPullRequest":true,"CreatedAt":"2018-11-14T17:33:01","Actor":"blankenbush","Number":"2066","RawContent":null,"Title":"Fix typo","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2066","RelatedDescription":"Closed or merged PR \"Fix typo\" (#2066)"},{"Id":"377364575","IsPullRequest":false,"CreatedAt":"2018-11-09T11:16:05","Actor":"yetanotherchris","Number":"2056","RawContent":null,"Title":"Should IdentityUser be in the EntityFramework namespace?","State":"closed","Body":"https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.identity.entityframeworkcore.identityuser?view=aspnetcore-1.1\r\n\r\nI'm looking through various implementations from the [readme](https://github.com/aspnet/Identity/blob/master/README.md) and I've noticed they all use `IdentityUser ` for their concrete type to pass to `UserManager`, or have had to craft a custom type to be able to have a contract between the database and the .NET AspNetIdentity implentation they've written (see the DynamoDB library).\r\n\r\nI've had to do this too for the [Marten implementation I've written](https://github.com/yetanotherchris/Marten.AspNetIdentity), and the reason is, a `TUser` that your `UserStore` takes, should really be an interface - it will always have an email, most likely an Id of some sort, firstname, lastname and then a bag of properties.\r\n\r\nThings become even more abstract when dealing with claims.\r\n\r\nIf everyone is using `IdentityUser` or their own custom `TUser` doesn't this defeat the purpose of AspnetIdentity - which is to be able to switch and change implementations easily? That isn't possible if your consumer is tightly coupled with a `TUser` implementation of the library.\r\n\r\n### Example `TUser` implementations\r\n\r\n- [MongoIdentityUser](https://github.com/tugberkugurlu/AspNetCore.Identity.MongoDB/blob/master/src/AspNetCore.Identity.MongoDB/MongoIdentityUser.cs)\r\n- [DynamoIdentityUser](https://github.com/miltador/AspNetCore.Identity.DynamoDB/blob/master/src/AspNetCore.Identity.DynamoDB/DynamoIdentityUser.cs)\r\n- [Redis uses `IdentityUser<string>`](https://github.com/aguacongas/Identity.Redis/blob/develop/src/Aguacongas.Identity.Redis/UserStore.cs)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2056","RelatedDescription":"Closed issue \"Should IdentityUser be in the EntityFramework namespace?\" (#2056)"},{"Id":"376980171","IsPullRequest":true,"CreatedAt":"2018-11-02T21:57:29","Actor":"dotnet-maestro-bot","Number":"2055","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @javiercn\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/2055","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2055)"},{"Id":"376978591","IsPullRequest":true,"CreatedAt":"2018-11-02T21:57:26","Actor":"javiercn","Number":"2054","RawContent":null,"Title":"Fixes integrity validation in Identity UI V3","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2054","RelatedDescription":"Closed or merged PR \"Fixes integrity validation in Identity UI V3\" (#2054)"},{"Id":"376977750","IsPullRequest":false,"CreatedAt":"2018-11-02T21:48:32","Actor":"javiercn","Number":"2053","RawContent":null,"Title":"Fix integrity tags on Identity UI V3","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/issues/2053","RelatedDescription":"Closed issue \"Fix integrity tags on Identity UI V3\" (#2053)"},{"Id":"376973581","IsPullRequest":true,"CreatedAt":"2018-11-02T21:48:08","Actor":"javiercn","Number":"2052","RawContent":null,"Title":"Fixes integrity validation hashes for Identity UI V3","State":"closed","Body":"Fixes https://github.com/aspnet/Identity/issues/2053","Url":"https://github.com/aspnet/Identity/pull/2052","RelatedDescription":"Closed or merged PR \"Fixes integrity validation hashes for Identity UI V3\" (#2052)"},{"Id":"376607709","IsPullRequest":false,"CreatedAt":"2018-11-01T23:29:51","Actor":"ycrumeyrolle","Number":"2051","RawContent":null,"Title":"[Question] Passwords should not be of type String ?","State":"closed","Body":"My security team escalated to me that the `PasswordHasher` is vulnerable to heap inspection, as the password is of type `String`. \r\nIt should be instead a byte array / span of bytes cleared at the end of the process, as it is done by any cryptographic operation in corefx. CC @bartonjs.\r\nSame problem with any password related types (`IPasswordValidator`, and maybe also the `IUserPasswordStore`)","Url":"https://github.com/aspnet/Identity/issues/2051","RelatedDescription":"Closed issue \"[Question] Passwords should not be of type String ?\" (#2051)"}],"ResultType":"GitHubIssue"},"Tooling-Issues":{"Issues":[{"Id":"447378907","IsPullRequest":true,"CreatedAt":"2019-05-22T23:02:06","Actor":"Rick-Anderson","Number":"1088","RawContent":null,"Title":"Update dotnet-core-3.0-preview1.md","State":"open","Body":"MS Style guide violations and other clean up. Less is more.","Url":"https://github.com/aspnet/Tooling/pull/1088","RelatedDescription":"Open PR \"Update dotnet-core-3.0-preview1.md\" (#1088)"},{"Id":"433911513","IsPullRequest":true,"CreatedAt":"2019-04-16T17:57:10","Actor":"Rick-Anderson","Number":"1087","RawContent":null,"Title":"Update known-issues-vs2017.md","State":"open","Body":"Use Visual Studio Installer to install the missing Visual Studio component \".NET Core 1.0 - 1.1 developer tools for Web\" from the **Individual components** tab.","Url":"https://github.com/aspnet/Tooling/pull/1087","RelatedDescription":"Open PR \"Update known-issues-vs2017.md\" (#1087)"},{"Id":"430834286","IsPullRequest":false,"CreatedAt":"2019-04-09T17:36:29","Actor":"Ashishks1987","Number":"1086","RawContent":null,"Title":"System.Collections.Immutable dll being replace by Microsoft.Net.Compilers","State":"closed","Body":"I have referenced `system.collections.immutable.dll` from the nuget package and I also have the nuget package installed for `Microsoft.Net.Compilers`. Everything works fine in my local but when I push my code to bamboo, in the runtime I get `Could not load file or assembly 'System.Collections.Immutable, Version=1.2.3.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)`\r\n\r\nWhen I checked logs on bamboo when it generates the artifacts, I can see that initially it copied the correct dll here:\r\n\r\n`build    04-Apr-2019 03:20:33      Copying file from \"E:\\agt01\\ENS-EB580-JOB1\\Bin\\Packages\\System.Collections.Immutable.1.5.0\\lib\\netstandard1.0\\System.Collections.Immutable.dll\" to \"E:\\agt01\\ENS-EB580-JOB1\\Binaries\\Release\\\\temp\\Web\\_PublishedWebsites\\MyService\\bin\\System.Collections.Immutable.dll\"`.\r\n\r\nbut then at some point, it replaced this dll with this: `build    04-Apr-2019 03:20:33      Copying file from \"E:\\agt01\\ENS-EB580-JOB1\\Bin\\Packages\\Microsoft.Net.Compilers.1.0.0\\tools\\System.Collections.Immutable.dll\" to \"E:\\agt01\\ENS-EB580-JOB1\\Binaries\\Release\\\\temp\\Web\\_PublishedWebsites\\MyService\\bin\\System.Collections.Immutable.dll\".`\r\n\r\nHow can I make sure that bamboo does not replace this dll and just uses it from the nuget package installed?","Url":"https://github.com/aspnet/Tooling/issues/1086","RelatedDescription":"Closed issue \"System.Collections.Immutable dll being replace by Microsoft.Net.Compilers\" (#1086)"},{"Id":"422330835","IsPullRequest":false,"CreatedAt":"2019-03-18T17:00:12","Actor":"vikasNew","Number":"1085","RawContent":null,"Title":"web deploy on windows 10","State":"open","Body":"Hello,\r\n\r\ncan i publish my code by using web deploy to windows 10 machine.\r\n\r\ni have setup my testing windows 10 machine for deployment, which is in local area network.\r\n\r\nSo i want to publish my code to that remote machine by using web deploy. can i do that ?\r\n\r\ni have installed web deploy and also enabled web development remote service on windows 10 but i am not able to connect to remote machine using we deploy.\r\n\r\nThis returns me the following error every-time.\r\n\"ERROR_DESTINATION_NOT_REACHABLE\"\r\n\r\ninteresting thing is i also have windows 10 on my machine & i am able to use web deploy on my local machine but it's not working with remote windows 10 machine.\r\n\r\nis web deploy only meant for Windows servers not for other normal windows?\r\n\r\nThanks \r\n","Url":"https://github.com/aspnet/Tooling/issues/1085","RelatedDescription":"Open issue \"web deploy on windows 10\" (#1085)"},{"Id":"398036850","IsPullRequest":false,"CreatedAt":"2019-01-15T05:32:59","Actor":"chrgraefe","Number":"1084","RawContent":null,"Title":"Can't add area on ASP.NET Core MVC project","State":"closed","Body":"### Describe the bug\r\nA clear and concise description of what the bug is.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '3.0.100-preview-009812'\r\n2. New ASP.NET Core MVC project in VS2019 Preview\r\n3. Can't add area\r\n\r\n### Expected behavior\r\nA dialog to type area name\r\n","Url":"https://github.com/aspnet/Tooling/issues/1084","RelatedDescription":"Closed issue \"Can't add area on ASP.NET Core MVC project\" (#1084)"},{"Id":"391209971","IsPullRequest":false,"CreatedAt":"2018-12-14T18:00:59","Actor":"sai-manoj-kumar","Number":"1080","RawContent":null,"Title":"The template to create an ASP .NET VM is not working","State":"open","Body":"[The template given here](https://github.com/aspnet/Tooling/blob/AspNetVMs/docs/create-asp-net-vm-with-webdeploy.md#PowerShellScript) doesn't work. It gives the error SkuNotAvailable. Can someone please fix it?","Url":"https://github.com/aspnet/Tooling/issues/1080","RelatedDescription":"Open issue \"The template to create an ASP .NET VM is not working\" (#1080)"},{"Id":"385928083","IsPullRequest":false,"CreatedAt":"2018-12-07T20:30:45","Actor":"sinand","Number":"1079","RawContent":null,"Title":"auto build on browser request not working","State":"closed","Body":"I am using community edition 15.9.3 since  the previous update this feature is not working, everytime I have to build project.","Url":"https://github.com/aspnet/Tooling/issues/1079","RelatedDescription":"Closed issue \"auto build on browser request not working\" (#1079)"},{"Id":"383440110","IsPullRequest":false,"CreatedAt":"2018-11-26T19:03:29","Actor":"eriawan","Number":"1078","RawContent":null,"Title":"Feedback: ensure that .NET Core 1.0/1.1 tooling only supported in VS 2017 and won't be supported in VS 2019","State":"closed","Body":"Apologize if my feedback may sound controversial or may spark a debate.\r\n\r\nI need to be sure that the problem mentioned on this [page](https://github.com/aspnet/Tooling/blob/master/known-issues-vs2017.md#to-create-aspnet-core-10--11-projects-install-visual-studios-net-core-10---11-developer-tools-for-web-component) about .NET Core 1.0/1.1 tooling is installed when creating new ASP.NET Core 1.0/1.1 project should not happen or should not be supported in VS 2019.\r\n\r\nThese are my main concerns:\r\n\r\n1. VS 2019 is about to be released in around early 2019\r\n2. ASP.NET Core 1.0/1.1 is not going to be supported anymore, based on [this page](https://github.com/dotnet/core/blob/master/microsoft-support.md).\r\n3. Creating new ASP.NET Core 1.0/1.1 will always install the .NET Core 1.0/1.1 web tooling, and this is not necessary when previous reason has reached the unsupported period and it's quite near or might be the same time of VS 2019 release.\r\n4. Based on the problem mentioned above, VS 2017 has no \"built in\" tooling when creating new ASP.NET Core 1.0/1.1 project, but the external tooling may help. Therefore for those that still need to maintain ASP.NET Core 1.0/1.1 projects, we could use VS 2017 as long as the VS 2017 is still in support lifecycle or in mainstream support lifecycle.\r\n\r\nI welcome feedback 🙂 \r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1078","RelatedDescription":"Closed issue \"Feedback: ensure that .NET Core 1.0/1.1 tooling only supported in VS 2017 and won't be supported in VS 2019\" (#1078)"},{"Id":"349649932","IsPullRequest":true,"CreatedAt":"2018-08-10T20:38:21","Actor":"AndrewBrianHall","Number":"1077","RawContent":null,"Title":"Adding a .net core -> vs mapping table","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1077","RelatedDescription":"Closed or merged PR \"Adding a .net core -> vs mapping table\" (#1077)"},{"Id":"333613195","IsPullRequest":false,"CreatedAt":"2018-06-27T12:59:29","Actor":"Liero","Number":"1076","RawContent":null,"Title":"Unable to publish when using Microsoft.NET.Sdk.Razor","State":"closed","Body":"After I upgraded my solution from asp.net core 2.0 to 2.1, I'm not able to publish my web app from Visual Studio, although it can build.\r\n\r\nDuring the upgrade I've changed SDK in one of my class libraries to **Microsoft.NET.Sdk.Razor**, but now I'm getting a lot of errors and if project references were not recognized in this library when publishing.\r\n\r\n```\r\nConnecting to C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\publish\\...\r\nMyProject.Web -> C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\MyProject.Web.dll\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Roslyn\\csc.exe /noconfig /unsafe- /checked- /nowarn:1701,1702,1701,1702,2008 /nostdlib+ /errorreport:prompt /warn:4 /define:TRACE;RELEASE;NETCOREAPP;NETCOREAPP2_1 /errorendlocation /preferreduilang:en-US /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.antiforgery\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Antiforgery.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization.policy\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.Policy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cryptography.internal\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cryptography.Internal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.diagnostics.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Diagnostics.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.server.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Server.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.html.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Html.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.features\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Features.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.jsonpatch\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.JsonPatch.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.apiexplorer\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ApiExplorer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.dataannotations\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.formatters.json\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Formatters.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razorpages\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.RazorPages.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.taghelpers\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.TagHelpers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.viewfeatures\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ViewFeatures.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.language\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Language.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.runtime\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.responsecaching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.ResponseCaching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.webutilities\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.WebUtilities.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.csharp\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.common\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.CodeAnalysis.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.dotnet.platformabstractions\\2.1.0\\lib\\netstandard1.3\\Microsoft.DotNet.PlatformAbstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.relational\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Relational.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.sqlserver\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.SqlServer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.memory\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.binder\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Binder.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.DependencyInjection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection\\2.1.0\\lib\\netcoreapp2.0\\Microsoft.Extensions.DependencyInjection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencymodel\\2.1.0\\lib\\netstandard1.6\\Microsoft.Extensions.DependencyModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.composite\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Composite.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.filesystemglobbing\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileSystemGlobbing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.objectpool\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.ObjectPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.options\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Options.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.primitives\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.webencoders\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.WebEncoders.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.net.http.headers\\2.1.0\\lib\\netstandard2.0\\Microsoft.Net.Http.Headers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.VisualBasic.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.Win32.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.win32.registry\\4.5.0\\ref\\netstandard2.0\\Microsoft.Win32.Registry.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\mscorlib.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\netstandard.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json.bson\\1.0.1\\lib\\netstandard1.3\\Newtonsoft.Json.Bson.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json\\11.0.2\\lib\\netstandard2.0\\Newtonsoft.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\remotion.linq\\2.2.0\\lib\\netstandard1.0\\Remotion.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.AppContext.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Buffers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Concurrent.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Immutable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.NonGeneric.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Specialized.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Annotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.EventBasedAsync.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.TypeConverter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Console.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.Common.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.data.sqlclient\\4.5.0\\ref\\netcoreapp2.1\\System.Data.SqlClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Contracts.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Debug.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.DiagnosticSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.FileVersionInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Process.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.StackTrace.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TextWriterTraceListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tools.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TraceSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tracing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Dynamic.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Calendars.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.interactive.async\\3.1.1\\lib\\netstandard1.3\\System.Interactive.Async.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.Brotli.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.ZipFile.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.DriveInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Watcher.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.IsolatedStorage.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.MemoryMappedFiles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Pipes.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.UnmanagedMemoryStream.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Expressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Queryable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.HttpListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Mail.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NameResolution.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NetworkInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Ping.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Requests.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.ServicePoint.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Sockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebHeaderCollection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.Client.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.Vectors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ObjectModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.DispatchProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.ILGeneration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.Lightweight.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Metadata.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.TypeExtensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Reader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.ResourceManager.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Writer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.runtime.compilerservices.unsafe\\4.5.0\\ref\\netstandard2.0\\System.Runtime.CompilerServices.Unsafe.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.CompilerServices.VisualC.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Handles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.RuntimeInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.WindowsRuntime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Loader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Formatters.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.accesscontrol\\4.5.0\\ref\\netstandard2.0\\System.Security.AccessControl.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Claims.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Algorithms.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Csp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.X509Certificates.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.cryptography.xml\\4.5.0\\ref\\netstandard2.0\\System.Security.Cryptography.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.permissions\\4.5.0\\ref\\netstandard2.0\\System.Security.Permissions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Principal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.principal.windows\\4.5.0\\ref\\netstandard2.0\\System.Security.Principal.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.SecureString.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceModel.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceProcess.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.text.encodings.web\\4.5.0\\lib\\netstandard2.0\\System.Text.Encodings.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.RegularExpressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Overlapped.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Dataflow.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Thread.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.ThreadPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Timer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.Local.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ValueTuple.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.HttpUtility.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.ReaderWriter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlSerializer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\WindowsBase.dll\" /debug- /debug:portable /filealign:512 /optimize+ /out:obj\\Release\\netcoreapp2.1\\MyProject.Mail.dll /ruleset:\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Team Tools\\Static Analysis Tools\\\\Rule Sets\\MinimumRecommendedRules.ruleset\" /target:library /warnaserror- /utf8output /deterministic+ /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.CSharp.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.analyzers\\2.1.0\\analyzers\\dotnet\\cs\\Microsoft.EntityFrameworkCore.Analyzers.dll\" EmailDefaults.cs EmailOptions.cs MailSender.cs NotificationService.cs RazorViewToStringRenderer.cs \"C:\\Users\\daniel.turan\\AppData\\Local\\Temp\\.NETCoreApp,Version=v2.1.AssemblyAttributes.cs\" obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs obj\\Release\\netcoreapp2.1\\\\Tem\tporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.RazorAssemblyInfo.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.AssemblyInfo.cs /warnaserror+:NU1605\r\nNotificationService.cs(15,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\nNotificationService.cs(16,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\n...\r\n```\r\n\r\nAlso, see https://stackoverflow.com/questions/50926116/publish-failed-when-using-microsoft-net-sdk-razor-if-reference-was-not-recognize for more details","Url":"https://github.com/aspnet/Tooling/issues/1076","RelatedDescription":"Closed issue \"Unable to publish when using Microsoft.NET.Sdk.Razor\" (#1076)"},{"Id":"257171895","IsPullRequest":false,"CreatedAt":"2018-06-25T20:46:49","Actor":"shirhatti","Number":"1057","RawContent":null,"Title":"Support for multi-line string values","State":"closed","Body":"_From @alexvy86 on August 3, 2017 21:11_\n\nI'm using Akka.NET in a project and the way they do configuration is not-quite-JSON, but still a hierarchical structure, which I haven't been able to successfully integrate into `appsettings.json`. The only way I've been able to do it is to collapse all of their hierarchy into a single-line string value, which makes it a bit of a pain to work with.\r\n\r\nFor now I just put the whole thing as CDATA in an XML file and use the `AddXmlFile()` extension from `Microsoft.Extensions.Configuration.Xml` to read it, but it'd be preferable to have it in `appsetings.json`.\n\n_Copied from original issue: aspnet/Configuration#703_","Url":"https://github.com/aspnet/Tooling/issues/1057","RelatedDescription":"Closed issue \"Support for multi-line string values\" (#1057)"},{"Id":"329605262","IsPullRequest":false,"CreatedAt":"2018-06-05T20:05:23","Actor":"AngelosP","Number":"1075","RawContent":null,"Title":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of dotnet-aspnet-codegenerator","State":"open","Body":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/","Url":"https://github.com/aspnet/Tooling/issues/1075","RelatedDescription":"Open issue \"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of dotnet-aspnet-codegenerator\" (#1075)"},{"Id":"328747170","IsPullRequest":false,"CreatedAt":"2018-06-02T14:10:13","Actor":"AceHack","Number":"1074","RawContent":null,"Title":"Docker in launchSettings.json","State":"open","Body":"Please give documentation on how to add volume mounts.  I need to add a custom volume mount into my image.","Url":"https://github.com/aspnet/Tooling/issues/1074","RelatedDescription":"Open issue \"Docker in launchSettings.json\" (#1074)"},{"Id":"328082529","IsPullRequest":true,"CreatedAt":"2018-06-01T17:41:04","Actor":"federicorinaldi","Number":"1073","RawContent":null,"Title":"Update dotnet-core-2.1.md","State":"closed","Body":"Visual Studio 2017 15.7 has been released now so this document is outdated","Url":"https://github.com/aspnet/Tooling/pull/1073","RelatedDescription":"Closed or merged PR \"Update dotnet-core-2.1.md\" (#1073)"},{"Id":"323850872","IsPullRequest":false,"CreatedAt":"2018-05-17T06:31:53","Actor":"Pichasepong","Number":"1072","RawContent":null,"Title":"can not upload file FTPS. ","State":"closed","Body":"I don't understand why can't upload result is false. At the highlights in yellow. Help me.\r\n![2018-05-17_9-21-13](https://user-images.githubusercontent.com/12063904/40155003-9812f0d8-59bb-11e8-82ae-8b8e7576b1a1.png)\r\n![2018-05-17_11-02-28](https://user-images.githubusercontent.com/12063904/40156168-efe61078-59c1-11e8-8c4c-7657ba2dd536.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1072","RelatedDescription":"Closed issue \"can not upload file FTPS. \" (#1072)"},{"Id":"268293817","IsPullRequest":false,"CreatedAt":"2018-05-17T02:25:02","Actor":"Pichasepong","Number":"1060","RawContent":null,"Title":"Problems .net core 1.0.1 vs 2015 tooling preview 2 error logs file.Help Me. ","State":"closed","Body":"Problems installing on Server 2012 R2 ,Dot net core 1.0.1 vs 2015 tooling preview 2 error logs file.\r\n\r\n![product_dotnetcoreerror](https://user-images.githubusercontent.com/12063904/31985990-040a5f72-b991-11e7-9356-ddd06160a87c.jpg)\r\n","Url":"https://github.com/aspnet/Tooling/issues/1060","RelatedDescription":"Closed issue \"Problems .net core 1.0.1 vs 2015 tooling preview 2 error logs file.Help Me. \" (#1060)"},{"Id":"317494886","IsPullRequest":false,"CreatedAt":"2018-04-25T06:34:01","Actor":"TheAlphamerc","Number":"1071","RawContent":null,"Title":" Unable to start debugging","State":"open","Body":"The project is success fully build but unable to start debugger. See [here][2018-04-25_11-20-19.7244.Ide.log](https://github.com/aspnet/Tooling/files/1945717/2018-04-25_11-20-19.7244.Ide.log) for more details. \r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1071","RelatedDescription":"Open issue \" Unable to start debugging\" (#1071)"},{"Id":"316585462","IsPullRequest":false,"CreatedAt":"2018-04-24T05:17:55","Actor":"rberger247","Number":"1070","RawContent":null,"Title":"Visual studio freezes when I run add-migration ","State":"closed","Body":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger.","Url":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070)"},{"Id":"308764422","IsPullRequest":false,"CreatedAt":"2018-03-27T05:23:09","Actor":"dvdobrovolskiy","Number":"1069","RawContent":null,"Title":"EntityFramework migrations not available to be applied during publish","State":"closed","Body":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc","Url":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069)"},{"Id":"304770827","IsPullRequest":false,"CreatedAt":"2018-03-14T05:33:19","Actor":"TheConservativeCoder","Number":"1068","RawContent":null,"Title":"Switch between Razor Page View and Code Behind","State":"closed","Body":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n","Url":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Closed issue \"Switch between Razor Page View and Code Behind\" (#1068)"},{"Id":"304312342","IsPullRequest":false,"CreatedAt":"2018-03-13T05:33:42","Actor":"RehanSaeed","Number":"1067","RawContent":null,"Title":"Support dotnet watch in launchSettings.json","State":"closed","Body":"I used to be able to use `dotnet watch` in Visual Studio by adding the following section to `launchSettings.json` and starting the project without debugging using CTRL + F5.\r\n\r\n```\r\n    \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    },\r\n```\r\n\r\nThis used to work in ASP.NET Core 1.1 but no longer does. According to https://github.com/aspnet/DotNetTools/issues/404 the new format for ASP.NET Core 2.0 is:\r\n\r\n```\r\n   \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"workingDirectory\": \"C:\\\\Users\\\\namc\\\\source\\\\repos\\\\WebApplication2\\\\WebApplication2\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n```\r\n\r\nThe problem with this is the hard coded `executablePath` which is Windows specific and the `workingDirectory` which is specific to wherever I did a Git clone on my local machine.","Url":"https://github.com/aspnet/Tooling/issues/1067","RelatedDescription":"Closed issue \"Support dotnet watch in launchSettings.json\" (#1067)"},{"Id":"300865938","IsPullRequest":false,"CreatedAt":"2018-02-28T06:01:18","Actor":"rjamesnw","Number":"1066","RawContent":null,"Title":"Nesting bug","State":"closed","Body":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and clearly shows it, but is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\nYes, I'm aware of upcoming nesting controls in v15.6, but I'm not able to install it yet, and regardless, this should work fine, so it should be looked into nonetheless.\r\n\r\nJust to add: I'm using wild-cards to include the file.  If I explicitly add it I get this:\r\n\r\n`Duplicate 'EmbeddedResource' items were included. ...`\r\n\r\nSo it's clearly found.  It's obviously something up with the build process not finding the nested file.","Url":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Closed issue \"Nesting bug\" (#1066)"},{"Id":"290854647","IsPullRequest":false,"CreatedAt":"2018-01-24T01:14:53","Actor":"NeerajaRagesh","Number":"1065","RawContent":null,"Title":"Issue with Sales discount App - Odoo 9","State":"closed","Body":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n","Url":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Closed issue \"Issue with Sales discount App - Odoo 9\" (#1065)"},{"Id":"273994049","IsPullRequest":true,"CreatedAt":"2018-01-07T03:48:49","Actor":"cartermp","Number":"1062","RawContent":null,"Title":"Update migrate-sql-server.md","State":"closed","Body":"Removed product links in favor of all docs links, changed wording slightly, and moved Get Started to be at the top.","Url":"https://github.com/aspnet/Tooling/pull/1062","RelatedDescription":"Closed or merged PR \"Update migrate-sql-server.md\" (#1062)"},{"Id":"274003770","IsPullRequest":true,"CreatedAt":"2017-11-15T02:15:11","Actor":"cristy","Number":"1064","RawContent":null,"Title":"Re adding","State":"closed","Body":"Submitting with the right location. Not sure why the missing-template.md file got tacked on at the end...","Url":"https://github.com/aspnet/Tooling/pull/1064","RelatedDescription":"Closed or merged PR \"Re adding\" (#1064)"},{"Id":"273996633","IsPullRequest":true,"CreatedAt":"2017-11-15T01:03:12","Actor":"cristy","Number":"1063","RawContent":null,"Title":"Webapp landing page","State":"closed","Body":"This is the markdown for the Web App landing page. Let me know if there's any other changes I should make.","Url":"https://github.com/aspnet/Tooling/pull/1063","RelatedDescription":"Closed or merged PR \"Webapp landing page\" (#1063)"},{"Id":"273873058","IsPullRequest":true,"CreatedAt":"2017-11-14T17:26:42","Actor":"cartermp","Number":"1061","RawContent":null,"Title":"Create migrate-sql-server.md","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1061","RelatedDescription":"Closed or merged PR \"Create migrate-sql-server.md\" (#1061)"},{"Id":"258233429","IsPullRequest":false,"CreatedAt":"2017-09-16T14:09:00","Actor":"ctopher31","Number":"1059","RawContent":null,"Title":"Turn off file nesting in Visual Studio 2017","State":"closed","Body":"To report new issues, use the [Report a Problem](https://developercommunity.visualstudio.com/) tool. The GitHub Issue Tracker for the aspnet/Tooling repo is now deprecated in favor of the Report a Problem tool.\r\n\r\nIf you encounter a problem with Visual Studio, we want to know about it so that we can diagnose and fix it. By using the Report a Problem tool, you can collect detailed information about the problem, and send it to Microsoft with just a few button clicks. See [here](https://docs.microsoft.com/en-us/visualstudio/ide/talk-to-us) for more details. \r\n","Url":"https://github.com/aspnet/Tooling/issues/1059","RelatedDescription":"Closed issue \"Turn off file nesting in Visual Studio 2017\" (#1059)"},{"Id":"257312054","IsPullRequest":false,"CreatedAt":"2017-09-14T00:50:29","Actor":"svallis","Number":"1058","RawContent":null,"Title":"Views in class libraries removed from embedded resources under certain circumstances","State":"closed","Body":"I have a test repo which should hopefully demonstrate this problem, and I hope this is the correct repo for the issue.\r\n\r\nhttps://github.com/svallis/precompilation-classlib\r\n\r\nIf you clone and open this solution and perform the following, the issue should be clear. First, the expected results is what happens when adding views to `app`:\r\n\r\n- Go to `app1\\Views\\Home` and press SHIFT+F2 and create `Test.cshtml`\r\n- Copy and paste the new file to end up with `Test - Copy.cshtml`\r\n- Build the solution\r\n- The `.csproj` file for `app1` remains unchanged\r\n\r\nNow perform the same process on `lib1`:\r\n\r\n- Go to `lib1\\Views\\Shared` and press SHIFT+F2 and create `Test.cshtml`\r\n- Copy and paste the new file to end up with `Test - Copy.cshtml`\r\n- Build the solution\r\n- The `.csproj` file for `lib1` has the following added to it\r\n\r\n```\r\n<ItemGroup>\r\n    <EmbeddedResource Remove=\"Views\\Shared\\Test - Copy.cshtml\" />\r\n</ItemGroup>\r\n```\r\n\r\nAs you can imagine this is highly frustrating during development, and we're constantly running into it while developing features within a library. I don't know if it's an outright bug, or whether we could improve the existing rules in the `.csproj` for the library. Whatever changes are made to the library project file need to preserve existing functionality though, so that views are not included in the publish output and are embedded in the assembly. This allows everything to work both during development and after publishing with precompiled views.","Url":"https://github.com/aspnet/Tooling/issues/1058","RelatedDescription":"Closed issue \"Views in class libraries removed from embedded resources under certain circumstances\" (#1058)"},{"Id":"254062749","IsPullRequest":false,"CreatedAt":"2017-08-31T04:38:52","Actor":"matthewDDennis","Number":"1056","RawContent":null,"Title":"Docker tools fail if multiple TFMs in project file","State":"closed","Body":"If you modify your projects to have multiple frameworks with the `<TargetFrameworks>` tag, then the Docker tools does not know which framework to use as there is no `<TargetFramework>` tag.\r\n\r\nAdding the `<TargetFramework>`netcoreapp1.1`<...>` fixes the problem in Visual Studio and all the frameworks build and can debug with Docker.\r\n\r\nHowever, if you try and build a framework other than the netcoreapp1.1 with the DotNet CLI, it fails as it, as the documentation states, will ignore the `<TargetFrameworks>` tag if the `<TargetFramework>` tag is present \r\n","Url":"https://github.com/aspnet/Tooling/issues/1056","RelatedDescription":"Closed issue \"Docker tools fail if multiple TFMs in project file\" (#1056)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"461299946","IsPullRequest":false,"CreatedAt":"2019-06-27T03:55:30","Actor":"anurse","Number":"372","RawContent":null,"Title":"SignalR JavaScript client changing package name to @microsoft/signalr","State":"open","Body":"In `3.0.0-preview7`, the SignalR JavaScript client will change from being `@aspnet/signalr` to `@microsoft/signalr`. We are doing this to reflect the fact that SignalR is useful in more than just ASP.NET Core applications, thanks to the Azure SignalR Service.\r\n\r\nTo react to this change, you will need to change your references in `package.json` files, `require` statements, and ECMAScript `import` statements. No API will change as part of this rename.\r\n\r\nPlease use https://github.com/aspnet/AspNetCore/issues/11637 for discussions on this change.","Url":"https://github.com/aspnet/Announcements/issues/372","RelatedDescription":"Open issue \"SignalR JavaScript client changing package name to @microsoft/signalr\" (#372)"},{"Id":"459551013","IsPullRequest":false,"CreatedAt":"2019-06-23T08:36:59","Actor":"davidfowl","Number":"371","RawContent":null,"Title":"ConnectionAdapters have been removed from Kestrel","State":"open","Body":"As part of the move to move pubternal APIs to public, we've removed the concept of an `IConnectionAdapter` from Kestrel. Connection adapters are being replaced with connection middleware (very similar to http middleware in the ASP.NET Core pipeline but for lower level connections). HTTPS and Connection logging have been moved from connection adapters to connection middleware so those extension methods should continue to work seamlessly (but the guts have been re-implemented). See https://github.com/aspnet/AspNetCore/pull/11412 for more details.\r\n\r\nDiscuss this issue on https://github.com/aspnet/AspNetCore/issues/11475.","Url":"https://github.com/aspnet/Announcements/issues/371","RelatedDescription":"Open issue \"ConnectionAdapters have been removed from Kestrel\" (#371)"},{"Id":"459401188","IsPullRequest":false,"CreatedAt":"2019-06-21T23:07:26","Actor":"anurse","Number":"370","RawContent":null,"Title":"Microsoft.Extensions.Caching.SqlServer is now using the new Microsoft.Data.SqlClient package","State":"open","Body":"The `Microsoft.Extensions.Caching.SqlServer` package will use the new [`Microsoft.Data.SqlClient`](https://www.nuget.org/packages/Microsoft.Data.SqlClient) package starting in `3.0.0-preview7`.\r\n\r\nThis is being done to help align the database providers across the .NET Core stack. EntityFramework already migrated to this new package in `3.0.0-preview6`. If your application currently uses `System.Data.SqlClient`, we recommend converting to the new package. It is generally a drop-in replacement (with some namespace changes).\r\n\r\n**Please note the following _temporary_ limitation**: The current version of `Microsoft.Data.SqlClient` does not support 32-bit applications running on .NET Framework. When running in this configuration, you will get `BadImageFormatException`s thrown at runtime when trying to load the library. This limitation does not apply to 64-bit applications on .NET Framework or *either* bitness on .NET Core. The support matrix is below:\r\n\r\n| Architecture | **.NET Framework** | **.NET Core** |\r\n| - | - | - |\r\n| **x64 (64-bit)** | _Works_ | _Works_ |\r\n| **x86 (32-bit)** | **`BadImageFormatException`** | _Works_ |\r\n\r\nThis is a **temporary** limitation and will be fixed in time for the 3.0 RTM release.\r\n\r\nPlease use https://github.com/aspnet/Extensions/issues/1876 as the discussion issue for this announcement.","Url":"https://github.com/aspnet/Announcements/issues/370","RelatedDescription":"Open issue \"Microsoft.Extensions.Caching.SqlServer is now using the new Microsoft.Data.SqlClient package\" (#370)"},{"Id":"458928711","IsPullRequest":false,"CreatedAt":"2019-06-20T23:14:22","Actor":"BrennanConroy","Number":"369","RawContent":null,"Title":"SignalR HubConnectionContext constructors changing","State":"open","Body":"Prior to 3.0 `HubConnectionContext` had two constructors:\r\n\r\n```csharp\r\npublic HubConnectionContext(ConnectionContext connectionContext, TimeSpan keepAliveInterval, ILoggerFactory loggerFactory);\r\npublic HubConnectionContext(ConnectionContext connectionContext, TimeSpan keepAliveInterval, ILoggerFactory loggerFactory, TimeSpan clientTimeoutInterval);\r\n```\r\n\r\nIn 3.0 these 2 constructors have been removed and replaced them with a new one:\r\n```csharp\r\npublic HubConnectionContext(ConnectionContext connectionContext, HubConnectionContextOptions contextOptions, ILoggerFactory loggerFactory)\r\n```\r\n\r\nThis new constructor makes use of a new options object, so we can expand the features of `HubConnectionContext` in the future without making more constructors and breaking changes.\r\n\r\nUse aspnet/AspNetCore#11431 to discuss this.","Url":"https://github.com/aspnet/Announcements/issues/369","RelatedDescription":"Open issue \"SignalR HubConnectionContext constructors changing\" (#369)"},{"Id":"454800040","IsPullRequest":false,"CreatedAt":"2019-06-11T16:53:14","Actor":"anurse","Number":"368","RawContent":null,"Title":"SignalR HandshakeProtocol.SuccessHandshakeData removed and replaced with helper method","State":"open","Body":"The [`HandshakeProtocol.SuccessHandshakeData`](https://github.com/aspnet/AspNetCore/blob/c5b2bc0df2a0027832bf7d01dfb19ca39cd08ae6/src/SignalR/common/SignalR.Common/src/Protocol/HandshakeProtocol.cs#L27) field was removed and replaced with a helper method that generates a successful handshake response given a specific `IHubProtocol`. This change was made because additional fields were added to the handshake _response_ that are non-constant and change depending on the selected protocol.\r\n\r\nThis type is not designed for use from user code, it is public so it can be shared between the SignalR server and client. It may also be used by customer SignalR clients written in .NET. **Users** of SignalR should not be affected by this change.\r\n\r\nUse https://github.com/aspnet/AspNetCore/issues/11098 to discuss this.","Url":"https://github.com/aspnet/Announcements/issues/368","RelatedDescription":"Open issue \"SignalR HandshakeProtocol.SuccessHandshakeData removed and replaced with helper method\" (#368)"},{"Id":"454782204","IsPullRequest":false,"CreatedAt":"2019-06-11T16:13:43","Actor":"anurse","Number":"367","RawContent":null,"Title":"DebugLogger class made internal in ASP.NET Core 3.0","State":"open","Body":"The [`DebugLogger`](https://github.com/aspnet/Extensions/blob/28f85d7af4f2aef88939ad44a4852b8ebdbddb51/src/Logging/Logging.Debug/src/DebugLogger.cs) class was never intended to be constructed by user code. It is only constructed by the `DebugLoggerProvider` class. In 3.0 we are cleaning this up by making `DebugLogger` internal, to match with other logger implementations (such as `ConsoleLogger`, etc.).\r\n\r\nPlease use https://github.com/aspnet/Extensions/issues/1823 for discussions.","Url":"https://github.com/aspnet/Announcements/issues/367","RelatedDescription":"Open issue \"DebugLogger class made internal in ASP.NET Core 3.0\" (#367)"},{"Id":"453603343","IsPullRequest":false,"CreatedAt":"2019-06-07T16:46:11","Actor":"Tratcher","Number":"366","RawContent":null,"Title":"OAuthHandler ExchangeCodeAsync signature change","State":"open","Body":"As part of https://github.com/aspnet/AspNetCore/pull/10928, a breaking change was introduced in 3.0.0-preview7 where the signature of OAuthHandler.ExchangeCodeAsync was changed from:\r\n```\r\nprotected virtual System.Threading.Tasks.Task<Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse> ExchangeCodeAsync(string code, string redirectUri) { throw null; }\r\n```\r\nTo:\r\n```\r\nprotected virtual System.Threading.Tasks.Task<Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse> ExchangeCodeAsync(Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext context) { throw null; }\r\n```\r\n\r\nThis change was made in order to flow additional parameters.\r\n\r\nOAuth handlers that override this API will need to be updated.\r\n\r\nSee https://github.com/aspnet/AspNetCore/issues/10991 for discussion.","Url":"https://github.com/aspnet/Announcements/issues/366","RelatedDescription":"Open issue \"OAuthHandler ExchangeCodeAsync signature change\" (#366)"},{"Id":"451701589","IsPullRequest":false,"CreatedAt":"2019-06-03T21:39:20","Actor":"pranavkm","Number":"364","RawContent":null,"Title":"Breaking changes to Microsoft.JSInterop ","State":"open","Body":"In 3.0-preview6, we're migrating Microsoft.JSInterop to use the System.Text.Json based serializer. As part of this transition, there are several breaking changes to the JSInterop library:\r\n\r\n* The helper type `Microsoft.JSInterop.Json` is being removed. Users may use a JSON serializer of their choice. We recommend using the `System.Text.Json`-based serializer since Blazor already references it. Here's the code change required to migrate to use `System.Text.Json`:\r\n\r\n```C#\r\n// Before\r\nstring value = Json.Serialize(...);\r\nMyPoco poco = Json.Deserialize<MyPoco>(\"...\");\r\n\r\n// After\r\nusing System.Text.Json.Serialization;\r\n...\r\n\r\nstring value = JsonSerializer.ToString(...);\r\nMyPoco poco = JsonSerializer.Parse<MyPoco>(\"...\");\r\n```\r\n\r\n* `DotNetObjectRef` is replaced by a generic `DotNetObjectRef<T>` that is required for both sending and receiving a managed object reference when doing interop with the browser\r\n    \r\n```C#\r\n// Before\r\nIJSRuntime.InvokeAsync(\"SomeJSMethod\", new DotNetObjectRef(someObject));\r\n\r\n[JSInvokable]\r\npublic static Task SomeDotNetMethod(MyObject myObject)\r\n{\r\n    ...\r\n}\r\n\r\n// After\r\nIJSRuntime.InvokeAsync(\"SomeMethod\", DotNetObjectRef.Create(someObject));\r\n\r\n[JSInvokable]\r\npublic static Task SomeDotNetMethod(DotNetObjectRef<MyObject> myObject)\r\n{\r\n    ...\r\n}\r\n```\r\n\r\n* Microsoft.JSInterop will use System.Text.Json to marshal interop data. To customize serialization, you may use serialization primitives such as `JsonPropertyNameAttribute`, `JsonIgnoreAttribute ` etc.\r\n\r\n* `IJSRuntime.UntrackObjectRef(DotNetObjectRef);` has been removed. To stop tracking an object reference, dispose the `DotNetObjectRef<T>` instance either on the server or the client.\r\n\r\nPlease use https://github.com/aspnet/AspNetCore/issues/10810 for further discussions.","Url":"https://github.com/aspnet/Announcements/issues/364","RelatedDescription":"Open issue \"Breaking changes to Microsoft.JSInterop \" (#364)"},{"Id":"451308302","IsPullRequest":false,"CreatedAt":"2019-06-03T06:11:51","Actor":"davidfowl","Number":"363","RawContent":null,"Title":"Kestrel's transport abstractions have been removed and made public instead of pubternal","State":"open","Body":"As part of moving away from pubternal APIs in we're in the process of exposing the Kestrel transport layer as a public interface in 3.0. Read more details here https://github.com/aspnet/AspNetCore/issues/10308. As part of this change:\r\n\r\n- **Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions** has been removed (and all associated types)\r\n- `NoDelay` was remove from `ListenOptions` (and move to the transport options)\r\n- `SchedulingMode` was removed from `KestrelServerOptions`","Url":"https://github.com/aspnet/Announcements/issues/363","RelatedDescription":"Open issue \"Kestrel's transport abstractions have been removed and made public instead of pubternal\" (#363)"},{"Id":"451301655","IsPullRequest":false,"CreatedAt":"2019-06-03T05:44:23","Actor":"BrennanConroy","Number":"362","RawContent":null,"Title":"UseSignalR and UseConnections are marked obsolete","State":"open","Body":"The methods `UseConnections` and `UseSignalR`, and the classes `ConnectionsRouteBuilder` and `HubRouteBuilder` are being marked obsolete in 3.0. And will be removed in the next major release after that.\r\n\r\nThe preferred method for using SignalR starting in 3.0 is to use Endpoint Routing. See example below.\r\n\r\nOld code:\r\n```csharp\r\napp.UseSignalR(routes =>\r\n{\r\n    routes.MapHub<SomeHub>(\"/path\");\r\n});\r\n```\r\n\r\nNew code:\r\n```csharp\r\napp.UseEndpoints(endpoints =>\r\n{\r\n    endpoints.MapHub<SomeHub>(\"/path\");\r\n});\r\n```\r\n\r\nSee https://github.com/aspnet/AspNetCore/issues/10754 for discussion.","Url":"https://github.com/aspnet/Announcements/issues/362","RelatedDescription":"Open issue \"UseSignalR and UseConnections are marked obsolete\" (#362)"},{"Id":"451034262","IsPullRequest":false,"CreatedAt":"2019-06-01T02:24:00","Actor":"HaoK","Number":"361","RawContent":null,"Title":"SignInAsync will throw by default when given an unauthenticated identity ","State":"open","Body":"Historically, `SignInAsync` would accept any principals/identities, this included identities where `IsAuthenticated = false`. This was problematic because by default these principals would get rejected by `[Authorize]`/`RequireAuthenticatedUser()`.\r\n\r\nThere is a new flag on `AuthenticationOptions` called `RequireAuthenticatedSignIn` which is true by default as of 3.0-preview6, you can turn this off if you require the old behavior.\r\n\r\nFor more context see: https://github.com/aspnet/AspNetCore/issues/9255","Url":"https://github.com/aspnet/Announcements/issues/361","RelatedDescription":"Open issue \"SignInAsync will throw by default when given an unauthenticated identity \" (#361)"},{"Id":"448250666","IsPullRequest":false,"CreatedAt":"2019-05-24T16:17:01","Actor":"Tratcher","Number":"360","RawContent":null,"Title":"Kestrel Request trailer headers moved to new collection","State":"open","Body":"In prior versions Kestrel would add HTTP/1.1 chunked trailer headers into the request headers collection when the request body was read to the end. This caused some concerns about ambiguity between headers and trailers so we decided to separate the trailers out to a new collection.\r\n\r\nHTTP/2 request trailers were unavailable in 2.2, but are now also available in this new collection in 3.0.0-preview6.\r\n\r\nNew [request extension methods](https://github.com/aspnet/AspNetCore/blob/3be11f6544485948ba17646ffa7b4242c2c5339a/src/Http/Http.Abstractions/src/Extensions/RequestTrailerExtensions.cs) have been added to access these trailers.\r\n\r\nHTTP/1.1 trailers are available once the entire request body has been read.\r\n\r\nHTTP/2 trailers are available as soon as they’re received from the client, but the client won’t send them until the entire request body has been at least buffered by the server.  You may need to read the request body to free up buffer space. Trailers will always be available if you read the request body to the end, as the trailers mark the end of the body.\r\n\r\nSee https://github.com/aspnet/AspNetCore/pull/10410 for the changes.\r\n\r\nSee https://github.com/aspnet/AspNetCore/issues/10519 for discussion.\r\n","Url":"https://github.com/aspnet/Announcements/issues/360","RelatedDescription":"Open issue \"Kestrel Request trailer headers moved to new collection\" (#360)"},{"Id":"444025246","IsPullRequest":false,"CreatedAt":"2019-05-14T17:00:32","Actor":"blowdart","Number":"359","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0982: ASP.NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0982: ASP.NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability exists when ASP.NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an ASP.NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the ASP.NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how the ASP.NET Core web application handles web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/AspNetCore/issues/10238\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny ASP.NET Core based application that uses any of following vulnerable packages:\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.AspNetCore.SignalR.Protocols.MessagePack | 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4<br/>1.1.0 | 1.0.11<br/>1.1.5\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are also available separately as a NuGet package. If you are not using `Microsoft.AspNetCore.SignalR.Protocols.MessagePack` directly you may still be affected if you are using SignalR and the package is a transitive dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.SignalR.Protocols.MessagePack\" Version=\"1.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.SignalR.Protocols.MessagePack\" Version=\"1.0.11\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.SignalR.Protocols.MessagePack\" Version=\"1.0.11\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0892](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0982)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_\r\n","Url":"https://github.com/aspnet/Announcements/issues/359","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0982: ASP.NET Core Denial of Service Vulnerability\" (#359)"},{"Id":"442525964","IsPullRequest":false,"CreatedAt":"2019-05-10T03:49:06","Actor":"anurse","Number":"358","RawContent":null,"Title":"TestServer no longer preserves ExecutionContext and AsyncLocals between client and server","State":"open","Body":"**Note: This change affects test code using [`TestServer`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.testhost.testserver?view=aspnetcore-2.2&viewFallbackFrom=aspnetcore-3.0) only.**\r\n\r\nStarting in ASP.NET Core 3.0 Preview 6, the [`ExecutionContext`](https://docs.microsoft.com/en-us/dotnet/api/system.threading.executioncontext?view=netcore-3.0) will no longer be preserved when making HTTP requests to `TestServer`.\r\n\r\nAs a result of this change, the `ExecutionContext` in the _calling code_ will not be available to the _server code_. This means the following values which use `ExecutionContext` as their underlying storage will not be preserved when performing an HTTP request over `TestServer`:\r\n\r\n* [`Thread.CurrentCulture`](https://docs.microsoft.com/en-us/dotnet/api/system.threading.thread.currentculture?view=netcore-3.0)\r\n* [`CultureInfo.CurrentCulture`](https://docs.microsoft.com/en-us/dotnet/api/system.globalization.cultureinfo.currentculture?view=netcore-3.0)\r\n* [`CultureInfo.CurrentUICulture`](https://docs.microsoft.com/en-us/dotnet/api/system.globalization.cultureinfo.currentuiculture?view=netcore-3.0)\r\n* [`Activity.Current`](https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.activity.current?view=netcore-3.0)\r\n* [`Thread.CurrentPrincipal`](https://docs.microsoft.com/en-us/dotnet/api/system.threading.thread.currentprincipal?view=netcore-3.0)\r\n* Other values which use [`AsyncLocal<T>`](https://docs.microsoft.com/en-us/dotnet/api/system.threading.asynclocal-1?view=netframework-4.8) for storage.\r\n\r\nIf the previous behavior is required by your test code, you can restore it by setting the `PreserveExecutionContext` property on `TestServer` to `true`:\r\n\r\n```csharp\r\nvar server = new TestServer(webHostBuilder) \r\n{\r\n\tPreserveExecutionContext = true;\r\n};\r\n```\r\n\r\nSee https://github.com/aspnet/AspNetCore/issues/10134 for discussion.","Url":"https://github.com/aspnet/Announcements/issues/358","RelatedDescription":"Open issue \"TestServer no longer preserves ExecutionContext and AsyncLocals between client and server\" (#358)"},{"Id":"434918782","IsPullRequest":false,"CreatedAt":"2019-04-18T19:14:43","Actor":"ryanbrandenburg","Number":"357","RawContent":null,"Title":"Default Bootstrap version of IdentityUI changed to 4","State":"open","Body":"Currently the default version of Bootstrap for IdentityUI is `UIFramework.Bootstrap3`, but starting in 3.0.0-preview4 the default will be `UIFramework.Bootstrap4`. We think this better reflects our recomendation that new projects use Bootstrap4.\r\n\r\nYou will be affected by this change if you use IdentityUI but do not explicitly set a UIFramework. There are two ways to resolve this:\r\n\r\n1. [Move your project to Bootstrap4](https://getbootstrap.com/docs/4.0/migration/).\r\n2. Explicitly set your project to Bootstrap3 by calling `services.AddDefaultIdentity<IdentityUser>().AddDefaultUI(UIFramework.Bootstrap3)`.\r\n\r\nUse issue: aspnet/AspNetCore#9516 for discussion.","Url":"https://github.com/aspnet/Announcements/issues/357","RelatedDescription":"Open issue \"Default Bootstrap version of IdentityUI changed to 4\" (#357)"},{"Id":"434911327","IsPullRequest":false,"CreatedAt":"2019-04-18T18:55:59","Actor":"halter73","Number":"356","RawContent":null,"Title":"HeaderNames now contains static readonly fields instead of const fields","State":"open","Body":"The static [Microsoft.Net.Http.Headers.HeaderNames](https://docs.microsoft.com/en-us/dotnet/api/microsoft.net.http.headers.headernames?view=aspnetcore-2.2) class contains string fields representing various common header names (e.g. [HeaderNames.Origin](https://docs.microsoft.com/en-us/dotnet/api/microsoft.net.http.headers.headernames.origin?view=aspnetcore-2.2)). Starting in ASP.NET Core 3.0 Preview 5, these will change from const fields to static readonly fields.\r\n\r\nWhile this is not a binary breaking change, source code that used these fields as an argument attribute, a case in a switch statement, or when defining another constant will no longer be able to do so. To work around this break, developers can switch to using self-defined header name constants or string literals.\r\n\r\nSee aspnet/AspNetCore#9514 for discussion.","Url":"https://github.com/aspnet/Announcements/issues/356","RelatedDescription":"Open issue \"HeaderNames now contains static readonly fields instead of const fields\" (#356)"},{"Id":"434539478","IsPullRequest":false,"CreatedAt":"2019-04-18T00:24:54","Actor":"natemcmaster","Number":"355","RawContent":null,"Title":"Breaking change: DataProtection.AzureStorage 3.0 will be updated to use new Microsoft.Azure.Storage APIs","State":"open","Body":"Microsoft.AspNetCore.DataProtection.AzureStorage depends on the [Azure Storage libraries](https://github.com/Azure/azure-storage-net). Recently, these libraries have renamed their assemblies, packages, and namespaces. Starting in ASP.NET Core 3.0 Preview 5, we have moved our dependency to use the new Microsoft.Azure.Storage.\\* APIs and packages. \r\n\r\nChanges to your code may be necessary to use the new API. In many cases, the upgrade may be as simple as changing the `using` statements to use the new namespaces.\r\n\r\n```diff\r\n- using Microsoft.WindowsAzure.Storage;\r\n- using Microsoft.WindowsAzure.Storage.Blob;\r\n+ using Microsoft.Azure.Storage;\r\n+ using Microsoft.Azure.Storage.Blob;\r\n```\r\n\r\nThere is currently no plan to update 2.1 or 2.2 to use this new dependency as this would be a significant breaking change for the Microsoft.AspNetCore.All shared framework.\r\n\r\nIf you still need to use the older Azure Storage APIs with ASP.NET Core 3.0, add a direct dependency to the [WindowsAzure.Storage](https://www.nuget.org/packages/WindowsAzure.Storage/) package. This can be installed side-by-side with the new Microsoft.Azure.Storage APIs.\r\n\r\nFor questions about the Azure Storage APIs, use https://github.com/Azure/azure-storage-net.\r\nUse https://github.com/aspnet/AspNetCore/issues/8472 for discussion on this issue.","Url":"https://github.com/aspnet/Announcements/issues/355","RelatedDescription":"Open issue \"Breaking change: DataProtection.AzureStorage 3.0 will be updated to use new Microsoft.Azure.Storage APIs\" (#355)"},{"Id":"434009074","IsPullRequest":false,"CreatedAt":"2019-04-16T22:15:29","Actor":"JunTaoLuo","Number":"354","RawContent":null,"Title":"Making \"pubinternal\" types in ResponseCaching internal","State":"open","Body":"In ASP.NET Core, pubinternal types are types that are declared as public but put in an .Internal namespace. While these types are public they have no support policy and are subject to breaking changes. Unfortunately accidental use of these types has been common, resulting in breaking changes to these projects and limiting our ability to maintain the framework.\r\n\r\nIn ASP.NET Core 3.0, we are moving pubinternal types in ResponseCaching to internal. This includes the following types:\r\n\r\n```\r\nMicrosoft.AspNetCore.ResponseCaching.Internal.CachedResponse\r\nMicrosoft.AspNetCore.ResponseCaching.Internal.CachedVaryByRules\r\nMicrosoft.AspNetCore.ResponseCaching.Internal.IResponseCache\r\nMicrosoft.AspNetCore.ResponseCaching.Internal.IResponseCacheEntry\r\nMicrosoft.AspNetCore.ResponseCaching.Internal.IResponseCachingKeyProvider\r\nMicrosoft.AspNetCore.ResponseCaching.Internal.IResponseCachingPolicyProvider\r\nMicrosoft.AspNetCore.ResponseCaching.Internal.MemoryResponseCache\r\nMicrosoft.AspNetCore.ResponseCaching.Internal.ResponseCachingContext\r\nMicrosoft.AspNetCore.ResponseCaching.Internal.ResponseCachingKeyProvider\r\nMicrosoft.AspNetCore.ResponseCaching.Internal.ResponseCachingPolicyProvider\r\n```\r\n\r\nIn addition, a default implementation for `IResponseCachingPolicyProvider` and `IResponseCachingKeyProvider` will no longer be added to services as part of `AddResponseCaching` method. Also, the constructor for ResponseCachingMiddleware has been changed from:\r\n```C#\r\npublic ResponseCachingMiddleware(RequestDelegate next, IOptions<ResponseCachingOptions> options, ILoggerFactory loggerFactory, IResponseCachingPolicyProvider policyProvider, IResponseCachingKeyProvider keyProvider)\r\n```\r\nto:\r\n```C#\r\npublic ResponseCachingMiddleware(RequestDelegate next, IOptions<ResponseCachingOptions> options, ILoggerFactory loggerFactory, ObjectPoolProvider poolProvider)\r\n```\r\n\r\nIf if any changes to these types are critical to your applications, please file an issue in https://github.com/aspnet/Aspnetcore.\r\n\r\nUse https://github.com/aspnet/AspNetCore/issues/9442 for discussion on this topic.","Url":"https://github.com/aspnet/Announcements/issues/354","RelatedDescription":"Open issue \"Making \"pubinternal\" types in ResponseCaching internal\" (#354)"},{"Id":"432739053","IsPullRequest":false,"CreatedAt":"2019-04-12T20:46:40","Actor":"Tratcher","Number":"353","RawContent":null,"Title":"Generic Host restricts Startup constructor injection","State":"open","Body":"TLDR: The only types the generic Host supports for Startup constructor injection are `IHostEnvironment`, `IWebHostEnvironment`, and `IConfiguration`. Applications using WebHost are unaffected.\r\n\r\nIn 3.0 we've re-platformed the web stack onto the generic host library. You can see the change in Program.cs in the templates:\r\n\r\n2.x:\r\nhttps://github.com/aspnet/AspNetCore/blob/5cb615fcbe8559e49042e93394008077e30454c0/src/Templating/src/Microsoft.DotNet.Web.ProjectTemplates/content/EmptyWeb-CSharp/Program.cs#L20-L22\r\n3.0:\r\nhttps://github.com/aspnet/AspNetCore/blob/b1ca2c1155da3920f0df5108b9fedbe82efaa11c/src/ProjectTemplates/Web.ProjectTemplates/content/EmptyWeb-CSharp/Program.cs#L19-L24\r\n\r\nOne key behavior change here is that Host only uses one dependency injection container to build the application, as opposed to WebHost that used one for the host and one for the app. As a result the Startup constructor no longer supports custom service injection, only `IHostEnvironment`, `IWebHostEnvironment`, and `IConfiguration` can be injected. This change was made to avoid DI issues such as duplicate singleton services getting created.\r\n\r\nMitigations:\r\n\r\n Inject services into Startup.Configure:\r\n`public void Configure(IApplicationBuilder app, IOptions<MyOptions> options)`\r\n\r\n[We'll add more based on requests for specific scenarios.]\r\n\r\nSee https://github.com/aspnet/AspNetCore/issues/9337 for discussion.","Url":"https://github.com/aspnet/Announcements/issues/353","RelatedDescription":"Open issue \"Generic Host restricts Startup constructor injection\" (#353)"},{"Id":"431074054","IsPullRequest":false,"CreatedAt":"2019-04-09T16:52:55","Actor":"shirhatti","Number":"352","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0815: ASP.NET Core denial of service vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0815: ASP.NET Core denial of service vulnerability\r\n\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in public ASP.NET Core 2.2. This advisory also provides guidance on what developers can do to update their applications correctly.\r\nMicrosoft is aware of a security vulnerability in all public versions of ASP.NET Core where, if an application is hosted on Internet Information Server (IIS) a remote unauthenticated attacker can use a specially crafted request can cause a Denial of Service. The security update addresses the vulnerability by ensuring the IIS worker process does not crash in response to specially crafted requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/AspNetCore/issues/9205\r\n\r\n\r\n## Affected Software\r\n\r\nThe vulnerability affects any Microsoft ASP.NET Core 2.2 applications if it is hosted on an IIS server running AspNetCoreModuleV2 (ANCM) prior to and including version 12.2.19024.2.\r\n\r\nThe vulnerability affects any Microsoft ASP.NET Core 1.0/1.1/2/1 application if they have explicitly opted into using the newer AspNetCoreModuleV2 (ANCM) prior to and including  version 12.2.19024.2.\r\n\r\n## Advisory FAQ\r\n\r\n### How do I know if I am affected?\r\n\r\nYou are affected if **BOTH** criteria below are met.\r\n\r\n1.\tThe AspNetCoreModuleV2 module is used by your application\r\n\r\nThe modules attribute in the handler mapping section of the web.config of your application must exactly match the string `AspNetCoreModuleV2`.\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <location path=\".\" inheritInChildApplications=\"false\">\r\n    <system.webServer>\r\n      <handlers>\r\n        <add name=\"aspNetCore\" path=\"*\" verb=\"*\" modules=\"AspNetCoreModuleV2\" resourceType=\"Unspecified\" />\r\n      </handlers>\r\n      <aspNetCore processPath=\"dotnet\" arguments=\".\\myapp.dll\" stdoutLogEnabled=\"false\" stdoutLogFile=\".\\logs\\stdout\" hostingModel=\"inprocess\" />\r\n    </system.webServer>\r\n  </location>\r\n</configuration>\r\n```\r\n2.\tThe version of AspNetCoreModuleV2 module installed on your machine is less than or equal to 12.2.19024.2\r\n\r\nOpen a PowerShell prompt and run the following command\r\n\r\n```ps1\r\n(Get-Item \"$env:ProgramFiles\\IIS\\Asp.Net Core Module\\V2\\aspnetcorev2.dll\").VersionInfo\r\n```\r\n\r\nor use the Windows file properties dialog to check the version on C:\\Program Files\\IIS\\Asp.Net Core Module\\V2\\aspnetcorev2.dll, where C: is your OS install drive.\r\n\r\nHow do I fix the issue?\r\n\r\nInstall the latest version of the ASP.NET Core Runtime & Hosting Bundle 2.2.\r\n\r\nThen restart IIS by running\r\n\r\n```cmd\r\nnet stop was /y\r\nnet start w3svc\r\n```\r\nfrom an elevated command line.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0815](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0815)\r\n\r\n### Revisions\r\n\r\nV1.0 (Apr 9 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2019-04-09_\r\n","Url":"https://github.com/aspnet/Announcements/issues/352","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0815: ASP.NET Core denial of service vulnerability\" (#352)"},{"Id":"428354031","IsPullRequest":false,"CreatedAt":"2019-04-02T17:33:22","Actor":"pranavkm","Number":"351","RawContent":null,"Title":"Async suffix for controller action names will be trimmed by default","State":"open","Body":"As part of addressing https://github.com/aspnet/AspNetCore/issues/4849, ASP.NET Core MVC will trim the suffix `Async` from action names by default. This affects routing and link generation.\r\n\r\nConsider\r\n```C#\r\npublic class ProductController : Controller\r\n{\r\n    public async IActionResult ListAsync()\r\n    {\r\n        var model = await DbContext.Products.ToListAsync();\r\n        return View(model);\r\n    }\r\n}\r\n```\r\n\r\nPrior to 3.0, the action will be routeable via `Product/ListAsync`. Link generation would require specifying the `Async` suffix e.g.\r\n\r\n`<a asp-controller=\"Product\" asp-action=\"ListAsync\">List</a>`\r\n\r\nIn 3.0, the action will be routeable via `Product/List` and link generation would require not specifying the `Async` suffix e.g.\r\n\r\n`<a asp-controller=\"Product\" asp-action=\"List\">List</a>`\r\n\r\nThis change does not affect names specified using the `ActionNameAttribute`. This behavior can be disabled by setting `MvcOptions.SuppressAsyncSuffixInActionNames` to `false` as part of the application startup:\r\n\r\n```C#\r\nservices.AddMvc(options =>\r\n{\r\n   options.SuppressAsyncSuffixInActionNames = false; \r\n});\r\n```\r\n","Url":"https://github.com/aspnet/Announcements/issues/351","RelatedDescription":"Open issue \"Async suffix for controller action names will be trimmed by default\" (#351)"},{"Id":"426009751","IsPullRequest":false,"CreatedAt":"2019-03-27T14:57:05","Actor":"scottaddie","Number":"350","RawContent":null,"Title":"For contributors: moved ASP.NET 4.x docs to new GitHub repo","State":"open","Body":"In an effort to reduce the GitHub repo size and to reduce docset build times, the [ASP.NET 4.x product documentation](https://docs.microsoft.com/aspnet/overview) has migrated from the [aspnet/Docs repo](https://github.com/aspnet/Docs) to the [aspnet/AspNetDocs repo](https://github.com/aspnet/AspNetDocs).\r\n\r\nTo continue making contributions to ASP.NET 4.x documentation, create a local clone of the aspnet/AspNetDocs repo. To continue making contributions to ASP.NET Core documentation, please refresh your local clone.\r\n\r\nIn the near future, the team plans to rewrite the commit history in aspnet/Docs. We realize this is an extreme step, but we feel it's worth doing to reduce the repo size by ~70%. At that point, contributors will need to reclone aspnet/Docs. Look for another announcement when that change occurs. ","Url":"https://github.com/aspnet/Announcements/issues/350","RelatedDescription":"Open issue \"For contributors: moved ASP.NET 4.x docs to new GitHub repo\" (#350)"},{"Id":"421606357","IsPullRequest":false,"CreatedAt":"2019-03-15T16:36:22","Actor":"mikaelm12","Number":"349","RawContent":null,"Title":"ResetSendPing and ResetTimeout APIs Removed from SignalR HubConnection class","State":"open","Body":"The `ResetSendPing` and `ResetTimeout` APIs were removed from the SignalR's `HubConnection` API. These methods were originally intended only for internal use but were made public in 2.2. These API's will no longer be available starting in the 3.0 Preview 4 release.\r\nUse issue: https://github.com/aspnet/AspNetCore/issues/8543 for discussion.","Url":"https://github.com/aspnet/Announcements/issues/349","RelatedDescription":"Open issue \"ResetSendPing and ResetTimeout APIs Removed from SignalR HubConnection class\" (#349)"},{"Id":"417460531","IsPullRequest":false,"CreatedAt":"2019-03-05T19:17:25","Actor":"Tratcher","Number":"348","RawContent":null,"Title":"Some Cookie SameSite defaults changed to None","State":"open","Body":"SameSite is an option for cookies that can help mitigate some XSS attacks. Each component that emits cookies need to decide if SameSite is appropriate for their scenarios. When this option was initially introduced inconsistent defaults were used across various AspNetCore APIs that has lead to confusing results. In 3.0.0-preview4 we've better aligned these defaults and made the feature opt-in on a per-component basis.\r\n\r\nAffected APIs:\r\n- `CookieOptions` used with `HttpResponse.Cookies.Append` has changed its default from `SameSiteMode.Lax` to `SameSiteMode.None`.\r\n- `CookieBuilder` used as a factory for `CookieOptions` has changed its default from `SameSiteMode.Lax` to `SameSiteMode.None`.\r\n- `CookiePolicyOptions.MinimumSameSitePolicy` has changed its default from `SameSiteMode.Lax` to `SameSiteMode.None`.\r\n\r\nNote all AspNetCore components that emit cookies override these defaults with settings appropriate for their scenarios and these values have not changed:\r\n- Session: Lax\r\n- CookieTempDataProvider: Lax\r\n- Antiforgery: Strict\r\n- CookieAuthentication: Lax\r\n- TwitterAuthentication state cookie: Lax\r\n- RemoteAuthentication correlation cookie (OAuth): None\r\n- OpenIdConnect nonce cookie: None\r\n\r\nSee https://github.com/aspnet/AspNetCore/issues/8212 for discussion","Url":"https://github.com/aspnet/Announcements/issues/348","RelatedDescription":"Open issue \"Some Cookie SameSite defaults changed to None\" (#348)"},{"Id":"416332368","IsPullRequest":false,"CreatedAt":"2019-03-02T00:38:03","Actor":"pranavkm","Number":"347","RawContent":null,"Title":"Microsoft.Interop.JSRuntime.Current has been removed","State":"open","Body":"In ASP.NET Core 3.0.0-preview3, we are removing the ability to access the `Microsoft.Interop.IJSRuntime` via the static `JSRuntime.Current` property. Application users may continue to access the `IJSRuntime` instance by injecting it in to their components. For example,\r\n\r\nPreviously:\r\n\r\n```C#\r\n// Stock.cshtml\r\n@functions {\r\n    \r\n    public override void OnInit()\r\n    {\r\n        StocksService.OnStockTickerUpdated += stockUpdate =>\r\n        {\r\n            JSRuntime.Current.InvokeAsync<object>(\r\n                \"handleTickerChanged\", stockUpdate.symbol, stockUpdate.price);\r\n        };\r\n    }\r\n}\r\n\r\n```\r\n\r\nAfter 3.0.0-preview3,\r\n\r\n```C#\r\n// Stock.cshtml\r\n@inject IJSRuntime JSRuntime\r\n\r\n@functions {\r\n    \r\n    public override void OnInit()\r\n    {\r\n        StocksService.OnStockTickerUpdated += stockUpdate =>\r\n        {\r\n            JSRuntime.InvokeAsync<object>(\r\n                \"handleTickerChanged\", stockUpdate.symbol, stockUpdate.price);\r\n        };\r\n    }\r\n}\r\n```\r\n\r\nRelated issue: https://github.com/aspnet/AspNetCore/issues/6828\r\n\r\nPlease use https://github.com/aspnet/AspNetCore/issues/8117 for discussions.","Url":"https://github.com/aspnet/Announcements/issues/347","RelatedDescription":"Open issue \"Microsoft.Interop.JSRuntime.Current has been removed\" (#347)"},{"Id":"412597806","IsPullRequest":false,"CreatedAt":"2019-02-20T19:47:08","Actor":"ryanbrandenburg","Number":"346","RawContent":null,"Title":"ResourceManagerWithCultureStringLocalizer class and WithCulture interface member marked Obsolete and will be removed","State":"open","Body":"The [ResourceManagerWithCultureStringLocalizer](https://github.com/aspnet/Localization/blob/43b974482c7b703c92085c6f68b3b23d8fe32720/src/Microsoft.Extensions.Localization/ResourceManagerWithCultureStringLocalizer.cs#L18) class and [WithCulture](https://github.com/aspnet/Localization/blob/master/src/Microsoft.Extensions.Localization/ResourceManagerStringLocalizer.cs#L154-L170) interface member are often sources of confusion for users of Localization, especially if they want to create their own `IStringLocalizer` implementation. These items give the user the impression that we expect an `IStringLocalizer` instance to be \"per-language, per-resource\", when actually they should only be \"per-resource\", with the language searched for determined by the `CultureInfo.CurrentUICulture` at execution time. To remove this source of confusion and to avoid APIs which we don't want users to use we will be obsoleting these in 3.0.0-preview3, and they will be removed in a future release (4.0 or above). \r\n\r\nFor context, see [here](https://github.com/aspnet/AspNetCore/issues/3324).\r\n\r\nSee aspnet/AspNetCore#7756 for discussion.","Url":"https://github.com/aspnet/Announcements/issues/346","RelatedDescription":"Open issue \"ResourceManagerWithCultureStringLocalizer class and WithCulture interface member marked Obsolete and will be removed\" (#346)"},{"Id":"412572457","IsPullRequest":false,"CreatedAt":"2019-02-20T18:43:44","Actor":"natemcmaster","Number":"345","RawContent":null,"Title":"For contributors: using Visual Studio on aspnet repos requires installing or upgrading to 2019","State":"open","Body":"We are updating the master branch of the following repos to require Visual Studio 2019. \r\n\r\n* aspnet/AspNetCore\r\n* aspnet/AspNetCore-Tooling\r\n* aspnet/EntityFrameworkCore\r\n* aspnet/Extensions\r\n\r\nThe .NET Core 3.0 SDK requires MSBuild 16, which is currently only supported by Visual Studio 2019. VS 2019 will be [released on April 2](https://devblogs.microsoft.com/visualstudio/join-us-april-2nd-for-the-launch-of-visual-studio-2019/).  In the meantime, you can get VS 2019 Preview 3 here: https://visualstudio.microsoft.com/vs/preview/. \r\n\r\nIf you are working on the aspnet/AspNetCore repo, you can run [this script](https://github.com/aspnet/AspNetCore/blob/master/eng/scripts/InstallVisualStudio.ps1) to install or modify your current VS2019 installation to add features required by this repo.\r\n\r\n-------\r\n\r\nUse https://github.com/aspnet/AspNetCore/issues/7752 for discussion on this announcement.","Url":"https://github.com/aspnet/Announcements/issues/345","RelatedDescription":"Open issue \"For contributors: using Visual Studio on aspnet repos requires installing or upgrading to 2019\" (#345)"},{"Id":"412530214","IsPullRequest":false,"CreatedAt":"2019-02-20T16:58:53","Actor":"Tratcher","Number":"344","RawContent":null,"Title":"IHostingEnvironment's and IApplicationLifetime's marked obsolete and replaced","State":"open","Body":"When Microsoft.Extensions.Hosting was introduced in 2.1 some types like IHostingEnvironment and IApplicationLifetime were copied from Microsoft.AspNetCore.Hosting. Some 3.0 changes cause apps to include both the Microsoft.Extensions.Hosting and Microsoft.AspNetCore.Hosting namespaces. Any use of those duplicate types causes an \"ambiguous reference\" compiler error when both namespaces are referenced.\r\n\r\nThis error has been addressed in 3.0.0-preview3 by marking the following types obsolete and replacing them with new types. There have not been any behavioral changes made for the new types, only naming.\r\n\r\nObsolete types (warning):\r\nMicrosoft.Extensions.Hosting.IHostingEnvironment\r\nMicrosoft.AspNetCore.Hosting.IHostingEnvironment\r\nMicrosoft.Extensions.Hosting.IApplicationLifetime\r\nMicrosoft.AspNetCore.Hosting.IApplicationLifetime\r\nMicrosoft.Extensions.Hosting.EnvironmentName\r\nMicrosoft.AspNetCore.Hosting.EnvironmentName\r\n\r\nNew types:\r\nMicrosoft.Extensions.Hosting.IHostEnvironment\r\nMicrosoft.AspNetCore.Hosting.IWebHostEnvironment : IHostEnvironment\r\nMicrosoft.Extensions.Hosting.IHostApplicationLifetime\r\nMicrosoft.Extensions.Hosting.Environments\r\n\r\nNote the new IHostEnvironment IsDevelopment, IsProduction, etc. extension methods are in the Microsoft.Extensions.Hosting namespace which may need to be added to your app.\r\n\r\nFor 3.0 both the old and new types will be available from HostBulder's and WebHostBuilder's dependency injection containers. The old types will be removed in 4.0.\r\n\r\nSee https://github.com/aspnet/AspNetCore/issues/7749 for discussion.","Url":"https://github.com/aspnet/Announcements/issues/344","RelatedDescription":"Open issue \"IHostingEnvironment's and IApplicationLifetime's marked obsolete and replaced\" (#344)"},{"Id":"411004828","IsPullRequest":false,"CreatedAt":"2019-02-16T00:53:18","Actor":"pranavkm","Number":"343","RawContent":null,"Title":"Breaking changes to runtime compilation for Razor views and Razor Pages","State":"open","Body":"As a consequence of cleaning up the ASP.NET Core shared framework to not depend on Roslyn, support for runtime compilation of Razor views and Razor Pages is being moved to a separate package.\r\nApplications that require runtime compilation or re-compilation of Razor files should \r\n    \r\n* Add a reference to the `Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation` package\r\n* Update the application's `ConfigureServices` to include a call to `AddMvcRazorRuntimeCompilation`:\r\n\r\n```C#\r\nservices.AddMvc()\r\n    .AddMvcRazorRuntimeCompilation();\r\n```\r\n\r\nThe following APIs previously available on `Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions` to support runtime compilation would now be available via \r\n `Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation.MvcRazorRuntimeCompilationOptions`:\r\n\r\n* `RazorViewEngineOptions.FileProviders` -> `MvcRazorRuntimeCompilationOptions.FileProviders`\r\n* `RazorViewEngineOptions.AdditionalCompilationReferences` -> `MvcRazorRuntimeCompilationOptions.AdditionalReferencePaths`\r\n\r\nIn addition, `Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions.AllowRecompilingViewsOnFileChange` has been removed. Recompilation on file changes is enabled by default by referencing the `Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation` package.\r\n\r\nRelated issues: https://github.com/aspnet/Announcements/issues/312, https://github.com/aspnet/Announcements/issues/325\r\n\r\nPlease use https://github.com/aspnet/AspNetCore/issues/7647 for further discussions or questions.\r\n","Url":"https://github.com/aspnet/Announcements/issues/343","RelatedDescription":"Open issue \"Breaking changes to runtime compilation for Razor views and Razor Pages\" (#343)"},{"Id":"411000034","IsPullRequest":false,"CreatedAt":"2019-02-16T00:23:50","Actor":"Tratcher","Number":"342","RawContent":null,"Title":"AllowSynchronousIO disabled in all servers","State":"open","Body":"AllowSynchronousIO is a option in each server that enables or disables sync IO APIs like HttpReqeuest.Body.Read, HttpResponse.Body.Write, Stream.Flush, etc.. These APIs have long been a source of thread starvation and application hangs. Starting in 3.0.0-preview3 these are disabled by default.\r\n\r\nAffected servers:\r\n- Kestrel\r\n- HttpSys\r\n- IIS in-process\r\n- TestServer\r\n\r\nExpect errors similar to:\r\n- `Synchronous operations are disallowed. Call ReadAsync or set AllowSynchronousIO to true instead.`\r\n- `Synchronous operations are disallowed. Call WriteAsync or set AllowSynchronousIO to true instead.`\r\n- `Synchronous operations are disallowed. Call FlushAsync or set AllowSynchronousIO to true instead.`\r\n\r\nEach server has a AllowSynchronousIO option that controls this behavior and the default for all of them is now false.\r\n\r\nThe behavior can also be overridden on a per request basis as a temporary mitigation. \r\n```c#\r\nvar syncIOFeature = HttpContext.Features.Get<IHttpBodyControlFeature>();\r\nif (syncIOFeature != null)\r\n{\r\n    syncIOFeature.AllowSynchronousIO = true;\r\n}\r\n```\r\n\r\nIf you have trouble with TextWriters or other streams calling sync APIs in Dispose, call the new DisposeAsync API instead.\r\n\r\nSee https://github.com/aspnet/AspNetCore/issues/7644 for discussion.","Url":"https://github.com/aspnet/Announcements/issues/342","RelatedDescription":"Open issue \"AllowSynchronousIO disabled in all servers\" (#342)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1146188871404851201","CreatedAt":"2019-07-02T22:48:16+00:00","UserScreenname":"aspnet","Text":"And we're live! Join us at https://t.co/4Ioo9k5ubC https://t.co/j0WEVHG4RO","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":10,"RawContent":null},{"Id":"1145786569313456128","CreatedAt":"2019-07-01T20:09:40+00:00","UserScreenname":"aspnet","Text":"On this week's #AspNet Community Standup, we'll be talking to the #AspNetCore Docs Team.\n\nJoin us this Tuesday at 3… https://t.co/HV4edpHEZV","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":5,"RawContent":null},{"Id":"1141122064348090368","CreatedAt":"2019-06-18T23:14:35+00:00","UserScreenname":"aspnet","Text":"Our restarted, better than ever, #ASPNET Community Stanup stream is running: https://t.co/p4KrQwxuXM","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":7,"RawContent":null},{"Id":"1141118928782950400","CreatedAt":"2019-06-18T23:02:08+00:00","UserScreenname":"aspnet","Text":"Sorry the #ASPNET Community Standup dropped, we're restarting the stream as quickly as we can...","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":3,"RawContent":null},{"Id":"1141115445132447745","CreatedAt":"2019-06-18T22:48:17+00:00","UserScreenname":"aspnet","Text":"Join us now at https://t.co/4Ioo9jNSN2 or https://t.co/8NwJfWTQW7 for the #ASPNETCore 3.0 Preview 6 Release Party! https://t.co/8mhWVzMOaS","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":5,"RawContent":null},{"Id":"1140736418227970048","CreatedAt":"2019-06-17T21:42:10+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup is our #AspNetCore 3.0 Preview 6 Release Party! Join us for lots of cool demo… https://t.co/1N9ijPDQPN","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":15,"RawContent":null},{"Id":"1138855030595842049","CreatedAt":"2019-06-12T17:06:12+00:00","UserScreenname":"aspnet","Text":"#AspNetCore  and #Blazor updates in .NET Core 3.0 Preview 6\n\nhttps://t.co/A3gub7pd1j","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":209,"FavoriteCount":129,"RawContent":null},{"Id":"1138490955659526144","CreatedAt":"2019-06-11T16:59:30+00:00","UserScreenname":"aspnet","Text":"Starting now! Come join us to see @danroth27 dig into his Build Demo, the Blazing Pizza Deep Dive crazy time demo f… https://t.co/v3uvlxXxG0","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":6,"RawContent":null},{"Id":"1136037722047430656","CreatedAt":"2019-06-04T22:31:14+00:00","UserScreenname":"aspnet","Text":"Join us at 3:45 PM / 22:45 UTC Pacific for this week's #ASPNET Community Standup with the gRPC team! https://t.co/XoSnUvP8D2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":6,"RawContent":null},{"Id":"1135691069553700865","CreatedAt":"2019-06-03T23:33:45+00:00","UserScreenname":"aspnet","Text":"Get ready for this week's #ASPNET Community Standup (Tuesday 3:45 PM Pacific / 22:45 UTC): \n\ngRPC with @davidfowl… https://t.co/hdYVmsGL9a","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":44,"FavoriteCount":14,"RawContent":null},{"Id":"1123267883142864901","CreatedAt":"2019-04-30T16:48:27+00:00","UserScreenname":"aspnet","Text":"Starting soon! Join us at https://t.co/4Ioo9jNSN2 at 10 AM Pacific / 17 UTC. https://t.co/LEFV3VGl3A","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":7,"RawContent":null},{"Id":"1122954042458591237","CreatedAt":"2019-04-29T20:01:21+00:00","UserScreenname":"aspnet","Text":"Get ready for this week's #ASPNET Community Standup (Tuesday 10 AM Pacific / 17 UTC): \n\nASPNET Tooling with Taylor… https://t.co/eUEn7nK45f","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":15,"RawContent":null}]}},"RunOn":"2019-07-05T05:30:15.0612518Z","RunDurationInMilliseconds":3448}