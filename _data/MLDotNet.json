{"Data":{"GitHub":{"Issues":[{"Id":"444164446","IsPullRequest":true,"CreatedAt":"2019-05-15T04:46:22","Actor":"codemzs","Number":"3721","RawContent":null,"Title":"Brew install libomp 7.0.0 only.","State":"closed","Body":"Stop gap fix until #3722 is fixed.","Url":"https://github.com/dotnet/machinelearning/pull/3721","RelatedDescription":"Closed or merged PR \"Brew install libomp 7.0.0 only.\" (#3721)"},{"Id":"444228808","IsPullRequest":false,"CreatedAt":"2019-05-15T04:18:27","Actor":"sergey-tihon","Number":"3727","RawContent":null,"Title":"[AutoML] Incorrect columns type inference","State":"open","Body":"I have dataset in text file with 20 columns, 1st column is the class name (string), other columns are features (floats)\r\n\r\nHere are first lines of this file\r\n```\r\nClass\tA1\tA2\tA3\tA4\tA5\tA6\tA7\tA8\tA9\tA10\tA11\tA12\tA13\tA14\tA15\tA16\tA17\tA18\tA19\r\nCS\t61.00000\t0.16855\t0.00000\t1.77778\t3.00000\t0.25375\t0.07984\t0.00169\t0.02250\t0.01535\t0.07984\t0.01027\t0.27415\t6.00000\t4.00000\t0.37649\t3552.00000\t0\t26.00000\r\nCS\t316.00000\t0.14823\t15.00000\t1.77778\t10.00000\t0.02352\t0.00440\t0.20407\t0.00357\t0.00914\t0.03585\t0.14171\t0.01674\t21.00000\t4.00000\t0.14961\t4235.00000\t0\t17.00000\r\nCS\t176.00000\t0.00000\t20.00000\t1.77778\t3.00000\t0.01850\t0.19659\t0.00469\t0.03895\t0.00000\t0.19659\t0.59670\t0.19659\t10.00000\t5.00000\t0.23767\t3850.00000\t0\t24.00000\r\nCS\t133.00000\t0.00000\t4.00000\t1.33333\t3.00000\t0.00049\t0.01214\t0.22827\t0.18777\t0.18778\t0.12627\t0.00915\t0.18777\t11.00000\t7.00000\t0.32619\t1880.00000\t0\t16.00000\r\nCS\t140.00000\t0.00000\t14.00000\t1.33333\t1.00000\t0.01787\t0.02860\t0.48472\t0.02860\t0.59853\t0.02860\t1.06538\t0.02860\t9.00000\t7.00000\t0.02860\t1876.00000\t0\t142.00000\r\n```\r\nand the full file [data.txt](https://github.com/dotnet/machinelearning/files/3180842/data.txt)\r\n\r\nLet's execute AutoML\r\n\r\n> mlnet auto-train --task `multiclass-classification` --dataset \"data.txt\" --has-header --label-column-name `Class` --max-exploration-time 10\r\n\r\nas a  results AutoML will generate `ModelInput.cs` file that starts like this\r\n```csharp\r\n public class ModelInput\r\n    {\r\n        [ColumnName(\"Class\"), LoadColumn(0)]\r\n        public string Class { get; set; }\r\n        [ColumnName(\"A1\"), LoadColumn(1)]\r\n        public string A1 { get; set; }\r\n        [ColumnName(\"A2\"), LoadColumn(2)]\r\n        public string A2 { get; set; }\r\n        [ColumnName(\"A3\"), LoadColumn(3)]\r\n        public string A3 { get; set; }\r\n```\r\n\r\nall columns are recognized as `string` instead of `float` ðŸ˜¢\r\n\r\nas a result data pipeline also incorrect (`OneHotEncoding` was applied to numeric columns)\r\n```csharp\r\n            var dataProcessPipeline = mlContext.Transforms.Conversion.MapValueToKey(\"Class\", \"Class\")\r\n                .Append(mlContext.Transforms.Categorical.OneHotEncoding(new[]\r\n                {\r\n                    new InputOutputColumnPair(\"A3\", \"A3\"), new InputOutputColumnPair(\"A4\", \"A4\"),\r\n                    new InputOutputColumnPair(\"A5\", \"A5\"), new InputOutputColumnPair(\"A14\", \"A14\"),\r\n                    new InputOutputColumnPair(\"A15\", \"A15\"), new InputOutputColumnPair(\"A18\", \"A18\")\r\n                }))\r\n                .Append(mlContext.Transforms.Categorical.OneHotHashEncoding(new[]\r\n                {\r\n                    new InputOutputColumnPair(\"A1\", \"A1\"), new InputOutputColumnPair(\"A2\", \"A2\"),\r\n                    new InputOutputColumnPair(\"A6\", \"A6\"), new InputOutputColumnPair(\"A17\", \"A17\"),\r\n                    new InputOutputColumnPair(\"A19\", \"A19\")\r\n                }))\r\n                .Append(mlContext.Transforms.Concatenate(\"Features\",\r\n                    new[] {\"A3\", \"A4\", \"A5\", \"A14\", \"A15\", \"A18\", \"A1\", \"A2\", \"A6\", \"A17\", \"A19\"}))\r\n                .Append(mlContext.Transforms.NormalizeMinMax(\"Features\", \"Features\"))\r\n                .AppendCacheCheckpoint(mlContext);\r\n```\r\n\r\nWhy in this case all columns recognized as strings?\r\nWhy in some columns `OneHotHashEncoding` was used instead of `OneHotEncoding`?","Url":"https://github.com/dotnet/machinelearning/issues/3727","RelatedDescription":"Open issue \"[AutoML] Incorrect columns type inference\" (#3727)"},{"Id":"444217445","IsPullRequest":false,"CreatedAt":"2019-05-15T03:20:59","Actor":"danmosemsft","Number":"3726","RawContent":null,"Title":"What is the CLR bug mentioned in Div64Core","State":"open","Body":"I notice this in the code. Does anyone know where the mentioned CLR issue is tracked? I am curious whether we are fixing it.\r\n```\r\n        [MethodImpl(MethodImplOptions.AggressiveInlining)]\r\n        private static ulong Div64(ulong lo, ulong hi, ulong den, out ulong rem)\r\n        {\r\n            if (den == 0)\r\n                throw new DivideByZeroException();\r\n            if (hi >= den)\r\n                throw new OverflowException();\r\n            return Div64Core(lo, hi, den, out rem);\r\n        }\r\n\r\n        // REVIEW: on Linux, the hardware divide-by-zero exception is not translated into\r\n        // a managed exception properly by CoreCLR so the process will crash. This is a temporary fix\r\n        // until CoreCLR addresses this issue.\r\n        [DllImport(Thunk.NativePath, CharSet = CharSet.Unicode, EntryPoint = \"Div64\"), SuppressUnmanagedCodeSecurity]\r\n        private static extern ulong Div64Core(ulong lo, ulong hi, ulong den, out ulong rem);\r\n#endif\r\n```\r\n\r\n@TomFinley @eerhardt  @tannergooding ","Url":"https://github.com/dotnet/machinelearning/issues/3726","RelatedDescription":"Open issue \"What is the CLR bug mentioned in Div64Core\" (#3726)"},{"Id":"444180738","IsPullRequest":true,"CreatedAt":"2019-05-15T00:23:21","Actor":"srsaggam","Number":"3725","RawContent":null,"Title":"[AutoML] Fix Internationalization bug in generated project. ","State":"closed","Body":"Looks like in Deutsch culture the floats are causing compilation errors in generated project because of the strings that generated floats are culture specific. Need to make them culture invariant.\r\n\r\nExample : 1.1 -> 1,1 (deutsch)\r\ncloses #3677 ","Url":"https://github.com/dotnet/machinelearning/pull/3725","RelatedDescription":"Closed or merged PR \"[AutoML] Fix Internationalization bug in generated project. \" (#3725)"},{"Id":"444179676","IsPullRequest":true,"CreatedAt":"2019-05-15T00:11:24","Actor":"shmoradims","Number":"3724","RawContent":null,"Title":"Added usage example for LogLossPerClass metric for multiclass trainers","State":"open","Body":"Fixes #3672 ","Url":"https://github.com/dotnet/machinelearning/pull/3724","RelatedDescription":"Open PR \"Added usage example for LogLossPerClass metric for multiclass trainers\" (#3724)"},{"Id":"444176056","IsPullRequest":false,"CreatedAt":"2019-05-14T23:55:41","Actor":"glebuk","Number":"3723","RawContent":null,"Title":"IDataView Type System needs to be extensible to support Image scenarios properly","State":"open","Body":"### The Problem\r\nCurrently it is impossible make prediction from images if they do not come from file.  PredictionEngine<IT,OT> and IEnumerable<T> to IDV is impossible if T contains images/\r\n\r\n### The Root Cause\r\nThe fundamental issue is that in several places in our system,  our types are hardcoded and limited to a small set. Actual IDataView type system IS open, so it should be possible to support any type. However, some of our machinery is not so extensible.   For example, if we need to add full support of images, we would need to update:\r\n- converters between IEnumerable<T> <-> IDataView, \r\n- PredictionEngine<> \r\n- API Utils, \r\n- Schema utils \r\n- etc.\r\n\r\nWhat we need is a dependency-injection mechanism to allow component developers to inject definitions of types supported by our IDV machinery.  Such mechanism should be flexible and extensible.  For an example of hard-coded implementation, check #3263.  It is illustrative but incorrect as it is not flexible.  Note @TomFinley's comment on different options on how to do this properly.  We need to define a mechanism that is extensible, so that a dev can add new transforms to work on new data types, such as sound and enjoy all benefits of ML.NET\r\n\r\n### Definition of Done:\r\n- Mechanism to register additional IDV types so that they are supported by PredictionEngine and IEnumerable converters.\r\n- Add such registration for images and date types\r\n- Ensure that the registration (at least for images)  occurs automatically whenever appropriate component is used (for example, if image resizing transform is used, the image type is registered automatically )\r\n- Ensure that prediction engine, conversion to and from IEnumerable work correctly with tests.\r\n\r\n### The following issues will also be solved by this issue:\r\n#3369, #3460, #3582, #2121, #2495, #3582, #3274\r\nIn addition, this work is needed to properly support ONNX and TF scenarios for structured data such as image, speech, video, or Audio.","Url":"https://github.com/dotnet/machinelearning/issues/3723","RelatedDescription":"Open issue \"IDataView Type System needs to be extensible to support Image scenarios properly\" (#3723)"},{"Id":"444175916","IsPullRequest":false,"CreatedAt":"2019-05-14T23:55:09","Actor":"codemzs","Number":"3722","RawContent":null,"Title":"libomp 8.0.0 version has dependencies that do no exist on macOS build machines","State":"open","Body":"It seems brew installing latest libomp has dependencies that do not exist on build machines. Investigate what those dependencies are by taking a trace and install them.","Url":"https://github.com/dotnet/machinelearning/issues/3722","RelatedDescription":"Open issue \"libomp 8.0.0 version has dependencies that do no exist on macOS build machines\" (#3722)"},{"Id":"444112532","IsPullRequest":false,"CreatedAt":"2019-05-14T20:35:16","Actor":"yaeldekel","Number":"3720","RawContent":null,"Title":"Sse math doesn't contain `Div64` and `TryMulDiv64Core`","State":"open","Body":"These are used in `IntUtils.cs` [here](https://github.com/dotnet/machinelearning/blob/master/src/Microsoft.ML.CpuMath/IntUtils.cs#L76) and [here](https://github.com/dotnet/machinelearning/blob/master/src/Microsoft.ML.CpuMath/IntUtils.cs#L314), but they are not in the native code.","Url":"https://github.com/dotnet/machinelearning/issues/3720","RelatedDescription":"Open issue \"Sse math doesn't contain `Div64` and `TryMulDiv64Core`\" (#3720)"},{"Id":"444097217","IsPullRequest":true,"CreatedAt":"2019-05-14T19:57:35","Actor":"abgoswam","Number":"3719","RawContent":null,"Title":"Adding InternalsVisibleTo to a couple of projects","State":"open","Body":"Fixes #3715 \r\n\r\n- Added `Microsoft.ML.Runtime.SequencePrediction` to `Microsoft.ML.StandardTrainers`\r\n- Added `TMSNlearnPrediction` to `Microsoft.ML.Transforms`\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3719","RelatedDescription":"Open PR \"Adding InternalsVisibleTo to a couple of projects\" (#3719)"},{"Id":"444093178","IsPullRequest":false,"CreatedAt":"2019-05-14T19:47:31","Actor":"lefig","Number":"3718","RawContent":null,"Title":"Exception: When previewing data","State":"open","Body":"\r\nAn exception is generated within the following function:\r\n\r\n`public static void PeekDataViewInConsole(MLContext mlContext, IDataView dataView, IEstimator<ITransformer> pipeline, int numberOfRows = 4)\r\n        {\r\n          \r\n            var transformer = pipeline.Fit(dataView);\r\n            var transformedData = transformer.Transform(dataView);\r\n\r\n            // 'transformedData' is a 'promise' of data, lazy-loading. call Preview  \r\n            //and iterate through the returned collection from preview.\r\n\r\nException:\r\n            var preViewTransformedData = transformedData.Preview(maxRows: numberOfRows);\r\n\r\nThis is because the data that is read contains a Datatime format column. Is there a way to remove this column from the Preview call?\r\n\r\nThanks\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3718","RelatedDescription":"Open issue \"Exception: When previewing data\" (#3718)"},{"Id":"444017162","IsPullRequest":false,"CreatedAt":"2019-05-14T16:41:56","Actor":"abgoswam","Number":"3717","RawContent":null,"Title":"Add LoadableClassAttribute to DNNImageFeaturizer ","State":"open","Body":"Needed so it can be used in the TLC GUI/command line\r\n\r\n@yaeldekel ","Url":"https://github.com/dotnet/machinelearning/issues/3717","RelatedDescription":"Open issue \"Add LoadableClassAttribute to DNNImageFeaturizer \" (#3717)"},{"Id":"444016628","IsPullRequest":false,"CreatedAt":"2019-05-14T16:40:45","Actor":"abgoswam","Number":"3716","RawContent":null,"Title":"Fixes to Permutation Feature Importance","State":"open","Body":"Permutation Feature Importance needs some fixes to enable it for internal repo\r\n\r\n@yaeldekel ","Url":"https://github.com/dotnet/machinelearning/issues/3716","RelatedDescription":"Open issue \"Fixes to Permutation Feature Importance\" (#3716)"},{"Id":"444016012","IsPullRequest":false,"CreatedAt":"2019-05-14T16:39:23","Actor":"abgoswam","Number":"3715","RawContent":null,"Title":"Add â€˜InternalsVisibleToâ€™ attributes to some projects","State":"open","Body":"- Microsoft.ML.StandardLearners \r\n  - expose internals to SequencePrediction \r\n\r\n- Microsoft.ML.Transforms  \r\n  - expose internals to TMSNLearnPrediction (enable Dracula Transform)\r\n\r\n(SequencePrediction, SLibWrapper and TestSequence.cs were removed and need to be added back, same for CountTableTransform.cs, DraculaTransform.cs).\r\n\r\n@yaeldekel \r\n","Url":"https://github.com/dotnet/machinelearning/issues/3715","RelatedDescription":"Open issue \"Add â€˜InternalsVisibleToâ€™ attributes to some projects\" (#3715)"},{"Id":"443860407","IsPullRequest":false,"CreatedAt":"2019-05-14T11:26:10","Actor":"lefig","Number":"3714","RawContent":null,"Title":"Question: Timeseries analysis","State":"open","Body":"Hi all,\r\n\r\nI wish to reach out to you concerning the best approach to use for time series based analysis. \r\n\r\nI appreciate that the platform at present does not have support for many deep learning features such as LSTM. But with release 1.0 in mind, are there any examples or resources to illustrate an approach to analysis?\r\n\r\nIf not it would be great to see this on the future release roadmap.\r\n\r\nTa, best wishes","Url":"https://github.com/dotnet/machinelearning/issues/3714","RelatedDescription":"Open issue \"Question: Timeseries analysis\" (#3714)"},{"Id":"443796975","IsPullRequest":false,"CreatedAt":"2019-05-14T09:06:35","Actor":"PeterPann23","Number":"3713","RawContent":null,"Title":"Benchmark package to collect and compare hardware performance with API","State":"open","Body":"**Problem**\r\nSizing server infrastructure for production deployments is an issue as hardware specialists have no clue how a system will perform and there is hardly any documentation available unlike with SQL Server, Exchange etc.\r\n\r\nML is becoming such a important feature in IT that it will/has gotten get it's own dedicated teams just like the above mentioned systems however there is BPA / IO Stress test available for the workload.\r\n\r\n**Proposal**\r\nCreate a benchmark project/ application that will run a workflow cycle on a larger dataset and show a \"score\" much like [UserBenchmark](https://cpu.userbenchmark.com/). Provide the source code as well as a executable so users can compare to the reference system and compare why their system scores a given value.\r\n\r\n**Solves**\r\nAllows for proper sizing a system be it Azure of physical and projects a duration of a reference system based on the underlying system. I guess it will find community support as it helps all of us.","Url":"https://github.com/dotnet/machinelearning/issues/3713","RelatedDescription":"Open issue \"Benchmark package to collect and compare hardware performance with API\" (#3713)"},{"Id":"443652245","IsPullRequest":false,"CreatedAt":"2019-05-14T00:02:12","Actor":"yaeldekel","Number":"3712","RawContent":null,"Title":"Anomaly detection evaluator throws","State":"open","Body":"Issue number #2644 was fixed in pr #2692, but now there is an exception thrown when the dataset contains only positive examples.\r\nIn my opinion, it makes more sense to report an AUC of NaN than to throw - the other metrics can still be computed, so there is no need to throw.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3712","RelatedDescription":"Open issue \"Anomaly detection evaluator throws\" (#3712)"},{"Id":"443651044","IsPullRequest":false,"CreatedAt":"2019-05-13T23:57:09","Actor":"yaeldekel","Number":"3711","RawContent":null,"Title":"CV doesn't work with ranking","State":"open","Body":"The change in KeyDataViewType to disallow unknown cardinality keys, fixed a silent bug in CV that caused the group column to not be used for stratification (causing label leakage between the training and test sets), but now that it is fixed there is a new bug.\r\nCV now uses the GroupId column for stratification, but the values in the GroupId column may not be distributed evenly, causing all the examples to be in one fold, and the others would be empty.\r\nFor example: Assume that the values in the GroupId column are `10,11,...,19`, and that they are loaded with `TextLoader` as a key type column. The key type would be of cardinality 20, and if there are 2 folds, then CV will try to create one fold with all the examples with values `0,...,9` and the other fold with all the examples with values `10,...,19`.\r\n ","Url":"https://github.com/dotnet/machinelearning/issues/3711","RelatedDescription":"Open issue \"CV doesn't work with ranking\" (#3711)"},{"Id":"443648700","IsPullRequest":false,"CreatedAt":"2019-05-13T23:46:23","Actor":"yaeldekel","Number":"3710","RawContent":null,"Title":"LightGBMRankingTrainer bug","State":"open","Body":"The `LightGBMRankingTrainer` `CustomGains` option needs to have `AllowMultiple` in its `ArgumentAttribute`, since it is an array.","Url":"https://github.com/dotnet/machinelearning/issues/3710","RelatedDescription":"Open issue \"LightGBMRankingTrainer bug\" (#3710)"},{"Id":"443647828","IsPullRequest":false,"CreatedAt":"2019-05-13T23:42:27","Actor":"yaeldekel","Number":"3709","RawContent":null,"Title":"Ensembles don't work","State":"open","Body":"The trainer argument of Ensembles is of type `IComponentFactory<ITrainer<IPredictorProducing<>>>`.\r\n\r\nHowever, none of the trainers in ML.NET implement `ITrainer<IPredictorProducing<>>`, they just implement `ITrainer<IPredictor>`, so there is no way to specify a different trainer in the arguments\r\n(when running the maml command line).","Url":"https://github.com/dotnet/machinelearning/issues/3709","RelatedDescription":"Open issue \"Ensembles don't work\" (#3709)"},{"Id":"443643562","IsPullRequest":false,"CreatedAt":"2019-05-13T23:24:22","Actor":"yaeldekel","Number":"3708","RawContent":null,"Title":"Custom gain argument for ranking: double[] in trainer, string in evaluator","State":"open","Body":"The argument was recently changed to double[] in the ranking trainers, but is still a string in the ranking evaluator. We should be consistent.","Url":"https://github.com/dotnet/machinelearning/issues/3708","RelatedDescription":"Open issue \"Custom gain argument for ranking: double[] in trainer, string in evaluator\" (#3708)"},{"Id":"443642940","IsPullRequest":false,"CreatedAt":"2019-05-13T23:21:51","Actor":"yaeldekel","Number":"3707","RawContent":null,"Title":"BinaryLoader throws exception when a dataset contains 0 rows","State":"open","Body":"BinaryLoader tries to create a `KeyDataViewType` with count equal to the number of rows [here](https://github.com/dotnet/machinelearning/blob/master/src/Microsoft.ML.Data/DataLoadSave/Binary/BinaryLoader.cs#L1208), but with the recent change to `KeyDataViewType` `count=0` is not allowed.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3707","RelatedDescription":"Open issue \"BinaryLoader throws exception when a dataset contains 0 rows\" (#3707)"},{"Id":"443135527","IsPullRequest":true,"CreatedAt":"2019-05-12T18:57:28","Actor":"SLane35","Number":"3706","RawContent":null,"Title":"Update Readme.md","State":"open","Body":"A few minor changes to make the readme a little easier to read and understand.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3706","RelatedDescription":"Open PR \"Update Readme.md\" (#3706)"},{"Id":"442844696","IsPullRequest":false,"CreatedAt":"2019-05-11T19:56:44","Actor":"PaulaScholz","Number":"3702","RawContent":null,"Title":"ML.Net tutorial inside Win32 RunFullTrust process gives inconsistent results","State":"closed","Body":"### System information\r\nOS Name\tMicrosoft Windows 10 Enterprise\r\nVersion\t10.0.17763 Build 17763\r\n\r\n- **OS version/distro**:\r\n- **.NET Version (eg., dotnet --info)**: \r\n:\\Users\\v-pauls>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.202\r\n Commit:    8a7ff6789d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.202\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.3\r\n  Commit:  6b8ad509b6\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI created a Win32 \"FullTrustProcess\" version of the Iris tutorial, callable from a UWP app.\r\n- **What happened?**\r\nThe app made no predictions under ML.Net 0.11.  When updated to ML.Net 1.0, the app does provide predictions, but these are only \"Correct\" some of the time, in other words, they only match the tutorial output sometimes.\r\n\r\nAdditionally, ML.Net 1.0 seems to throw EETypeLoad exception on loading AppContract.DLL.  Don't know if its your code or a dependency.\r\n\r\n- **What did you expect?**\r\nConsistent results.\r\n\r\n### Source code / logs\r\n\r\nA complete sample project, screenshots, debug output, and a explanatory REAME.md may be found at my GitHub repository at https://github.com/PaulaScholz/MLDotNetUWP","Url":"https://github.com/dotnet/machinelearning/issues/3702","RelatedDescription":"Closed issue \"ML.Net tutorial inside Win32 RunFullTrust process gives inconsistent results\" (#3702)"},{"Id":"442981365","IsPullRequest":false,"CreatedAt":"2019-05-11T11:02:37","Actor":"PeterPann23","Number":"3705","RawContent":null,"Title":"Context.Data.CreateTextLoader<T> throws error Can't determine the number of source columns without valid data","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: \r\nAutoML 0.3.0\r\nMicrosoft.ML 1.0.0.0\r\n\r\n### Issue\r\nI thought one can map a class and load it with the annotation but get an error when calling it on a parameter that's not available for me.\r\n\r\n- **What did you do?**\r\nI wrote a little test to play with Microsoft.ML.AutoML and test it against a label and a vector\r\nI add my litle [Program](https://github.com/dotnet/machinelearning/files/3168931/Program.zip)\r\nwhere I call in the ticket\r\n\r\nbasically I cal:\r\n```\r\npublic static IDataView GetDataView<T>(MLContext mlContext, FileInfo trainingFile)\r\n{\r\n    var loader = mlContext.Data.CreateTextLoader<T>(separatorChar: '|', hasHeader: false);\r\n    return loader.Load(trainingFile.FullName);\r\n            \r\n}\r\npublic class Data\r\n{\r\n     [LoadColumn(0)]\r\n     public string Label { get; }\r\n\r\n     [LoadColumn(1, 40_731)]\r\n     [VectorType(40_730)]\r\n     public float[] Features { get; }\r\n}\r\n```\r\n\r\n- **What happened?**\r\nI get an error stating\r\n> System.ArgumentOutOfRangeException: 'Can't determine the number of source columns without valid data\r\n> Parameter name: Source'\r\n\r\nStack\r\n```\r\n   at Microsoft.ML.Data.TextLoader.Bindings..ctor(TextLoader parent, Column[] cols, IMultiStreamSource headerFile, IMultiStreamSource dataSample)\r\n   at Microsoft.ML.Data.TextLoader..ctor(IHostEnvironment env, Options options, IMultiStreamSource dataSample)\r\n   at Microsoft.ML.Data.TextLoader.CreateTextLoader[TInput](IHostEnvironment host, Boolean hasHeader, Char separator, Boolean allowQuoting, Boolean supportSparse, Boolean trimWhitespace, IMultiStreamSource dataSample)\r\n   at ConsoleMLWizard.Program.GetDataView[T](MLContext mlContext, FileInfo trainingFile) in C:\\Users\\W2307\\source\\repos\\ConsoleMLWizard\\Program.cs:line 99\r\n   at ConsoleMLWizard.Program.Main(String[] args) in C:\\Users\\W2307\\source\\repos\\ConsoleMLWizard\\Program.cs:line 37\r\n```\r\n\r\n- **What did you expect?**\r\n\r\nI expected the anotations to work, I can load the data fine using:\r\n```\r\nvar loader = context.Data.CreateTextLoader(options: new TextLoader.Options()\r\n{\r\n    Columns = new[] {\r\n        new TextLoader.Column(name:\"Label\", dataKind: DataKind.String, index: 0),\r\n        new TextLoader.Column(name:\"Features\",dataKind:DataKind.Single,minIndex:0,maxIndex:40731)\r\n    },\r\n    HasHeader = false,\r\n    Separators = new[] { ',' },\r\n                \r\n});\r\nvar data = loader.Load(dataFile.FullName);\r\n```\r\n\r\n\r\n\r\n### Source code / logs\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3705","RelatedDescription":"Open issue \"Context.Data.CreateTextLoader<T> throws error Can't determine the number of source columns without valid data\" (#3705)"},{"Id":"442862772","IsPullRequest":false,"CreatedAt":"2019-05-10T19:26:16","Actor":"vinodshanbhag","Number":"3704","RawContent":null,"Title":"Fix all code that has //REVIEW against it","State":"open","Body":"C:\\code\\MLNet\\src\\Microsoft.ML.Auto\\ColumnInference\\ColumnTypeInference.cs(20):        // REVIEW: revisit this requirement. Either work for arbitrary number of columns,\r\n  C:\\code\\MLNet\\src\\Microsoft.ML.Auto\\ColumnInference\\PurposeInference.cs(228):            // REVIEW: could be improved.\r\n  C:\\code\\MLNet\\src\\Microsoft.ML.Auto\\ColumnInference\\TextFileSample.cs(18):        // REVIEW: consider including multiple files via IMultiStreamSource.\r\n  C:\\code\\MLNet\\src\\Microsoft.ML.Auto\\ColumnInference\\TextFileSample.cs(20):        // REVIEW: right now, it expects 0x0A being the trailing character of line break.\r\n  C:\\code\\MLNet\\src\\Microsoft.ML.Auto\\ColumnInference\\TextFileSample.cs(110):            // REVIEW: CreateFromHead still truncates the file before the last 0x0A byte. For multi-byte encoding,\r\n  C:\\code\\MLNet\\src\\Microsoft.ML.Auto\\Sweepers\\Parameters.cs(205):            // REVIEW: this condition can be relaxed if we change the math below to deal with it\r\n  C:\\code\\MLNet\\src\\Microsoft.ML.Auto\\Sweepers\\Parameters.cs(212):        // REVIEW: Is Float accurate enough?\r\n  C:\\code\\MLNet\\src\\Microsoft.ML.Auto\\Sweepers\\Parameters.cs(218):                // REVIEW: review the math below, it only works for positive Min and Max\r\n  C:\\code\\MLNet\\src\\Microsoft.ML.Auto\\Sweepers\\Parameters.cs(248):                    // REVIEW: review the math below, it only works for positive Min and Max\r\n  C:\\code\\MLNet\\src\\Microsoft.ML.Auto\\Sweepers\\Parameters.cs(331):            // REVIEW: this condition can be relaxed if we change the math below to deal with it\r\n  C:\\code\\MLNet\\src\\Microsoft.ML.Auto\\Sweepers\\Parameters.cs(338):        // REVIEW: Is Float accurate enough?\r\n  C:\\code\\MLNet\\src\\Microsoft.ML.Auto\\Sweepers\\Parameters.cs(344):                // REVIEW: review the math below, it only works for positive Min and Max\r\n  C:\\code\\MLNet\\src\\Microsoft.ML.Auto\\Sweepers\\Parameters.cs(366):                // REVIEW: review the math below, it only works for positive Min and Max\r\n  C:\\code\\MLNet\\src\\Microsoft.ML.Auto\\Sweepers\\Parameters.cs(451):        // REVIEW: Is Float accurate enough?\r\n  C:\\code\\MLNet\\src\\Microsoft.ML.Auto\\Sweepers\\SmacSweeper.cs(15):    //REVIEW: Figure out better way to do this. could introduce a base class for all smart sweepers,\r\n  C:\\code\\MLNet\\src\\Microsoft.ML.Auto\\Utils\\MLNetUtils\\ArrayDataViewBuilder.cs(229):                    // REVIEW: Implement cursor set support.\r\n  C:","Url":"https://github.com/dotnet/machinelearning/issues/3704","RelatedDescription":"Open issue \"Fix all code that has //REVIEW against it\" (#3704)"},{"Id":"442857636","IsPullRequest":false,"CreatedAt":"2019-05-10T19:10:51","Actor":"srsaggam","Number":"3703","RawContent":null,"Title":"[AutoML] Column inferencing is limited to 10000 Columns","State":"open","Body":"Looks like when a dataset has more than 10000 columns. The column inferencing API is failing in AutoML and hence CLI also fails\r\n\r\nSystem information\r\nOS version/distro: Any OS\r\nML.NET CLI\r\n\r\nWhat did you do?\r\nGave the CLI a csv file more than 10000 columns\r\nWhat happened?\r\nCLI fails to run and throws an exception while inferring columns\r\n\r\nWhat did you expect?\r\nTo infer columns and produce a model and console project.","Url":"https://github.com/dotnet/machinelearning/issues/3703","RelatedDescription":"Open issue \"[AutoML] Column inferencing is limited to 10000 Columns\" (#3703)"},{"Id":"442585590","IsPullRequest":false,"CreatedAt":"2019-05-10T07:51:34","Actor":"rauhs","Number":"3701","RawContent":null,"Title":"How to inspect OneVersusAll models","State":"open","Body":"Version: 1.0\r\n\r\nSince 2b417bb9f30c249d1267eeace8f0af82890f3c6e made `SubModelParameters` private, there is no chance to get any of the sub models which would be needed for feature importance.\r\n\r\nHow do I inspect OVA models? In particular, how to get feature importance?\r\n\r\nFWIW, I have no chance of using PFI feature importance. It would take day to run. It's 1000x slower than training any of my models.","Url":"https://github.com/dotnet/machinelearning/issues/3701","RelatedDescription":"Open issue \"How to inspect OneVersusAll models\" (#3701)"},{"Id":"442538143","IsPullRequest":true,"CreatedAt":"2019-05-10T04:54:36","Actor":"codemzs","Number":"3700","RawContent":null,"Title":"Add option to execute only the last transform in TransformWrapper and have WordBagEstimator return transformer chain","State":"open","Body":"fixes #3699","Url":"https://github.com/dotnet/machinelearning/pull/3700","RelatedDescription":"Open PR \"Add option to execute only the last transform in TransformWrapper and have WordBagEstimator return transformer chain\" (#3700)"},{"Id":"442537932","IsPullRequest":false,"CreatedAt":"2019-05-10T04:53:26","Actor":"codemzs","Number":"3699","RawContent":null,"Title":"TransfromWrapper should only apply the last transform in some cases","State":"open","Body":"Consider the pipeline generated from NimbusML that adds OptionalColumnTransform automatically to make sure label column is of correct type, i.e key type. When this model is loaded in ML.NET, OptionalColumnTransform is executed as TransformWrapper that is instantiated with an IDataView containing the entire pipeline until that point. Unfortunately transform wrapper applies the entire chain of transforms when it should just apply the last transformer in the chain, this holds true if we had a IDataTransform preceded by RowToRowMapperTransfom.\r\n\r\nCC: @yaeldekel ","Url":"https://github.com/dotnet/machinelearning/issues/3699","RelatedDescription":"Open issue \"TransfromWrapper should only apply the last transform in some cases\" (#3699)"},{"Id":"442508232","IsPullRequest":false,"CreatedAt":"2019-05-10T02:18:37","Actor":"Deucem","Number":"3698","RawContent":null,"Title":"DataViewSchema not validated for null on training, but is required for creating PredictionEngine","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**:\r\nWindows 10 Pro 1806 (also happens in Azure web app)\r\n- **.NET Version (eg., dotnet --info)**: \r\n2.2.104\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nSaved a model passing null for the DataViewSchema.\r\n\r\n- **What happened?**\r\nWhen you save a model with a using mlContext.Model.Save and pass null for the DataViewSchema, the model trains fine, but when you attempt to consume the model, a null reference exception is thrown:\r\n\r\n\"at Microsoft.ML.Data.DataViewConstructionUtils.GetSchemaDefinition[TRow](IHostEnvironment env, DataViewSchema schema)\"\r\n\r\n- **What did you expect?**\r\nThe mlContext.Model.Save method should throw on null DataViewSchema input parameter.\r\n\r\n### Source code / logs\r\n\r\n\"at Microsoft.ML.Data.DataViewConstructionUtils.GetSchemaDefinition[TRow](IHostEnvironment env, DataViewSchema schema)\"\r\n","Url":"https://github.com/dotnet/machinelearning/issues/3698","RelatedDescription":"Open issue \"DataViewSchema not validated for null on training, but is required for creating PredictionEngine\" (#3698)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-05-15T05:30:38.9893224Z","RunDurationInMilliseconds":871}