{"Data":{"Vue":{"Events":[],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"7641316844","Type":"IssuesEvent","CreatedAt":"2018-05-08T04:05:26","Actor":"mrnateriver","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2188","RelatedDescription":"Opened issue \"next() callback in beforeRouteEnter stopped working with Vue 2.5.16\" (#2188) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/09Lom5h4/3/](http://jsfiddle.net/09Lom5h4/3/)\r\n\r\n### Steps to reproduce\r\nReproduced with Vue 2.5.16.\r\n\r\n1. Open provided jsfiddle.net link;\r\n2. Open browser console;\r\n3. Click on 'first a' ;\r\n4. Click on 'first b' ;\r\n5. Click on 'second a' ;\r\n6. Click on 'second b';\r\n7. And click on 'first a' again;\r\n8. Inspect console output.\r\n\r\n### What is expected?\r\nCallback passed to next() call in beforeRouteEnter hook must be called at all times.\r\n\r\nExpected console output:\r\n```\r\nbeforeRouteEnter:\r\nvue-component-3: mounted\r\nvm.title: first_a\r\nbeforeRouteEnter:\r\nvm.title: first_b\r\nbeforeRouteEnter:\r\nvue-component-4: mounted\r\nvm.title: second_a\r\nbeforeRouteEnter:\r\nvm.title: second_b\r\nbeforeRouteEnter:\r\nvue-component-3: mounted\r\nvm.title: first_a\r\n```\r\n\r\n### What is actually happening?\r\nSomething very peculiar.\r\n\r\nThe callback (let's call it CB) that's passed to next() only gets called for an instance of component that is mounted first. Any transitions to other instances of that component *do* trigger beforeRouteEnter hook, but CB doesn't get called. However, if you transition to other instances, and then back to the first one, CB gets called again.\r\n\r\nActual console output:\r\n```\r\nbeforeRouteEnter:\r\nvue-component-3: mounted\r\nvm.title: first_a\r\nbeforeRouteEnter:\r\n<-- missing output: vm.title: first_b\r\nbeforeRouteEnter:\r\nvue-component-4: mounted\r\nvm.title: second_a\r\nbeforeRouteEnter:\r\n<-- missing output: vm.title: second_b\r\nbeforeRouteEnter:\r\nvm.title: first_b <-- this is another bug, which is already reported, issue 2062\r\nvue-component-3: mounted\r\n```\r\n\r\n---\r\nThis behaviour appeared somewhere between Vue versions 2.5.13 and 2.5.16, (almost) everything is fine with 2.5.13:\r\n\r\nhttp://jsfiddle.net/09Lom5h4/4/\r\n\r\nI said *almost* fine, because it overlaps with another bug:\r\n\r\nhttps://github.com/vuejs/vue-router/issues/2062\r\n\r\nI've actually used the JSFiddle from that issue to demonstrate this one.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7638543090","Type":"IssuesEvent","CreatedAt":"2018-05-07T16:04:04","Actor":"guarah","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2177","RelatedDescription":"Closed issue \"Route switching increases memory consume\" (#2177) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/guarah/memory-leak](https://github.com/guarah/memory-leak)\r\n\r\n### Steps to reproduce\r\n1 - yarn install\r\n2 - yarn serve\r\n3 - select a main route\r\n4 - switch multiple times between child routes\r\n5 - check the memory consume\r\n\r\n### What is expected?\r\nIncreasing memory when switching routes\r\n\r\n### What is actually happening?\r\nWhen switching between child routes multiple times, the memory consume increases a lot.\r\n\r\n---\r\nIn our company we have an app with this basic setup, loading a few cards in kanban placed in child routes.\r\nWhen switching from one kanban to another, the memory increases and take so long to decrease.\r\nApparently the route components keeps in cache. Is there some way to destroy theese components?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"7638336590","Type":"IssuesEvent","CreatedAt":"2018-05-07T15:26:56","Actor":"hjJunior","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vuex/issues/1259","RelatedDescription":"Closed issue \"vuex unknown action type\" (#1259) at vuejs/vuex","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\nI tried to reproduce here, but my code is a little different, I'm using by npm\r\n[https://jsfiddle.net/sgwe6qde/4/](https://jsfiddle.net/sgwe6qde/4/)\r\n\r\n### Steps to reproduce\r\nCall to action from store module\r\n\r\n### What is expected?\r\nI expected the function to be executed\r\n\r\n### What is actually happening?\r\nI'm getting the error saying 'unknown action type: matriculas/fetchMatriculaTab'\r\n\r\n---\r\nI tried to search about it on web, and I solve to put namespaced: true, but I keep got this error,\r\nI also have tried to use mapAction in another way\r\n`...Vuex.mapActions('matriculas', ['fetchMatriculaTab'])`\r\nSo at this way, I get error saying  'module namespaec not found'\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7638266423","Type":"IssuesEvent","CreatedAt":"2018-05-07T15:14:35","Actor":"hjJunior","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/1259","RelatedDescription":"Opened issue \"vuex unknown action type\" (#1259) at vuejs/vuex","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\nI tried to reproduce here, but my code is a little different, I'm using by npm\r\n[https://jsfiddle.net/sgwe6qde/3/](https://jsfiddle.net/sgwe6qde/3/)\r\n\r\n### Steps to reproduce\r\nCall to action from store module\r\n\r\n### What is expected?\r\nI expected the function to be executed\r\n\r\n### What is actually happening?\r\nI'm getting the error saying 'unknown action type: matriculas/fetchMatriculaTab'\r\n\r\n---\r\nI tried to search about it on web, and I solve to put namespaced: true, but I keep got this error\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Vue-Issues":{"Issues":[{"Id":"320999861","IsPullRequest":true,"CreatedAt":"2018-05-08T00:08:21","Actor":"kball","Number":"8146","RawContent":null,"Title":"fix #8041: templates inside v-pre should be rendered to HTML","State":"open","Body":"close #8041\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\nI don't believe this is breaking as content inside of `v-pre` is considered to be static. _However_ it does change the outputted static content in the case where a `<template>` tag is labeled with `v-pre` or inside of a `v-pre` element.\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nI pushed a 'compiled' version of this to a different branch to show the working behavior on jsFiddle. The original fiddle from issue #8041: https://jsfiddle.net/zct418xa/1/\r\nA fiddle with the updated behavior using vue.js compiled from this change: https://jsfiddle.net/f7nv9218/","Url":"https://github.com/vuejs/vue/pull/8146","RelatedDescription":"Open PR \"fix #8041: templates inside v-pre should be rendered to HTML\" (#8146)"},{"Id":"320969051","IsPullRequest":false,"CreatedAt":"2018-05-07T22:30:53","Actor":"dborstelmann","Number":"8145","RawContent":null,"Title":"Can't use compiler in strict mode","State":"closed","Body":"### What problem does this feature solve?\r\nWe cannot use the compiler in strict mode because it uses the `with` statement.\r\n\r\nhttps://github.com/vuejs/vue/blob/master/src/compiler/codegen/index.js#L47\r\n\r\nI have to compile templates in the browser at run time in strict mode.  Anybody have a solution for this?\r\n\r\n### What does the proposed API look like?\r\nChange all `with` statements to another solution.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8145","RelatedDescription":"Closed issue \"Can't use compiler in strict mode\" (#8145)"},{"Id":"320922492","IsPullRequest":false,"CreatedAt":"2018-05-07T20:21:47","Actor":"evvvritt","Number":"8144","RawContent":null,"Title":"Vue cancels <video> unmute if updating DOM","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codepen.io/evvvritt/pen/BxmOrN](https://codepen.io/evvvritt/pen/BxmOrN)\r\n\r\n### Steps to reproduce\r\n1. (Ensure browser tab is unmuted and audio is audible)  \r\n2. Click each button several times and observe the effects:  \r\n– *Toggle Mute without DOM update* properly toggles mute every time  \r\n– *Toggle Mute with...* both require two clicks to unmute the video   \r\n\r\n### What is expected?\r\nToggle Mute with DOM update\r\n\r\n### What is actually happening?\r\nRequires two calls to actually unmute the video\r\n\r\n---\r\nI ran into this trying to toggle a mute icon based on the mute state. I tried v-show, :class, and :data-attr changes – all have the same problem :/\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8144","RelatedDescription":"Closed issue \"Vue cancels <video> unmute if updating DOM\" (#8144)"},{"Id":"320787463","IsPullRequest":true,"CreatedAt":"2018-05-07T12:34:37","Actor":"hirokiosame","Number":"8143","RawContent":null,"Title":"Support `components` obj in functional components (fix #7492) (fix #6872)","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nFixes #7492 #6872 (duplicates)","Url":"https://github.com/vuejs/vue/pull/8143","RelatedDescription":"Open PR \"Support `components` obj in functional components (fix #7492) (fix #6872)\" (#8143)"},{"Id":"320711063","IsPullRequest":false,"CreatedAt":"2018-05-07T11:24:25","Actor":"hirokiosame","Number":"8142","RawContent":null,"Title":"Support for methods in functional component + template","State":"closed","Body":"### What problem does this feature solve?\r\nThere is no way for me to use functions in a functional template.\r\n\r\nWhile I can declare methods outside the scope of the functional-component definition and access it within the render method (Snippet 1), I cannot access it when I use a functional template (Snippet 2).\r\n\r\n_Snippet 1:_\r\n\r\n```\r\n<script>\r\nfunction emit(listeners, eventName, ...args) {\r\n\tconst eventHandler = listeners[eventName];\r\n\tif (typeof eventHandler === 'function') {\r\n\t\teventHandler(...args);\r\n\t}\r\n}\r\n\r\nconst comp = {\r\n\tfunctional: true,\r\n\r\n\trender(h, ctx) {\r\n\t\treturn h('a', {\r\n\t\t\tattrs: {\r\n\t\t\t\thref: '#',\r\n\t\t\t},\r\n\t\t\ton: {\r\n\t\t\t\tclick: emit(ctx.listeners, 'open'),\r\n\t\t\t},\r\n\t\t}, ['Link']);\r\n\t},\r\n};\r\n\r\nexport default comp;\r\n</script>\r\n```\r\n\r\n_Snippet 2: Doesn't work_\r\n```\r\n<template functional>\r\n\t<a\r\n\t\thref=\"#\"\r\n\t\t@click=\"emit(listeners, 'open')\"\r\n\t>\r\n\t\tLink\r\n\t</a>\r\n</template>\r\n\r\n<script>\r\nfunction emit(listeners, eventName, ...args) {\r\n\tconst eventHandler = listeners[eventName];\r\n\tif (typeof eventHandler === 'function') {\r\n\t\teventHandler(...args);\r\n\t}\r\n}\r\n\r\nconst comp = {\r\n\tfunctional: true,\r\n};\r\n\r\nexport default comp;\r\n</script>\r\n```\r\n\r\n### What does the proposed API look like?\r\n\r\n```\r\n<template functional>\r\n\t<a\r\n\t\thref=\"#\"\r\n\t\t@click=\"methods.emit(listeners, 'open')\"\r\n\t>\r\n\t\tLink\r\n\t</a>\r\n</template>\r\n\r\n<script>\r\nconst comp = {\r\n\tfunctional: true,\r\n\tmethods: {\r\n\t\temit(listeners, eventName, ...args) {\r\n\t\t\tconst eventHandler = listeners[eventName];\r\n\t\t\tif (typeof eventHandler === 'function') {\r\n\t\t\t\teventHandler(...args);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n};\r\n\r\nexport default comp;\r\n</script>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8142","RelatedDescription":"Closed issue \"Support for methods in functional component + template\" (#8142)"},{"Id":"320691281","IsPullRequest":false,"CreatedAt":"2018-05-07T06:44:11","Actor":"ZackAdams","Number":"8141","RawContent":null,"Title":"click","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/8141","RelatedDescription":"Closed issue \"click\" (#8141)"},{"Id":"319718930","IsPullRequest":false,"CreatedAt":"2018-05-07T06:36:15","Actor":"KaelWD","Number":"8120","RawContent":null,"Title":"Typescript: Type 'null' is not assignable to type 'PropValidator<any>'","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n```ts\r\nVue.component('union-prop', {\r\n  props: {\r\n    anything: null,\r\n    primitive: [String, Number],\r\n    object: [Cat, User],\r\n    regex: RegExp,\r\n    mixed: [RegExp, Array],\r\n    union: [User, Number] as {new(): User | Number}[] // requires annotation\r\n  },\r\n  data() {\r\n    this.anything;\r\n    this.primitive;\r\n    this.object;\r\n    this.union;\r\n    this.regex.compile;\r\n    this.mixed;\r\n    return {\r\n      fixedSize: this.union,\r\n    }\r\n  }\r\n});\r\n```\r\n\r\n### Steps to reproduce\r\nPaste it into `options-test.ts` and run `yarn test:types`\r\n\r\n### What is expected?\r\nNo errors, type should be `any`\r\n\r\n### What is actually happening?\r\n> Type 'null' is not assignable to type 'PropValidator<any>'\r\n\r\nIt works with `strictNullChecks` disabled, but the type is `{}` instead of `any`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8120","RelatedDescription":"Closed issue \"Typescript: Type 'null' is not assignable to type 'PropValidator<any>'\" (#8120)"},{"Id":"320686099","IsPullRequest":true,"CreatedAt":"2018-05-07T06:17:21","Actor":"donggyu04","Number":"8140","RawContent":null,"Title":"Fix: block unnecessary input event on input tag placeholder in IE","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\nhi\r\nI encountered the same problem(#7138) during development.\r\nIn my case, it occurred in the input tag, not the textarea, so I added conditional statements.\r\nafter adding the conditional statement, I confirmed that the problem was also resolved in the input tag.\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8140","RelatedDescription":"Open PR \"Fix: block unnecessary input event on input tag placeholder in IE\" (#8140)"},{"Id":"320599761","IsPullRequest":true,"CreatedAt":"2018-05-06T14:59:12","Actor":"clemtrek","Number":"8139","RawContent":null,"Title":"CI: Update Node Version","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Build-related changes\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [x] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8139","RelatedDescription":"Open PR \"CI: Update Node Version\" (#8139)"},{"Id":"320551929","IsPullRequest":true,"CreatedAt":"2018-05-06T00:28:04","Actor":"bigtunacan","Number":"8138","RawContent":null,"Title":"fix: In development mode, warns if user tries to Vue.set a property t…","State":"open","Body":"…hat already exists.\r\n\r\nIn development mode, warns if user tries to Vue.set a property that already exists. Issue reported\r\nin #8129. Codepen demonstrating the issue available at\r\nhttps://codepen.io/chrisvfritz/pen/rvzgBR?editors=1010\r\n\r\nfix #8129\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8138","RelatedDescription":"Open PR \"fix: In development mode, warns if user tries to Vue.set a property t…\" (#8138)"},{"Id":"320518717","IsPullRequest":false,"CreatedAt":"2018-05-05T15:54:48","Actor":"jmcooper","Number":"8137","RawContent":null,"Title":"Add ability to access namespaced getters with dot notation","State":"closed","Body":"### What problem does this feature solve?\r\nWhen working with a namespaced module (e.g. a users module), you can access items on the user module's state like this: \r\n`this.$store.state.users.user`\r\n\r\nHowever, you can't access getters in the same way.  This will return an error:\r\n`this.$store.getters.users.newUsers`\r\n\r\nBecause `getters.users` is undefined. Instead you have to access it with bracket notation: `this.$store.getters['users/newUsers']`\r\n\r\nThis is true even though, without modules, I can access getters with dot notation:\r\n`this.$store.getters.newUsers`\r\n\r\nIs there a reason why this isn't possible with getters? It would be nice if we could access namespaced getters in the same way we can with namespaced state.  This current behavior seems inconsistent.\r\n\r\n\r\n### What does the proposed API look like?\r\nGiven a `users` namespaced module, add the ability to access getters with: `this.$store.getters.users....`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8137","RelatedDescription":"Closed issue \"Add ability to access namespaced getters with dot notation\" (#8137)"},{"Id":"320490697","IsPullRequest":false,"CreatedAt":"2018-05-05T11:20:00","Actor":"hanzhou","Number":"8136","RawContent":null,"Title":"Event delivery of component inheritance","State":"closed","Body":"### What problem does this feature solve?\r\nComponent inheritance is important when dealing with large scale web app. I posted a topic here: \r\nhttps://forum.vuejs.org/t/event-delivery-of-component-inheritance-via-slot/33494.\r\n\r\nWe all know that web app can be solved with the presentation and container pattern. for presentation components, functional programming can be an easier way. for container components, I prefer to use the traditional GUI pattern -- by component inheritance, which now could be easier via modern JavaScript. Especially, when creating a large scale GUI app, Mixin is not the best way.\r\n\r\n### What does the proposed API look like?\r\nIn the premise of being compatible with existing API, add an events property on the Vue instance.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8136","RelatedDescription":"Closed issue \"Event delivery of component inheritance\" (#8136)"},{"Id":"320296081","IsPullRequest":false,"CreatedAt":"2018-05-04T15:03:31","Actor":"Fusseldieb","Number":"8135","RawContent":null,"Title":"Development mode on official vue page","State":"closed","Body":"### Version\r\n2.5.17-beta.0\r\n\r\n### Reproduction link\r\n[https://vuejs.org/](https://vuejs.org/)\r\n\r\n### Steps to reproduce\r\n1. Open the official vuejs page\r\n2. Press Ctrl Shift I or open Developer Tools on Chrome\r\n3. Look at the logs\r\n\r\n### What is expected?\r\nThe vuejs page is in a production environment, so the development mode should be disabled.\r\n\r\n### What is actually happening?\r\nThe page is in development mode and the log states that it should be disabled in production.\r\n\r\n---\r\nI found this bug while playing around with the Chrome Development Tool to see how certain vue elements behave when clicking and stuff and that way I discovered this \"issue\". It isn't crucial, but I think it should be noted.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8135","RelatedDescription":"Closed issue \"Development mode on official vue page\" (#8135)"},{"Id":"320201365","IsPullRequest":false,"CreatedAt":"2018-05-04T13:09:22","Actor":"cnweibo","Number":"8132","RawContent":null,"Title":"vm.slots.default has unexpected undefined tag vnode","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/matiascx/9wmaxg4e/1/](https://jsfiddle.net/matiascx/9wmaxg4e/1/)\r\n\r\n### Steps to reproduce\r\n1. register a vue component with slot \r\n2. in html , the component wrap a named slot and default content\r\n3. the console will show default\r\n4. in the above slots.defaut, there will be un expected undefined tag vnode\r\n\r\n### What is expected?\r\nin slots.default, only the div exist. no any other\r\n\r\n### What is actually happening?\r\nthere is additional undefined tag\r\n\r\n---\r\n0: VNode {tag: undefined, data: undefined, children: undefined, text: \" \", elm: text, …}asyncFactory: undefinedasyncMeta: undefinedchildren: undefinedcomponentInstance: undefinedcomponentOptions: undefinedcontext: undefineddata: undefinedelm: textfnContext: undefinedfnOptions: undefinedfnScopeId: undefinedisAsyncPlaceholder: falseisCloned: falseisComment: falseisOnce: falseisRootInsert: falseisStatic: falsekey: undefinedns: undefinedparent: undefinedraw: falsetag: undefinedtext: \" \"child: (...)__proto__: Object1: VNode {tag: \"div\", data: {…}, children: Array(1), text: undefined, elm: div.default, …}_rendered: truelength: 2__proto__: Array(0)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8132","RelatedDescription":"Closed issue \"vm.slots.default has unexpected undefined tag vnode\" (#8132)"},{"Id":"320258811","IsPullRequest":false,"CreatedAt":"2018-05-04T13:07:15","Actor":"slaout","Number":"8134","RawContent":null,"Title":"Use VueJs as a templating engine to send emails","State":"closed","Body":"### What problem does this feature solve?\r\nI have a few VueJS components to show a dashboard.\r\nI would like to reuse the components to send an email with the latest view of the dashboard.\r\nMy server-part is using SpringBoot.\r\nFor the moment, I'm forced to duplicate the VueJS components into Thymeleaf templates.\r\nSo I have to maintain both components and templates.\r\nWould it be possible to achieve that?\r\n\r\n### What does the proposed API look like?\r\nI would like to ask a Vue tool to render one or more components by giving them data as parameters.\r\nEither a command-line tool or, better, something that can be compiled in a Java tool or other languages and libraries...\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8134","RelatedDescription":"Closed issue \"Use VueJs as a templating engine to send emails\" (#8134)"},{"Id":"320212811","IsPullRequest":false,"CreatedAt":"2018-05-04T11:37:05","Actor":"sealte","Number":"8133","RawContent":null,"Title":"unreachable code after return statement","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://cn.vuejs.org/v2/guide/transitions.html#%E5%8A%A8%E6%80%81%E8%BF%87%E6%B8%A1](https://cn.vuejs.org/v2/guide/transitions.html#%E5%8A%A8%E6%80%81%E8%BF%87%E6%B8%A1)\r\n\r\n### Steps to reproduce\r\nnone\r\n\r\n### What is expected?\r\nnone\r\n\r\n### What is actually happening?\r\nFirefox Quantum 59.0.3(64-bit)\r\n\r\ndebugger console:\r\nunreachable code after return statement  (vue.js:3:21)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8133","RelatedDescription":"Closed issue \"unreachable code after return statement\" (#8133)"},{"Id":"320181888","IsPullRequest":false,"CreatedAt":"2018-05-04T07:50:46","Actor":"Arvid2176","Number":"8131","RawContent":null,"Title":"linuxmint下iview　table显示异常","State":"closed","Body":"异常如下：http://blog.sina.cn/dpool/blog/s/blog_182e6d7ba0102y5gv.html\r\n环境：Linux Mint 18.3 Sylvia/Google Chrome 版本 66.0.3359.139（正式版本） （64 位）/Vue2.9.3","Url":"https://github.com/vuejs/vue/issues/8131","RelatedDescription":"Closed issue \"linuxmint下iview　table显示异常\" (#8131)"},{"Id":"320144565","IsPullRequest":true,"CreatedAt":"2018-05-04T03:31:45","Actor":"brophdawg11","Number":"8130","RawContent":null,"Title":"fix(SSR): Properly handle newlines and whitespace in SSR classnames (fix #7859)","State":"open","Body":"When encountering newlines in SSR classnames, do not render \"\\n\" and\r\ninstead replace the new line with a space.\r\n\r\nOnce newlines are removed, indentation from subsequent lines can leave\r\nclassnames abnormally spaced out, so replace multiple spaces with a\r\nsingle space\r\n\r\nfix #7859\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8130","RelatedDescription":"Open PR \"fix(SSR): Properly handle newlines and whitespace in SSR classnames (fix #7859)\" (#8130)"},{"Id":"320134356","IsPullRequest":false,"CreatedAt":"2018-05-04T02:03:18","Actor":"JJPandari","Number":"8129","RawContent":null,"Title":"warn if $set is used on a property that already exist","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codepen.io/JJPandari/pen/gzLVBq?editors=1010](https://codepen.io/JJPandari/pen/gzLVBq?editors=1010)\r\n\r\n### Steps to reproduce\r\nSee the codepen snippet. Follow the comment there to change the vm's data and see what happens.\r\n\r\n### What is expected?\r\nEven if the prop already exists, using `set` still makes it reactive, thus trigger view update.\r\n\r\n### What is actually happening?\r\nUsing `set` later doesn't update the view.\r\n\r\n---\r\nRelated source code: https://github.com/vuejs/vue/blob/3eb37acf98e2d9737de897ebe7bdb7e9576bcc21/src/core/observer/index.js#L192 I think most users would expect `set` to make the prop reactive whenever it's used. I initially opened [an issue for the api doc](https://github.com/vuejs/vuejs.org/issues/1601) because it wasn't clear (for me) about this. But the comment in the source code is.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8129","RelatedDescription":"Open issue \"warn if $set is used on a property that already exist\" (#8129)"},{"Id":"320067226","IsPullRequest":true,"CreatedAt":"2018-05-03T20:24:48","Actor":"carsongee","Number":"8128","RawContent":null,"Title":"Checked for undefined/null on component during destroy","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nWhen we run our test suite with relatively new ( >beta13 ) on vue-test-utils we end up with this issue failing a portion of our test suite as it appears somehow that `componentInstance` is undefined by the time this hook gets called.\r\n\r\nI spent about an hour trying to find where to put a test where the destroy hook gets called, but couldn't figure out how to test it properly.  I even attempted to find a good spot by having that function `throw`, but even that wasn't very helpful, so I'd love some help with that.\r\n\r\nI'm also happy to help with code there, or whatever, but I could use some guidance since there is a lot of complexity going on around this area of the code, the stack trace we got was:\r\n```\r\n    TypeError: Cannot read property '_isDestroyed' of undefined\r\n\r\n      at destroy (node_modules/vue/dist/vue.runtime.common.js:4174:27)\r\n      at invokeDestroyHook (node_modules/vue/dist/vue.runtime.common.js:5741:59)\r\n      at removeVnodes (node_modules/vue/dist/vue.runtime.common.js:5757:11)\r\n      at VueComponent.patch [as __patch__] (node_modules/vue/dist/vue.runtime.common.js:6170:11)\r\n      at VueComponent.Vue._update (node_modules/vue/dist/vue.runtime.common.js:2668:19)\r\n      at VueComponent.updateComponent (node_modules/vue/dist/vue.runtime.common.js:2786:10)\r\n      at Watcher.get (node_modules/vue/dist/vue.runtime.common.js:3140:25)\r\n      at Watcher.run (node_modules/vue/dist/vue.runtime.common.js:3217:22)\r\n      at Watcher.update (node_modules/vue/dist/vue.runtime.common.js:3205:10)\r\n      at VueComponent.Vue.$forceUpdate (node_modules/vue/dist/vue.runtime.common.js:2689:19)\r\n      at updateChildComponent (node_modules/vue/dist/vue.runtime.common.js:2863:8)\r\n      at prepatch (node_modules/vue/dist/vue.runtime.common.js:4142:5)\r\n      at patchVnode (node_modules/vue/dist/vue.runtime.common.js:5923:7)\r\n      at updateChildren (node_modules/vue/dist/vue.runtime.common.js:5820:9)\r\n      at patchVnode (node_modules/vue/dist/vue.runtime.common.js:5934:29)\r\n      at updateChildren (node_modules/vue/dist/vue.runtime.common.js:5820:9)\r\n      at patchVnode (node_modules/vue/dist/vue.runtime.common.js:5934:29)\r\n      at updateChildren (node_modules/vue/dist/vue.runtime.common.js:5820:9)\r\n      at patchVnode (node_modules/vue/dist/vue.runtime.common.js:5934:29)\r\n      at updateChildren (node_modules/vue/dist/vue.runtime.common.js:5820:9)\r\n      at patchVnode (node_modules/vue/dist/vue.runtime.common.js:5934:29)\r\n      at updateChildren (node_modules/vue/dist/vue.runtime.common.js:5820:9)\r\n      at patchVnode (node_modules/vue/dist/vue.runtime.common.js:5934:29)\r\n      at VueComponent.patch [as __patch__] (node_modules/vue/dist/vue.runtime.common.js:6094:9)\r\n      at VueComponent.Vue._update (node_modules/vue/dist/vue.runtime.common.js:2668:19)\r\n      at VueComponent.updateComponent (node_modules/vue/dist/vue.runtime.common.js:2786:10)\r\n      at Watcher.get (node_modules/vue/dist/vue.runtime.common.js:3140:25)\r\n      at Watcher.run (node_modules/vue/dist/vue.runtime.common.js:3217:22)\r\n      at Watcher.update (node_modules/vue/dist/vue.runtime.common.js:3205:10)\r\n      at Dep.notify (node_modules/vue/dist/vue.runtime.common.js:695:13)\r\n      at Object.reactiveSetter [as isEditing] (node_modules/vue/dist/vue.runtime.common.js:1012:11)\r\n      at VueComponent.proxySetter [as isEditing] (node_modules/vue/dist/vue.runtime.common.js:3298:26)\r\n      at Object.<anonymous> (projects/static/projects/js/views/task-item.spec.js:107:18)\r\n          at Promise (<anonymous>)\r\n          at <anonymous>\r\n      at process._tickCallback (internal/process/next_tick.js:188:7)\r\n```\r\n","Url":"https://github.com/vuejs/vue/pull/8128","RelatedDescription":"Open PR \"Checked for undefined/null on component during destroy\" (#8128)"},{"Id":"320064842","IsPullRequest":false,"CreatedAt":"2018-05-03T20:22:16","Actor":"sszczep","Number":"8127","RawContent":null,"Title":"Bottom Navigation Button ugly animation (not taking full height)","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/WJENzw](https://codepen.io/anon/pen/WJENzw)\r\n\r\n### Steps to reproduce\r\nJust create a simple bottom navigation\r\n\r\n### What is expected?\r\nAnimations on click should take full height of a button.\r\n\r\n### What is actually happening?\r\nAnimations don't take full height of a button and seem cropped.\r\n\r\n---\r\nRemove all the styling in codepen to see what I am talking about. It can be repaired by setting fixed height on button content. Probably there are better solutions to this problem but I can't really in CSS.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8127","RelatedDescription":"Closed issue \"Bottom Navigation Button ugly animation (not taking full height)\" (#8127)"},{"Id":"319762349","IsPullRequest":false,"CreatedAt":"2018-05-03T17:46:57","Actor":"weijuer","Number":"8122","RawContent":null,"Title":"V-for does not working in IE10 @Version 2.5.16: ‘invalid v-for alias “” in expression: v-for=“banner in bannerList”’","State":"closed","Body":"### Version\r\nv2.5.16-v2.5.17-beta.0\r\n\r\n### Reproduction link\r\n[https://codepen.io/weijuer/pen/VxWKww](https://codepen.io/weijuer/pen/VxWKww)\r\n\r\n### Steps to reproduce\r\nIE10列表展示不了\r\n\r\n### What is expected?\r\n正常遍历列表\r\n\r\n### What is actually happening?\r\nIE10列表展示不了\r\n\r\n---\r\n请用IE10浏览器浏览，而非调试的兼容模式！\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8122","RelatedDescription":"Closed issue \"V-for does not working in IE10 @Version 2.5.16: ‘invalid v-for alias “” in expression: v-for=“banner in bannerList”’\" (#8122)"},{"Id":"319782991","IsPullRequest":false,"CreatedAt":"2018-05-03T11:36:45","Actor":"jackframework","Number":"8123","RawContent":null,"Title":"在Element属性中的转义字符在VUE单文件模板中没有生效","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/jackframework/pn6jk62c/1/](https://jsfiddle.net/jackframework/pn6jk62c/1/)\r\n\r\n### Steps to reproduce\r\n在“VUE单文件组件”的template中插入带转义字符的属性 &lt;span content=\"&amp;#x41;\"&gt;&lt;/span&gt;\r\n\r\n### What is expected?\r\ncontent 属性应该被转义成Unicode字符A\r\n\r\n### What is actually happening?\r\ncontent 属性被原样输出成了未转义的字符串\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8123","RelatedDescription":"Closed issue \"在Element属性中的转义字符在VUE单文件模板中没有生效\" (#8123)"},{"Id":"319845172","IsPullRequest":false,"CreatedAt":"2018-05-03T09:22:37","Actor":"443866786","Number":"8126","RawContent":null,"Title":"vue2.5.16, this.$refs.input.focus() works on pc but doesn't work on phone ","State":"closed","Body":"https://codepen.io/443866786/pen/rvwYwG\r\n here is the code ,please try it on your phone\r\nhowever it works on vue 2.3.4 ","Url":"https://github.com/vuejs/vue/issues/8126","RelatedDescription":"Closed issue \"vue2.5.16, this.$refs.input.focus() works on pc but doesn't work on phone \" (#8126)"},{"Id":"319842437","IsPullRequest":false,"CreatedAt":"2018-05-03T09:13:57","Actor":"443866786","Number":"8125","RawContent":null,"Title":"this.$refs.input.focus() 在新版本无效，在2.3.4有效","State":"closed","Body":"代码很简单，如下。\r\n最新版本vue在pc端有效，在ios手机端无效，我退回到2.3.4版本在手机端就有效了。不知道新版本更新了什么导致的，日志太多，我实在是找不到点，有没有哪位知道的？感激不尽。\r\n<div id=\"app\">\r\n    <input type=\"text\" v-show=\"show\" ref=\"input\">\r\n    <button @click=\"showBtn\">按钮</button>\r\n</div>\r\nnew Vue({\r\n  el:\"#app\",\r\n  data:{\r\n    show:false\r\n  },\r\n  methods:{\r\n    showBtn(){\r\n      this.show = !this.show\r\n      if(this.show){\r\n         this.$nextTick(()=>{\r\n           this.$refs.input.focus()\r\n         })\r\n         }\r\n    }\r\n  }\r\n})","Url":"https://github.com/vuejs/vue/issues/8125","RelatedDescription":"Closed issue \"this.$refs.input.focus() 在新版本无效，在2.3.4有效\" (#8125)"},{"Id":"319836954","IsPullRequest":false,"CreatedAt":"2018-05-03T08:56:21","Actor":"alex-oleshkevich","Number":"8124","RawContent":null,"Title":"Vue.set - wrong type inferred by TypeScript","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n\r\nGiven:\r\n```typescript\r\n// store state interface\r\nexport interface Office {\r\n    id: number;\r\n    name: string;\r\n    zip?: string;\r\n    city?: string;\r\n    address?: string;\r\n    phone?: string;\r\n    phone2?: string;\r\n}\r\n\r\nexport interface Organization {\r\n    [key: string]: any;\r\n\r\n    id: number;\r\n    name: string;\r\n    offices: { [key: string]: Office };\r\n    teams: { [key: string]: Team };\r\n}\r\n\r\nexport interface Team {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\n// store action\r\nconst setOffice = (state: OrganizationState, item: Office) => {\r\n    Vue.set<Office>(state.offices, item.id, item);\r\n   // or, it does not matter\r\n    Vue.set(state.offices, item.id, item);\r\n};\r\n```\r\nTypeScript gives me error:\r\n\r\n```\r\n25:19 Argument of type '{ [key: string]: Office; }' is not assignable to parameter of type 'Team[]'.\r\n  Property 'includes' is missing in type '{ [key: string]: Office; }'.\r\n\r\n    23 | \r\n    24 | const setOffice = (state: OrganizationState, item: Office) => {\r\n  > 25 |     Vue.set<Team>(state.offices, item.id, item);\r\n       |                   ^\r\n    26 | };\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/635848/39567803-cb9242fe-4ec8-11e8-80fa-2f9eb1c5138c.png)\r\n\r\nIn typings there are 2 versions of Vue.set - one for object, one for array:\r\n```typescript\r\n  set<T>(object: object, key: string, value: T): T;\r\n  set<T>(array: T[], key: number, value: T): T;\r\n```\r\n\r\nIn my case, it always inferres type as *array*. Funny thing, if I remove \"s\" from \"teams\" -> \"team\" then it works as expected.","Url":"https://github.com/vuejs/vue/issues/8124","RelatedDescription":"Closed issue \"Vue.set - wrong type inferred by TypeScript\" (#8124)"},{"Id":"319760208","IsPullRequest":false,"CreatedAt":"2018-05-03T01:07:20","Actor":"weijuer","Number":"8121","RawContent":null,"Title":"V-for not working in IE10 @Version 2.5.16: ‘invalid v-for alias “” in expression: v-for=“banner in bannerList”’","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/8121","RelatedDescription":"Closed issue \"V-for not working in IE10 @Version 2.5.16: ‘invalid v-for alias “” in expression: v-for=“banner in bannerList”’\" (#8121)"},{"Id":"319537390","IsPullRequest":false,"CreatedAt":"2018-05-02T18:26:06","Actor":"salessesk","Number":"8117","RawContent":null,"Title":"Keep-alive not working inside v-for containing v-if ","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/332626/](https://jsfiddle.net/50wL7mdz/332626/)\r\n\r\n### Steps to reproduce\r\nClick on the toggle button multiple times\r\n\r\n### What is expected?\r\n\"With v-show\" and \"with v-if\" should toggle between two values computed on creation of the components.\r\n\r\n### What is actually happening?\r\n\"With v-if\" values change each time the toggle button is clicked. A new instance of the component is created every time.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8117","RelatedDescription":"Closed issue \"Keep-alive not working inside v-for containing v-if \" (#8117)"},{"Id":"319537996","IsPullRequest":false,"CreatedAt":"2018-05-02T15:10:05","Actor":"mariolamacchia","Number":"8118","RawContent":null,"Title":"Vue.mixin clearing Vue.options.components","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[http://jsbin.com/vegujagawe/1/edit?js,console](http://jsbin.com/vegujagawe/1/edit?js,console)\r\n\r\n### Steps to reproduce\r\n- Import Vue\r\n- Register a global component (it will be added to `Vue.options.components`)\r\n- Register any global mixin\r\n\r\n### What is expected?\r\n`Vue.options.components` shouldn't change\r\n\r\n### What is actually happening?\r\nAll the global components registered before the mixins are removed from `Vue.options.components`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8118","RelatedDescription":"Closed issue \"Vue.mixin clearing Vue.options.components\" (#8118)"},{"Id":"319553870","IsPullRequest":false,"CreatedAt":"2018-05-02T13:32:39","Actor":"onehacking","Number":"8119","RawContent":null,"Title":"Vue doesn't listen to item value of array changes","State":"closed","Body":"array[index]= !array[index]  => vDom not update\r\n\r\narray.splice(index , 1 !array[index] );   => vDom update done\r\n\r\nIs this a bug ?  or principle","Url":"https://github.com/vuejs/vue/issues/8119","RelatedDescription":"Closed issue \"Vue doesn't listen to item value of array changes\" (#8119)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"321035558","IsPullRequest":false,"CreatedAt":"2018-05-08T04:05:25","Actor":"mrnateriver","Number":"2188","RawContent":null,"Title":"next() callback in beforeRouteEnter stopped working with Vue 2.5.16","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/09Lom5h4/3/](http://jsfiddle.net/09Lom5h4/3/)\r\n\r\n### Steps to reproduce\r\nReproduced with Vue 2.5.16.\r\n\r\n1. Open provided jsfiddle.net link;\r\n2. Open browser console;\r\n3. Click on 'first a' ;\r\n4. Click on 'first b' ;\r\n5. Click on 'second a' ;\r\n6. Click on 'second b';\r\n7. And click on 'first a' again;\r\n8. Inspect console output.\r\n\r\n### What is expected?\r\nCallback passed to next() call in beforeRouteEnter hook must be called at all times.\r\n\r\nExpected console output:\r\n```\r\nbeforeRouteEnter:\r\nvue-component-3: mounted\r\nvm.title: first_a\r\nbeforeRouteEnter:\r\nvm.title: first_b\r\nbeforeRouteEnter:\r\nvue-component-4: mounted\r\nvm.title: second_a\r\nbeforeRouteEnter:\r\nvm.title: second_b\r\nbeforeRouteEnter:\r\nvue-component-3: mounted\r\nvm.title: first_a\r\n```\r\n\r\n### What is actually happening?\r\nSomething very peculiar.\r\n\r\nThe callback (let's call it CB) that's passed to next() only gets called for an instance of component that is mounted first. Any transitions to other instances of that component *do* trigger beforeRouteEnter hook, but CB doesn't get called. However, if you transition to other instances, and then back to the first one, CB gets called again.\r\n\r\nActual console output:\r\n```\r\nbeforeRouteEnter:\r\nvue-component-3: mounted\r\nvm.title: first_a\r\nbeforeRouteEnter:\r\n<-- missing output: vm.title: first_b\r\nbeforeRouteEnter:\r\nvue-component-4: mounted\r\nvm.title: second_a\r\nbeforeRouteEnter:\r\n<-- missing output: vm.title: second_b\r\nbeforeRouteEnter:\r\nvm.title: first_b <-- this is another bug, which is already reported, issue 2062\r\nvue-component-3: mounted\r\n```\r\n\r\n---\r\nThis behaviour appeared somewhere between Vue versions 2.5.13 and 2.5.16, (almost) everything is fine with 2.5.13:\r\n\r\nhttp://jsfiddle.net/09Lom5h4/4/\r\n\r\nI said *almost* fine, because it overlaps with another bug:\r\n\r\nhttps://github.com/vuejs/vue-router/issues/2062\r\n\r\nI've actually used the JSFiddle from that issue to demonstrate this one.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2188","RelatedDescription":"Open issue \"next() callback in beforeRouteEnter stopped working with Vue 2.5.16\" (#2188)"},{"Id":"318063301","IsPullRequest":false,"CreatedAt":"2018-05-07T16:04:04","Actor":"guarah","Number":"2177","RawContent":null,"Title":"Route switching increases memory consume","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/guarah/memory-leak](https://github.com/guarah/memory-leak)\r\n\r\n### Steps to reproduce\r\n1 - yarn install\r\n2 - yarn serve\r\n3 - select a main route\r\n4 - switch multiple times between child routes\r\n5 - check the memory consume\r\n\r\n### What is expected?\r\nIncreasing memory when switching routes\r\n\r\n### What is actually happening?\r\nWhen switching between child routes multiple times, the memory consume increases a lot.\r\n\r\n---\r\nIn our company we have an app with this basic setup, loading a few cards in kanban placed in child routes.\r\nWhen switching from one kanban to another, the memory increases and take so long to decrease.\r\nApparently the route components keeps in cache. Is there some way to destroy theese components?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2177","RelatedDescription":"Closed issue \"Route switching increases memory consume\" (#2177)"},{"Id":"320531792","IsPullRequest":false,"CreatedAt":"2018-05-05T18:40:15","Actor":"KnorienChang","Number":"2187","RawContent":null,"Title":"history模式下，index.html在二级路由下刷新页面无法读取static文件夹中的资源文件","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://xxx.xx.xxx](https://xxx.xx.xxx)\r\n\r\n### Steps to reproduce\r\nvue-cli(2.9.3) vue-router 3.0.1 ，在index.html引用static文件夹下的静态资源，当路由的模式为history且为二级路由的时候，刷新页面并不能正确的获取到静态资源的文件。因vue-cli生成的项目，无法提供例子。\r\n\r\n### What is expected?\r\n能否在history模式下，刷新的时候也能够正常的读取到static目录下的静态资源文件\r\n\r\n### What is actually happening?\r\n在history模式下且在二级路由的时候，刷新页面的时候不能正确的读取到static文件夹下的静态资源文件\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2187","RelatedDescription":"Closed issue \"history模式下，index.html在二级路由下刷新页面无法读取static文件夹中的资源文件\" (#2187)"},{"Id":"320501662","IsPullRequest":true,"CreatedAt":"2018-05-05T11:26:48","Actor":"posva","Number":"2186","RawContent":null,"Title":"Revert \"fix typo for navigation.md\"","State":"closed","Body":"Reverts vuejs/vue-router#2178","Url":"https://github.com/vuejs/vue-router/pull/2186","RelatedDescription":"Closed or merged PR \"Revert \"fix typo for navigation.md\"\" (#2186)"},{"Id":"320392958","IsPullRequest":false,"CreatedAt":"2018-05-04T19:07:41","Actor":"sobolevn","Number":"2185","RawContent":null,"Title":"Ship Flow types","State":"open","Body":"### What problem does this feature solve?\r\nI am currently working on providing better developer experience for ones using `flow` +  `vue`: https://github.com/sobolevn/vue-flow-typed\r\n\r\nI have noticed that you already have pretty much all the needed types in https://github.com/vuejs/vue-router/blob/dev/flow/declarations.js So, maybe it would be better to ship them with the package?\r\n\r\nOr if they are not ready for the \"production\" shipping, is there anything I can help with?\r\nIf you are not interested in providing these types for now, I will just create a custom package at https://github.com/sobolevn/vue-flow-typed\r\n\r\nThanks!\r\n\r\n\r\n### What does the proposed API look like?\r\n-\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2185","RelatedDescription":"Open issue \"Ship Flow types\" (#2185)"},{"Id":"318269072","IsPullRequest":true,"CreatedAt":"2018-05-04T14:17:53","Actor":"Matsukiyo","Number":"2178","RawContent":null,"Title":"fix typo for navigation.md","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2178","RelatedDescription":"Closed or merged PR \"fix typo for navigation.md\" (#2178)"},{"Id":"320236857","IsPullRequest":false,"CreatedAt":"2018-05-04T11:13:18","Actor":"kirillbunin","Number":"2184","RawContent":null,"Title":"[Docs] Incomplete Navigation Resolution Flow","State":"open","Body":"### What problem does this feature solve?\r\nhttps://github.com/vuejs/vue-router/blob/dev/docs/en/advanced/navigation-guards.md#the-full-navigation-resolution-flow\r\n\r\nI think the docs are lacking full flow, not mentioning 'beforeRouteLeave' for example. Would be cool if diagram were to be created, such as used on Vue lifecycle\r\n\r\nhttps://vuejs.org/v2/guide/instance.html#Lifecycle-Diagram\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2184","RelatedDescription":"Open issue \"[Docs] Incomplete Navigation Resolution Flow\" (#2184)"},{"Id":"319475424","IsPullRequest":false,"CreatedAt":"2018-05-02T22:09:43","Actor":"sheggi","Number":"2183","RawContent":null,"Title":"Configruation for enable/disable ensureSlash() in hash mode ","State":"closed","Body":"### What problem does this feature solve?\r\nUse Case:\r\nvue-route is used beside other scripts, where plain anchors are used.\r\nClicking a link for `#top` we get `#/top` because of ensureSlash() in hash mode. (There is no route defined for `/top`).\r\nTherefore the other script can't complete because the hash with slash is not recognized.\r\n\r\nI guess the ensureSlash() is only required for matching the `/` home route or `/any...` any other route.\r\n\r\nIs there otherwise a dependency I don't see, where ensureHash() is required?\r\n\r\n### What does the proposed API look like?\r\nHaving a configuration is preferable for disabling the default behaviour.\r\n\r\n```js\r\nrouter  = new VueRouter({\r\n    ensureHash: false\r\n});\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2183","RelatedDescription":"Closed issue \"Configruation for enable/disable ensureSlash() in hash mode \" (#2183)"},{"Id":"318599337","IsPullRequest":true,"CreatedAt":"2018-05-02T21:51:31","Actor":"TheLarkInn","Number":"2180","RawContent":null,"Title":"chore(package.json): add sideEffects: false field to package.json","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nThis PR adds the `\"sideEffects\": false` property in vue-router's `package.json` file. This allow's webpack (for those who want to opt-in to requiring vue-routers's original source files (instead of the flattened esm bundles) and want to remove flow type through a babel-transform, then this will allow webpack to aggressively ignore and treeshake unused exports throughout the module system (if they exist!)\r\n\r\nIn many cases this can yield hidden and surprising build time improvements and size reductions in the case that modules flattened from rollup aren't actually needed when webpack performs a scope analysis. \r\n\r\nThe angular team has adopted this approach for the CLI yielding some strong build time speed for webpack (since unused exports are also not resolved, parsed, etc.). From my assessment of the module graph created, it looks that there are no sideEffects created against existing re-exports throughout the codebase, therefore even if a user did opt in on their own will, and remove flow types, there should be no danger of removing code that is needed and causing breakages. \r\n\r\nOverall, this already will not be a breaking change in any way but just provides extra benefits to those (and for the cli (if realized) when using webpack 4 and `mode: production`).\r\n\r\nHappy to answer any other questions.\r\n~Sean + [webpack team](https://github.com/webpack) ","Url":"https://github.com/vuejs/vue-router/pull/2180","RelatedDescription":"Closed or merged PR \"chore(package.json): add sideEffects: false field to package.json\" (#2180)"},{"Id":"319171358","IsPullRequest":false,"CreatedAt":"2018-05-01T11:00:45","Actor":"nowy","Number":"2182","RawContent":null,"Title":"Typescript: `Location` interface typing for query should include arrays","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/en/essentials/navigation.html](https://router.vuejs.org/en/essentials/navigation.html)\r\n\r\n### Steps to reproduce\r\nWhen programmatically navigating on vue router, pass through a dictionary with a param as an array. E.g.\r\n``` json\r\n{\r\n  \"foo\": [\"bar\"]\r\n}\r\n```\r\n\r\n### What is expected?\r\nTypes are expected to work\r\n\r\n### What is actually happening?\r\nIn `router.d.ts`, the typing for `query`, under `Location` is set to:\r\n`Dictionary<string>`.\r\n\r\nThis should be set to allow arrays too. Potentially numbers as well?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2182","RelatedDescription":"Open issue \"Typescript: `Location` interface typing for query should include arrays\" (#2182)"},{"Id":"318926327","IsPullRequest":false,"CreatedAt":"2018-04-30T20:48:02","Actor":"mgarcia96","Number":"2181","RawContent":null,"Title":"Vue router push not working on Firefox","State":"closed","Body":"### Version\r\n2.8.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/332372/](https://jsfiddle.net/50wL7mdz/332372/)\r\n\r\n### Steps to reproduce\r\n[Firefox - Last version]\r\n\r\nJust added a event to a link, add a param to the vuex and then push the step-2 route, and it doens't works on firefox\r\n\r\n### What is expected?\r\nChange url\r\n\r\n### What is actually happening?\r\nNot working url\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2181","RelatedDescription":"Closed issue \"Vue router push not working on Firefox\" (#2181)"},{"Id":"318302414","IsPullRequest":false,"CreatedAt":"2018-04-27T07:43:34","Actor":"adityarw","Number":"2179","RawContent":null,"Title":"am unable to use multiple views giving error","State":"closed","Body":"### Version\r\n2.5.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/posva/6du90epg/](https://jsfiddle.net/posva/6du90epg/)\r\n\r\n### Steps to reproduce\r\nam new to vue please help me..\r\n\r\nrouting code :\r\n\r\nimport Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport HelloWorld from '@/components/HelloWorld'\r\nimport HelloWorlds from '@/components/HelloWorlds'\r\n\r\nVue.use(Router)\r\n\r\nexport default new Router({\r\nroutes: [\r\n{\r\npath: '/',\r\ncomponent: {\r\ndefault: HelloWorld,\r\nb: HelloWorlds\r\n}\r\n},\r\n{\r\npath: 'nav',\r\nname: 'HelloWorlds',\r\ncomponent: HelloWorlds\r\n}\r\n]\r\n})\r\n\r\nVue component\r\n\r\n<script> export default { name: 'App' } </script> <style> #app { font-family: 'Avenir', Helvetica, Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; text-align: center; color: #2c3e50; margin-top: 60px; } </style>\r\n\r\n### What is expected?\r\ni need to show 2 view one above the other. \r\n\r\n### What is actually happening?\r\ngiving error like this\r\n[Vue warn]: Failed to mount component: template or render function not defined.\r\n\r\nfound in\r\n\r\n---> <Anonymous>\r\n       <App> at src/App.vue\r\n         <Root>\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2179","RelatedDescription":"Closed issue \"am unable to use multiple views giving error\" (#2179)"},{"Id":"317844506","IsPullRequest":true,"CreatedAt":"2018-04-26T07:35:02","Actor":"Yakima-Teng","Number":"2176","RawContent":null,"Title":"redundant use of Object.keys","State":"closed","Body":"`configs` exported from `configs.js` is already an array.","Url":"https://github.com/vuejs/vue-router/pull/2176","RelatedDescription":"Closed or merged PR \"redundant use of Object.keys\" (#2176)"},{"Id":"317498966","IsPullRequest":false,"CreatedAt":"2018-04-25T06:52:18","Actor":"Fdango","Number":"2175","RawContent":null,"Title":"Vue-router Nesting problems","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2175","RelatedDescription":"Closed issue \"Vue-router Nesting problems\" (#2175)"},{"Id":"317496725","IsPullRequest":false,"CreatedAt":"2018-04-25T06:42:24","Actor":"Fdango","Number":"2174","RawContent":null,"Title":"I Want to ask next，add template How to jump?","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n[``](https://codepen.io/fdango/pen/zjBvNq?editors=1010)","Url":"https://github.com/vuejs/vue-router/issues/2174","RelatedDescription":"Closed issue \"I Want to ask next，add template How to jump?\" (#2174)"},{"Id":"317469376","IsPullRequest":false,"CreatedAt":"2018-04-25T03:45:55","Actor":"umardraz","Number":"2173","RawContent":null,"Title":"Help required on router.push","State":"closed","Body":"Hi\r\n\r\nI need a little help to understand why one of my router.push not working as per my requirement.\r\n\r\nI have a search box and on submit I am using router.push and then sending the search box value as keyword here is the example\r\n\r\n```\r\nsubmitSearch () {\r\n      this.$router.push({\r\n        name: 'search',\r\n        params: { keyword: this.keyword }\r\n      })\r\n    }\r\n```\r\n\r\nFor live example you can see this on my site\r\n\r\n> https://www.umardraz.com/login\r\n> username = admin\r\n> password = Passw0rd\r\n> \r\n> \r\n\r\nYou can find the search box right sider the header.","Url":"https://github.com/vuejs/vue-router/issues/2173","RelatedDescription":"Closed issue \"Help required on router.push\" (#2173)"},{"Id":"317034262","IsPullRequest":true,"CreatedAt":"2018-04-24T09:18:56","Actor":"csg-coder","Number":"2172","RawContent":null,"Title":"docs(examples): typo fix","State":"closed","Body":"\r\n","Url":"https://github.com/vuejs/vue-router/pull/2172","RelatedDescription":"Closed or merged PR \"docs(examples): typo fix\" (#2172)"},{"Id":"316909265","IsPullRequest":false,"CreatedAt":"2018-04-23T20:17:03","Actor":"luchux","Number":"2171","RawContent":null,"Title":"Documentation link is down? ","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/](https://router.vuejs.org/)\r\n\r\n### Steps to reproduce\r\nVisit links\r\n\r\n### What is expected?\r\nhttps://router.vuejs.org/ should open docs\r\nhttp://vuejs.github.io/vue-router should open docs\r\n\r\n### What is actually happening?\r\nhttps://router.vuejs.org/ (down) \r\nhttp://vuejs.github.io/vue-router (down)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2171","RelatedDescription":"Closed issue \"Documentation link is down? \" (#2171)"},{"Id":"316908030","IsPullRequest":false,"CreatedAt":"2018-04-23T17:27:45","Actor":"luchux","Number":"2170","RawContent":null,"Title":"Documentation link down? ","State":"closed","Body":"I can't access neither of those: \r\nhttp://vuejs.github.io/vue-router\r\nhttps://router.vuejs.org/\r\n\r\n![screen shot 2018-04-23 at 2 26 57 pm](https://user-images.githubusercontent.com/1475656/39142913-785c09e4-4702-11e8-9012-f59132717784.png)\r\n","Url":"https://github.com/vuejs/vue-router/issues/2170","RelatedDescription":"Closed issue \"Documentation link down? \" (#2170)"},{"Id":"316052064","IsPullRequest":true,"CreatedAt":"2018-04-20T08:27:55","Actor":"ppulwey","Number":"2169","RawContent":null,"Title":"Corrected typo","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2169","RelatedDescription":"Closed or merged PR \"Corrected typo\" (#2169)"},{"Id":"316032028","IsPullRequest":false,"CreatedAt":"2018-04-19T20:38:48","Actor":"jordanramstad","Number":"2168","RawContent":null,"Title":"Allow option to adjust url encoding by path-to-regex","State":"open","Body":"### What problem does this feature solve?\r\nIf you need to use a permalink system, where your API routes need to use a path to get the response. An example of this is using Vue as a frontend for Wordpress, but allowing wordpress to dictate the url structure.\r\n\r\nSo for example\r\n\r\nwould have a route that looks like:\r\n```\r\n{\r\n      name: 'post',\r\n      path: '/:permalink([0-9] [/][0-9] [/][\\\\S] )',\r\n      component: StandardArticle\r\n}\r\n```\r\nand a page would have a route that looks like:\r\n```\r\n{\r\n     name: 'page',\r\n     path: '/:permalink*',\r\n     component: StandardPage\r\n}\r\n```\r\n\r\nThis would mean a post url would look like\r\n/2018/04/some-post\r\nand a page would look like\r\n/some-page\r\n\r\nThe regular expressions work but when you actually try to use them it would look like \r\n/2018%2F04%2Fsome-post\r\nfor the post route, page route would look fine since it does not have a / normally\r\n\r\nI see this is an option in path-to-regex but the option is not forwarded to vue-router. This means that if a path would have a / it would be urlencoded by path-to-regex and makes it seemingly impossible to get around (at least I have not found a way around it).\r\n\r\nThis would have additional benefits of, for instance being able to not urlencode but instead change / with _ or even encode it to base64 or something.\r\n\r\n### What does the proposed API look like?\r\nIt would just be passing the second parameter of path to regexp's compile function to the route.\r\n```\r\n{\r\n     name: 'post',\r\n     path: '/:permalink([0-9] [/][0-9] [/][\\\\S] )',\r\n     compile: {\r\n         encode: (value, token) => value\r\n     },\r\n     component: StandardArticle\r\n},\r\n```\r\nhttps://github.com/pillarjs/path-to-regexp#compile-reverse-path-to-regexp\r\n\r\nhttps://github.com/vuejs/vue-router/blob/dev/src/util/params.js\r\non line 20 is where it would need to be passed in some way, `{ pretty: true }` is where the encoding can be changed.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2168","RelatedDescription":"Open issue \"Allow option to adjust url encoding by path-to-regex\" (#2168)"},{"Id":"315969587","IsPullRequest":false,"CreatedAt":"2018-04-19T17:26:17","Actor":"abhipanda","Number":"2167","RawContent":null,"Title":"scrollBehavior with SSR ( savedPosition)","State":"closed","Body":"I cannot get scrollBehavior to work with SSR, do we have an example for this usecase? The savedPosition is always giving null.\r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/2167","RelatedDescription":"Closed issue \"scrollBehavior with SSR ( savedPosition)\" (#2167)"},{"Id":"315898576","IsPullRequest":false,"CreatedAt":"2018-04-19T14:18:17","Actor":"xiaoshengkai","Number":"2166","RawContent":null,"Title":"router 嵌套路由，二级路径名，按照 文档实例，无效","State":"closed","Body":"{\r\n      path: '/home/:id',\r\n      component: home,\r\n      children: [\r\n        {\r\n          path: '/publishOrder',\r\n          name: 'publishOrder',\r\n          component: publishOrder\r\n        },\r\n        {\r\n          path: '/todayOrder',\r\n          name: 'todayOrder',\r\n          component: todayOrder\r\n        },\r\n        {\r\n          path: '',\r\n          component: publishOrder\r\n        }\r\n      ]\r\n    }\r\n\r\n按照文档示例如此，二级路由匹配不到响应的二级路由组件\r\n其中，把二级路由改为 \r\n      {\r\n          path: '/home/publishOrder',\r\n          name: 'publishOrder',\r\n          component: publishOrder\r\n        },\r\n        {\r\n          path: '/home/todayOrder',\r\n          name: 'todayOrder',\r\n          component: todayOrder\r\n        }\r\n成功","Url":"https://github.com/vuejs/vue-router/issues/2166","RelatedDescription":"Closed issue \"router 嵌套路由，二级路径名，按照 文档实例，无效\" (#2166)"},{"Id":"315853368","IsPullRequest":false,"CreatedAt":"2018-04-19T12:22:54","Actor":"kunaldodiya","Number":"2165","RawContent":null,"Title":"Navigate back with previous state without refetching all data ???","State":"closed","Body":"I am using NativeScript Vue and vue router, everything works fine, but there is one problem i am facing please help.\r\n\r\nIn NativeScript default router, I can say\r\n\r\n`\r\nimport Detail from \"../pages/Detail\";\r\nexport default {\r\n   methods: {\r\n     navigate(){\r\n       this.$navigateTo(Detail)\r\n     }\r\n   }\r\n}\r\n`\r\n\r\nwhen i use default router, it let me come back with all data, so if i have fetch 20th page result from 3rd party api and on that page i found something that i wanna look. i can click on that go to detail page and come back, and still it is all there.. \r\n\r\nBut when i use Vue Router, and click on any result on 20th page.. yes, it take me to the detail page but when i press back.. again it make a call to 3rd party as Created method activated and i have to fetch all again.\r\n\r\nhow to just do achieve something like native routing on nativescript.. ????","Url":"https://github.com/vuejs/vue-router/issues/2165","RelatedDescription":"Closed issue \"Navigate back with previous state without refetching all data ???\" (#2165)"},{"Id":"315702603","IsPullRequest":false,"CreatedAt":"2018-04-19T05:23:35","Actor":"haizhilin2013","Number":"2164","RawContent":null,"Title":"有没有预加载的路由组件","State":"closed","Body":"### What problem does this feature solve?\r\n![default](https://user-images.githubusercontent.com/5070345/38925720-036c87b2-4333-11e8-874a-2afde7ac6bed.png)\r\n图上，用vue-router同时打开了好几个页面，因为每个页面有好多接口，有些接口请求比较慢，有没有一种机制是同时打开好多页面的时候，有个优先级，当打开到最后一个页面时先打开，然后依次载之前的数据呢？就好比队列一样的功能。\r\n\r\n### What does the proposed API look like?\r\nvue-router api\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2164","RelatedDescription":"Closed issue \"有没有预加载的路由组件\" (#2164)"},{"Id":"315530142","IsPullRequest":false,"CreatedAt":"2018-04-18T15:27:49","Actor":"yyx990803","Number":"2163","RawContent":null,"Title":"Scroll behavior: hash that starts with number","State":"open","Body":"ref: https://github.com/vuejs/vuepress/issues/121\r\n\r\nWhen the selector starts with `/^#\\d/`, should use `getElementById` instead.","Url":"https://github.com/vuejs/vue-router/issues/2163","RelatedDescription":"Open issue \"Scroll behavior: hash that starts with number\" (#2163)"},{"Id":"315457808","IsPullRequest":false,"CreatedAt":"2018-04-18T12:34:22","Actor":"shubich","Number":"2162","RawContent":null,"Title":"Nested routes doesn't mounting after router push named-routes","State":"closed","Body":"### Version\r\n2.6.0\r\n\r\n### Reproduction link\r\n[https://codepen.io/shubich/pen/MGWoMR](https://codepen.io/shubich/pen/MGWoMR)\r\n\r\n### Steps to reproduce\r\nclick button \"work\" and \"doesn't work\"\r\n\r\n### What is expected?\r\nNested routes mounting after router push named-routes\r\n\r\n### What is actually happening?\r\nNested routes doesn't mounting after router push named-routes\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2162","RelatedDescription":"Closed issue \"Nested routes doesn't mounting after router push named-routes\" (#2162)"},{"Id":"315445349","IsPullRequest":false,"CreatedAt":"2018-04-18T11:45:50","Actor":"shubich","Number":"2161","RawContent":null,"Title":"Nested route don't mounting after router push","State":"closed","Body":"**router**\r\n``` javascript\r\nconst router = new Router({\r\n  mode: 'history',\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      name: ROUTES.TRENDS,\r\n      component: Trends,\r\n      children: [\r\n        { path: '', components: { [ROUTES.DETAILS]: Providers } },\r\n      ],\r\n      meta: { requiresAuth: true },\r\n    }, ...\r\n  ],\r\n});\r\n```\r\n**sidebar**\r\n``` html\r\n    <div class=\"sidebar\">\r\n      <app-logo />\r\n      <app-menu />\r\n      <router-view :name='ROUTES.DETAILS'/>\r\n    </div>\r\n```\r\n\r\n\r\n**loginform**\r\n``` javascript\r\n    watch: {\r\n      isAuthenticated() {\r\n        if (this.isAuthenticated) {\r\n          this.$router.push({ name: ROUTES.TRENDS });\r\n        }\r\n      }, ...\r\n    },\r\n```\r\n\r\n`<router-view :name='ROUTES.DETAILS'/>` doesn't mounting!\r\nBut it's working when I use ` this.$router.push('/);`\r\n\r\nWhat's wrong?\r\n","Url":"https://github.com/vuejs/vue-router/issues/2161","RelatedDescription":"Closed issue \"Nested route don't mounting after router push\" (#2161)"},{"Id":"315434084","IsPullRequest":false,"CreatedAt":"2018-04-18T11:07:08","Actor":"Limuyang1013","Number":"2160","RawContent":null,"Title":"video cannot resume play when using vue-router","State":"closed","Body":"#### Version\r\n3.0.1\r\n\r\n#### Reproduction link\r\nBecause this problem happened at a project which is in development so i cannot offer a demo temporarily\r\n\r\n#### Steps to reproduce\r\nAt first,I use vue-router in my project which has two pages, let me call them page A and page B\r\nthen,I put an video which is fullscreen display in page a, and i overlap a button on the video to control the video to play or pause\r\nwhen i pause the video,the app will jump from page A to pageB,\r\npaegB has also a button used to jump back to pageA，when i click button on pageB i will emit a event to pageA, and use router.back() to back to pageA, when pageA $on get the event emit in PageB,the paused video will resume to play, in my project, the code Running well in anyone Android machine，but in Iphone6s Iphone8 even in IphoneX when i come back from pageA, i cannot find the scene of the video,so i want to you to make sure,is this caused by vue-router or ios system? thanks a lot , i tried my best but cannot fix it\r\n\r\n#### What is expected?\r\nwhen i come back from pageB, i want to resume my video,but now i cannot see the video scene,and use video's official methods such as  play() or pause() seems useless,so i  reload the video and restart to play,but on any Android machine my code running well,so it make me confused\r\n","Url":"https://github.com/vuejs/vue-router/issues/2160","RelatedDescription":"Closed issue \"video cannot resume play when using vue-router\" (#2160)"},{"Id":"315416816","IsPullRequest":false,"CreatedAt":"2018-04-18T10:12:41","Actor":"haizhilin2013","Number":"2159","RawContent":null,"Title":"有没有预加载的路由组件","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n\r\n![default](https://user-images.githubusercontent.com/5070345/38925720-036c87b2-4333-11e8-874a-2afde7ac6bed.png)\r\n图上，用vue-router同时打开了好几个页面，因为每个页面有好多接口，有些接口请求比较慢，有没有一种机制是同时打开好多页面的时候，有个优先级，最后一个页面先打开，然后依次载之前的数据呢？就好比队列一样的功能。","Url":"https://github.com/vuejs/vue-router/issues/2159","RelatedDescription":"Closed issue \"有没有预加载的路由组件\" (#2159)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"320843685","IsPullRequest":false,"CreatedAt":"2018-05-07T15:26:56","Actor":"hjJunior","Number":"1259","RawContent":null,"Title":"vuex unknown action type","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\nI tried to reproduce here, but my code is a little different, I'm using by npm\r\n[https://jsfiddle.net/sgwe6qde/4/](https://jsfiddle.net/sgwe6qde/4/)\r\n\r\n### Steps to reproduce\r\nCall to action from store module\r\n\r\n### What is expected?\r\nI expected the function to be executed\r\n\r\n### What is actually happening?\r\nI'm getting the error saying 'unknown action type: matriculas/fetchMatriculaTab'\r\n\r\n---\r\nI tried to search about it on web, and I solve to put namespaced: true, but I keep got this error,\r\nI also have tried to use mapAction in another way\r\n`...Vuex.mapActions('matriculas', ['fetchMatriculaTab'])`\r\nSo at this way, I get error saying  'module namespaec not found'\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1259","RelatedDescription":"Closed issue \"vuex unknown action type\" (#1259)"},{"Id":"315820263","IsPullRequest":true,"CreatedAt":"2018-05-05T19:37:26","Actor":"hungphongbk","Number":"1241","RawContent":null,"Title":"🇻🇳Vietnamese translation","State":"closed","Body":"Vietnamese translation of Vuex docs. Hope this translation helps many others come from Vietnam join the Vue community.","Url":"https://github.com/vuejs/vuex/pull/1241","RelatedDescription":"Closed or merged PR \"🇻🇳Vietnamese translation\" (#1241)"},{"Id":"320524785","IsPullRequest":false,"CreatedAt":"2018-05-05T17:00:36","Actor":"jmcooper","Number":"1258","RawContent":null,"Title":"Add ability to access namespaced getters with dot notation","State":"open","Body":"### What problem does this feature solve?\r\nWhen working with a namespaced module (e.g. a users module), you can access items on the user module's state like this: \r\n`this.$store.state.users.user`\r\n\r\nHowever, you can't access getters in the same way.  This will return an error:\r\n`this.$store.getters.users.newUsers`\r\n\r\nBecause `getters.users` is undefined. Instead you have to access it with bracket notation: `this.$store.getters['users/newUsers']`\r\n\r\nThis is true even though, without modules, I can access getters with dot notation:\r\n`this.$store.getters.newUsers`\r\n\r\nIs there a reason why this isn't possible with getters? It would be nice if we could access namespaced getters in the same way we can with namespaced state.  This current behavior seems inconsistent.\r\n\r\n### What does the proposed API look like?\r\nGiven a `users` namespaced module, add the ability to access getters with: `this.$store.getters.users.newUsers`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1258","RelatedDescription":"Open issue \"Add ability to access namespaced getters with dot notation\" (#1258)"},{"Id":"319468849","IsPullRequest":false,"CreatedAt":"2018-05-03T17:18:48","Actor":"jatarga","Number":"1256","RawContent":null,"Title":"Module reusing is not working","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/18l8w90v34](https://codesandbox.io/s/18l8w90v34)\r\n\r\n### Steps to reproduce\r\nhttps://codesandbox.io/s/18l8w90v34\r\n\r\n### What is expected?\r\nMultiple instance of a component with it's (namespaced) store should not share the same state, because I'm initializing the state with new function instance:\r\n\r\n``` js\r\n    export default {\r\n         namespaced: true,\r\n         state: function() {\r\n              // new instance for each component?\r\n              return {\r\n                 counter: 100\r\n              };\r\n          },\r\n        getters: {\r\n            counter: state => state.counter\r\n        },\r\n        mutations: {\r\n             updateCounter(state, counter) {\r\n                 state.counter = counter;\r\n             }\r\n         }\r\n     };\r\n```\r\n\r\n### What is actually happening?\r\nI have a `DepartmentContactSelectorRow `component with it's own store, and want to use that component in different pages but Vuex using same store state for all instances of `DepartmentContactSelectorRow`, although I return `state `with new function instance. I tried it with namespaced and not-namespaced but still same problem. Please check the demo I provided.\r\n\r\nReference doc: https://vuex.vuejs.org/en/modules.html (bottom of page)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1256","RelatedDescription":"Closed issue \"Module reusing is not working\" (#1256)"},{"Id":"319553989","IsPullRequest":false,"CreatedAt":"2018-05-02T13:32:58","Actor":"acan13","Number":"1257","RawContent":null,"Title":"registerModule option to preserve state while initializing attributes added since previous initialization","State":"open","Body":"### What problem does this feature solve?\r\nContext: Currently if you use registerModule with {preserveState: false} it will reinitialize the entire module state and overwrite all the values. If you use {preserveState: true} it will not do anything to the current values.\r\n\r\n\r\nProblem: What if you wish to preserve the values, but you have added attributes since the last time the module was initialized? If you use {preserveState: true} it will not add the new attribute (possible breaking things) while if you use {preserveState: false} it will overwrite all of the state already there. \r\n\r\n\r\nFeature request: Could there be a happy medium where vuex will only initialize attributes that aren't already present?\r\n\r\n\r\nUse case: We are using vue persisted state to persist UI settings stored in vuex. Because we reuse these settings in a few different apps, we store the module definitions in a shared folder and then import them into our different apps using registerModule. If we use {preserveState: false} then the settings in place are overwritten while if we use {preserveState: true} the new settings we add don't get added to the store.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nThe current behavior makes sense to me, so I would propose leaving it and adding another option. I have no idea what to call it, but something like:\r\n```javascript\r\nVue.registerModule('mymodule', myModule, {preserveState: true, updateAttributes: true});\r\n```\r\n\r\nI'm new to this, but I would be willing to look into how to implement it if people think it would be a good idea.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1257","RelatedDescription":"Open issue \"registerModule option to preserve state while initializing attributes added since previous initialization\" (#1257)"},{"Id":"318732713","IsPullRequest":false,"CreatedAt":"2018-04-30T08:51:17","Actor":"ChristianStornowski","Number":"1255","RawContent":null,"Title":"Vuex types are not working with Typescript 2.8.3 for a root store with modules and state key-value pairs","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex](https://github.com/vuejs/vuex)\r\n\r\n### Steps to reproduce\r\n1. clone https://github.com/vuejs/vuex\r\n2. change to typescript 2.8.3\r\n3. npm run test:types\r\n\r\n### What is expected?\r\nNo type error or warning was printed in console\r\n\r\n### What is actually happening?\r\nerror TS2345: Argument of type '{ state: { value: number; }; modules: { a: { modules: { b: { state: { value: number; }; }; }; }; ...' is not assignable to parameter of type 'StoreOptions<RootState>'.\r\n  Types of property 'state' are incompatible.\r\n    Type '{ value: number; }' is not assignable to type 'RootState | undefined'.\r\n      Type '{ value: number; }' is not assignable to type 'RootState'.\r\n        Property 'a' is missing in type '{ value: number; }'.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1255","RelatedDescription":"Closed issue \"Vuex types are not working with Typescript 2.8.3 for a root store with modules and state key-value pairs\" (#1255)"},{"Id":"318608492","IsPullRequest":true,"CreatedAt":"2018-04-28T07:24:06","Actor":"bibi7","Number":"1254","RawContent":null,"Title":"Fix: amend the code in eg.","State":"closed","Body":"Signed-off-by: wangzhaojie <wangzhaojie@antiy.cn>\r\nhey there,  today i'm learing vuex and i find that a little mistake which may be wrong in this md.\r\ni think use `this.state` instead of `state` may be good cuz the console will not go red\r\nhave fun : )","Url":"https://github.com/vuejs/vuex/pull/1254","RelatedDescription":"Closed or merged PR \"Fix: amend the code in eg.\" (#1254)"},{"Id":"318599035","IsPullRequest":true,"CreatedAt":"2018-04-28T04:22:31","Actor":"TheLarkInn","Number":"1253","RawContent":null,"Title":"chore(package.json): add sideEffects: false field to package.json","State":"open","Body":"This PR adds the `\"sideEffects\": false` property in vuex's `package.json` file. This allow's webpack (for those who want to opt-in to requiring vuex's original source files (instead of the flattened esm bundles), then this will allow webpack to aggressively ignore and treeshake unused exports throughout the module system. \r\n\r\nIn many cases this can yield hidden and surprising build time improvements and size reductions in the case that modules flattened from rollup aren't actually needed when webpack performs a scope analysis. \r\n\r\nThe angular team has adopted this approach for the CLI yielding some strong build time speed for webpack (since unused exports are also not resolved, parsed, etc.). From my assessment of the module graph created, it looks that there are no sideEffects created against existing re-exports throughout the codebase, therefore even if a user did opt in on their own will, and remove flow types, there should be no danger of removing code that is needed and causing breakages. \r\n\r\nOverall, this already will not be a breaking change in any way but just provides extra benefits to those (and for the cli (if realized) when using webpack 4 and `mode: production`). Users would still have to explicitly alias vuex (as it shows in your examples folder to realize these build speed and size wins). \r\n\r\nHappy to answer any other questions.\r\n~Sean + [webpack team](https://github.com/webpack) \r\n\r\nRelated: https://github.com/vuejs/vue/pull/8099","Url":"https://github.com/vuejs/vuex/pull/1253","RelatedDescription":"Open PR \"chore(package.json): add sideEffects: false field to package.json\" (#1253)"},{"Id":"317907922","IsPullRequest":true,"CreatedAt":"2018-04-26T07:26:40","Actor":"songzeng2016","Number":"1252","RawContent":null,"Title":"Modify object extended operator case","State":"open","Body":"Connected above, easier to understand.","Url":"https://github.com/vuejs/vuex/pull/1252","RelatedDescription":"Open PR \"Modify object extended operator case\" (#1252)"},{"Id":"317388828","IsPullRequest":false,"CreatedAt":"2018-04-24T20:46:35","Actor":"grimaldou","Number":"1251","RawContent":null,"Title":"Error installing issue","State":"closed","Body":"Hi guys, running the ```npm install --save vuex```\r\n\r\nthrows:\r\nnpm ERR! Could not install from \"vuex\" as it does not contain a package.json file. \r\n\r\nIm installing in a fresh repo and also some old projects I have since today display the same error\r\n\r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1251","RelatedDescription":"Closed issue \"Error installing issue\" (#1251)"},{"Id":"316915655","IsPullRequest":false,"CreatedAt":"2018-04-24T09:06:07","Actor":"suau","Number":"1249","RawContent":null,"Title":"Vuex.Store.watch with immediate:true is too immediate","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/suaujs/8b9m301c/](https://jsfiddle.net/suaujs/8b9m301c/)\r\n\r\n### Steps to reproduce\r\nClick run in the jsfiddle and check the console\r\n\r\n### What is expected?\r\nThe Vuex.Store.watch method returns a unwatch function, which can be called to stop watching.\r\nWith the immediate option, the current value should be called and the unwatch() function should be available in the callback.\r\n\r\n### What is actually happening?\r\nThe issue arises when Vuex.Store.watch is used with the immediate option, which will trigger the callback synchronously within the watch() call.\r\ntherefore it isn't possible to unwatch from within the callback anymore as the callback is called before the watch() method returns the unwatch method.\r\n\r\n---\r\n### Why is this important/usecase:\r\nGet a store object until an expected value is returned, then stop watching and execute an action.\r\nExample 1: Get the \"user\" object from the store, let's assume:\r\n- undefined: the user hasn't been loaded from localstorage yet \r\n- null: means there is no user\r\n- object: the user is loaded and logged in\r\n\r\nhere is some code on how I'd do that (not working, due to mentioned behavior/bug):\r\n```\r\nfunction getUser(store: Store): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n        const unwatch = store.watch(\r\n            (state: any) => {\r\n                return state.user;\r\n            },\r\n            (value: any) => {\r\n                if (value || value === null) {\r\n                    unwatch(); // THIS WILL THROW AN ERROR IF IT IS THE FIRST VALUE RECEIVED\r\n                    resolve(value)\r\n                }\r\n            },\r\n            {\r\n                immediate: true\r\n            }\r\n        );\r\n    });\r\n}\r\n```\r\n\r\n### Possible solutions\r\n- Vuex.Store.watch should never run the getter or callback synchronously in the `watch()` call\r\n- pass in an unwatch function as the third parameter into the callback (see workaround wrapper below)\r\n- make use of the callbacks return value, e.g. `return true` will stop watching\r\n\r\n### Workaround\r\nManually check if the current state is already meeting your `unwatch()` expectations and only register a store watcher if that's not the case. Fix for Example 1:\r\n```\r\nfunction getUser(store: Store): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n        const user = store.state.user;\r\n        if (user || user === null) {\r\n            resolve(user);\r\n        } else {\r\n            const unwatch = store.watch(\r\n                (state: any) => {\r\n                    return state.user;\r\n                },\r\n                (value: any) => {\r\n                    if (value || value === null) {\r\n                        unwatch();\r\n                        resolve(value)\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    });\r\n}\r\n```\r\n### Workaround wrapper\r\nThis is a more general purpose wrapper as a workaround (not fully tested)\r\n```\r\nfunction wrapper(store: Store<any>, getter: (state?: any, getters?: any) => any,\r\n                  callback: (newValue?: any, oldValue?: any, unwatch?: () => void) => void, options?: any): () => void {\r\n    // callback receives a unwatch function as third parameter\r\n    if (options.immediate) {\r\n        let shouldStop = false;\r\n        const current = getter(store.state, store.getters);\r\n        callback(current, undefined, () => {\r\n            shouldStop = true;\r\n        });\r\n        if (shouldStop) {\r\n            return () => {};\r\n        }\r\n    }\r\n    const unwatch = store.watch(\r\n        getter,\r\n        (newValue: any, oldValue: any) => {\r\n            callback(newValue, oldValue, unwatch);\r\n        },\r\n        Object.assign({}, options, {immediate: false}));\r\n    return unwatch;\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1249","RelatedDescription":"Closed issue \"Vuex.Store.watch with immediate:true is too immediate\" (#1249)"},{"Id":"316927011","IsPullRequest":false,"CreatedAt":"2018-04-23T18:23:11","Actor":"levimichael","Number":"1250","RawContent":null,"Title":"Need more specific errors for missing mapping helpers","State":"closed","Body":"Hello! I've run into this issue a few times over the past few weeks. When setting up my mapState, etc, I often forget to import the function from vuex into my component. I realize that this is a result of my own forgetfulness, however the error \"Cannot read property 'middleware' of undefined\" is not helpful.\r\n\r\nAlthough by now I'm starting to catch myself by attributing that error to missing an import. 😆\r\n\r\nNot sure what can be done with this specifically, but it would be nice to see more specific errors until I break this habit of forgetting. ","Url":"https://github.com/vuejs/vuex/issues/1250","RelatedDescription":"Closed issue \"Need more specific errors for missing mapping helpers\" (#1250)"},{"Id":"316911432","IsPullRequest":false,"CreatedAt":"2018-04-23T17:37:12","Actor":"suau","Number":"1248","RawContent":null,"Title":"Vuex.Store.watch with immediate:true is too immediate","State":"closed","Body":"### Expected:\r\nThe `Vuex.Store.watch` method returns a `unwatch function`, which can be called to stop watching.\r\nThis can be called from within the callback as expected. (note: the callback will only be called on changes, the initial value will only be returned if the immediate option is used)\r\n\r\n### Issue:\r\nThe issue arises when `Vuex.Store.watch` is used with the `immediate option`, which will trigger the callback immediately with the current value of the expression.\r\nUsing `immediate: true` it isn't possible to unwatch from within the callback anymore as the callback is called before the watch() method returns the unwatch method.\r\n\r\n### Why is this important/usecase:\r\nGet a store object until an expected value is returned, then stop watching and execute an action.\r\nExample 1: Get the \"user\" object from the store, let's assume:\r\n- undefined: the user hasn't been loaded from localstorage yet \r\n- null: means there is no user\r\n- object: the user is loaded and logged in\r\n\r\nhere is some code on how I'd do that (not working, due to mentioned behavior/bug):\r\n```\r\nfunction getUser(store: Store): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n        const unwatch = store.watch(\r\n            (state: any) => {\r\n                return state.user;\r\n            },\r\n            (value: any) => {\r\n                if (value || value === null) {\r\n                    unwatch(); // THIS WILL THROW AN ERROR IF IT IS THE FIRST VALUE RECEIVED\r\n                    resolve(value)\r\n                }\r\n            },\r\n            {\r\n                immediate: true\r\n            }\r\n        );\r\n    });\r\n}\r\n```\r\n\r\nI've created a fiddle here to showcase the issue, (just set immediate: false to see how it should work):\r\nhttps://jsfiddle.net/suaujs/8b9m301c/\r\n\r\n### Possible solutions\r\n- Vuex.Store.watch should never run the getter or callback synchronously in the `watch()` call\r\n- pass in an unwatch function as the third parameter into the callback (see workaround wrapper below)\r\n- make use of the callbacks return value, e.g. `return true` will stop watching\r\n\r\n### Workaround\r\nManually check if the current state is already meeting your `unwatch()` expectations and only register a store watcher if that's not the case. Fix for Example 1:\r\n```\r\nfunction getUser(store: Store): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n        const user = store.state.user;\r\n        if (user || user === null) {\r\n            resolve(user);\r\n        } else {\r\n            const unwatch = store.watch(\r\n                (state: any) => {\r\n                    return state.user;\r\n                },\r\n                (value: any) => {\r\n                    if (value || value === null) {\r\n                        unwatch();\r\n                        resolve(value)\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    });\r\n}\r\n```\r\n### Workaround wrapper\r\nThis is a more general purpose wrapper as a workaround (not fully tested)\r\n```\r\nfunction wrapper(store: Store<any>, getter: (state?: any, getters?: any) => any,\r\n                  callback: (newValue?: any, oldValue?: any, unwatch?: () => void) => void, options?: any): () => void {\r\n    // callback receives a unwatch function as third parameter\r\n    if (options.immediate) {\r\n        let shouldStop = false;\r\n        const current = getter(store.state, store.getters);\r\n        callback(current, undefined, () => {\r\n            shouldStop = true;\r\n        });\r\n        if (shouldStop) {\r\n            return () => {};\r\n        }\r\n    }\r\n    const unwatch = store.watch(\r\n        getter,\r\n        (newValue: any, oldValue: any) => {\r\n            callback(newValue, oldValue, unwatch);\r\n        },\r\n        Object.assign({}, options, {immediate: false}));\r\n    return unwatch;\r\n}\r\n```\r\n","Url":"https://github.com/vuejs/vuex/issues/1248","RelatedDescription":"Closed issue \"Vuex.Store.watch with immediate:true is too immediate\" (#1248)"},{"Id":"316233065","IsPullRequest":false,"CreatedAt":"2018-04-23T14:12:30","Actor":"frissdiegurke","Number":"1243","RawContent":null,"Title":"Inconsistent reference to replaced state","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/frissdiegurke/50wL7mdz/326656/](https://jsfiddle.net/frissdiegurke/50wL7mdz/326656/)\r\n\r\n### Steps to reproduce\r\n1. Use `store.replaceState` with some new state object that is not the same as the current state.\r\n\r\n### What is expected?\r\n`store._modules.root.state` and `store._modules.root.context.state` should both reference the new state object\r\n\r\n### What is actually happening?\r\n`store._modules.root.state` instead still references the old (detached) state object\r\n\r\n---\r\nI know that `_modules` is a considered private attribute (as the leading `_` tells me), but I thought I should notify you anyways since this is probably unintentional behavior (e.g. it does block garbage collection of the old state) and could lead to further internal issues.\r\n\r\nFor namespaced modules the behavior within `_modulesNamespaceMap` is as expected.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1243","RelatedDescription":"Closed issue \"Inconsistent reference to replaced state\" (#1243)"},{"Id":"316170183","IsPullRequest":true,"CreatedAt":"2018-04-22T15:00:26","Actor":"flytux","Number":"1242","RawContent":null,"Title":"Update actions.md","State":"closed","Body":"revise korean word for mutations -> from 돌연변이 to 상태변이 : line 48","Url":"https://github.com/vuejs/vuex/pull/1242","RelatedDescription":"Closed or merged PR \"Update actions.md\" (#1242)"},{"Id":"316500949","IsPullRequest":true,"CreatedAt":"2018-04-22T12:28:36","Actor":"Jinjiang","Number":"1246","RawContent":null,"Title":"[docs][zh-cn] updates","State":"closed","Body":"https://github.com/vuejs/vuex/compare/6e965c9...ea1e4ef","Url":"https://github.com/vuejs/vuex/pull/1246","RelatedDescription":"Closed or merged PR \"[docs][zh-cn] updates\" (#1246)"},{"Id":"316569097","IsPullRequest":false,"CreatedAt":"2018-04-22T10:55:19","Actor":"gorbypark","Number":"1247","RawContent":null,"Title":"Support ES6 import from <script type=\"module\"> tag inside browser","State":"open","Body":"### What problem does this feature solve?\r\nUsing vuex in the browser is possible, by using a standard html ```<script src='\"vuex.js\">``` tag, but if you want to use something like mapGetters, it require something like ```import { mapGetters } from 'vuex'```.  This is in theory possible in the browser by using a tag like \r\n```\r\n<script type=\"module>\r\n  import { mapGetters } from './vuex.js'\r\n  ...\r\n</script>\r\n``` \r\nbut appears to not work with vuex.  Vue itself, using the vue.esm.browser.js bundle from unpkg works this way, but if vuex.esm.js is used it produces an error.\r\n```\r\nReferenceError: process is not defined\r\n    at Vue.mappedGetter (vuex.esm.js:848)\r\n    at Watcher.get (vue.js:3140)\r\n    at Watcher.evaluate (vue.js:3247)\r\n    at Proxy.computedGetter (vue.js:3503)\r\n    at Proxy.eval (eval at createFunction (vue.js:10667), <anonymous>:3:144)\r\n    at Vue._render (vue.js:4535)\r\n    at Vue.updateComponent (vue.js:2788)\r\n    at Watcher.get (vue.js:3140)\r\n    at new Watcher (vue.js:3129)\r\n    at mountComponent (vue.js:2795)\r\n```\r\n\r\n### What does the proposed API look like?\r\n```import { ... } from 'vuex.esm.js'``` should work inside the browser.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1247","RelatedDescription":"Open issue \"Support ES6 import from <script type=\"module\"> tag inside browser\" (#1247)"},{"Id":"316343995","IsPullRequest":true,"CreatedAt":"2018-04-20T17:04:54","Actor":"periscuelo","Number":"1245","RawContent":null,"Title":"Fixes for pt-br translation","State":"open","Body":"@ktsn I made a little more of revisions.\r\nI believe now we have a good correction pack to make a update.\r\nCan you or @ErickPetru review it for us?\r\nThanks =)","Url":"https://github.com/vuejs/vuex/pull/1245","RelatedDescription":"Open PR \"Fixes for pt-br translation\" (#1245)"},{"Id":"316273159","IsPullRequest":false,"CreatedAt":"2018-04-20T13:42:36","Actor":"Vic-Dev","Number":"1244","RawContent":null,"Title":"Access module namespace from within module","State":"open","Body":"### What problem does this feature solve?\r\nI want to be able to return different data from my module's getter if the name of the module matches the route name. Ie, I have many modules that all use the same underlying store, but are stored under different namespaces. Each module has a getter that attempts to compare it's namespace with the current route name, and then returns different data if the namespace matches the route name.\r\n\r\n### What does the proposed API look like?\r\nThere's a number of ways of making this information available within a store module. You could have it be another parameter that gets passed in to each function. Eg,\r\n```\r\ngetters: {\r\n  thing: (state, getters, rootState, rootGetters, namespace) {\r\n    console.log(namespace);\r\n  }\r\n}\r\n```\r\n\r\nOr you could make it a property on the state I guess:\r\n\r\n```\r\ngetters: {\r\n  thing: (state, getters, rootState, rootGetters) {\r\n    console.log(state._namespace);\r\n  }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1244","RelatedDescription":"Open issue \"Access module namespace from within module\" (#1244)"},{"Id":"314096808","IsPullRequest":false,"CreatedAt":"2018-04-20T00:43:25","Actor":"isaacguerreir","Number":"1230","RawContent":null,"Title":"[docs] I want to write a Portuguese version","State":"closed","Body":"### What problem does this feature solve?\r\nI'm from Brazil and using Vuex in my work. I want to translate the documentation to Portuguese. I have to do something before start the translation?\r\n\r\n### What does the proposed API look like?\r\nI will only create a paste in docs with the Portuguese version of the documentation, like other languages do.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1230","RelatedDescription":"Closed issue \"[docs] I want to write a Portuguese version\" (#1230)"},{"Id":"315592634","IsPullRequest":true,"CreatedAt":"2018-04-20T00:36:53","Actor":"periscuelo","Number":"1238","RawContent":null,"Title":"(Add pt-br language) Fixes pullrequest of DavidWilliamBalbino ","State":"closed","Body":"I made this pullrequest just to help make the merge of a translation as fast as possible. Thank you all for looking it for us. If need more fixes please, let me know.\r\n\r\nThank you again","Url":"https://github.com/vuejs/vuex/pull/1238","RelatedDescription":"Closed or merged PR \"(Add pt-br language) Fixes pullrequest of DavidWilliamBalbino \" (#1238)"},{"Id":"315708441","IsPullRequest":true,"CreatedAt":"2018-04-19T02:52:38","Actor":"bichikim","Number":"1240","RawContent":null,"Title":"update add isProduction function","State":"closed","Body":" - change using isProduction instead of process.env.NODE_ENV\r\nvuex frequently uses process.env.NODE_ENV so It needs a isProdunction function\r\n","Url":"https://github.com/vuejs/vuex/pull/1240","RelatedDescription":"Closed or merged PR \"update add isProduction function\" (#1240)"},{"Id":"315359436","IsPullRequest":false,"CreatedAt":"2018-04-19T02:39:00","Actor":"aloerina01","Number":"1236","RawContent":null,"Title":"Modify documentation(jp) to remove 'silent commit'","State":"closed","Body":"### What problem does this feature solve?\r\nA user, especially Japanese user, use 'silent' option by mistake.\r\n\r\n### What does the proposed API look like?\r\nRemove or modify below.  \r\n[サイレントコミット · Vuex](https://github.com/vuejs/vuex/blob/5c0050b8861f1995118c9b49a50da25bbd9354ce/docs/ja/mutations.md#%E3%82%B5%E3%82%A4%E3%83%AC%E3%83%B3%E3%83%88%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88)\r\n\r\nRefs:\r\n- [adds mutation filtering to Vuex tab](https://github.com/vuejs/vue-devtools/pull/172)\r\n- [https://github.com/vuejs/vuex/blob/38b236803d592efda141384387bddaf4e0025e2c/src/store.js#L109-L110](https://github.com/vuejs/vuex/blob/38b236803d592efda141384387bddaf4e0025e2c/src/store.js#L109-L110)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1236","RelatedDescription":"Closed issue \"Modify documentation(jp) to remove 'silent commit'\" (#1236)"},{"Id":"315700615","IsPullRequest":true,"CreatedAt":"2018-04-19T02:38:40","Actor":"aloerina01","Number":"1239","RawContent":null,"Title":"docs: Modify document to remove 'silent commit'","State":"closed","Body":"refs: #1236","Url":"https://github.com/vuejs/vuex/pull/1239","RelatedDescription":"Closed or merged PR \"docs: Modify document to remove 'silent commit'\" (#1239)"},{"Id":"315368689","IsPullRequest":false,"CreatedAt":"2018-04-18T08:08:11","Actor":"willypuzzle","Number":"1237","RawContent":null,"Title":"Pass options in mapGetters for computed","State":"closed","Body":"### What problem does this feature solve?\r\nFor example when I use mapGetters, I need the resulting computed ones have cache:false flag set. But it could be valid even for other flags.\r\n\r\n### What does the proposed API look like?\r\n```\r\ncomputed: {\r\n   ...mapGetters('module', {\r\n               simpleGetter: {\r\n                        options: {\r\n                                 cache: false\r\n                        },\r\n                       handler: 'simpleGetter'\r\n               }\r\n      })\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1237","RelatedDescription":"Closed issue \"Pass options in mapGetters for computed\" (#1237)"},{"Id":"315333082","IsPullRequest":true,"CreatedAt":"2018-04-18T08:05:35","Actor":"baooab","Number":"1235","RawContent":null,"Title":"Fix typo","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1235","RelatedDescription":"Closed or merged PR \"Fix typo\" (#1235)"},{"Id":"314511018","IsPullRequest":false,"CreatedAt":"2018-04-16T06:25:17","Actor":"rcholic","Number":"1234","RawContent":null,"Title":"handle async action with promise call to REST API","State":"closed","Body":"### What problem does this feature solve?\r\nI posted the following question on Stackoverflow in the first place, but then I realized I should have probably asked you guys first: [https://stackoverflow.com/questions/49849725/vuex-handle-async-action-with-promise-call-to-rest-api](https://stackoverflow.com/questions/49849725/vuex-handle-async-action-with-promise-call-to-rest-api)\r\n\r\n\r\nI use TypeScript with Vue/Vuex to create a toy app, in which I need to load a list of items from remote API upon rendering a component. In the actions below, I use the library `axios` to make http request, and I return it as a promise:\r\n\r\n```ts\r\n    const actions = {    \r\n      getCurrentSession(context: Context) {\r\n        return axios.get(\"http://localhost:3000/sessions/current\")\r\n          .then((res) => {\r\n            commitSharedFiles(context, res.data.shared_files);\r\n          })\r\n          .catch((e: string) => {\r\n            console.error(e);\r\n          });\r\n      }\r\n    };\r\n    \r\n    // export action\r\n    export const dispatchGetSharedFiles = dispatch(actions.getCurrentSession);\r\n\r\n    // commit\r\n    export const commitSharedFiles = commit(mutations.setSharedFileList);\r\n    \r\n    // mutations to the state tree\r\n    const mutations = {\r\n      setSharedFileList(state: State, sharedFiles: StoreState.DirFile[]) {\r\n        state.sharedFileList = sharedFiles;\r\n      }\r\n    };\r\n```\r\nBecause of the asynchronous nature of the actions, I have to resolve the promise before retrieving the fetched list of files from the store/state tree:\r\n```ts\r\n    // this is called in the mounted() life cycle method:\r\n    Store.dispatchGetSharedFiles(this.$store).then(res => {\r\n                this.sharedFiles = Store.readSharedFilesList(this.$store);\r\n    });\r\n```\r\nThis works, but I think it is very convoluted to resolve the promise and then get the data. Is there a better way to use async actions in Vuex? thanks\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nno idea\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1234","RelatedDescription":"Closed issue \"handle async action with promise call to REST API\" (#1234)"},{"Id":"314392378","IsPullRequest":true,"CreatedAt":"2018-04-15T07:29:25","Actor":"wiiikiii","Number":"1233","RawContent":null,"Title":"Problem in safari double id's","State":"closed","Body":"It seams to be a problem with the app when having id app more than once.","Url":"https://github.com/vuejs/vuex/pull/1233","RelatedDescription":"Closed or merged PR \"Problem in safari double id's\" (#1233)"},{"Id":"314313053","IsPullRequest":true,"CreatedAt":"2018-04-14T09:14:33","Actor":"muronglove","Number":"1232","RawContent":null,"Title":"test-pr","State":"closed","Body":"nothing, just test...","Url":"https://github.com/vuejs/vuex/pull/1232","RelatedDescription":"Closed or merged PR \"test-pr\" (#1232)"},{"Id":"314249264","IsPullRequest":false,"CreatedAt":"2018-04-13T21:01:16","Actor":"MrVichr","Number":"1231","RawContent":null,"Title":"A small fix in typings for StoreOptions","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/l2wzjwp4vm](https://codesandbox.io/s/l2wzjwp4vm)\r\n\r\n### Steps to reproduce\r\nSorry I'm not going to spend several hours making a minimal demo project and uploading it to github just to have 8 letters added. The error and fix should be obvious.\r\n```typescript\r\n// src/datamodel/appstore.ts\r\nclass TAppStore {\r\n  counter: number=0;\r\n};\r\n\r\nexport var AppStore=new Vuex.Store<TAppStore>({ \r\n  state: function() {\r\n    console.log('creating AppStore'); //gets called just fine\r\n    return new TAppStore();\r\n  }\r\n}\r\n```\r\n\r\n\r\n### What is expected?\r\nNo errors reported on compilation.\r\n\r\n### What is actually happening?\r\n```\r\nERROR in j:\\types\\CML\\front\\src\\datamodel\\appstore.ts\r\n[tsl] ERROR in j:\\types\\CML\\front\\src\\datamodel\\appstore.ts(44,2)\r\n      TS2345: Argument of type '{ state: () => TAppStore; }' is not assignable to parameter of type 'StoreOptions<TAppStore>'.\r\n  Types of property 'state' are incompatible.\r\n    Type '() => TAppStore' is not assignable to type 'TAppStore | undefined'.\r\n      Type '() => TAppStore' is not assignable to type 'TAppStore'.\r\n        Property 'counter' is missing in type '() => TAppStore'.\r\n\r\n  Build failed with errors.\r\n```\r\n\r\n---\r\nIt seems that vuex/types/index.d.ts, in interface StoreOptions, is missing the possibility of using a function instead of an object.\r\nThis is the recommended way to initialize state: https://vuex.vuejs.org/en/modules.html (chapter Module Reuse, at the very bottom).\r\nAn easy fix would be editing the vuex/types/index.d.ts StoreOptions:\r\n```diff\r\nexport interface StoreOptions<S> {\r\n- state?: S;\r\n  state?: S|(()=>S);\r\n  getters?: GetterTree<S, S>;\r\n  actions?: ActionTree<S, S>;\r\n  mutations?: MutationTree<S>;\r\n  modules?: ModuleTree<S>;\r\n  plugins?: Plugin<S>[];\r\n  strict?: boolean;\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1231","RelatedDescription":"Open issue \"A small fix in typings for StoreOptions\" (#1231)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-05-08T05:30:36.4646884Z","RunDurationInMilliseconds":4604}