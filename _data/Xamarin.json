{"Data":{"Blog":{"FeedItems":[{"Title":"More Cross-Platform APIs with Xamarin.Essentials Latest Preview","PublishedOn":"2018-06-14T19:11:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced Xamarin.Essentials, a core set of cross-platform APIs to help developers build native apps, at Microsoft Build 2018. Xamarin.Essentials gives developers access to over thirty...","Href":"https://blog.xamarin.com/cross-platform-apis-xamarin-essentials-latest-preview/","RawContent":null},{"Title":"Use MongoDB With Your Xamarin Apps","PublishedOn":"2018-06-12T20:01:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the most important decisions that you&#8217;ll make when designing an app is what type of database to use. Not too long ago, the choice was limited to relational databases like SQL server....","Href":"https://blog.xamarin.com/write-apps-using-mongodb-xamarin/","RawContent":null},{"Title":"Build 2018: Conference Vision Demo App","PublishedOn":"2018-06-07T20:43:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Build 2018 we shipped Xamarin.Forms 3.0. Did you miss the announcement? No worries, you can watch it here to catch up on many of the great new things that will help make you more productive...","Href":"https://blog.xamarin.com/build-2018-conference-vision-demo-app/","RawContent":null},{"Title":"Xamarin.Android Firebase Job Dispatcher: Background Scheduling for all Android Devices","PublishedOn":"2018-06-04T16:00:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Running tasks in the background is important for Android apps. It&#8217;s what helps keep an app responsive to the user and allows work to get done even when the user isn’t actively engaged with the...","Href":"https://blog.xamarin.com/xamarin-android-firebase-job-dispatcher-background-scheduling-android-devices/","RawContent":null},{"Title":"Xamarin and .NET Developer Events this June","PublishedOn":"2018-06-01T18:13:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since the recent Microsoft Build conference, Xamarin and .NET recap events have been springing up all over the globe! Find an event near you this month to get the latest news on the exciting releases,...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-this-june/","RawContent":null},{"Title":"Xamarin University Presents: Guest Lectures from Industry Luminaries!","PublishedOn":"2018-05-30T18:46:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Technology moves quickly; new software, platforms, and frameworks are constantly being developed, improved, and released. Exploring the landscape of developer tools and libraries that we can consume...","Href":"https://blog.xamarin.com/xamarin-university-presents-guest-lectures/","RawContent":null},{"Title":"Contributing to Xamarin.Android","PublishedOn":"2018-05-25T18:15:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin has been open source for over two years now, starting the day we made the exciting announcement about the future of Xamarin. Since then, we&#8217;ve moved the majority of our work out in the...","Href":"https://blog.xamarin.com/contributing-xamarin-android/","RawContent":null},{"Title":"Guest Post: Securing and Versioning Xamarin Apps with Mobile.BuildTools","PublishedOn":"2018-05-23T19:11:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Dan Siegel is a Microsoft MVP, maintainer of the Prism Library, author of numerous dev tools and OSS libraries, leader of the San Diego Xamarin Dev’s Meetup, and a Xamarin blogger. Dan works as a...","Href":"https://blog.xamarin.com/securing-versioning-xamarin-apps-with-mobilebuildtools/","RawContent":null},{"Title":"Xamarin.Essentials: Cross-Platform APIs for Mobile Apps","PublishedOn":"2018-05-16T18:36:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When developing iOS and Android apps with Xamarin, developers can access every native platform API using C#. These bindings not only expose the platform APIs in C#, but add powerful C# features, such...","Href":"https://blog.xamarin.com/xamarin-essentials-cross-platform-apis-mobile-apps/","RawContent":null},{"Title":"Integrating Xamarin.com into Microsoft Sites","PublishedOn":"2018-05-15T22:49:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Over the past year we&#8217;ve started to make it even easier to find Xamarin information on Microsoft sites, and going forward you will start seeing changes to xamarin.com as we continue to migrate...","Href":"https://blog.xamarin.com/integrating-xamarin-com-microsoft-sites/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7835245059","Type":"PullRequestEvent","CreatedAt":"2018-06-17T01:56:04","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1839","RelatedDescription":"Merged pull request \"Bump mono for a couple of Linux build fixes\" (#1839) at xamarin/xamarin-android","RelatedBody":"PR https://github.com/xamarin/xamarin-android/pull/1815 needs the commits to\r\nwork."},{"Id":"7835236411","Type":"PullRequestEvent","CreatedAt":"2018-06-17T01:45:04","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1827","RelatedDescription":"Merged pull request \"[Xamarin.Android.Buiild.Tasks] Allow uncompressed native libraries in apk\" (#1827) at xamarin/xamarin-android","RelatedBody":"Fixes #1822\r\n\r\nCurrently we only apply the `$(AndroidStoreUncompressedFileExtensions)` to\r\nthe resources added to the apk via `aapt2`. All the other resources added\r\nby `BuildApk` are added as `Deflate`. As a result this means an  \r\nXamarin.Android apk cannot run on `Android.Things` since it requires the \r\nnative libraries to be uncompressed.\r\n\r\nWe should we using the `$(AndroidStoreUncompressedFileExtensions)` property\r\nas part of the `BuildApk` process to ensure that files which need to \r\nbe left uncompressed are. "},{"Id":"7835236409","Type":"IssuesEvent","CreatedAt":"2018-06-17T01:45:04","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1822","RelatedDescription":"Closed issue \"Allow storing native libs uncompressed in the .apk\" (#1822) at xamarin/xamarin-android","RelatedBody":"Android Things [appears to require that native libraries be stored uncompressed within the `.apk`](https://gitter.im/xamarin/xamarin-android?at=5b22a616c277fb705dce70bb).\r\n\r\n![native libraries must be uncompressed](https://files.gitter.im/xamarin/xamarin-android/I4QI/image.png)\r\n\r\nWe should support that.\r\n"},{"Id":"7835234121","Type":"PullRequestEvent","CreatedAt":"2018-06-17T01:42:10","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1826","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Dont Import `Xamarin.Android.DefaultOutputPaths.targets` on mac\" (#1826) at xamarin/xamarin-android","RelatedBody":"Context https://github.com/xamarin/xamarin-android/issues/1824\r\n\r\nWe seem to be getting some odd behaviour since commit 13d216f which\r\nintroduced the `DefaultOutputPaths` targets. For example we see\r\nthe following types of paths on MacOS\r\n\r\n\tobj\\/Debug\\foo\r\n\r\nThe theory is that the new target is causing this weirdness. So\r\nlets not import that target on MacOS at all. This is ok because\r\nmost of the code in the target is not used. This should fix these\r\nweird path issues for 15.8. It will give us time to figure out how to\r\nget this new functionality working on MacOS for the next release."},{"Id":"7834433855","Type":"PullRequestEvent","CreatedAt":"2018-06-16T13:57:28","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1839","RelatedDescription":"Opened pull request \"Bump mono for a couple of Linux build fixes\" (#1839) at xamarin/xamarin-android","RelatedBody":"PR https://github.com/xamarin/xamarin-android/pull/1815 needs the commits to\r\nwork."},{"Id":"7832559818","Type":"PullRequestEvent","CreatedAt":"2018-06-15T18:59:18","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1838","RelatedDescription":"Opened pull request \"[test] experiment to see if NUnit2 format is causing hang on Windows\" (#1838) at xamarin/xamarin-android","RelatedBody":""}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7837231893","Type":"IssuesEvent","CreatedAt":"2018-06-18T04:32:07","Actor":"RadwanIbrahim","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3066","RelatedDescription":"Opened issue \"RTL does't switch the margin and the padding\" (#3066) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nswitch from LTR to RTL doesn't mirror the margin and the padding \r\n### Steps to Reproduce\r\n\r\n1. add the below XAML to a content page and check the result\r\n` <StackLayout>\r\n\r\n        <Label Text=\"LeftToRight\"\r\n               Margin=\"10\" />\r\n        <Grid FlowDirection=\"LeftToRight\">\r\n            <BoxView Margin=\"50,0,0,0\"\r\n                     WidthRequest=\"100\"\r\n                     HeightRequest=\"100\"\r\n                     Color=\"Red\"\r\n                     HorizontalOptions=\"Start\"\r\n                     VerticalOptions=\"Start\"\r\n                     FlowDirection=\"LeftToRight\" />\r\n        </Grid>\r\n        <Label Text=\"RightToLeft\"\r\n               Margin=\"10\" />\r\n        <Grid FlowDirection=\"RightToLeft\">\r\n            <BoxView Margin=\"50,0,0,0\"\r\n                     WidthRequest=\"100\"\r\n                     HeightRequest=\"100\"\r\n                     Color=\"Red\"\r\n                     HorizontalOptions=\"Start\"\r\n                     VerticalOptions=\"Start\"\r\n                     FlowDirection=\"RightToLeft\" />\r\n        </Grid>\r\n\r\n    </StackLayout>`\r\n\r\n\r\n\r\n### Expected Behavior\r\nswitching from LTR to RTL Should mirror the margin and the padding \r\n### Actual Behavior\r\nswitching from LTR to RTL doesn't mirror the margin and the padding \r\n### Basic Information\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n\r\n- Nuget Packages:\r\nxamarin forms 3\r\n\r\n### Screenshots\r\n\r\ncurrent state\r\n![screenshot_1529295623](https://user-images.githubusercontent.com/20732537/41518125-af82183e-72c0-11e8-8e27-ebbb4abcdbcc.png)\r\n\r\ndesired state\r\n![screenshot_1529295404](https://user-images.githubusercontent.com/20732537/41518133-b85b8ea4-72c0-11e8-85c5-7cf001ee33c7.png)\r\n\r\n### Reproduction Link\r\n\r\n[RTLMarginIssue.zip](https://github.com/xamarin/Xamarin.Forms/files/2109881/RTLMarginIssue.zip)"},{"Id":"7837158225","Type":"IssuesEvent","CreatedAt":"2018-06-18T03:50:28","Actor":"RadwanIbrahim","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3065","RelatedDescription":"Opened issue \"[UWP] Listview memory leak\" (#3065) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nusing a large data set as ItmesSource of xamarin forms listview produce a memory leak in UWP and when I tried the same behavior in native uwp I didn't able to produce the issue\r\n### Steps to Reproduce\r\n\r\n1. add a listview with a complex view cell (nested grids, images, frame and labels)\r\n2. bind an observableCollection of 3000 item to it \r\n3. hold the scroll by the mouse and move the mouse up and down quickly \r\n4. check the memory allocation in windows task manager during list view scrolling or watch the visual studio diagnostic tool memory allocation \r\n\r\n### Expected Behavior\r\nListView should work properly in uwp\r\n### Actual Behavior\r\nListView produce a memory leak and performance issues in uwp\r\n### Basic Information\r\n- Platform Target Frameworks:\r\n  - UWP:  16299 \r\n- Nuget Packages:\r\nI can produce this with forms 2.5 , 3 , 3 pre4 and the last nightly build 3.1.0.506097\r\n\r\n### Reproduction Link\r\nxamarin forms \r\nhttps://1drv.ms/u/s!AoIY8oQvWbhGgTFicmMFLddURVgJ\r\nuwp without xamarin\r\nhttps://1drv.ms/u/s!AoIY8oQvWbhGgTDaokspB4l3RVk1\r\n\r\nalso we appreciate if you could release a service release with all the listView issues that fixed in 3 and 3.1 for 2.5 as we have apps target 2.5 and we can't update to 3 because we want to support the earlier version of windows \r\n\r\n"},{"Id":"7836201050","Type":"IssuesEvent","CreatedAt":"2018-06-17T16:33:15","Actor":"anirugu","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3064","RelatedDescription":"Opened issue \"Visual Studio crashing a lot when I create a class in shared project and add a reference.\" (#3064) at xamarin/Xamarin.Forms","RelatedBody":"VS 2017 8 previews 2 \r\n\r\nwrite some code or copy paste from somewhere else, just click on the bulb, VS will hang for few seconds and then crash and restarted if you do same light build you will be in the loop of the crash.\r\n\r\nIf I write namespace manually by typing, things will be fine otherwise it's crashing always with the lightbulb."},{"Id":"7835995360","Type":"IssuesEvent","CreatedAt":"2018-06-17T14:09:58","Actor":"solomonfried","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3063","RelatedDescription":"Opened issue \"Gesture Recognizer Event Args\" (#3063) at xamarin/Xamarin.Forms","RelatedBody":"##Summary\r\nGesture Recognizers should provide more information about the gesture event in the Pan/Pinch/Tapped (and hopefully swiped) UpdatedEventArgs\r\n.\r\n\r\nEssential information should include (Mr.Gestures is an excellent reference for what is needed)\r\n\r\n```\r\n- Point DeltaDistance\r\n- Point Velocity\r\n- bool Handled\r\n- Point[] Touches array (the position of fingers on the screen)\r\n- Rectangle ViewPosition\r\n```\r\n##API Changes\r\n\r\nThe above should be included in the EventArgs provided when a Gesture event is raised.\r\n\r\n##Intended Use Case\r\n\r\nAny consumer of Gesture events could use this information to locate and animate Views under the user's fingers. So for example, we could use a single PanGesture on a grid and find the item in the grid under the user's touch and then move that item as the user pans.\r\n"},{"Id":"7835610605","Type":"PullRequestEvent","CreatedAt":"2018-06-17T08:45:11","Actor":"AxelUser","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3062","RelatedDescription":"Closed pull request \"Issue #2680 ScrollView disabling\" (#3062) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n<!-- Describe your changes here. -->\r\n\r\n### Issues Resolved ###\r\n\r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #\r\n\r\n### API Changes ###\r\n\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem -->\r\n\r\n### Platforms Affected ###\r\n\r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"7835589842","Type":"PullRequestEvent","CreatedAt":"2018-06-17T08:25:27","Actor":"AxelUser","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3062","RelatedDescription":"Opened pull request \"Issue #2680 ScrollView disabling\" (#3062) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n<!-- Describe your changes here. -->\r\n\r\n### Issues Resolved ###\r\n\r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #\r\n\r\n### API Changes ###\r\n\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem -->\r\n\r\n### Platforms Affected ###\r\n\r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"7835091659","Type":"PullRequestEvent","CreatedAt":"2018-06-16T22:55:27","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3047","RelatedDescription":"Merged pull request \"[Tizen] Rename EvasObjectWrapper to NativeViewWrapper\" (#3047) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n`EvasObjectWrapper` is renamed to `NativeViewWrapper` for the sake of consistency. It also changed to inhert `ViewRenderer` from `VisualElementRenderer`.\r\n\r\n### Issues Resolved ###\r\n\r\nNone\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Platforms Affected ###\r\n\r\n- Tizen\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7837337615","Type":"IssuesEvent","CreatedAt":"2018-06-18T05:26:02","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4218","RelatedDescription":"Closed issue \"Attempting to JIT compile method while running in aot-only mode on iOS device\" (#4218) at xamarin/xamarin-macios","RelatedBody":"\r\n### Steps to Reproduce\r\n\r\n1. Build our iOS app that has built and run fine for years. Sorry, I don't have a small test project.\r\n2. Run on a real device, an iPhone 5, iOS 10.3.3.\r\n\r\n### Expected Behavior\r\nApp runs without throwing exceptions\r\n\r\n### Actual Behavior\r\n\r\nAt a certain point during app use, the following exception gets thrown:\r\n\r\nSystem.ExecutionEngineException: Attempting to JIT compile method 'MyApp.OfflineCache:SaveSuccessfulLogin (MyApp.Api.Models.User,MyApp.Api.Models.AuthResponse,System.Collections.Generic.List`1<MyApp.Api.Models.Store>,string)' while running in aot-only mode. See https://developer.xamarin.com/guides/ios/advanced_topics/limitations/ for more information.\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Professional 2017 for Mac ===\r\n\r\nVersion 7.5.2 (build 40)\r\nInstallation UUID: 2b1315c4-b829-4cdb-a29e-4aa07c6de5c4\r\nRuntime:\r\n\tMono 5.10.1.57 (2017-12/ea8a24b1bbf) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 510010057\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.1\r\n\t1.0.4\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.3.2 (Visual Studio Professional)\r\nAndroid SDK: /Users/pdonovan/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t2.3   (API level 10)\r\n\t\t4.0.3 (API level 15)\r\n\t\t4.1   (API level 16)\r\n\t\t6.0   (API level 23)\r\n\t\t7.0   (API level 24)\r\n\t\t7.1   (API level 25)\r\n\t\t8.0   (API level 26)\r\n\t\t8.1   (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 25\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_111\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_111-b14)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.111-b14, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.4 (14160)\r\nBuild 9F1027a\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.4.1.193 (Visual Studio Professional)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.12.0.4 (Visual Studio Professional)\r\nHash: 64fece5f\r\nBranch: d15-7\r\nBuild date: 2018-05-29 20:00:44-0400\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705020040\r\nGit revision: cfe2fc0566bc4db990242959de40505a13f58352\r\nBuild date: 2018-05-30 11:24:18-04\r\nXamarin addins: 3ac7413ef51a88e06367313c27aec8f7292752a6\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.5\r\nDarwin 17.6.0 Darwin Kernel Version 17.6.0\r\n    Tue May  8 15:22:16 PDT 2018\r\n    root:xnu-4570.61.1~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nLiveXAML 1.3.31\r\nInternet of Things (IoT) development (Preview) 7.5\r\n\r\n\r\n```\r\n\r\nI have read as much of the documentation and previous tickets similar to this bug but I don't see how our code would trigger the problem. If I comment out this part that another different function later on triggers a similar exception.\r\n\r\nThe only thing that I can think of that may have triggered it is that most of the projects in the solution were recently converted from PCL to .NET Standard 1.3 and 2.0. I had been building the Android version on Windows VS 2017, and then checked out the latest code on the Mac to build the iOS version.\r\n"},{"Id":"7834268656","Type":"IssuesEvent","CreatedAt":"2018-06-16T11:27:06","Actor":"SpiegelSoft","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4265","RelatedDescription":"Closed issue \"F# iOS project: MTOUCH : error MT2002: Failed to resolve \"Microsoft.FSharp.Control.AsyncActivation`1\" reference from \"FSharp.Core, Version=4.5.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\"\" (#4265) at xamarin/xamarin-macios","RelatedBody":"<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. Create a Xamarin iOS project using F#, with the latest NuGet packages\r\n2. Build it \r\n3. The error in the title is generated.\r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Environment\r\nMicrosoft Visual Studio Professional 2017  (2)\r\nVersion 15.7.3\r\nVisualStudio.15.Release/15.7.3+27703.2026\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Professional\r\n\r\nApplication Insights Tools for Visual Studio Package   8.12.10405.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40522.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.7.31476\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60419.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.40424.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.3000.2\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Functions and Web Jobs Tools   15.0.40424.0\r\nAzure Functions and Web Jobs Tools\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.3.3000.2\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   2.8.3-beta6-62923-07. Commit Hash: 7aafab561e449da50712e16c9e81742b8e7a2969\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nCookiecutter   15.7.18131.1\r\nProvides tools for finding, instantiating and customizing templates in cookiecutter format.\r\n\r\nDotfuscator Community Edition   5.34.0.6830-9173b9a63\r\nPreEmptive Protection - Dotfuscator CE\r\n\r\nFabric.ApplicationInsights   1.0\r\nAllows user to instrument their Service Fabric projects for Application Insights.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMerq   1.1.19-rc (a4ffc1b)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.3.3000.2\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.3.3000.2\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   2.1\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.3.3000.2\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10420.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNode.js Tools   1.4.11027.3\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython   15.7.18131.1\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - Django support   15.7.18131.1\r\nProvides templates and integration for the Django web framework.\r\n\r\nPython - IronPython support   15.7.18131.1\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   15.7.18131.1\r\nProfiling support for Python projects.\r\n\r\nR Tools for Visual Studio   1.3.40517.1016\r\nProvides project system, R Interactive window, plotting, and more for the R programming language.\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61804.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   15.7.20419.2003\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.8.3-beta6-62923-07. Commit Hash: 7aafab561e449da50712e16c9e81742b8e7a2969\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.1 for F# 4.1   15.7.0.0.  Commit Hash: 2527e6829ecdc8281ee60d83be8cfd0fa720a648.\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27703.2026\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWindows Machine Learning Generator Extension   1.0\r\nWindows Machine Learning Visual Studio Extension Detailed Info\r\n\r\nXamarin   4.10.10.1 (f1760154c)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.12.1 (f3257e429)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.3.3.2 (HEAD/dffc59120)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.12.0.4 (64fece5)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\n\n> VS bug [#634504](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/634504)"},{"Id":"7833682962","Type":"PullRequestEvent","CreatedAt":"2018-06-16T01:46:36","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4281","RelatedDescription":"Merged pull request \"[IdentityLookupUI] Add bindings for Xcode 10 Beta 1\" (#4281) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7833202856","Type":"PullRequestEvent","CreatedAt":"2018-06-15T21:47:18","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4279","RelatedDescription":"Merged pull request \"[Jenkins] Publish bundle.zip and msbuild.zip as GH statuses as well. (#4238)\" (#4279) at xamarin/xamarin-macios","RelatedBody":"This also requires a maccore bump.\n\nDiff: https://github.com/xamarin/maccore/compare/76ab6a58ff9061d35450f4bc75d075874a8489a8...347ba77a16159e911191587a49dd55c100117c84"},{"Id":"7833195777","Type":"IssuesEvent","CreatedAt":"2018-06-15T21:45:10","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4271","RelatedDescription":"Closed issue \"Make exception marshaling work with system mono\" (#4271) at xamarin/xamarin-macios","RelatedBody":"_Submitted by Rolf Bjarne Kvinge \\[MSFT\\] \\[MSFT\\] on 2017-10-09 17:11 UTC_\r\n\r\n[Spinoff from bug #[59979](https://bugzilla.xamarin.com/show_bug.cgi?id=59979), which ended up a confusing mess due to fixes from several teams included - this bug is about the problem in Xamarin.Mac]\r\n\r\nSlack:\r\n\r\n```\r\nAlan McGovern [12:53] 2017-10-05 11:52:49.733 MonoDevelop[46104:4956973] Xamarin.Mac: Could not load mono_set_pending_exception\r\nAlan McGovern [12:54] any idea why that's crashing my IDE?\r\nAlan McGovern [12:54] https://gist.github.com/alanmcgovern/b39f921c6cf14ab6f2e78abac2f74c94\r\n\r\nRolf Kvinge [12:56] let me look\r\n\r\nRolf Kvinge [12:57] https://github.com/xamarin/ios-sim-sharp/blob/7b7a174d398a3ccd2b82936619b3f74d8baa7e73/MonoTouch.Hosting/Bindings/Library64.cs#L39\r\nRolf Kvinge [12:57] it's the `[MarshalNativeExceptions]` attribute\r\n\r\nAlan McGovern [12:58] yeah - we want to marshal native exceptions\r\n\r\nRolf Kvinge [12:58] XM will catch the native exception, convert it to a managed exception, and call `mono_set_pending_exception`\r\n\r\nAlan McGovern [12:58] as we have for 5-6 years now 😛\r\n\r\nRolf Kvinge [12:58] but `mono_set_pending_exception` is a private symbol, so XM doesn't find it\r\nRolf Kvinge [12:58] and then aborts\r\n\r\nAlan McGovern [12:58] why is it private?\r\nAlan McGovern [12:58] that's an ABI breakage by the sounds of it\r\n\r\nRolf Kvinge [12:59] it's not public in the headers\r\n\r\nAlan McGovern [12:59] when did it become not-public?\r\n\r\nRolf Kvinge [12:59] which works as long as you link statically\r\nRolf Kvinge [12:59] but it breaks when using the system libmono.dylib\r\n\r\nAlan McGovern [12:59] this is the configuration we've been shipping for years now\r\n\r\nRolf Kvinge [13:00] it probably broke when I implemented better support for marshalling exceptions\r\n```\r\n\r\n\r\n<br />\r\n\r\nPR in progress which needs to be completed: <https://github.com/xamarin/xamarin-macios/pull/2853>\r\n\r\nWorkaround to call mono\\_raise\\_exception if mono\\_set\\_pending\\_exception isn't available:\r\n\r\nmaster: <https://github.com/xamarin/xamarin-macios/pull/2845> \r\nd15-5: <https://github.com/mono/mono/pull/4654>\r\n\r\n***\r\n\r\n_Xamarin Bugzilla comment 1 by Rolf Bjarne Kvinge [MSFT] [MSFT] on 2018-03-22 12:38 UTC_\r\n\r\nNew mono PR: <https://github.com/mono/mono/pull/7759>\r\n\r\n* * *\r\n\r\n_Reference: <https://bugzilla.xamarin.com/show_bug.cgi?id=60065>_"},{"Id":"7833195368","Type":"PullRequestEvent","CreatedAt":"2018-06-15T21:45:03","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4272","RelatedDescription":"Merged pull request \"[runtime] Use public mono API to set the pending exception. Fixes #4271.\" (#4272) at xamarin/xamarin-macios","RelatedBody":"This makes exception marshaling work with Xamarin.Mac apps that use the system\nmono (such as Visual Studio for Mac, and assuming at least a v5.12 system\nmono).\n\nhttps://github.com/xamarin/xamarin-macios/issues/4271"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1007343670775963649","CreatedAt":"2018-06-14T19:27:01+00:00","UserScreenname":"xamarinhq","Text":"Get access to more cross-platform APIs with the latest Xamarin.Essentials Preview: https://t.co/WqtCV8OneC https://t.co/FgdScqkpPt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":111,"FavoriteCount":59,"RawContent":null},{"Id":"1007280505820254209","CreatedAt":"2018-06-14T15:16:01+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/zLa3RTUgaL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":44,"FavoriteCount":18,"RawContent":null},{"Id":"1006915501405167616","CreatedAt":"2018-06-13T15:05:37+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/U9huu5DdJW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":60,"FavoriteCount":22,"RawContent":null},{"Id":"1006682387743461376","CreatedAt":"2018-06-12T23:39:19+00:00","UserScreenname":"xamarinhq","Text":"Create your first #Xamarin app using #MongoDB: https://t.co/Nu6lZzYwYX","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":60,"FavoriteCount":27,"RawContent":null},{"Id":"1006563778471788544","CreatedAt":"2018-06-12T15:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":57,"FavoriteCount":23,"RawContent":null},{"Id":"1006201893369106433","CreatedAt":"2018-06-11T15:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":23,"RawContent":null},{"Id":"1005923084023582721","CreatedAt":"2018-06-10T21:22:07+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/OPYTFzsQk4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":67,"FavoriteCount":28,"RawContent":null},{"Id":"1005574764382117888","CreatedAt":"2018-06-09T22:18:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/kaQCoeUycf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":22,"RawContent":null},{"Id":"1005116748180402176","CreatedAt":"2018-06-08T15:58:01+00:00","UserScreenname":"xamarinhq","Text":"Get started debugging Mono from the source code in the third part of our #Xamarin Open Source Frameworks series:… https://t.co/vjjKyuTsDH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":10,"RawContent":null},{"Id":"1004839391477592064","CreatedAt":"2018-06-07T21:35:54+00:00","UserScreenname":"xamarinhq","Text":"Check out the code for the #MSBuild 2018 Conference Vision demo app: https://t.co/tpcBITRsnu https://t.co/kVwUJR5NoL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":158,"FavoriteCount":85,"RawContent":null},{"Id":"1004743034813276160","CreatedAt":"2018-06-07T15:13:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build #XamariniOS from the source code in the second part of our four-part series on debugging… https://t.co/88r7PENPNw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":29,"FavoriteCount":20,"RawContent":null},{"Id":"1004393225787002881","CreatedAt":"2018-06-06T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"We’ve updated the #XamarinForms project templates in #VS2017 to include #dotNET Standard support and customization… https://t.co/6IkmiiY1Jp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":82,"FavoriteCount":32,"RawContent":null},{"Id":"1004381931470049282","CreatedAt":"2018-06-06T15:18:07+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/6jygocRw2d","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":24,"RawContent":null},{"Id":"1004017778859347975","CreatedAt":"2018-06-05T15:11:06+00:00","UserScreenname":"xamarinhq","Text":"Adding geospatial calculations to your #Xamarin apps with #Azure #CosmosDB: https://t.co/acrN8gdJdS https://t.co/rS6ZWBVQDw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":46,"FavoriteCount":20,"RawContent":null},{"Id":"1003716129758629888","CreatedAt":"2018-06-04T19:12:28+00:00","UserScreenname":"xamarinhq","Text":"Introducing the https://t.co/3QxhuBuvHc Firebase Job Dispatcher—background scheduling for all Android devices: https://t.co/vZlLAkI925","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":16,"RawContent":null}]}},"RunOn":"2018-06-18T05:30:59.3858781Z","RunDurationInMilliseconds":4247}