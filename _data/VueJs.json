{"Data":{"Vue":{"Events":[],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"7208372518","Type":"PullRequestEvent","CreatedAt":"2018-02-07T02:41:27","Actor":"zigomir","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/pull/2050","RelatedDescription":"Opened pull request \"Query/Location can be an array of strings. (fix #1932)\" (#2050) at vuejs/vue-router","RelatedBody":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nQuery and Location can be arrays as can be deduced from a spec [here](https://github.com/vuejs/vue-router/blob/dev/test/unit/specs/query.spec.js#L6-L8) and [here](https://github.com/vuejs/vue-router/blob/dev/test/unit/specs/query.spec.js#L19-L20).\r\n\r\nI guess for custom parsing user needs to provide own types and override ones coming from router somehow."},{"Id":"7204248769","Type":"IssuesEvent","CreatedAt":"2018-02-06T12:00:00","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2047","RelatedDescription":"Closed issue \"In history mode, pushing/replacing query params to the same path does nothing\" (#2047) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/83fogkav/3/](http://jsfiddle.net/83fogkav/3/)\r\n\r\n### Steps to reproduce\r\n\r\nIn the linked jsfiddle:\r\nClick the `/home` link, then click the `/home?iam=home`. Notice how the query params don't change according to `document.location.search` (it does change according to `this.$route.query`).\r\nIf you click on the `/foo` link and **then** click the `/home?iam=home` link then it works. I.e., changing the query params only works if you change the path as well.\r\n\r\nNote that the same problem happens if you try to push/replace routes via javascript code. For instance, none of the following 4 lines have any effect on the browser's urlbar.\r\n\r\n    this.$router.push({query: {x: 5}})\r\n    this.$router.push({path: document.location.pathname, query: {x: 5}})\r\n    this.$router.replace({query: {x: 5}})\r\n    this.$router.replace({path: document.location.pathname, query: {x: 5}})\r\n\r\n\r\n\r\n### What is expected?\r\nThe query string should always be appended to the url.\r\n\r\n### What is actually happening?\r\nNothing. No error is signaled and the URL doesn't change.\r\n\r\n---\r\nIf you remove `mode: 'history'`, you get the expected behaviour.\r\nAlso, if you change the `path` to something different from the current path, you get the correct behaviour as well.\r\n\r\nAlso, even though `$route.query` gets updated, it's important for the browser's urlbar to update as well.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7203696271","Type":"PullRequestEvent","CreatedAt":"2018-02-06T10:04:10","Actor":"Romvik","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/pull/2049","RelatedDescription":"Opened pull request \"Update app.js\" (#2049) at vuejs/vue-router","RelatedBody":"Fix (comment) for transition issue\r\n"},{"Id":"7203422410","Type":"PullRequestEvent","CreatedAt":"2018-02-06T09:09:48","Actor":"773500646","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/pull/2048","RelatedDescription":"Opened pull request \"this.$router标题有误\" (#2048) at vuejs/vue-router","RelatedBody":"在组件中访问当前路由使用this.$route，页面中标题写的是this.$router\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"7207064825","Type":"IssuesEvent","CreatedAt":"2018-02-06T20:50:43","Actor":"fnlctrl","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vuex/issues/1139","RelatedDescription":"Closed issue \"Strict mode especially slow on Firefox / Linux\" (#1139) at vuejs/vuex","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://app.previz.co](https://app.previz.co)\r\n\r\n### Steps to reproduce\r\nRun Firefox / Linux\r\n\r\n### What is expected?\r\nSame order of magnitude of performance degradation on Firefox / Linux than on other OS combination\r\n\r\n### What is actually happening?\r\nVuex strict on Firefox / Linux is much slower than any other browser / OS combination.\r\n\r\n---\r\nOur Vuex stores objects that are facades that drive a direct acyclic graph that itself drives a WebGL scene (THREE.js). When a property of a Vuex object is modified (a parameter is changed, or input event on the canvas triggers a camera move), our render graph is set dirty and we schedule a refresh with requestAnimationFrame. Usually refreshing our DAG takes just a few milliseconds.\r\nWith Vuex in strict mode, performances (3D framerate) is not affected too much most of the time in any OS / browser combination, apart for Firefox (57.0.4 64-bit) on Linux (Ubuntu 17.10). I don't get those kind of performance degradation on Firefox / macOS or Firefox / Windows.\r\nWhy would Vuex strict would have such a performance impact on Firefox / Linux ?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7207025475","Type":"IssuesEvent","CreatedAt":"2018-02-06T20:41:19","Actor":"fnlctrl","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vuex/issues/1136","RelatedDescription":"Closed issue \"Document why getters that return functions belong into computed when using mapGetters \" (#1136) at vuejs/vuex","RelatedBody":"### What problem does this feature solve?\r\nIt is not clear from the documentation, why `mapGetters` belong into `computed` and not `methods`.\r\nAFAIK there is computed in contrast to methods, because computed is executed when the component is mounted. However, when you return functions from the store in getters, (e.g. filters like `getUsersByRole`) why do they belong into `computed` then and not methods? Is there a semantic difference?\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7207002791","Type":"IssuesEvent","CreatedAt":"2018-02-06T20:36:13","Actor":"fnlctrl","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vuex/issues/1145","RelatedDescription":"Closed issue \"bug: window npm install,it's error!\" (#1145) at vuejs/vuex","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex.git](https://github.com/vuejs/vuex.git)\r\n\r\n### Steps to reproduce\r\ngit clone https://github.com/vuejs/vuex.git\r\ncd vuex\r\nnpm i\r\n======\r\nand it's error.\r\nerror code:\r\nnpm ERR! code ELIFECYCLE\r\nnpm ERR! errno 1\r\nnpm ERR! chromedriver@2.32.3 install: `node install.js`\r\nnpm ERR! Exit status 1\r\nnpm ERR!\r\nnpm ERR! Failed at the chromedriver@2.32.3 install script.\r\nnpm ERR! This is probably not a problem with npm. There is likely additional log\r\nging output above.\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     C:\\Users\\Administrator\\AppData\\Roaming\\npm-cache\\_logs\\2018-02-01T0\r\n3_38_17_639Z-debug.log\r\n\r\n### What is expected?\r\nnpm i  ===>success\r\n\r\n### What is actually happening?\r\nnpm i ===>error\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"}},"RunOn":"2018-02-07T05:30:33.2649376Z","RunDurationInMilliseconds":1954}