{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework November 2019 Preview of Quality Rollup","PublishedOn":"2019-11-20T05:28:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the November 2019 Preview of Quality Rollup\nQuality and Reliability\nThis release contains the following quality and reliability improvements for .NET Framework for Windows 8.1,...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-november-2019-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Core November 2019 Updates – 2.1.14, 2.2.8, and 3.0.1","PublishedOn":"2019-11-19T20:11:16+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core November 2019 Update. These updates only contain non-security fixes. See the individual release notes for details on updated packages.\nNOTE: If you are a Visual...","Href":"https://devblogs.microsoft.com/dotnet/net-core-november-2019/","RawContent":null},{"Title":"Announcing .NET Core 3.1 Preview 3","PublishedOn":"2019-11-14T17:16:36+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Today, we&#8217;re announcing .NET Core 3.1 Preview 3. .NET Core 3.1 is a small and short release focused on key improvements in Blazor and Windows desktop, the two big additions in .NET Core 3.0.. It...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-3/","RawContent":null},{"Title":".NET Framework November 13, 2019, Update for .NET Framework 4.8","PublishedOn":"2019-11-14T06:16:28+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we released an update for .NET Framework 4.8 to Microsoft Update Catalog.\nQuality and Reliability\nThis release contains the following reliability improvement.\nCLR1\nAddresses an issue where some...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-november-13-2019-update-for-net-framework-4-8/","RawContent":null},{"Title":"ML.NET Model Builder Updates","PublishedOn":"2019-11-12T20:51:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"ML.NET is a cross-platform, machine learning framework for .NET developers, and Model Builder is the UI tooling in Visual Studio that uses Automated Machine Learning (AutoML) to easily allow you to...","Href":"https://devblogs.microsoft.com/dotnet/model-builder-updates-mlnet/","RawContent":null},{"Title":".NET Framework Repair Tool","PublishedOn":"2019-11-12T00:51:20+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are announcing an update to .NET Framework Repair tool.\nIn case you are not familiar with previous releases of this tool, here is a bit of background. Occasionally, some customers will run...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-repair-tool/","RawContent":null},{"Title":"Building Modern Cloud Applications using Pulumi and .NET Core","PublishedOn":"2019-11-11T15:00:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"This is a guest post from the Pulumi team. Pulumi is an open source infrastructure as code tool that helps developers and infrastructure teams work better together to create, deploy, and manage cloud...","Href":"https://devblogs.microsoft.com/dotnet/building-modern-cloud-applications-using-pulumi-and-net-core/","RawContent":null},{"Title":"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)","PublishedOn":"2019-11-06T17:01:16+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Coinciding with the Microsoft Ignite 2019 conference, we are thrilled to announce the GA release of ML.NET 1.4 and updates to Model Builder in Visual Studio, with exciting new machine learning...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-4-global-availability-machine-learning-for-net/","RawContent":null},{"Title":".NET Core with Jupyter Notebooks –  Available today | Preview 1","PublishedOn":"2019-11-06T17:00:21+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"When you think about Jupyter Notebooks, you probably think about writing your code in Python, R, Julia, or Scala and not .NET. Today we are excited to announce you can write .NET code in Jupyter...","Href":"https://devblogs.microsoft.com/dotnet/net-core-with-juypter-notebooks-is-here-preview-1/","RawContent":null},{"Title":".NET Core 3 for Windows Desktop","PublishedOn":"2019-11-05T14:00:11+00:00","CommentsCount":87,"FacebookCount":0,"Summary":"Intro\nIn September, we released .NET Core support for building Windows desktop applications, including WPF and Windows Forms. Since then, we have been delighted to see so many developers share their...","Href":"https://devblogs.microsoft.com/dotnet/net-core-3-for-windows-desktop/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"10879854793","Type":"IssuesEvent","CreatedAt":"2019-11-17T05:53:48","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/155","RelatedDescription":"Opened issue \"Typos in CLA bot profile\" (#155) at dotnet/foundation","RelatedBody":"https://github.com/dnfclas\r\n\r\n## Expected\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003693-983ed400-0941-11ea-91d9-18c29e752b81.png)\r\n\r\n## Actual\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003652-ec958400-0940-11ea-8239-f9b19a7dc957.png)\r\n\r\nAlways capitalized, never .Net or dot NET. \r\n\r\n[.NET Glossary](https://github.com/dotnet/docs/blob/master/docs/standard/glossary.md#net)\r\n\r\n[Microsoft Style Guide](https://github.com/MicrosoftDocs/microsoft-style-guide/blob/master/styleguide/a-z-word-list-term-collections/n/net.md)"},{"Id":"10878192098","Type":"PullRequestEvent","CreatedAt":"2019-11-16T15:59:12","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/154","RelatedDescription":"Opened pull request \"Fix broken links\" (#154) at dotnet/foundation","RelatedBody":""},{"Id":"10864162405","Type":"PullRequestEvent","CreatedAt":"2019-11-14T16:22:28","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/153","RelatedDescription":"Opened pull request \"Fix broken links\" (#153) at dotnet/foundation","RelatedBody":""},{"Id":"10863953091","Type":"PullRequestEvent","CreatedAt":"2019-11-14T16:00:24","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/152","RelatedDescription":"Opened pull request \"Fix broken links\" (#152) at dotnet/foundation","RelatedBody":""},{"Id":"10823146740","Type":"PullRequestEvent","CreatedAt":"2019-11-08T23:32:03","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/151","RelatedDescription":"Merged pull request \"Update RxUI license to reflect repo\" (#151) at dotnet/foundation","RelatedBody":"Fixes https://github.com/dotnet-foundation/dotnetfoundation-website/issues/68"},{"Id":"10822052136","Type":"PullRequestEvent","CreatedAt":"2019-11-08T20:13:07","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/151","RelatedDescription":"Opened pull request \"Update RxUI license to reflect repo\" (#151) at dotnet/foundation","RelatedBody":""},{"Id":"10806560653","Type":"PullRequestEvent","CreatedAt":"2019-11-07T05:43:05","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Merged pull request \"(GH-111) Update Source Link location\" (#147) at dotnet/foundation","RelatedBody":""},{"Id":"10806557022","Type":"PullRequestEvent","CreatedAt":"2019-11-07T05:42:14","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Merged pull request \"Add new Cake Maintainer\" (#150) at dotnet/foundation","RelatedBody":""},{"Id":"10806555226","Type":"PullRequestEvent","CreatedAt":"2019-11-07T05:41:48","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Merged pull request \"Add ImageSharp\" (#149) at dotnet/foundation","RelatedBody":""},{"Id":"10537155256","Type":"PullRequestEvent","CreatedAt":"2019-10-01T20:30:21","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Opened pull request \"Add new Cake Maintainer\" (#150) at dotnet/foundation","RelatedBody":""},{"Id":"10530380699","Type":"PullRequestEvent","CreatedAt":"2019-10-01T05:27:58","Actor":"JimBobSquarePants","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Opened pull request \"Add ImageSharp\" (#149) at dotnet/foundation","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10873564628","Type":"IssuesEvent","CreatedAt":"2019-11-15T16:51:28","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/141","RelatedDescription":"Opened issue \"Windows Server, version 1803 no longer supported by .NET Framework\" (#141) at dotnet/announcements","RelatedBody":"# Windows Server, version 1803 no longer supported by .NET Framework\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #451](https://github.com/microsoft/dotnet-framework-docker/issues/451)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.8`. These are tags that are supported on multiple operating systems and versions, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1803 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.8-windowsservercore-1803` or `mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-1803`."},{"Id":"10873546016","Type":"IssuesEvent","CreatedAt":"2019-11-15T16:49:05","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/140","RelatedDescription":"Opened issue \"Windows Server, version 1803 no longer supported by .NET Core\" (#140) at dotnet/announcements","RelatedBody":"# Windows Server, version 1803 no longer supported by .NET Core\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Core container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1469](https://github.com/dotnet/dotnet-docker/issues/1469)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `3.0`, `3.0.0`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server, version 1803 images (even though it is no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:3.0-nanoserver-1803`."},{"Id":"10864634140","Type":"IssuesEvent","CreatedAt":"2019-11-14T17:15:09","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/139","RelatedDescription":"Opened issue \".NET Core 3.1.0 Preview 3\" (#139) at dotnet/announcements","RelatedBody":".NET Core 3.1.0 Preview 3 is available and https://github.com/dotnet/core/issues/3809 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview3.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-3/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-3/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 3, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n"},{"Id":"10862597044","Type":"IssuesEvent","CreatedAt":"2019-11-14T13:37:29","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/138","RelatedDescription":"Opened issue \"November 2019 .NET Updates\" (#138) at dotnet/announcements","RelatedBody":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework November 13, 2019, Update for .NET Framework 4.8](https://devblogs.microsoft.com/dotnet/net-framework-november-13-2019-update-for-net-framework-4-8/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"10856924757","Type":"IssuesEvent","CreatedAt":"2019-11-13T21:41:07","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/137","RelatedDescription":"Opened issue \".NET Framework Docker images support for Windows Server, version 1909\" (#137) at dotnet/announcements","RelatedBody":"# .NET Framework Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Framework Docker images have been published for Server Core, version 1909.  \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-framework-docker#448](https://github.com/microsoft/dotnet-framework-docker/issues/448)\r\n\r\n## Details \r\n\r\n* [dotnet-framework-docker#447](https://github.com/microsoft/dotnet-framework-docker/pull/447) \r\n\r\n.NET Framework tags containing the substring `windowsservercore-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-framework). \r\n\r\n.NET Framework multi-arch tags, such as `4.8`, have been updated to use `windowsservercore-1909` images if your host is Windows Server 1909 or higher. \r\n\r\n### Impacted Repos \r\n\r\n* [dotnet/framework/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk/): .NET Framework SDK \r\n* [dotnet/framework/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): ASP.NET Runtime  \r\n* [dotnet/framework/wcf](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): Windows Communication Foundation \r\n* [dotnet/framework/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime/): .NET Framework Runtime\r\n* [dotnet/framework/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples/): .NET Framework Samples\r\n\r\n"},{"Id":"10847180825","Type":"IssuesEvent","CreatedAt":"2019-11-12T22:05:52","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/136","RelatedDescription":"Opened issue \".NET Core Docker images support for Windows Server, version 1909\" (#136) at dotnet/announcements","RelatedBody":"# .NET Core Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Core Docker images have been published for Nano Server, version 1909. \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-docker#1460](https://github.com/dotnet/dotnet-docker/issues/1460)\r\n## Details\r\n\r\n* [dotnet-docker#1457](https://github.com/dotnet/dotnet-docker/pull/1457)\r\n\r\n.NET Core tags containing the substring `nanoserver-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-core).\r\n\r\n.NET Core multi-arch tags, such as `3.0`, have been updated to use `nanoserver-1909` images if your host is Windows Server 1909 or higher.\r\n\r\n### Impacted Repos\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk/): .NET Core SDK\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): ASP.NET Core Runtime\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime/): .NET Core Runtime\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples/): .NET Core Samples\r\n\r\n"},{"Id":"10822538366","Type":"IssuesEvent","CreatedAt":"2019-11-08T21:33:13","Actor":"CESARDELATORRE","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/135","RelatedDescription":"Opened issue \"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)\" (#135) at dotnet/announcements","RelatedBody":"This week (coinciding with Microsoft Ignite 2019) we announced the release of **ML.NET 1.4 GA**. \r\nThere are many new features such as:\r\n\r\n**- New Deep Learning Image Classifier (GA):** GPU support for training and inference Image Classifier ML models.\r\n\r\n**- Database Loader  (GA):** You can train your model with data directly from any relational database supported by System.Data.\r\n\r\n**- Enhanced for .NET Core 3.0  (GA):** Performance improvements thanks to hardware intrinsics feature in .NET Core 3.0.\r\n\r\n**- PredictionEnginePool for scalable deployments (GA):** Recommended approach for multi-threaded scalable apps such as ASP.NET Core apps/services and Azure Functions\r\n\r\n**- ML.NET and .NET support in Jupyter notebooks:**  You can now run any .NET code (C# / F#) in Jupyter notebooks and therefore run ML.NET code in it as well. Great for exploring and documenting model training experiments, data distribution exploration, data cleaning, plotting data charts, learning scenarios such as ML.NET courses, hands-on-labs and quizzes, etc.\r\n\r\nSee details in the following **Blog Posts**:\r\n\r\n- [Announcing ML.NET 1.4 general availability (Machine Learning for .NET)](https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-4-global-availability-machine-learning-for-net/)\r\n\r\n- [Using ML.NET in Jupyter notebooks](https://devblogs.microsoft.com/cesardelatorre/using-ml-net-in-jupyter-notebooks/)\r\n\r\n- [.NET Core with Jupyter Notebooks](https://devblogs.microsoft.com/dotnet/net-core-with-juypter-notebooks-is-here-preview-1/)\r\n"},{"Id":"10780907118","Type":"IssuesEvent","CreatedAt":"2019-11-04T13:57:09","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/134","RelatedDescription":"Opened issue \".NET Core 3.1.0 Preview 2\" (#134) at dotnet/announcements","RelatedBody":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/XXXX has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview2.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-2/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-2/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/XXXX, creating a new issue or creating a new issue in one of the following repos:\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues"},{"Id":"10748742804","Type":"IssuesEvent","CreatedAt":"2019-10-30T15:14:54","Actor":"jaredpar","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/133","RelatedDescription":"Opened issue \"Repository Consolidation Timeline\" (#133) at dotnet/announcements","RelatedBody":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27549.*\r\n\r\nAs we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setupmoves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM PST on November 13th. We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository."},{"Id":"10738283611","Type":"IssuesEvent","CreatedAt":"2019-10-29T14:32:57","Actor":"mthalman","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Opened issue \"Release of Alpine 3.10 Docker images\" (#132) at dotnet/announcements","RelatedBody":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)"},{"Id":"10647641262","Type":"IssuesEvent","CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Opened issue \".NET Core 3.1.0 Preview 1\" (#131) at dotnet/announcements","RelatedBody":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"10912556862","Type":"PullRequestEvent","CreatedAt":"2019-11-21T03:07:24","Actor":"jashook","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27906","RelatedDescription":"Opened pull request \"Move off of the old arm32 queue\" (#27906) at dotnet/coreclr","RelatedBody":"Port #27905 to release/3.1\r\n\r\n/cc @hoyosjs @lpereira @trylek @ilyas1974 "},{"Id":"10912525603","Type":"PullRequestEvent","CreatedAt":"2019-11-21T03:00:18","Actor":"jashook","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27905","RelatedDescription":"Merged pull request \"Move off of the old arm32 queue\" (#27905) at dotnet/coreclr","RelatedBody":"/cc @mmitche \r\n\r\n/cc @trylek @lpereira @ilyas1974 \r\n"},{"Id":"10912509157","Type":"PullRequestEvent","CreatedAt":"2019-11-21T02:56:37","Actor":"jashook","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/26886","RelatedDescription":"Merged pull request \"[release/3.1] Update dependencies from dotnet/arcade\" (#26886) at dotnet/coreclr","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191119.2\r\n- **Date Produced**: 11/19/2019 6:14 PM\r\n- **Commit**: e34d933e18ba1cd393bbafcb6018e0f858d3e89e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19569.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19569.2\r\n\r\n[marker]: <> (End:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n\r\n\r\n\r\n"},{"Id":"10912506886","Type":"PullRequestEvent","CreatedAt":"2019-11-21T02:56:08","Actor":"jashook","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27820","RelatedDescription":"Merged pull request \"[release/3.0] Fix use of ilasm during test builds when using a 3.0 SDK\" (#27820) at dotnet/coreclr","RelatedBody":"Port of #27818 into 3.0\r\n\r\nThe restore logic in buildtools tried to use a netcoreapp2.1 TFM for Linux-musl.\r\nThis ended up restoring Linux-x64 binaries which then broke the test build.\r\nThis change works around this by saving a copy of the depproj that BuildTools used into\r\nthe tree and restore it as a 3.0 app manually in init-tools on our side of the build."},{"Id":"10911670419","Type":"PullRequestEvent","CreatedAt":"2019-11-20T23:55:24","Actor":"andy-ms","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25469","RelatedDescription":"Closed pull request \"WIP: Getting GC settings from runtimeconfig\" (#25469) at dotnet/coreclr","RelatedBody":""},{"Id":"10911300538","Type":"PullRequestEvent","CreatedAt":"2019-11-20T22:47:28","Actor":"jashook","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27905","RelatedDescription":"Opened pull request \"Move off of the old arm32 queue\" (#27905) at dotnet/coreclr","RelatedBody":"/cc @mmitche \r\n\r\n/cc @trylek @lpereira @ilyas1974 \r\n"},{"Id":"10911166893","Type":"PullRequestEvent","CreatedAt":"2019-11-20T22:26:19","Actor":"VSadov","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27874","RelatedDescription":"Closed pull request \"fix volatile float/double on win-arm64   (make sure compiler does not do numeric casts)\" (#27874) at dotnet/coreclr","RelatedBody":"fix volatile float/double on win-arm64   (make sure compiler does not do numeric casts)\r\n\r\nfixes:https://github.com/dotnet/coreclr/issues/27830"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"10911769412","Type":"PullRequestEvent","CreatedAt":"2019-11-21T00:15:31","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13102","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13102) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191120.3\r\n- **Date Produced**: 11/20/2019 11:20 PM\r\n- **Commit**: c16a31965d1ff8c4564d420610e2991265e77501\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n"},{"Id":"10911768045","Type":"PullRequestEvent","CreatedAt":"2019-11-21T00:15:15","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13101","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13101) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191120.3\r\n- **Date Produced**: 11/20/2019 11:02 PM\r\n- **Commit**: 4cfae73307a9fcb65f30447cf2251ea1c6cd283f\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-rtm.19570.3\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n"},{"Id":"10911353523","Type":"PullRequestEvent","CreatedAt":"2019-11-20T22:56:23","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13099","RelatedDescription":"Merged pull request \"[release/3.0.1xx] Update dependencies from dotnet/templating\" (#13099) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d4b89351-e138-4a22-94d9-08d690bc143a)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20191120.3\r\n- **Date Produced**: 11/20/2019 10:06 PM\r\n- **Commit**: 7a6c23bdddc0f12d7f0dee0a1b655375a08888c7\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.0.1-servicing.19570.3\r\n\r\n[marker]: <> (End:d4b89351-e138-4a22-94d9-08d690bc143a)\r\n\r\n"},{"Id":"10911224278","Type":"PullRequestEvent","CreatedAt":"2019-11-20T22:35:16","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13100","RelatedDescription":"Opened pull request \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#13100) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191120.2\r\n- **Date Produced**: 11/20/2019 9:33 PM\r\n- **Commit**: 4a732f9df5fdcfd1cc30576aaab799c0ce07791c\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.101-servicing.19570.2\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n"},{"Id":"10911165557","Type":"PullRequestEvent","CreatedAt":"2019-11-20T22:26:07","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13099","RelatedDescription":"Opened pull request \"[release/3.0.1xx] Update dependencies from dotnet/templating\" (#13099) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d4b89351-e138-4a22-94d9-08d690bc143a)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20191120.3\r\n- **Date Produced**: 11/20/2019 10:06 PM\r\n- **Commit**: 7a6c23bdddc0f12d7f0dee0a1b655375a08888c7\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.0.1-servicing.19570.3\r\n\r\n[marker]: <> (End:d4b89351-e138-4a22-94d9-08d690bc143a)\r\n\r\n"},{"Id":"10911128934","Type":"PullRequestEvent","CreatedAt":"2019-11-20T22:20:31","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13098","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/templating\" (#13098) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20191120.2\r\n- **Date Produced**: 11/20/2019 9:18 PM\r\n- **Commit**: b275b18fd7014d67078e2477f693301ea04e6549\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.1.0-rtm.19570.2\r\n\r\n[marker]: <> (End:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n\r\n"},{"Id":"10910944726","Type":"PullRequestEvent","CreatedAt":"2019-11-20T21:53:51","Actor":"mmitche","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13095","RelatedDescription":"Merged pull request \"Update branding to 2.1.608\" (#13095) at dotnet/cli","RelatedBody":""},{"Id":"10910883585","Type":"PullRequestEvent","CreatedAt":"2019-11-20T21:45:13","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13098","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/templating\" (#13098) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20191120.2\r\n- **Date Produced**: 11/20/2019 9:18 PM\r\n- **Commit**: b275b18fd7014d67078e2477f693301ea04e6549\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.1.0-rtm.19570.2\r\n\r\n[marker]: <> (End:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"10910131465","Type":"PullRequestEvent","CreatedAt":"2019-11-20T20:02:50","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1656","RelatedDescription":"Merged pull request \"[release/3.0] Update dependencies from dotnet/arcade\" (#1656) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191119.2\r\n- **Date Produced**: 11/19/2019 6:14 PM\r\n- **Commit**: e34d933e18ba1cd393bbafcb6018e0f858d3e89e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19569.2\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n"},{"Id":"10910014017","Type":"PullRequestEvent","CreatedAt":"2019-11-20T19:47:43","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1656","RelatedDescription":"Opened pull request \"[release/3.0] Update dependencies from dotnet/arcade\" (#1656) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191119.2\r\n- **Date Produced**: 11/19/2019 6:14 PM\r\n- **Commit**: e34d933e18ba1cd393bbafcb6018e0f858d3e89e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19569.2\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n"},{"Id":"10901887261","Type":"IssuesEvent","CreatedAt":"2019-11-19T23:58:30","Actor":"SetTrend","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1655","RelatedDescription":"Closed issue \"Change .NET Framework in version table from 4.6.1 to 4.7.1\" (#1655) at dotnet/standard","RelatedBody":"Currently, the [.NET Standard version table](/dotnet/standard/blob/master/docs/versions.md) shows `.NET Framework 4.6.1` to be compatible with `.NET Standard >= 1.5`.\r\n\r\nHowever, a footnote clarifies that `.NET Framework 4.6.1` is **_not_** fully compatible with `.NET Standard >= 1.5`.\r\n\r\nMoreover, many issues on [StackOverflow.com](https://stackoverflow.com/questions/49925484/you-must-add-a-reference-to-assembly-netstandard-version-2-0-0-0) and [GitHub](542) give evidence that `.NET Framework 4.6.1` is **_not_** fully compatible with `.NET Standard >= 1.5`.\r\n\r\nWouldn't it be wise then to update above version table to provide **_true_** information than just spout some wannabe information?"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"10912566387","Type":"PullRequestEvent","CreatedAt":"2019-11-21T03:09:41","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42640","RelatedDescription":"Merged pull request \"Update CoreFx to servicing-28208-01 (release/uwp6.2)\" (#42640) at dotnet/corefx","RelatedBody":"/cc @dotnet/maestro-reviewers-core"},{"Id":"10912050918","Type":"IssuesEvent","CreatedAt":"2019-11-21T01:16:16","Actor":"GrabYourPitchforks","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/42660","RelatedDescription":"Opened issue \"API Proposal: string.Remove(Range)\" (#42660) at dotnet/corefx","RelatedBody":"Pretty straightforward scenario. I have a string of the form `\"<value>\"`, and I want to strip the enclosing `<` and `>` from it.\r\n\r\nCurrently the way to do this is to write the code:\r\n\r\n```cs\r\nstring stripped = input.Remove(1, input.Length - 2);\r\n```\r\n\r\nIf there were a range-based API, it could be written more cleanly:\r\n\r\n```cs\r\nstring stripped = input.Remove(1..^1);\r\n```"},{"Id":"10911935600","Type":"IssuesEvent","CreatedAt":"2019-11-21T00:51:21","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/42659","RelatedDescription":"Closed issue \"ConfiguraAwait(false) usability\" (#42659) at dotnet/corefx","RelatedBody":"# ConfiguraAwait(false) usability\r\n\r\nUsing ConfiguraAwait(false) consider as best practice within a class library.\r\nThe problem with it is that it very verbose repetitive task.\r\nIt would be better experience if instead of repeating this task over and over again we could set a default for the assembly within the .csproj (or alternative via assembly level attribute).\r\nThis way the compiler can add it for it generated code under the assembly.\r\n\r\n"},{"Id":"10911505292","Type":"IssuesEvent","CreatedAt":"2019-11-20T23:22:42","Actor":"bnayae","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/42659","RelatedDescription":"Opened issue \"ConfiguraAwait(false) usability\" (#42659) at dotnet/corefx","RelatedBody":"# ConfiguraAwait(false) usability\r\n\r\nUsing ConfiguraAwait(false) consider as best practice within a class library.\r\nThe problem with it is that it very verbose repetitive task.\r\nIt would be better experience if instead of repeating this task over and over again we could set a default for the assembly within the .csproj (or alternative via assembly level attribute).\r\nThis way the compiler can add it for it generated code under the assembly.\r\n\r\n"},{"Id":"10911356334","Type":"IssuesEvent","CreatedAt":"2019-11-20T22:56:53","Actor":"layomia","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/42636","RelatedDescription":"Closed issue \"API Proposal: System.Text.Json: Handle default value in serialization\" (#42636) at dotnet/corefx","RelatedBody":"# Overview\r\nTo enable option to ignore properties from serialization when its current value is equal to default value. We can reuse the existing `DefaultValueAttribute` class for defining the default value for each property. \r\n\r\n# Why\r\nThis API is needed to reduce the payload size of JSON text transferred between services which will improve the app performance. \r\n\r\n# API Proposal\r\nAdd new API `IgnoreDefaultValue` in `System.Text.Json.Serialization.JsonSerializerOptions` class.\r\n\r\nExample usage\r\n```CSharp\r\npublic class Cookie\r\n{\r\n  [DefaultValue(false)]\r\n  public bool HasConsent  {get; set;}\r\n\r\n  public string Name {get; set;}\r\n}\r\n\r\npublic class Program\r\n{\r\n  static void Main()\r\n  {\r\n    var cookie = new Cookie { Name = \"Test\", HasConsent = false };\r\n\r\n    var options = new JsonSerializerOptions();\r\n    options.IgnoreDefaultValue = true;\r\n\r\n    string json = JsonSerializer.Serialize(cookie, options);\r\n    // Expected output:  {\"Name\":\"Test\"}\r\n  }\r\n}\r\n```\r\n\r\nEdit:\r\n- Added expected output in example"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"10912490163","Type":"IssuesEvent","CreatedAt":"2019-11-21T02:52:21","Actor":"davkean","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/39915","RelatedDescription":"Opened issue \"Attempting to change severity of analysis fails and throws up yellow bar\" (#39915) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nVersion 16.5.0 Preview 2.0 [29520.138.master\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. `git clone http://github.com/dotnet/project-system`\r\n2. `cd project-system`\r\n3. `git checkout 8a68d2b7737fbf19d96ba41a53cc1c6617d396c8`\r\n4. `ProjectSystem.sln`\r\n5. Navigate to src\\Microsoft.VisualStudio.ProjectSystem.Managed.VS\\Packaging\\ManagedProjectSystemPackage.cs\r\n6. On line 43, drop down Lightbulb\r\n7. Choose: \r\n![image](https://user-images.githubusercontent.com/1103906/69299990-1ebb2480-0c66-11ea-8845-75291efd74d1.png)\r\n\r\n\r\n**Expected Behavior**:\r\n.editorconfig to be changed.\r\n\r\n**Actual Behavior**:\r\nYellow bar with the following:\r\n\r\n```\r\n    <type>Error</type>\r\n    <source>Editor or Editor Extension</source>\r\n    <description>System.Runtime.InteropServices.COMException (0x80004005): Error HRESULT E_FAIL has been returned from a call to a COM component.&#x000D;&#x000A;   at System.Runtime.InteropServices.Marshal.ThrowExceptionForHRInternal(Int32 errorCode, IntPtr errorInfo)&#x000D;&#x000A;   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.InvisibleEditor..ctor(IServiceProvider serviceProvider, String filePath, IVsHierarchy hierarchyOpt, Boolean needsSave, Boolean needsUndoDisabled)&#x000D;&#x000A;   at Microsoft.VisualStudio.LanguageServices.RoslynVisualStudioWorkspace.OpenInvisibleEditor(DocumentId documentId)&#x000D;&#x000A;   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.VisualStudioWorkspaceImpl.ApplyTextDocumentChange(DocumentId documentId, SourceText newText)&#x000D;&#x000A;   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.VisualStudioWorkspaceImpl.ApplyAnalyzerConfigDocumentTextChanged(DocumentId documentId, SourceText newText)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.Workspace.ApplyProjectChanges(ProjectChanges projectChanges)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Solution newSolution, IProgressTracker progressTracker)&#x000D;&#x000A;   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.VisualStudioWorkspaceImpl.TryApplyChanges(Solution newSolution, IProgressTracker progressTracker)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.CodeActions.ApplyChangesOperation.TryApply(Workspace workspace, IProgressTracker progressTracker, CancellationToken cancellationToken)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.Editor.Implementation.CodeActions.CodeActionEditHandlerService.ProcessOperations(Workspace workspace, ImmutableArray`1 operations, IProgressTracker progressTracker, CancellationToken cancellationToken)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.Editor.Implementation.CodeActions.CodeActionEditHandlerService.Apply(Workspace workspace, Document fromDocument, ImmutableArray`1 operations, String title, IProgressTracker progressTracker, CancellationToken cancellationToken)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.InvokeWorker(Func`1 getFromDocument, IProgressTracker progressTracker, CancellationToken cancellationToken)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.&lt;&gt;c__DisplayClass20_0.&lt;InvokeCore&gt;b__0()&#x000D;&#x000A;   at Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.PerformAction(IExtensionManager extensionManager, Object extension, Action action)&#x000D;&#x000A;--- End of stack trace from previous location where exception was thrown ---&#x000D;&#x000A;   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)</description>\r\n  </entry>\r\n```"},{"Id":"10912379191","Type":"PullRequestEvent","CreatedAt":"2019-11-21T02:27:56","Actor":"mavasani","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/38803","RelatedDescription":"Closed pull request \"Add options to configure background analysis in the IDE\" (#38803) at dotnet/roslyn","RelatedBody":"1. Option to **enable power save mode**: Fixes #38429. This option turns off all the background analysis and also turns off remote host (RoslynCodeAnalysis service hub process) for C# and VB projects to reduce memory consumption in this mode. This option turns off most of the background analyses that are executed by the solution crawler. We still execute the bare minimum analysis for a reasonable editing experience: compiler analyzer to get compiler warnings/errors and also execute the add usings and remove unncessary usings analyzers. We can tune this required analysis set in future, as required.\r\n\r\n2. Option to **disable live analyzer execution**: There have been lot of requests in past to give users a single knob to turn on/off execution of all Roslyn analyzers in the IDE (third party analyzers + IDE code style analyzers which are enabled by default).\r\n\r\nI have also hooked up the low virtual memory listener which detects low VM and used to turn off just the full solution analysis to now instead turn on a forced power save mode for the current VS session (which also turns off full solution analysis, along with other background analyses).\r\n\r\n**TODOs:**\r\n1. More manual testing\r\n2. Get design consensus on the preferred option(s):\r\n   1. 2 options (current PR): Options to configure Power save mode and Analyzer execution\r\n   2. Single option to configure Power save mode only\r\n   3. Multiple options: One top level option to configure Power save mode, with lot of individual options to control individual background analyses. This is less preferable due to overload of options and information for users."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"10911559435","Type":"PullRequestEvent","CreatedAt":"2019-11-20T23:32:54","Actor":"cshung","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7884","RelatedDescription":"Opened pull request \"[WIP] Porting changes from CoreCLR\" (#7884) at dotnet/corert","RelatedBody":"WIP - this port minimal changes from CoreCLR to allow `EcmaSignatureParser.cs` to have identical content with the CoreCLR (now dotnet/runtime) copy."},{"Id":"10867621354","Type":"PullRequestEvent","CreatedAt":"2019-11-15T00:35:45","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7883","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7883) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @elinor-fung @john-h-k @manandre @tannergooding @carlossanlop"},{"Id":"10866878767","Type":"PullRequestEvent","CreatedAt":"2019-11-14T22:17:57","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7883","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7883) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"10863363481","Type":"IssuesEvent","CreatedAt":"2019-11-14T15:00:12","Actor":"AArnott","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7882","RelatedDescription":"Opened issue \"UWP .NET Native compilation fails\" (#7882) at dotnet/corert","RelatedBody":"The build in Debug works fine, but in Release (where .NET Native compilation happens), we get this error:\r\n\r\n> error : ILT0005: '[...]nutc_driver.exe @\"[...]\\MessagePack-CSharp\\obj\\TestUAP_NETNative\\x86\\Release\\ilc\\intermediate\\MDIL\\TestUAP_NETNative.rsp\"' returned exit code -2147483645\r\n\r\nWhat does this error code mean?\r\nIt's a UWP test project. I can reproduce it with one super-simple test defined, and a project reference to another project in the solution that targets netstandard2.0;netcoreapp2.1.\r\n\r\nFrom https://github.com/neuecc/MessagePack-CSharp/pull/638"},{"Id":"10858512120","Type":"PullRequestEvent","CreatedAt":"2019-11-14T02:41:52","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7881","RelatedDescription":"Merged pull request \"Delete dead files\" (#7881) at dotnet/corert","RelatedBody":""},{"Id":"10857434025","Type":"PullRequestEvent","CreatedAt":"2019-11-13T22:57:09","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7881","RelatedDescription":"Opened pull request \"Delete dead files\" (#7881) at dotnet/corert","RelatedBody":""},{"Id":"10856190968","Type":"IssuesEvent","CreatedAt":"2019-11-13T20:02:05","Actor":"Shadow4walker","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7880","RelatedDescription":"Opened issue \"reflection support in rd.xml\" (#7880) at dotnet/corert","RelatedBody":"hello guys my code don't work on this void and i don't know how to support the Refection from this void\r\n`                var httpWebRequest = CraftRequest(url);\r\n                if (!keepalive) return await GetResponse(httpWebRequest);\r\n                var servicePoint = httpWebRequest.ServicePoint;\r\n                var property = servicePoint.GetType().GetProperty(\"HttpBehaviour\", BindingFlags.Instance | BindingFlags.NonPublic);\r\n                if (property != null) property.SetValue(servicePoint, (byte) 0, null);\r\n                return await GetResponse(httpWebRequest);\r\n`\r\nwhat should i put in the rd.xml to support executing this void!"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"10912416950","Type":"IssuesEvent","CreatedAt":"2019-11-21T02:36:13","Actor":"tttttvf","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/3948","RelatedDescription":"Opened issue \"Project build operation\" (#3948) at dotnet/sdk","RelatedBody":"I found a phenomenon yesterday, but I seem to submit it to another team\r\n\r\nhttps://github.com/aspnet/AspNetCore/issues/17255\r\n\r\nThis is still the case with the command 'dotnet build'"},{"Id":"10912163834","Type":"PullRequestEvent","CreatedAt":"2019-11-21T01:41:07","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3947","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3947) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191120.3\r\n- **Date Produced**: 11/20/2019 11:20 PM\r\n- **Commit**: c16a31965d1ff8c4564d420610e2991265e77501\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n"},{"Id":"10911769091","Type":"PullRequestEvent","CreatedAt":"2019-11-21T00:15:27","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3947","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3947) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191120.3\r\n- **Date Produced**: 11/20/2019 11:20 PM\r\n- **Commit**: c16a31965d1ff8c4564d420610e2991265e77501\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n"},{"Id":"10911252171","Type":"PullRequestEvent","CreatedAt":"2019-11-20T22:39:41","Actor":"sfoslund","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3850","RelatedDescription":"Merged pull request \"Removing Redundant NuGetPackageId and PackageName metadata\" (#3850) at dotnet/sdk","RelatedBody":"Addressing #3499"},{"Id":"10911249810","Type":"PullRequestEvent","CreatedAt":"2019-11-20T22:39:17","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3946","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#3946) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191119.2\r\n- **Date Produced**: 11/19/2019 6:14 PM\r\n- **Commit**: e34d933e18ba1cd393bbafcb6018e0f858d3e89e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19569.2\r\n\r\n[marker]: <> (End:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n\r\n"},{"Id":"10911114798","Type":"IssuesEvent","CreatedAt":"2019-11-20T22:18:24","Actor":"w5922xd","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/3873","RelatedDescription":"Closed issue \"NETSDK1073 for .NET Core 2.2 | Builds Fail \" (#3873) at dotnet/sdk","RelatedBody":"## Preface\r\nI am reporting this here based on this comment from a (possibly) related issue.\r\n_Originally posted by @dsplaisted in https://github.com/dotnet/cli/issues/11378#issuecomment-539583642_\r\n\r\n>@robborden Can you open a new issue for the failures you're encountering? The error message is the same but I don't believe the root cause is the same as this issue which has been fixed. Thanks!\r\n\r\nThis is from the dotnet/CLI repo but when you go to create a new issue there the text reads: \r\n> PLEASE DO NOT FILE ISSUES IN THIS REPO\r\n> File them in https://github.com/dotnet/sdk instead.\r\n\r\nIf this is the wrong location let me know. \r\n\r\n## Problem Description\r\n\r\nI am using Visual Studio 2019 version 16.3.8. I have a solution with these frameworks:\r\n- Project1 targets netcoreapp2.2\r\n- Project2 targets netstandard2.0\r\n- Project3 targets netcoreapp2.2\r\n- Project4 targets netcoreapp2.2\r\n\r\nWhen I rebuilt the solution I am now getting an unexpected error from each project: \r\n> \"The FrameworkReference '.NETStandard,Version=v2.0' was not recognized\"\r\nThe file referenced is Microsoft.NET.Sdk.FrameworkReferenceResolution.Targets on line 236. \r\nThis points to: \r\n```xml\r\n<ResolveTargetingPackAssets FrameworkReferences=\"@(FrameworkReference)\"\r\n                                ResolvedTargetingPacks=\"@(ResolvedTargetingPack)\"\r\n                                RuntimeFrameworks=\"@(RuntimeFramework)\"\r\n                                GenerateErrorForMissingTargetingPacks=\"$(GenerateErrorForMissingTargetingPacks)\">\r\n```\r\nTrying this with `dotnet build` produces the same error: \r\n```xml\r\nλ dotnet build\r\nMicrosoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 819.77 ms for C:\\Users\\<my username>\\dev\\projects\\<My Project>\\MyNamespace.Models\\MyNamespace.Models.csproj.\r\n  Restore completed in 7.7 sec for C:\\Users\\<my username>\\dev\\projects\\<My Project>\\MyNamespace.Endpoint\\MyNamespace.Endpoint.csproj.\r\n  Restore completed in 7.81 sec for C:\\Users\\<my username>\\dev\\projects\\<My Project>\\MyNamespace.Tests\\MyNamespace.Tests.csproj.\r\n  Restore completed in 12.02 sec for C:\\Users\\<my username>\\dev\\projects\\<My Project>\\MyNamespace.Proxy\\MyNamespace.Proxy.csproj.\r\n  \r\nC:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(263,5): error NETSDK1073: The FrameworkReference '.NETStandard,Version=v2.0' was not recognized [C:\\Users\\<my username>\\dev\\projects\\<My Project>\\MyNamespace.Models\\MyNamespace.Models.csproj]\r\n\r\nBuild FAILED.\r\n\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets(263,5): error NETSDK1073: The FrameworkReference '.NETStandard,Version=v2.0' was not recognized [C:\\Users\\<my username>\\dev\\projects\\<My Project>\\MyNamespace.Models\\MyNamespace.Models.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:23.39\r\n```\r\n\r\n## Workaround\r\nOpen the project in Visual Studio 2017 and I am able to produce builds without error. \r\n\r\n## Expected behavior\r\nThe project would not report errors and could be built. \r\n\r\n## Environment Data\r\nλ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.105 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]"},{"Id":"10910640465","Type":"PullRequestEvent","CreatedAt":"2019-11-20T21:11:51","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3945","RelatedDescription":"Merged pull request \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#3945) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:df8a2755-bec9-40dc-b710-08d7368af630)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191119.2\r\n- **Date Produced**: 11/19/2019 6:14 PM\r\n- **Commit**: e34d933e18ba1cd393bbafcb6018e0f858d3e89e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19569.2\r\n\r\n[marker]: <> (End:df8a2755-bec9-40dc-b710-08d7368af630)\r\n\r\n"},{"Id":"10910542320","Type":"PullRequestEvent","CreatedAt":"2019-11-20T20:58:30","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3946","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#3946) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191119.2\r\n- **Date Produced**: 11/19/2019 6:14 PM\r\n- **Commit**: e34d933e18ba1cd393bbafcb6018e0f858d3e89e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19569.2\r\n\r\n[marker]: <> (End:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"523940971","IsPullRequest":false,"CreatedAt":"2019-11-17T05:53:47","Actor":"NextTurn","Number":"155","RawContent":null,"Title":"Typos in CLA bot profile","State":"open","Body":"https://github.com/dnfclas\r\n\r\n## Expected\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003693-983ed400-0941-11ea-91d9-18c29e752b81.png)\r\n\r\n## Actual\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003652-ec958400-0940-11ea-8239-f9b19a7dc957.png)\r\n\r\nAlways capitalized, never .Net or dot NET. \r\n\r\n[.NET Glossary](https://github.com/dotnet/docs/blob/master/docs/standard/glossary.md#net)\r\n\r\n[Microsoft Style Guide](https://github.com/MicrosoftDocs/microsoft-style-guide/blob/master/styleguide/a-z-word-list-term-collections/n/net.md)","Url":"https://github.com/dotnet/foundation/issues/155","RelatedDescription":"Open issue \"Typos in CLA bot profile\" (#155)"},{"Id":"523861891","IsPullRequest":true,"CreatedAt":"2019-11-16T15:59:11","Actor":"NextTurn","Number":"154","RawContent":null,"Title":"Fix broken links","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/154","RelatedDescription":"Open PR \"Fix broken links\" (#154)"},{"Id":"522965180","IsPullRequest":true,"CreatedAt":"2019-11-14T16:22:27","Actor":"NextTurn","Number":"153","RawContent":null,"Title":"Fix broken links","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/153","RelatedDescription":"Open PR \"Fix broken links\" (#153)"},{"Id":"522951789","IsPullRequest":true,"CreatedAt":"2019-11-14T16:00:23","Actor":"NextTurn","Number":"152","RawContent":null,"Title":"Fix broken links","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/152","RelatedDescription":"Open PR \"Fix broken links\" (#152)"},{"Id":"520212668","IsPullRequest":true,"CreatedAt":"2019-11-08T23:32:02","Actor":"onovotny","Number":"151","RawContent":null,"Title":"Update RxUI license to reflect repo","State":"closed","Body":"Fixes https://github.com/dotnet-foundation/dotnetfoundation-website/issues/68","Url":"https://github.com/dotnet/foundation/pull/151","RelatedDescription":"Closed or merged PR \"Update RxUI license to reflect repo\" (#151)"},{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-11-07T05:43:04","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Closed or merged PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"501128777","IsPullRequest":true,"CreatedAt":"2019-11-07T05:42:14","Actor":"gep13","Number":"150","RawContent":null,"Title":"Add new Cake Maintainer","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Closed or merged PR \"Add new Cake Maintainer\" (#150)"},{"Id":"500670461","IsPullRequest":true,"CreatedAt":"2019-11-07T05:41:48","Actor":"JimBobSquarePants","Number":"149","RawContent":null,"Title":"Add ImageSharp","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Closed or merged PR \"Add ImageSharp\" (#149)"},{"Id":"475315730","IsPullRequest":false,"CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Number":"148","RawContent":null,"Title":"Clarify guidelines in regards to Options and Requirements","State":"open","Body":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?","Url":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Open issue \"Clarify guidelines in regards to Options and Requirements\" (#148)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"526336720","IsPullRequest":true,"CreatedAt":"2019-11-21T03:07:23","Actor":"jashook","Number":"27906","RawContent":null,"Title":"Move off of the old arm32 queue","State":"open","Body":"Port #27905 to release/3.1\r\n\r\n/cc @hoyosjs @lpereira @trylek @ilyas1974 ","Url":"https://github.com/dotnet/coreclr/pull/27906","RelatedDescription":"Open PR \"Move off of the old arm32 queue\" (#27906)"},{"Id":"526259354","IsPullRequest":true,"CreatedAt":"2019-11-21T03:00:18","Actor":"jashook","Number":"27905","RawContent":null,"Title":"Move off of the old arm32 queue","State":"closed","Body":"/cc @mmitche \r\n\r\n/cc @trylek @lpereira @ilyas1974 \r\n","Url":"https://github.com/dotnet/coreclr/pull/27905","RelatedDescription":"Closed or merged PR \"Move off of the old arm32 queue\" (#27905)"},{"Id":"524637382","IsPullRequest":true,"CreatedAt":"2019-11-20T17:20:31","Actor":"Anipik","Number":"27896","RawContent":null,"Title":"update branding for 3.0.2","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27896","RelatedDescription":"Closed or merged PR \"update branding for 3.0.2\" (#27896)"},{"Id":"525914661","IsPullRequest":false,"CreatedAt":"2019-11-20T16:24:38","Actor":"rossgurbutt","Number":"27904","RawContent":null,"Title":"Netcore3.0 app aborts in release configuration on a Linux machine","State":"open","Body":"Possibly related to this previous issue: https://github.com/dotnet/coreclr/issues/27734\r\n\r\nRunning the attached app (which targets netcoreapp3.0) in release configuration on our Linux machines aborts  with one of the following errors:\r\n\r\n- System.AccessViolationException: 'Attempted to read or write protected memory. This is often an indication that other memory is corrupt.'\r\n- Segmentation fault\r\n\r\nAlthough unlike the previous bug, the occurrence is not 100% deterministic. It does however, usually occur on the first run of the program at some point and has been observed to occur more frequently when the following environment variables were set for debugging purposes.\r\n\r\n- COMPlus_DbgEnableMiniDump=1\r\n- COMPlus_StressLog=1\r\n- COMPlus_DbgMiniDumpType=4 (we found that our symbols weren't loading properly without this)\r\n\r\nThe program is reasonably simple, contains no unmanaged code, no third party dependencies, and has some fairly simple logic intended to use some memory (but not anywhere close to all of it) and stress the cpu in a manner similar to the way our full program does.\r\n\r\n```\r\nOperating system: CentOS Linux 7 (Core)\r\nKernel: Linux 3.10.0-862.11.6.el7.x86_64\r\n```\r\n\r\ndotnet --info\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     centos\r\n OS Version:  7\r\n OS Platform: Linux\r\n RID:         centos.7-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  95a0a61858\r\n\r\n.NET Core SDKs installed:\r\n  2.2.402 [/usr/share/dotnet/sdk]\r\n  3.0.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n```\r\n\r\n[Program.zip](https://github.com/dotnet/coreclr/files/3870218/Program.zip)","Url":"https://github.com/dotnet/coreclr/issues/27904","RelatedDescription":"Open issue \"Netcore3.0 app aborts in release configuration on a Linux machine\" (#27904)"},{"Id":"525796413","IsPullRequest":false,"CreatedAt":"2019-11-20T13:15:03","Actor":"dryszkowski","Number":"27903","RawContent":null,"Title":"JIT: Duplicated addition in compiled IL","State":"open","Body":"The JIT compiles IL code below into something that seems to be incorrect\r\n```\r\n    call       void [mscorlib]System.Diagnostics.Debugger::Break()\r\n    ldarg.0\r\n    ldc.i4 100\r\n    \r\n    Label_A:\r\n    add\r\n    dup\r\n    ldc.i4.0\r\n    brtrue.s   Label_A\r\n    \r\n    starg.s    theSequenceNumber\r\n    pop\r\n    ldarg.0\r\n    ret\r\n```\r\n```\r\n01130950 56                   push        esi  \r\n01130951 8B F1                mov         esi,ecx  \r\n01130953 E8 30 E4 74 71       call        7287ED88  \r\n01130958 8B D6                mov         edx,esi  \r\n0113095A B8 64 00 00 00       mov         eax,64h  \r\n0113095F 83 C2 64             add         edx,64h  \r\n01130962 03 C2                add         eax,edx  \r\n01130964 5E                   pop         esi  \r\n01130965 C3                   ret  \r\n```\r\nSignature of this method is\r\n```\r\n  .method public hidebysig static int32 Test1(int32 theSequenceNumber) cil managed\r\n```\r\n`ECX` contains value of `theSequenceNumber` argument\r\n\r\nIn produced compiled code addition occurs twice but if I remove\r\n```\r\n    ldc.i4.0\r\n    brtrue.s   Label_A\r\n```\r\neverything back to normal and addition is not duplicated anymore. IL code from my example is simplified version of code that after obfuscation start to behave differently from original version. ","Url":"https://github.com/dotnet/coreclr/issues/27903","RelatedDescription":"Open issue \"JIT: Duplicated addition in compiled IL\" (#27903)"},{"Id":"525384378","IsPullRequest":false,"CreatedAt":"2019-11-20T02:36:57","Actor":"clamp03","Number":"27902","RawContent":null,"Title":"Startup Time on Embedded System","State":"open","Body":"One of the most time-consuming jobs during startup time is JIT compilation.\r\nWe reduced most JIT compilation overhead with NGEN(FNV), preload and MPGO.\r\n\r\nHowever, some JIT compilation overhead still remains.\r\nI found that if we remove all, then startup time can be improved by 5%~.\r\nI want to share my experiments and ask some questions.\r\n\r\nThere two types of JIT overhead.\r\n- Methods with generic (value type)\r\nI did two experiments.\r\nFirst, compile the methods only by NGEN and bind to callers.\r\nSecond, give force inline attribute to the methods during NGEN.\r\n\r\n| Launching Time (ms) | Before | First Opt | Second Opt |\r\n| --- | --- | --- | --- |\r\n| Alarm | 580.8 | 555.2 | 563.2 |\r\n| Calculator | 662.4 | 648.8 | 651.2 |\r\n| HeartRateMonitor | 621.6 | 583.2 | 589.6 |\r\n| VoiceMemo | 792.8 | 780.8 | 788 |\r\n| Weather\t| 1234.4 | 1208.8 | 1216 |\r\n| XStopWatch | 608 | 600 | 609.6 |\r\n\r\nIt shows improvements with 3% and 2%.\r\nI implemented these for PoC. I think these approaches are not acceptable.\r\nIf you have any other ways to compile the methods in NGEN, could you share it?\r\n\r\n- IL STUB: IL_STUB_InstantiatingStub and IL_STUB_UnboxingStub\r\nI disabled IL_STUB FEATURE. (Just for a test.)\r\n\r\n| Launching Time (ms) | Before | After |\r\n| --- | --- | --- |\r\n| Alarm | 721.6 | 685.6 |\r\n| Calculator | 824.0 | 810.4 |\r\n| HeartRateMonitor | 760.8 | 772.8 |\r\n| VoiceMemo | 989.6 | 949.6 |\r\n| Weather\t| 1647.2 | 1592.0 |\r\n| XStopWatch | 770.4 | 733.6 |\r\n\r\nI think if NGEN compiles IL STUBs, it will be similar.\r\nIs it possible to compile IL InstantiatingStub and IL UnboxingStub by NGEN?\r\nIf it is possible, could you share any plan (if you have) or give some guides to implement?","Url":"https://github.com/dotnet/coreclr/issues/27902","RelatedDescription":"Open issue \"Startup Time on Embedded System\" (#27902)"},{"Id":"525372747","IsPullRequest":false,"CreatedAt":"2019-11-20T01:59:19","Actor":"VincentBu","Number":"27901","RawContent":null,"Title":"Test failed: JIT/Directed/tailcall/tailcall/tailcall.sh","State":"open","Body":"**Job:**\r\n[coreclr-jitstress #20191118.1](https://dev.azure.com/dnceng/public/_build/results?buildId=431634)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/2a770028-bc31-4095-ba9f-19a2dde3d0ec/workitems/JIT.Directed/console\r\n\r\n**OS & Arch:**\r\nlinux x64\r\nosx x64\r\n\r\n**Mode:**\r\nlinux x64\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_DbgEnableMiniDump=1\r\nCOMPlus_JitStress=2\r\n\r\n**Log:**\r\n```\r\nJIT/Directed/tailcall/tailcall/tailcall.sh [FAIL]\r\n      Stack overflow.\r\n      /home/helixbot/work/2a770028-bc31-4095-ba9f-19a2dde3d0ec/Work/0d044de3-9f5f-40c1-a164-17b43629bf6b/Exec/JIT/Directed/tailcall/tailcall/tailcall.sh: line 275: 17731 Aborted                 $LAUNCHER $ExePath \"${CLRTestExecutionArguments[@]}\"\r\n      \r\n      Return code:      1\r\n      Raw output file:      /home/helixbot/work/2a770028-bc31-4095-ba9f-19a2dde3d0ec/Work/0d044de3-9f5f-40c1-a164-17b43629bf6b/Exec/JIT/Directed/Reports/JIT.Directed/tailcall/tailcall/tailcall.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n      /home/helixbot/work/2a770028-bc31-4095-ba9f-19a2dde3d0ec/Payload/corerun tailcall.dll ''\r\n      Test Start\r\n      Writing minidump with heap to file /home/helixbot/dotnetbuild/dumps/coredump.17731.dmp\r\n      Written 96120832 bytes (23467 pages) to core file\r\n      Expected: 100\r\n      Actual: 134\r\n      END EXECUTION - FAILED\r\n      Test Harness Exitcode is : 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27901","RelatedDescription":"Open issue \"Test failed: JIT/Directed/tailcall/tailcall/tailcall.sh\" (#27901)"},{"Id":"525170050","IsPullRequest":true,"CreatedAt":"2019-11-19T17:58:30","Actor":"dotnet-maestro-bot","Number":"27900","RawContent":null,"Title":"Update BuildTools, CoreFx to rc1-04230-01, servicing-28208-01, respectively (release/uwp6.2)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/27900","RelatedDescription":"Open PR \"Update BuildTools, CoreFx to rc1-04230-01, servicing-28208-01, respectively (release/uwp6.2)\" (#27900)"},{"Id":"525146962","IsPullRequest":true,"CreatedAt":"2019-11-19T17:13:03","Actor":"dotnet-maestro-bot","Number":"27899","RawContent":null,"Title":"Update CoreClr, CoreFx to servicing-28207-04, servicing-28208-01, respectively (release/2.1)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/27899","RelatedDescription":"Open PR \"Update CoreClr, CoreFx to servicing-28207-04, servicing-28208-01, respectively (release/2.1)\" (#27899)"},{"Id":"525123877","IsPullRequest":false,"CreatedAt":"2019-11-19T16:34:10","Actor":"twsouthwick","Number":"27898","RawContent":null,"Title":"double.TryParse converts small exponent to negative infinity in .NET Core 3.0+","State":"open","Body":"I recently added .NET Core 3.0 to the test matrix for a project and two tests started failing, one having to do with double parsing, the other with float. It boils down to this:\r\n\r\n```csharp\r\nConsole.WriteLine(Environment.Version);\r\nconst string input = \"-1.79769313486232e309\";\r\nConsole.WriteLine($\"Input: {input}\");\r\nvar success = double.TryParse(input, NumberStyles.AllowLeadingSign | NumberStyles.AllowDecimalPoint | NumberStyles.AllowExponent | NumberStyles.AllowLeadingWhite | NumberStyles.AllowTrailingWhite, NumberFormatInfo.InvariantInfo, out var result);\r\nConsole.WriteLine($\"double.TryParse: {success}: '{result}'\");\r\n```\r\n\r\nOn .NET Core 2.1, the output looks like this:\r\n\r\n```\r\n4.0.30319.42000\r\nInput: -1.79769313486232e309\r\ndouble.TryParse: False: '0'  \r\n```\r\n\r\nOn .NET Core 3.0, the output looks like this:\r\n\r\n```\r\n3.0.0\r\nInput: -1.79769313486232e309\r\ndouble.TryParse: True: '-∞'\r\n```\r\n\r\nI know a number of changes went into .NET Core 3.0 regarding floating points, but this seems to be a regression. It's a small number, but I want to know if it's negative infinity or just too small to accurately fit within a double (same thing for value for float).","Url":"https://github.com/dotnet/coreclr/issues/27898","RelatedDescription":"Open issue \"double.TryParse converts small exponent to negative infinity in .NET Core 3.0+\" (#27898)"},{"Id":"525043920","IsPullRequest":false,"CreatedAt":"2019-11-19T14:28:00","Actor":"kirsan31","Number":"27897","RawContent":null,"Title":"Access Violation in Marshal.StructureToPtr is not translated to the AccessViolationException","State":"open","Body":"When we set `COMPlus_legacyCorruptedStateExceptionsPolicy` environment variable to 1, we expect to catch AccessViolationException in .net core program. It's not working in case of StructureToPtr (some other cases?) - AccessViolationException not capturing.\r\n<details><summary>Test program:</summary>\r\n\r\n```cs\r\nclass Program\r\n{\r\n    static void DoSomeAccessViolation()\r\n    {\r\n        Marshal.StructureToPtr(42, (IntPtr)42, true);\r\n    }\r\n\r\n    static void Main(string[] args)\r\n    {\r\n        try\r\n        {\r\n            DoSomeAccessViolation();\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            Console.Error.WriteLine(ex);\r\n        }\r\n    }\r\n}\r\n```\r\n</details>\r\n\r\n[Detailed explanation of the bug](https://github.com/dotnet/coreclr/issues/22722#issuecomment-555472817) from @AntonLapounov.\r\nOriginal question on [stackoverflow](https://stackoverflow.com/q/48682489/6075536).\r\nRelated? question on [stackoverflow](https://stackoverflow.com/q/49357461/6075536).\r\n\r\n/cc @janvorli ","Url":"https://github.com/dotnet/coreclr/issues/27897","RelatedDescription":"Open issue \"Access Violation in Marshal.StructureToPtr is not translated to the AccessViolationException\" (#27897)"},{"Id":"524593627","IsPullRequest":false,"CreatedAt":"2019-11-18T20:11:58","Actor":"VladislavMorozov","Number":"27895","RawContent":null,"Title":"System.Security.Cryptography. ECDsaOpenSsl throw NullReferenceException after using construction.","State":"open","Body":"# Issue Title\r\n\r\nECDsaOpenSsl from System.Security.Cryptography throw NullReferenceException after using construction.\r\n\r\nhttps://github.com/dotnet/corefx/issues/42631\r\n\r\n# General\r\n\r\nI have .NET Core 2.2 and Linux container in docker. When I create JWT token with ES256 algorithm `JwtSecurityTokenHandler.CreateEncodedJwt()` throw exception.\r\n\r\n![token](https://user-images.githubusercontent.com/31768904/68990973-a8d04b00-086a-11ea-9802-bde4c34ac303.png)\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Azure.Containers.Tools.Targets\" Version=\"1.9.5\" />\r\n    <PackageReference Include=\"Portable.BouncyCastle\" Version=\"1.8.5.2\" />\r\n    <PackageReference Include=\"System.IdentityModel.Tokens.Jwt\" Version=\"5.6.0\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n```\r\nFROM mcr.microsoft.com/dotnet/core/runtime:2.2-stretch-slim AS base\r\nWORKDIR /app\r\n\r\nFROM mcr.microsoft.com/dotnet/core/sdk:2.2-stretch AS build\r\nWORKDIR /src\r\nCOPY [\"AppleMusic/AppleMusic.csproj\", \"AppleMusic/\"]\r\nRUN dotnet restore \"AppleMusic/AppleMusic.csproj\"\r\nCOPY . .\r\nWORKDIR \"/src/AppleMusic\"\r\nRUN dotnet build \"AppleMusic.csproj\" -c Release -o /app/build\r\n\r\nFROM build AS publish\r\nRUN dotnet publish \"AppleMusic.csproj\" -c Release -o /app/publish\r\n\r\nFROM base AS final\r\nWORKDIR /app\r\nCOPY --from=publish /app/publish .\r\nENTRYPOINT [\"dotnet\", \"AppleMusic.dll\"]\r\n```\r\n\r\n\r\n```\r\nusing System;\r\nusing System.IdentityModel.Tokens.Jwt;\r\nusing System.Security.Claims;\r\nusing System.Security.Cryptography;\r\nusing Microsoft.IdentityModel.Tokens;\r\nusing Org.BouncyCastle.Crypto.Parameters;\r\nusing Org.BouncyCastle.Security;\r\n\r\nnamespace AppleMusic\r\n{\r\n\tclass Program\r\n\t{\r\n\t\tstatic void Main(string[] args)\r\n\t\t{\r\n\t\t\tvar key = \"\";\r\n\t\t\t\r\n\t\t\tvar iat = (int)DateTime.UtcNow.Subtract(new DateTime(1970, 1, 1)).TotalSeconds;\r\n\t\t\tvar exp = (int)DateTime.UtcNow.AddMonths(5).Subtract(new DateTime(1970, 1, 1)).TotalSeconds;\r\n\r\n\t\t\tvar tokenHandler = new JwtSecurityTokenHandler();\r\n\r\n\t\t\tvar tokenDescriptor = new SecurityTokenDescriptor\r\n\t\t\t{\r\n\t\t\t\tSubject = new ClaimsIdentity(new Claim[]\r\n\t\t\t\t{\r\n\t\t\t\t\tnew Claim(\"iat\", iat.ToString()),\r\n\t\t\t\t\tnew Claim(\"exp\", exp.ToString()),\r\n\t\t\t\t}),\r\n\t\t\t\tIssuer = \"\"\r\n\t\t\t};\r\n\r\n\t\t\tfor (var i = 0; i < 100; i++)\r\n\t\t\t{\r\n\t\t\t\tusing (var algorithm = GetEllipticCurveAlgorithm(key)) // this code doesn't work\r\n\t\t\t\t{\r\n\t\t\t\t\ttokenDescriptor.SigningCredentials = new SigningCredentials(new ECDsaSecurityKey(algorithm)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tKeyId = \"\"\r\n\t\t\t\t\t}, SecurityAlgorithms.EcdsaSha256);\r\n\t\t\t\t\tvar token = tokenHandler.CreateEncodedJwt(tokenDescriptor);\r\n\t\t\t\t\tConsole.WriteLine(token);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tprivate static ECDsa GetEllipticCurveAlgorithm(string privateKey)\r\n\t\t{\r\n\t\t\tvar keyParams = (ECPrivateKeyParameters)PrivateKeyFactory\r\n\t\t\t\t.CreateKey(Convert.FromBase64String(privateKey));\r\n\r\n\t\t\tvar q = keyParams.Parameters.G.Multiply(keyParams.D).Normalize();\r\n\r\n\t\t\treturn ECDsa.Create(new ECParameters\r\n\t\t\t{\r\n\t\t\t\tCurve = ECCurve.CreateFromValue(keyParams.PublicKeyParamSet.Id),\r\n\t\t\t\tD = keyParams.D.ToByteArrayUnsigned(),\r\n\t\t\t\tQ =\r\n\t\t\t\t{\r\n\t\t\t\t\tX = q.XCoord.GetEncoded(),\r\n\t\t\t\t\tY = q.YCoord.GetEncoded()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n","Url":"https://github.com/dotnet/coreclr/issues/27895","RelatedDescription":"Open issue \"System.Security.Cryptography. ECDsaOpenSsl throw NullReferenceException after using construction.\" (#27895)"},{"Id":"522591736","IsPullRequest":true,"CreatedAt":"2019-11-18T17:46:12","Actor":"AntonLapounov","Number":"27876","RawContent":null,"Title":"Move helixpublishwitharcade.proj one directory higher","State":"closed","Body":"Fixes #27508. After moving 'helixpublishwitharcade.proj' from 'tests' to 'tests\\src' directory we inadvertently started generating the unused 'helixpublishwitharcade.cmd' file as the result of importing 'tests\\src\\Directory.Build.props'. Nothing in 'tests\\src\\Directory.Build.props' file is actually needed for 'helixpublishwitharcade.proj' besides setting the `BinDir` property.  This change moves 'helixpublishwitharcade.proj' back to the 'tests' directory and does a minor properties cleanup.","Url":"https://github.com/dotnet/coreclr/pull/27876","RelatedDescription":"Closed or merged PR \"Move helixpublishwitharcade.proj one directory higher\" (#27876)"},{"Id":"524126230","IsPullRequest":false,"CreatedAt":"2019-11-18T04:23:31","Actor":"VincentBu","Number":"27894","RawContent":null,"Title":"Loader\\binding\\tracing\\BinderTracingTest\\BinderTracingTest.cmd","State":"open","Body":"**Job:**\r\n[coreclr-runincontext #20191117.1 Run Test Pri1 RunInContext Windows_NT x64 checked](https://dev.azure.com/dnceng/public/_build/results?buildId=430234)\r\n\r\n**Detail:**\r\nwin x64\r\nhttps://helix.dot.net/api/2019-06-17/jobs/728f730a-d057-4beb-a504-9a4d29fba3c7/workitems/PayloadGroup0/console\r\n\r\n**OS & Arch:**\r\nwindows x64\r\nwindows x86\r\nlinux x64\r\n\r\n**Mode:**\r\nwin x64\r\nRunInUnloadableContext=1 \r\nCOMPlus_TieredCompilation=0\r\n\r\n**Note:**\r\nI can't repro this failure on my windows x64 machine\r\n\r\n**Log:**\r\n```\r\nLoader\\binding\\tracing\\BinderTracingTest\\BinderTracingTest.cmd [FAIL]\r\n      \r\n      Return code:      1\r\n      Raw output file:      C:\\dotnetbuild\\work\\728f730a-d057-4beb-a504-9a4d29fba3c7\\Work\\8cd0ac24-a914-47de-ab92-ff7eed6e46f9\\Exec\\Loader\\binding\\Reports\\Loader.binding\\tracing\\BinderTracingTest\\BinderTracingTest.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n      call C:\\dotnetbuild\\work\\728f730a-d057-4beb-a504-9a4d29fba3c7\\Payload\\runincontext.cmd C:\\dotnetbuild\\work\\728f730a-d057-4beb-a504-9a4d29fba3c7\\Work\\8cd0ac24-a914-47de-ab92-ff7eed6e46f9\\Exec\\Loader\\binding\\tracing\\BinderTracingTest\\ BinderTracingTest.dll \r\n      Running AppDomainAssemblyResolve_LoadAssembly...\r\n      Running AppDomainAssemblyResolve_NameMismatch...\r\n      Running AppDomainAssemblyResolve_MultipleHandlers...\r\n      Launching process for AssemblyLoadFromResolveHandler_LoadDependency...\r\n      Running AssemblyLoadFromResolveHandler_LoadDependency...\r\n      \r\n      Launching process for AssemblyLoadFromResolveHandler_MissingDependency...\r\n      Running AssemblyLoadFromResolveHandler_MissingDependency...\r\n      Test AssemblyLoadFromResolveHandler_MissingDependency failed: TestLibrary.AssertTestException: Assert.AreEqual: Expected: [True]. Actual: [False]. Unexpected value for IsTrackedLoad on event\r\n         at TestLibrary.Assert.HandleFail(String assertionName, String message) in F:\\workspace\\_work\\1\\s\\tests\\src\\Common\\CoreCLRTestLibrary\\Assertion.cs:line 735\r\n         at TestLibrary.Assert.AreEqual[T](T expected, T actual, String message) in F:\\workspace\\_work\\1\\s\\tests\\src\\Common\\CoreCLRTestLibrary\\Assertion.cs:line 414\r\n         at BinderTracingTests.BinderTracingTest.ValidateLoadFromHandlerInvocation(LoadFromHandlerInvocation expected, LoadFromHandlerInvocation actual) in F:\\workspace\\_work\\1\\s\\tests\\src\\Loader\\binding\\tracing\\BinderTracingTest.cs:line 533\r\n         at BinderTracingTests.BinderTracingTest.ValidateBindOperation(BindOperation expected, BindOperation actual) in F:\\workspace\\_work\\1\\s\\tests\\src\\Loader\\binding\\tracing\\BinderTracingTest.cs:line 486\r\n         at BinderTracingTests.BinderTracingTest.ValidateSingleBind(BinderEventListener listener, String assemblyName, BindOperation expected) in F:\\workspace\\_work\\1\\s\\tests\\src\\Loader\\binding\\tracing\\BinderTracingTest.cs:line 475\r\n         at BinderTracingTests.BinderTracingTest.RunSingleTest(MethodInfo method) in F:\\workspace\\_work\\1\\s\\tests\\src\\Loader\\binding\\tracing\\BinderTracingTest.cs:line 430\r\n      \r\n      RunInContext FAIL! Exiting due to unhandled exception in the test: System.IO.FileLoadException: Could not load file or assembly 'System.ComponentModel, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. An operation is not legal in the current state. (0x80131509 (COR_E_INVALIDOPERATION))\r\n      File name: 'System.ComponentModel, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n       ---> System.InvalidOperationException: AssemblyLoadContext is unloading or was already unloaded.\r\n         at System.Runtime.Loader.AssemblyLoadContext.VerifyIsAlive()\r\n         at System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyPath(String assemblyPath)\r\n         at TestAssemblyLoadContext.Load(AssemblyName name) in /_/src/tools/runincontext/runincontext.cs:line 179\r\n         at System.Runtime.Loader.AssemblyLoadContext.ResolveUsingLoad(AssemblyName assemblyName)\r\n         at System.Runtime.Loader.AssemblyLoadContext.Resolve(IntPtr gchManagedAssemblyLoadContext, AssemblyName assemblyName)\r\n         at System.ComponentModel.Component.Dispose(Boolean disposing)\r\n         at System.ComponentModel.Component.Finalize()\r\n      Expected: 100\r\n      Actual: 213\r\n      END EXECUTION - FAILED\r\n      FAILED\r\n      Test Harness Exitcode is : 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27894","RelatedDescription":"Open issue \"Loader\\binding\\tracing\\BinderTracingTest\\BinderTracingTest.cmd\" (#27894)"},{"Id":"524122050","IsPullRequest":false,"CreatedAt":"2019-11-18T04:05:22","Actor":"VincentBu","Number":"27893","RawContent":null,"Title":"Test failed: JIT\\Directed\\IL\\PInvokeTail\\TailWinApi\\TailWinApi.cmd","State":"open","Body":"**Job:**\r\n[coreclr-jitstress2-jitstressregs #20191117.1 Run Test Pri1 Windows_NT arm checked](https://dev.azure.com/dnceng/public/_build/results?buildId=430388)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/04e513f8-09c1-4d7d-bbe1-53f53e31439f/workitems/JIT.Directed/console\r\n\r\n**OS & Arch:**\r\nwindows arm \r\n\r\n**Mode:**\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_JitStress=2\r\nCOMPlus_JitStressRegs=4\r\n\r\n**Log:**\r\n```\r\nJIT\\Directed\\IL\\PInvokeTail\\TailWinApi\\TailWinApi.cmd [FAIL]\r\n      Fatal error. System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.\r\n         at Win32.GetSystemDirectoryAuto(System.Text.StringBuilder, UInt32)\r\n         at <Module>.main()\r\n      \r\n      Return code:      1\r\n      Raw output file:      C:\\dotnetbuild\\work\\04e513f8-09c1-4d7d-bbe1-53f53e31439f\\Work\\f834c92f-10fe-4318-99d4-3847ef4d606f\\Exec\\JIT\\Directed\\Reports\\JIT.Directed\\IL\\PInvokeTail\\TailWinApi\\TailWinApi.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n       \"C:\\dotnetbuild\\work\\04e513f8-09c1-4d7d-bbe1-53f53e31439f\\Payload\\corerun.exe\" TailWinApi.dll \r\n      C:\\WINDOWS\\system32\r\n      C:\\WINDOWS\\system32\r\n      Expected: 100\r\n      Actual: -1073741819\r\n      END EXECUTION - FAILED\r\n      FAILED\r\n      Test Harness Exitcode is : 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27893","RelatedDescription":"Open issue \"Test failed: JIT\\Directed\\IL\\PInvokeTail\\TailWinApi\\TailWinApi.cmd\" (#27893)"},{"Id":"524116149","IsPullRequest":false,"CreatedAt":"2019-11-18T03:40:43","Actor":"VincentBu","Number":"27892","RawContent":null,"Title":"Test failed: Interop/StructPacking/StructPacking/StructPacking.sh","State":"open","Body":"**Job:**\r\n[coreclr-gcstress-extra #20191117.1 Run Test Pri1 Linux x64 checked](https://dev.azure.com/dnceng/public/_build/results?buildId=430433)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/426c897b-365e-44ca-a8b3-0aa6785acd9e/workitems/Interop/console\r\n\r\n**OS & Arch:**\r\nlinux x64\r\n\r\n**Mode:**\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_DbgEnableMiniDump=1\r\nCOMPlus_GCStress=0xC\r\nCOMPlus_JitStress=1\r\n\r\n**Log:**\r\n```\r\nInterop/StructPacking/StructPacking/StructPacking.sh [FAIL]\r\n      \r\n      Assert failure(PID 23546 [0x00005bfa], Thread: 23546 [0x5bfa]): !CREATE_CHECK_STRING(pMT && pMT->Validate())\r\n          File: /__w/3/s/src/vm/object.cpp Line: 592\r\n          Image: /home/helixbot/work/426c897b-365e-44ca-a8b3-0aa6785acd9e/Payload/corerun\r\n      \r\n      /home/helixbot/work/426c897b-365e-44ca-a8b3-0aa6785acd9e/Work/acb2ee89-df2d-4190-9d35-30297b37c6dc/Exec/Interop/StructPacking/StructPacking/StructPacking.sh: line 275: 23546 Aborted                 $LAUNCHER $ExePath \"${CLRTestExecutionArguments[@]}\"\r\n      \r\n      Return code:      1\r\n      Raw output file:      /home/helixbot/work/426c897b-365e-44ca-a8b3-0aa6785acd9e/Work/acb2ee89-df2d-4190-9d35-30297b37c6dc/Exec/Interop/StructPacking/Reports/Interop.StructPacking/StructPacking/StructPacking.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n      /home/helixbot/work/426c897b-365e-44ca-a8b3-0aa6785acd9e/Payload/corerun StructPacking.dll ''\r\n      Writing minidump with heap to file /home/helixbot/dotnetbuild/dumps/coredump.23546.dmp\r\n      Written 54083584 bytes (13204 pages) to core file\r\n      Expected: 100\r\n      Actual: 134\r\n      END EXECUTION - FAILED\r\n      Test Harness Exitcode is : 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27892","RelatedDescription":"Open issue \"Test failed: Interop/StructPacking/StructPacking/StructPacking.sh\" (#27892)"},{"Id":"524114371","IsPullRequest":false,"CreatedAt":"2019-11-18T03:34:06","Actor":"VincentBu","Number":"27891","RawContent":null,"Title":"Test failed: Interop\\COM\\Reflection\\Reflection\\Reflection.cmd","State":"open","Body":"**Job:**\r\n[coreclr-gcstress-extra #20191117.1 Run Test Pri1 Windows_NT x64 checked](https://dev.azure.com/dnceng/public/_build/results?buildId=430433)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/8275f019-402b-4d19-bf37-d7b4b62dcb98/workitems/Interop/console\r\n\r\n**OS & Arch:**\r\nwindows x64\r\n\r\n**Mode:**\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_GCStress=0xC\r\nCOMPlus_JitStress=1\r\n\r\n**Note:**\r\nThis failure **doesn't repro** on our windows x64 machine\r\n\r\n**Log:**\r\n```\r\nInterop\\COM\\Reflection\\Reflection\\Reflection.cmd [FAIL]\r\n      \r\n      Assert failure(PID 6120 [0x000017e8], Thread: 4996 [0x1384]): SanityCheck()\r\n      \r\n      CORECLR! MethodTable::Validate + 0x3F (0x00007ffa`c6283023)\r\n      CORECLR! Object::ValidateInner + 0x127 (0x00007ffa`c61a5fc7)\r\n      CORECLR! Object::Validate + 0x131 (0x00007ffa`c61a5e61)\r\n      CORECLR! WKS::GCHeap::Promote + 0x9F (0x00007ffa`c65d983f)\r\n      CORECLR! PromoteCarefully + 0xAB (0x00007ffa`c61d16fb)\r\n      CORECLR! TransitionFrame::PromoteCallerStackUsingGCRefMap + 0x132 (0x00007ffa`c611feda)\r\n      CORECLR! ExternalMethodFrame::GcScanRoots + 0xE1 (0x00007ffa`c611ce51)\r\n      CORECLR! GcStackCrawlCallBack + 0x37A (0x00007ffa`c64e509a)\r\n      CORECLR! Thread::MakeStackwalkerCallback + 0x52 (0x00007ffa`c5f50562)\r\n      CORECLR! Thread::StackWalkFramesEx + 0x17A (0x00007ffa`c5f525ae)\r\n          File: F:\\workspace\\_work\\1\\s\\src\\vm\\methodtable.cpp Line: 9884\r\n          Image: C:\\dotnetbuild\\work\\8275f019-402b-4d19-bf37-d7b4b62dcb98\\Payload\\CoreRun.exe\r\n      \r\n      \r\n      Return code:      1\r\n      Raw output file:      C:\\dotnetbuild\\work\\8275f019-402b-4d19-bf37-d7b4b62dcb98\\Work\\710ac904-3628-4477-bc26-85f11ead8ea0\\Exec\\Interop\\COM\\Reports\\Interop.COM\\Reflection\\Reflection\\Reflection.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n       \"C:\\dotnetbuild\\work\\8275f019-402b-4d19-bf37-d7b4b62dcb98\\Payload\\corerun.exe\" Reflection.dll \r\n      Scenario: ReflectionLoad\r\n      ArrayTesting\r\n      ColorTesting\r\n      ConsumeNETServerTesting\r\n      DispatchTesting\r\n      ErrorMarshalTesting\r\n      LicenseTesting\r\n      MockLicenseProvider\r\n      NumericTesting\r\n      StringTesting\r\n      INumericTesting\r\n      IArrayTesting\r\n      IStringTesting\r\n      HResult\r\n      IErrorMarshalTesting\r\n      IDispatchTesting_Exception\r\n      HFA_4\r\n      IDispatchTesting\r\n      IEventTesting\r\n      TestingEvents\r\n      IAggregationTesting\r\n      IColorTesting\r\n      ILicenseTesting\r\n      IConsumeNETServer\r\n      Guids\r\n      IEnumVARIANT\r\n      ContextMenu\r\n      MockLicense\r\n      Scenario: TypeIsComObject\r\n      Scenario: ActivateCOMType\r\n      Expected: 100\r\n      Actual: -1073740286\r\n      END EXECUTION - FAILED\r\n      FAILED\r\n      Test Harness Exitcode is : 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27891","RelatedDescription":"Open issue \"Test failed: Interop\\COM\\Reflection\\Reflection\\Reflection.cmd\" (#27891)"},{"Id":"524084950","IsPullRequest":true,"CreatedAt":"2019-11-18T01:24:42","Actor":"franksinankaya","Number":"27890","RawContent":null,"Title":"Detect VFP Size at compile time","State":"open","Body":"Based on the table here: http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.dui0774g/chr1383660321827.html","Url":"https://github.com/dotnet/coreclr/pull/27890","RelatedDescription":"Open PR \"Detect VFP Size at compile time\" (#27890)"},{"Id":"523643890","IsPullRequest":true,"CreatedAt":"2019-11-17T11:25:49","Actor":"Dotnet-GitSync-Bot","Number":"27887","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @carlossanlop","Url":"https://github.com/dotnet/coreclr/pull/27887","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#27887)"},{"Id":"523776291","IsPullRequest":true,"CreatedAt":"2019-11-16T02:26:17","Actor":"franksinankaya","Number":"27889","RawContent":null,"Title":"Fix friend class declaration","State":"open","Body":"[ 27%] Building CXX object src/pal/src/CMakeFiles/coreclrpal.dir/arch/amd64/signalhandlerhelper.cpp.o\r\ncoreclr/src/pal/src/thread/thread.cpp:1613:1: error: ‘CorUnix::PAL_ERROR CorUnix::InternalSetThreadDescription(CorUnix::CPalThread*, HANDLE, PCWSTR)’ has not been declared within CorUnix [-Werror]\r\n CorUnix::InternalSetThreadDescription(\r\n ^~~~~~~\r\nIn file included from coreclr/src/pal/src/include/pal/dbgmsg.h:160:0,\r\n                 from coreclr/src/pal/src/thread/thread.cpp:21:\r\ncoreclr/src/pal/src/include/pal/thread.hpp:204:13: note: only here as a friend\r\n             InternalSetThreadDescription(","Url":"https://github.com/dotnet/coreclr/pull/27889","RelatedDescription":"Open PR \"Fix friend class declaration\" (#27889)"},{"Id":"523761688","IsPullRequest":false,"CreatedAt":"2019-11-16T00:43:10","Actor":"juniorriau","Number":"27888","RawContent":null,"Title":"[Linux Share Hosting] Failed to create CoreCLR, HRESULT: 0x8007000E when run or publish webapp","State":"open","Body":"Hi\r\n\r\nI try to provide dotnet share hosting, but i'm facing an issue\r\n\r\ni have an error when trying to run  or publish dotnet webapp. the error message when i run dotnet run or dotnet publish --configuration Release below:\r\n\r\n`[dotnetapp@public myWebApp]$ dotnet publish --configuration Release\r\nTelemetry is: Enabled\r\nMicrosoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 15.95 ms for /home/dotnetapp/public_html/myWebApp/myWebApp.csproj.\r\n/usr/share/dotnet/sdk/3.0.100/Roslyn/Microsoft.CSharp.Core.targets(59,5): error : Failed to create CoreCLR, HRESULT: 0x8007000E [/home/dotnetapp/public_html/myWebApp/myWebApp.csproj]\r\n[dotnetapp@public myWebApp]$ dotnet run\r\n/usr/share/dotnet/sdk/3.0.100/Roslyn/Microsoft.CSharp.Core.targets(59,5): error : Failed to create CoreCLR, HRESULT: 0x8007000E [/home/dotnetapp/public_html/myWebApp/myWebApp.csproj]\r\n\r\nThe build failed. Fix the build errors and run again.\r\n[dotnetapp@public myWebApp]$`\r\n\r\nhere the server spec:\r\nCentOS 7\r\ncPanel Installed\r\nVM Ram 8GB\r\nUser ram limit 2GB \r\nulimit from root:\r\n`[root@public ~]# ulimit -v\r\nunlimited\r\n[root@public ~]#`\r\nulimit from user\r\n`[dotnetapp@public ~]$ ulimit -v\r\n4194304\r\n[dotnetapp@public ~]$`\r\n\r\ncause i'm new in dotnet, i confuse to find the error log file where. I've read an simillar issue in [Thread #25553](https://github.com/dotnet/coreclr/issues/25553) i think with my limit, it will not be happen","Url":"https://github.com/dotnet/coreclr/issues/27888","RelatedDescription":"Open issue \"[Linux Share Hosting] Failed to create CoreCLR, HRESULT: 0x8007000E when run or publish webapp\" (#27888)"},{"Id":"523288080","IsPullRequest":false,"CreatedAt":"2019-11-15T06:48:07","Actor":"GrabYourPitchforks","Number":"27886","RawContent":null,"Title":"Vector<T> operations don't take advantage of memory operands","State":"open","Body":"With https://github.com/dotnet/coreclr/pull/22944, the raw hardware intrinsics are able to take advantage of folding the memory load operation into the SIMD instruction itself.\r\n\r\nHowever, this same optimization was not applied to `Vector` and `Vector<T>` more generally, even though they're using nearly identical codegen under the covers.\r\n\r\n```cs\r\npublic static Vector<byte> M(Vector<byte> a, ref Vector<byte> b)\r\n{\r\n    return Vector.Equals(a, b);\r\n}\r\n\r\npublic static Vector256<byte> N(Vector256<byte> a, ref Vector256<byte> b)\r\n{\r\n    return Avx2.CompareEqual(a, b);\r\n}\r\n```\r\n\r\n```asm\r\n; C.M(System.Numerics.Vector`1<Byte>, System.Numerics.Vector`1<Byte> ByRef)\r\n    L0000: vzeroupper\r\n    L0003: vmovupd ymm0, [rdx]\r\n    L0007: vmovupd ymm1, [r8]   ; note the allocation of register ymm1\r\n    L000c: vpcmpeqb xmm0, xmm0, xmm1\r\n    L0010: vmovupd [rcx], ymm0\r\n    L0014: mov rax, rcx\r\n    L0017: vzeroupper\r\n    L001a: ret\r\n\r\n; C.N(System.Runtime.Intrinsics.Vector256`1<Byte>, System.Runtime.Intrinsics.Vector256`1<Byte> ByRef)\r\n    L0000: vzeroupper\r\n    L0003: vmovupd ymm0, [rdx]\r\n    L0007: vpcmpeqb xmm0, xmm0, [r8]   ; operation doesn't touch register ymm1\r\n    L000c: vmovupd [rcx], ymm0\r\n    L0010: mov rax, rcx\r\n    L0013: vzeroupper\r\n    L0016: ret\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27886","RelatedDescription":"Open issue \"Vector<T> operations don't take advantage of memory operands\" (#27886)"},{"Id":"522848814","IsPullRequest":true,"CreatedAt":"2019-11-15T02:45:53","Actor":"dotnet-maestro[bot]","Number":"27881","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191114.1\r\n- **Date Produced**: 11/14/2019 10:49 AM\r\n- **Commit**: c77948d92a2f950140f09384f057cb893ec3955a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha.1.19564.1\r\n\r\n[marker]: <> (End:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/27881","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#27881)"},{"Id":"522848602","IsPullRequest":true,"CreatedAt":"2019-11-15T02:45:47","Actor":"dotnet-maestro[bot]","Number":"27880","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191113.6\r\n- **Date Produced**: 11/14/2019 7:13 AM\r\n- **Commit**: 5cee7c97d602f294e27c582d4dab81ec388f1d7b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 5.0.0-alpha.1.19563.6\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 5.0.0-alpha.1.19563.6\r\n\r\n[marker]: <> (End:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/27880","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#27880)"},{"Id":"522847167","IsPullRequest":true,"CreatedAt":"2019-11-15T02:45:39","Actor":"dotnet-maestro[bot]","Number":"27879","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191113.9\r\n- **Date Produced**: 11/14/2019 1:36 AM\r\n- **Commit**: 3e344e919cc58ead331b18b83021120c1e8620e3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 5.0.0-beta.19563.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19563.9\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 5.0.0-beta.19563.9\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19563.9\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19563.9\r\n\r\n[marker]: <> (End:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/27879","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#27879)"},{"Id":"523163419","IsPullRequest":true,"CreatedAt":"2019-11-15T00:21:02","Actor":"wtgodbe","Number":"27885","RawContent":null,"Title":"Update PreReleaseVersionLabel to RTM","State":"closed","Body":"Non-shipping packages should be labeled RTM for GA. We need to take this fix for 3.1 GA","Url":"https://github.com/dotnet/coreclr/pull/27885","RelatedDescription":"Closed or merged PR \"Update PreReleaseVersionLabel to RTM\" (#27885)"},{"Id":"523158145","IsPullRequest":false,"CreatedAt":"2019-11-14T23:12:23","Actor":"am11","Number":"27884","RawContent":null,"Title":"Align missing libintl behavior of macOS and Alpine / musl-libc portable","State":"open","Body":"<ins>libintl: the last unavoidable runtime dependency</ins>\r\n\r\nFor the operating systems which do not have libc providing gettext or libintl functionality out of the box, there is a UNIXTODO:\r\n\r\nhttps://github.com/dotnet/coreclr/blob/ed5dc831b09a0bfed76ddad684008bebc86ab2f0/src/pal/src/locale/unicode.cpp#L592-L595\r\n\r\nOn macOS, regardless we have ran `brew install gettext` on the CoreCLR build machine, it gets skipped due to this condition:\r\n\r\nhttps://github.com/dotnet/coreclr/blob/ed5dc831b09a0bfed76ddad684008bebc86ab2f0/src/pal/src/configure.cmake#L49-L51\r\n\r\nHowever, it seems that the build machine dedicated for musl-libc portable, there is gettext installed, so consumers get this as a hard runtime dependency. On Alpine Linux, we need to install `libintl` package; on Void Linux (muscle edition), the smallest available (yet baggy) package `gettext` is required. A bit more unfortunate case is Single EXE / \"bundle\" apps, where this inobvious dependency is required as well.\r\n\r\nFor that matter, we have recently added a check in `dotnet-install` script: https://github.com/dotnet/cli/blob/ba194e4e6fe356af1e82abdca03e9cfbb2e3ca28/scripts/obtain/dotnet-install.sh#L258.\r\n\r\nProposal: Make `HAVE_LIBINTL_H`  always-false for Alpine Linux just like macOS (for now™️).\r\n\r\nPS - BTW, there is no issue tracking that UNIXTODO; was the original plan to implement the required functionality in CoreCLR?\r\n\r\n/cc @janvorli, @jkotas","Url":"https://github.com/dotnet/coreclr/issues/27884","RelatedDescription":"Open issue \"Align missing libintl behavior of macOS and Alpine / musl-libc portable\" (#27884)"},{"Id":"522952870","IsPullRequest":false,"CreatedAt":"2019-11-14T20:08:40","Actor":"yaugenka","Number":"27882","RawContent":null,"Title":"GetCustomAttribute throws NullReferenceException on undefined or empty Attributes","State":"closed","Body":"`Assembly.GetExecutingAssembly().GetCustomAttribute<AssemblyDescriptionAttribute>().Description;`\r\nThis call will throw NullReferenceException when `Description` is not defined or defined with empty value like `<Description></Description>`\r\n\r\nIn Framework it returns an empty string.","Url":"https://github.com/dotnet/coreclr/issues/27882","RelatedDescription":"Closed issue \"GetCustomAttribute throws NullReferenceException on undefined or empty Attributes\" (#27882)"},{"Id":"522837656","IsPullRequest":false,"CreatedAt":"2019-11-14T12:52:03","Actor":"damageboy","Number":"27878","RawContent":null,"Title":"Consider mitigating the JCC erratum in the JIT (Nov. 2019)","State":"open","Body":"## What\r\nIn continuation of #27877, It might be worthwhile to consider applying the same fixes suggested by intel in their erratum:\r\nhttps://www.intel.com/content/dam/support/us/en/documents/processors/mitigations-jump-conditional-code-erratum.pdf\r\n\r\nTo the code generated by the JIT.\r\n\r\nIt is hard for me, personally to evaluate the impact on the performance of generated code produced by the JIT, but my very small anecdotal experience shows anywhere from 1%-2% degradation for my own code, to potential 20% degradation in very specific instances.\r\n\r\nThis is in accordance with Intel's own guidance (Section 2.2):\r\n> Intel has observed performance effects associated with the workaround ranging from\r\n0-4% on many industry-standard benchmarks. 1 In subcomponents of these\r\nbenchmarks, Intel has observed outliers higher than the 0-4% range.\r\n\r\n## Affected opcodes\r\nThe update affects all forms of jumps, direct and indirect when the instruction itself is either ending or crossing on a 32-byte boundary (Section 2.1):\r\n> The MCU prevents jump instructions from being cached in the Decoded ICache when the jump\r\ninstructions cross a 32-byte boundary or when they end on a 32-byte boundary. In\r\nthis context, Jump Instructions include all jump types: conditional jump (Jcc), macro-\r\nfused op-Jcc (where op is one of cmp, test, add, sub, and, inc, or dec), direct\r\nunconditional jump, indirect jump, direct/indirect call, and return.\r\n\r\n![image](https://user-images.githubusercontent.com/125730/68857980-b8c22080-06ec-11ea-9a87-4d37859d8767.png)\r\n\r\n## Proposed mitigation for code-generation\r\nThe proposed fix by intel is to stuff the affected opcodes:\r\n* jcc\r\n* fused\r\n*  jmp\r\n* call\r\n* ret\r\n\r\nwith 0x2e prefix (End of section 2.4.0):\r\n> The advice to software developers is to align the jae instruction so that it does not\r\ncross a 32-byte boundary. In the example, this is done by adding the benign prefix\r\n0x2e four times before the first push %rbp instruction so that the cmp instruction,\r\nwhich started at offset 1c, will instead start at offset 20. Hence the macro-fused cmp+jae instruction will not cross a 32-byte boundary.\r\n\r\n\r\n## Affected processors\r\nSection 4.0 specifically lists no less than 40 Intel CPUs, covering the breadth of their product line, that are affected by this update:\r\n\r\n| Family  | Stepping | Series                                                                                                         |\r\n|---------|----------|----------------------------------------------------------------------------------------------------------------|\r\n| 06\\_8EH | 9        | 8th Generation Intel® CoreTM Processor Family based on microarchitecture code name Amber Lake Y                |\r\n| 06\\_8EH | C        | 8th Generation Intel® CoreTM Processor Family based on microarchitecture code name Amber Lake Y                |\r\n| 06\\_55  | 7        | 2nd Generation Intel® Xeon® Scalable Processors based on microarchitecture code name Cascade Lake \\(server\\)   |\r\n| 06\\_9EH | A        | 8th Generation Intel® CoreTM Processor Family based on microarchitecture code name Coffee Lake H               |\r\n| 06\\_9EH | A        | 8th Generation Intel® CoreTM Processor Family based on microarchitecture code name Coffee Lake S               |\r\n| 06\\_8EH | A        | 8th Generation Intel® CoreTM Processor Family based on microarchitecture code name Coffee Lake U43e            |\r\n| 06\\_9EH | B        | 8th Generation Intel® CoreTM Processor Family based on microarchitecture code name Coffee Lake S \\(47\\)        |\r\n| 06\\_9EH | B        | Intel® Celeron® Processor G Series based on microarchitecture code name Coffee Lake S \\(48\\)                   |\r\n| 06\\_9EH | A        | 8th Generation Intel® CoreTM Processor Family based on microarchitecture code name Coffee Lake S \\(69\\) x/KBP  |\r\n| 06\\_9EH | A        | Intel® Xeon® Processor E Family based on microarchitecture code name Coffee Lake S \\(610\\)                     |\r\n| 06\\_9EH | A        | Intel® Xeon® Processor E Family based on microarchitecture code name Coffee Lake S \\(611\\)                     |\r\n| 06\\_9EH | A        | Intel® Xeon® Processor E Family based on microarchitecture code name Coffee Lake S \\(612\\)                     |\r\n| 06\\_9EH | A        | Intel® Xeon® Processor E Family based on microarchitecture code name Coffee Lake S \\(413\\)                     |\r\n| 06\\_9EH | A        | Intel® Xeon® Processor E Family based on microarchitecture code name Coffee Lake S \\(414\\)                     |\r\n| 06\\_9EH | A        | Intel® Xeon® Processor E Family based on microarchitecture code name Coffee Lake S \\(415\\)                     |\r\n| 06\\_9EH | D        | 9th Generation Intel® CoreTM Processor Family based on microarchitecture code name Coffee Lake H \\(816\\)       |\r\n| 06\\_9EH | D        | 9th Generation Intel® CoreTM Processor Family based on microarchitecture code name Coffee Lake S \\(817\\)       |\r\n| 06\\_8EH | C        | 10th Generation Intel® CoreTM Processor Family based on microarchitecture code name Comet Lake U42             |\r\n| 06\\_A6H | 0        | 10th Generation Intel® CoreTM Processor Family based on microarchitecture code name Comet Lake U62             |\r\n| 06\\_9EH | 9        | 8th Generation Intel® CoreTM Processor Family based on microarchitecture code name Kaby Lake G                 |\r\n| 06\\_9EH | 9        | 7th Generation Intel® CoreTM Processor Family based on microarchitecture code name Kaby Lake H                 |\r\n| 06\\_AEH | A        | 8th Generation Intel® CoreTM Processor Family based on microarchitecture code name Kaby Lake Refresh U \\(422\\) |\r\n| 06\\_9EH | 9        | 7th Generation Intel® CoreTM Processor Family based on microarchitecture code name Kaby Lake S                 |\r\n| 06\\_8EH | 9        | 7th Generation Intel® CoreTM Processor Family based on microarchitecture code name Kaby Lake U                 |\r\n| 06\\_8EH | 9        | 7th Generation Intel® CoreTM Processor Family based on microarchitecture code name Kaby Lake U23e              |\r\n| 06\\_9EH | 9        | Intel® CoreTM X\\-series Processors based on microarchitecture code name Kaby Lake X                            |\r\n| 06\\_9EH | 9        | Intel® Xeon® Processor E3 v6 Family Kaby Lake Xeon E3                                                          |\r\n| 06\\_8EH | 9        | 7th Generation Intel® CoreTM Processor Family based on microarchitecture code name Kaby Lake Y                 |\r\n| 06\\_55H | 4        | Intel® Xeon® Processor D Family based on microarchitecture code name Skylake D Bakerville                      |\r\n| 06\\_5E  | 3        | 6th Generation Intel® CoreTM Processor Family based on microarchitecture code name Skylake H                   |\r\n| 06\\_5E  | 3        | 6th Generation Intel® CoreTM Processor Family based on microarchitecture code name Skylake S                   |\r\n| 06\\_55H | 4        | Intel® Xeon® Scalable Processors based on microarchitecture code name Skylake Server                           |\r\n| 06\\_4E  | 3        | 6th Generation Intel® CoreTM Processors based on microarchitecture code name Skylake U                         |\r\n| 06\\_4E  | 3        | 6th Generation Intel® CoreTM Processor Family based on microarchitecture code name Skylake U23e                |\r\n| 06\\_55H | 4        | Intel® Xeon® Processor W Family based on microarchitecture code name Skylake W                                 |\r\n| 06\\_55H | 4        | Intel® CoreTM X\\-series Processors based on microarchitecture code name Skylake X                              |\r\n| 06\\_55H | 4        | Intel® Xeon® Processor E3 v5 Family based on microarchitecture code name Skylake Xeon E3                       |\r\n| 06\\_4E  | 3        | 6th Generation Intel® CoreTM Processors based on microarchitecture code name Skylake Y                         |\r\n| 06\\_8EH | B        | 8th Generation Intel® CoreTM Processors based on microarchitecture code name Whiskey Lake U                    |\r\n| 06\\_8EH | C        | 8th Generation Intel® CoreTM Processors based on microarchitecture code name Whiskey Lake U                    |\r\n\r\n## Proposed fix to the JIT\r\n\r\nI personally hold the position that this isn't a small issue (even if we take intel's claim of 0%-4% as-is) and that it is not going away: neither in terms of performance impact nor when considering the breadth of the product line affected by this issue.\r\nI think that it would be the desired behavior, from the standpoint of the JIT, to detect if this microcode update is applied or if the CPU model is from the affected family and generate code that would not trigger the degradation.\r\n\r\nOn the face of it, while AMD processors are completely unaffected by this erratum, they also seem to not suffer adverse effects when running code that was generated by patched up assemblers:\r\n\r\nhttps://www.phoronix.com/scan.php?page=news_item&px=AMD-With-Intel-JCC-Assembler\r\n\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/27878","RelatedDescription":"Open issue \"Consider mitigating the JCC erratum in the JIT (Nov. 2019)\" (#27878)"},{"Id":"522824239","IsPullRequest":false,"CreatedAt":"2019-11-14T12:24:12","Actor":"damageboy","Number":"27877","RawContent":null,"Title":"Consider re-compling CoreCLR's unmanaged code to mitigate JCC erratum (Nov. 2019)","State":"open","Body":"Intel has recently released a microcode update that adversely affects the performance of... all jumps (!):\r\n\r\nhttps://www.intel.com/content/dam/support/us/en/documents/processors/mitigations-jump-conditional-code-erratum.pdf\r\n\r\nI've personally had the \"pleasure\" of encountering this whilst benchmarking CoreCLR 3.0 `Array.Sort()` on clearlinux which seems to have pushed this microcode update earlier than others:\r\n\r\nhttps://twitter.com/damageboy/status/1194751035136450560?s=20\r\n\r\nFor context, Here's the before/after perf hit on `Array.Sort()`:\r\nBefore:\r\n![image](https://user-images.githubusercontent.com/125730/68856066-46e7d800-06e8-11ea-9092-1627bfb910aa.png)\r\n\r\nAfter:\r\n![image](https://user-images.githubusercontent.com/125730/68856091-55ce8a80-06e8-11ea-977a-f28f169d31c8.png)\r\n\r\nVery specifically, I was hit with a 20% drop in `Array.Sort()`, and a smaller (by sheer luck I presume?) hit with my own code. Intel claims that the average drop in performance should be in the %0-%4 range.\r\n\r\nThe erratum claims that the microcode update adversely effects:\r\n> In this context, Jump Instructions include all jump types: conditional jump (Jcc), macro-\r\nfused op-Jcc (where op is one of cmp, test, add, sub, and, inc, or dec), direct\r\nunconditional jump, indirect jump, direct/indirect call, and return.\r\n\r\nThe recommended fix, per the erratum, is to recompile the code with (Section 3.1.1):\r\n`-mbranches-within-32B-boundaries`\r\n\r\nIn theory, this could end with a relatively minor(?) CoreCLR runtime release. Or incorporated into the 3.1 release cycle?\r\n\r\nIn addition, I think we should have a discussion about possibly applying similar (conditional) fixes to the JIT itself w.r.t the generated code on Intel processors, as it doesn't seem this issue is about to simply go away on its own.\r\n\r\nI will open a separate issue for the JIT related discussion.","Url":"https://github.com/dotnet/coreclr/issues/27877","RelatedDescription":"Open issue \"Consider re-compling CoreCLR's unmanaged code to mitigate JCC erratum (Nov. 2019)\" (#27877)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"526289337","IsPullRequest":true,"CreatedAt":"2019-11-21T00:15:31","Actor":"dotnet-maestro[bot]","Number":"13102","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191120.3\r\n- **Date Produced**: 11/20/2019 11:20 PM\r\n- **Commit**: c16a31965d1ff8c4564d420610e2991265e77501\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13102","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13102)"},{"Id":"526289230","IsPullRequest":true,"CreatedAt":"2019-11-21T00:15:15","Actor":"dotnet-maestro[bot]","Number":"13101","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191120.5\r\n- **Date Produced**: 11/21/2019 2:01 AM\r\n- **Commit**: 422796f61ae3a55406bd8c02f2e283fe0b340694\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-rtm.19570.5\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13101","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13101)"},{"Id":"526250973","IsPullRequest":true,"CreatedAt":"2019-11-20T22:56:22","Actor":"dotnet-maestro[bot]","Number":"13099","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d4b89351-e138-4a22-94d9-08d690bc143a)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20191120.3\r\n- **Date Produced**: 11/20/2019 10:06 PM\r\n- **Commit**: 7a6c23bdddc0f12d7f0dee0a1b655375a08888c7\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.0.1-servicing.19570.3\r\n\r\n[marker]: <> (End:d4b89351-e138-4a22-94d9-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13099","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/templating\" (#13099)"},{"Id":"526254496","IsPullRequest":true,"CreatedAt":"2019-11-20T22:35:16","Actor":"dotnet-maestro[bot]","Number":"13100","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191120.2\r\n- **Date Produced**: 11/20/2019 9:33 PM\r\n- **Commit**: 4a732f9df5fdcfd1cc30576aaab799c0ce07791c\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.101-servicing.19570.2\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13100","RelatedDescription":"Open PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#13100)"},{"Id":"526233170","IsPullRequest":true,"CreatedAt":"2019-11-20T22:20:30","Actor":"dotnet-maestro[bot]","Number":"13098","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20191120.2\r\n- **Date Produced**: 11/20/2019 9:18 PM\r\n- **Commit**: b275b18fd7014d67078e2477f693301ea04e6549\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.1.0-rtm.19570.2\r\n\r\n[marker]: <> (End:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13098","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/templating\" (#13098)"},{"Id":"526070734","IsPullRequest":true,"CreatedAt":"2019-11-20T21:53:50","Actor":"dsplaisted","Number":"13095","RawContent":null,"Title":"Update branding to 2.1.608","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13095","RelatedDescription":"Closed or merged PR \"Update branding to 2.1.608\" (#13095)"},{"Id":"526106318","IsPullRequest":true,"CreatedAt":"2019-11-20T21:16:15","Actor":"dotnet-maestro[bot]","Number":"13096","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9b125d25-276f-4859-b4e2-08d6910bdae0)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191119.2\r\n- **Date Produced**: 11/19/2019 6:14 PM\r\n- **Commit**: e34d933e18ba1cd393bbafcb6018e0f858d3e89e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19569.2\r\n\r\n[marker]: <> (End:9b125d25-276f-4859-b4e2-08d6910bdae0)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13096","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#13096)"},{"Id":"526035193","IsPullRequest":true,"CreatedAt":"2019-11-20T21:09:41","Actor":"dsplaisted","Number":"13094","RawContent":null,"Title":"Update branding to 2.1.511","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13094","RelatedDescription":"Closed or merged PR \"Update branding to 2.1.511\" (#13094)"},{"Id":"526204872","IsPullRequest":true,"CreatedAt":"2019-11-20T20:54:12","Actor":"dotnet-maestro[bot]","Number":"13097","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191119.2\r\n- **Date Produced**: 11/19/2019 6:14 PM\r\n- **Commit**: e34d933e18ba1cd393bbafcb6018e0f858d3e89e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19569.2\r\n\r\n[marker]: <> (End:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13097","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#13097)"},{"Id":"525947486","IsPullRequest":true,"CreatedAt":"2019-11-20T17:53:27","Actor":"mmitche","Number":"13093","RawContent":null,"Title":"[release/3.0.1xx] Update branding for 3.0.102","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13093","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update branding for 3.0.102\" (#13093)"},{"Id":"525334948","IsPullRequest":true,"CreatedAt":"2019-11-20T01:36:34","Actor":"wli3","Number":"13092","RawContent":null,"Title":"Merge 485c50a4a257 to release/2.1.6xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13092","RelatedDescription":"Closed or merged PR \"Merge 485c50a4a257 to release/2.1.6xx\" (#13092)"},{"Id":"525334146","IsPullRequest":true,"CreatedAt":"2019-11-20T01:36:29","Actor":"wli3","Number":"13091","RawContent":null,"Title":"Merge 535180a8c to release/2.1.5xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13091","RelatedDescription":"Closed or merged PR \"Merge 535180a8c to release/2.1.5xx\" (#13091)"},{"Id":"525333251","IsPullRequest":true,"CreatedAt":"2019-11-20T00:35:20","Actor":"wli3","Number":"13090","RawContent":null,"Title":"Merge 37a6c12733d87 to release/2.2.2xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13090","RelatedDescription":"Closed or merged PR \"Merge 37a6c12733d87 to release/2.2.2xx\" (#13090)"},{"Id":"525314072","IsPullRequest":true,"CreatedAt":"2019-11-19T23:57:11","Actor":"wli3","Number":"13089","RawContent":null,"Title":"Merge 4797dab into release/2.2.1xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13089","RelatedDescription":"Closed or merged PR \"Merge 4797dab into release/2.2.1xx\" (#13089)"},{"Id":"525173317","IsPullRequest":true,"CreatedAt":"2019-11-19T18:35:30","Actor":"dotnet-maestro[bot]","Number":"13088","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191119.3\r\n- **Date Produced**: 11/19/2019 5:22 PM\r\n- **Commit**: 7891c8318f1026deb1c96054eebead058bb4f50f\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.2-servicing.19569.3\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13088","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#13088)"},{"Id":"525165846","IsPullRequest":true,"CreatedAt":"2019-11-19T18:34:05","Actor":"dotnet-maestro-bot","Number":"13085","RawContent":null,"Title":"Update aspnet, aspnet, coresetup to servicing-31150, servicing-31150, preview1-26216-03, respectively (release/2.1.8xx)","State":"closed","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13085","RelatedDescription":"Closed or merged PR \"Update aspnet, aspnet, coresetup to servicing-31150, servicing-31150, preview1-26216-03, respectively (release/2.1.8xx)\" (#13085)"},{"Id":"525166027","IsPullRequest":true,"CreatedAt":"2019-11-19T17:50:35","Actor":"dotnet-maestro-bot","Number":"13087","RawContent":null,"Title":"Update aspnet, aspnet, coresetup to servicing-31150, servicing-31150, preview1-26216-03, respectively (release/2.1.6xx)","State":"open","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13087","RelatedDescription":"Open PR \"Update aspnet, aspnet, coresetup to servicing-31150, servicing-31150, preview1-26216-03, respectively (release/2.1.6xx)\" (#13087)"},{"Id":"525165930","IsPullRequest":true,"CreatedAt":"2019-11-19T17:50:24","Actor":"dotnet-maestro-bot","Number":"13086","RawContent":null,"Title":"Update aspnet, aspnet, coresetup to servicing-31150, servicing-31150, preview1-26216-03, respectively (release/2.1.5xx)","State":"open","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/13086","RelatedDescription":"Open PR \"Update aspnet, aspnet, coresetup to servicing-31150, servicing-31150, preview1-26216-03, respectively (release/2.1.5xx)\" (#13086)"},{"Id":"524997107","IsPullRequest":true,"CreatedAt":"2019-11-19T13:05:16","Actor":"dotnet-maestro[bot]","Number":"13084","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191119.2\r\n- **Date Produced**: 11/19/2019 12:42 PM\r\n- **Commit**: 374ab42ff453fb16f4b41656212bfbfb507d57b5\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-rtm.19569.2\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13084","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13084)"},{"Id":"524824636","IsPullRequest":true,"CreatedAt":"2019-11-19T07:55:32","Actor":"dotnet-maestro[bot]","Number":"13083","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191118.2\r\n- **Date Produced**: 11/19/2019 6:36 AM\r\n- **Commit**: 93ee64d467eeccd7006e370e78cf6dae31c1f3e2\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13083","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13083)"},{"Id":"524789900","IsPullRequest":true,"CreatedAt":"2019-11-19T06:20:31","Actor":"dotnet-maestro[bot]","Number":"13082","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191118.4\r\n- **Date Produced**: 11/19/2019 4:56 AM\r\n- **Commit**: 49bbede419cf63e15c70f4b463f80e4811fe3f34\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-rtm.19568.4\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13082","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13082)"},{"Id":"524739874","IsPullRequest":true,"CreatedAt":"2019-11-19T03:25:33","Actor":"dotnet-maestro[bot]","Number":"13081","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191118.1\r\n- **Date Produced**: 11/19/2019 1:53 AM\r\n- **Commit**: 2b973fe4eaca6e181cf34e946a8878da3feaf07b\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13081","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13081)"},{"Id":"524696551","IsPullRequest":false,"CreatedAt":"2019-11-19T00:18:05","Actor":"cuichenli","Number":"13080","RawContent":null,"Title":"Can I remove the run time folder generated via the publish command","State":"closed","Body":"## PLEASE DO NOT FILE ISSUES IN THIS REPO\r\n\r\nFile them in https://github.com/dotnet/sdk instead.","Url":"https://github.com/dotnet/cli/issues/13080","RelatedDescription":"Closed issue \"Can I remove the run time folder generated via the publish command\" (#13080)"},{"Id":"523851339","IsPullRequest":true,"CreatedAt":"2019-11-16T15:10:50","Actor":"dotnet-maestro[bot]","Number":"13079","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191116.1\r\n- **Date Produced**: 11/16/2019 12:47 PM\r\n- **Commit**: 2b7e994b8a304700a09617ffc5052f0d943bbcba\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-rtm.19566.1\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13079","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13079)"},{"Id":"523794287","IsPullRequest":true,"CreatedAt":"2019-11-16T06:12:55","Actor":"dotnet-maestro[bot]","Number":"13078","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191115.4\r\n- **Date Produced**: 11/16/2019 4:23 AM\r\n- **Commit**: fc412c7e032c25a17da0e8ca4556b34897313d7c\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-rtm.19565.4\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13078","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13078)"},{"Id":"523792809","IsPullRequest":true,"CreatedAt":"2019-11-16T06:12:39","Actor":"dotnet-maestro[bot]","Number":"13077","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20191115.2\r\n- **Date Produced**: 11/16/2019 4:42 AM\r\n- **Commit**: 53a17fce7ce81aa68ddaa7b04f371dc6391d3497\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.1.0-rtm.19565.2\r\n\r\n[marker]: <> (End:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13077","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/templating\" (#13077)"},{"Id":"523676050","IsPullRequest":true,"CreatedAt":"2019-11-16T03:57:08","Actor":"dotnet-maestro[bot]","Number":"13076","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191115.2\r\n- **Date Produced**: 11/15/2019 5:59 PM\r\n- **Commit**: 65f04fb6db7a5e198d05dbebd5c4ad21eb018f89\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13076","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13076)"},{"Id":"523658822","IsPullRequest":true,"CreatedAt":"2019-11-15T20:50:56","Actor":"dotnet-maestro[bot]","Number":"13075","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191115.5\r\n- **Date Produced**: 11/15/2019 6:01 PM\r\n- **Commit**: 1f9b6e2183cf20722fc52d17f35a40f30b218e5b\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-rtm.19565.5\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13075","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13075)"},{"Id":"523578783","IsPullRequest":true,"CreatedAt":"2019-11-15T17:25:33","Actor":"dotnet-maestro[bot]","Number":"13074","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191115.2\r\n- **Date Produced**: 11/15/2019 3:48 PM\r\n- **Commit**: 0a6b1524e0db362735f056a4048b4d67005cc686\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-rtm.19565.2\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13074","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13074)"},{"Id":"523426357","IsPullRequest":true,"CreatedAt":"2019-11-15T12:45:41","Actor":"dotnet-maestro[bot]","Number":"13073","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191114.4\r\n- **Date Produced**: 11/15/2019 10:12 AM\r\n- **Commit**: bc2d90a1c6b23e4e64fc117baa531e14b9288b5a\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0\r\n  - **Microsoft.NET.HostModel** -> 3.1.0\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13073","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13073)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"526119676","IsPullRequest":true,"CreatedAt":"2019-11-20T20:02:50","Actor":"dotnet-maestro[bot]","Number":"1656","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191119.2\r\n- **Date Produced**: 11/19/2019 6:14 PM\r\n- **Commit**: e34d933e18ba1cd393bbafcb6018e0f858d3e89e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19569.2\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1656","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1656)"},{"Id":"523456559","IsPullRequest":false,"CreatedAt":"2019-11-19T23:58:30","Actor":"SetTrend","Number":"1655","RawContent":null,"Title":"Change .NET Framework in version table from 4.6.1 to 4.7.1","State":"closed","Body":"Currently, the [.NET Standard version table](/dotnet/standard/blob/master/docs/versions.md) shows `.NET Framework 4.6.1` to be compatible with `.NET Standard >= 1.5`.\r\n\r\nHowever, a footnote clarifies that `.NET Framework 4.6.1` is **_not_** fully compatible with `.NET Standard >= 1.5`.\r\n\r\nMoreover, many issues on [StackOverflow.com](https://stackoverflow.com/questions/49925484/you-must-add-a-reference-to-assembly-netstandard-version-2-0-0-0) and [GitHub](542) give evidence that `.NET Framework 4.6.1` is **_not_** fully compatible with `.NET Standard >= 1.5`.\r\n\r\nWouldn't it be wise then to update above version table to provide **_true_** information than just spout some wannabe information?","Url":"https://github.com/dotnet/standard/issues/1655","RelatedDescription":"Closed issue \"Change .NET Framework in version table from 4.6.1 to 4.7.1\" (#1655)"},{"Id":"523175041","IsPullRequest":false,"CreatedAt":"2019-11-15T00:02:51","Actor":"replaysMike","Number":"1654","RawContent":null,"Title":"HttpClient error 'Could not create SSL/TLS secure channel' when not Administrator","State":"open","Body":"I'm trying to use certificate based authentication using HttpClient in .Net Standard 2.0. However, I've noticed TLS negotiation doesn't succeed unless running the application in Administrator mode.\r\n\r\n```\r\nvar requestMessage = new HttpRequestMessage() {\r\n    RequestUri = new Uri(new Uri(_configuration.Endpoint), \"someendpoint\"),\r\n    Method = HttpMethod.Get\r\n};\r\nvar handler = new HttpClientHandler {\r\n    ClientCertificateOptions = ClientCertificateOption.Manual,\r\n    SslProtocols = SslProtocols.Tls12,\r\n};          \r\nhandler.ClientCertificates.Add(certificate);\r\nhandler.CheckCertificateRevocationList = false;\r\n// this is required to get around untrusted self-signed certs\r\nhandler.ServerCertificateCustomValidationCallback = (httpRequestMessage, cert, cetChain, policyErrors) => true;\r\nvar client = new HttpClient(handler);\r\nrequestMessage.Headers.Add(\"X-ARR-ClientCert\", certificate.GetRawCertDataString());\r\nvar response = await client.SendAsync(requestMessage);\r\n```\r\nThe client certificate is valid and installed in the local computer `My` store.\r\n\r\nWithout Administrator privileges a generic error is thrown: `The request was aborted: Could not create SSL/TLS secure channel` when not Administrator.\r\n\r\nAnyone have a clue as to why?","Url":"https://github.com/dotnet/standard/issues/1654","RelatedDescription":"Open issue \"HttpClient error 'Could not create SSL/TLS secure channel' when not Administrator\" (#1654)"},{"Id":"522886300","IsPullRequest":false,"CreatedAt":"2019-11-14T14:14:42","Actor":"tndata","Number":"1653","RawContent":null,"Title":"Broken link","State":"open","Body":"\r\nI found a broken link in this sentence:\r\n\r\nThe plan for handling .NET Framework 4.6.1 and .NET Standard 2.0 is outlined in the **spec**.\r\n\r\nOn this page \r\nhttps://github.com/dotnet/standard/blob/master/docs/faq.md\r\n","Url":"https://github.com/dotnet/standard/issues/1653","RelatedDescription":"Open issue \"Broken link\" (#1653)"},{"Id":"522854157","IsPullRequest":true,"CreatedAt":"2019-11-14T13:46:23","Actor":"dotnet-maestro[bot]","Number":"1652","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191113.6\r\n- **Date Produced**: 11/14/2019 7:13 AM\r\n- **Commit**: 5cee7c97d602f294e27c582d4dab81ec388f1d7b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19563.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19563.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19563.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1652","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1652)"},{"Id":"522220691","IsPullRequest":true,"CreatedAt":"2019-11-13T13:59:11","Actor":"dotnet-maestro[bot]","Number":"1651","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191112.8\r\n- **Date Produced**: 11/13/2019 9:07 AM\r\n- **Commit**: a528006b4536e5b73227285b57d2a56116532506\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19562.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19562.8\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19562.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1651","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1651)"},{"Id":"522208590","IsPullRequest":true,"CreatedAt":"2019-11-13T13:01:39","Actor":"dotnet-maestro[bot]","Number":"1650","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191119.6\r\n- **Date Produced**: 11/19/2019 10:31 PM\r\n- **Commit**: c29c916a0d1736522cfd944fcc06ead33b5e27db\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19569.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19569.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19569.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19569.6\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19569.6\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19569.6\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1650","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#1650)"},{"Id":"521547575","IsPullRequest":true,"CreatedAt":"2019-11-12T14:07:43","Actor":"dotnet-maestro[bot]","Number":"1649","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191112.1\r\n- **Date Produced**: 11/12/2019 10:06 AM\r\n- **Commit**: 21278249c6b417469737b20445a0dd045cd1b16e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19562.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19562.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19562.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1649","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1649)"},{"Id":"520598776","IsPullRequest":true,"CreatedAt":"2019-11-10T13:31:00","Actor":"dotnet-maestro[bot]","Number":"1648","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191109.6\r\n- **Date Produced**: 11/10/2019 6:07 AM\r\n- **Commit**: bc115700c3ece60acd6b8dbe4b0bdb8f6f80c756\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19559.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19559.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19559.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1648","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1648)"},{"Id":"520424908","IsPullRequest":true,"CreatedAt":"2019-11-09T14:01:26","Actor":"dotnet-maestro[bot]","Number":"1647","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191109.1\r\n- **Date Produced**: 11/9/2019 9:20 AM\r\n- **Commit**: f546aa9e76c776f2c27e30dfb91c50d8f62da2f8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19559.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19559.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19559.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1647","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1647)"},{"Id":"520010128","IsPullRequest":true,"CreatedAt":"2019-11-08T13:28:42","Actor":"dotnet-maestro[bot]","Number":"1646","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191107.22\r\n- **Date Produced**: 11/8/2019 8:30 AM\r\n- **Commit**: 7a318879f787e9feee9266fe9e876ee2411b548f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19557.22\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19557.22\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19557.22\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1646","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1646)"},{"Id":"519262813","IsPullRequest":true,"CreatedAt":"2019-11-07T13:26:42","Actor":"dotnet-maestro[bot]","Number":"1645","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191106.12\r\n- **Date Produced**: 11/7/2019 8:14 AM\r\n- **Commit**: a4f04476ea74c61a52168cf0b31c0281822ecad3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19556.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19556.12\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19556.12\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1645","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1645)"},{"Id":"518467413","IsPullRequest":true,"CreatedAt":"2019-11-06T13:31:10","Actor":"dotnet-maestro[bot]","Number":"1644","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191105.8\r\n- **Date Produced**: 11/6/2019 9:54 AM\r\n- **Commit**: 9e94e2552ad869005f30f6a59eb638c544d3efdd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19555.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19555.8\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19555.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1644","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1644)"},{"Id":"518175351","IsPullRequest":false,"CreatedAt":"2019-11-06T01:11:51","Actor":"tchitnis","Number":"1643","RawContent":null,"Title":"Debug.Assert causing entire test run to be aborted","State":"open","Body":"Similar to the issues reported here:\r\n\r\nhttps://github.com/Microsoft/vstest/issues/1022\r\nhttps://github.com/dotnet/coreclr/issues/22569\r\n\r\nI still see the same error/issue on .net standard 2.0 with MSTest. Sounds like it was fixed with .Net Core 3.0, can someone comment on whether a similar fix was applied to .Net Standard as well?","Url":"https://github.com/dotnet/standard/issues/1643","RelatedDescription":"Open issue \"Debug.Assert causing entire test run to be aborted\" (#1643)"},{"Id":"517769508","IsPullRequest":true,"CreatedAt":"2019-11-05T13:42:32","Actor":"dotnet-maestro[bot]","Number":"1642","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191104.10\r\n- **Date Produced**: 11/5/2019 7:44 AM\r\n- **Commit**: ee038925bde85c1c45c52f235ab09ea03b9c126c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19554.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19554.10\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19554.10\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1642","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1642)"},{"Id":"517192004","IsPullRequest":false,"CreatedAt":"2019-11-04T14:33:56","Actor":"peni4142","Number":"1641","RawContent":null,"Title":"Regex Bug","State":"open","Body":"Hi guys,\r\nI have a test for you\r\n\r\n[x] Bug Report\r\n\r\nThe following regex test will return an empty string in the group[0], which in my opinion can't be true.\r\n\r\n\r\n```C#\r\n        [TestMethod()]\r\n        public void BugTest()\r\n        {\r\n            Match matchEnsureObject = new Regex(\"^\\\\[MERGE-CMD: ENSURE OBJECT\\\\(([^)]+)\\\\)\\\\]$\").Match(\"[MERGE-CMD: ENSURE OBJECT(aLong) AT 1]\");\r\n            if(matchEnsureObject.Groups[0].Value == \"\")\r\n            {\r\n                throw new Exception(\"Match can't be an empty value\");\r\n            }\r\n        }\r\n```\r\n","Url":"https://github.com/dotnet/standard/issues/1641","RelatedDescription":"Open issue \"Regex Bug\" (#1641)"},{"Id":"517142571","IsPullRequest":true,"CreatedAt":"2019-11-04T13:21:47","Actor":"dotnet-maestro[bot]","Number":"1640","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191103.8\r\n- **Date Produced**: 11/4/2019 8:18 AM\r\n- **Commit**: 15e7e1569a8c3a5502c476c31b60e06d633b3efa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19553.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19553.8\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19553.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1640","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1640)"},{"Id":"516826733","IsPullRequest":true,"CreatedAt":"2019-11-03T13:44:18","Actor":"dotnet-maestro[bot]","Number":"1639","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191102.6\r\n- **Date Produced**: 11/3/2019 4:48 AM\r\n- **Commit**: bfaed4d48a921a339f9691c74425bec9d2f760a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19552.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19552.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19552.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1639","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1639)"},{"Id":"516615712","IsPullRequest":false,"CreatedAt":"2019-11-02T14:52:31","Actor":"bernd5","Number":"1638","RawContent":null,"Title":"_dummy and _dummyPrimitive in System.Span","State":"closed","Body":"Why is it required that all net standard compliant implementations need a private field _dummy and _dummyPrimitive to provide a standard Span<T>?\r\n\r\nShould it be really part of the standard? Isn't it just an implementation detail?","Url":"https://github.com/dotnet/standard/issues/1638","RelatedDescription":"Closed issue \"_dummy and _dummyPrimitive in System.Span\" (#1638)"},{"Id":"516573954","IsPullRequest":true,"CreatedAt":"2019-11-02T12:25:00","Actor":"dotnet-maestro[bot]","Number":"1637","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191101.24\r\n- **Date Produced**: 11/2/2019 4:59 AM\r\n- **Commit**: eb41b7841f1d8edc499a8c0fbaec5e4d53187fa0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19551.24\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19551.24\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19551.24\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1637","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1637)"},{"Id":"516079198","IsPullRequest":true,"CreatedAt":"2019-11-01T12:30:54","Actor":"dotnet-maestro[bot]","Number":"1636","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191031.13\r\n- **Date Produced**: 11/1/2019 5:06 AM\r\n- **Commit**: a24db0ba5666f46f50649810fe698ad267b60331\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19531.13\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19531.13\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19531.13\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1636","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1636)"},{"Id":"515387745","IsPullRequest":true,"CreatedAt":"2019-10-31T12:31:11","Actor":"dotnet-maestro[bot]","Number":"1635","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191031.1\r\n- **Date Produced**: 10/31/2019 9:35 AM\r\n- **Commit**: 18e82cabc1d2cddad8ff07ae96edb7296d9fad9d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19531.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19531.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19531.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1635","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1635)"},{"Id":"514625134","IsPullRequest":true,"CreatedAt":"2019-10-30T12:31:21","Actor":"dotnet-maestro[bot]","Number":"1634","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191029.15\r\n- **Date Produced**: 10/30/2019 3:37 AM\r\n- **Commit**: 8ee61dd103ff55445f8baf3137bb768ed86370d9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19529.15\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19529.15\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19529.15\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1634","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1634)"},{"Id":"513879230","IsPullRequest":true,"CreatedAt":"2019-10-29T12:32:35","Actor":"dotnet-maestro[bot]","Number":"1633","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191028.12\r\n- **Date Produced**: 10/29/2019 2:19 AM\r\n- **Commit**: 15e1ea023d2818b6083a61c7447a720ff3779482\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19528.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19528.12\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19528.12\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1633","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1633)"},{"Id":"513668220","IsPullRequest":false,"CreatedAt":"2019-10-29T03:17:07","Actor":"2300070","Number":"1632","RawContent":null,"Title":"A bug while the 'TypeBuilder' class processing the value type generic argument for generic definition.","State":"open","Body":"I define a class to inherit existen generic type definition, however, the base type has one generic argument, the type I processing has two generic argument, and I want the second generic as the generic argument of base type, so I write the code below, but the strange thing is: if the first generic argument is class type(though it is not used by any place), it works fine, but if I change it to a value type, an exception will thrown('Unable to read memory'), is there any problem while the 'TypeBuilder' class processing the generic arguments?\r\n\r\n\t[TestClass]\r\n\tpublic class GeneralTest\r\n\t{\r\n\t\t[TestMethod]\r\n\t\tpublic void TestDefineGenericType()\r\n\t\t{\r\n\t\t\tAssemblyBuilder assembly = AssemblyBuilder.DefineDynamicAssembly(new AssemblyName(\"GeneralTest\"), AssemblyBuilderAccess.RunAndCollect);\r\n\t\t\tModuleBuilder module = assembly.DefineDynamicModule(\"GeneralTest.dll\");\r\n\r\n\t\t\t//define type\r\n\t\t\tTypeBuilder builder = module.DefineType(\"TestGenericClass\");\r\n\t\t\tGenericTypeParameterBuilder[] arguments = builder.DefineGenericParameters(\"TValue1\", \"TValue2\");\r\n\t\t\t\r\n\t\t\tbuilder.SetParent(typeof(TestClass<>).MakeGenericType(arguments[1]));\r\n\r\n\t\t\t//define constructor that invoke base constructor\r\n\t\t\tConstructorBuilder constructor = builder.DefineConstructor(MethodAttributes.Public, CallingConventions.Standard, new Type[] {arguments[1] });\r\n\t\t\tILGenerator generator = constructor.GetILGenerator();\r\n\t\t\tgenerator.Emit(OpCodes.Ldarg_0);\r\n\t\t\tgenerator.Emit(OpCodes.Ldarg_1);\r\n\t\t\tgenerator.Emit(OpCodes.Call, typeof(TestClass<>).GetConstructors(BindingFlags.Public | BindingFlags.Instance)[0]);\r\n\t\t\tgenerator.Emit(OpCodes.Ret);\r\n\t\t\t\r\n\t\t\tType builtType = builder.CreateType();\r\n\t\t\tType testType;\r\n\t\t\tTestClass<string> test;\r\n\r\n\t\t\t//this test is okay.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(object), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\tAssert.AreEqual(string.Empty, test.Value);//OK\r\n\r\n\t\t\t//change the first generic argument to value type, exception will be thrown.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(int), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\t//Assert.AreEqual(string.Empty, test.Value);//ERROR WHILE READ THE FIELD OF 'test'\r\n\r\n\t\t\t\r\n\t\t\t//change the first generic argument to class type back, exception disapear.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(string), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\tAssert.AreEqual(string.Empty, test.Value);//OK\r\n\t\t}\r\n\r\n\t\tpublic class TestClass<TValue>\r\n\t\t{\r\n\t\t\tpublic readonly TValue Value;\r\n\r\n\t\t\tpublic Type ValueType => typeof(TValue);\r\n\r\n\t\t\tpublic TestClass(TValue value)\r\n\t\t\t{\r\n\t\t\t\tthis.Value = value;\r\n\t\t\t}\r\n\t\t}\r\n\t}","Url":"https://github.com/dotnet/standard/issues/1632","RelatedDescription":"Open issue \"A bug while the 'TypeBuilder' class processing the value type generic argument for generic definition.\" (#1632)"},{"Id":"513270667","IsPullRequest":true,"CreatedAt":"2019-10-28T12:31:05","Actor":"dotnet-maestro[bot]","Number":"1631","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191027.5\r\n- **Date Produced**: 10/28/2019 8:28 AM\r\n- **Commit**: 17c14aa2b50cfb5920d03ea8835c9a4932b5359c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19527.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19527.5\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19527.5\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1631","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1631)"},{"Id":"512958771","IsPullRequest":true,"CreatedAt":"2019-10-27T12:45:49","Actor":"dotnet-maestro[bot]","Number":"1630","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191026.6\r\n- **Date Produced**: 10/27/2019 2:42 AM\r\n- **Commit**: 0d0336cc9c3a04d7e23af38698b215a2955e965f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19526.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19526.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19526.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1630","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1630)"},{"Id":"512829066","IsPullRequest":true,"CreatedAt":"2019-10-26T12:30:59","Actor":"dotnet-maestro[bot]","Number":"1629","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191025.6\r\n- **Date Produced**: 10/26/2019 7:24 AM\r\n- **Commit**: 8245ee1e8f6063ccc7a3a60cafe821d29e85b02f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19525.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19525.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19525.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1629","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1629)"},{"Id":"512485574","IsPullRequest":true,"CreatedAt":"2019-10-25T12:31:13","Actor":"dotnet-maestro[bot]","Number":"1628","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191024.14\r\n- **Date Produced**: 10/25/2019 4:12 AM\r\n- **Commit**: 0954a975f972546314bd3ac4eb6e0a6380a85701\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19524.14\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19524.14\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19524.14\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1628","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1628)"},{"Id":"512430892","IsPullRequest":false,"CreatedAt":"2019-10-25T10:18:18","Actor":"lockeduan","Number":"1627","RawContent":null,"Title":"standard 2.1 DbParameter.DbType can never set to DbType.Time","State":"open","Body":"i'm trying to set parameter DbType to Time, but the result is that it wrongly set to DateTime instead\r\n\r\n```\r\ndbParameter.DbType = DbType.Time;\r\n```","Url":"https://github.com/dotnet/standard/issues/1627","RelatedDescription":"Open issue \"standard 2.1 DbParameter.DbType can never set to DbType.Time\" (#1627)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"525168946","IsPullRequest":true,"CreatedAt":"2019-11-21T03:09:40","Actor":"dotnet-maestro-bot","Number":"42640","RawContent":null,"Title":"Update CoreFx to servicing-28208-01 (release/uwp6.2)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/42640","RelatedDescription":"Closed or merged PR \"Update CoreFx to servicing-28208-01 (release/uwp6.2)\" (#42640)"},{"Id":"526306329","IsPullRequest":false,"CreatedAt":"2019-11-21T01:16:15","Actor":"GrabYourPitchforks","Number":"42660","RawContent":null,"Title":"API Proposal: string.Remove(Range)","State":"open","Body":"Pretty straightforward scenario. I have a string of the form `\"<value1, value2>\"`, and I want to strip the `\", value2\"` from it, ending up with the final result `\"<value1>\"`.\r\n\r\nCurrently the way to do this is to write the code:\r\n\r\n```cs\r\nstring stripped = input.Remove(input.Length - \", value2>\".Length, \", value2\".Length);\r\n```\r\n\r\nIf there were a range-based API, it could be written more cleanly:\r\n\r\n```cs\r\nstring stripped = input.Remove(^\", value2>\".Length..^1);\r\n```","Url":"https://github.com/dotnet/corefx/issues/42660","RelatedDescription":"Open issue \"API Proposal: string.Remove(Range)\" (#42660)"},{"Id":"526272324","IsPullRequest":false,"CreatedAt":"2019-11-21T00:51:20","Actor":"bnayae","Number":"42659","RawContent":null,"Title":"ConfiguraAwait(false) usability","State":"closed","Body":"# ConfiguraAwait(false) usability\r\n\r\nUsing ConfiguraAwait(false) consider as best practice within a class library.\r\nThe problem with it is that it very verbose repetitive task.\r\nIt would be better experience if instead of repeating this task over and over again we could set a default for the assembly within the .csproj (or alternative via assembly level attribute).\r\nThis way the compiler can add it for it generated code under the assembly.\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/42659","RelatedDescription":"Closed issue \"ConfiguraAwait(false) usability\" (#42659)"},{"Id":"524781619","IsPullRequest":false,"CreatedAt":"2019-11-20T22:56:52","Actor":"bharathm03","Number":"42636","RawContent":null,"Title":"API Proposal: System.Text.Json: Handle default value in serialization","State":"closed","Body":"# Overview\r\nTo enable option to ignore properties from serialization when its current value is equal to default value. We can reuse the existing `DefaultValueAttribute` class for defining the default value for each property. \r\n\r\n# Why\r\nThis API is needed to reduce the payload size of JSON text transferred between services which will improve the app performance. \r\n\r\n# API Proposal\r\nAdd new API `IgnoreDefaultValue` in `System.Text.Json.Serialization.JsonSerializerOptions` class.\r\n\r\nExample usage\r\n```CSharp\r\npublic class Cookie\r\n{\r\n  [DefaultValue(false)]\r\n  public bool HasConsent  {get; set;}\r\n\r\n  public string Name {get; set;}\r\n}\r\n\r\npublic class Program\r\n{\r\n  static void Main()\r\n  {\r\n    var cookie = new Cookie { Name = \"Test\", HasConsent = false };\r\n\r\n    var options = new JsonSerializerOptions();\r\n    options.IgnoreDefaultValue = true;\r\n\r\n    string json = JsonSerializer.Serialize(cookie, options);\r\n    // Expected output:  {\"Name\":\"Test\"}\r\n  }\r\n}\r\n```\r\n\r\nEdit:\r\n- Added expected output in example","Url":"https://github.com/dotnet/corefx/issues/42636","RelatedDescription":"Closed issue \"API Proposal: System.Text.Json: Handle default value in serialization\" (#42636)"},{"Id":"526228814","IsPullRequest":true,"CreatedAt":"2019-11-20T21:35:23","Actor":"dotnet-maestro[bot]","Number":"42658","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/coreclr","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20191120.2\r\n- **Date Produced**: 11/20/2019 6:18 PM\r\n- **Commit**: 97c8353ed0868645484438e6a0aa375e90af7a72\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.2-servicing.19570.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.2-servicing.19570.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.2-servicing.19570.2\r\n\r\n[marker]: <> (End:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42658","RelatedDescription":"Open PR \"[release/3.0] Update dependencies from dotnet/coreclr\" (#42658)"},{"Id":"526223903","IsPullRequest":true,"CreatedAt":"2019-11-20T21:32:10","Actor":"dotnet-maestro-bot","Number":"42657","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/2.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/2.2. I'm a robot and am configured to help you automatically keep release/2.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @Anipik\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/2.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/2.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42657","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/2.2'\" (#42657)"},{"Id":"525168945","IsPullRequest":true,"CreatedAt":"2019-11-20T21:21:29","Actor":"dotnet-maestro-bot","Number":"42639","RawContent":null,"Title":"Update CoreClr, CoreFx, CoreSetup to servicing-28207-04, servicing-28208-01, stable, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/42639","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx, CoreSetup to servicing-28207-04, servicing-28208-01, stable, respectively (release/2.1)\" (#42639)"},{"Id":"526208796","IsPullRequest":true,"CreatedAt":"2019-11-20T20:57:41","Actor":"dotnet-maestro[bot]","Number":"42656","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191119.2\r\n- **Date Produced**: 11/19/2019 6:14 PM\r\n- **Commit**: e34d933e18ba1cd393bbafcb6018e0f858d3e89e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19569.2\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19569.2\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19569.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19569.2\r\n\r\n[marker]: <> (End:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42656","RelatedDescription":"Open PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#42656)"},{"Id":"526183841","IsPullRequest":false,"CreatedAt":"2019-11-20T20:35:27","Actor":"BockTim91","Number":"42655","RawContent":null,"Title":"ODBC Arithmetic overflow error Accessing AS400 DB2 (Update, Delete, Insert)","State":"open","Body":"We are trying to hit our AS400 running a DB2 instance. When we run a OdbcCommand.ExecuteNonQuery() for select, everything works no issue. However, when executing a simple update, or delete command, we encounter the below error. Our current workaround is to just squish all arithmetic errors out of our execute command, which is unacceptable.\r\n\r\n```\r\nArithmetic operation resulted in an overflow.\r\n   at System.Data.Odbc.OdbcDataReader.FirstResult()\r\n   at System.Data.Odbc.OdbcCommand.ExecuteReaderObject(CommandBehavior behavior, String method, Boolean needReader, Object[] methodArguments, SQL_API odbcApiMethod)\r\n   at System.Data.Odbc.OdbcCommand.ExecuteReaderObject(CommandBehavior behavior, String method, Boolean needReader)\r\n   at System.Data.Odbc.OdbcCommand.ExecuteNonQuery()\r\n```\r\n\r\nWe are using VS 2017 with netcore 2.2","Url":"https://github.com/dotnet/corefx/issues/42655","RelatedDescription":"Open issue \"ODBC Arithmetic overflow error Accessing AS400 DB2 (Update, Delete, Insert)\" (#42655)"},{"Id":"526107669","IsPullRequest":true,"CreatedAt":"2019-11-20T19:41:10","Actor":"dotnet-maestro[bot]","Number":"42654","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a5bda823-89f1-4ce6-0d43-08d6910cd73b)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191119.2\r\n- **Date Produced**: 11/19/2019 6:14 PM\r\n- **Commit**: e34d933e18ba1cd393bbafcb6018e0f858d3e89e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19569.2\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19569.2\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19569.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19569.2\r\n\r\n[marker]: <> (End:a5bda823-89f1-4ce6-0d43-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42654","RelatedDescription":"Open PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#42654)"},{"Id":"526024648","IsPullRequest":true,"CreatedAt":"2019-11-20T18:54:24","Actor":"Anipik","Number":"42653","RawContent":null,"Title":"Servicing a new version of System.Drawing.Common package","State":"open","Body":"merge after this https://github.com/dotnet/corefx/pull/42016","Url":"https://github.com/dotnet/corefx/pull/42653","RelatedDescription":"Open PR \"Servicing a new version of System.Drawing.Common package\" (#42653)"},{"Id":"525684766","IsPullRequest":false,"CreatedAt":"2019-11-20T17:30:05","Actor":"yb199478","Number":"42646","RawContent":null,"Title":"Program crashes when using API LastAccessTime","State":"closed","Body":"I am trying to write the following code(.net core 3.0):\r\n\r\n```csharp\r\nvar fileInfo = new FileInfo(\"/Users/yb/foo\");\r\nvar accessTime = fileInfo.LastAccessTime; // Reading is normal and will not crash\r\nfileInfo.LastAccessTime = DateTime.Now; // crash\r\n```\r\n\r\nThe program crashed in macos(The same code works fine on windows):\r\n\r\n```shell\r\ndyld: lazy symbol binding failed: Symbol not found: _utimensat\r\n  Referenced from: /usr/local/share/dotnet/shared/Microsoft.NETCore.App/3.0.0/System.Native.dylib\r\n  Expected in: /usr/lib/libSystem.B.dylib\r\n\r\ndyld: Symbol not found: _utimensat\r\n  Referenced from: /usr/local/share/dotnet/shared/Microsoft.NETCore.App/3.0.0/System.Native.dylib\r\n  Expected in: /usr/lib/libSystem.B.dylib\r\n```\r\n\r\nIt seems to work fine in `.net core 2.0`, `2.1`, but it is broken in `.net core 3.0` .\r\n\r\n- **dotnet --info**\r\n\r\n```shell\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.12\r\n OS Platform: Darwin\r\n RID:         osx.10.12-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [/usr/local/share/dotnet/sdk]\r\n  3.0.100 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n```shell\r\nProcess:               dotnet [55909]\r\nPath:                  /usr/local/share/dotnet/dotnet\r\nIdentifier:            dotnet\r\nVersion:               0\r\nCode Type:             X86-64 (Native)\r\nParent Process:        vsdbg [55908]\r\nResponsible:           dotnet [55909]\r\nUser ID:               501\r\n\r\nDate/Time:             2019-11-20 17:31:56.737 +0800\r\nOS Version:            Mac OS X 10.12.6 (16G1918)\r\nReport Version:        12\r\nAnonymous UUID:        DB740BFB-D60C-EC17-F913-FA2740E9055A\r\n\r\n\r\nTime Awake Since Boot: 3700000 seconds\r\n\r\nSystem Integrity Protection: enabled\r\n\r\nCrashed Thread:        0  Dispatch queue: com.apple.main-thread\r\n\r\nException Type:        EXC_CRASH (SIGABRT)\r\nException Codes:       0x0000000000000000, 0x0000000000000000\r\nException Note:        EXC_CORPSE_NOTIFY\r\n\r\nTermination Reason:    DYLD, [0x4] Symbol missing\r\n\r\nDyld Error Message:\r\n  Symbol not found: _utimensat\r\n  Referenced from: /usr/local/share/dotnet/shared/Microsoft.NETCore.App/3.0.0/System.Native.dylib\r\n  Expected in: /usr/lib/libSystem.B.dylib\r\n\r\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\r\n0   dyld                          \t0x000000010fbcf9ee __abort_with_payload + 10\r\n1   dyld                          \t0x000000010fbcf43b abort_with_payload_wrapper_internal + 90\r\n2   dyld                          \t0x000000010fbcf464 abort_with_payload + 9\r\n3   dyld                          \t0x000000010fbaa793 dyld::halt(char const*) + 361\r\n4   dyld                          \t0x000000010fbaa89e dyld::fastBindLazySymbol(ImageLoader**, unsigned long) + 139\r\n5   libdyld.dylib                 \t0x00007fffeb076282 dyld_stub_binder + 282\r\n6   ???                           \t0x000000010a040008 0 + 4463001608\r\n7   ???                           \t0x0000000117e18d4e 0 + 4695625038\r\n8   ???                           \t0x0000000117f56eb3 0 + 4696927923\r\n9   ???                           \t0x0000000117f6527d 0 + 4696986237\r\n10  ???                           \t0x0000000117e10bf2 0 + 4695591922\r\n11  libcoreclr.dylib              \t0x00000001093acc3b CallDescrWorkerInternal + 124\r\n12  libcoreclr.dylib              \t0x00000001091f9029 MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 1657\r\n13  libcoreclr.dylib              \t0x00000001090c0ef6 RunMain(MethodDesc*, short, int*, PtrArray**) + 726\r\n14  libcoreclr.dylib              \t0x00000001090c1268 Assembly::ExecuteMainMethod(PtrArray**, int) + 408\r\n15  libcoreclr.dylib              \t0x0000000109101678 CorHost2::ExecuteAssembly(unsigned int, char16_t const*, int, char16_t const**, unsigned int*) + 504\r\n16  libcoreclr.dylib              \t0x0000000109039052 coreclr_execute_assembly + 226\r\n17  libhostpolicy.dylib           \t0x0000000108fae5d7 0x108f9d000 + 71127\r\n18  libhostpolicy.dylib           \t0x0000000108faf438 0x108f9d000 + 74808\r\n19  libhostfxr.dylib              \t0x0000000108f6c353 0x108f44000 + 164691\r\n20  libhostfxr.dylib              \t0x0000000108f6b642 0x108f44000 + 161346\r\n21  libhostfxr.dylib              \t0x0000000108f677ac 0x108f44000 + 145324\r\n22  dotnet                        \t0x0000000108ef2edc 0x108ee8000 + 44764\r\n23  dotnet                        \t0x0000000108ef3075 0x108ee8000 + 45173\r\n24  libdyld.dylib                 \t0x00007fffeb07a235 start + 1\r\n\r\nThread 1:\r\n0   libsystem_kernel.dylib        \t0x00007fffeb1a134a mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fffeb1a0797 mach_msg + 55\r\n2   libcoreclr.dylib              \t0x0000000109035b18 MachMessage::Receive(unsigned int) + 72\r\n3   libcoreclr.dylib              \t0x0000000109034a5e SEHExceptionThread(void*) + 94\r\n4   libsystem_pthread.dylib       \t0x00007fffeb29393b _pthread_body + 180\r\n5   libsystem_pthread.dylib       \t0x00007fffeb293887 _pthread_start + 286\r\n6   libsystem_pthread.dylib       \t0x00007fffeb29308d thread_start + 13\r\n\r\nThread 2:\r\n0   libsystem_kernel.dylib        \t0x00007fffeb1a9d96 kevent + 10\r\n1   libcoreclr.dylib              \t0x0000000109029320 CorUnix::CPalSynchronizationManager::ReadBytesFromProcessPipe(int, unsigned char*, int) + 448\r\n2   libcoreclr.dylib              \t0x0000000109028993 CorUnix::CPalSynchronizationManager::WorkerThread(void*) + 131\r\n3   libcoreclr.dylib              \t0x0000000109032384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n4   libsystem_pthread.dylib       \t0x00007fffeb29393b _pthread_body + 180\r\n5   libsystem_pthread.dylib       \t0x00007fffeb293887 _pthread_start + 286\r\n6   libsystem_pthread.dylib       \t0x00007fffeb29308d thread_start + 13\r\n\r\nThread 3:\r\n0   libsystem_kernel.dylib        \t0x00007fffeb1aa246 read + 10\r\n1   libcoreclr.dylib              \t0x00000001090a99f4 TwoWayPipe::Read(void*, unsigned int) + 36\r\n2   libcoreclr.dylib              \t0x00000001090a1549 DbgTransportSession::TransportWorker() + 2457\r\n3   libcoreclr.dylib              \t0x000000010909f6b9 DbgTransportSession::TransportWorkerStatic(void*) + 9\r\n4   libcoreclr.dylib              \t0x0000000109032384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n5   libsystem_pthread.dylib       \t0x00007fffeb29393b _pthread_body + 180\r\n6   libsystem_pthread.dylib       \t0x00007fffeb293887 _pthread_start + 286\r\n7   libsystem_pthread.dylib       \t0x00007fffeb29308d thread_start + 13\r\n\r\nThread 4:\r\n0   libsystem_kernel.dylib        \t0x00007fffeb1a8bf2 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fffeb2947fa _pthread_cond_wait + 712\r\n2   libcoreclr.dylib              \t0x0000000109026dfb CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 347\r\n3   libcoreclr.dylib              \t0x0000000109026a90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010902b47c CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 2028\r\n5   libcoreclr.dylib              \t0x000000010902b762 WaitForMultipleObjectsEx + 82\r\n6   libcoreclr.dylib              \t0x000000010909d948 DebuggerRCThread::MainLoop() + 248\r\n7   libcoreclr.dylib              \t0x000000010909d7ec DebuggerRCThread::ThreadProc() + 284\r\n8   libcoreclr.dylib              \t0x000000010909d503 DebuggerRCThread::ThreadProcStatic(void*) + 131\r\n9   libcoreclr.dylib              \t0x0000000109032384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n10  libsystem_pthread.dylib       \t0x00007fffeb29393b _pthread_body + 180\r\n11  libsystem_pthread.dylib       \t0x00007fffeb293887 _pthread_start + 286\r\n12  libsystem_pthread.dylib       \t0x00007fffeb29308d thread_start + 13\r\n\r\nThread 5:\r\n0   libsystem_kernel.dylib        \t0x00007fffeb1a8bf2 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fffeb2947fa _pthread_cond_wait + 712\r\n2   libcoreclr.dylib              \t0x0000000109026dfb CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 347\r\n3   libcoreclr.dylib              \t0x0000000109026a90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010902b47c CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 2028\r\n5   libcoreclr.dylib              \t0x000000010902ac88 WaitForSingleObject + 72\r\n6   libcoreclr.dylib              \t0x000000010909ed9f HelperCanary::ThreadProc() + 31\r\n7   libcoreclr.dylib              \t0x000000010909ed48 HelperCanary::ThreadProc(void*) + 56\r\n8   libcoreclr.dylib              \t0x0000000109032384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n9   libsystem_pthread.dylib       \t0x00007fffeb29393b _pthread_body + 180\r\n10  libsystem_pthread.dylib       \t0x00007fffeb293887 _pthread_start + 286\r\n11  libsystem_pthread.dylib       \t0x00007fffeb29308d thread_start + 13\r\n\r\nThread 6:\r\n0   libsystem_kernel.dylib        \t0x00007fffeb1a8bf2 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fffeb2947fa _pthread_cond_wait + 712\r\n2   libcoreclr.dylib              \t0x0000000109026dde CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 318\r\n3   libcoreclr.dylib              \t0x0000000109026a90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010902b47c CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 2028\r\n5   libcoreclr.dylib              \t0x000000010902b69d WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x00000001092e55e9 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 201\r\n7   libcoreclr.dylib              \t0x000000010924bcbf FinalizerThread::WaitForFinalizerEvent(CLREvent*) + 31\r\n8   libcoreclr.dylib              \t0x000000010924be22 FinalizerThread::FinalizerThreadWorker(void*) + 98\r\n9   libcoreclr.dylib              \t0x00000001091b9fa3 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 323\r\n10  libcoreclr.dylib              \t0x00000001091ba5f0 ManagedThreadBase::FinalizerBase(void (*)(void*)) + 32\r\n11  libcoreclr.dylib              \t0x000000010924c0f8 FinalizerThread::FinalizerThreadStart(void*) + 504\r\n12  libcoreclr.dylib              \t0x0000000109032384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n13  libsystem_pthread.dylib       \t0x00007fffeb29393b _pthread_body + 180\r\n14  libsystem_pthread.dylib       \t0x00007fffeb293887 _pthread_start + 286\r\n15  libsystem_pthread.dylib       \t0x00007fffeb29308d thread_start + 13\r\n\r\nThread 7:\r\n0   libsystem_kernel.dylib        \t0x00007fffeb1a80c2 __accept + 10\r\n1   libcoreclr.dylib              \t0x00000001090a96de IpcStream::DiagnosticsIpc::Accept(void (*)(char const*, unsigned int)) const + 62\r\n2   libcoreclr.dylib              \t0x0000000109226d20 DiagnosticsServerThread(void*) + 288\r\n3   libcoreclr.dylib              \t0x0000000109032384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n4   libsystem_pthread.dylib       \t0x00007fffeb29393b _pthread_body + 180\r\n5   libsystem_pthread.dylib       \t0x00007fffeb293887 _pthread_start + 286\r\n6   libsystem_pthread.dylib       \t0x00007fffeb29308d thread_start + 13\r\n\r\nThread 8:\r\n0   libsystem_kernel.dylib        \t0x00007fffeb1a8bf2 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fffeb2947fa _pthread_cond_wait + 712\r\n2   libcoreclr.dylib              \t0x0000000109026dde CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 318\r\n3   libcoreclr.dylib              \t0x0000000109026a90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010902bb6d SleepEx + 141\r\n5   libcoreclr.dylib              \t0x00000001091e10b2 ThreadpoolMgr::TimerThreadFire() + 146\r\n6   libcoreclr.dylib              \t0x00000001091e0f85 ThreadpoolMgr::TimerThreadStart(void*) + 181\r\n7   libcoreclr.dylib              \t0x0000000109032384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n8   libsystem_pthread.dylib       \t0x00007fffeb29393b _pthread_body + 180\r\n9   libsystem_pthread.dylib       \t0x00007fffeb293887 _pthread_start + 286\r\n10  libsystem_pthread.dylib       \t0x00007fffeb29308d thread_start + 13\r\n\r\nThread 9:\r\n0   libsystem_kernel.dylib        \t0x00007fffeb1a8bf2 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fffeb2947fa _pthread_cond_wait + 712\r\n2   libcoreclr.dylib              \t0x0000000109026dde CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 318\r\n3   libcoreclr.dylib              \t0x0000000109026a90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010902b47c CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 2028\r\n5   libcoreclr.dylib              \t0x000000010902b648 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x00000001092e5a00 CLRLifoSemaphore::WaitForSignal(unsigned int) + 32\r\n7   libcoreclr.dylib              \t0x00000001091de47e ThreadpoolMgr::WorkerThreadStart(void*) + 974\r\n8   libcoreclr.dylib              \t0x0000000109032384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n9   libsystem_pthread.dylib       \t0x00007fffeb29393b _pthread_body + 180\r\n10  libsystem_pthread.dylib       \t0x00007fffeb293887 _pthread_start + 286\r\n11  libsystem_pthread.dylib       \t0x00007fffeb29308d thread_start + 13\r\n\r\nThread 10:\r\n0   libsystem_kernel.dylib        \t0x00007fffeb1a8bf2 __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fffeb2947fa _pthread_cond_wait + 712\r\n2   libcoreclr.dylib              \t0x0000000109026dde CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 318\r\n3   libcoreclr.dylib              \t0x0000000109026a90 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 464\r\n4   libcoreclr.dylib              \t0x000000010902bb6d SleepEx + 141\r\n5   libcoreclr.dylib              \t0x0000000109255a4f __SwitchToThread(unsigned int, unsigned int) + 15\r\n6   libcoreclr.dylib              \t0x00000001091e071a ThreadpoolMgr::GateThreadStart(void*) + 138\r\n7   libcoreclr.dylib              \t0x0000000109032384 CorUnix::CPalThread::ThreadEntry(void*) + 436\r\n8   libsystem_pthread.dylib       \t0x00007fffeb29393b _pthread_body + 180\r\n9   libsystem_pthread.dylib       \t0x00007fffeb293887 _pthread_start + 286\r\n10  libsystem_pthread.dylib       \t0x00007fffeb29308d thread_start + 13\r\n\r\nThread 0 crashed with X86 Thread State (64-bit):\r\n  rax: 0x0000000002000209  rbx: 0x0000000000000004  rcx: 0x00007fff56d15178  rdx: 0x00007fff56d155f0\r\n  rdi: 0x0000000000000006  rsi: 0x0000000000000004  rbp: 0x00007fff56d151d0  rsp: 0x00007fff56d15178\r\n   r8: 0x00007fff56d151f0   r9: 0x0000000000000000  r10: 0x0000000000000089  r11: 0x0000000000000246\r\n  r12: 0x0000000000000089  r13: 0x00007fff56d155f0  r14: 0x0000000000000006  r15: 0x0000000000000000\r\n  rip: 0x000000010fbcf9ee  rfl: 0x0000000000000246  cr2: 0x000000010fbdb1e0\r\n  \r\nLogical CPU:     0\r\nError Code:      0x02000209\r\nTrap Number:     133\r\n\r\n\r\nBinary Images:\r\n       0x108ee8000 -        0x108f06ff7 +dotnet (0) <7ED20566-D4D6-3B39-80A5-DC33533C7391> /usr/local/share/dotnet/dotnet\r\n       0x108f44000 -        0x108f94ff7 +libhostfxr.dylib (0) <ED0124F3-93E3-3919-8FD6-19FAF3C04DA9> /usr/local/share/dotnet/host/fxr/3.0.0/libhostfxr.dylib\r\n       0x108f9d000 -        0x108fe1fff +libhostpolicy.dylib (0) <C224E1A9-0B20-39C9-9A51-44D87F7E28E7> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/3.0.0/libhostpolicy.dylib\r\n       0x108feb000 -        0x109545ff7 +libcoreclr.dylib (0) <3F7FE6EC-67A6-3510-98BA-3B3F5353DFAA> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/3.0.0/libcoreclr.dylib\r\n       0x109710000 -        0x10971fffb  libSimplifiedChineseConverter.dylib (70) <9DF419B1-9049-3FB1-B6BB-85267B8E3B06> /System/Library/CoreServices/Encodings/libSimplifiedChineseConverter.dylib\r\n       0x109d7b000 -        0x109fa0fff +libclrjit.dylib (0) <0A3799C4-9EEE-3092-90D7-B9DD9933D9AC> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/3.0.0/libclrjit.dylib\r\n       0x10a036000 -        0x10a03fffb +System.Native.dylib (0) <14FD3ABB-E36C-3F75-BBFE-8218AE7B5AFE> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/3.0.0/System.Native.dylib\r\n       0x10a044000 -        0x10a04cfff +System.Globalization.Native.dylib (0) <93D03DD2-8CA3-3199-9238-9FDED9189F14> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/3.0.0/System.Globalization.Native.dylib\r\n       0x10fba6000 -        0x10fbe3dc7  dyld (434) <33DB4E37-BC29-37A4-92AB-30328E66A8FA> /usr/lib/dyld\r\n    0x7fffd2348000 -     0x7fffd2348fff  com.apple.Accelerate (1.11 - Accelerate 1.11) <916E360F-323C-3AE1-AB3D-D1F3B284AEE9> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate\r\n    0x7fffd2361000 -     0x7fffd287afeb  com.apple.vImage (8.1 - ???) <B58A7937-BEE2-38FE-87F4-5D5F40D31DC9> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage\r\n    0x7fffd287b000 -     0x7fffd29ecff3  libBLAS.dylib (1185.50.4) <4087FFE0-627E-3623-96B4-F0A9A1991E09> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib\r\n    0x7fffd29ed000 -     0x7fffd2a01ffb  libBNNS.dylib (15) <254698C7-7D36-3FFF-864E-ADEEEE543076> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib\r\n    0x7fffd2a02000 -     0x7fffd2df8fef  libLAPACK.dylib (1185.50.4) <C35FFB2F-A0E6-3903-8A3C-113A74BCBCA2> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib\r\n    0x7fffd2df9000 -     0x7fffd2e0ffff  libLinearAlgebra.dylib (1185.50.4) <345CAACF-7263-36EF-B69B-793EA8B390AF> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib\r\n    0x7fffd2e10000 -     0x7fffd2e16fff  libQuadrature.dylib (3) <EF56C8E6-DE22-3C69-B543-A8648F335FDD> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib\r\n    0x7fffd2e17000 -     0x7fffd2e2bff7  libSparseBLAS.dylib (1185.50.4) <67BA432E-FB59-3C78-A8BE-ED4274CBC359> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib\r\n    0x7fffd2e2c000 -     0x7fffd2fb3fe7  libvDSP.dylib (600.60.1) <4155F45B-41CD-3782-AE8F-7AE740FD83C3> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib\r\n    0x7fffd2fb4000 -     0x7fffd3066fff  libvMisc.dylib (600.60.1) <E18365D7-DCC4-3304-A8D1-395E656D7B99> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib\r\n    0x7fffd3067000 -     0x7fffd3067fff  com.apple.Accelerate.vecLib (3.11 - vecLib 3.11) <7C5733E7-0568-3E7D-AF61-160F19FED544> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib\r\n    0x7fffd4111000 -     0x7fffd4111fff  com.apple.ApplicationServices (48 - 48) <81488826-9260-339A-B5FF-916194241ED3> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices\r\n    0x7fffd4112000 -     0x7fffd4180ff7  com.apple.ApplicationServices.ATS (377 - 422.4) <78B556FF-28E6-3147-AE0D-8E0EC45EEE77> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS\r\n    0x7fffd421a000 -     0x7fffd4349fff  libFontParser.dylib (194.15) <FF329191-6339-363E-9D95-FFE9D55E7F60> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib\r\n    0x7fffd434a000 -     0x7fffd4394ff7  libFontRegistry.dylib (196.8) <5E5F95FD-F69B-3F1A-9592-C0AB8F5FF57C> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib\r\n    0x7fffd4492000 -     0x7fffd453cff7  com.apple.ColorSync (4.12.0 - 502.2) <ACA4001E-A0E3-33F6-9CD6-EEC2AA15E322> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSync.framework/Versions/A/ColorSync\r\n    0x7fffd453d000 -     0x7fffd458efff  com.apple.HIServices (1.22 - 593) <045870A9-1D92-3FEF-8722-671E99A35E71> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices\r\n    0x7fffd458f000 -     0x7fffd459eff3  com.apple.LangAnalysis (1.7.0 - 1.7.0) <2CBE7F61-2056-3F96-99A1-0D527796AFA6> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis\r\n    0x7fffd459f000 -     0x7fffd45ecfff  com.apple.print.framework.PrintCore (12 - 491) <5027FD58-F0EE-33E4-8577-934CA06CD2AF> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore\r\n    0x7fffd45ed000 -     0x7fffd4628fff  com.apple.QD (3.12 - 313) <B339C41D-8CDF-3342-8414-F9717DCCADD4> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD\r\n    0x7fffd4629000 -     0x7fffd4634fff  com.apple.speech.synthesis.framework (6.6.2 - 6.6.2) <7853EFF4-62B9-394E-B7B8-41A645656820> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis\r\n    0x7fffd4635000 -     0x7fffd4841ff7  com.apple.audio.toolbox.AudioToolbox (1.14 - 1.14) <1F4026C6-23C1-39E8-823D-72298FECF75C> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox\r\n    0x7fffd49ab000 -     0x7fffd4d88fff  com.apple.CFNetwork (811.11 - 811.11) <5E5A7D4D-BCBA-3995-8C13-4D01DE1FAB33> /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork\r\n    0x7fffd53a4000 -     0x7fffd5431fff  com.apple.audio.CoreAudio (4.3.0 - 4.3.0) <78767F88-91D4-31CE-AAC6-1F9407F479BB> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio\r\n    0x7fffd5446000 -     0x7fffd5741fff  com.apple.CoreData (120 - 754.2) <4C9CAB2C-60D4-3694-A0A0-5B04B14BD14E> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData\r\n    0x7fffd57f0000 -     0x7fffd5c89ff7  com.apple.CoreFoundation (6.9 - 1349.93) <0EEBE5E5-66D3-3FA7-82EA-DA5883120DA5> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation\r\n    0x7fffd5c8a000 -     0x7fffd630cfff  com.apple.CoreGraphics (2.0 - 1070.22.1) <8A053296-AA99-371C-B9C5-FCBF87C6CEFE> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics\r\n    0x7fffd66b5000 -     0x7fffd66b5fff  com.apple.CoreServices (775.20 - 775.20) <23308972-E320-397D-A823-531AD558A4D2> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices\r\n    0x7fffd66b6000 -     0x7fffd6707fff  com.apple.AE (712.6 - 712.6) <9E9B4EC3-564D-3BA9-A9A4-1603E1F97F40> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE\r\n    0x7fffd6708000 -     0x7fffd69e3ff7  com.apple.CoreServices.CarbonCore (1159.7 - 1159.7) <1D815BCC-CB8D-36BA-98C0-9263D96F1C89> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore\r\n    0x7fffd69e4000 -     0x7fffd6a17fff  com.apple.DictionaryServices (1.2 - 274) <D23866E2-F7C8-3984-A9D4-96552CCDE573> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices\r\n    0x7fffd6a18000 -     0x7fffd6a20ff3  com.apple.CoreServices.FSEvents (1230.50.1 - 1230.50.1) <2AD1B0E5-7214-37C4-8D11-A27C9CAC0F74> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents\r\n    0x7fffd6a21000 -     0x7fffd6b8dffb  com.apple.LaunchServices (775.20 - 775.20) <160DFED0-820D-38C7-95F8-C8FD74885A7F> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices\r\n    0x7fffd6b8e000 -     0x7fffd6c3effb  com.apple.Metadata (10.7.0 - 1075.41) <A59E2A79-2EF9-3FF9-AA21-6F3EB64F8804> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata\r\n    0x7fffd6c3f000 -     0x7fffd6c9efff  com.apple.CoreServices.OSServices (775.20 - 775.20) <12C02A25-5AEA-3009-B1A3-CB0BEAF643B4> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices\r\n    0x7fffd6c9f000 -     0x7fffd6d0ffff  com.apple.SearchKit (1.4.0 - 1.4.0) <7A6DDA2B-03F1-3137-BA9E-1CC211973E26> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit\r\n    0x7fffd6d10000 -     0x7fffd6d55ff7  com.apple.coreservices.SharedFileList (38 - 38) <DA096678-93AB-3291-BDE2-482F1D544589> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList\r\n    0x7fffd6dde000 -     0x7fffd6f2bffb  com.apple.CoreText (352.0 - 544.18) <B883809B-561B-31C5-949E-D2564B6F808A> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText\r\n    0x7fffd70d1000 -     0x7fffd70d6fff  com.apple.DiskArbitration (2.7 - 2.7) <F47E07A4-D69D-312A-82C8-A1EE3C7C0EAC> /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration\r\n    0x7fffd7268000 -     0x7fffd760eff3  com.apple.Foundation (6.9 - 1349.92) <99B1320B-7E15-3E84-AB6E-574B57E81D64> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation\r\n    0x7fffd763a000 -     0x7fffd766bfff  com.apple.GSS (4.0 - 2.0) <B347C2FB-7718-3A30-BE9A-98819FCE64A9> /System/Library/Frameworks/GSS.framework/Versions/A/GSS\r\n    0x7fffd77cf000 -     0x7fffd7865fff  com.apple.framework.IOKit (2.0.2 - 1324.60.8) <46DA8966-AC27-3F51-BBB2-359A229BB0F7> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit\r\n    0x7fffd7866000 -     0x7fffd786cffb  com.apple.IOSurface (159.12 - 159.12) <E3D6FCED-F938-30A3-AD08-0998B674A492> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface\r\n    0x7fffd78bf000 -     0x7fffd7a1ffef  com.apple.ImageIO.framework (3.3.0 - 1599.13) <443879A7-48C6-37ED-AC0B-166EEEABA662> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO\r\n    0x7fffd7a20000 -     0x7fffd7a24fff  libGIF.dylib (1599.13) <11C5D9D7-B8A1-3D53-BA50-B25976FE6379> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib\r\n    0x7fffd7a25000 -     0x7fffd7b15ff7  libJP2.dylib (1599.13) <C495FB08-0CD2-36FC-8196-FAD3D598A010> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib\r\n    0x7fffd7b16000 -     0x7fffd7b39ffb  libJPEG.dylib (1599.13) <D22E2431-76A5-39B4-AF0B-174CF282A1CE> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib\r\n    0x7fffd7b3a000 -     0x7fffd7b61ff7  libPng.dylib (1599.13) <561865FA-A51B-3EFF-ABFF-B4566B90B1A2> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib\r\n    0x7fffd7b62000 -     0x7fffd7b64ff3  libRadiance.dylib (1599.13) <6559253B-8FE2-3884-BC93-95BB7705A6D1> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib\r\n    0x7fffd7b65000 -     0x7fffd7bb3ffb  libTIFF.dylib (1599.13) <8FC594B3-6BBF-3A70-9994-203E9B330B5F> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib\r\n    0x7fffd891c000 -     0x7fffd8935ff7  com.apple.Kerberos (3.0 - 1) <B9D242EB-E325-3A21-9812-C77CBBFB0D51> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos\r\n    0x7fffd9a59000 -     0x7fffd9a61fff  com.apple.NetFS (6.0 - 4.0) <14A24D00-5673-330A-959D-87F72040DEFF> /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS\r\n    0x7fffd9c90000 -     0x7fffd9ca9ffb  com.apple.CFOpenDirectory (10.12 - 194) <A64E9A01-3F6E-36EA-9C10-88C564A68C9D> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory\r\n    0x7fffd9caa000 -     0x7fffd9cb5ff7  com.apple.OpenDirectory (10.12 - 194) <4298FFD0-B1A7-3064-AF5B-708B3FA38671> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory\r\n    0x7fffdbb00000 -     0x7fffdbe02fff  com.apple.security (7.0 - 57740.60.29) <E345D708-D71A-3684-AE0E-0D3DA388A9D9> /System/Library/Frameworks/Security.framework/Versions/A/Security\r\n    0x7fffdbe03000 -     0x7fffdbe78fff  com.apple.securityfoundation (6.0 - 55132.50.7) <D97123B6-7868-37A8-BF22-C6771291C89C> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation\r\n    0x7fffdbea3000 -     0x7fffdbea6ff3  com.apple.xpc.ServiceManagement (1.0 - 1) <758465C0-BA68-3927-89EC-3CC595217E4A> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement\r\n    0x7fffdc22d000 -     0x7fffdc29cff7  com.apple.SystemConfiguration (1.14 - 1.14) <48FD951E-2A7E-3F50-9872-B6CE39B757DC> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration\r\n    0x7fffdec47000 -     0x7fffdecd297f  com.apple.AppleJPEG (1.0 - 1) <B9E9570D-04A4-34E4-B756-D200043B25B8> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG\r\n    0x7fffe075a000 -     0x7fffe0763ffb  com.apple.CommonAuth (4.0 - 2.0) <B2444F25-80A8-3C4B-8F22-75F5D8EC49CD> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth\r\n    0x7fffe0eac000 -     0x7fffe0ebcfff  com.apple.CoreEmoji (1.0 - 40.3.3) <E9A28301-2D79-3A97-A046-028258A6ABE5> /System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji\r\n    0x7fffe3f43000 -     0x7fffe3fb9ff3  com.apple.Heimdal (4.0 - 2.0) <8573DFFA-3365-3343-9E8D-500FCCCF8FCD> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal\r\n    0x7fffe46fb000 -     0x7fffe48b2fff  com.apple.LanguageModeling (1.0 - 123.2.5) <A8CA965F-0399-310D-91C3-B93DDDE9A442> /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling\r\n    0x7fffe53e8000 -     0x7fffe5410ff7  com.apple.MultitouchSupport.framework (368.16 - 368.16) <AEA94167-8559-3846-9F43-40E7CDFB2209> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport\r\n    0x7fffe54c2000 -     0x7fffe54cdfff  com.apple.NetAuth (6.2 - 6.2) <DE8FD1E4-99FC-3313-85AB-5D5A4E1DCF5E> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth\r\n    0x7fffe831f000 -     0x7fffe8325ff7  com.apple.TCC (1.0 - 1) <911B534B-4AC7-34E4-935E-E42ECD008CBC> /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC\r\n    0x7fffe972e000 -     0x7fffe9730ffb  com.apple.loginsupport (1.0 - 1) <F3140B97-12C3-35A7-9D3D-43DA2D13C113> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport\r\n    0x7fffe9785000 -     0x7fffe97a0ff7  libCRFSuite.dylib (34) <F78B7F5F-0B4F-35C6-AA2F-84EE9CB22137> /usr/lib/libCRFSuite.dylib\r\n    0x7fffe97a1000 -     0x7fffe97acfff  libChineseTokenizer.dylib (21) <0886E908-A825-36AF-B94B-2361FD8BC2A1> /usr/lib/libChineseTokenizer.dylib\r\n    0x7fffe983e000 -     0x7fffe983fff3  libDiagnosticMessagesClient.dylib (102) <84A04D24-0E60-3810-A8C0-90A65E2DF61A> /usr/lib/libDiagnosticMessagesClient.dylib\r\n    0x7fffe9a77000 -     0x7fffe9a77fff  libOpenScriptingUtil.dylib (172.1) <0F1BA407-97D1-36F6-882D-A355EAAD5E00> /usr/lib/libOpenScriptingUtil.dylib\r\n    0x7fffe9a7d000 -     0x7fffe9a7effb  libSystem.B.dylib (1238.60.2) <D7A31F53-3E89-3048-B18F-CDB8D02D6E1F> /usr/lib/libSystem.B.dylib\r\n    0x7fffe9aea000 -     0x7fffe9b15ff3  libarchive.2.dylib (41.70.2) <907D1FB1-9A65-33F5-AFC8-0B6E5AE9D83A> /usr/lib/libarchive.2.dylib\r\n    0x7fffe9b96000 -     0x7fffe9b96ff3  libauto.dylib (187) <34388D0B-C539-3C1B-9408-2BC152162E43> /usr/lib/libauto.dylib\r\n    0x7fffe9b97000 -     0x7fffe9ba7ff3  libbsm.0.dylib (34) <20084796-B04D-3B35-A003-EA11459557A9> /usr/lib/libbsm.0.dylib\r\n    0x7fffe9ba8000 -     0x7fffe9bb6ff7  libbz2.1.0.dylib (38) <ADFA329A-DCE7-356D-8F09-A3168DFC6610> /usr/lib/libbz2.1.0.dylib\r\n    0x7fffe9bb7000 -     0x7fffe9c0dff7  libc++.1.dylib (307.5) <0B43BB5D-E6EB-3464-8DE9-B41AC8ED9D1C> /usr/lib/libc++.1.dylib\r\n    0x7fffe9c0e000 -     0x7fffe9c37ff7  libc++abi.dylib (307.4) <BC271AD3-831B-362A-9DA7-E8C51F285FE4> /usr/lib/libc++abi.dylib\r\n    0x7fffe9c38000 -     0x7fffe9c48ffb  libcmph.dylib (6) <2B5D405E-2D0B-3320-ABD6-622934C86ABE> /usr/lib/libcmph.dylib\r\n    0x7fffe9c49000 -     0x7fffe9c5ffcf  libcompression.dylib (39) <F2726F95-F54E-3B21-BCB5-F7151DEFDC2F> /usr/lib/libcompression.dylib\r\n    0x7fffe9c60000 -     0x7fffe9c60ff7  libcoretls.dylib (121.50.4) <64B1001E-10F6-3542-A3B2-C4B49F51817F> /usr/lib/libcoretls.dylib\r\n    0x7fffe9c61000 -     0x7fffe9c62ff3  libcoretls_cfhelpers.dylib (121.50.4) <1A10303E-5EB0-3C7C-9165-021FCDFD934D> /usr/lib/libcoretls_cfhelpers.dylib\r\n    0x7fffe9f9e000 -     0x7fffe9ff1ff7  libcups.2.dylib (450.3) <D2756AA0-6276-3D5F-9F69-4A9903AA43FE> /usr/lib/libcups.2.dylib\r\n    0x7fffea06e000 -     0x7fffea06efff  libenergytrace.dylib (15) <A1B040A2-7977-3097-9ADF-34FF181EB970> /usr/lib/libenergytrace.dylib\r\n    0x7fffea07e000 -     0x7fffea083ff7  libheimdal-asn1.dylib (498.50.11) <57ADD224-C5AE-39D9-9B86-C7A86748333B> /usr/lib/libheimdal-asn1.dylib\r\n    0x7fffea084000 -     0x7fffea176ff7  libiconv.2.dylib (50) <42125B35-81D7-3FC4-9475-A26DBE10884D> /usr/lib/libiconv.2.dylib\r\n    0x7fffea177000 -     0x7fffea39cffb  libicucore.A.dylib (57168.0.1) <99D53A36-19F6-34F0-86AB-D8BD6C9BD3AD> /usr/lib/libicucore.A.dylib\r\n    0x7fffea3a2000 -     0x7fffea3a3fff  liblangid.dylib (126) <2085E7A7-9A34-3735-87F4-F174EF8EABF0> /usr/lib/liblangid.dylib\r\n    0x7fffea3a4000 -     0x7fffea3bdffb  liblzma.5.dylib (10) <44BD0279-99DD-36B5-8A6E-C11432E2098D> /usr/lib/liblzma.5.dylib\r\n    0x7fffea3be000 -     0x7fffea3d4ff7  libmarisa.dylib (5) <9030D214-5D0F-30CB-AC03-902C63909362> /usr/lib/libmarisa.dylib\r\n    0x7fffea3d5000 -     0x7fffea67dff7  libmecabra.dylib (744.8) <D429FCC9-42A4-38B3-8784-44024BC859EF> /usr/lib/libmecabra.dylib\r\n    0x7fffea6b0000 -     0x7fffea72aff3  libnetwork.dylib (856.60.1) <191E99F5-4723-3180-8013-02AF2F9AE4B8> /usr/lib/libnetwork.dylib\r\n    0x7fffea72b000 -     0x7fffeaafd047  libobjc.A.dylib (709.1) <70614861-0340-32E2-85ED-FE65759CDFFA> /usr/lib/libobjc.A.dylib\r\n    0x7fffeab00000 -     0x7fffeab04fff  libpam.2.dylib (21.30.1) <71EB0D88-DE84-3C8D-A2C5-58AA282BC5BC> /usr/lib/libpam.2.dylib\r\n    0x7fffeab05000 -     0x7fffeab36fff  libpcap.A.dylib (67.60.2) <B2D36AD8-D5C8-3875-AC81-4787A15E44C2> /usr/lib/libpcap.A.dylib\r\n    0x7fffeab53000 -     0x7fffeab6fffb  libresolv.9.dylib (64) <A244AE4C-00B0-396C-98FF-97FE4DB3DA30> /usr/lib/libresolv.9.dylib\r\n    0x7fffeabbf000 -     0x7fffead0dff7  libsqlite3.dylib (254.8) <1ECF7DF7-7A07-3B4B-A63B-F4EFF6BC7ACF> /usr/lib/libsqlite3.dylib\r\n    0x7fffeae56000 -     0x7fffeae63ff7  libxar.1.dylib (417.1) <A3B83C30-FC4B-3B91-BAAF-4ACD2A08FF27> /usr/lib/libxar.1.dylib\r\n    0x7fffeae64000 -     0x7fffeaf53ff3  libxml2.2.dylib (30.23) <307564E4-7CF2-3010-BA8F-1D302E662EAF> /usr/lib/libxml2.2.dylib\r\n    0x7fffeaf54000 -     0x7fffeaf7dfff  libxslt.1.dylib (15.9.1) <A1EFC225-2115-3710-A2FD-B11FDE15B01F> /usr/lib/libxslt.1.dylib\r\n    0x7fffeaf7e000 -     0x7fffeaf8fff3  libz.1.dylib (67) <46E3FFA2-4328-327A-8D34-A03E20BFFB8E> /usr/lib/libz.1.dylib\r\n    0x7fffeaf9e000 -     0x7fffeafa2ff7  libcache.dylib (79) <093A4DAB-8385-3D47-A350-E20CB7CCF7BF> /usr/lib/system/libcache.dylib\r\n    0x7fffeafa3000 -     0x7fffeafadfff  libcommonCrypto.dylib (60092.50.5) <4C8A7FE1-C190-3015-A744-66F8220EAF6A> /usr/lib/system/libcommonCrypto.dylib\r\n    0x7fffeafae000 -     0x7fffeafb5fff  libcompiler_rt.dylib (62) <55D47421-772A-32AB-B529-1A46C2F43B4D> /usr/lib/system/libcompiler_rt.dylib\r\n    0x7fffeafb6000 -     0x7fffeafbefff  libcopyfile.dylib (138) <819BEA3C-DF11-3E3D-A1A1-5A51C5BF1961> /usr/lib/system/libcopyfile.dylib\r\n    0x7fffeafbf000 -     0x7fffeb042fdb  libcorecrypto.dylib (442.50.22) <E36CE660-855A-3166-8B9C-645C514B2C52> /usr/lib/system/libcorecrypto.dylib\r\n    0x7fffeb043000 -     0x7fffeb074fff  libdispatch.dylib (703.50.38) <54B02414-5908-3EF0-B4D2-230B7FEB1CF7> /usr/lib/system/libdispatch.dylib\r\n    0x7fffeb075000 -     0x7fffeb07affb  libdyld.dylib (434) <9AC139E4-F6E1-3A4B-ADED-F71ED890704A> /usr/lib/system/libdyld.dylib\r\n    0x7fffeb07b000 -     0x7fffeb07bffb  libkeymgr.dylib (28) <7AA011A9-DC21-3488-BF73-3B5B14D1FDD6> /usr/lib/system/libkeymgr.dylib\r\n    0x7fffeb07c000 -     0x7fffeb088fff  libkxld.dylib (3789.73.43) <EE6315D3-66F5-3EDA-A706-42BD19B805A8> /usr/lib/system/libkxld.dylib\r\n    0x7fffeb089000 -     0x7fffeb089fff  liblaunch.dylib (972.70.3) <3B621C13-A659-34D1-B29E-42C74D9233FF> /usr/lib/system/liblaunch.dylib\r\n    0x7fffeb08a000 -     0x7fffeb08fff3  libmacho.dylib (898) <17D5D855-F6C3-3B04-B680-E9BF02EF8AED> /usr/lib/system/libmacho.dylib\r\n    0x7fffeb090000 -     0x7fffeb092ff3  libquarantine.dylib (85.50.1) <12448CC2-378E-35F3-BE33-9DC395A5B970> /usr/lib/system/libquarantine.dylib\r\n    0x7fffeb093000 -     0x7fffeb094ffb  libremovefile.dylib (45) <38D4CB9C-10CD-30D3-8B7B-A515EC75FE85> /usr/lib/system/libremovefile.dylib\r\n    0x7fffeb095000 -     0x7fffeb0adff7  libsystem_asl.dylib (349.50.5) <096E4228-3B7C-30A6-8B13-EC909A64499A> /usr/lib/system/libsystem_asl.dylib\r\n    0x7fffeb0ae000 -     0x7fffeb0aeff7  libsystem_blocks.dylib (67) <10DC5404-73AB-35B3-A277-A8AFECB476EB> /usr/lib/system/libsystem_blocks.dylib\r\n    0x7fffeb0af000 -     0x7fffeb13cfef  libsystem_c.dylib (1158.50.2) <E5AE5244-7D0C-36AC-8BB6-C7AE7EA52A4B> /usr/lib/system/libsystem_c.dylib\r\n    0x7fffeb13d000 -     0x7fffeb140ffb  libsystem_configuration.dylib (888.60.3) <094DBBF4-276A-3A11-8AF3-72743CC338E6> /usr/lib/system/libsystem_configuration.dylib\r\n    0x7fffeb141000 -     0x7fffeb144fff  libsystem_coreservices.dylib (41.4) <7D26DE79-B424-3450-85E1-F7FAB32714AB> /usr/lib/system/libsystem_coreservices.dylib\r\n    0x7fffeb145000 -     0x7fffeb15dfff  libsystem_coretls.dylib (121.50.4) <EC6FCF07-DCFB-3A03-9CC9-6DD3709974C6> /usr/lib/system/libsystem_coretls.dylib\r\n    0x7fffeb15e000 -     0x7fffeb164fff  libsystem_dnssd.dylib (765.50.11) <39031D8F-1982-38C9-B56B-878985CF344C> /usr/lib/system/libsystem_dnssd.dylib\r\n    0x7fffeb165000 -     0x7fffeb18eff7  libsystem_info.dylib (503.50.4) <611DB84C-BF70-3F92-8702-B9F28A900920> /usr/lib/system/libsystem_info.dylib\r\n    0x7fffeb18f000 -     0x7fffeb1b1ff7  libsystem_kernel.dylib (3789.73.43) <CD3CD06C-8D4C-3C5A-AB7B-BA3ED671CC62> /usr/lib/system/libsystem_kernel.dylib\r\n    0x7fffeb1b2000 -     0x7fffeb1f9fe7  libsystem_m.dylib (3121.6) <86D499B5-BBDC-3D3B-8A4E-97AE8E6672A4> /usr/lib/system/libsystem_m.dylib\r\n    0x7fffeb1fa000 -     0x7fffeb218ff7  libsystem_malloc.dylib (116.50.9) <82647590-DAEF-3499-8BF3-F1E3048861FE> /usr/lib/system/libsystem_malloc.dylib\r\n    0x7fffeb219000 -     0x7fffeb272ffb  libsystem_network.dylib (856.60.1) <369D0221-56CA-3C3E-9EDE-94B41CAE77B7> /usr/lib/system/libsystem_network.dylib\r\n    0x7fffeb273000 -     0x7fffeb27cff3  libsystem_networkextension.dylib (563.60.2) <B021F2B3-8A75-3633-ABB0-FC012B8E9B0C> /usr/lib/system/libsystem_networkextension.dylib\r\n    0x7fffeb27d000 -     0x7fffeb286ff3  libsystem_notify.dylib (165.20.1) <B8160190-A069-3B3A-BDF6-2AA408221FAE> /usr/lib/system/libsystem_notify.dylib\r\n    0x7fffeb287000 -     0x7fffeb28ffe7  libsystem_platform.dylib (126.50.8) <897462FD-B318-321B-A554-E61982630F7E> /usr/lib/system/libsystem_platform.dylib\r\n    0x7fffeb290000 -     0x7fffeb29aff7  libsystem_pthread.dylib (218.60.3) <B8FB5E20-3295-39E2-B5EB-B464D1D4B104> /usr/lib/system/libsystem_pthread.dylib\r\n    0x7fffeb29b000 -     0x7fffeb29eff7  libsystem_sandbox.dylib (592.70.2) <19320A42-2E3B-361B-BBDA-2F5F2E87B100> /usr/lib/system/libsystem_sandbox.dylib\r\n    0x7fffeb29f000 -     0x7fffeb2a0ff3  libsystem_secinit.dylib (24.50.4) <F78B847B-3565-3E4B-98A6-F7AD40392E2D> /usr/lib/system/libsystem_secinit.dylib\r\n    0x7fffeb2a1000 -     0x7fffeb2a8ffb  libsystem_symptoms.dylib (532.50.48) <1C822669-BF39-3639-A00B-B9170A63F342> /usr/lib/system/libsystem_symptoms.dylib\r\n    0x7fffeb2a9000 -     0x7fffeb2bcff7  libsystem_trace.dylib (518.70.1) <AC63A7FE-50D9-3A30-96E6-F6B7FF16E465> /usr/lib/system/libsystem_trace.dylib\r\n    0x7fffeb2bd000 -     0x7fffeb2c2ffb  libunwind.dylib (35.3) <3D50D8A8-C460-334D-A519-2DA841102C6B> /usr/lib/system/libunwind.dylib\r\n    0x7fffeb2c3000 -     0x7fffeb2ecff7  libxpc.dylib (972.70.3) <71E522A2-2E9D-376D-ABF2-D6F16229272E> /usr/lib/system/libxpc.dylib\r\n\r\nExternal Modification Summary:\r\n  Calls made by other processes targeting this process:\r\n    task_for_pid: 1\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by this process:\r\n    task_for_pid: 0\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by all processes on this machine:\r\n    task_for_pid: 1752146\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n\r\nVM Region Summary:\r\nReadOnly portion of Libraries: Total=202.6M resident=0K(0%) swapped_out_or_unallocated=202.6M(100%)\r\nWritable regions: Total=53.8M written=0K(0%) resident=0K(0%) swapped_out=0K(0%) unallocated=53.8M(100%)\r\n \r\n                                VIRTUAL   REGION \r\nREGION TYPE                        SIZE    COUNT (non-coalesced) \r\n===========                     =======  ======= \r\nKernel Alloc Once                    8K        2 \r\nMALLOC                            37.7M       10 \r\nMALLOC guard page                   16K        4 \r\nMALLOC_LARGE (reserved)           1168K        3         reserved VM address space (unallocated)\r\nSTACK GUARD                       56.0M       12 \r\nStack                             12.6M       12 \r\nVM_ALLOCATE                        2.1G       67 \r\nVM_ALLOCATE (reserved)              68K        3         reserved VM address space (unallocated)\r\n__DATA                            9908K      145 \r\n__LINKEDIT                       116.2M       11 \r\n__TEXT                            86.4M      150 \r\n__UNICODE                          556K        2 \r\nmapped file                       34.3M       29 \r\nshared memory                       12K        4 \r\n===========                     =======  ======= \r\nTOTAL                              2.5G      440 \r\nTOTAL, minus reserved VM space     2.5G      440 \r\n```","Url":"https://github.com/dotnet/corefx/issues/42646","RelatedDescription":"Closed issue \"Program crashes when using API LastAccessTime\" (#42646)"},{"Id":"524633240","IsPullRequest":true,"CreatedAt":"2019-11-20T17:20:59","Actor":"Anipik","Number":"42632","RawContent":null,"Title":"update branding to 3.0.2","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42632","RelatedDescription":"Closed or merged PR \"update branding to 3.0.2\" (#42632)"},{"Id":"525930640","IsPullRequest":false,"CreatedAt":"2019-11-20T16:48:59","Actor":"adam-currie","Number":"42652","RawContent":null,"Title":".net core","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/issues/42652","RelatedDescription":"Open issue \".net core\" (#42652)"},{"Id":"525884996","IsPullRequest":false,"CreatedAt":"2019-11-20T16:39:34","Actor":"suchoss","Number":"42650","RawContent":null,"Title":"System.Net.HttpClient is stripping body for some statuses","State":"closed","Body":"Hello, \r\ntoday I \"discovered\" a \"problem\" with HttpClient. I have already described the problem on [StackOverflow](https://stackoverflow.com/questions/58956869/is-there-any-way-how-to-get-httpresponsemessage-content-body-when-response-is-ht/58957661#58957661).\r\n\r\nI would like to open a discussion if there is any real reason for stripping of content from response body? I am writing about following .net core code:\r\nhttps://github.com/dotnet/corefx/blob/0cc22ccba707d7552159363d586262fa9c4e8a2a/src/System.Net.HttpListener/src/System/Net/HttpListenerResponse.cs#L83\r\n\r\nBecause how I look at it - I do not expect any hidden behavior from libraries. To me - status code is just a number and even if it is marked as **NoContent**, it doesn't have to necessarily mean that there is no additional information in body. Specially for REST communication.\r\n\r\nThanks","Url":"https://github.com/dotnet/corefx/issues/42650","RelatedDescription":"Closed issue \"System.Net.HttpClient is stripping body for some statuses\" (#42650)"},{"Id":"525894305","IsPullRequest":false,"CreatedAt":"2019-11-20T15:54:22","Actor":"abbotware","Number":"42651","RawContent":null,"Title":"Tasks.Dataflow - Aggregation Block and Rendezvous Block","State":"open","Body":"I have a few use cases where a pipeline chain depends on certain conditions before the pipeline can proceed.\r\n\r\n**Aggregation** - C runs with a single input - an aggregation of B once B receives a complete notification.\r\n\r\n`A-> B(sum) ->  C`\r\n\r\n**Rendezvous** (barrier) - D runs only when B and C are set to complete\r\n```\r\nA->  B ->   D\r\n     C -> \r\n```\r\n\r\nIn both cases, I can wire up the the behavior using the exposed Completion  Task.   However, this is outside the dataflow block functionality and seems to be mixing and matching different technologies (TPL and Dataflow).\r\n\r\nI would prefer to create a Block which can inserted into the pipeline using the **LinkTo** methods so an entire chain can be represented as blocks.\r\n\r\nThe two block types I have listed above seem to be missing (by design possibly).  I have thought that perhaps a clever use of the join+ broadcast blocks could be used instead, but that seems to misrepresent the intent.\r\n\r\nI am attempting to make an AggregationBlock<TInput, TOutput> (similar to a TransformBlock) - one that has an Action<Input> for all inputs..   Upon receiving a complete event, it will call Func<output> a single time to publish to the next block in in the pipeline.\r\n\r\nThe problem I am having is implementing my own ISourceBlock<TOutput> - if I use TransformBlock as an example. the block uses (SourceCore<TOutput>) which are only internal.  TransformBlock is also Sealed so i can't just extend it\r\n\r\n**SourceCore** seems to be the one class I need to implement ISourceBlock<T> which has the **LinkTo** method I want.  (I know i can just implement the interface on my own, but I would prefer re-use existing code)\r\n\r\nSo a few questions:\r\nWere these types of blocks intentionally left out?\r\nIs there any reason why the existing blocks are sealed (Action / Transform)? \r\nIs there any reason why the high level objects such as SourceCore is not exposed?\r\n","Url":"https://github.com/dotnet/corefx/issues/42651","RelatedDescription":"Open issue \"Tasks.Dataflow - Aggregation Block and Rendezvous Block\" (#42651)"},{"Id":"525789479","IsPullRequest":false,"CreatedAt":"2019-11-20T13:01:37","Actor":"ipoetry","Number":"42649","RawContent":null,"Title":"Add support for WebP image format","State":"open","Body":"WebP is widely used，but there was not a uniform and good universal one in WebP produce methods.\r\n\r\nThanks !","Url":"https://github.com/dotnet/corefx/issues/42649","RelatedDescription":"Open issue \"Add support for WebP image format\" (#42649)"},{"Id":"525746365","IsPullRequest":false,"CreatedAt":"2019-11-20T11:32:40","Actor":"stephenlautier","Number":"42648","RawContent":null,"Title":"netcore 3 intermittent http client errors","State":"open","Body":"After updating to netcore 3 we are getting several issues with the HttpClient, failing randomly - we have 2 scenarios which fails \"similarly\" in different projects.\r\n\r\n##### Error 1\r\nThis is a running E2E test project performing a lot of HttpClient to call Api's and randomly a call fails, sometimes they do all work correctly.\r\n\r\n```\r\n\tExceptions: System.Net.Http.HttpRequestException: An error occurred while sending the request.\r\n--\r\n\t ---> System.IO.IOException: The response ended prematurely.\r\n\t   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, CancellationToken cancellationToken)\r\n\t   --- End of inner exception stack trace ---\r\n\t   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, CancellationToken cancellationToken)\r\n\t   at System.Net.Http.HttpConnectionPool.SendWithNtConnectionAuthAsync(HttpConnection connection, HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n\t   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n\t   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n\t   at FluentlyHttpClient.Middleware.FluentMiddlewareHttpHandler.<>c__DisplayClass4_0.<<SendAsync>b__0>d.MoveNext()\r\n\t--- End of stack trace from previous location where exception was thrown ---\r\n\t   at FluentlyHttpClient.Middleware.ActionExecuteMiddleware.Invoke(FluentHttpMiddlewareContext context)\r\n\t   at FluentlyHttpClient.Middleware.TimerHttpMiddleware.Invoke(FluentHttpMiddlewareContext context)\r\n\t   at Tyr.Core.Middleware.LoggerFullHttpMiddleware.Invoke(FluentHttpMiddlewareContext context)\r\n\t   at Tyr.Core.Middleware.TyrErrorHttpMiddleware`1.Invoke(FluentHttpMiddlewareContext context)\r\n\tat Tyr.Core.Middleware.TyrErrorHttpMiddleware`1.Invoke(FluentHttpMiddlewareContext context)\r\n\tat FluentlyHttpClient.Middleware.FluentHttpMiddlewareRunner.Run(FluentHttpRequest request, Func`1 action)\r\n\tat FluentlyHttpClient.Middleware.FluentMiddlewareHttpHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n\tat System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n\tat FluentlyHttpClient.FluentHttpClient.Send(FluentHttpRequest request)\r\n\tat FluentlyHttpClient.FluentHttpRequestBuilder.ReturnAsResponse[T]()\r\n\tat Tyr.Midgard.Services.Auth.LoginCommand.Execute(TyrMidgardActionContext action)\r\n\tat Tyr.Midgard.Fixtures.Api.Auth.AuthMidgardFixture.A_login_action_is_requested(String username, String password)\r\n```\t\r\n\r\n\r\n##### Error 2\r\nThis is an aspnet project with SSR for angular - calls to node via aspnet node services, when adding a little bit of load they start failing randomly with this error.\r\n\r\n```\r\nAn error occurred while sending the request.\r\n--\r\n\t   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithNtConnectionAuthAsync(HttpConnection connection, HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n   at Microsoft.AspNetCore.NodeServices.HostingModels.HttpNodeInstance.InvokeExportAsync[T](NodeInvocationInfo invocationInfo, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.NodeServices.HostingModels.OutOfProcessNodeInstance.InvokeExportAsync[T](CancellationToken cancellationToken, String moduleName, String exportNameOrNull, Object[] args)\r\n   at Microsoft.AspNetCore.NodeServices.NodeServicesImpl.InvokeExportWithPossibleRetryAsync[T](String moduleName, String exportedFunctionName, Object[] args, Boolean allowRetry, CancellationToken cancellationToken)\r\n   at Midgard.Web.Controllers.HomeController.Index() in /app/Controllers/HomeController.cs:line 115\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>g__Awaited|6_0(ExceptionHandlerMiddleware middleware, HttpContext context, Task task)\r\n```\r\n\r\nWe are using \r\n- Docker (linux) based on mcr.microsoft.com/dotnet/core/aspnet:3.0-buster-slim\r\n- netcore3","Url":"https://github.com/dotnet/corefx/issues/42648","RelatedDescription":"Open issue \"netcore 3 intermittent http client errors\" (#42648)"},{"Id":"525736737","IsPullRequest":false,"CreatedAt":"2019-11-20T11:13:34","Actor":"ulfemsoy","Number":"42647","RawContent":null,"Title":"Bug in DateTimeConverter when time has been specified","State":"open","Body":"When converting DateTime, with a specified time, to string the wrong format is used.\r\nSource: System.ComponentModel.TypeConverter/src/System/ComponentModel/DateTimeConverter.cs (line #120)\r\n\r\nThe following line (line number 120)\r\nreturn dt.ToString(format, CultureInfo.CurrentCulture);\r\n\r\nshould be replaced with\r\nreturn dt.ToString(format, culture);","Url":"https://github.com/dotnet/corefx/issues/42647","RelatedDescription":"Open issue \"Bug in DateTimeConverter when time has been specified\" (#42647)"},{"Id":"525635546","IsPullRequest":false,"CreatedAt":"2019-11-20T07:56:07","Actor":"davidfowl","Number":"42645","RawContent":null,"Title":"API proposal: New Timer based on IAsyncEnumerable","State":"open","Body":"To solve of the common issues with timers:\r\n1. The fact that it always captures the execution context is problematic for certain long lived operations (https://github.com/dotnet/corefx/issues/32866)\r\n2. The fact that is has strange rooting behavior based on the constructor used\r\n3. The fact timer callbacks can overlap (https://github.com/dotnet/corefx/issues/39313)\r\n4. The fact that timer callbacks aren't asynchronous which leads to people writing sync over async code\r\n\r\nI propose we create a modern timer API based on `IAsyncEnumerable<T>` that basically solves all of these problems 😄 .\r\n\r\n- This API only makes sense for timers that fire repeatedly, timers that fire once could be Task based (we already have `Task.Delay` for this)\r\n- If user code takes longer to run than the interval, we drop the tick events that happened until the user can catch up (think bounded channel with drop and a capacity of 1).\r\n- The timer will be disposed when the `IAsyncEnumerator<T>` is disposed (not sure if this is good enough)\r\n\r\n```C#\r\npublic class Timer\r\n{\r\n    public static IAsyncEnumerable<TimerSpan> Create(TimeSpan dueTime, TimeSpan period);\r\n}\r\n```\r\n\r\nUsage:\r\n\r\n```C#\r\nclass Program\r\n{\r\n    static async Task Main(string[] args)\r\n    {\r\n        var second = TimeSpan.FromSeconds(1);\r\n        var ticker = Timer.CreateTimer(second, second);\r\n\r\n        await foreach(var t in ticker)\r\n        {\r\n            Console.WriteLine($\"Tick {t}\")\r\n        }\r\n    }\r\n}\r\n```\r\n\r\ncc @stephentoub ","Url":"https://github.com/dotnet/corefx/issues/42645","RelatedDescription":"Open issue \"API proposal: New Timer based on IAsyncEnumerable\" (#42645)"},{"Id":"525602849","IsPullRequest":true,"CreatedAt":"2019-11-20T06:28:36","Actor":"Youssef1313","Number":"42644","RawContent":null,"Title":"Fix duplication of GENERIC_READ & GENERIC_WRITE","State":"open","Body":"Fixes #42199 (Hope my changes are correct)","Url":"https://github.com/dotnet/corefx/pull/42644","RelatedDescription":"Open PR \"Fix duplication of GENERIC_READ & GENERIC_WRITE\" (#42644)"},{"Id":"525357960","IsPullRequest":false,"CreatedAt":"2019-11-20T04:35:41","Actor":"heaths","Number":"42643","RawContent":null,"Title":"Docs for LazyInitializer.EnsureInitialize<T>(ref T) are wrong","State":"closed","Body":"In the [documentation](https://docs.microsoft.com/en-us/dotnet/api/system.threading.lazyinitializer.ensureinitialized?view=netstandard-2.0#System_Threading_LazyInitializer_EnsureInitialized__1___0__) for `LazyInitializer.EnsureInitialize<T>(ref T target)`, it states,\r\n> In the event that multiple threads access this method concurrently, multiple instances of T may be created, but only one will be stored into target. In such an occurrence, this method will not dispose of the objects that were not stored. If such objects must be disposed, it is up to the caller to determine if an object was not used and to then dispose of the object appropriately.\r\n\r\n\r\nThe code uses `Activator.CreateInstance` if not already null (guarded by `Interlocked.CompareExchanged`) but `target` is only ever returned. The result of `Activator.CreateInstance` is lost if not placed into `target`, so callers can never dispose of it if not using an overload that takes a `Func<T>` and specifically checking for whether it was initialized.\r\n\r\nI'm happy to fix the doc comments, but wanted confirmation first that this was actually the intended behavior and that the docs are wrong and should change.","Url":"https://github.com/dotnet/corefx/issues/42643","RelatedDescription":"Closed issue \"Docs for LazyInitializer.EnsureInitialize<T>(ref T) are wrong\" (#42643)"},{"Id":"525350291","IsPullRequest":true,"CreatedAt":"2019-11-20T00:40:54","Actor":"nkolev92","Number":"42642","RawContent":null,"Title":"Preemptively correct the restore project style","State":"open","Body":"https://github.com/NuGet/NuGet.Client/pull/3131 might add a warning when a bad project style is used. \r\n\r\nThat will get elevated to an error due to treat warnings as error being enabled and fail the restore. \r\n\r\nThis preemptively addresses that. \r\n\r\nFor reference, these are the valid project types: https://github.com/NuGet/NuGet.Client/blob/a66ebed83647727d157dc37f14685cbfd2a4adf4/src/NuGet.Core/NuGet.ProjectModel/ProjectStyle.cs","Url":"https://github.com/dotnet/corefx/pull/42642","RelatedDescription":"Open PR \"Preemptively correct the restore project style\" (#42642)"},{"Id":"525314310","IsPullRequest":true,"CreatedAt":"2019-11-19T22:50:48","Actor":"mjrousos","Number":"42641","RawContent":null,"Title":"Initialize Delimiter from Attributes","State":"open","Body":"If a DelimitedListTraceListener has a Delimiter attribute, use it\r\nto initialize the Delimiter unless (and until) a delimiter is set\r\nexplicitly.\r\n\r\nAlso add unit tests for these scenarios.\r\n\r\nFix #39363","Url":"https://github.com/dotnet/corefx/pull/42641","RelatedDescription":"Open PR \"Initialize Delimiter from Attributes\" (#42641)"},{"Id":"524636695","IsPullRequest":false,"CreatedAt":"2019-11-19T18:42:01","Actor":"tig","Number":"42633","RawContent":null,"Title":"Support ObjectCreationHandling in JsonSerializerOptions like Json.NET does","State":"closed","Body":"Json.NET supports `ObjectCreationHandling` options, but `System.Text.Json` does not. \r\n\r\nhttps://www.newtonsoft.com/json/help/html/DeserializeObjectCreationHandling.htm\r\n\r\nThat's disappointing.\r\n\r\nOr, am I missing something?\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/42633","RelatedDescription":"Closed issue \"Support ObjectCreationHandling in JsonSerializerOptions like Json.NET does\" (#42633)"},{"Id":"524967076","IsPullRequest":false,"CreatedAt":"2019-11-19T12:04:49","Actor":"JTrotta","Number":"42638","RawContent":null,"Title":"SerialPort error on Virtual Serial Port for USB LINUX","State":"open","Body":"The problem should be related to the DTR setting. It cannot be done on virtual ports.\r\n\r\nThis is the error opening a /dev/ttyUSB7 port:\r\n`Hello World! Unhandled exception. System.IO.IOException: Broken pipe at System.IO.Ports.SerialStream.set_DtrEnable(Boolean value) at System.IO.Ports.SerialStream..ctor(String portName, Int32 baudRate, Parity parity, Int32 dataBits, StopBits stopBits, Int32 readTimeout, Int32 writeTimeout, Handshake handshake, Boolean dtrEnable, Boolean rtsEnable, Boolean discardNull, Byte parityReplace) at System.IO.Ports.SerialPort.Open() at RPTestcore3.Program.Start7() in D:\\Visual Studio 2019\\Projects\\RPTestcore3\\RPTestcore3\\Program.cs:line 43 at RPTestcore3.Program.Main(String[] args) in D:\\Visual Studio 2019\\Projects\\RPTestcore3\\RPTestcore3\\Program.cs:line 32 Aborted`\r\n\r\nThe problem should be here:\r\n`        internal SerialStream(string portName, int baudRate, Parity parity, int dataBits, StopBits stopBits, int readTimeout, int writeTimeout, Handshake handshake,\r\n            bool dtrEnable, bool rtsEnable, bool discardNull, byte parityReplace)`\r\n\r\nat row568.\r\n`DtrEnable = dtrEnable;`\r\n\r\nwhich calls property:\r\n\r\n`internal bool DtrEnable\r\n        {\r\n            get\r\n            {\r\n                int status = Interop.Termios.TermiosGetSignal(_handle, Interop.Termios.Signals.SignalDtr);\r\n                if (status < 0)\r\n                {\r\n                    throw GetLastIOError();\r\n                }\r\n\r\n                return status == 1;\r\n            }\r\n\r\n            set\r\n            {\r\n                if (Interop.Termios.TermiosGetSignal(_handle, Interop.Termios.Signals.SignalDtr, value ? 1 : 0) != 0)\r\n                {\r\n                    throw GetLastIOError();\r\n                }\r\n            }\r\n        }`\r\n\r\nWe cannot set SignalDtr on Linux Virtual Ports.","Url":"https://github.com/dotnet/corefx/issues/42638","RelatedDescription":"Open issue \"SerialPort error on Virtual Serial Port for USB LINUX\" (#42638)"},{"Id":"524828789","IsPullRequest":false,"CreatedAt":"2019-11-19T07:36:02","Actor":"tmds","Number":"42637","RawContent":null,"Title":"[enhancement] Add EventSource for Process","State":"open","Body":"These events would be written:\r\n- child process created/creation failed, includes pid of child/errno, filename, arguments, and environment.\r\n- child process exit, including pid of child, and exit code.\r\n\r\nThis makes visible what processes are launched from an application, and helps identify a process that exits with an error.","Url":"https://github.com/dotnet/corefx/issues/42637","RelatedDescription":"Open issue \"[enhancement] Add EventSource for Process\" (#42637)"},{"Id":"524769202","IsPullRequest":false,"CreatedAt":"2019-11-19T04:39:52","Actor":"judeleander","Number":"42635","RawContent":null,"Title":"Ignoring default values during serialization using System.Text.Json","State":"open","Body":"Currently there is no support for Ignoring Default Values while Serialization in `System.Text.Json`, which is required for ignoring default value for value types (Data type), the same support is available in [Json.NET](https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_DefaultValueHandling.htm), this can be achieved by adding an API **`IgnoreDefaultValues`** to the Json Serializer Options and then validating a condition to check if the IgnoreDefaultValues API is set true and the value is default value before serializing only for the value types since it cannot be provided for reference types.\r\n\r\n### Proposed API\r\n\r\n`IgnoreDefaultValues` API is proposed similar to existing API `IgnoreNullValues`\r\n\r\n```csharp\r\n\r\n/// <summary>\r\n/// Determines whether default values are ignored during serialization and deserialization.\r\n/// The default value is false.\r\n/// </summary>\r\n/// <exception cref=\"InvalidOperationException\">\r\n/// Thrown if this property is set after serialization or deserialization has occurred.\r\n/// </exception>\r\npublic bool IgnoreDefaultValues\r\n{\r\n     get\r\n     {\r\n          return _ignoreDefaultValues;\r\n     }\r\n     set\r\n     {\r\n          VerifyMutable();\r\n          _ignoreDefaultValues = value;\r\n     }\r\n}\r\n\r\n```\r\n\r\n```csharp\r\nbool includeProperty = true;\r\n\r\n// Check default value property.\r\nif (options.IgnoreDefaultValues)\r\n{\r\n    DefaultValueAttribute defaultValueAttribute = JsonPropertyInfo.GetAttribute<DefaultValueAttribute>(jsonPropertyInfo.PropertyInfo);\r\n    currentValue = jsonPropertyInfo.GetValueAsObject(state.Current.CurrentValue);\r\n    includeProperty = (defaultValueAttribute != null && object.Equals(currentValue, defaultValueAttribute.Value)) == false;\r\n}\r\n\r\nif (includeProperty)\r\n{\r\n    jsonPropertyInfo.Write(ref state, writer);\r\n}\r\n```\r\n\r\n### Details\r\n* Added API `IgnoreDefaultValues` for getting input from user if default values are to be ignored while JSON serialization using JsonSerializerOptions in System.Text.Json.\r\n* Implemented the same by validating if IgnoreDefaultValues API is set to true by user and the value to be serialized is a default value and if so the same is ignored and move to next property while serialization.\r\n\r\n\r\n### Pull Request\r\n\r\nA PR with the proposed changes is available: [#42288](https://github.com/dotnet/corefx/pull/42288) ","Url":"https://github.com/dotnet/corefx/issues/42635","RelatedDescription":"Open issue \"Ignoring default values during serialization using System.Text.Json\" (#42635)"},{"Id":"524641796","IsPullRequest":false,"CreatedAt":"2019-11-18T21:53:57","Actor":"aspcompiler","Number":"42634","RawContent":null,"Title":"dotnet core 3 on macOS Catalina: NetworkInterface causes high CPU","State":"open","Body":"You can find our code at https://github.com/awslabs/kinesis-agent-windows/blob/master/Amazon.KinesisTap.Shared/NetworkStatus.cs. It runs fine on Windows and macOS before Catalina, but causes high CPU on macOS Catalina.\r\n\r\nHigh CPU is only caused by NetworkAddressChanged or NetworkAvailabilityChanged event handler. This occurs when we turn on/off VPN. This is to give you a heads up; we will do more work to narrow down the exact line of the code that cause high CPU later.","Url":"https://github.com/dotnet/corefx/issues/42634","RelatedDescription":"Open issue \"dotnet core 3 on macOS Catalina: NetworkInterface causes high CPU\" (#42634)"},{"Id":"524630892","IsPullRequest":false,"CreatedAt":"2019-11-16T09:18:21","Actor":"VladislavMorozov","Number":"42631","RawContent":null,"Title":"System.Security.Cryptography. ECDsaOpenSsl throw NullReferenceException after using construction.","State":"open","Body":"# Issue Title\r\n\r\nECDsaOpenSsl from System.Security.Cryptography throw NullReferenceException after using construction.\r\n\r\n# General\r\n\r\nI have .NET Core 2.2 and Linux container in docker. When I create JWT token with ES256 algorithm `JwtSecurityTokenHandler.CreateEncodedJwt()` throw exception.\r\n\r\n![token](https://user-images.githubusercontent.com/31768904/68990973-a8d04b00-086a-11ea-9802-bde4c34ac303.png)\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Azure.Containers.Tools.Targets\" Version=\"1.9.5\" />\r\n    <PackageReference Include=\"Portable.BouncyCastle\" Version=\"1.8.5.2\" />\r\n    <PackageReference Include=\"System.IdentityModel.Tokens.Jwt\" Version=\"5.6.0\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n```\r\nFROM mcr.microsoft.com/dotnet/core/runtime:2.2-stretch-slim AS base\r\nWORKDIR /app\r\n\r\nFROM mcr.microsoft.com/dotnet/core/sdk:2.2-stretch AS build\r\nWORKDIR /src\r\nCOPY [\"AppleMusic/AppleMusic.csproj\", \"AppleMusic/\"]\r\nRUN dotnet restore \"AppleMusic/AppleMusic.csproj\"\r\nCOPY . .\r\nWORKDIR \"/src/AppleMusic\"\r\nRUN dotnet build \"AppleMusic.csproj\" -c Release -o /app/build\r\n\r\nFROM build AS publish\r\nRUN dotnet publish \"AppleMusic.csproj\" -c Release -o /app/publish\r\n\r\nFROM base AS final\r\nWORKDIR /app\r\nCOPY --from=publish /app/publish .\r\nENTRYPOINT [\"dotnet\", \"AppleMusic.dll\"]\r\n```\r\n\r\n\r\n```\r\nusing System;\r\nusing System.IdentityModel.Tokens.Jwt;\r\nusing System.Security.Claims;\r\nusing System.Security.Cryptography;\r\nusing Microsoft.IdentityModel.Tokens;\r\nusing Org.BouncyCastle.Crypto.Parameters;\r\nusing Org.BouncyCastle.Security;\r\n\r\nnamespace AppleMusic\r\n{\r\n\tclass Program\r\n\t{\r\n\t\tstatic void Main(string[] args)\r\n\t\t{\r\n\t\t\tvar key = \"\";\r\n\t\t\t\r\n\t\t\tvar iat = (int)DateTime.UtcNow.Subtract(new DateTime(1970, 1, 1)).TotalSeconds;\r\n\t\t\tvar exp = (int)DateTime.UtcNow.AddMonths(5).Subtract(new DateTime(1970, 1, 1)).TotalSeconds;\r\n\r\n\t\t\tvar tokenHandler = new JwtSecurityTokenHandler();\r\n\r\n\t\t\tvar tokenDescriptor = new SecurityTokenDescriptor\r\n\t\t\t{\r\n\t\t\t\tSubject = new ClaimsIdentity(new Claim[]\r\n\t\t\t\t{\r\n\t\t\t\t\tnew Claim(\"iat\", iat.ToString()),\r\n\t\t\t\t\tnew Claim(\"exp\", exp.ToString()),\r\n\t\t\t\t}),\r\n\t\t\t\tIssuer = \"\"\r\n\t\t\t};\r\n\r\n\t\t\tfor (var i = 0; i < 100; i++)\r\n\t\t\t{\r\n\t\t\t\tusing (var algorithm = GetEllipticCurveAlgorithm(key)) // this code doesn't work\r\n\t\t\t\t{\r\n\t\t\t\t\ttokenDescriptor.SigningCredentials = new SigningCredentials(new ECDsaSecurityKey(algorithm)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tKeyId = \"\"\r\n\t\t\t\t\t}, SecurityAlgorithms.EcdsaSha256);\r\n\t\t\t\t\tvar token = tokenHandler.CreateEncodedJwt(tokenDescriptor);\r\n\t\t\t\t\tConsole.WriteLine(token);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tprivate static ECDsa GetEllipticCurveAlgorithm(string privateKey)\r\n\t\t{\r\n\t\t\tvar keyParams = (ECPrivateKeyParameters)PrivateKeyFactory\r\n\t\t\t\t.CreateKey(Convert.FromBase64String(privateKey));\r\n\r\n\t\t\tvar q = keyParams.Parameters.G.Multiply(keyParams.D).Normalize();\r\n\r\n\t\t\treturn ECDsa.Create(new ECParameters\r\n\t\t\t{\r\n\t\t\t\tCurve = ECCurve.CreateFromValue(keyParams.PublicKeyParamSet.Id),\r\n\t\t\t\tD = keyParams.D.ToByteArrayUnsigned(),\r\n\t\t\t\tQ =\r\n\t\t\t\t{\r\n\t\t\t\t\tX = q.XCoord.GetEncoded(),\r\n\t\t\t\t\tY = q.YCoord.GetEncoded()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n","Url":"https://github.com/dotnet/corefx/issues/42631","RelatedDescription":"Open issue \"System.Security.Cryptography. ECDsaOpenSsl throw NullReferenceException after using construction.\" (#42631)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"526332695","IsPullRequest":false,"CreatedAt":"2019-11-21T02:52:20","Actor":"davkean","Number":"39915","RawContent":null,"Title":"Attempting to change severity of an analyzer fails and throws up yellow bar","State":"open","Body":"**Version Used**: \r\nVersion 16.5.0 Preview 2.0 [29520.138.master\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. `git clone http://github.com/dotnet/project-system`\r\n2. `cd project-system`\r\n3. `git checkout 8a68d2b7737fbf19d96ba41a53cc1c6617d396c8`\r\n4. `ProjectSystem.sln`\r\n5. Navigate to src\\Microsoft.VisualStudio.ProjectSystem.Managed.VS\\Packaging\\ManagedProjectSystemPackage.cs\r\n6. On line 43, drop down Lightbulb\r\n7. Choose: \r\n![image](https://user-images.githubusercontent.com/1103906/69299990-1ebb2480-0c66-11ea-8845-75291efd74d1.png)\r\n\r\n\r\n**Expected Behavior**:\r\n.editorconfig to be changed.\r\n\r\n**Actual Behavior**:\r\nYellow bar with the following:\r\n\r\n```\r\n    <type>Error</type>\r\n    <source>Editor or Editor Extension</source>\r\n    <description>System.Runtime.InteropServices.COMException (0x80004005): Error HRESULT E_FAIL has been returned from a call to a COM component.&#x000D;&#x000A;   at System.Runtime.InteropServices.Marshal.ThrowExceptionForHRInternal(Int32 errorCode, IntPtr errorInfo)&#x000D;&#x000A;   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.InvisibleEditor..ctor(IServiceProvider serviceProvider, String filePath, IVsHierarchy hierarchyOpt, Boolean needsSave, Boolean needsUndoDisabled)&#x000D;&#x000A;   at Microsoft.VisualStudio.LanguageServices.RoslynVisualStudioWorkspace.OpenInvisibleEditor(DocumentId documentId)&#x000D;&#x000A;   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.VisualStudioWorkspaceImpl.ApplyTextDocumentChange(DocumentId documentId, SourceText newText)&#x000D;&#x000A;   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.VisualStudioWorkspaceImpl.ApplyAnalyzerConfigDocumentTextChanged(DocumentId documentId, SourceText newText)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.Workspace.ApplyProjectChanges(ProjectChanges projectChanges)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Solution newSolution, IProgressTracker progressTracker)&#x000D;&#x000A;   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.VisualStudioWorkspaceImpl.TryApplyChanges(Solution newSolution, IProgressTracker progressTracker)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.CodeActions.ApplyChangesOperation.TryApply(Workspace workspace, IProgressTracker progressTracker, CancellationToken cancellationToken)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.Editor.Implementation.CodeActions.CodeActionEditHandlerService.ProcessOperations(Workspace workspace, ImmutableArray`1 operations, IProgressTracker progressTracker, CancellationToken cancellationToken)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.Editor.Implementation.CodeActions.CodeActionEditHandlerService.Apply(Workspace workspace, Document fromDocument, ImmutableArray`1 operations, String title, IProgressTracker progressTracker, CancellationToken cancellationToken)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.InvokeWorker(Func`1 getFromDocument, IProgressTracker progressTracker, CancellationToken cancellationToken)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.&lt;&gt;c__DisplayClass20_0.&lt;InvokeCore&gt;b__0()&#x000D;&#x000A;   at Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.PerformAction(IExtensionManager extensionManager, Object extension, Action action)&#x000D;&#x000A;--- End of stack trace from previous location where exception was thrown ---&#x000D;&#x000A;   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)</description>\r\n  </entry>\r\n```","Url":"https://github.com/dotnet/roslyn/issues/39915","RelatedDescription":"Open issue \"Attempting to change severity of an analyzer fails and throws up yellow bar\" (#39915)"},{"Id":"526285539","IsPullRequest":true,"CreatedAt":"2019-11-21T02:08:44","Actor":"dotnet-bot","Number":"39912","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39912","RelatedDescription":"Closed or merged PR \"Merge master to features/local-function-attributes\" (#39912)"},{"Id":"526285484","IsPullRequest":true,"CreatedAt":"2019-11-21T02:08:35","Actor":"dotnet-bot","Number":"39911","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39911","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#39911)"},{"Id":"526305773","IsPullRequest":true,"CreatedAt":"2019-11-21T01:14:27","Actor":"mavasani","Number":"39914","RawContent":null,"Title":"Move to new API for GetSuggestedActions","State":"open","Body":"Editor team recently added a new GetSuggestedActions API overload that allows providing a more detailed operation scope message. This PR moves us to that API for Roslyn suggested actions. We now display the name of the executing analyzer/fixer/refactoring when user hits Ctrl + Dot to bring up the light bulb. This should help the users identify the slow extension and help us in improving performance of our analyzers/fixers/refactorings.\r\n\r\n![GatheringSuggestions_SlowAnalyzer](https://user-images.githubusercontent.com/10605811/69291704-e7db0500-0bb8-11ea-92d0-f16719fabaf8.png)\r\n\r\n![GatheringSuggestions_SlowCodeFixer](https://user-images.githubusercontent.com/10605811/69291714-ead5f580-0bb8-11ea-871e-317f343b897f.png)\r\n","Url":"https://github.com/dotnet/roslyn/pull/39914","RelatedDescription":"Open PR \"Move to new API for GetSuggestedActions\" (#39914)"},{"Id":"526304867","IsPullRequest":true,"CreatedAt":"2019-11-21T01:11:14","Actor":"gafter","Number":"39913","RawContent":null,"Title":"Initial work for C# 9 pattern-matching changes","State":"open","Body":"- Syntax model changes\r\n- Parsing changes\r\n- Binding of patterns in isolation (TBD: handling designators under `not` and `or`, decision tree changes)\r\n","Url":"https://github.com/dotnet/roslyn/pull/39913","RelatedDescription":"Open PR \"Initial work for C# 9 pattern-matching changes\" (#39913)"},{"Id":"526264086","IsPullRequest":true,"CreatedAt":"2019-11-20T23:00:16","Actor":"jasonmalinowski","Number":"39910","RawContent":null,"Title":"Decouple command filters and contained documents from language service","State":"open","Body":"Our derivations of AbstractTextViewFilter and ContainedLanguage took as a parameter to the constructor an AbstractLanguageService. This causes headaches for Live Share (and others), as in order to create some of these types they had to create an AbstractLanguageService just to pass into the constructor. It turns out these types were almost entirely decoupled already, except that one method in AbstractTextViewFilter that was grabbing the AbstractLanguageService to call one method, which could easily just be inlined.\r\n\r\nThis decouples the classes, and in the process removes a bunch of now unnecessary generic type arguments. No user-observable changes should happen from this -- follow up PRs will take advantage of this to delete the Live Share-defined AbstractLanguageService that lives in the Roslyn codebase.\r\n\r\nCommit at a time highly recommended, as it's broken apart to separate some of the \"interesting\" changes from large but mechanical changes.","Url":"https://github.com/dotnet/roslyn/pull/39910","RelatedDescription":"Open PR \"Decouple command filters and contained documents from language service\" (#39910)"},{"Id":"526103204","IsPullRequest":true,"CreatedAt":"2019-11-20T22:54:23","Actor":"dotnet-maestro[bot]","Number":"39907","RawContent":null,"Title":"[release/dev16.3-vs-deps] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ef0a7d9c-37a9-4bca-b183-08d73687fe54)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191119.2\r\n- **Date Produced**: 11/19/2019 6:14 PM\r\n- **Commit**: e34d933e18ba1cd393bbafcb6018e0f858d3e89e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19569.2\r\n\r\n[marker]: <> (End:ef0a7d9c-37a9-4bca-b183-08d73687fe54)\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/39907","RelatedDescription":"Closed or merged PR \"[release/dev16.3-vs-deps] Update dependencies from dotnet/arcade\" (#39907)"},{"Id":"526241414","IsPullRequest":false,"CreatedAt":"2019-11-20T22:03:20","Actor":"DustinCampbell","Number":"39909","RawContent":null,"Title":"C# override completion does not seem to be adding using directives","State":"open","Body":"**Version Used**: 16.5.0 Preview 2.0 [29519.175.master]\r\n\r\nIs this a known regression?","Url":"https://github.com/dotnet/roslyn/issues/39909","RelatedDescription":"Open issue \"C# override completion does not seem to be adding using directives\" (#39909)"},{"Id":"526092201","IsPullRequest":false,"CreatedAt":"2019-11-20T20:38:56","Actor":"dquist","Number":"39906","RawContent":null,"Title":"Spurious CS8625 warning when checking null against type with equality overloads","State":"closed","Body":"**Version Used**: \r\n\r\n- Visual Studio 16.3.9\r\n- .NET Core 3.0.100\r\n- C# 8\r\n- Nullable types enabled\r\n\r\n**Steps to Reproduce**:\r\n\r\nWhen performing a null check of a value that overloads the equality operators, warning CS8625 is generated. (Cannot convert null literal to non-nullable reference type).\r\n\r\nConsider the example below for a class that overloads the equality operators. (The implementations are just stubs but the content doesn't seem to matter).\r\n\r\nWhen attempting to perform a null check in `TestMethod`, the compiler generates warning CS8625. If I comment out the operator overloads the warning goes away.\r\n\r\n```c#\r\npublic class NullableTestType\r\n{\r\n    public override bool Equals(object? obj) => false;\r\n    public override int GetHashCode() => 0;\r\n    public static bool operator ==(NullableTestType a, NullableTestType b) => a == b;\r\n    public static bool operator !=(NullableTestType a, NullableTestType b) => a != b;\r\n\r\n    public static int TestMethod(NullableTestType value)\r\n    {\r\n        if (value == null) // Generates CS8625 when equality operators are included\r\n            throw new ArgumentNullException(nameof(value));\r\n\r\n        return value.GetHashCode();\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nChecking for null equality should be allowed.\r\n\r\n**Actual Behavior**:\r\n\r\nWarning CS8625 is generated.\r\n\r\nA workaround seems to be using the `is` syntax instead of checking for equality, i.e.\r\n\r\n```c#\r\nif (value is null) // Doesn't generate an error\r\n    throw new ArgumentNullException(nameof(value));\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/39906","RelatedDescription":"Closed issue \"Spurious CS8625 warning when checking null against type with equality overloads\" (#39906)"},{"Id":"526179485","IsPullRequest":false,"CreatedAt":"2019-11-20T20:31:36","Actor":"RikkiGibson","Number":"39908","RawContent":null,"Title":"Go to Base with caret inside class members","State":"open","Body":"I would like to be able to use the Go to Base command in a context like the following:\r\n\r\n```cs\r\nclass Derived : Base\r\n{\r\n    void M1() { }\r\n    \r\n    || // caret here\r\n\r\n    override void M2() { }\r\n}\r\n```\r\n\r\nDesired behavior: I hit Alt+Home and it shows the bases for `class Derived`, just as if I had hit it over the class name syntax. This is similar to how the Run Tests in Context (ctrl+R, T) command will run all the tests in the class when the caret is inside the class.\r\n\r\nPerhaps other commands would be applicable too. Go to Definition to list the various declarations of a partial class, etc.\r\n\r\n/cc @sharwell @jasonmalinowski ","Url":"https://github.com/dotnet/roslyn/issues/39908","RelatedDescription":"Open issue \"Go to Base with caret inside class members\" (#39908)"},{"Id":"525382560","IsPullRequest":true,"CreatedAt":"2019-11-20T19:42:24","Actor":"dotnet-bot","Number":"39900","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39900","RelatedDescription":"Closed or merged PR \"Merge master to features/local-function-attributes\" (#39900)"},{"Id":"525382314","IsPullRequest":true,"CreatedAt":"2019-11-20T19:37:11","Actor":"dotnet-bot","Number":"39899","RawContent":null,"Title":"Merge release/dev16.5-preview1-vs-deps to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.5-preview1-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.5-preview1-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/release/dev16.5-preview1-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.5-preview1-vs-deps-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39899","RelatedDescription":"Closed or merged PR \"Merge release/dev16.5-preview1-vs-deps to master-vs-deps\" (#39899)"},{"Id":"526060730","IsPullRequest":false,"CreatedAt":"2019-11-20T19:15:06","Actor":"mikadumont","Number":"39905","RawContent":null,"Title":"Use Base Type Where Available refactoring ","State":"open","Body":"Customer request copying here:\r\n\r\n **Steps to Reproduce**:\r\n\r\n 1. Have a keyboard shortcut, lightbulb suggestion, or right click context menu option when your caret is on a type to `Use Base Type Where Available`\r\n\r\n 3. The `Use Base Type Where Available` dialog will open\r\n\r\n ![image](https://user-images.githubusercontent.com/46729679/69269349-aed56d00-0b85-11ea-8498-7648356aa90e.png)\r\n\r\n 4. Select one of the base types\r\n\r\n 5. Have an option to select if you want to replace type usages in the `is` operator and/or in the `typeof` operator. \r\n\r\n 6. If conflicts are found prompt the user to resolve the conflicts and if there are no conflicts the refactoring will perform immediately. \r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/39905","RelatedDescription":"Open issue \"Use Base Type Where Available refactoring \" (#39905)"},{"Id":"526003694","IsPullRequest":false,"CreatedAt":"2019-11-20T18:37:19","Actor":"sharwell","Number":"39904","RawContent":null,"Title":"Cyclic project references can hang the IDE","State":"open","Body":"**Version Used**: 16.4 Preview 4\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a project with a `<ProjectReference>` to itself. This can also occur if the project contains a `<Reference>` to an assembly with the same name as the project, since the project system can implicitly convert this to a `<ProjectReference>` for use in the IDE.\r\n2. Edit the project and attempt to use code fixes.\r\n\r\n**Expected Behavior**:\r\n\r\nAn error is reported in the error list for the cyclic reference.\r\n\r\n**Actual Behavior**:\r\n\r\nThe IDE hangs.\r\n\r\n`!dumpasync` shows an asynchronous stack that attempts to recursively obtain a semaphore, and thus cannot make progress:\r\n\r\n```\r\n3083e57c <0> System.Threading.SemaphoreSlim+<WaitUntilCountOrTimeoutAsync>d__31 @ 72650098\r\n..3083e644 <0> Roslyn.Utilities.SemaphoreSlimExtensions+<DisposableWaitAsync>d__1 @ 1213f390\r\n..3083e700 <0> Microsoft.CodeAnalysis.SolutionState+CompilationTracker+<GetOrBuildCompilationInfoAsync>d__22 @ 12157df0\r\n..3083e7cc <0> Microsoft.CodeAnalysis.SolutionState+CompilationTracker+<GetCompilationSlowAsync>d__19 @ 12157cb0\r\n..3083e880 <0> Microsoft.CodeAnalysis.SolutionState+CompilationTracker+<GetMetadataReferenceAsync>d__32 @ 12159420\r\n..3083e948 <1> Microsoft.CodeAnalysis.SolutionState+CompilationTracker+<FinalizeCompilationAsync>d__30 @ 12158e60\r\n..3083ea20 <1> Microsoft.CodeAnalysis.SolutionState+CompilationTracker+<BuildFinalStateFromInProgressStateAsync>d__27 @ 12187610\r\n..3083eae8 <1> Microsoft.CodeAnalysis.SolutionState+CompilationTracker+<GetOrBuildCompilationInfoAsync>d__22 @ 12157df0\r\n..3083ebb4 <0> Microsoft.CodeAnalysis.SolutionState+CompilationTracker+<GetCompilationSlowAsync>d__19 @ 12157cb0\r\n..3083ec68 <1> Microsoft.CodeAnalysis.Document+<GetSemanticModelAsync>d__23 @ 1215f720\r\n```","Url":"https://github.com/dotnet/roslyn/issues/39904","RelatedDescription":"Open issue \"Cyclic project references can hang the IDE\" (#39904)"},{"Id":"525965316","IsPullRequest":false,"CreatedAt":"2019-11-20T17:43:13","Actor":"jnm2","Number":"39903","RawContent":null,"Title":"Suggestion to use null-coalescing throw expression rather than condition","State":"open","Body":"Before:\r\n\r\n```cs\r\nvar foo = obj as Foo;\r\nif (foo is null)\r\n    throw new FooExpression(...);\r\n```\r\n\r\nor:\r\n\r\n```cs\r\n// Too complex. This is generated from the previous snippet by the 'Use pattern matching'\r\n// suggestion IIRC.\r\nif (!(obj is Foo foo))\r\n    throw new FooExpression(...);\r\n```\r\n\r\nor:\r\n\r\n```cs\r\nvar foo = obj is Foo foo ? foo : throw new FooExpression(...);\r\n```\r\n\r\nAfter:\r\n\r\n```cs\r\nvar foo = obj as Foo\r\n    ?? throw new FooExpression(...);\r\n```","Url":"https://github.com/dotnet/roslyn/issues/39903","RelatedDescription":"Open issue \"Suggestion to use null-coalescing throw expression rather than condition\" (#39903)"},{"Id":"525890758","IsPullRequest":false,"CreatedAt":"2019-11-20T15:49:25","Actor":"mavasani","Number":"39902","RawContent":null,"Title":"Error list experience on closing documents","State":"open","Body":"Follow-up issue to discuss https://github.com/dotnet/roslyn/pull/39892#issue-342926809. That PR restores the prior error list behavior of removing closed file diagnostics from error list whenever a document is closed. This issue tracks discussing if we want to change that experience.","Url":"https://github.com/dotnet/roslyn/issues/39902","RelatedDescription":"Open issue \"Error list experience on closing documents\" (#39902)"},{"Id":"525383746","IsPullRequest":true,"CreatedAt":"2019-11-20T02:34:34","Actor":"tmat","Number":"39901","RawContent":null,"Title":"Workspace diagnostics","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/39901","RelatedDescription":"Open PR \"Workspace diagnostics\" (#39901)"},{"Id":"525368615","IsPullRequest":true,"CreatedAt":"2019-11-20T01:57:47","Actor":"dotnet-bot","Number":"39898","RawContent":null,"Title":"Merge release/dev16.5-preview1 to release/dev16.5-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.5-preview1 into release/dev16.5-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.5-preview1-to-release/dev16.5-preview1-vs-deps\ngit reset --hard upstream/release/dev16.5-preview1-vs-deps\ngit merge upstream/release/dev16.5-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.5-preview1-to-release/dev16.5-preview1-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39898","RelatedDescription":"Closed or merged PR \"Merge release/dev16.5-preview1 to release/dev16.5-preview1-vs-deps\" (#39898)"},{"Id":"525368410","IsPullRequest":true,"CreatedAt":"2019-11-20T01:57:02","Actor":"dotnet-bot","Number":"39897","RawContent":null,"Title":"Merge release/dev16.4-vs-deps to release/dev16.5-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.4-vs-deps into release/dev16.5-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-vs-deps-to-release/dev16.5-preview1-vs-deps\ngit reset --hard upstream/release/dev16.5-preview1-vs-deps\ngit merge upstream/release/dev16.4-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-vs-deps-to-release/dev16.5-preview1-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39897","RelatedDescription":"Closed or merged PR \"Merge release/dev16.4-vs-deps to release/dev16.5-preview1-vs-deps\" (#39897)"},{"Id":"525368245","IsPullRequest":true,"CreatedAt":"2019-11-20T01:56:30","Actor":"dotnet-bot","Number":"39896","RawContent":null,"Title":"Merge release/dev16.5-preview1 to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.5-preview1 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.5-preview1-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/dev16.5-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.5-preview1-to-master --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39896","RelatedDescription":"Closed or merged PR \"Merge release/dev16.5-preview1 to master\" (#39896)"},{"Id":"525366413","IsPullRequest":true,"CreatedAt":"2019-11-20T01:42:12","Actor":"JoeRobich","Number":"39895","RawContent":null,"Title":"Merge release/dev16.5-preview1 to release/dev16.5-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.5-preview1 into release/dev16.5-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.5-preview1-to-release/dev16.5-preview1-vs-deps\ngit reset --hard upstream/release/dev16.5-preview1-vs-deps\ngit merge upstream/release/dev16.5-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.5-preview1-to-release/dev16.5-preview1-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39895","RelatedDescription":"Closed or merged PR \"Merge release/dev16.5-preview1 to release/dev16.5-preview1-vs-deps\" (#39895)"},{"Id":"525366181","IsPullRequest":true,"CreatedAt":"2019-11-20T01:42:07","Actor":"JoeRobich","Number":"39894","RawContent":null,"Title":"Merge release/dev16.4-vs-deps to release/dev16.5-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.4-vs-deps into release/dev16.5-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-vs-deps-to-release/dev16.5-preview1-vs-deps\ngit reset --hard upstream/release/dev16.5-preview1-vs-deps\ngit merge upstream/release/dev16.4-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-vs-deps-to-release/dev16.5-preview1-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39894","RelatedDescription":"Closed or merged PR \"Merge release/dev16.4-vs-deps to release/dev16.5-preview1-vs-deps\" (#39894)"},{"Id":"525365996","IsPullRequest":true,"CreatedAt":"2019-11-20T01:42:04","Actor":"JoeRobich","Number":"39893","RawContent":null,"Title":"Merge release/dev16.5-preview1 to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.5-preview1 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.5-preview1-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/dev16.5-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.5-preview1-to-master --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39893","RelatedDescription":"Closed or merged PR \"Merge release/dev16.5-preview1 to master\" (#39893)"},{"Id":"525204579","IsPullRequest":false,"CreatedAt":"2019-11-19T22:40:30","Actor":"Yen-David","Number":"39886","RawContent":null,"Title":"Enabling nullable reference context forces too many \"?\" suffixes.","State":"closed","Body":"**Version Used**: C# 8\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Enable nullable reference context.\r\n2. Create a new class library.\r\n3. You realize the need to use the \"?\" suffix extensively for public member parameters.\r\n\r\n**Expected Behavior**:\r\n\r\nBoth \"string\" and \"int\" should indicate default behaviors, while \"string?\" and \"int?\" indicate nullable types and \"string!\" and \"int!\" indicate non-nullable types, for syntactical consistency. Defaults should be set as follows, to adhere to Internet protocol conventions, loose on inputs and strict on outputs, given that most API's prefer location transparency, local and remote alike: (1) inputs default to nullable and outputs to non-nullable; (2) returns and getters default to non-nullable to make null propagation optional, while out parameters and setters default to nullable for default values, especially in the case of TryXXX() methods, which make all nullable returns obsolete; (3) public and protected member inputs default to nullable for caller-friendliness and Internet-friendliness, as all inputs should be optional and have good defaults, while internal and private member inputs to non-nullable, as nulls should be handled at the \"public surface\".\r\n\r\nThis way, we can eliminate most type suffixes and encourage a very well-behaving API design.\r\n\r\n**Actual Behavior**:\r\n\r\nYou realize the need to use the \"?\" suffix extensively for public member parameters.\r\n","Url":"https://github.com/dotnet/roslyn/issues/39886","RelatedDescription":"Closed issue \"Enabling nullable reference context forces too many \"?\" suffixes.\" (#39886)"},{"Id":"525309814","IsPullRequest":true,"CreatedAt":"2019-11-19T22:39:22","Actor":"mavasani","Number":"39892","RawContent":null,"Title":"Remove diagnostics from error list on document close or reset for tha…","State":"open","Body":"…t document\r\n\r\nThis fixes a recent regression where we stopped clearing out documents diagnostics on document close.\r\n\r\n--------------------\r\n**More Context**\r\n\r\n1. Prior behavior (when closed file diagnostics/FSA is turned off):\r\n    1. We only compute diagnostics for opened files and populate error list\r\n    2. When user closes a file, we explicitly remove the diagnostics from the error list for that file.\r\n2. Recently, we added [new functionality](https://github.com/dotnet/roslyn/pull/39596) to re-purpose “Run Code Analysis” command for C# and VB projects, which regressed the above behavior.\r\n    1. With this command, users can force compute live diagnostics for any project or current solution on demand. Computed diagnostics include both open file and closed file diagnostics and they are automatically populated in the error list.\r\n    2. We want these diagnostics to stay in the error list even for closed files. I had to make a change to diagnostic service to not force remove all closed file diagnostics, otherwise this command was populating the correct diagnostics in error list only for them to be immediately removed for all closed files.\r\n3. New behavior:\r\n    1. We only compute diagnostics for opened files and populate error list by default\r\n    2. Users can force complete diagnostics for closed files by using explicit commands, at which point error list will also contain closed file diagnostics\r\n    3. When user closes the file, we do not remove the diagnostics from the error list. User can switch the error list scope combo box to “Open documents” instead of the default “Entire solution” to only view diagnostics for opened documents.\r\n\r\nI feel the new behavior is more logical – error list contents are purely what diagnostics have been computed and is not affected by actions such as closing a file. Users should be taught to use the error list scope combo box if they desire to get differing views over data, such as Current Document, Open Documents, and so on, instead of us trying to proactively do so for users by modifying the actual error list contents.\r\n\r\nHowever, if I am the only one who prefers the new behavior, this PR is probably a good compromise. “Run Code Analysis” command experience will be slight affected. The command will still populate diagnostics in error list for all closed files, but if user opens a specific file by double clicking a closed file diagnostic computed by this command, and then closes the file, the diagnostics for that file will disappear and user has to open the file again or re-run “Run Code Analysis” command to get all closed file diagnostics.","Url":"https://github.com/dotnet/roslyn/pull/39892","RelatedDescription":"Open PR \"Remove diagnostics from error list on document close or reset for tha…\" (#39892)"},{"Id":"525276191","IsPullRequest":false,"CreatedAt":"2019-11-19T21:23:52","Actor":"genlu","Number":"39891","RawContent":null,"Title":"Completion for unimported ext. methods should support target-type completion","State":"open","Body":"Right now we don't label items from extension method Import completion provider.\r\n\r\nFYI @dpoeschl","Url":"https://github.com/dotnet/roslyn/issues/39891","RelatedDescription":"Open issue \"Completion for unimported ext. methods should support target-type completion\" (#39891)"},{"Id":"525261569","IsPullRequest":false,"CreatedAt":"2019-11-19T20:54:30","Actor":"penenkel","Number":"39890","RawContent":null,"Title":"CodeFix for CS1998 does not consider/adapt all kinds of usages","State":"open","Body":"**Version Used**: \r\nVS2019.3.9 - .NET Core 3.0 ConsoleApp\r\n\r\n**Issue**\r\nIt is my opinion that applying a CodeFix should not cause syntax errors (assuming the code was valid before). Under that assumption I find it rather annoying that the CodeFix for CS1998 does not respect the usages of the methods it modifies (at least not all), resulting in syntax errors.\r\n\r\n**Steps to Reproduce**:\r\nConsider the following example\r\n````\r\n    class A\r\n    {\r\n        public async Task DemoUsage1()\r\n        {\r\n            var result = await Method();\r\n        }\r\n        public void DemoUsage2()\r\n        {\r\n            var result = Method().Result;\r\n        }\r\n        public async Task DemoUsage3()\r\n        {\r\n            Func<Task<string>> func = Method;\r\n            var result = await func.Invoke();\r\n        }\r\n\r\n        public async Task<string> Method() // CS1998: This async method lacks 'await' operators and will run synchronously.\r\n        {\r\n            return \"abc\";\r\n        }\r\n    }\r\n````\r\nwhich is fixed to:\r\n```\r\n    class A\r\n    {\r\n        public async Task DemoUsage1()\r\n        {\r\n            var result = Method(); // usage adapted -> valid\r\n        }\r\n        public void DemoUsage2()\r\n        {\r\n            var result = Method().Result; // usage not adapted -> invalid syntax\r\n        }\r\n        public async Task DemoUsage3()\r\n        {\r\n            Func<Task<string>> func = Method;  // usage not adapted -> invalid syntax\r\n            var result = await func.Invoke();\r\n        }\r\n\r\n        public string Method() // now synchronous\r\n        {\r\n            return \"abc\";\r\n        }\r\n    }\r\n```\r\nwhich shows that only one of the usage kinds has been adapted correctly.\r\n\r\n**Expected Behavior**:\r\nAs stated above: I would expect that a CodeFix does not produce incorrect code.\r\nObviously this is not so trivial to fix. In case 2 it would probably be OK to just remove the `.Result` (ignoring the fact that such a usage should better not exist at all). But as soon as the method is stored in a variable one probably should not modify the signature at all and instead use something like `return Task.FromResult(\"abc\")` within the method. (This is especially relevant when used with lambda functions like `Func<Task<string>> func = async () => \"abc\"`, which should probably transformed to `Func<Task<string>> func = () => Task.FromResult(\"abc\")`` or similar.\r\n","Url":"https://github.com/dotnet/roslyn/issues/39890","RelatedDescription":"Open issue \"CodeFix for CS1998 does not consider/adapt all kinds of usages\" (#39890)"},{"Id":"525249832","IsPullRequest":false,"CreatedAt":"2019-11-19T20:32:59","Actor":"mavasani","Number":"39889","RawContent":null,"Title":"Deadlock caused by AbstractAddImportCodeFixProvider attempting to get NuGet package sources","State":"open","Body":"**Version Used**: Latest 16.5 Preview2 dogfood build (29518.163.master)\r\n\r\n**Repro steps (pretty consistent repro)**\r\n\r\n1. Create a new C# project\r\n2. Add code so you have missing usings. For example, just type out a `Console.Write(...);`, but no `using System;` so you get compiler errors. Place the cursor on the squiggle and click save all.\r\n3. Close VS\r\n4. Restart VS, open the same project\r\n5. Hit Ctrl + Dot - if you do this before the red squiggle shows up, I invariably see this deadlock. \r\n\r\nI think there might be other ways to hit this, but I found this was a pretty consistent repro for me.\r\n\r\nDump shared at: `\\\\<%internal_share%>\\public\\mavasani\\Deadlock_Ctrl_Dot\\devenv.dmp`\r\n\r\n**Main thread:**\r\n```\r\n>\tMicrosoft.CodeAnalysis.Workspaces.dll!Roslyn.Utilities.TaskExtensions.WaitAndGetResult_CanCallOnBackground<System.Collections.Immutable.ImmutableArray<System.__Canon>>(System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<System.__Canon>> task, System.Threading.CancellationToken cancellationToken)\tUnknown\r\n \tMicrosoft.CodeAnalysis.EditorFeatures.Wpf.dll!Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedActionsSourceProvider.SuggestedActionsSource.GetCodeFixes(Microsoft.CodeAnalysis.Editor.Shared.ITextBufferSupportsFeatureService supportsFeatureService, Microsoft.VisualStudio.Language.Intellisense.ISuggestedActionCategorySet requestedActionCategories, Microsoft.CodeAnalysis.Workspace workspace, Microsoft.CodeAnalysis.Document document, Microsoft.VisualStudio.Text.SnapshotSpan range, System.Threading.CancellationToken cancellationToken)\tUnknown\r\n \tMicrosoft.CodeAnalysis.EditorFeatures.Wpf.dll!Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedActionsSourceProvider.SuggestedActionsSource.GetSuggestedActions(Microsoft.VisualStudio.Language.Intellisense.ISuggestedActionCategorySet requestedActionCategories, Microsoft.VisualStudio.Text.SnapshotSpan range, System.Threading.CancellationToken cancellationToken)\tUnknown\r\n \tMicrosoft.VisualStudio.Platform.VSEditor.dll!Microsoft.VisualStudio.Language.Intellisense.Implementation.LightBulbSession.TryGetSuggestedActionSets.AnonymousMethod__0(Microsoft.VisualStudio.Utilities.IUIThreadOperationContext c)\tUnknown\r\n \tMicrosoft.VisualStudio.Editor.Implementation.dll!Microsoft.VisualStudio.Editor.Implementation.VSUIThreadOperationExecutor.Execute(Microsoft.VisualStudio.Utilities.UIThreadOperationExecutionOptions executionOptions, System.Action<Microsoft.VisualStudio.Utilities.IUIThreadOperationContext> action)\tUnknown\r\n \tMicrosoft.VisualStudio.Editor.Implementation.dll!Microsoft.VisualStudio.Editor.Implementation.VSUIThreadOperationExecutor.Execute(string title, string defaultDescription, bool allowCancellation, bool showProgress, System.Action<Microsoft.VisualStudio.Utilities.IUIThreadOperationContext> action)\tUnknown\r\n \tMicrosoft.VisualStudio.Platform.VSEditor.dll!Microsoft.VisualStudio.Text.Utilities.UIThreadOperationExecutor.Execute(string title, string defaultDescription, bool allowCancellation, bool showProgress, System.Action<Microsoft.VisualStudio.Utilities.IUIThreadOperationContext> action)\tUnknown\r\n \tMicrosoft.VisualStudio.Platform.VSEditor.dll!Microsoft.VisualStudio.Language.Intellisense.Implementation.LightBulbSession.TryGetSuggestedActionSets(out System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.Language.Intellisense.SuggestedActionSet> actionSets, Microsoft.VisualStudio.Language.Intellisense.ISuggestedActionCategorySet overrideRequestedActionCategories)\tUnknown\r\n \tMicrosoft.VisualStudio.Platform.VSEditor.dll!Microsoft.VisualStudio.Language.Intellisense.Implementation.LightBulbBroker.CreateSession(Microsoft.VisualStudio.Language.Intellisense.ISuggestedActionCategorySet requestedActionCategories, Microsoft.VisualStudio.Text.Editor.ITextView textView, Microsoft.VisualStudio.Text.ITrackingPoint triggerPoint, Microsoft.VisualStudio.Text.ITrackingSpan triggerSpan, System.Collections.Generic.Dictionary<Microsoft.VisualStudio.Text.SnapshotSpan, System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.Language.Intellisense.ISuggestedActionsSource>> subjectSpansAndSources, Microsoft.VisualStudio.Language.Intellisense.ISuggestedActionCategorySet applicableCategories, bool preQuerySuggestedActions, bool trackMouse)\tUnknown\r\n```\r\n\r\n**Background thread:**\r\n```\r\n \tMicrosoft.VisualStudio.Threading.dll!Microsoft.VisualStudio.Threading.JoinableTaskFactory.WaitSynchronouslyCore(System.Threading.Tasks.Task task)\tUnknown\r\n \tMicrosoft.VisualStudio.Threading.dll!Microsoft.VisualStudio.Threading.JoinableTaskFactory.WaitSynchronously(System.Threading.Tasks.Task task)\tUnknown\r\n \tMicrosoft.VisualStudio.Threading.dll!Microsoft.VisualStudio.Threading.JoinableTask.CompleteOnCurrentThread()\tUnknown\r\n \tMicrosoft.VisualStudio.Threading.dll!Microsoft.VisualStudio.Threading.JoinableTask<bool>.CompleteOnCurrentThread()\tUnknown\r\n \tMicrosoft.VisualStudio.Threading.dll!Microsoft.VisualStudio.Threading.JoinableTaskFactory.Run<bool>(System.Func<System.Threading.Tasks.Task<bool>> asyncMethod, Microsoft.VisualStudio.Threading.JoinableTaskCreationOptions creationOptions)\tUnknown\r\n \tNuGet.PackageManagement.VisualStudio.dll!NuGet.PackageManagement.VisualStudio.VSSolutionManager.IsSolutionOpen.get()\tUnknown\r\n \tNuGet.PackageManagement.VisualStudio.dll!NuGet.PackageManagement.VisualStudio.VSSettings.ResetSolutionSettingsIfNeeded()\tUnknown\r\n \tNuGet.PackageManagement.VisualStudio.dll!NuGet.PackageManagement.VisualStudio.VSSettings.SolutionSettings.get()\tUnknown\r\n \tNuGet.PackageManagement.VisualStudio.dll!NuGet.PackageManagement.VisualStudio.VSSettings.GetSection(string sectionName)\tUnknown\r\n \tNuGet.Configuration.dll!NuGet.Configuration.PackageSourceProvider.LoadPackageSourceLookup(bool byName, NuGet.Configuration.ISettings settings)\tUnknown\r\n \tNuGet.Configuration.dll!NuGet.Configuration.PackageSourceProvider.LoadPackageSources(NuGet.Configuration.ISettings settings, System.Collections.Generic.IEnumerable<NuGet.Configuration.PackageSource> defaultPackageSources)\tUnknown\r\n \tNuGet.Configuration.dll!NuGet.Configuration.PackageSourceProvider.LoadPackageSources()\tUnknown\r\n \tNuGet.VisualStudio.Implementation.dll!NuGet.VisualStudio.VsPackageSourceProvider.GetSources(bool includeUnOfficial, bool includeDisabled)\tUnknown\r\n>\tMicrosoft.VisualStudio.LanguageServices.dll!Microsoft.VisualStudio.LanguageServices.Packaging.PackageInstallerService.GetPackageSources()\tUnknown\r\n \tMicrosoft.CodeAnalysis.Features.dll!Microsoft.CodeAnalysis.AddImport.AbstractAddImportCodeFixProvider.RegisterCodeFixesAsync(Microsoft.CodeAnalysis.CodeFixes.CodeFixContext context)\tUnknown\r\n \tMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.CodeFixes.CodeFixService.GetCodeFixesAsync(Microsoft.CodeAnalysis.Document document, Microsoft.CodeAnalysis.Text.TextSpan span, Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider fixer, bool isBlocking, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic> diagnostics, System.Threading.CancellationToken cancellationToken)\tUnknown\r\n \tMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.CodeFixes.CodeFixService.AppendFixesAsync.AnonymousMethod__2(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic> dxs)\tUnknown\r\n \tMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.CodeFixes.CodeFixService.AppendFixesOrConfigurationsAsync.AnonymousMethod__2()\tUnknown\r\n \tMicrosoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.PerformFunctionAsync<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CodeFixes.CodeFix>>(Microsoft.CodeAnalysis.Extensions.IExtensionManager extensionManager, object extension, System.Func<System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CodeFixes.CodeFix>>> function, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CodeFixes.CodeFix> defaultValue)\tUnknown\r\n \tMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.CodeFixes.CodeFixService.AppendFixesOrConfigurationsAsync<Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider>(Microsoft.CodeAnalysis.Document document, Microsoft.CodeAnalysis.Text.TextSpan fixesSpan, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostics.DiagnosticData> diagnosticsWithSameSpan, bool fixAllForInSpan, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CodeFixes.CodeFixCollection> result, Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider fixer, System.Func<Microsoft.CodeAnalysis.Diagnostic, bool> hasFix, System.Func<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>, System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CodeFixes.CodeFix>>> getFixes, System.Threading.CancellationToken cancellationToken)\tUnknown\r\n \tMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.CodeFixes.CodeFixService.AppendFixesAsync(Microsoft.CodeAnalysis.Document document, Microsoft.CodeAnalysis.Text.TextSpan span, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostics.DiagnosticData> diagnostics, bool fixAllForInSpan, bool isBlocking, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CodeFixes.CodeFixCollection> result, System.Threading.CancellationToken cancellationToken)\tUnknown\r\n```","Url":"https://github.com/dotnet/roslyn/issues/39889","RelatedDescription":"Open issue \"Deadlock caused by AbstractAddImportCodeFixProvider attempting to get NuGet package sources\" (#39889)"},{"Id":"525245959","IsPullRequest":false,"CreatedAt":"2019-11-19T20:25:20","Actor":"cston","Number":"39888","RawContent":null,"Title":"Unexpected nullable warning from default in switch expression","State":"open","Body":"The following should compile without warnings:\r\n```C#\r\n#nullable enable\r\n\r\nusing System.Diagnostics.CodeAnalysis;\r\n\r\nclass Program\r\n{\r\n    [return: MaybeNull] static T F<T>(bool b, T t)\r\n    {\r\n        return b switch\r\n            {\r\n                false => t,\r\n                _ => default // warning CS8601: Possible null reference assignment\r\n            };\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/roslyn/issues/39888","RelatedDescription":"Open issue \"Unexpected nullable warning from default in switch expression\" (#39888)"},{"Id":"525221012","IsPullRequest":false,"CreatedAt":"2019-11-19T19:37:20","Actor":"cyungmann","Number":"39887","RawContent":null,"Title":"NuGet package description typo","State":"open","Body":"https://www.nuget.org/packages/Microsoft.Net.Compilers.Toolset/3.3.1 has \"Destkop\" instead of \"Desktop\"\r\n\r\nWould submit a PR but I couldn't quickly find this text anywhere in the repo.","Url":"https://github.com/dotnet/roslyn/issues/39887","RelatedDescription":"Open issue \"NuGet package description typo\" (#39887)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"526275945","IsPullRequest":true,"CreatedAt":"2019-11-20T23:32:54","Actor":"cshung","Number":"7884","RawContent":null,"Title":"[WIP] Porting changes from CoreCLR","State":"open","Body":"WIP - this port minimal changes from CoreCLR to allow `EcmaSignatureParser.cs` to have identical content with the CoreCLR (now dotnet/runtime) copy.","Url":"https://github.com/dotnet/corert/pull/7884","RelatedDescription":"Open PR \"[WIP] Porting changes from CoreCLR\" (#7884)"},{"Id":"523136354","IsPullRequest":true,"CreatedAt":"2019-11-15T00:35:44","Actor":"Dotnet-GitSync-Bot","Number":"7883","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @elinor-fung @john-h-k @manandre @tannergooding @carlossanlop","Url":"https://github.com/dotnet/corert/pull/7883","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7883)"},{"Id":"522914006","IsPullRequest":false,"CreatedAt":"2019-11-14T15:00:12","Actor":"AArnott","Number":"7882","RawContent":null,"Title":"UWP .NET Native compilation fails when nutc_driver.exe returns exit code -2147483645","State":"open","Body":"**Repro steps**\r\n\r\n1. Create a new UWP Test project in VS 2019\r\n1. Switch to the Release|x86 solution configuration\r\n1. Build (which succeeds, but with many warnings about a missing assembly)\r\n1. Install the `System.Xml.XPath.XmlDocument` package. Build again. No warnings this time. ❓ Why is this package necessary in the default proejct yet somehow not included in the default project?\r\n1. Set the `AllowUnsafeBlocks=true` msbuild property.\r\n1. Add this method to the UWP test project (or any dependency project/package):\r\n\r\n    ```cs\r\n        private static IntPtr GetAddress(object value)\r\n        {\r\n            unsafe\r\n            {\r\n                TypedReference tr = __makeref(value);\r\n                return **(IntPtr**)(&tr);\r\n            }\r\n        }\r\n    ```\r\n\r\n1. Build again.\r\n\r\n**Expected**\r\n\r\nBuild succeeds.\r\n\r\n**Actual**\r\n\r\nBuild fails with:\r\n\r\n> C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\microsoft.net.native.compiler\\2.2.7-rel-27913-00\\tools\\Microsoft.NetNative.targets(801,5): error : ILT0005: 'C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\runtime.win10-x86.microsoft.net.native.compiler\\2.2.7-rel-27913-00\\tools\\x86\\ilc\\Tools\\nutc_driver.exe @\"D:\\Users\\andarno\\source\\repos\\UWPUnitTestProject2\\UWPUnitTestProject2\\obj\\x86\\Release\\ilc\\intermediate\\MDIL\\UWPUnitTestProject2.rsp\"' returned exit code -2147483645\r\n\r\n\r\nFull log follows\r\n\r\n```\r\n1>------ Build started: Project: UWPUnitTestProject2, Configuration: Release x86 ------\r\n1>  UWPUnitTestProject2 -> D:\\Users\\andarno\\source\\repos\\UWPUnitTestProject2\\UWPUnitTestProject2\\bin\\x86\\Release\\UWPUnitTestProject2.exe\r\n1>  Processing application code\r\n1>  Computing application closure and generating interop code\r\n1>    Loading 139 modules...\r\n1>    Generating code...\r\n1>    Interop code generated.\r\n1>  Generating serialization code\r\n1>  Compiling interop code\r\n1>  Generating System.Reflection.DispatchProxy proxy code.\r\n1>  Cleaning up unreferenced code\r\n1>  Generating native code\r\n1>C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\microsoft.net.native.compiler\\2.2.7-rel-27913-00\\tools\\Microsoft.NetNative.targets(801,5): error : ILT0005: 'C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\runtime.win10-x86.microsoft.net.native.compiler\\2.2.7-rel-27913-00\\tools\\x86\\ilc\\Tools\\nutc_driver.exe @\"D:\\Users\\andarno\\source\\repos\\UWPUnitTestProject2\\UWPUnitTestProject2\\obj\\x86\\Release\\ilc\\intermediate\\MDIL\\UWPUnitTestProject2.rsp\"' returned exit code -2147483645\r\n========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\r\n```","Url":"https://github.com/dotnet/corert/issues/7882","RelatedDescription":"Open issue \"UWP .NET Native compilation fails when nutc_driver.exe returns exit code -2147483645\" (#7882)"},{"Id":"522521151","IsPullRequest":true,"CreatedAt":"2019-11-14T02:41:52","Actor":"jkotas","Number":"7881","RawContent":null,"Title":"Delete dead files","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7881","RelatedDescription":"Closed or merged PR \"Delete dead files\" (#7881)"},{"Id":"522441624","IsPullRequest":false,"CreatedAt":"2019-11-13T20:02:05","Actor":"Shadow4walker","Number":"7880","RawContent":null,"Title":"HttpWebRequest/HttpWebResponse Not Working!","State":"open","Body":"HttpWebRequest request= with Headers ....etc\r\nvar httpWebResponse = (HttpWebResponse) await request.GetResponseAsync()\r\nnever passed this code >fail fast!! idk what to put in the rd.xml or if event i should put anything there!","Url":"https://github.com/dotnet/corert/issues/7880","RelatedDescription":"Open issue \"HttpWebRequest/HttpWebResponse Not Working!\" (#7880)"},{"Id":"518910070","IsPullRequest":true,"CreatedAt":"2019-11-12T22:51:55","Actor":"cshung","Number":"7869","RawContent":null,"Title":"Adding signature matching unit test","State":"closed","Body":"This unit test is meant to validate https://github.com/dotnet/coreclr/pull/27676 \r\n\r\n@dotnet/crossgen-contrib ","Url":"https://github.com/dotnet/corert/pull/7869","RelatedDescription":"Closed or merged PR \"Adding signature matching unit test\" (#7869)"},{"Id":"521355526","IsPullRequest":true,"CreatedAt":"2019-11-12T08:01:33","Actor":"Dotnet-GitSync-Bot","Number":"7879","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @ts2do @elinor-fung","Url":"https://github.com/dotnet/corert/pull/7879","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7879)"},{"Id":"521113889","IsPullRequest":true,"CreatedAt":"2019-11-12T06:24:24","Actor":"Dotnet-GitSync-Bot","Number":"7878","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @stephentoub","Url":"https://github.com/dotnet/corert/pull/7878","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7878)"},{"Id":"520572011","IsPullRequest":true,"CreatedAt":"2019-11-10T14:20:44","Actor":"jkotas","Number":"7877","RawContent":null,"Title":"Update dependencies","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7877","RelatedDescription":"Closed or merged PR \"Update dependencies\" (#7877)"},{"Id":"520423064","IsPullRequest":true,"CreatedAt":"2019-11-09T19:45:59","Actor":"Dotnet-GitSync-Bot","Number":"7876","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jnm2 @rob313663 @CoffeeFlux","Url":"https://github.com/dotnet/corert/pull/7876","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7876)"},{"Id":"520311915","IsPullRequest":true,"CreatedAt":"2019-11-09T13:00:37","Actor":"Dotnet-GitSync-Bot","Number":"7875","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks","Url":"https://github.com/dotnet/corert/pull/7875","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7875)"},{"Id":"520020083","IsPullRequest":true,"CreatedAt":"2019-11-08T19:44:36","Actor":"jkotas","Number":"7874","RawContent":null,"Title":"Port CoreCLR change","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7874","RelatedDescription":"Closed or merged PR \"Port CoreCLR change\" (#7874)"},{"Id":"519847099","IsPullRequest":true,"CreatedAt":"2019-11-08T13:36:23","Actor":"Dotnet-GitSync-Bot","Number":"7873","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @TamarChristinaArm @tannergooding @CoffeeFlux @carlossanlop","Url":"https://github.com/dotnet/corert/pull/7873","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7873)"},{"Id":"519029005","IsPullRequest":true,"CreatedAt":"2019-11-08T06:54:52","Actor":"Dotnet-GitSync-Bot","Number":"7870","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @carlossanlop","Url":"https://github.com/dotnet/corert/pull/7870","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7870)"},{"Id":"519547667","IsPullRequest":true,"CreatedAt":"2019-11-08T06:54:33","Actor":"yowl","Number":"7872","RawContent":null,"Title":"Wasm: Fix compilation error for `build wasm`","State":"closed","Body":"`build wasm` was failing as mentioned at https://github.com/dotnet/corert/pull/7609#issuecomment-527250119.  Extend the `#if` to include `_WASM_` which allows compilation to succeed.","Url":"https://github.com/dotnet/corert/pull/7872","RelatedDescription":"Closed or merged PR \"Wasm: Fix compilation error for `build wasm`\" (#7872)"},{"Id":"519466012","IsPullRequest":false,"CreatedAt":"2019-11-07T19:28:54","Actor":"erherhh4herh","Number":"7871","RawContent":null,"Title":"build.cmd Setting build variables failed.","State":"open","Body":"Whenever I execute build.cmd from \"x64 Native Tools Command Prompt for VS 2017\" I get this message:\r\n\r\nChecking pre-requisites...\r\n\r\nThe system cannot find the batch label specified - CheckMSBuild\r\nSetting build variables failed.\r\n\r\nIf it makes any difference, I clone the repo using `git clone --recursive https://github.com/dotnet/corert.git`.\r\n\r\nI have cmake-3.16.0-rc3 installed, I am on windows 10 pro x64 1903, using visual studio 2017.\r\n\r\nAny help is greatly appreciated,\r\nerherhh4herh.","Url":"https://github.com/dotnet/corert/issues/7871","RelatedDescription":"Open issue \"build.cmd Setting build variables failed.\" (#7871)"},{"Id":"518713147","IsPullRequest":true,"CreatedAt":"2019-11-07T04:02:17","Actor":"Dotnet-GitSync-Bot","Number":"7868","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @elinor-fung","Url":"https://github.com/dotnet/corert/pull/7868","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7868)"},{"Id":"518273496","IsPullRequest":true,"CreatedAt":"2019-11-06T14:36:00","Actor":"Dotnet-GitSync-Bot","Number":"7867","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7867","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7867)"},{"Id":"517973637","IsPullRequest":true,"CreatedAt":"2019-11-05T21:39:36","Actor":"Dotnet-GitSync-Bot","Number":"7866","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding @JesperTreetop","Url":"https://github.com/dotnet/corert/pull/7866","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7866)"},{"Id":"517276028","IsPullRequest":true,"CreatedAt":"2019-11-05T19:15:32","Actor":"Dotnet-GitSync-Bot","Number":"7865","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @TamarChristinaArm","Url":"https://github.com/dotnet/corert/pull/7865","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7865)"},{"Id":"516882257","IsPullRequest":true,"CreatedAt":"2019-11-03T22:07:03","Actor":"Dotnet-GitSync-Bot","Number":"7864","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh","Url":"https://github.com/dotnet/corert/pull/7864","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7864)"},{"Id":"516869037","IsPullRequest":true,"CreatedAt":"2019-11-03T20:14:49","Actor":"Dotnet-GitSync-Bot","Number":"7863","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7863","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7863)"},{"Id":"516829077","IsPullRequest":true,"CreatedAt":"2019-11-03T18:21:29","Actor":"Dotnet-GitSync-Bot","Number":"7862","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7862","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7862)"},{"Id":"516781561","IsPullRequest":false,"CreatedAt":"2019-11-03T14:35:21","Actor":"josephmoresena","Number":"7860","RawContent":null,"Title":"Error compilling console app with System.Data.SqlClient on Linux","State":"closed","Body":"I'm getting the following error when I'm trying to compile a simple console app which connects to a Sql Server database in Ubuntu 19.10.\r\n\r\n`  /usr/bin/ld: obj/Debug/netcoreapp3.0/linux-x64/native/Proj.o: in function `System_Data_SqlClient_Interop_NetSecurityNative__ImportPrincipalName':\r\n  /__w/1/s/src/System.Data.Common/src/System/Data/Common/BooleanStorage.cs:180: undefined reference to `NetSecurityNative_ImportPrincipalName'\r\n  /usr/bin/ld: obj/Debug/netcoreapp3.0/linux-x64/native/Proj.o: in function `System_Data_SqlClient_Interop_NetSecurityNative__InitSecContext_0':\r\n  /__w/1/s/src/System.Data.Common/src/System/Data/Common/ByteStorage.cs:162: undefined reference to `NetSecurityNative_InitSecContextEx'`","Url":"https://github.com/dotnet/corert/issues/7860","RelatedDescription":"Closed issue \"Error compilling console app with System.Data.SqlClient on Linux\" (#7860)"},{"Id":"516817732","IsPullRequest":true,"CreatedAt":"2019-11-03T13:34:02","Actor":"Dotnet-GitSync-Bot","Number":"7861","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7861","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7861)"},{"Id":"516763323","IsPullRequest":true,"CreatedAt":"2019-11-03T00:42:36","Actor":"Dotnet-GitSync-Bot","Number":"7859","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks","Url":"https://github.com/dotnet/corert/pull/7859","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7859)"},{"Id":"516597160","IsPullRequest":true,"CreatedAt":"2019-11-02T14:00:46","Actor":"Dotnet-GitSync-Bot","Number":"7858","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7858","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7858)"},{"Id":"515535621","IsPullRequest":true,"CreatedAt":"2019-11-01T00:19:13","Actor":"MichalStrehovsky","Number":"7855","RawContent":null,"Title":"Disable multithreaded compilation","State":"closed","Body":"I won't have time to look into the race condition anytime soon. Fingers crossed that crossgen2 hits it in CoreCLR repo and there will be paid time available to investigate.","Url":"https://github.com/dotnet/corert/pull/7855","RelatedDescription":"Closed or merged PR \"Disable multithreaded compilation\" (#7855)"},{"Id":"515738596","IsPullRequest":true,"CreatedAt":"2019-11-01T00:19:00","Actor":"Dotnet-GitSync-Bot","Number":"7857","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7857","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7857)"},{"Id":"515578359","IsPullRequest":true,"CreatedAt":"2019-10-31T20:49:12","Actor":"Dotnet-GitSync-Bot","Number":"7856","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @benaadams","Url":"https://github.com/dotnet/corert/pull/7856","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7856)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"526328247","IsPullRequest":false,"CreatedAt":"2019-11-21T02:36:12","Actor":"tttttvf","Number":"3948","RawContent":null,"Title":"Project build operation","State":"open","Body":"I found a phenomenon yesterday, but I seem to submit it to another team\r\n\r\nhttps://github.com/aspnet/AspNetCore/issues/17255\r\n\r\nThis is still the case with the command 'dotnet build'","Url":"https://github.com/dotnet/sdk/issues/3948","RelatedDescription":"Open issue \"Project build operation\" (#3948)"},{"Id":"526289307","IsPullRequest":true,"CreatedAt":"2019-11-21T01:41:07","Actor":"dotnet-maestro[bot]","Number":"3947","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191120.3\r\n- **Date Produced**: 11/20/2019 11:20 PM\r\n- **Commit**: c16a31965d1ff8c4564d420610e2991265e77501\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3947","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3947)"},{"Id":"526209758","IsPullRequest":true,"CreatedAt":"2019-11-20T22:39:17","Actor":"dotnet-maestro[bot]","Number":"3946","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191119.2\r\n- **Date Produced**: 11/19/2019 6:14 PM\r\n- **Commit**: e34d933e18ba1cd393bbafcb6018e0f858d3e89e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19569.2\r\n\r\n[marker]: <> (End:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3946","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#3946)"},{"Id":"526099229","IsPullRequest":true,"CreatedAt":"2019-11-20T21:11:50","Actor":"dotnet-maestro[bot]","Number":"3945","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:df8a2755-bec9-40dc-b710-08d7368af630)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191119.2\r\n- **Date Produced**: 11/19/2019 6:14 PM\r\n- **Commit**: e34d933e18ba1cd393bbafcb6018e0f858d3e89e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19569.2\r\n\r\n[marker]: <> (End:df8a2755-bec9-40dc-b710-08d7368af630)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3945","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#3945)"},{"Id":"525952675","IsPullRequest":true,"CreatedAt":"2019-11-20T17:22:18","Actor":"mmitche","Number":"3944","RawContent":null,"Title":"[release/3.0.1xx] Update branding for 3.0.102","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3944","RelatedDescription":"Open PR \"[release/3.0.1xx] Update branding for 3.0.102\" (#3944)"},{"Id":"525871440","IsPullRequest":false,"CreatedAt":"2019-11-20T15:21:21","Actor":"NicolasDorier","Number":"3943","RawContent":null,"Title":"ApplicationIcon does not work when cross building win-x64 from Linux","State":"open","Body":"# How to reproduce\r\n\r\nOn linux (using Buster 3.0.101):\r\n```bash\r\ndotnet new console\r\n# Add myicon.ico to the project\r\ndotnet publish --runtime win-x64 -p:ApplicationIcon=myicon.ico\r\n```\r\nGrab `bin/Debug/netcoreapp3.0/publish/*.exe`\r\nNotice that the executable does not show any icon on windows explorer.\r\nThe same process on windows works as expected.\r\n\r\n# Expected\r\n\r\nThe executable should have the application icon properly set.\r\n\r\n# Version\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.101\r\n Commit:    bc5f8df0f5\r\n\r\nRuntime Environment:\r\n OS Name:     debian\r\n OS Version:  10\r\n OS Platform: Linux\r\n RID:         debian.10-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.101/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.1\r\n  Commit:  32085cbc72\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/dotnet/sdk/issues/3943","RelatedDescription":"Open issue \"ApplicationIcon does not work when cross building win-x64 from Linux\" (#3943)"},{"Id":"525867163","IsPullRequest":false,"CreatedAt":"2019-11-20T15:14:35","Actor":"JonasSamuelsson","Number":"3942","RawContent":null,"Title":"dotnet tool restore should support version ranges and/or wildcards","State":"open","Body":"I want to use a `dotnet-tools.json` manifest file for defining local tools used in my cicd pipelines.\r\n\r\nFrom what I can tell the manifest only accepts the exact version, I would like to specify a range or use wildcards so I always use the latest version, just like when installing global tools.\r\n\r\nExample\r\n``` json\r\n{\r\n    \"version\": 1,\r\n    \"isRoot\": true,\r\n    \"tools\": {\r\n      \"dotnetsay\": {\r\n        \"version\": \"1.*\",\r\n        \"commands\": [\r\n          \"dotnetsay\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n```","Url":"https://github.com/dotnet/sdk/issues/3942","RelatedDescription":"Open issue \"dotnet tool restore should support version ranges and/or wildcards\" (#3942)"},{"Id":"525789259","IsPullRequest":true,"CreatedAt":"2019-11-20T14:57:02","Actor":"dotnet-maestro[bot]","Number":"3939","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191119.6\r\n- **Date Produced**: 11/19/2019 10:31 PM\r\n- **Commit**: c29c916a0d1736522cfd944fcc06ead33b5e27db\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19569.6\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19569.6\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19569.6\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3939","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3939)"},{"Id":"525815749","IsPullRequest":false,"CreatedAt":"2019-11-20T13:49:56","Actor":"Jakst","Number":"3941","RawContent":null,"Title":"Manage sources with dotnet cli","State":"open","Body":"Dotnet SDK does not currently support managing sources through the cli. This is problematic because it forces users of other platforms than Windows to install mono in order to run nuget.exe. It works okay, but the nuget cli, being designed for windows, feels alien and and has a cumbersome and error prone install process.\r\n\r\nAnother consequence of this is that we have to jump through hoops when restoring private packages in CI environments - either starting out with a mono-enabled environment and copying over packages to the final build, or editing the nuget.config file by inserting config in a build step in order to use the dotnet cli.\r\n\r\nAll of this makes developing and running dotnet core in non-windows environments a second-class experience. There is more to it than managing private sources, but this is the use case that seems to be the most common and something that users trying to adopt dotnet-core in a lot of corporate environments will battle with early on.\r\n\r\nAre there any plans for adopting the feature of nuget.exe in dotnet cli?","Url":"https://github.com/dotnet/sdk/issues/3941","RelatedDescription":"Open issue \"Manage sources with dotnet cli\" (#3941)"},{"Id":"525811976","IsPullRequest":false,"CreatedAt":"2019-11-20T13:43:21","Actor":"clstr","Number":"3940","RawContent":null,"Title":"NETSDK1045 Can't build 3.0 applications in CLI or VS2019 16.3.9","State":"open","Body":"I had VS2019 installed, but I was still building dotnet applications 2.1, i decided to try out dotnet 3.0 and Visual Studio 2019 lets me create a 3.0 template with React with Redux, I try to run the project it fails stating, even trying a simple console app gives the same build error.\r\n\r\n\"An error occurred attempting to determine the process id of dotnet.exe which is hosting your application. a task was canceled\"\r\n\r\nIn the project GUI properties Target Framework is blank and my only options are\r\n\r\n.Net Core 1.0\r\n.Net Core 1.1\r\n.Net Core 2.0\r\n.Net Core 2.1\r\n\r\nI even went out and downloaded the 3.0.101 SDK x64, still blank.\r\n\r\n![vs2019](https://user-images.githubusercontent.com/1195526/69243492-319ffd00-0b71-11ea-931c-10ae5c0cb05b.png)\r\n\r\n\r\nI tried building the application in CLI, and i get a different message\r\n\r\ndotnet build\r\n```\r\nMicrosoft (R) Build Engine version 16.2.32702+c4012a063 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nC:\\Program Files\\dotnet\\sdk\\2.1.802\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.TargetFrameworkInference.targets(137,5): error NETSDK1045: The current .NET SDK does not support targeting .NET Core 3.0.  Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 3.0. [C:\\Users\\palomins\\source\\repos\\DotNet3ConsoleApp\\DotNet3ConsoleApp\\DotNet3ConsoleApp.csproj]\r\n\r\nBuild FAILED.\r\n```\r\n\r\ndotnet --info\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.802\r\n Commit:    177d0b2525\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.802\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.1\r\n  Commit:  32085cbc72\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.508 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.509 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.107 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nI have tried uninstalling/reinstalling the 3.0SDKs and Visual Studio 2019, I am not sure what else to try.\r\n\r\nThe only thing i see is when i build via cli i see something about this path being referenced for some reason\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\2.1.802\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.TargetFrameworkInference.targets\r\n```\r\n\r\nand in the info printout\r\n\r\n```\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.802\\\r\n```\r\nBut i have no idea how to change the Base Path, and i don't think i'm using any global.json files in any of my projects.","Url":"https://github.com/dotnet/sdk/issues/3940","RelatedDescription":"Open issue \"NETSDK1045 Can't build 3.0 applications in CLI or VS2019 16.3.9\" (#3940)"},{"Id":"525744307","IsPullRequest":false,"CreatedAt":"2019-11-20T11:28:29","Actor":"artecoop","Number":"3938","RawContent":null,"Title":"The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.","State":"open","Body":"On my fresh install of Fedora 30, I installed donet-sdk 2.2 (I need to stick with this version right now) as per \r\nhttps://dotnet.microsoft.com/download/linux-package-manager/sdk-2.2.207\r\n\r\nthen verified with donet --info\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.402\r\n Commit:    c7f2f96116\r\n\r\nRuntime Environment:\r\n OS Name:     fedora\r\n OS Version:  30\r\n OS Platform: Linux\r\n RID:         fedora.30-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.2.402/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.8\r\n  Commit:  b9aa1abc51\r\n\r\n.NET Core SDKs installed:\r\n  2.2.402 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.NETCore.App 2.2.8 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nNow I'm creating a simple app\r\n```\r\nmkidr foo-2.2\r\ncd foo-2.2\r\ndotnet new web\r\nThe template \"ASP.NET Core Empty\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on /folder/foo-2.2/foo-2.2.csproj...\r\n  Restore completed in 1.08 sec for  /folder/foo-2.2/foo-2.2.csproj.\r\n\r\nRestore succeeded.\r\n```\r\n\r\nPerfect. Now without any editing do `dotnet run'\r\nVoilà:\r\n```\r\nIt was not possible to find any compatible framework version\r\nThe specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n  - Check application dependencies and target a framework version installed at:\r\n      /usr/share/dotnet/\r\n  - Installing .NET Core prerequisites might help resolve this problem:\r\n      https://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n  - The .NET Core framework and SDK can be installed from:\r\n      https://aka.ms/dotnet-download\r\n```\r\n\r\nWHY?\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3938","RelatedDescription":"Open issue \"The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\" (#3938)"},{"Id":"525399962","IsPullRequest":false,"CreatedAt":"2019-11-20T03:24:59","Actor":"niteshrestha","Number":"3937","RawContent":null,"Title":"[dotnet tool] pwsh won't run resulting in command or file was not found","State":"open","Body":"# Steps to reproduce\r\nInstall PowerShell Core 6 as dotnet global tool\r\n```powershell\r\ndotnet tool install --global PowerShell\r\n```\r\nrun\r\n```powershell\r\npwsh\r\n```\r\n# Expected behavior\r\nPowerShell Core 6 starts\r\n\r\n# Actual behavior\r\n![image](https://user-images.githubusercontent.com/4751915/69206444-cd7f3800-0b74-11ea-888e-662f13b1362b.png)\r\n\r\n# Environment data\r\nOS: Windows 10 Enterprise\r\nBuild: 18363.476\r\nVersion: 1909\r\ndotnet version: 3.0.100","Url":"https://github.com/dotnet/sdk/issues/3937","RelatedDescription":"Open issue \"[dotnet tool] pwsh won't run resulting in command or file was not found\" (#3937)"},{"Id":"525363618","IsPullRequest":false,"CreatedAt":"2019-11-20T01:28:22","Actor":"wli3","Number":"3936","RawContent":null,"Title":"Do not expand existing environment variable on PATH when adding global tools to PATH","State":"open","Body":"Directly set registry in Windows using \"[DoNotExpandEnvironmentNames ](https://docs.microsoft.com/en-us/dotnet/api/microsoft.win32.registryvalueoptions?view=netframework-4.8)\"","Url":"https://github.com/dotnet/sdk/issues/3936","RelatedDescription":"Open issue \"Do not expand existing environment variable on PATH when adding global tools to PATH\" (#3936)"},{"Id":"523739199","IsPullRequest":false,"CreatedAt":"2019-11-19T20:38:49","Actor":"TheBuzzSaw","Number":"3920","RawContent":null,"Title":"Does /p:OutputType=WinExe propagate to dependencies?","State":"closed","Body":"I am attempting to build a project with overridden properties.\r\n\r\n    dotnet publish MyProject.csproj -f netcoreapp3.0 -c Release -r win-x86 /p:CopyOutputSymbolsToPublishDirectory=false /p:OutputType=WinExe\r\n\r\nHowever, it results in a build error in a classlib dependency.\r\n\r\n    error CS5001: Program does not contain a static 'Main' method suitable for an entry point\r\n\r\nI can only assume that the `/p:OutputType=WinExe` is propagating down and overriding their properties too. Is there way to stop that? Can I have that override only apply to the target project?\r\n\r\nOddly enough, if I build without `/p:OutputType=WinExe` and then immediately build _with_ `/p:OutputType=WinExe`, it succeeds. (The dependencies are built and cached, I guess.)","Url":"https://github.com/dotnet/sdk/issues/3920","RelatedDescription":"Closed issue \"Does /p:OutputType=WinExe propagate to dependencies?\" (#3920)"},{"Id":"525225946","IsPullRequest":false,"CreatedAt":"2019-11-19T19:46:41","Actor":"avifatal","Number":"3935","RawContent":null,"Title":"A fatal error was encountered. The library 'libhostpolicy.so' required to execute the application was not found in '/app/'.","State":"open","Body":"Hi,\r\nI am getting the following error when deploying donet core 3.0 with docker:\r\n`A fatal error was encountered. The library 'libhostpolicy.so' required to execute the application was not found in '/app/'.`\r\n\r\nThis is my Dockerfile:\r\n`\r\nFROM mcr.microsoft.com/dotnet/core/aspnet:3.0-buster-slim AS base\r\nWORKDIR /app\r\nEXPOSE 8080\r\n\r\nFROM mcr.microsoft.com/dotnet/core/sdk:3.0-buster AS build\r\nWORKDIR /src\r\nCOPY [\"TestCloudRun.csproj\", \"TestCloudRun/\"]\r\nRUN dotnet restore \"TestCloudRun/TestCloudRun.csproj\"\r\nCOPY . .\r\nWORKDIR \"/src/TestCloudRun\"\r\nRUN dotnet build \"TestCloudRun.csproj\" -c Release -o /app/build\r\n\r\nFROM build AS publish\r\nRUN dotnet publish \"TestCloudRun.csproj\" -c Release -o /app/publish\r\n\r\nFROM base AS final\r\nWORKDIR /app\r\nCOPY --from=publish /app/publish .\r\nENTRYPOINT [\"dotnet\", \"TestCloudRun.dll\"] \r\n`\r\nThis is the repo: https://github.com/avifatal/core3deployment-issue\r\n\r\nI should mention that I'm deploying to google cloud run.\r\n\r\nThanks\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3935","RelatedDescription":"Open issue \"A fatal error was encountered. The library 'libhostpolicy.so' required to execute the application was not found in '/app/'.\" (#3935)"},{"Id":"525208385","IsPullRequest":true,"CreatedAt":"2019-11-19T19:13:27","Actor":"wli3","Number":"3934","RawContent":null,"Title":"Test CI Helix simple queue","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3934","RelatedDescription":"Open PR \"Test CI Helix simple queue\" (#3934)"},{"Id":"524995140","IsPullRequest":true,"CreatedAt":"2019-11-19T15:25:18","Actor":"dotnet-maestro[bot]","Number":"3933","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191118.10\r\n- **Date Produced**: 11/19/2019 1:15 AM\r\n- **Commit**: 303e0fac8703c7147c9e1f1046082c8db4fb66fa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19568.10\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19568.10\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19568.10\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3933","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3933)"},{"Id":"524824621","IsPullRequest":true,"CreatedAt":"2019-11-19T09:06:00","Actor":"dotnet-maestro[bot]","Number":"3932","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191118.2\r\n- **Date Produced**: 11/19/2019 6:36 AM\r\n- **Commit**: 93ee64d467eeccd7006e370e78cf6dae31c1f3e2\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3932","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3932)"},{"Id":"524739852","IsPullRequest":true,"CreatedAt":"2019-11-19T04:36:00","Actor":"dotnet-maestro[bot]","Number":"3931","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191118.1\r\n- **Date Produced**: 11/19/2019 1:53 AM\r\n- **Commit**: 2b973fe4eaca6e181cf34e946a8878da3feaf07b\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3931","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3931)"},{"Id":"524700152","IsPullRequest":false,"CreatedAt":"2019-11-19T00:30:04","Actor":"cuichenli","Number":"3930","RawContent":null,"Title":"Can I safely remove the runtime folder generated by dotnet publish ?","State":"open","Body":"I am building one pwsh core binary module in c# and want to ship it to Linux and Windows. Found that the `publish` command is generating a large runtime directory. So I am curious can I delete it before publishing it to NuGet given that I know the machines will run this module already have pwsh installed. Otherwise, can I specify what runtimes should be generated in this directory? Thanks!","Url":"https://github.com/dotnet/sdk/issues/3930","RelatedDescription":"Open issue \"Can I safely remove the runtime folder generated by dotnet publish ?\" (#3930)"},{"Id":"524221544","IsPullRequest":false,"CreatedAt":"2019-11-18T23:18:57","Actor":"yunwei00q","Number":"3924","RawContent":null,"Title":"Run a 3.0 project with SDK 3.1.100-rtm-014727, restore failed with error NU1102: Unable to find package Microsoft.AspNetCore.App.Ref with version (= 3.0.1) and package Microsoft.NETCore.App.Host.win-x64 with version (= 3.0.1).","State":"closed","Body":"### Repro Steps:\r\n1. Only install SDK [3.1.100-rtm-014727](\\\\vsufile\\patches\\sign\\NET\\CORE_BUILDS\\3.1.X\\3.1.0\\final\\3.1.100-rtm-014727)\r\n2. Run a 3.0 project\r\n\r\n### Expected: \r\nRestore and build successfully.\r\n\r\n### Actual: \r\nRestore failed with error NU1102:\r\n![image](https://user-images.githubusercontent.com/57380211/69036546-17efa000-0a21-11ea-8b6c-35116aaad1f9.png)\r\nerror NU1102: Unable to find package Microsoft.AspNetCore.App.Ref with version (= 3.0.1)\r\nerror NU1102:   - Found 12 version(s) in nuget.org [ Nearest version: 3.1.0-preview1.19508.20 ]\r\nerror NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages\r\nerror NU1102: Unable to find package Microsoft.NETCore.App.Host.win-x64 with version (= 3.0.1)\r\nerror NU1102:   - Found 10 version(s) in nuget.org [ Nearest version: 3.1.0-preview1.19506.1 ]\r\nerror NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages\r\n\r\nNote: \r\n1. If run a 2.x project, restore and build successfully, run shows as below:\r\n```\r\nIt was not possible to find any compatible framework version\r\nThe framework 'Microsoft.NETCore.App', version '2.2.0' was not found.\r\n  - The following frameworks were found:\r\n      3.1.0 at [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nYou can resolve the problem by installing the specified framework and/or SDK.\r\nThe specified framework can be found at:\r\n  - https://aka.ms/dotnet-core-applaunch?framework=Microsoft.NETCore.App&framework_version=2.2.0&arch=x64&rid=win10-x64\r\n```\r\n2. If install .net core 3.0 Runtime, it also failed with error NU1102 as above.\r\n3.  For VS Master 29517.7(16.5.0 Preview 2.0), install or uninstall .net core 3.0 Runtime, it can restore and build successfully.\r\n\r\n### Dotnet --info:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3924","RelatedDescription":"Closed issue \"Run a 3.0 project with SDK 3.1.100-rtm-014727, restore failed with error NU1102: Unable to find package Microsoft.AspNetCore.App.Ref with version (= 3.0.1) and package Microsoft.NETCore.App.Host.win-x64 with version (= 3.0.1).\" (#3924)"},{"Id":"524533820","IsPullRequest":false,"CreatedAt":"2019-11-18T21:53:21","Actor":"wli3","Number":"3928","RawContent":null,"Title":"Run GivenThatWeWantToVerifyPCLProjectReferenceCompat in helix","State":"closed","Body":"The current work around is to run this test in build machine. And run everything else in helix.\r\n\r\nThis test uses _profile_, so even when `Microsoft.NETFramework.ReferenceAssemblies` is reference, it still asks for 4.5 and 4.6 developer pack.\r\n\r\nhttps://github.com/dotnet/sdk/blob/07618e7bb55b2c1c4e93b08f4f327fe765af93e1/src/Tests/Microsoft.NET.Build.NonHelix.Tests/GivenThatWeWantToVerifyPCLProjectReferenceCompat.cs#L22","Url":"https://github.com/dotnet/sdk/issues/3928","RelatedDescription":"Closed issue \"Run GivenThatWeWantToVerifyPCLProjectReferenceCompat in helix\" (#3928)"},{"Id":"524552134","IsPullRequest":false,"CreatedAt":"2019-11-18T18:52:41","Actor":"sebastienros","Number":"3929","RawContent":null,"Title":"Exception at startup with latest SDK","State":"open","Body":"Starting an ASP.NET application targeting netcoreapp5.0 with recent SDKs (since last week between Wednesday 13th and Thursday 14th) triggers:\r\n\r\n```\r\nJob failed at runtime:\r\nUnhandled exception. System.IO.FileLoadException: Could not load file or assembly 'System.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. The located assembly's manifest definition does not match the assembly reference. (0x80131040)\r\nFile name: 'System.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n```\r\n\r\nLatest known version to work for me is:\r\n\r\n```\r\ne6edf2d93f8491a21aa4b0b32e2a55dacb8ef9c2\r\n5.0.100-alpha1-015721\r\n```\r\n\r\nCould repro with at least `5.0.100-alpha1-015731` but I don't have the list of versions in between to be more precise.","Url":"https://github.com/dotnet/sdk/issues/3929","RelatedDescription":"Open issue \"Exception at startup with latest SDK\" (#3929)"},{"Id":"524353538","IsPullRequest":true,"CreatedAt":"2019-11-18T14:57:12","Actor":"dotnet-maestro[bot]","Number":"3927","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191117.2\r\n- **Date Produced**: 11/17/2019 4:55 PM\r\n- **Commit**: 928efaa081ffd17b37f6c662fee44775f2d0b90f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19567.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19567.2\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19567.2\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3927","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3927)"},{"Id":"524295106","IsPullRequest":false,"CreatedAt":"2019-11-18T11:07:25","Actor":"vitek-karas","Number":"3926","RawContent":null,"Title":"Unify Private and ExcludeAssets behavior for Project/Package references","State":"open","Body":"Currently there are two distinct ways to mark assets from a reference as non-private (the intent is to use the reference for compilation, but omit it when copying assemblies to the output and omit it in generated `.deps.json`).\r\n\r\nFor `ProjectReference` the right way to do this is to specify `Private=false` like this:\r\n``` XML\r\n<ProjectReference Include=\"MyProj\">\r\n  <Private>false</Private>\r\n</ProjectReference>\r\n```\r\n\r\nFor `PackageReference` the right way to do this is to specify `ExcludeAssets=runtime` like this:\r\n``` XML\r\n<PackageReference Include=\"MyPackage\">\r\n  <ExcludeAssets>runtime</ExcludeAssets>\r\n</PackageReference>\r\n```\r\n\r\nUnfortunately if the referenced project `MyProj` references a package - for example `MyDepPackage`, the `Private=false` will have no effect on it and the `MyDepPackage.dll` will be copied to the output (and `.deps.json`) regardless. The only way I was able to find to get this to work is to specify both settings for project references like this:\r\n``` XML\r\n<ProjectReference Include=\"MyProj\">\r\n  <Private>false</Private>\r\n  <ExcludeAssets>runtime</ExcludeAssets>\r\n</ProjectReference>\r\n```\r\n\r\nThis is obviously a bit confusing and hard to get right. It would be nice if we could unify this somehow. Ideally if package references would also support `Private=false` so that there would be a single unified way to do this, or at least if `Private=false` on the project reference would imply `ExcludeAssets=runtime` on its children.\r\n\r\nThat said, `Private=false` is less expressive than `ExcludeAssets` - so maybe unifying this the other way round (supporting `ExcludeAssets` on project references) would be a better solution.","Url":"https://github.com/dotnet/sdk/issues/3926","RelatedDescription":"Open issue \"Unify Private and ExcludeAssets behavior for Project/Package references\" (#3926)"},{"Id":"524235344","IsPullRequest":false,"CreatedAt":"2019-11-18T09:19:02","Actor":"schmitch","Number":"3925","RawContent":null,"Title":"PublishSingleFile=true does not work correctly in a multi project build","State":"open","Body":"Currently when having the following project structure:\r\n\r\n1. ProjectWinService\r\n2. ProjectWinService.Base (TargetFrameworks: `netcoreapp3.0;netstandard2.0`, OT: EXE)\r\n3. ProjectWinService.Api (TargetFrameworks: `netstandard2.0;netstandard2.1`, OT: Library)\r\n4. ProjectOtherExe\r\n\r\nWhile Project 1. is the main build and has a dependency on 2. and 3. it will always fail with the following:\r\n\r\n```\r\nerror NETSDK1097: Das Veröffentlichen einer Anwendung in einer einzelnen Datei ohne Angabe eines RuntimeIdentifier wird nicht unterstützt. Geben Sie entweder einen RuntimeIdentifier an, oder legen Sie PublishSingleFile auf FALSE fest. [ProjectWinService.Base]\r\n```\r\n\r\nthe only solution we have now is to actually split the project further and make the Base project a full Api project while having another Exe Project.\r\n\r\nwouldn't it be possible to infer the runtime identifier or better have multiple OutputTypes so that it better works in that scenario?","Url":"https://github.com/dotnet/sdk/issues/3925","RelatedDescription":"Open issue \"PublishSingleFile=true does not work correctly in a multi project build\" (#3925)"},{"Id":"524063075","IsPullRequest":false,"CreatedAt":"2019-11-17T23:02:58","Actor":"wli3","Number":"3923","RawContent":null,"Title":"Different result when running test in mac temp directory","State":"open","Body":"for build 5.0.100-alpha1-015580 at least, build \"TransitiveFrameworkReference\" test asset from user directory vs temp (something like `/var/folders/5p/_vgfqvq12t3c1w_d4lm_56fw0000gp/T/dotnetSdkTests/03n0u4su.icg`) directory result in different output. \r\n\r\n`TransitiveFrameworkReference/bin/Debug/netcoreapp3.0/TransitiveFrameworkReference.runtimeconfig.json` runtimeOptions.framework.name is Microsoft.AspNetCore.App(correct) in user directory vs Microsoft.NETCore.App(wrong) in temp directly. \r\n\r\nThis discovered during Helix tests. It is not only specific to this test. After moving running test from temp directly to a user directly, about 20 tests are fixed. We should get to the bottom of this, since running our product against different locations get different results is bad","Url":"https://github.com/dotnet/sdk/issues/3923","RelatedDescription":"Open issue \"Different result when running test in mac temp directory\" (#3923)"},{"Id":"523982709","IsPullRequest":true,"CreatedAt":"2019-11-17T14:57:54","Actor":"dotnet-maestro[bot]","Number":"3922","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191116.1\r\n- **Date Produced**: 11/16/2019 3:11 PM\r\n- **Commit**: 2c6db6ee8d8adeb2e8ccc1485e6780635890e419\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19566.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19566.1\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19566.1\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3922","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3922)"},{"Id":"523842494","IsPullRequest":true,"CreatedAt":"2019-11-16T14:56:58","Actor":"dotnet-maestro[bot]","Number":"3921","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191115.1\r\n- **Date Produced**: 11/15/2019 4:06 PM\r\n- **Commit**: ccb393e43ad12d84d3ce4ccdd931a0bcd05eacb1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19565.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19565.1\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19565.1\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3921","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3921)"},{"Id":"523676022","IsPullRequest":true,"CreatedAt":"2019-11-16T03:47:18","Actor":"dotnet-maestro[bot]","Number":"3919","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191115.2\r\n- **Date Produced**: 11/15/2019 5:59 PM\r\n- **Commit**: 65f04fb6db7a5e198d05dbebd5c4ad21eb018f89\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3919","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3919)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"523579400","IsPullRequest":false,"CreatedAt":"2019-11-15T16:51:27","Actor":"MichaelSimons","Number":"141","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Framework","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Framework\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #451](https://github.com/microsoft/dotnet-framework-docker/issues/451)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.8`. These are tags that are supported on multiple operating systems and versions, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1803 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.8-windowsservercore-1803` or `mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-1803`.","Url":"https://github.com/dotnet/announcements/issues/141","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Framework\" (#141)"},{"Id":"523578215","IsPullRequest":false,"CreatedAt":"2019-11-15T16:49:04","Actor":"MichaelSimons","Number":"140","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Core","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Core\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Core container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1469](https://github.com/dotnet/dotnet-docker/issues/1469)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `3.0`, `3.0.0`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server, version 1803 images (even though it is no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:3.0-nanoserver-1803`.","Url":"https://github.com/dotnet/announcements/issues/140","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Core\" (#140)"},{"Id":"522994983","IsPullRequest":false,"CreatedAt":"2019-11-14T17:15:08","Actor":"leecow","Number":"139","RawContent":null,"Title":".NET Core 3.1.0 Preview 3","State":"open","Body":".NET Core 3.1.0 Preview 3 is available and https://github.com/dotnet/core/issues/3809 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview3.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-3/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-3/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 3, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/139","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 3\" (#139)"},{"Id":"522864668","IsPullRequest":false,"CreatedAt":"2019-11-14T13:37:28","Actor":"TaraOverfield","Number":"138","RawContent":null,"Title":"November 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on November 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework November 13, 2019, Update for .NET Framework 4.8](https://devblogs.microsoft.com/dotnet/net-framework-november-13-2019-update-for-net-framework-4-8/)\r\n* [.NET Framework November 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-november-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.14 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.14/2.1.14.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.8/2.2.8.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\n* .NET Core 3.0.1 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.1/3.0.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.0) )\r\n\r\nA discussion issue is available at [core/3848](https://github.com/dotnet/core/issues/3848)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/138","RelatedDescription":"Open issue \"November 2019 .NET Updates\" (#138)"},{"Id":"522488807","IsPullRequest":false,"CreatedAt":"2019-11-13T21:41:06","Actor":"MichaelSimons","Number":"137","RawContent":null,"Title":".NET Framework Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Framework Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Framework Docker images have been published for Server Core, version 1909.  \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-framework-docker#448](https://github.com/microsoft/dotnet-framework-docker/issues/448)\r\n\r\n## Details \r\n\r\n* [dotnet-framework-docker#447](https://github.com/microsoft/dotnet-framework-docker/pull/447) \r\n\r\n.NET Framework tags containing the substring `windowsservercore-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-framework). \r\n\r\n.NET Framework multi-arch tags, such as `4.8`, have been updated to use `windowsservercore-1909` images if your host is Windows Server 1909 or higher. \r\n\r\n### Impacted Repos \r\n\r\n* [dotnet/framework/sdk](https://hub.docker.com/_/microsoft-dotnet-framework-sdk/): .NET Framework SDK \r\n* [dotnet/framework/aspnet](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): ASP.NET Runtime  \r\n* [dotnet/framework/wcf](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): Windows Communication Foundation \r\n* [dotnet/framework/runtime](https://hub.docker.com/_/microsoft-dotnet-framework-runtime/): .NET Framework Runtime\r\n* [dotnet/framework/samples](https://hub.docker.com/_/microsoft-dotnet-framework-samples/): .NET Framework Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/137","RelatedDescription":"Open issue \".NET Framework Docker images support for Windows Server, version 1909\" (#137)"},{"Id":"521830642","IsPullRequest":false,"CreatedAt":"2019-11-12T22:05:51","Actor":"MichaelSimons","Number":"136","RawContent":null,"Title":".NET Core Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Core Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Core Docker images have been published for Nano Server, version 1909. \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-docker#1460](https://github.com/dotnet/dotnet-docker/issues/1460)\r\n## Details\r\n\r\n* [dotnet-docker#1457](https://github.com/dotnet/dotnet-docker/pull/1457)\r\n\r\n.NET Core tags containing the substring `nanoserver-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-core).\r\n\r\n.NET Core multi-arch tags, such as `3.0`, have been updated to use `nanoserver-1909` images if your host is Windows Server 1909 or higher.\r\n\r\n### Impacted Repos\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk/): .NET Core SDK\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): ASP.NET Core Runtime\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime/): .NET Core Runtime\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples/): .NET Core Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/136","RelatedDescription":"Open issue \".NET Core Docker images support for Windows Server, version 1909\" (#136)"},{"Id":"520243813","IsPullRequest":false,"CreatedAt":"2019-11-08T21:33:12","Actor":"CESARDELATORRE","Number":"135","RawContent":null,"Title":"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)","State":"open","Body":"This week (coinciding with Microsoft Ignite 2019) we announced the release of **ML.NET 1.4 GA**. \r\nThere are many new features such as:\r\n\r\n- **New Deep Learning Image Classifier (GA):** GPU support for training and inference Image Classifier ML models.\r\n\r\n- **Database Loader  (GA):** You can train your model with data directly from any relational database supported by System.Data.\r\n\r\n- **Enhanced for .NET Core 3.0  (GA):** Performance improvements thanks to hardware intrinsics feature in .NET Core 3.0.\r\n\r\n- **PredictionEnginePool for scalable deployments (GA):** Recommended approach for multi-threaded scalable apps such as ASP.NET Core apps/services and Azure Functions\r\n\r\n- **ML.NET and .NET support in Jupyter notebooks:**  You can now run any .NET code (C# / F#) in Jupyter notebooks and therefore run ML.NET code in it as well. Great for exploring and documenting model training experiments, data distribution exploration, data cleaning, plotting data charts, learning scenarios such as ML.NET courses, hands-on-labs and quizzes, etc.\r\n\r\nSee details in the following **Blog Posts**:\r\n\r\n- [Announcing ML.NET 1.4 general availability (Machine Learning for .NET)](https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-4-global-availability-machine-learning-for-net/)\r\n\r\n- [Using ML.NET in Jupyter notebooks](https://devblogs.microsoft.com/cesardelatorre/using-ml-net-in-jupyter-notebooks/)\r\n\r\n- [.NET Core with Jupyter Notebooks](https://devblogs.microsoft.com/dotnet/net-core-with-juypter-notebooks-is-here-preview-1/)\r\n","Url":"https://github.com/dotnet/announcements/issues/135","RelatedDescription":"Open issue \"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)\" (#135)"},{"Id":"517169249","IsPullRequest":false,"CreatedAt":"2019-11-04T13:57:09","Actor":"leecow","Number":"134","RawContent":null,"Title":".NET Core 3.1.0 Preview 2","State":"open","Body":".NET Core 3.1.0 Preview 2 is available and https://github.com/dotnet/core/issues/3744 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview2.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-2/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-2/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 2, either responding to https://github.com/dotnet/core/issues/3744, creating a new issue or creating a new issue in one of the following repos:\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/134","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 2\" (#134)"},{"Id":"514753283","IsPullRequest":false,"CreatedAt":"2019-10-30T15:14:43","Actor":"jaredpar","Number":"133","RawContent":null,"Title":"Repository Consolidation Timeline","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27549.*\r\n\r\nAs we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setupmoves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM PST on November 13th. We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository.","Url":"https://github.com/dotnet/announcements/issues/133","RelatedDescription":"Open issue \"Repository Consolidation Timeline\" (#133)"},{"Id":"513963125","IsPullRequest":false,"CreatedAt":"2019-10-29T14:32:55","Actor":"mthalman","Number":"132","RawContent":null,"Title":"Release of Alpine 3.10 Docker images","State":"open","Body":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)","Url":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Open issue \"Release of Alpine 3.10 Docker images\" (#132)"},{"Id":"508132491","IsPullRequest":false,"CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Number":"131","RawContent":null,"Title":".NET Core 3.1.0 Preview 1","State":"open","Body":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 1\" (#131)"},{"Id":"506832844","IsPullRequest":false,"CreatedAt":"2019-10-14T19:26:10","Actor":"terrajobst","Number":"130","RawContent":null,"Title":".NET Core 3.0 concludes the .NET Framework API porting project","State":"open","Body":"We started in .NET Core 1.0 with a very minimal API set that only included \\~18K of the .NET Framework APIs. With [.NET Standard 2.0](https://devblogs.microsoft.com/dotnet/announcing-net-standard-2-0/), we tried to make it much more viable to share code between .NET Framework, .NET Core, and Xamarin which resulted in approximately 38K .NET Frameworks APIs being available in .NET Core 2.0. We also built the [Windows Compatibility Pack](https://devblogs.microsoft.com/dotnet/announcing-the-windows-compatibility-pack-for-net-core/) which made another 21K .NET Framework APIs available to .NET Core, resulting in almost 60K additional APIs. And in .NET Core 3.0 we added WPF and WinForms, which increased the number of .NET Framework APIs ported to .NET Core to over 120k, which is more than half of all .NET Framework APIs.\r\n\r\nIt’s also worth pointing out that we added about 62K APIs to .NET Core that don’t exist in .NET Framework. If we compare their total number of APIs, .NET Core has about 80% of the API surface of .NET Framework.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://user-images.githubusercontent.com/5169960/66777114-f8db7c80-ee7c-11e9-9161-acfe1c491586.png\" width=\"600\" align=\"center\">\r\n</p>\r\n\r\nWe announced that the [future of .NET](https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/) will be based on .NET Core. And at Build 2019, [Scott Hunter stated](https://www.youtube.com/watch?v=ZlO1utbB2GQ&t=54m20s) that AppDomains, remoting, Web Forms, WCF server, and Windows Workflow won’t be ported to .NET Core.\r\n\r\nWith .NET Core 3.0, we’re at the point where we’ve ported all technologies that are required for modern workloads, be that desktop apps, mobile apps, console apps, web sites, or cloud services. That’s not to say that we don’t have any gaps or opportunities for new technologies, but we generally believe we won’t be finding them in the .NET Framework code base anymore. Moving forward, we’re focusing our resources on incorporating new technologies.\r\n\r\nSimultaneously, we’re looking into releasing more of the [.NET Framework code base under the MIT license](https://github.com/microsoft/referencesource) on GitHub to allow the community to create OSS projects for technologies we’re not intending to bring to .NET Core. For example, there already are community projects for [CoreWF](https://github.com/UiPath/corewf) and [CoreWCF](https://github.com/CoreWCF/CoreWCF).\r\n\r\nWe’d like to thank everyone who filed issues with requests for APIs being ported. Those issues allowed us to prioritize and close the gaps that prevented people from porting to .NET Core.\r\n\r\nBut since we generally no longer plan to bring existing technologies from .NET Framework to .NET Core we’ll be closing all issues that are [labeled with port-to-core](https://github.com/dotnet/corefx/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3Aport-to-core).\r\n\r\n### Discussion\r\n\r\nTo discuss this issue, please comment on the corresponding issue at https://github.com/dotnet/corefx/issues/41769.","Url":"https://github.com/dotnet/announcements/issues/130","RelatedDescription":"Open issue \".NET Core 3.0 concludes the .NET Framework API porting project\" (#130)"},{"Id":"505445666","IsPullRequest":false,"CreatedAt":"2019-10-10T18:45:56","Actor":"TaraOverfield","Number":"129","RawContent":null,"Title":"October 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework October 2019 Cumulative Update for Windows 10 version 1903 and version 1909](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-cumulative-updates-windows-10-version-1903-and-windows-10-version-1909/)\r\n* [.NET Framework October 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/)\r\n* [.NET Framework October 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/129","RelatedDescription":"Open issue \"October 2019 .NET Updates\" (#129)"},{"Id":"505328689","IsPullRequest":false,"CreatedAt":"2019-10-10T15:19:53","Actor":"carloreggiani","Number":"128","RawContent":null,"Title":"Docker Stop return status Exited \"(3221225786)\"","State":"closed","Body":"Hi\r\nI'm investigating a issue regarding official MCR images on a Win2019 server with Docker EE engine 19.03.2.\r\n\r\nThe images that I'm unsing are:\r\nmcr.microsoft.com/windows/servercore:1809\r\nmcr.microsoft.com/dotnet/framework/aspnet:4.8\r\n\r\nStopping containers based on these images (\"docker stop\" command) I'm getting: \r\n\"Exited (3221225786)\"\r\n\r\nOn linux a stop command normally return: \"Exited (137)\"\r\n\r\nIs it a normal behaviour? What's means 3221225786?\r\n\r\nThanks for any support\r\n\r\nCarlo","Url":"https://github.com/dotnet/announcements/issues/128","RelatedDescription":"Closed issue \"Docker Stop return status Exited \"(3221225786)\"\" (#128)"},{"Id":"504325600","IsPullRequest":false,"CreatedAt":"2019-10-08T23:14:11","Actor":"terrajobst","Number":"127","RawContent":null,"Title":"Consolidated repo names","State":"open","Body":"[ann]: https://github.com/dotnet/announcements/issues/119\r\n\r\nAs we announced earlier, we're [planning on consolidating][ann] some of the repositories in the dotnet org. While this is still work in progress, we'd like to give you an update on where we are.\r\n\r\nSo far, we've identified the following repos:\r\n\r\n* dotnet/**runtime**\r\n\t- Will contain [coreclr](https://github.com/dotnet/coreclr), [corefx](https://github.com/dotnet/corefx), [core-setup](https://github.com/dotnet/core-setup), [aspnet/Extensions](https://github.com/aspnet/Extensions), and some of [mono/mono](https://github.com/mono/mono)\r\n* [dotnet/**sdk**](https://github.com/dotnet/sdk)\r\n\t- Will contain [toolset](https://github.com/dotnet/toolset), [sdk](https://github.com/dotnet/sdk), [cli](https://github.com/dotnet/cli)\r\n* dotnet/**installer**\r\n\t- Renamed from [core-sdk](https://github.com/dotnet/core-sdk)\r\n* dotnet/**aspnetcore**\r\n\t- Moved from [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) and will also contain [aspnet/AspNetCore-Tooling](https://github.com/aspnet/AspNetCore-Tooling)\r\n* dotnet/**efcore**\r\n\t- Moved from [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore)\r\n* [dotnet/**winforms**](https://github.com/dotnet/winforms)\r\n\t- Unchanged, but listed for clarity \r\n* [dotnet/**wpf**](https://github.com/dotnet/wpf)\r\n\t- Unchanged, but listed for clarity\r\n\r\n### Name changes\r\n\r\nYou might notice that we changed our mind on naming from our [earlier announcement][ann]. Based on your feedback, we decided to go with **dotnet/runtime** instead of **dotnet/platform** and **dotnet/sdk** instead of **dotnet/cli**.\r\n\r\nSeveral people pointed out that the previous names weren't relatable to how we talk about the product, for example on download pages. So, we decided to match the product distributions as the primary design point for the new names. We generally refer to the bits you need to run your app as *the runtime* and the bits you need to build apps as *the SDK*. This also matches the naming chosen by other platforms.\r\n\r\n### New repos can't be used for .NET Core 3.x or earlier\r\n\r\nThe consolidated repositories are going to be about .NET 5 and going forward. It will not be possible to build .NET Core 3.1 or earlier from these repositories. As such, only the master branch from each of the repositories will be brought forward. There will be no porting of the individual release branches in the source repositories.\r\n\r\n### Personal names and email addresses\r\n\r\nSince we're planning on rebasing the history in the merged repositories, we can map your name and email address to new values as well. We primarily do this to support our friends in the LGBTQ+ community who have changed their names to reflect their identities. However, anybody is welcome to use this to change their email and name.\r\n\r\nWhatever your reason might be: we value your contributions and we hope this small gesture makes your life a little bit better. So if you changed your name/email – or simply prefer us to use different values – please [submit a request](mailto:dotnet@microsoft.com&subject=.NET%20repo%20consolidation%3A%20request%20for%20name%20change&body=Hey%2C%20%0A%0AI%E2%80%99d%20like%20to%20change%20my%20email%2Fdisplay%20name%20in%20the%20consolidated%20repo%20from%20%0A%0A%20%20%20%20%20%20%20%20My%20Old%20Name%20%3Cold.me%40example.org%3E%20%0A%0Ato%20%0A%0A%20%20%20%20%20%20%20%20My%20New%20Name%20%3Cnew.me%40example.org%3E%20%0A%0AThanks%21%20%0A).\r\n\r\n### More is coming\r\n\r\nWe'll share more updates in the upcoming months. Please let us know of any concerns that we haven't addressed yet!\r\n\r\n### Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27096.","Url":"https://github.com/dotnet/announcements/issues/127","RelatedDescription":"Open issue \"Consolidated repo names\" (#127)"},{"Id":"504304108","IsPullRequest":false,"CreatedAt":"2019-10-08T22:06:07","Actor":"MichaelSimons","Number":"126","RawContent":null,"Title":"4.7.x .NET Framework SDK Docker images no longer published","State":"open","Body":"# 4.7.x .NET Framework SDK Docker images no longer published\r\n\r\nThe [4.7.x .NET Framework SDK Docker images](https://hub.docker.com/_/microsoft-dotnet-framework-sdk) will no longer be published after Oct. 8, 2019.  The 4.8 image tags should be used as a replacement.\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [microsoft/dotnet-framework-docker#428](https://github.com/microsoft/dotnet-framework-docker/issues/428)\r\n\r\n## Details\r\n\r\nAny references to the following SDK tags should be updated to reference `4.8` instead:\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2019`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2019`\r\n\r\nIf you haven't migrated to using images from [MCR](https://github.com/dotnet/announcements/issues/101) and are still using the .NET Framework repos on Docker Hub, you will need to update your tag references to MCR.  This is because the 4.8 images only exist on MCR.  These are the following Docker Hub tags that are affected and should be updated to reference the [4.8 tags at the MCR location](https://hub.docker.com/_/microsoft-dotnet-framework-sdk):\r\n* `microsoft/dotnet-framework:4.7.1-sdk`\r\n* `microsoft/dotnet-framework:4.7.1-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-1803`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2019`","Url":"https://github.com/dotnet/announcements/issues/126","RelatedDescription":"Open issue \"4.7.x .NET Framework SDK Docker images no longer published\" (#126)"},{"Id":"502102886","IsPullRequest":false,"CreatedAt":"2019-10-03T14:30:16","Actor":"MichaelSimons","Number":"125","RawContent":null,"Title":"Alpine Docker images no longer include the tzdata package in 3.0","State":"open","Body":"# Alpine Docker images no longer include the tzdata package in 3.0\r\nBeginning with the 3.0 release, the `tzdata` package has been removed from all Alpine Docker images.\r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\ndotnet/dotnet-docker#1366\r\n\r\n## Details\r\n* https://github.com/dotnet/dotnet-docker/pull/1312\r\n\r\n\r\nThis package was removed because it wasn't required for the main set of scenarios and to have consistency between the runtime-deps images across all Linux distros.  This package is still installed in the 2.x images for Alpine so this will be something to be aware of when migrating from 2.x to 3.0.\r\n\r\n\r\nYou may be impacted by this if you use any of the Alpine images and your code has a dependency on the `tzdata` package, such as using the `System.TimeZoneInfo` API.  In that case, you'll need to update your Dockerfile to explicitly install the package:\r\n```\r\nRUN apk add --no-cache tzdata\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/125","RelatedDescription":"Open issue \"Alpine Docker images no longer include the tzdata package in 3.0\" (#125)"},{"Id":"497868605","IsPullRequest":false,"CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Number":"124","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.0","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n","Url":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.0\" (#124)"},{"Id":"494223006","IsPullRequest":false,"CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Number":"123","RawContent":null,"Title":".NET Core 3.0 RC 1","State":"open","Body":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Open issue \".NET Core 3.0 RC 1\" (#123)"},{"Id":"491801748","IsPullRequest":false,"CreatedAt":"2019-09-10T17:23:20","Actor":"leecow","Number":"122","RawContent":null,"Title":"September 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework September 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-security-and-quality-rollup/)\r\n* [.NET Framework September 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Open issue \"September 2019 .NET Updates\" (#122)"},{"Id":"491794046","IsPullRequest":false,"CreatedAt":"2019-09-10T17:04:46","Actor":"blowdart","Number":"121","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core","State":"open","Body":"# Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Announcement\r\n\r\nThe original announcement for this issue can be found at https://github.com/dotnet/announcements/issues/121\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on .NET Core 2.1.0-2.1.12, or .NET Core 2.2.0-2.2.6\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you have a version of .NET Core less than 2.1.13 or less than 2.2.7, you're vulnerable.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nPaul Ryman of VMware Sydney Engineering Team\r\n\r\n### External Links\r\n\r\n[CVE-2019-1301](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1301)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\nV1.1 (September 10, 2019): Fix version numbers\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-09-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/121","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\" (#121)"},{"Id":"489344106","IsPullRequest":false,"CreatedAt":"2019-09-04T19:14:05","Actor":"leecow","Number":"120","RawContent":null,"Title":".NET Core 3.0 Preview 9","State":"open","Body":".NET Core Preview 9 released today. https://github.com/dotnet/core/issues/3304 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-9/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-9/)\r\n\r\nPlease report any issues you find with 3.0.0 Preview 9, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/120","RelatedDescription":"Open issue \".NET Core 3.0 Preview 9\" (#120)"},{"Id":"480859726","IsPullRequest":false,"CreatedAt":"2019-08-14T19:54:26","Actor":"stephentoub","Number":"119","RawContent":null,"Title":"Consolidating .NET GitHub repos","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.*\r\n\r\nOver the next few months, we plan to consolidate several of the foundational repositories of .NET Core, including dotnet/coreclr and dotnet/corefx.\r\n\r\n.NET’s repository structure on GitHub was initially created in a fairly fine-grained manner, with the aim of enabling runtime agility and increased developer productivity.  However, this separation has led to a variety of complications for contributors and maintainers alike.  For example:\r\n- **Confusion about where issues should be opened.**  It’s not always clear in which repo an issue should be reported, complicated by the fact that some implementations actually span repositories (e.g. a type might be exposed through a reference assembly and have its tests in corefx but actually be implemented in System.Private.CoreLib in coreclr).\r\n- **Difficulty sharing source.**  System.Private.CoreLib is intricately connected to the rest of the runtime, and thus has lived with the runtime code.  That, however, means that although corefx has been intended as the place to share as much core library code as possible across any underlying runtime, we’ve needed to keep a significant body of code in System.Private.CoreLib, which then has meant it’s needed to be “mirrored” to each runtime repo (coreclr, corert, mono) that needs to consume it as source; similarly, corefx has similarly required access to much of that source, for example to use the same interop DllImports that are employed elsewhere in the runtimes.  The automatic mirror that shares this source needs to be maintained, and even when it has been, it’s often led to lag.  It’s also complicated developer processes, where to validate a change in one repo generally requires manually mirroring the code to other local repos in order to validate the change and ensure merging into one repo won’t break the others.\r\n- **PRs spanning multiple repos.**  Because the runtime, CoreLib, and the core libraries are all intricately linked, changing runtime behaviors, adding new APIs, or changing various build processes (e.g. improving static analysis) often requires multiple PRs carefully staged across time and multiple repos.  For example, to add a new method to a type like Dictionary<>, a developer must first make the source changes in her local coreclr repo and the test and reference assembly changes in her local corefx repo.  When satisfied with the fix, the developer must submit a PR to coreclr as well as a PR to corefx, the latter of which will fail.  Eventually the coreclr PR will be merged, and the changes will mirror to the other runtimes that also require the update.  Eventually those mirror PRs will be merged, and builds will be created containing the fix for each runtime.  At some point later those builds will be consumed into the corefx repo, after which point the original corefx PR can be re-validated and eventually merged.  That’s the best case; things get more complicated in situations where there are bidirectional dependencies.\r\n- **Building an installable runtime.** Self-hosting a custom built .NET requires intricate knowledge of how all the repos work and interact.  A developer can’t just clone a single repo, make a desired change, and easily produce an installer.\r\n- **Consistency.**  One goal we had for more fine-grained repos was to enable isolation and independence for teams working within each repo’s confines, but this has led to non-trivial duplication of effort on things like build systems and CI, and then the resulting lack of consistency as each system ends up diverging from the others.\r\n\r\nThe issues go beyond the runtime.  For example, the ASP.NET maintainers and community did a great job in the past year or so consolidating from ~55 repos down to ~5 repos, but that’s still more repos than is desirable, leading to similar issues as cited above for the runtime.  On top of that, these ASP.NET repositories are in the aspnet GitHub org, which adds an additional set of issues, for example:\r\n- **Complications moving issues between repos.**  If a developer opens an issue in aspnet/aspnetcore and it’s determined that the cause of the issue is actually in dotnet/corefx, there is no GitHub mechanism to enable easily moving that issue across the aspnet to dotnet organizational boundary.\r\n- **Permissions.** Each organization’s permissions end up needing to be managed and maintained separately.\r\n\r\nThe issues extend into tooling as well.  For example, we currently have multiple repositories that all logically make up the dotnet CLI, but actually creating a working installer spans multiple repos.\r\n\r\n### Plan\r\n\r\nTo address these issues, we’re planning to make some changes to our repository structure:\r\n- **dotnet/platform.**  We plan to combine dotnet/coreclr, dotnet/corefx, dotnet/corert, dotnet/core-setup, and the relevant portions of mono/mono into a new dotnet/platform repo.  Everything needed to build and produce the Microsoft.NETCore.App shared framework will be in this repo.  We will no longer suffer from the complications of source mirroring.  Features like changing runtime behavior or adding an API will no longer require a complicated dance across multiple repos.  Etc.\r\n- **dotnet/aspnetcore.**  We plan to move the existing aspnet/aspnetcore repository into the dotnet organization.  Along with that, we aim to combine a variety of the other aspnet repositories into aspnetcore, such as aspnet/blazor.  Whether repos like entityframeworkcore remain separate or combined remains an open question.  A goal is that, just as dotnet/platform will be responsible for the creation of Microsoft.NETCore.App, dotnet/aspnetcore will be responsible for the creation of Microsoft.AspNETCore.App.\r\n- **dotnet/cli.**  We plan to combine dotnet/toolset and dotnet/sdk into the dotnet/cli repo.\r\n\r\n### FAQ\r\n\r\n#### Why are we merging repos?\r\n\r\nWe believe we can significantly improve several aspects of .NET on GitHub by combining repos, benefiting both maintainers and contributors.  These improvements will manifest in a variety of ways, such as in better issue management, much easier models of contribution, and easier and faster ways to build and install the resulting bits.\r\n\r\n####  What will happen to the aspnet org?\r\n\r\nThe aspnet org as a separate entity is legacy and artificial.  In time we hope to absorb it into the dotnet org and sunset the aspnet org.\r\n\r\n#### Will the coreclr and corefx repos go away?\r\n\r\nWith the help of GitHub, we plan to migrate all issues from these repos to the new dotnet/platform repo, and then lock down creation of additional issues, such that the repos will no longer be used for issue management.  We will also inhibit the creation of PRs to the master branch, which will effectively become an archive for read-only review of history.  In this sense, these repos will be archived, and no active development will happen with them.  However, we plan to continue servicing previous .NET Core releases out of these repos, so the various release branches (e.g. release/2.1, release/3.0, etc.) will continue to see (limited) activity.\r\n\r\n#### Will the mono repo go away?\r\n\r\nNo. mono/mono contains the source for the full mono stack and will continue to live on happily.  We will simply be moving the managed source associated with System.Private.CoreLib and copying the relatively small amount of source that makes up the native mono runtime to dotnet/platform.  We may choose to then use some mirroring technology to keep the runtime copy in sync (this will, however, not suffer from the same mirroring issues we currently experience, as we would not be mirroring between two components required to build the same binaries), or we may choose to let them diverge and manually sync only those changes deemed relevant to both implementations.\r\n\r\n#### Will the corert repo go away?\r\n\r\nYes.  We plan to retire/archive the corert repo.  Some of the technology in the corert repo will be migrated to the master branch of dotnet/platform, where it will be productized as part of .NET.  Other portions of the corert repo will be migrated to feature branches of dotnet/platform, where the experimentation can continue.  In this way, we will use feature branches to continue experimenting with the corert technology, while making it easier to share portions with its shipping counterpart and also graduate functionality into master if/when it’s ready.\r\n\r\n#### Does this mean there will be a single repo for all of .NET?\r\n\r\nNo.  We will be reducing the number of repos that contribute to .NET, but currently we do not believe that going all the way down to one is the right answer.\r\n\r\n#### Doesn’t this mean that issue and PR tracking will now be overwhelming?\r\n\r\nIt is already the case that the vast majority of issues in a given repo are not relevant to any individual developer, and with several thousand open issues in each repo and on the order of a hundred open PRs in each, we already need systems (e.g. labels) to successfully manage issues and PRs.  As such, we don’t believe the merging will have a significant impact on this aspect of developer productivity.  If it turns out to have an unexpectedly large negative impact, we will work with the community to find ways to mitigate the problem.  However, there are already a multitude of successful open source projects on GitHub with at least an order of magnitude more issues.\r\n\r\n#### What will happen to existing issues?\r\n\r\nWith the help of GitHub functionality, we plan to migrate all issues from old repos (e.g. dotnet/coreclr, dotnet/corefx) to the new repos (e.g. dotnet/platform).  We may also use this as a forcing function to revisit stale issues and either close those that are no longer relevant or reinvigorate those that are demanding of more immediate attention.\r\n\r\n#### What about git history?\r\n\r\nIn general, we plan to keep history, such that history from each constituent repo will be a part of the new repo.  However, we have made some mistakes in the past (e.g. large binaries, multitudes of automated PRs for flowing bits and source between repos, etc.), and we plan to rewrite history to correct those mistakes wherever possible and impactful.  Some rough calculations suggest this could end up significantly reducing the size of the repos as well as the time it takes to clone, which should not only help developers approaching the project but also CI.  This will end up meaning that SHAs may be different in the new repo than they were in the old repo; as previously mentioned, however, any references to the old SHAs in the old repos will continue to work, as those repos will remain accessible.\r\n\r\n#### Will I still show up in the contributor list due to previous contributions?\r\n\r\nYes.  We plan to merge all such history.\r\n\r\n#### Will this break debugging with SourceLink?\r\n\r\nNo.  The existing repos will continue to be accessible, and commit SHAs there will remain unchanged.\r\n\r\n#### Might plans change?\r\n\r\nSure.  Part of the goal of posting this announcement is to hear from you, hear about additional benefits you're excited about, and hear about additional concerns we may not have considered.  We will include such ideas in our planning and course correct as necessary.\r\n\r\n## Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.\r\n","Url":"https://github.com/dotnet/announcements/issues/119","RelatedDescription":"Open issue \"Consolidating .NET GitHub repos\" (#119)"},{"Id":"470434872","IsPullRequest":false,"CreatedAt":"2019-07-19T16:54:02","Actor":"richlander","Number":"118","RawContent":null,"Title":".NET Core master branches have switched to \"5.0\"","State":"open","Body":"# .NET Core master branches have switched to \"5.0\"\r\n\r\nVarious .NET Core repos have switched their `master` branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. This is very similar to how we approached 2.x and 3.0 projects. As context, `master` branches produced 3.0 builds for the entire period of the 2.2 project.\r\n\r\nAt present, this change is only relevant if you contribute to .NET Core repositories. Otherwise, we recommend that you wait for the 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/core #3059](https://github.com/dotnet/core/issues/3059)\r\n\r\n## Details\r\n\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n- [dotnet/coreclr](https://github.com/dotnet/coreclr)\r\n- [dotnet/corefx](https://github.com/dotnet/corefx)\r\n- [dotnet/core-setup](https://github.com/dotnet/core-setup)\r\n\r\nYou can see that [5.0 .NET Core Runtime builds](https://github.com/dotnet/core-setup#daily-builds) are now being built and published at dotnet/core-setup.\r\n\r\nIn large part, we switched `master` to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 released has progressed, we've had to increase scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nNotably, [dotnet/core-sdk](https://github.com/dotnet/core-sdk) is not yet producing 5.0 builds. We expect that the dotnet/core-sdk master branch will continue as a 3.0 branch for 2-3 months while we finish up the .NET Core 3.0 project.\r\n\r\nAt present, there is no developer experience for 5.0. We are waiting on the dotnet/core-sdk repo to switch to 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. We'll update this issue when a 5.0 SDK comes available.","Url":"https://github.com/dotnet/announcements/issues/118","RelatedDescription":"Open issue \".NET Core master branches have switched to \"5.0\"\" (#118)"},{"Id":"465501070","IsPullRequest":false,"CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Number":"117","RawContent":null,"Title":"System.Text.Json usability study results","State":"open","Body":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies 😊\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304.","Url":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Open issue \"System.Text.Json usability study results\" (#117)"},{"Id":"465034831","IsPullRequest":false,"CreatedAt":"2019-07-08T03:13:38","Actor":"leecow","Number":"116","RawContent":null,"Title":"Updates to releases.json (.NET Core release metadata)","State":"open","Body":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, MSBuild, NuGet, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is an example of the new array based on the upcoming July update.\r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n    \"sdk\": {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": []\r\n    },\r\n    \"sdks\": [\r\n        {\r\n            \"version\": \"2.2.301\",\r\n            \"version-display\": \"2.2.301\",\r\n            \"runtime-version\": \"2.2.6\",\r\n            \"vs-version\": \"16.1.3\",\r\n            \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n            \"csharp-version\": \"7.3\",\r\n            \"fsharp-version\": \"4.5\",\r\n            \"vb-version\": null,\r\n            \"files\": []\r\n        },\r\n        {\r\n          \"version\": \"2.2.205\",\r\n          \"version-display\": \"2.2.205\",\r\n          \"runtime-version\": \"2.2.6\",\r\n          \"vs-version\": \"16.0.5\",\r\n          \"vs-support\": \"Visual Studio 2019 (v16.0)\",\r\n          \"csharp-version\": \"7.3\",\r\n          \"fsharp-version\": \"4.5\",\r\n          \"vb-version\": null,\r\n          \"files\": []\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the community which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility compromises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Open issue \"Updates to releases.json (.NET Core release metadata)\" (#116)"},{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1197261086912843776","CreatedAt":"2019-11-20T21:11:01+00:00","UserScreenname":"dotnet","Text":"\"...forward-looking tech to approach Web dev in very different ways. There are now more ways than ever to create gr… https://t.co/WT8OdC1tqI","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":35,"FavoriteCount":9,"RawContent":null},{"Id":"1197200191230791681","CreatedAt":"2019-11-20T17:09:03+00:00","UserScreenname":"dotnet","Text":"What's up with #EntityFramework? #dotNETRocks talks to @JulieLerman about the exciting times, the latest updates, a… https://t.co/2D0gilroYx","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":36,"FavoriteCount":16,"RawContent":null},{"Id":"1196936259236614144","CreatedAt":"2019-11-19T23:40:16+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":15,"FavoriteCount":3,"RawContent":null},{"Id":"1196857275866071040","CreatedAt":"2019-11-19T18:26:25+00:00","UserScreenname":"dotnet","Text":"Want to see some of the cool tooling available for @ASPNET devs in @VisualStudioMac? @sayedihashimi &amp;… https://t.co/ypc1rn5GWM","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":12,"FavoriteCount":7,"RawContent":null},{"Id":"1196844946835169280","CreatedAt":"2019-11-19T17:37:26+00:00","UserScreenname":"dotnet","Text":"Join us in about 30 minutes for another API backlog review. https://t.co/tvOiJYwUyl","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":5,"RawContent":null},{"Id":"1196481702283161601","CreatedAt":"2019-11-18T17:34:02+00:00","UserScreenname":"dotnet","Text":"&lt;3 this. Here's a great story on how the #dotNET Infrastructure Team streamlined their developer collaboration and… https://t.co/lomvhBr27b","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":30,"FavoriteCount":13,"RawContent":null},{"Id":"1196374992251805696","CreatedAt":"2019-11-18T10:30:00+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9qNspl Core 3.0 development using Visual Studio for Mac\n\nhttps://t.co/LdtPORIt4H #aspnetcore #visualstudio","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":39,"FavoriteCount":16,"RawContent":null},{"Id":"1195407626525462528","CreatedAt":"2019-11-15T18:26:02+00:00","UserScreenname":"dotnet","Text":"Blazor is challenging the status quo with a new web framework that’s powerful and productive. \n\n@CODEmagazine lays… https://t.co/YaxiSfHaum","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":151,"FavoriteCount":64,"RawContent":null},{"Id":"1195049383756255233","CreatedAt":"2019-11-14T18:42:30+00:00","UserScreenname":"dotnet","Text":"In this episode, @julielerman shares some insight and great tips for working with Entity Framework in Docker.… https://t.co/6vEWKT6q98","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":15,"RawContent":null},{"Id":"1195034460477108224","CreatedAt":"2019-11-14T17:43:12+00:00","UserScreenname":"dotnet","Text":".@CODEmagazine tackles the evolution and rework of Entity Framework Core 3.0 as they tout the impressive and solid… https://t.co/ppuCmvPP6M","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":18,"FavoriteCount":10,"RawContent":null},{"Id":"1195029111753920517","CreatedAt":"2019-11-14T17:21:57+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Core 3.1 Preview 3 https://t.co/z1YLDZ5dpS","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":314,"FavoriteCount":163,"RawContent":null},{"Id":"1195028900037963780","CreatedAt":"2019-11-14T17:21:06+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9r53NV Core updates in .NET Core 3.1 Preview 3 https://t.co/NCbHJ43nUA","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":40,"FavoriteCount":23,"RawContent":null},{"Id":"1194672025182322688","CreatedAt":"2019-11-13T17:43:01+00:00","UserScreenname":"dotnet","Text":"#MLdotNET is more than just a library. @CODEmagazine covers the basics as it digs into the API &amp; framework features… https://t.co/Za1eY5HSuS","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":40,"FavoriteCount":19,"RawContent":null},{"Id":"1194390243597639680","CreatedAt":"2019-11-12T23:03:19+00:00","UserScreenname":"dotnet","Text":"👋 Hi everyone...do you want to help shape some of the .NET tools for @Azure development and deployment in… https://t.co/H9JuCsmmZy","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":33,"FavoriteCount":19,"RawContent":null},{"Id":"1194369282941104130","CreatedAt":"2019-11-12T21:40:02+00:00","UserScreenname":"dotnet","Text":"Why should desktop developers care about .NET Core? @CODEmagazine answers that question (and more) with an interest… https://t.co/Wv8DO6kgso","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":50,"FavoriteCount":28,"RawContent":null},{"Id":"1194313410881605633","CreatedAt":"2019-11-12T17:58:01+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":12,"FavoriteCount":5,"RawContent":null},{"Id":"1194289656516534272","CreatedAt":"2019-11-12T16:23:37+00:00","UserScreenname":"dotnet","Text":"Do you use a Mac to build apps for @ASPNET Core? Are you thinking of doing it? Now's the time! \n\nTake the… https://t.co/jWQ1gwrVlI","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":35,"FavoriteCount":16,"RawContent":null}]}},"RunOn":"2019-11-21T05:30:37.9689239Z","RunDurationInMilliseconds":16525}