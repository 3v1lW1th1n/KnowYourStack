{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11354757947","Type":"IssuesEvent","CreatedAt":"2020-01-24T18:23:22","Actor":"xavierdecoster","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7773","RelatedDescription":"Closed issue \"dev branch of NuGetGallery is not emitting request or dependency telemetry in AI\" (#7773) at NuGet/NuGetGallery","RelatedBody":"customMetrics\r\n| where timestamp > ago(7d)\r\n| extend cloudDeploymentId = tostring(customDimensions.CloudDeploymentId)\r\n| where isnotempty(cloudDeploymentId)\r\n| summarize count() by bin(timestamp, 3h), cloudDeploymentId\r\n| render columnchart \r\n\r\n## requests\r\n\r\n![image](https://user-images.githubusercontent.com/94054/70948780-1067ea80-2011-11ea-98e5-5f7210427723.png)\r\n\r\n## dependencies\r\n\r\n![image](https://user-images.githubusercontent.com/94054/70948796-1b227f80-2011-11ea-8f01-59d2668cb9a2.png)\r\n\r\n## traces\r\n\r\n![image](https://user-images.githubusercontent.com/94054/70948811-207fca00-2011-11ea-8a5e-694240189135.png)\r\n\r\n## customMetrics\r\n\r\n![image](https://user-images.githubusercontent.com/94054/70948822-25447e00-2011-11ea-9179-45bb19bd21e6.png)\r\n\r\n"},{"Id":"11354745329","Type":"IssuesEvent","CreatedAt":"2020-01-24T18:21:36","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7821","RelatedDescription":"Opened issue \"[2020-01-27] Deployment\" (#7821) at NuGet/NuGetGallery","RelatedBody":"# NuGetGallery\r\n\r\n* [ ] Merge dev to master https://github.com/NuGet/NuGetGallery/pull/7818\r\n* [ ] DEV\r\n* [ ] INT\r\n* [ ] PROD"},{"Id":"11350075759","Type":"IssuesEvent","CreatedAt":"2020-01-24T07:39:36","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7764","RelatedDescription":"Reopened issue \"A/B test prefix matching on nuget.org\" (#7764) at NuGet/NuGetGallery","RelatedBody":"⚠️ Do not copy this issue! This used a special A/B test process. For correct instructions, follow this process in the OneNote: [Rebuild the Azure Search Index](https://microsoft.sharepoint.com/teams/NuGet/_layouts/OneNote.aspx?id=%2Fteams%2FNuGet%2FTeam%2FNugetServer%2FNugetServerTeamNote&wd=target%28Operations.one%7CC674B49C-4CB7-4793-8890-A1E46E33FEB9%2FRebuild%20the%20Azure%20Search%20Index%7CC705999F-85D9-4A93-8CFB-161C393C56FE%2F%29).\r\n\r\n1. Determine the live instance of the Azure Search jobs\r\n    - [ ] \"a\"\r\n    - [x] \"b\"\r\n    - [ ] \"c\"\r\n1. ~~Determine the new instance to be used~~\r\n    - [ ] \"a\"\r\n    - [x] \"b\"\r\n    - [ ] \"c\"\r\n1. Update the job and service configuration\r\n    - [ ] ~~NuGetDeployment PR:~~\r\n    - [ ] ~~Infrastructure build:~~\r\n    - [ ] ~~NuGet.Jobs Config build:~~\r\n    - [x] AzureSearchService build: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3385062\r\n1. ~~Deploy Azure Search infrastructure to provision the resources and secrets~~\r\n1. ~~Deploy Db2AzureSearch to initialize the new indexes~~\r\n1. ~~Deploy alternative instances of the Azure Search jobs~~\r\n1. ~~Monitor the new Catalog2AzureSearch cursors~~\r\n1. ~~Deploy V3 monitoring to start monitoring the new indexes. If you are not rebuilding for an A/B test all this really will do is add an additional cursor to wait on.~~\r\n1. Deploy AzureSearchService\r\n    - ⚠️ The Azure Search Service must be deployed after all other jobs.\r\n    - Release: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=552548\r\n    - DEV\r\n       - [x] USNC\r\n       - [x] USSC\r\n       - [x] EA\r\n       - [x] SEA\r\n    - INT\r\n       - [x] USNC\r\n       - [x] USSC\r\n    - PROD\r\n       - [ ] USNC\r\n       - [ ] USSC\r\n       - [ ] EA\r\n       - [ ] SEA\r\n1. ~~Change the default Instance name for job release pipelines~~\r\n1. Wait a week.\r\n1. ~~Clean up~~\r\n   - ~~Stop monitoring the old cursors~~\r\n   - ~~Stop monitoring the old indexes by deploying V3 monitoring~~\r\n   - ~~Stop old job instances~~\r\n   - ~~Update the [Secret Rotation excel](https://microsoft.sharepoint.com/teams/NuGet/Team/Engineering/NuGet_Secret_Rototation_Status.xlsx?web=1) to make sure new secrets are there and old secrets are gone~~"},{"Id":"11348480311","Type":"IssuesEvent","CreatedAt":"2020-01-24T00:33:05","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7764","RelatedDescription":"Closed issue \"A/B test prefix matching on nuget.org\" (#7764) at NuGet/NuGetGallery","RelatedBody":"⚠️ Do not copy this issue! This used a special A/B test process. For correct instructions, follow this process in the OneNote: [Rebuild the Azure Search Index](https://microsoft.sharepoint.com/teams/NuGet/_layouts/OneNote.aspx?id=%2Fteams%2FNuGet%2FTeam%2FNugetServer%2FNugetServerTeamNote&wd=target%28Operations.one%7CC674B49C-4CB7-4793-8890-A1E46E33FEB9%2FRebuild%20the%20Azure%20Search%20Index%7CC705999F-85D9-4A93-8CFB-161C393C56FE%2F%29).\r\n\r\n1. Determine the live instance of the Azure Search jobs\r\n    - [ ] \"a\"\r\n    - [x] \"b\"\r\n    - [ ] \"c\"\r\n1. ~~Determine the new instance to be used~~\r\n    - [ ] \"a\"\r\n    - [x] \"b\"\r\n    - [ ] \"c\"\r\n1. Update the job and service configuration\r\n    - [ ] ~~NuGetDeployment PR:~~\r\n    - [ ] ~~Infrastructure build:~~\r\n    - [ ] ~~NuGet.Jobs Config build:~~\r\n    - [x] AzureSearchService build: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3385062\r\n1. ~~Deploy Azure Search infrastructure to provision the resources and secrets~~\r\n1. ~~Deploy Db2AzureSearch to initialize the new indexes~~\r\n1. ~~Deploy alternative instances of the Azure Search jobs~~\r\n1. ~~Monitor the new Catalog2AzureSearch cursors~~\r\n1. ~~Deploy V3 monitoring to start monitoring the new indexes. If you are not rebuilding for an A/B test all this really will do is add an additional cursor to wait on.~~\r\n1. Deploy AzureSearchService\r\n    - ⚠️ The Azure Search Service must be deployed after all other jobs.\r\n    - Release: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=552548\r\n    - DEV\r\n       - [x] USNC\r\n       - [x] USSC\r\n       - [x] EA\r\n       - [x] SEA\r\n    - INT\r\n       - [x] USNC\r\n       - [x] USSC\r\n    - PROD\r\n       - [ ] USNC\r\n       - [ ] USSC\r\n       - [ ] EA\r\n       - [ ] SEA\r\n1. ~~Change the default Instance name for job release pipelines~~\r\n1. Wait a week.\r\n1. ~~Clean up~~\r\n   - ~~Stop monitoring the old cursors~~\r\n   - ~~Stop monitoring the old indexes by deploying V3 monitoring~~\r\n   - ~~Stop old job instances~~\r\n   - ~~Update the [Secret Rotation excel](https://microsoft.sharepoint.com/teams/NuGet/Team/Engineering/NuGet_Secret_Rototation_Status.xlsx?web=1) to make sure new secrets are there and old secrets are gone~~"},{"Id":"11340304238","Type":"IssuesEvent","CreatedAt":"2020-01-23T05:55:45","Actor":"vikassangal","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7820","RelatedDescription":"Opened issue \"NuGet Package restore failed for project,Unable to find version\" (#7820) at NuGet/NuGetGallery","RelatedBody":"Severity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\t\tNuGet Package restore failed for project Tests\\WebTests: Unable to find version '12.2.7221' of package 'Progress.Sitefinity.Ecommerce'.\r\n  C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\: Package 'Progress.Sitefinity.Ecommerce.12.2.7221' is not found on source 'C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\'.\r\n  https://api.nuget.org/v3/index.json: Package 'Progress.Sitefinity.Ecommerce.12.2.7221' is not found on source 'https://api.nuget.org/v3/index.json'."},{"Id":"11338738042","Type":"PullRequestEvent","CreatedAt":"2020-01-22T23:26:17","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7819","RelatedDescription":"Merged pull request \"[ReleasePrep][2020.01.21]FI master into dev\" (#7819) at NuGet/NuGetGallery","RelatedBody":"Picking up hotfix for json encode.\r\n\r\nBlocks https://github.com/NuGet/NuGetGallery/pull/7818"},{"Id":"11337363735","Type":"PullRequestEvent","CreatedAt":"2020-01-22T20:09:42","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7819","RelatedDescription":"Opened pull request \"[ReleasePrep][2020.01.21]FI master into dev\" (#7819) at NuGet/NuGetGallery","RelatedBody":"Picking up hotfix for json encode.\r\n\r\nBlocks https://github.com/NuGet/NuGetGallery/pull/7818"},{"Id":"11329669888","Type":"PullRequestEvent","CreatedAt":"2020-01-22T01:40:55","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7818","RelatedDescription":"Opened pull request \"[ReleasePrep][2020.01.21]RI dev to master\" (#7818) at NuGet/NuGetGallery","RelatedBody":"Pulling in display package page performance improvements."},{"Id":"11329316167","Type":"PullRequestEvent","CreatedAt":"2020-01-22T00:24:54","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7814","RelatedDescription":"Merged pull request \"Reject packages with duplicate dependency groups\" (#7814) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/7714"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11357059516","Type":"PullRequestEvent","CreatedAt":"2020-01-25T01:36:12","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/9103","RelatedDescription":"Opened pull request \"PackageInstaller Service doc\" (#9103) at NuGet/Home","RelatedBody":"Note that the extensibility services doc which has been reviewed is also a part of this PR"},{"Id":"11356886166","Type":"IssuesEvent","CreatedAt":"2020-01-25T00:35:15","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/9059","RelatedDescription":"Reopened issue \"Accessibility Fixes in PM UI - altText, etc...\" (#9059) at NuGet/Home","RelatedBody":"## Batch 1 - 3 fixes\r\n - [x] PM UI - Thumb control needs better accessibility name - don't just repeat control name.\r\n[1049222](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1049222) - A11y_VS ASP.NET and Web Development_ Manage Nugent's-Browse_ Screen Reader : Narrator/NVDA is mentioning the vertical bar as \"Thumb\".\r\n\r\nTest of fix with Accessibility Insights:\r\n![image](https://user-images.githubusercontent.com/8865080/72912736-ef21aa80-3cf0-11ea-81fe-0ad52e5cf144.png)\r\n\r\n- [x] PackageItemControl - Package Icon should have \"Package Icon\" altText\r\n[994454](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/994454) - A11y_NuGetClient-MinorUIChanges_Installed_ScreenReader : Alternative text is not provided for \"Package Icon\" image for screen reader users.\r\n\r\nTest of fix with Accessibility Insights:\r\n![image](https://user-images.githubusercontent.com/8865080/72912940-3c9e1780-3cf1-11ea-8a2d-be63a2d0c555.png)\r\n\r\n- [x] ProjectView - Installed textbox needs an accessibility name\r\n[994499](https://devdiv.visualstudio.com/DevDiv/_queries/edit/994499) - A11y_NuGetClient-MinorUIChanges_TestPackage.Deprecation.CriticalBugs.AlternatePackage_Installed_AI4D: Name property does not exists for \"Installed\" edit box\r\n\r\nTest of fix with Accessibility Insights:\r\n![image](https://user-images.githubusercontent.com/8865080/72913110-7d962c00-3cf1-11ea-8402-f7b2c1d39d6e.png)\r\n\r\n## Batch 2 - Fix deprecation section of PM UI\r\n- [ ] Put label on icon. Make reason have label.\r\n[994458](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/994458) - A11y_NuGetClient-MinorUIChanges_TestPackage.Deprecation.Other_Installed_ScreenReader : Narrator is announcing \" edit \" word unnecessarily after reading deprecated message.\r\n\r\nBefore fix:\r\n![image](https://user-images.githubusercontent.com/8865080/72936620-6ae51c80-3d1c-11ea-988d-4452685fa154.png)\r\n\r\nAfter fix:\r\n\r\n\r\n## Soon\r\n\r\nPackageMetadataControl - TextBoxes should not have an Automation Name, but should have an Automation LabeledBy property. This allows narrator to understand the label and the value to read.\r\n - 994459 - A11y_NuGetClient-MinorUIChanges_TestPackage.Deprecation.Other_Installed_ScreenReader : Narrator is annoucing \"Dependencies\" for \"No Dependencies\" text."},{"Id":"11356864786","Type":"PullRequestEvent","CreatedAt":"2020-01-25T00:28:30","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/Home/pull/9050","RelatedDescription":"Merged pull request \"document client product dev process\" (#9050) at NuGet/Home","RelatedBody":"Fixes: #8994\r\n\r\n[Rendered](https://github.com/NuGet/Home/blob/dev-zkat-client-dev-process/designs/ClientDevProcess.md)"},{"Id":"11356864769","Type":"IssuesEvent","CreatedAt":"2020-01-25T00:28:29","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8994","RelatedDescription":"Closed issue \"Overhaul team project management processes\" (#8994) at NuGet/Home","RelatedBody":"Let's examine what we do right now, and how we use both GitHub and ZenHub to manage (and communicate) the work that the team does. This work will involve proposing a new process and getting comments and consensus for the team, and ultimately adopting it and documenting it for both the team and the community."},{"Id":"11356274872","Type":"IssuesEvent","CreatedAt":"2020-01-24T22:14:17","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8842","RelatedDescription":"Closed issue \"Deadlock in VSSettings init\" (#8842) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): VS \r\n\r\nNuGet version (x.x.x.xxx): 5.5\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):16.5 P2\r\n\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nNuGet Side of https://github.com/dotnet/roslyn/issues/39889.\r\n\r\n**Version Used**: Latest 16.5 Preview2 dogfood build (29518.163.master)\r\n\r\n**Repro steps (pretty consistent repro)**\r\n\r\n1. Create a new C# project\r\n2. Add code so you have missing usings. For example, just type out a `Console.Write(...);`, but no `using System;` so you get compiler errors. Place the cursor on the squiggle and click save all.\r\n3. Close VS\r\n4. Restart VS, open the same project\r\n5. Hit Ctrl + Dot - if you do this before the red squiggle shows up, I invariably see this deadlock.\r\n\r\nI think there might be other ways to hit this, but I found this was a pretty consistent repro for me.\r\n\r\nDump shared at: `\\\\<%internal_share%>\\public\\mava`\r\n\r\n\r\n\r\n**Version Used**: Latest 16.5 Preview2 dogfood build (29518.163.master)\r\n\r\n**Repro steps (pretty consistent repro)**\r\n\r\n1. Create a new C# project\r\n2. Add code so you have missing usings. For example, just type out a `Console.Write(...);`, but no `using System;` so you get compiler errors. Place the cursor on the squiggle and click save all.\r\n3. Close VS\r\n4. Restart VS, open the same project\r\n5. Hit Ctrl + Dot - if you do this before the red squiggle shows up, I invariably see this deadlock.\r\n\r\nI think there might be other ways to hit this, but I found this was a pretty consistent repro for me.\r\n\r\nDump shared at: `\\\\<%internal_share%>\\public\\mavasani\\Deadlock_Ctrl_Dot\\devenv.dmp`\r\n\r\n**Main thread:**\r\n\r\n```\r\n>\tMicrosoft.CodeAnalysis.Workspaces.dll!Roslyn.Utilities.TaskExtensions.WaitAndGetResult_CanCallOnBackground<System.Collections.Immutable.ImmutableArray<System.__Canon>>(System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<System.__Canon>task, System.Threading.CancellationToken cancellationToken)\tUnknown\r\n \tMicrosoft.CodeAnalysis.EditorFeatures.Wpf.dll!Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedActionsSourceProvider.SuggestedActionsSource.GetCodeFixes(Microsoft.CodeAnalysis.Editor.Shared.ITextBufferSupportsFeatureService supportsFeatureService, Microsoft.VisualStudio.Language.Intellisense.ISuggestedActionCategorySet requestedActionCategories, Microsoft.CodeAnalysis.Workspace workspace, Microsoft.CodeAnalysis.Document document, Microsoft.VisualStudio.Text.SnapshotSpan range, System.Threading.CancellationToken cancellationToken)\tUnknown\r\n \tMicrosoft.CodeAnalysis.EditorFeatures.Wpf.dll!Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedActionsSourceProvider.SuggestedActionsSource.GetSuggestedActions(Microsoft.VisualStudio.Language.Intellisense.ISuggestedActionCategorySet requestedActionCategories, Microsoft.VisualStudio.Text.SnapshotSpan range, System.Threading.CancellationToken cancellationToken)\tUnknown\r\n \tMicrosoft.VisualStudio.Platform.VSEditor.dll!Microsoft.VisualStudio.Language.Intellisense.Implementation.LightBulbSession.TryGetSuggestedActionSets.AnonymousMethod__0(Microsoft.VisualStudio.Utilities.IUIThreadOperationContext c)\tUnknown\r\n \tMicrosoft.VisualStudio.Editor.Implementation.dll!Microsoft.VisualStudio.Editor.Implementation.VSUIThreadOperationExecutor.Execute(Microsoft.VisualStudio.Utilities.UIThreadOperationExecutionOptions executionOptions, System.Action<Microsoft.VisualStudio.Utilities.IUIThreadOperationContextaction)\tUnknown\r\n \tMicrosoft.VisualStudio.Editor.Implementation.dll!Microsoft.VisualStudio.Editor.Implementation.VSUIThreadOperationExecutor.Execute(string title, string defaultDescription, bool allowCancellation, bool showProgress, System.Action<Microsoft.VisualStudio.Utilities.IUIThreadOperationContextaction)\tUnknown\r\n \tMicrosoft.VisualStudio.Platform.VSEditor.dll!Microsoft.VisualStudio.Text.Utilities.UIThreadOperationExecutor.Execute(string title, string defaultDescription, bool allowCancellation, bool showProgress, System.Action<Microsoft.VisualStudio.Utilities.IUIThreadOperationContextaction)\tUnknown\r\n \tMicrosoft.VisualStudio.Platform.VSEditor.dll!Microsoft.VisualStudio.Language.Intellisense.Implementation.LightBulbSession.TryGetSuggestedActionSets(out System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.Language.Intellisense.SuggestedActionSetactionSets, Microsoft.VisualStudio.Language.Intellisense.ISuggestedActionCategorySet overrideRequestedActionCategories)\tUnknown\r\n \tMicrosoft.VisualStudio.Platform.VSEditor.dll!Microsoft.VisualStudio.Language.Intellisense.Implementation.LightBulbBroker.CreateSession(Microsoft.VisualStudio.Language.Intellisense.ISuggestedActionCategorySet requestedActionCategories, Microsoft.VisualStudio.Text.Editor.ITextView textView, Microsoft.VisualStudio.Text.ITrackingPoint triggerPoint, Microsoft.VisualStudio.Text.ITrackingSpan triggerSpan, System.Collections.Generic.Dictionary<Microsoft.VisualStudio.Text.SnapshotSpan, System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.Language.Intellisense.ISuggestedActionsSource>subjectSpansAndSources, Microsoft.VisualStudio.Language.Intellisense.ISuggestedActionCategorySet applicableCategories, bool preQuerySuggestedActions, bool trackMouse)\tUnknown\r\n```\r\n\r\n**Background thread:**\r\n\r\n```\r\n \tMicrosoft.VisualStudio.Threading.dll!Microsoft.VisualStudio.Threading.JoinableTaskFactory.WaitSynchronouslyCore(System.Threading.Tasks.Task task)\tUnknown\r\n \tMicrosoft.VisualStudio.Threading.dll!Microsoft.VisualStudio.Threading.JoinableTaskFactory.WaitSynchronously(System.Threading.Tasks.Task task)\tUnknown\r\n \tMicrosoft.VisualStudio.Threading.dll!Microsoft.VisualStudio.Threading.JoinableTask.CompleteOnCurrentThread()\tUnknown\r\n \tMicrosoft.VisualStudio.Threading.dll!Microsoft.VisualStudio.Threading.JoinableTask<bool>.CompleteOnCurrentThread()\tUnknown\r\n \tMicrosoft.VisualStudio.Threading.dll!Microsoft.VisualStudio.Threading.JoinableTaskFactory.Run<bool>(System.Func<System.Threading.Tasks.Task<bool>asyncMethod, Microsoft.VisualStudio.Threading.JoinableTaskCreationOptions creationOptions)\tUnknown\r\n \tNuGet.PackageManagement.VisualStudio.dll!NuGet.PackageManagement.VisualStudio.VSSolutionManager.IsSolutionOpen.get()\tUnknown\r\n \tNuGet.PackageManagement.VisualStudio.dll!NuGet.PackageManagement.VisualStudio.VSSettings.ResetSolutionSettingsIfNeeded()\tUnknown\r\n \tNuGet.PackageManagement.VisualStudio.dll!NuGet.PackageManagement.VisualStudio.VSSettings.SolutionSettings.get()\tUnknown\r\n \tNuGet.PackageManagement.VisualStudio.dll!NuGet.PackageManagement.VisualStudio.VSSettings.GetSection(string sectionName)\tUnknown\r\n \tNuGet.Configuration.dll!NuGet.Configuration.PackageSourceProvider.LoadPackageSourceLookup(bool byName, NuGet.Configuration.ISettings settings)\tUnknown\r\n \tNuGet.Configuration.dll!NuGet.Configuration.PackageSourceProvider.LoadPackageSources(NuGet.Configuration.ISettings settings, System.Collections.Generic.IEnumerable<NuGet.Configuration.PackageSourcedefaultPackageSources)\tUnknown\r\n \tNuGet.Configuration.dll!NuGet.Configuration.PackageSourceProvider.LoadPackageSources()\tUnknown\r\n \tNuGet.VisualStudio.Implementation.dll!NuGet.VisualStudio.VsPackageSourceProvider.GetSources(bool includeUnOfficial, bool includeDisabled)\tUnknown\r\n>\tMicrosoft.VisualStudio.LanguageServices.dll!Microsoft.VisualStudio.LanguageServices.Packaging.PackageInstallerService.GetPackageSources()\tUnknown\r\n \tMicrosoft.CodeAnalysis.Features.dll!Microsoft.CodeAnalysis.AddImport.AbstractAddImportCodeFixProvider.RegisterCodeFixesAsync(Microsoft.CodeAnalysis.CodeFixes.CodeFixContext context)\tUnknown\r\n \tMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.CodeFixes.CodeFixService.GetCodeFixesAsync(Microsoft.CodeAnalysis.Document document, Microsoft.CodeAnalysis.Text.TextSpan span, Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider fixer, bool isBlocking, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnosticdiagnostics, System.Threading.CancellationToken cancellationToken)\tUnknown\r\n \tMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.CodeFixes.CodeFixService.AppendFixesAsync.AnonymousMethod__2(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnosticdxs)\tUnknown\r\n \tMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.CodeFixes.CodeFixService.AppendFixesOrConfigurationsAsync.AnonymousMethod__2()\tUnknown\r\n \tMicrosoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.PerformFunctionAsync<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CodeFixes.CodeFix>>(Microsoft.CodeAnalysis.Extensions.IExtensionManager extensionManager, object extension, System.Func<System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CodeFixes.CodeFix>>function, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CodeFixes.CodeFixdefaultValue)\tUnknown\r\n \tMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.CodeFixes.CodeFixService.AppendFixesOrConfigurationsAsync<Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider>(Microsoft.CodeAnalysis.Document document, Microsoft.CodeAnalysis.Text.TextSpan fixesSpan, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostics.DiagnosticDatadiagnosticsWithSameSpan, bool fixAllForInSpan, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CodeFixes.CodeFixCollectionresult, Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider fixer, System.Func<Microsoft.CodeAnalysis.Diagnostic, boolhasFix, System.Func<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>, System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CodeFixes.CodeFix>>getFixes, System.Threading.CancellationToken cancellationToken)\tUnknown\r\n \tMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.CodeFixes.CodeFixService.AppendFixesAsync(Microsoft.CodeAnalysis.Document document, Microsoft.CodeAnalysis.Text.TextSpan span, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostics.DiagnosticDatadiagnostics, bool fixAllForInSpan, bool isBlocking, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CodeFixes.CodeFixCollectionresult, System.Threading.CancellationToken cancellationToken)\tUnknown\r\n```\r\n"},{"Id":"11356104555","Type":"IssuesEvent","CreatedAt":"2020-01-24T21:45:49","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8973","RelatedDescription":"Closed issue \" [Test Failure] Expected error NU1004 disappear when building solution after enabling “RestoreLockedMode”\" (#8973) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet Version: Dev\\5.5.0.6330\r\nVS Version: Master\\29623.15\r\nOS Version: Windows-10-Enterprise-RS5\r\n\r\n## Installation steps: \r\n* https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3341765&view=results\r\n\r\n## Repro steps: \r\n1. Create above corresponding projects via VS. \r\n2. Install a few ‘PackageReference’ packages into the projects.\r\n3. Set MSBuild property “RestorePackagesWithLockFile” to true in csproj file.\r\n  `<RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>`\r\n4. Do a restore.\r\n5. Check it should have generated ‘packages.lock.json’ file alongside *.csproj file.\r\n6. Set msbuild property “RestoreLockedMode” to “true”.\r\n    `<RestoreLockedMode>true</RestoreLockedMode>`\r\n7. Install another package.\r\n8. It should still work fine and update ‘packages.lock.json’ file.\r\n9. Manually add a new PackageReference item into csproj file.\r\n```\r\n<PackageReference Include=\"NUnit\">\r\n   <Version>3.12.0</Version>\r\n </PackageReference>\r\n```\r\n10. Perform restore.\r\n11. Restore should fail with error “NU1004”\r\n12. Build the solution.\r\n\r\n## Expected:\r\nThe error was still showed on error list.\r\n\r\n## Actual:\r\nThe error disappear on error list.\r\n\r\n## Here is the record video for the repro steps:\r\n![restore](https://user-images.githubusercontent.com/20632775/71407713-ccab5b80-2676-11ea-9195-da8a996d5488.gif)\r\n\r\n## Notes: \r\n1. The issue repro on .NET Core project.\r\n2. The issue repro on Master\\29623.15 + NuGet Client Dev\\5.5.0.6355.\r\n3. The issue is not stable, the repro rate is almost 95% for us.\r\n\r\n\r\n"},{"Id":"11356095090","Type":"IssuesEvent","CreatedAt":"2020-01-24T21:44:17","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/4197","RelatedDescription":"Closed issue \"Rework Self-Updater with V3 Apis\" (#4197) at NuGet/Home","RelatedBody":"Currently the self-updater uses NuGet.Core v2 code. \r\nThe V3 APIs provide a similar functionality so this should be reworked."},{"Id":"11356092979","Type":"IssuesEvent","CreatedAt":"2020-01-24T21:43:56","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9102","RelatedDescription":"Opened issue \"Delete TestEnvironment class in SDK resolver test assembly\" (#9102) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nWe need to remove the [TestEnvironment](https://github.com/NuGet/NuGet.Client/blob/dev/test/NuGet.Core.Tests/Microsoft.Build.NuGetSdkResolver.Tests/TestEnvironment.cs) class in favor of the [TestDirectory](https://github.com/NuGet/NuGet.Client/blob/dev/test/TestUtilities/Test.Utility/TestDirectory.cs) class.\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version (x.x.x.xxx):\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1.\r\n\r\n2.\r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"11355951721","Type":"IssuesEvent","CreatedAt":"2020-01-24T21:20:55","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9101","RelatedDescription":"Closed issue \"Excluding specific items from nuget library when using PackageReference\" (#9101) at NuGet/Home","RelatedBody":"I am a package developer and I want to debug one assembly from my package in the context of an application that consumes the package.  In the old packages.config style all package assemblies were direct references in the project using it.  If MyTestPackage had A.dll and B.dll I could bring the csproj for A.dll into my solution and swap out the references from nuget to local project easily.  Is there anything I can take advantage of in the new PackageReference format to accomplish the same?  "},{"Id":"11355710606","Type":"IssuesEvent","CreatedAt":"2020-01-24T20:43:25","Actor":"cwtowns77","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9101","RelatedDescription":"Opened issue \"Excluding specific items from nuget library when using PackageReference\" (#9101) at NuGet/Home","RelatedBody":"I am a package developer and I want to debug one assembly from my package in the context of an application that consumes the package.  In the old packages.config style all package assemblies were direct references in the project using it.  If MyTestPackage had A.dll and B.dll I could bring the csproj for A.dll into my solution and swap out the references from nuget to local project easily.  Is there anything I can take advantage of in the new PackageReference format to accomplish the same?  "},{"Id":"11355604824","Type":"IssuesEvent","CreatedAt":"2020-01-24T20:27:08","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9098","RelatedDescription":"Closed issue \"Nuget SDK resolver no longer handles global.json files with comments\" (#9098) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\nMSBuild 16.5.0-preview-20059-01+86d9494e4\r\n\r\nNuGet version (x.x.x.xxx):\r\nWhichever binaries ship with MSBuild 16.5.0-preview-20059-01+86d9494e4\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): N/A\r\n\r\nWorked before? If so, with which NuGet version: Yes. Looks like a regression due to NuGet/NuGet.Client#3157\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Add a global.json with the following content:\r\n```\r\n{\r\n  // Defines version of MSBuild project SDKs to use\r\n  // https://docs.microsoft.com/en-us/visualstudio/msbuild/how-to-use-project-sdk?view=vs-2017#how-project-sdks-are-resolved\r\n  \"msbuild-sdks\": {\r\n    \"Microsoft.Build.Traversal\": \"2.0.19\",\r\n  }\r\n}\r\n```\r\n\r\n2. Add a project:\r\n```\r\n<Project Sdk=\"Microsoft.Build.Traversal\" />\r\n```\r\n\r\n3. msbuild\r\n\r\nThis error shows, indicating the Nuget SDK resolver did not find the SDK:\r\n```\r\n<project file> : error : C:\\Program Files\\dotnet\\sdk\\3.1.200-preview-014883\\Sdks\\Microsoft.Build.Traversal\\Sdk not found. Check that a recent enough .NET Core SDK is installed and/or increase the version specified in global.json.\r\n```\r\n\r\nRemoving the comments in global.json fixes the issues.\r\n\r\nThis worked with older versions of the NuGet SDK resolver."},{"Id":"11355410263","Type":"IssuesEvent","CreatedAt":"2020-01-24T19:58:08","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9100","RelatedDescription":"Opened issue \"Test: RestoreNetCore_MultipleProjects_SameToolDifferentVersions_NoOp_FailsAsync is flaky\" (#9100) at NuGet/Home","RelatedBody":"[This assertion](https://github.com/NuGet/NuGet.Client/blob/ac177820b30d328e3c6a4f4a6801b28cc7441a66/test/NuGet.Clients.Tests/NuGet.CommandLine.Test/RestoreNETCoreTest.cs#L1877) is sometimes failing with: \r\n\r\n> 8 needs to be 9 or 10\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-01-25T05:30:44.3374382Z","RunDurationInMilliseconds":1942}