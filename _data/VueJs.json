{"Data":{"Vue-Issues":{"Issues":[{"Id":"578425819","IsPullRequest":true,"CreatedAt":"2020-03-11T21:26:53","Actor":"eltociear","Number":"11200","RawContent":null,"Title":"fix(readme): svg image","State":"closed","Body":"add ?sanitize=true to svg\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11200","RelatedDescription":"Closed or merged PR \"fix(readme): svg image\" (#11200)"},{"Id":"578994584","IsPullRequest":false,"CreatedAt":"2020-03-11T07:27:02","Actor":"MoonChaserChen","Number":"11202","RawContent":null,"Title":"To do list not works fine for high version","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/aq5npz42/](https://jsfiddle.net/aq5npz42/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJust click the to do list(not the last one)\r\n\r\n### What is expected?\r\nfinished or unfinished task filtered correctly\r\n\r\n### What is actually happening?\r\nchecked status of tasks not right.\r\n\r\n---\r\nI want to make a to do list using computed   filter.\r\n\r\nI use `<input type=\"checkbox\" v-model=\"finishStatus\"><span>Show finished</span>` to view finished or unfinished task.\r\n\r\nwhen I use a low version of 2.0.3(which is commented in the code), it works fine. But when i change to `https://cdn.jsdelivr.net/npm/vue`(current version is v2.6.11), it does not act as expected(as for checked status of tasks).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11202","RelatedDescription":"Closed issue \"To do list not works fine for high version\" (#11202)"},{"Id":"578991532","IsPullRequest":false,"CreatedAt":"2020-03-11T03:51:20","Actor":"MoonChaserChen","Number":"11201","RawContent":null,"Title":"To do list not work fine for high version","State":"closed","Body":"I want to make a to do list using `computed` + `filter`, here is my complete code:\r\n```\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width\">\r\n    <!--<script src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.0.3/vue.js\"></script>-->\r\n    <script src=\"https://cdn.jsdelivr.net/npm/vue\"></script>\r\n    <title>Test Vue</title>\r\n</head>\r\n<body>\r\n\r\n<div id=\"app\">\r\n    <input type=\"checkbox\" v-model=\"finishStatus\"><span>Show finished</span>\r\n    <br/><br/>\r\n    <div v-for=\"item in filteredItems\">\r\n        <input type=\"checkbox\" v-model=\"item.finishStatus\"><span>{{item.name}}</span>\r\n    </div>\r\n</div>\r\n\r\n\r\n<script>\r\n    const app = new Vue({\r\n        el: '#app',\r\n        data: {\r\n            tasks: [\r\n                {name: 'task1', finishStatus: false},\r\n                {name: 'task2', finishStatus: false},\r\n                {name: 'task3', finishStatus: false},\r\n                {name: 'task4', finishStatus: false},\r\n                {name: 'task5', finishStatus: false},\r\n                {name: 'task6', finishStatus: false}\r\n            ],\r\n            finishStatus: false\r\n        },\r\n\r\n        computed: {\r\n            filteredItems() {\r\n                return this.tasks.filter(item => {\r\n                    return item.finishStatus === this.finishStatus\r\n                })\r\n            }\r\n        }\r\n\r\n    })\r\n</script>\r\n</body>\r\n</html>\r\n```\r\n\r\nI use `<input type=\"checkbox\" v-model=\"finishStatus\"><span>Show finished</span>` to view finished or unfinished task.\r\n\r\nwhen I use a low version of 2.0.3(which is commented in the code), it works fine. But when i change to `https://cdn.jsdelivr.net/npm/vue`(current version is  v2.6.11), it does not act as expected(checked status of tasks).","Url":"https://github.com/vuejs/vue/issues/11201","RelatedDescription":"Closed issue \"To do list not work fine for high version\" (#11201)"},{"Id":"574657887","IsPullRequest":true,"CreatedAt":"2020-03-10T08:53:21","Actor":"eltociear","Number":"11173","RawContent":null,"Title":"fix(readme): svg image","State":"closed","Body":"add ?sanitize=true to svg\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11173","RelatedDescription":"Closed or merged PR \"fix(readme): svg image\" (#11173)"},{"Id":"578334332","IsPullRequest":false,"CreatedAt":"2020-03-10T04:46:17","Actor":"goodforever","Number":"11199","RawContent":null,"Title":"Can compile a project based on vuejs to wasm ?","State":"closed","Body":"Can compile a project based on vuejs to wasm ?","Url":"https://github.com/vuejs/vue/issues/11199","RelatedDescription":"Closed issue \"Can compile a project based on vuejs to wasm ?\" (#11199)"},{"Id":"578037482","IsPullRequest":false,"CreatedAt":"2020-03-09T16:54:45","Actor":"derMart","Number":"11198","RawContent":null,"Title":"conditional root template in .vue file","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\nhttps://github.com/vuejs/vue-issue-helper/issues/49\r\n\r\n### Steps to reproduce\r\nNot sure if this applies to vue or vue-loader. It seems v-if statements are not processed correctly when inside a root template tag.\r\nSuppose you have the following .vue file:\r\n```\r\n<template v-if=\"true\">\r\n  <p>test</p>\r\n</template>\r\n<template v-else>\r\n  <p>test2</p>\r\n</template>\r\n```\r\n\r\n### What is expected?\r\nThe test paragraph should be rendered as v-if is true (also tested with other more complicated truthy conditions)\r\n\r\n### What is actually happening?\r\nThe test2 paragraph is rendered.\r\nIt seems always the last template tag, having either v-else or any v-else-if statement is rendered, even if that v-else-if condition is false.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11198","RelatedDescription":"Closed issue \"conditional root template in .vue file\" (#11198)"},{"Id":"577635015","IsPullRequest":false,"CreatedAt":"2020-03-09T16:29:05","Actor":"zhoutengshen","Number":"11193","RawContent":null,"Title":"questions about accessing 'this' in asynchronous components is undefined","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/friendly-lake-s93kz](https://codesandbox.io/s/friendly-lake-s93kz)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nmy code like this;\r\n\r\n```\r\n<template>\r\n\t<DynamicHome class=\"HomeIndex\"/>\r\n</template>\r\n<script>\r\n\tconst isPc = document.body.clientWidth >= 700;\r\n\tconst path = isPc ? './HomePc' : './HomeMobile';\r\n\texport default {\r\n\t\tname: 'Home',\r\n\t\tcomponents: {\r\n\t\t\t// https://webpack.js.org/api/module-methods/#import\r\n\t\t\t'DynamicHome': () => {\r\n\t\t\t\t/* eslint-disable*/\r\n\t\t\t\tconsole.log('i am DynamicHome => \"this\" is =>'   this); // this is my question why 'this' is undefined;\r\n\t\t\t\treturn import(`${path}`);\r\n\t\t\t}\r\n\t\t},\r\n\t};\r\n</script>\r\n\r\n```\r\n\r\n### What is expected?\r\ni wan 'this' is a instance of Vue\r\n\r\n### What is actually happening?\r\nthis is undefined\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11193","RelatedDescription":"Closed issue \"questions about accessing 'this' in asynchronous components is undefined\" (#11193)"},{"Id":"577987588","IsPullRequest":false,"CreatedAt":"2020-03-09T15:22:49","Actor":"HanumanthDB","Number":"11197","RawContent":null,"Title":"IE Browser crashes  when Select tag is used in the form . it's not working at all. ","State":"closed","Body":"Below is the code. \r\n\r\n<select id=\"Urgency\" class=\"custom-select\"   v-model=\"formData.urgency\" :class=\"{'flow-very-high':formData.urgency=='High','flow-high':formData.urgency=='Medium','flow-low':formData.urgency=='Low'}\">\r\n\t\t\t\t\t\t\r\n\t<option value=\"High\">High </option>\r\n\t<option value=\"Medium\">Medium</option>\r\n\t<option value=\"Low\">Low</option>\r\n\t\t\t\r\n</select>\r\n\r\nconsole message:\r\n \r\nVue warn: you may have an infinite loop in a component render function.\r\n\r\nBut it works fine in Chrome\r\n","Url":"https://github.com/vuejs/vue/issues/11197","RelatedDescription":"Closed issue \"IE Browser crashes  when Select tag is used in the form . it's not working at all. \" (#11197)"},{"Id":"577980462","IsPullRequest":true,"CreatedAt":"2020-03-09T15:13:04","Actor":"vue-bot","Number":"11196","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/11196","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#11196)"},{"Id":"575994057","IsPullRequest":true,"CreatedAt":"2020-03-09T15:06:38","Actor":"vue-bot","Number":"11180","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/11180","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#11180)"},{"Id":"575993987","IsPullRequest":true,"CreatedAt":"2020-03-09T15:06:04","Actor":"vue-bot","Number":"11179","RawContent":null,"Title":"[automated] Patreon backers update (Mar 2020","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/11179","RelatedDescription":"Closed or merged PR \"[automated] Patreon backers update (Mar 2020\" (#11179)"},{"Id":"577788412","IsPullRequest":true,"CreatedAt":"2020-03-09T10:03:24","Actor":"iiijarvis","Number":"11195","RawContent":null,"Title":"modify attribute regexp","State":"open","Body":"delete symbol \"+\"","Url":"https://github.com/vuejs/vue/pull/11195","RelatedDescription":"Open PR \"modify attribute regexp\" (#11195)"},{"Id":"577655637","IsPullRequest":true,"CreatedAt":"2020-03-09T04:57:01","Actor":"yehuajin","Number":"11194","RawContent":null,"Title":"[release] weex-vue-framework@2.4.2-weex.1 (#6196)","State":"closed","Body":"* build(release weex): ignore the file path of entries\r\n\r\n* [release] weex-vue-framework@2.4.2-weex.1\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11194","RelatedDescription":"Closed or merged PR \"[release] weex-vue-framework@2.4.2-weex.1 (#6196)\" (#11194)"},{"Id":"577630303","IsPullRequest":false,"CreatedAt":"2020-03-09T03:07:45","Actor":"zhoutengshen","Number":"11192","RawContent":null,"Title":"questions about accessing 'this' in asynchronous components","State":"closed","Body":"my code like this;\r\n\r\n```\r\n<template>\r\n\t<DynamicHome class=\"HomeIndex\"/>\r\n</template>\r\n<script>\r\n\tconst isPc = document.body.clientWidth >= 700;\r\n\tconst path = isPc ? './HomePc' : './HomeMobile';\r\n\texport default {\r\n\t\tname: 'Home',\r\n\t\tcomponents: {\r\n\t\t\t// https://webpack.js.org/api/module-methods/#import\r\n\t\t\t'DynamicHome': () => {\r\n\t\t\t\t/* eslint-disable*/\r\n\t\t\t\tconsole.log('i am DynamicHome => \"this\" is =>' + this); // this is my question why 'this' is undefined;\r\n\t\t\t\treturn import(`${path}`);\r\n\t\t\t}\r\n\t\t},\r\n\t};\r\n</script>\r\n\r\n```\r\n\r\n\r\n","Url":"https://github.com/vuejs/vue/issues/11192","RelatedDescription":"Closed issue \"questions about accessing 'this' in asynchronous components\" (#11192)"},{"Id":"577553088","IsPullRequest":true,"CreatedAt":"2020-03-08T19:36:49","Actor":"AjiTae","Number":"11191","RawContent":null,"Title":"feat(validation): support BigInt in props type validation","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nJust a simple addition to make BigInt validation work.","Url":"https://github.com/vuejs/vue/pull/11191","RelatedDescription":"Open PR \"feat(validation): support BigInt in props type validation\" (#11191)"},{"Id":"577466271","IsPullRequest":false,"CreatedAt":"2020-03-08T11:37:26","Actor":"wolandec","Number":"11190","RawContent":null,"Title":"Problem with rendering content inside an SVG tag","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/prod-violet-4f5be](https://codesandbox.io/s/prod-violet-4f5be)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJust use a link to minimal reproduction.\r\n\r\n### What is expected?\r\n\"Text from Second.vue\" to be appear.\r\n\r\n### What is actually happening?\r\n\"Text from Second.vue\" doesn't appear.\r\n\r\n---\r\nIn this https://codesandbox.io/s/jovial-violet-qbok9 example I create SVG dynamically with no Vue use and the text \"Hello\" appears.\r\n\r\nEven more weird content: if I add anything in body tag using Chrome devtools, then text shows up.\r\nhttps://www.youtube.com/watch?v=TxL5olpWqT4\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11190","RelatedDescription":"Closed issue \"Problem with rendering content inside an SVG tag\" (#11190)"},{"Id":"577435857","IsPullRequest":true,"CreatedAt":"2020-03-08T02:58:56","Actor":"kawoka","Number":"11189","RawContent":null,"Title":"types(v-node-directive): changed expression type  to optional string(fix #10871) ","State":"open","Body":"I changed expression type  to optional string\r\n\r\nfix #10871\r\n\r\nit seems stopped since December ... so i try it 🙌\r\nplease point out if i have any deficiencies 🙏\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: types\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11189","RelatedDescription":"Open PR \"types(v-node-directive): changed expression type  to optional string(fix #10871) \" (#11189)"},{"Id":"576817084","IsPullRequest":false,"CreatedAt":"2020-03-06T15:44:08","Actor":"kevinrioupsq","Number":"11187","RawContent":null,"Title":"Ability to choose wich parent template v-slot reference","State":"closed","Body":"### What problem does this feature solve?\r\nIn case I have a component (A) with 3 slots and an other one (B) in one of the slot, I want to reference a slot of the A component in the default slot of the B component\r\n\r\nExample:\r\n```html\r\n<template>\r\n  <p-page\r\n    title=\"My page\"\r\n  >\r\n    <!-- Component that give function to call when using the favorite menu -->\r\n    <functional-component v-slot=\"{apply, save}\">\r\n      <!-- Next slot is a slot of my p-page -->\r\n      <template v-slot:header>\r\n        <p-favorites-menu\r\n          :on-apply=\"apply\"\r\n          :on-save=\"save\"\r\n        />\r\n      </template>\r\n    </functional-component>\r\n    <!-- ... -->\r\n  </p-page>\r\n</template>\r\n```\r\nThe problem is that the template with `v-slot:header` is searching a slot in my `functionnal component` not in the `p-page` component\r\n\r\n### What does the proposed API look like?\r\nMy idea is that, change the v-slot like this `v-slot:[parent_ref]:[slot_name]=\"...\"` and if it's the direct parent just omit the `[parent_ref]` \r\nThe example look now like\r\n```html\r\n<template>\r\n  <p-page\r\n    title=\"My page\"\r\n    ref=\"page\"\r\n  >\r\n    <!-- Component that give function to call when using the favorite menu -->\r\n    <functional-component v-slot=\"{apply, save}\">\r\n      <!-- Next slot is a slot of my p-page -->\r\n      <template v-slot:page:header>\r\n        <p-favorites-menu\r\n          :on-apply=\"apply\"\r\n          :on-save=\"save\"\r\n        />\r\n      </template>\r\n    </functional-component>\r\n    <!-- ... -->\r\n  </p-page>\r\n</template>\r\n```\r\n\r\nI'm sorry if a solution already exist, I missed it, thanks to inform me ;)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11187","RelatedDescription":"Closed issue \"Ability to choose wich parent template v-slot reference\" (#11187)"},{"Id":"576993648","IsPullRequest":false,"CreatedAt":"2020-03-06T15:35:22","Actor":"zhsonga","Number":"11188","RawContent":null,"Title":"change props data makes father and child component render","State":"closed","Body":"### Version\r\n2.5.2\r\n\r\n### Reproduction link\r\n[https://jsbin.com/xoqaras/edit?html,css,js,console,output](https://jsbin.com/xoqaras/edit?html,css,js,console,output)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nclick the changeArr \r\n\r\n### What is expected?\r\njust  the child component render  or no one render\r\n\r\n### What is actually happening?\r\nchild and father both render\r\n\r\n---\r\nuse Array function make the watcher notify\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11188","RelatedDescription":"Closed issue \"change props data makes father and child component render\" (#11188)"},{"Id":"576477713","IsPullRequest":true,"CreatedAt":"2020-03-06T15:09:03","Actor":"bakugod","Number":"11185","RawContent":null,"Title":"fix(readme): svg doesnt displayed ","State":"closed","Body":"Add `?sanitize=true` to svg. But maybe it’s better to replace it to png?\r\n\r\nLink to the similar issue: https://github.com/github/markup/issues/556","Url":"https://github.com/vuejs/vue/pull/11185","RelatedDescription":"Closed or merged PR \"fix(readme): svg doesnt displayed \" (#11185)"},{"Id":"576699947","IsPullRequest":false,"CreatedAt":"2020-03-06T05:01:26","Actor":"lboquan","Number":"11186","RawContent":null,"Title":"Render vuejs in v-html","State":"closed","Body":"   I'am developing a web app with golang, axios and vuejs. In my web pages, I have multiple menu items in the left. When user clicks in some menu item, an axios post will be called and render a page contains vuejs syntax and script to a div (bind with v-html) in the right part. However, the vuejs syntax is not rendered. Neither are the scripts being executed. Is there any way to render a vuejs syntax based page and display in div binded with v-html?","Url":"https://github.com/vuejs/vue/issues/11186","RelatedDescription":"Closed issue \"Render vuejs in v-html\" (#11186)"},{"Id":"576394090","IsPullRequest":false,"CreatedAt":"2020-03-05T19:28:32","Actor":"rachitpant","Number":"11184","RawContent":null,"Title":"Computed property changes in parent component does not cause it to re-render.","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/shy-sea-1fhky?fontsize=14&hidenavigation=1&theme=dark](https://codesandbox.io/s/shy-sea-1fhky?fontsize=14&hidenavigation=1&theme=dark)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1) Type something in the first text box , the changes are propogated to parent component `newMessage` and the v-modelled computed property changes.\r\n2) However the parent component does not re-render , as a result the new value is not passed down.\r\n\r\n### What is expected?\r\nAs soon the computed property changes in parent component `newMessage` , the component should re-render and it should cause this property to be passed down to child Component.\r\n\r\n### What is actually happening?\r\nThe components computed property changes , but the component does not re-render.\r\nAs soon as the check the checkbox , the component re-renders as its data changes.\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11184","RelatedDescription":"Closed issue \"Computed property changes in parent component does not cause it to re-render.\" (#11184)"},{"Id":"574722395","IsPullRequest":false,"CreatedAt":"2020-03-05T15:25:26","Actor":"mohammad-bede","Number":"11174","RawContent":null,"Title":"not to render @click entirely instead of making it null [Screen Reader related]","State":"closed","Body":"### What problem does this feature solve?\r\nNVDA reads a table row as \"clickable row\" if there is an \"@click\" in the html tag even if it is set to null. We need an option to completely ignore the \"@click\" in html without removing it because sometimes the click event needs to be executed.\r\n\r\nI am using NVDA 2019.2.1. Chrome browser  80.0.3987.122 (Official Build) (64-bit). Windows 10.\r\n\r\n### What does the proposed API look like?\r\nthe method could be something like \"@click.ignore\" or something like that.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11174","RelatedDescription":"Closed issue \"not to render @click entirely instead of making it null [Screen Reader related]\" (#11174)"},{"Id":"576312953","IsPullRequest":false,"CreatedAt":"2020-03-05T15:23:10","Actor":"rachitpant","Number":"11183","RawContent":null,"Title":"Vue parent component not re-rendering when computed properties are changing","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/elastic-fast-t3pti?fontsize=14&hidenavigation=1&theme=dark](https://codesandbox.io/s/elastic-fast-t3pti?fontsize=14&hidenavigation=1&theme=dark)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1) click on the Vue Message link - A new bootstrap modal will show\r\n2) then hit reply - Another bootstrap modal will show- This modal is wrapped inside component newMessage.vue\r\n3) then type ‘Test’ in the To field and then select ‘Test User’ from the drop down. The selected user wont show until you click the checkbox - Schedule later.\r\n\r\n### What is expected?\r\nAs soon as you select `Test User` and the computed property in parent component `newMessage` changes , the component should re-render and it should cause this property to be passed down to child Component.\r\n\r\n### What is actually happening?\r\nThe components computed property changes , but the component does not re-render.\r\nInterestingly , when I check/uncheck the \"Schedule later\" checkbox , the component's data changes and then it re-renders - which results in the new value of the computed value also being passed down and shown.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11183","RelatedDescription":"Closed issue \"Vue parent component not re-rendering when computed properties are changing\" (#11183)"},{"Id":"576133072","IsPullRequest":false,"CreatedAt":"2020-03-05T10:04:15","Actor":"affemaen","Number":"11182","RawContent":null,"Title":"Vue form inputs broken on IE11 on browser refresh","State":"open","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://codepen.io/affeman/pen/LYVzzYw](https://codepen.io/affeman/pen/LYVzzYw)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nNot reproducible in CodePen but the code is the same used in the Vue official documentation (See below)\r\n\r\n1. Go to https://vuejs.org/v2/guide/forms.html#Checkbox in Internet Explorer 11\r\n2. Click the checkbox\r\n3. Reload the page\r\n\r\n### What is expected?\r\nThe checkbox is unchecked and the label is false\r\n\r\n### What is actually happening?\r\nThe checkbox is checked and the label is false\r\n\r\n---\r\nThe same issue applies to the other components on the page as well.\r\n\r\nThe issue is not applicable after a hard refresh.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11182","RelatedDescription":"Open issue \"Vue form inputs broken on IE11 on browser refresh\" (#11182)"},{"Id":"576041693","IsPullRequest":false,"CreatedAt":"2020-03-05T07:36:39","Actor":"h330894169","Number":"11181","RawContent":null,"Title":"vue 概率性出现vue官方内部库报错，vnode tagName is img, but vnode.elm is TextNode, Cannot read property 'indexOf' of undefined","State":"closed","Body":"### Version\r\n2.6.11\r\n\r\n### Reproduction link\r\n[https://film.qq.com/x/credit_mall/?ptag=vue](https://film.qq.com/x/credit_mall/?ptag=vue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n打开页面，不停的刷新页面，概率性出现\r\n\r\n### What is expected?\r\nCannot read property 'indexOf' of undefined\r\n\r\n![image](https://user-images.githubusercontent.com/17446782/75957039-27252b80-5ef4-11ea-8086-590010db37ca.png)\r\n\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/17446782/75956994-1379c500-5ef4-11ea-9e2c-37bd449d8d7f.png)\r\n\r\n![image](https://user-images.githubusercontent.com/17446782/75957019-1e345a00-5ef4-11ea-9ba4-26e49f0be2aa.png)\r\n\r\n### What is actually happening?\r\n应该正常显示\r\n\r\n---\r\nvnode tagName is img, but vnode.elm is textNode\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11181","RelatedDescription":"Closed issue \"vue 概率性出现vue官方内部库报错，vnode tagName is img, but vnode.elm is TextNode, Cannot read property 'indexOf' of undefined\" (#11181)"},{"Id":"575241298","IsPullRequest":true,"CreatedAt":"2020-03-04T09:07:30","Actor":"Elevista","Number":"11178","RawContent":null,"Title":"fix(keep-alive): should not cache destroyed instance","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nreproduce link : [https://jsfiddle.net/mwpeodL8](https://jsfiddle.net/mwpeodL8)\r\n\r\nAfter keep-alive child component destroys itself,\r\ncomponent instance is being created every time when it re-activated\r\n\r\nPlease check reproduce link and test code","Url":"https://github.com/vuejs/vue/pull/11178","RelatedDescription":"Open PR \"fix(keep-alive): should not cache destroyed instance\" (#11178)"},{"Id":"575187169","IsPullRequest":true,"CreatedAt":"2020-03-04T07:30:49","Actor":"mayunhai","Number":"11177","RawContent":null,"Title":"Delete useless code","State":"closed","Body":"Delete useless code\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: Delete useless code\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11177","RelatedDescription":"Closed or merged PR \"Delete useless code\" (#11177)"},{"Id":"575111127","IsPullRequest":true,"CreatedAt":"2020-03-04T06:33:15","Actor":"mayunhai","Number":"11176","RawContent":null,"Title":"Delete useless code","State":"closed","Body":"this line is useless\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: Delete useless code\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/11176","RelatedDescription":"Closed or merged PR \"Delete useless code\" (#11176)"},{"Id":"574993304","IsPullRequest":false,"CreatedAt":"2020-03-03T22:51:18","Actor":"kodintaylor","Number":"11175","RawContent":null,"Title":"v-model binding does not update with html form reset event","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/4hp6fdqt/](https://jsfiddle.net/4hp6fdqt/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\ncreate a custom input component inside a basic html form with a v-model binding for its value. input text into the field and reset the form with an html reset button. (as demonstrated in the jsfiddle)\r\n\r\n### What is expected?\r\ntext is cleared in the input field, displayed text from the bound value is also cleared\r\n\r\n### What is actually happening?\r\n text is cleared in the input field, but not cleared in the data binding. previous text is still visible\r\n\r\n---\r\nI saw some other bug reports with this issue that were all closed with various reasonings that mostly came down to \"working as designed, keep the data model up to date yourself\". I really think this is something vue should be taking care of.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/11175","RelatedDescription":"Closed issue \"v-model binding does not update with html form reset event\" (#11175)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"576676381","IsPullRequest":false,"CreatedAt":"2020-03-06T03:38:31","Actor":"rashadrivera","Number":"3141","RawContent":null,"Title":"VueRouter Silently Fails","State":"closed","Body":"When configuring vue-router, it can fail without any explanation.  In my case, I placed a '<router-view></router-view>' tag in my app.  However, when the app renders the UI, there is nothing shown.  The Chrome debug tool shows the router-view node, but nothing is inside.  \r\n\r\nThe expected behavior is for the router to throw an error or show a console message explaining why it did not render anything instead of silently failing.  ","Url":"https://github.com/vuejs/vue-router/issues/3141","RelatedDescription":"Closed issue \"VueRouter Silently Fails\" (#3141)"},{"Id":"575935320","IsPullRequest":false,"CreatedAt":"2020-03-05T15:26:46","Actor":"vallemar","Number":"3140","RawContent":null,"Title":"Overwrite Props to Route Components does not work","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/vallemar/rfwo5m3v/74/](https://jsfiddle.net/vallemar/rfwo5m3v/74/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick on the text.\r\n\r\n### What is expected?\r\nI hope that the properties that are passed to the view are the ones that I have configured in my data link with <router-link>.\r\n\r\n### What is actually happening?\r\nThe property that is passed is the default that is put on the router and is not overwritten by the one that is passed at that time from the <router-link>.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3140","RelatedDescription":"Closed issue \"Overwrite Props to Route Components does not work\" (#3140)"},{"Id":"575525594","IsPullRequest":false,"CreatedAt":"2020-03-04T16:25:51","Actor":"victortwc","Number":"3139","RawContent":null,"Title":"[typescript] Incompatible Route and Location types","State":"closed","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[http://shorturl.at/ixJQ5](http://shorturl.at/ixJQ5)\r\n\r\n\r\n### Steps to reproduce\r\n```\r\nthis.$router.push({\r\n    ...this.$route, \r\n    params: {\r\n        newParam: true\r\n    }\r\n})\r\n```\r\n\r\nWith typescript, it breaks.\r\n\r\n### What is expected?\r\nRoute and Location types are compatible.\r\n\r\n### What is actually happening?\r\nAs Route now have the name parameter with `string | null | undefined` it breaks the navigation, as `Location` will only accept `string | undefined` as name.\r\n\r\n---\r\nCommit causing the issue:\r\nhttps://github.com/vuejs/vue-router/commit/8f831f28f33bb766d5baaabc8b2daff259f3d45b\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3139","RelatedDescription":"Closed issue \"[typescript] Incompatible Route and Location types\" (#3139)"},{"Id":"574247911","IsPullRequest":true,"CreatedAt":"2020-03-03T17:10:44","Actor":"Alex-Sokolov","Number":"3136","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3136","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#3136)"},{"Id":"574702045","IsPullRequest":false,"CreatedAt":"2020-03-03T16:55:47","Actor":"davNazaryan","Number":"3137","RawContent":null,"Title":"Option to merge meta with parent route meta","State":"closed","Body":"### What problem does this feature solve?\r\nAdd an option `mergeParentMeta: [Boolean]` to give the ability to merge route meta with its parent route meta directly in routes.js\r\n`mergeParentMeta`-s default value is `false`. The priority of the child must be higher than the parent.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\n```js\r\n{\r\n        path: '/report',\r\n        name: 'report',\r\n        redirect: { name: 'report/workspace' },\r\n        component: { render(c) { return c('router-view'); } },\r\n        meta: {\r\n          breadcrumbs: {\r\n            name: 'Reports',\r\n          },\r\n          layout: {\r\n            headerMenu: true,\r\n          },\r\n          menuItems: [\r\n            { name: 'Banners', to: 'report/banner' },\r\n            { name: 'Campaigns', to: 'report/campaign' },\r\n            { name: 'Workspaces', to: 'report/workspace' },\r\n          ],\r\n        },\r\n        children: [\r\n          {\r\n            path: '/report/workspace',\r\n            ...component('report/list/List', 'report/workspace'),\r\n            mergeParentMeta: true,\r\n            meta: {\r\n              breadcrumbs: {\r\n                crumbs: [\r\n                  { name: 'Reports', route: 'report', title: 'Reports' },\r\n                ],\r\n                name: 'Workspaces',\r\n              },\r\n            },\r\n          },\r\n          {\r\n            path: '/report/campaign',\r\n            ...component('report/list/List', 'report/campaign'),\r\n            mergeParentMeta: true,\r\n            meta: {\r\n              breadcrumbs: {\r\n                crumbs: [\r\n                  { name: 'Reports', route: 'report', title: 'Reports' },\r\n                ],\r\n                name: 'Campaigns',\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n```\r\n\r\nIn this case, the `menuItems` meta can be used inside `report\\workspace` and `report\\campaign` routes.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3137","RelatedDescription":"Closed issue \"Option to merge meta with parent route meta\" (#3137)"},{"Id":"574768719","IsPullRequest":false,"CreatedAt":"2020-03-03T15:58:30","Actor":"lyaskovec","Number":"3138","RawContent":null,"Title":"Double decoding of url params","State":"open","Body":"### Version\r\n3.1.6\r\n\r\n### Reproduction link\r\n[https://lyaskovec.github.io/tests/](https://lyaskovec.github.io/tests/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThere are two cases where you can see issue with double decoding of URL:\r\ncase 1:\r\n- Go to the example page\r\n- Click on link  /%25\r\n- Click on link /home\r\n- Try to use browsers navigation buttons\r\n\r\ncase2:\r\n- Go to the example page\r\n- Click on link  /%25\r\n- reload the browser page\r\n\r\n\r\n### What is expected?\r\nIt should show a correct page\r\n\r\n### What is actually happening?\r\nI got \"URIError: URI malformed\" error\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3138","RelatedDescription":"Open issue \"Double decoding of url params\" (#3138)"},{"Id":"573201562","IsPullRequest":true,"CreatedAt":"2020-02-29T06:07:22","Actor":"iliyaZelenko","Number":"3135","RawContent":null,"Title":"fix(types): interface Route, the query property","State":"open","Body":"Maybe it can also be null (see the `query` property in the `Location`)\r\n\r\n","Url":"https://github.com/vuejs/vue-router/pull/3135","RelatedDescription":"Open PR \"fix(types): interface Route, the query property\" (#3135)"},{"Id":"572931434","IsPullRequest":false,"CreatedAt":"2020-02-28T18:35:07","Actor":"jsamayoap","Number":"3134","RawContent":null,"Title":"Change router params to a generic/any type instead of Dictionary<string>","State":"closed","Body":"Expected behavior, to push params of any type, like:\r\n\r\nthis.$router.push({\r\n                name: 'piloto',\r\n                params: {\r\n                    id: item.id.toString(),\r\n                    isThisTrue: (this.opN === 1),\r\n                    isThisFalse: (this.opN === 2)\r\n                }\r\n            })\r\n\r\nCurrently this code on typescript would produce the following error:\r\nNo overload matches this call\r\n\r\nhttps://github.com/vuejs/vue-router/blob/39d46b254bd8130464626539e7b73b4cc760241b/types/router.d.ts#L140\r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/3134","RelatedDescription":"Closed issue \"Change router params to a generic/any type instead of Dictionary<string>\" (#3134)"},{"Id":"570336117","IsPullRequest":false,"CreatedAt":"2020-02-25T06:10:00","Actor":"luxaritas","Number":"3133","RawContent":null,"Title":"Redirection away from and back to route fails to cancel navigation","State":"open","Body":"### Version\r\n3.1.3\r\n\r\n### Reproduction link\r\n[https://codepen.io/luxaritas/pen/WNvRagw?editors=1010](https://codepen.io/luxaritas/pen/WNvRagw?editors=1010)\r\n\r\n### Steps to reproduce\r\n* Run a long async function within a route guard\r\n* Start at route A, navigate to route B, and then back to A again before the guard for B resolves\r\n\r\n### What is expected?\r\nNavigation to route B is cancelled, or at least completed and re-routed to route A\r\n\r\n### What is actually happening?\r\nNavigationDuplicated is thrown, and the page navigates to and stays on route B\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3133","RelatedDescription":"Open issue \"Redirection away from and back to route fails to cancel navigation\" (#3133)"},{"Id":"569698372","IsPullRequest":false,"CreatedAt":"2020-02-24T08:17:54","Actor":"namoosalishah","Number":"3132","RawContent":null,"Title":"Nested named route with parameter is redirected to the route name on refresh","State":"closed","Body":"Hi,\r\n\r\nI am having this issue with the nested routes having parameter, when I refresh the page, the route loses the parameter and redirects to the route name instead. Please check the following code.\r\nBefore refreshing the page\r\nhttp://localhost:8080/pos/tickets/1\r\nand after refreshing\r\nhttp://localhost:8080/pos/ticketDetail\r\n<pre>\r\n{\r\n   path: \"/pos\",\r\n   name: \"pos\",\r\n   component: Pos,\r\n   meta: {\r\n      requiresAuth: true\r\n   },\r\n   children: [\r\n      ...... other child routes,\r\n     {\r\n       path: \"tickets/:ticket_id\",\r\n       name: \"ticketDetail\",\r\n       component: TicketDetail\r\n      }\r\n   ]\r\n}\r\n</pre>\r\n\"vue\": \"^2.6.8\",\r\n\"vue-router\": \"^3.0.1\"\r\n\r\nPlease advise?","Url":"https://github.com/vuejs/vue-router/issues/3132","RelatedDescription":"Closed issue \"Nested named route with parameter is redirected to the route name on refresh\" (#3132)"},{"Id":"568791080","IsPullRequest":true,"CreatedAt":"2020-02-23T21:52:36","Actor":"NoelDeMartin","Number":"3129","RawContent":null,"Title":"Documentation: Update guard example to avoid stack overflow","State":"closed","Body":"I am surprised that this hasn't been brought up before, so maybe I am doing something wrong. But I am getting a \"too much recursion\" error with the sample code in the documentation.\r\n\r\nLooking at the code, it seems to me like getting a stack overflow *is* the expected behaviour. May this be a [schrödinbug](http://www.catb.org/jargon/html/S/schroedinbug.html)?","Url":"https://github.com/vuejs/vue-router/pull/3129","RelatedDescription":"Closed or merged PR \"Documentation: Update guard example to avoid stack overflow\" (#3129)"},{"Id":"569344783","IsPullRequest":false,"CreatedAt":"2020-02-23T21:24:42","Actor":"zhouyanggodking","Number":"3130","RawContent":null,"Title":"router.go() will not free previous page data causing memory leak issue","State":"closed","Body":"### Version\r\n3.1.3\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/heuristic-poitras-nt2f2?fontsize=14&hidenavigation=1&theme=dark](https://codesandbox.io/s/heuristic-poitras-nt2f2?fontsize=14&hidenavigation=1&theme=dark)\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1.  first land on /home page, then navigate to /about page.    (at this page, it produces a large array)\r\n2. on about page, click back button (calling router.go(-1))\r\n3. at the memory panel of chrome devtool,  click \"garbage collect\" button to force garbage collection.\r\n4. take a snapshot\r\n\r\nyou can see the created array is not freed.\r\n\r\n### What is expected?\r\nArray created on about page should be freed.\r\n\r\n\r\n### What is actually happening?\r\nArray created on about page stays in memory\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->\r\n\r\n![image](https://user-images.githubusercontent.com/6425541/75094433-fd9c0400-55c5-11ea-9a7b-9ac17321bdd9.png)\r\n\r\nNote:  if I click the back button of chrome browser, no issue at all. Weird\r\nYou can also monitor the memory usage of each page. (Please remember to force garbage collection before you look at the stats)\r\n","Url":"https://github.com/vuejs/vue-router/issues/3130","RelatedDescription":"Closed issue \"router.go() will not free previous page data causing memory leak issue\" (#3130)"},{"Id":"569352079","IsPullRequest":true,"CreatedAt":"2020-02-22T20:50:43","Actor":"rongzedong","Number":"3131","RawContent":null,"Title":"增加个 methods 中 redirect 的方法","State":"closed","Body":"不知道这么写对不对，哪里不对，请修正并实现这个方法，因为比如登录 或者其他某些时候是需要这样做的。而比如我就需要这样的教程（例子）。\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3131","RelatedDescription":"Closed or merged PR \"增加个 methods 中 redirect 的方法\" (#3131)"},{"Id":"568732576","IsPullRequest":false,"CreatedAt":"2020-02-22T14:35:01","Actor":"alphatr","Number":"3128","RawContent":null,"Title":"beforeRouteLeave don't prevent router.back()","State":"closed","Body":"### Version\r\n3.1.5\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/alphatr/eawpdvb6/](https://jsfiddle.net/AlphaTr/eawpdvb6/)\r\n\r\n### Steps to reproduce\r\nopen https://jsfiddle.net/alphatr/eawpdvb6/ and click `Go to Page` then click `back`;\r\n\r\n### What is expected?\r\nNeither `location.hash` nor `$route` change\r\n\r\n### What is actually happening?\r\nlocation.hash is changed\r\n\r\n---\r\nif beforeRouteLeave used next in synchronize, the location.hash is not change;\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3128","RelatedDescription":"Closed issue \"beforeRouteLeave don't prevent router.back()\" (#3128)"},{"Id":"568413801","IsPullRequest":false,"CreatedAt":"2020-02-20T16:18:46","Actor":"991567775","Number":"3127","RawContent":null,"Title":"History mode input URL and refresh will not enter the route guard or Axios global interception","State":"closed","Body":"History mode input URL and refresh will not enter the route guard or Axios global interception\r\n\r\n\r\nWhat's the solution","Url":"https://github.com/vuejs/vue-router/issues/3127","RelatedDescription":"Closed issue \"History mode input URL and refresh will not enter the route guard or Axios global interception\" (#3127)"},{"Id":"567068016","IsPullRequest":false,"CreatedAt":"2020-02-18T19:34:48","Actor":"tafelnl","Number":"3126","RawContent":null,"Title":"$route incorrect for view when inactive (in combination with keep-alive)","State":"closed","Body":"### Version\r\n3.1.3\r\n(and up to 3.1.5 as well)\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/mdvL4276/29](https://jsfiddle.net/mdvL4276/29)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Open the JsFiddle\r\n2. Click 'navigate to random'\r\n\r\n### What is expected?\r\nThe list that shows all children of the App.vue should all have their own correct id. The id is a computed property that is computed the following:\r\n`return this.$route.params.id`\r\n\r\nIn the JsFiddle I also implemented a workaround myself. This is done as follows:\r\n```\r\n  data() {\r\n    return {\r\n      'routeFixed': this.$route\r\n    }\r\n  },\r\n```\r\nThis way the `routeFixed` property will always have the correct `$route` info available.\r\n\r\n### What is actually happening?\r\nThe $route param changes when the view becomes inactive. In my opinion it should remained fixed as it is linked to that specific view. \r\n\r\n---\r\nThis can cause all sorts of problems and issues. For example, I have a computed property based on one of the $route.params variables. If I then make a watcher on that computed property, it will actually execute the code within that watcher's handler (because it changed from some value to undefined). Of course this can be worked around by adding a check to see if the variable is undefined, but I don't think that should be necessary. Besides that it can cause problems when you use that computed property in a Vue plugin that does not check for undefined for example.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3126","RelatedDescription":"Closed issue \"$route incorrect for view when inactive (in combination with keep-alive)\" (#3126)"},{"Id":"565800604","IsPullRequest":true,"CreatedAt":"2020-02-15T19:54:45","Actor":"Alexeykhr","Number":"3125","RawContent":null,"Title":"WIP: Fix/find init location","State":"open","Body":"I will try to fix this :). Issue: https://github.com/vuejs/vue-router/issues/3103\r\n\r\nThe problem is url generation. We have 2 routes:\r\n\r\n```\r\n<router-link to=\"/special/tést1\">/special/tést1</router-link>\r\n<router-link :to=\"{ name: 'special', params: {word: 'tést2'} }\">/special/tést2</router-link>\r\n```\r\n\r\nIn the first case, the route is transmitted as it is. In the second - it is decoded through the library: `path-to-regexp` (in new versions this can be changed by parameter)\r\n\r\nBefore:\r\n![1](https://user-images.githubusercontent.com/14747569/74594204-1e031600-503c-11ea-9810-593e744afbb4.png)\r\n\r\nAfter:\r\n![2](https://user-images.githubusercontent.com/14747569/74594203-1ba0bc00-503c-11ea-8b8e-632e466b577a.png)\r\n\r\nBut, if it works in **History Mode**. Then for **Hash Mode** you need to edit separately, because there the same problem exists.\r\n\r\n[Somewhere here](https://github.com/vuejs/vue-router/blob/dev/src/history/hash.js#L128)","Url":"https://github.com/vuejs/vue-router/pull/3125","RelatedDescription":"Open PR \"WIP: Fix/find init location\" (#3125)"},{"Id":"564682459","IsPullRequest":false,"CreatedAt":"2020-02-13T15:58:59","Actor":"jods4","Number":"3124","RawContent":null,"Title":"Design for Vue 3","State":"closed","Body":"### What problem does this feature solve?\r\nThe roadmap for Vue 3 says it will release Q1 2020 and the core lib is already very usable.\r\nI think now is the right time to port vue-router, which is a must-have for many apps. \r\nThe exercise may provide interesting feedback on Vue3 public APIs.\r\n\r\nI could help porting the code but I'm unsure of some design decisions.\r\n\r\n### What does the proposed API look like?\r\n#### 1. Setup\r\n`install` could be an instance function on `VueRouter` so that one could register it like that:\r\n```js\r\nlet router = new VueRouter(/* routes, options */);  // <- actual, usable router\r\ncreateApp(MyApp)\r\n  .use(router)\r\n  .mount('#app');\r\n```\r\n\r\nWhat `install` does is:\r\n- Register global components `router-link` and `router-view`;\r\n- Provide value `Router` at the root of application.\r\n- :question: Do we want to provide a `Route` ref as well? It's available through the router object.\r\n\r\nI'll talk more about injecting value next.\r\nIf someone wants more control (e.g. use different name for components or not register them globally), those tasks can easily be made manually instead of using `.use(router)`.\r\n\r\n#### 2. Accessing the router\r\nThere is no global mixins `$router`, `$route` anymore.\r\n\r\nIf a component (userland, or internally in `router-view` and `router-link`) needs to access the router, e.g. to navigate, it injects the router in setup: `let router = inject('Router')`.\r\n\r\nThe route can be found on the router, or could be provided as `Route` (ref).\r\nNesting routers can be done be re-providing those keys.\r\n\r\n#### 3. Guards\r\nThis is what I'm having most trouble with. \r\nCurrently `vue-router` does some ugly hacks to get hold of component instances that are navigated to/from, in order to call `beforeRouteEnter`, `beforeRouteUpdate` and `beforeRouteLeave`.\r\n\r\nI'm hoping the new API could look something like:\r\n```js\r\nimport { beforeRouteLeave } from 'vue-router';\r\n\r\nexport default {\r\n  setup() {\r\n    beforeRouteLeave(() => ...);\r\n  }\r\n}\r\n```\r\nbut I'm not clear about how fine details would work. Such as: \r\n- where/how is the component defined in routing actually created? \r\n- is `setup` always called, even when using `keep-alive`?\r\n\r\nWith some feedback on the design and a few pointers for the last point, I can have a try at porting this component.\r\n\r\nBTW: 300Mo of dependencies to build a 20Ko lib is crazy :(\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3124","RelatedDescription":"Closed issue \"Design for Vue 3\" (#3124)"},{"Id":"564383940","IsPullRequest":false,"CreatedAt":"2020-02-13T08:47:10","Actor":"diachedelic","Number":"3122","RawContent":null,"Title":"Aborting navigation throws `undefined`","State":"closed","Body":"### Version\r\n3.1.3\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/0ukqxgho/1/](https://jsfiddle.net/0ukqxgho/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick the `/foo` button, check the browser console for errors\r\n\r\n### What is expected?\r\nAn `Error` be thrown.\r\n\r\n### What is actually happening?\r\n`undefined` is thrown.\r\n\r\n---\r\nThe [docs](https://router.vuejs.org/guide/essentials/navigation.html#router-push-location-oncomplete-onabort) specify that if a navigation is aborted, then the promise returned by `$router.push` is rejected. This was causing me grief because I was trying to track down where an `Uncaught (in promise) undefined` error was being thrown - would have been helpful to have been able to narrow down the error faster.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3122","RelatedDescription":"Closed issue \"Aborting navigation throws `undefined`\" (#3122)"},{"Id":"564318061","IsPullRequest":false,"CreatedAt":"2020-02-13T08:46:34","Actor":"719media","Number":"3121","RawContent":null,"Title":"Having store accessible from router on initialization depends on order of use statements","State":"closed","Body":"### Version\r\n3.1.5\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-routing-example-jf31j](https://codesandbox.io/s/vue-routing-example-jf31j)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThe codesandbox works fine as is. However, if you change the order of the imports to\r\n\r\n```\r\nimport router from \"./router\";\r\nimport store from \"./store\";\r\n```\r\n as described in the code, the router.beforeEach will be unable to access the $store.\r\n\r\n### What is expected?\r\nthe store would work in the router, regardless of the order of Vue.use statements\r\n\r\n### What is actually happening?\r\nThe store is only initially accessible in router.beforeEach if Vue.use(Vuex) is called before Vue.use(Router);.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3121","RelatedDescription":"Closed issue \"Having store accessible from router on initialization depends on order of use statements\" (#3121)"},{"Id":"564410268","IsPullRequest":false,"CreatedAt":"2020-02-13T03:09:13","Actor":"drmmyx","Number":"3123","RawContent":null,"Title":"Vue router version 3.1.5 hash mode redirect to 1 page before","State":"closed","Body":"solution : rollback to version 3.1.3 solve the issue ...","Url":"https://github.com/vuejs/vue-router/issues/3123","RelatedDescription":"Closed issue \"Vue router version 3.1.5 hash mode redirect to 1 page before\" (#3123)"},{"Id":"564087604","IsPullRequest":false,"CreatedAt":"2020-02-12T15:45:01","Actor":"AlexandreBonaventure","Number":"3120","RawContent":null,"Title":"Yarn v2 compat: add vue to peerDependencies","State":"open","Body":"### Version\r\n3.1.3\r\n\r\n### Steps to reproduce\r\nWhen using Typescript, vue-router export types like here: https://github.com/vuejs/vue-router/blob/dev/types/router.d.ts#L1 But as you can see here, it imports Vue typings to make it work. As a matter of fact `vue` should be added to peerDependencies\r\n\r\n### What is expected?\r\n`vue` should be a peerDependency \r\n\r\n### What is actually happening?\r\nit is not, and it fails in a strict dependency-tree context\r\n\r\nRef: https://github.com/vuejs/vue-cli/issues/5135\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3120","RelatedDescription":"Open issue \"Yarn v2 compat: add vue to peerDependencies\" (#3120)"},{"Id":"562462075","IsPullRequest":false,"CreatedAt":"2020-02-10T20:34:38","Actor":"Knogobert","Number":"3119","RawContent":null,"Title":"Transpile/expose utils for importing into project","State":"closed","Body":"### What problem does this feature solve?\r\nThis let's devs rely on one source of truth for using the same utilities as vue-router when building similar functionality into our own projects.\r\n\r\nMainly, this came up when looking for a way to import the `stringifyQuery` function from `vue-router/src/util/query.js`. Then realizing that it would need to be transpiled from TS etc. for it to be able to be imported.\r\nThis was so that I could build a URL with parameters to be sent to an API.\r\n\r\nI have not researched further than this, but maybe there are more functions that could benefit devs by exposing them more easily?\r\n\r\n### What does the proposed API look like?\r\n```js\r\nimport { stringifyQuery } from 'vue-router';\r\n...\r\nconst encodedQueries = stringifyQuery(query);\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3119","RelatedDescription":"Closed issue \"Transpile/expose utils for importing into project\" (#3119)"},{"Id":"561313040","IsPullRequest":true,"CreatedAt":"2020-02-07T15:31:53","Actor":"rijkvanzanten","Number":"3117","RawContent":null,"Title":"fix(TS): update type of Route.name","State":"closed","Body":"On very first load, `name` is `null`, not `string` or `undefined`. This means that either the passed route is wrong, or the type is incorrect.\r\n","Url":"https://github.com/vuejs/vue-router/pull/3117","RelatedDescription":"Closed or merged PR \"fix(TS): update type of Route.name\" (#3117)"},{"Id":"561660216","IsPullRequest":false,"CreatedAt":"2020-02-07T15:31:03","Actor":"geekox86","Number":"3118","RawContent":null,"Title":"Passing Params as Props does not Work Well with Composition API","State":"closed","Body":"### Version\r\n3.1.3\r\n\r\n### Reproduction link\r\n[https://github.com/geekox86/OeMis](https://github.com/geekox86/OeMis)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1- `yarn serve`.\r\n\r\n2- A type error is thrown in the terminal.\r\n\r\n3- The types of `beforeRouteEnter` parameters (in `src/Base/Organization/Structure.vue` line 88) are not recognized by TypeScript.\r\n\r\n### What is expected?\r\nThe program should execute correctly without having to define routing component `props` using the old syntax of Vue options API.\r\n\r\n### What is actually happening?\r\nThe program does not work unless the old syntax of Vue options API is used to define routing component `props`.\r\n\r\n---\r\nSee line 92 in `src/Base/Organization/Structure.vue`, if this line is uncommented everything works perfectly, but I do not want to use this old syntax. I just want to relay on Typescript type definitions in the `setup` function for `props`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3118","RelatedDescription":"Closed issue \"Passing Params as Props does not Work Well with Composition API\" (#3118)"},{"Id":"561156523","IsPullRequest":false,"CreatedAt":"2020-02-06T17:21:04","Actor":"service-paradis","Number":"3116","RawContent":null,"Title":"Accepting named target for router-link","State":"open","Body":"### What problem does this feature solve?\r\nRight now, if we want to open a link in a new tab (or page), we can use target=\"_blank\".\r\n\r\nIn some cases, I prefer using named target when opening a new tab. This way, if we click multiple times on the same link, it will only refresh the named tab already opened.\r\n\r\nAccepting something like target=\"my_report\" would be great. Right now, the target attribute is added to the a tag, but the link is not opened on another tab.\r\n\r\n### What does the proposed API look like?\r\nAccepting named target and opening them in new tabs\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3116","RelatedDescription":"Open issue \"Accepting named target for router-link\" (#3116)"},{"Id":"561155778","IsPullRequest":false,"CreatedAt":"2020-02-06T17:19:38","Actor":"service-paradis","Number":"3115","RawContent":null,"Title":"Using named target using router-link","State":"closed","Body":"Right now, if we want to open a link in a new tab (or page), we can use `target=\"_blank\"`.\r\n\r\nIn some cases, I prefer using named target when opening a new tab. This way, if we click multiple times on the same link, it will only refresh the named tab already opened.\r\n\r\nAccepting something like `target=\"my_report\"` would be great. Right now, the target attribute is added to the `a` tag, but the link is not opened on another tab.\r\n","Url":"https://github.com/vuejs/vue-router/issues/3115","RelatedDescription":"Closed issue \"Using named target using router-link\" (#3115)"},{"Id":"559259641","IsPullRequest":true,"CreatedAt":"2020-02-04T09:16:33","Actor":"kelunik","Number":"3114","RawContent":null,"Title":"feat(core): add 'on-complete' and 'on-abort' props to router-link","State":"closed","Body":"This allows implementing a wrapper component handling aborted navigations, e.g. due to navigating to the exact same path (see #974), and other custom behavior such as a loading state showing on a button-like link.\r\n\r\n**Sample Implementation**\r\n\r\nNote: This doesn't trigger the scroll behavior hook, so that needs some separate PR / implementation automatically work, but that's fine, as we're not doing any navigation with this implementation.\r\n\r\n```vue\r\n<template>\r\n  <div id=\"app\">\r\n    <router-link to=\"/\" :on-abort=\"handleAbort\">Home</router-link>\r\n    <router-link to=\"/about\" :on-abort=\"handleAbort\">About</router-link>\r\n    <router-view :key=\"$route.fullPath + ' @ ' + sameRouteCounter\"/>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Vue } from 'vue-property-decorator'\r\nimport HelloWorld from './components/HelloWorld.vue'\r\n\r\n@Component({\r\n  components: {\r\n    HelloWorld\r\n  }\r\n})\r\nexport default class App extends Vue {\r\n  sameRouteCounter: number = 0\r\n\r\n  mounted () {\r\n    this.$router.afterEach((to, from) => {\r\n      if (to.fullPath !== from.fullPath) {\r\n        this.sameRouteCounter = 0\r\n      }\r\n    })\r\n  }\r\n\r\n  handleAbort (err: any) {\r\n    if (err.name === 'NavigationDuplicated') {\r\n      this.sameRouteCounter++\r\n      this.$nextTick().then(() => {\r\n        window.scroll(0, 0)\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n```\r\n\r\nImplements #3027.","Url":"https://github.com/vuejs/vue-router/pull/3114","RelatedDescription":"Closed or merged PR \"feat(core): add 'on-complete' and 'on-abort' props to router-link\" (#3114)"},{"Id":"558276976","IsPullRequest":false,"CreatedAt":"2020-01-31T18:09:15","Actor":"protium-dev","Number":"3113","RawContent":null,"Title":"Throw proper error when aborting navigation","State":"closed","Body":"### Version\r\n3.1.3\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-router-undefined-error-7ltnr](https://codesandbox.io/s/vue-router-undefined-error-7ltnr)\r\n\r\n### Steps to reproduce\r\n* Create route \"/\" and \"/B\"\r\n* Redirect to \"/\" inside \"beforeEnter\" in /\"B\" using `next('/')`\r\n* Push \"/B\" from \"/\"\r\n\r\n### What is expected?\r\nTo have a proper error object thrown\r\n\r\n### What is actually happening?\r\nUndefined object thrown `Uncaught (in promise) undefined`\r\n\r\n---\r\nThis only happens when using `this.$router.push`. The behaviour is not present using `router-link`.\r\nEven though, I'd be great to always have proper errors. I suspect this is the line of code involved https://github.com/vuejs/vue-router/blob/dev/src/history/base.js#L163\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/3113","RelatedDescription":"Closed issue \"Throw proper error when aborting navigation\" (#3113)"},{"Id":"557964317","IsPullRequest":true,"CreatedAt":"2020-01-31T07:34:36","Actor":"anselal","Number":"3112","RawContent":null,"Title":":pencil: docs(router): Update history mode apache config, fix SPA","State":"open","Body":"Make Single Page Applications load the correct endpoint on refresh and not just fallback to index.html\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/3112","RelatedDescription":"Open PR \":pencil: docs(router): Update history mode apache config, fix SPA\" (#3112)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"574213968","IsPullRequest":true,"CreatedAt":"2020-03-11T10:05:11","Actor":"elevatebart","Number":"1687","RawContent":null,"Title":"docs: make obvious where to import store from","State":"closed","Body":"As we browse through the modules page, it is unclear where the `store` is imported from.\r\n\r\nSince it is a one liner, I thought it would clarify to have the import explicitly here.\r\n\r\nTell me what you think.","Url":"https://github.com/vuejs/vuex/pull/1687","RelatedDescription":"Closed or merged PR \"docs: make obvious where to import store from\" (#1687)"},{"Id":"579102344","IsPullRequest":false,"CreatedAt":"2020-03-11T08:54:30","Actor":"enjkvbej","Number":"1694","RawContent":null,"Title":"How to update item of deep array in mutation","State":"closed","Body":"````\r\nstate = {\r\n  list: [\r\n      {\r\n          config: {\r\n              children: []\r\n          },\r\n      },\r\n  ]\r\n}\r\n\r\nmutation:\r\nconst copyRow = cloneDeep(state.list[0]) // lodash cloneDeep\r\ncopyRow.config.children.push({xxx: xxx})\r\nstate.list.splice(0, 1, copyRow)\r\n````\r\nexpect: add item in chlidren\r\nerror: [vuex] do not mutate vuex store state outside mutation handlers.\r\nPlease help me! Thanks!","Url":"https://github.com/vuejs/vuex/issues/1694","RelatedDescription":"Closed issue \"How to update item of deep array in mutation\" (#1694)"},{"Id":"579099587","IsPullRequest":false,"CreatedAt":"2020-03-11T08:49:34","Actor":"enjkvbej","Number":"1693","RawContent":null,"Title":"How to update item of a deep array in mutation","State":"closed","Body":"````\r\nstate = {\r\n  list: [\r\n      {\r\n          config: {\r\n              children: []\r\n          },\r\n      },\r\n  ]\r\n}\r\n\r\nmutation:\r\nconst copyRow = cloneDeep(state.list[0]) // lodash cloneDeep\r\ncopyRow.config.children.push({xxx: xxx})\r\nstate.list.splice(0, 1, copyRow)\r\n````\r\nexpect: add item in chlidren\r\nerror: [vuex] do not mutate vuex store state outside mutation handlers.\r\nPlease help me! Thanks!","Url":"https://github.com/vuejs/vuex/issues/1693","RelatedDescription":"Closed issue \"How to update item of a deep array in mutation\" (#1693)"},{"Id":"552158159","IsPullRequest":true,"CreatedAt":"2020-03-09T13:28:51","Actor":"Zhwt","Number":"1667","RawContent":null,"Title":"docs: Add clarity of module definition","State":"closed","Body":"Add documentation clarity of module definition","Url":"https://github.com/vuejs/vuex/pull/1667","RelatedDescription":"Closed or merged PR \"docs: Add clarity of module definition\" (#1667)"},{"Id":"564092739","IsPullRequest":false,"CreatedAt":"2020-03-09T13:12:25","Actor":"AlexandreBonaventure","Number":"1681","RawContent":null,"Title":"Yarn v2 compat: add vue to peerDependencies","State":"closed","Body":"### Version\r\n3.1.2\r\n\r\n### Steps to reproduce\r\nWhen using Typescript, vuex export types like here: https://github.com/vuejs/vuex/blob/dev/types/index.d.ts#L1 But as you can see here, it imports Vue typings to make it work. As a matter of fact `vue` should be added to peerDependencies\r\n\r\n### What is expected?\r\n`vue` should be a peerDependency \r\n\r\n### What is actually happening?\r\nit is not, and it fails in a strict dependency-tree context\r\n\r\nRef: https://github.com/vuejs/vue-cli/issues/5135\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1681","RelatedDescription":"Closed issue \"Yarn v2 compat: add vue to peerDependencies\" (#1681)"},{"Id":"577861744","IsPullRequest":true,"CreatedAt":"2020-03-09T12:18:09","Actor":"kiaking","Number":"1692","RawContent":null,"Title":"build: add vue as a peer dependency (#1681)","State":"closed","Body":"Issue: #1681 \r\n\r\nThis PR adds Vue as a peer dependency. It should help using Vuex with Yarn 2 too.","Url":"https://github.com/vuejs/vuex/pull/1692","RelatedDescription":"Closed or merged PR \"build: add vue as a peer dependency (#1681)\" (#1692)"},{"Id":"574939504","IsPullRequest":false,"CreatedAt":"2020-03-09T11:57:54","Actor":"rodolphocastro","Number":"1689","RawContent":null,"Title":"ModuleTree<S, R>","State":"closed","Body":"### What problem does this feature solve?\r\nThis interface might help when dealing with nested modules on stores using Typescript.\r\n\r\nCurrently the `Module<S, R>` interface exposes a single `ModuleTree<R>´ which allows us to create one level of nested modules. \r\n\r\nExposing a `ModuleTree<R>` or a `ModuleTree<S, R>` would be inline with the current `GetterTree<S, R>` and other Trees and allow us to deeper nest our Modules.\r\n\r\nI ran into this issue when attempting to create a nested module within a nested module using Typescript. The \"parent\" modules holds state for some supported features on the application and its children require to check those features in order to validate their `actions`. The root state (or parent of the parent, in this case) simply holds environment and version information.\r\n\r\n### What does the proposed API look like?\r\nI belive that a new interface `ModuleTree<S,R>` might solve the issue:\r\n\r\n```ts\r\nexport interface ModuleTree<S, R> {\r\n  [key: string]: Module<S, R>;\r\n}\r\n```\r\n\r\nWhich could be added to the Current `Module<S, R>` interface as an `or`:\r\n\r\n```ts\r\nexport interface Module<S, R> {\r\n  namespaced?: boolean;\r\n  state?: S | (() => S);\r\n  getters?: GetterTree<S, R>;\r\n  actions?: ActionTree<S, R>;\r\n  mutations?: MutationTree<S>;\r\n  modules?: ModuleTree<R> | ModuleTree<S, R>;\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1689","RelatedDescription":"Closed issue \"ModuleTree<S, R>\" (#1689)"},{"Id":"574743323","IsPullRequest":true,"CreatedAt":"2020-03-05T09:00:02","Actor":"logicaltrojan","Number":"1688","RawContent":null,"Title":"Typo Fix : 돌연 변이 -> 변이","State":"closed","Body":"mutations can be translate to '변이' in Korean, but it makes completely non sense as '돌연변이'.\r\nThe '돌연 변이' is used as 'mutants'(in biological meaning).","Url":"https://github.com/vuejs/vuex/pull/1688","RelatedDescription":"Closed or merged PR \"Typo Fix : 돌연 변이 -> 변이\" (#1688)"},{"Id":"575792250","IsPullRequest":false,"CreatedAt":"2020-03-04T21:30:45","Actor":"DQvsRA","Number":"1691","RawContent":null,"Title":"Why getters functions executed even if they do not called","State":"closed","Body":"Strange behaviour all registered getter are called when Vuex initialized, even before first call of the getter it's executed automatically. Is it ok? I don't think so.\r\n```\r\nVue.use(Vuex)\r\n\r\nconst store = new Vuex.Store({\r\n  state: {\r\n  },\r\n  getters: {\r\n    helloGetter (store) {\r\n      console.log('What?!')\r\n    }\r\n  }\r\n})\r\n\r\nnew Vue({\r\n  store,\r\n  render: h => h(<div>App</div>)\r\n}).$mount('#app')\r\n```","Url":"https://github.com/vuejs/vuex/issues/1691","RelatedDescription":"Closed issue \"Why getters functions executed even if they do not called\" (#1691)"},{"Id":"575414643","IsPullRequest":false,"CreatedAt":"2020-03-04T13:47:39","Actor":"asoglovo","Number":"1690","RawContent":null,"Title":"Helper functions to subscribe a component to the commits/actions stream","State":"open","Body":"### What problem does this feature solve?\r\nAdd a \"mapping\" layer from the mutations/actions stream to the components that want to subscribe to them. \r\n\r\nSimilarly to the existing `mapActions` or `mapGetters` functions which decouple the Vuex store from the components using it, a new pair of functions could exist to allow the components get subscribed to the dispatched actions or committed mutations in a way such that direct usage of the store is not necessary.\r\n\r\n### What does the proposed API look like?\r\nIn the components, instead of directly accessing `$store` to subscribe to the actions stream:\r\n\r\n```js\r\ncreated() {\r\n  this.unsubscribe = this.$store.subscribeAction((action, state) => {\r\n    if (action.type === 'MY_ACTION_TYPE') { ... }\r\n  })\r\n},\r\n\r\ndestroyed() {\r\n  this.unsubscribe()\r\n}\r\n```\r\n\r\nWe'd have something like:\r\n\r\n```js\r\ncreated() {\r\n  this.unsubscribe = subscribeAction('MY_ACTION_TYPE', (payload, state) => { ... })\r\n},\r\n\r\ndestroyed() {\r\n  this.unsubscribe()\r\n}\r\n```\r\n\r\nThis function would not only decouple the usage of the store from the components, but also provide a filter to only respond to the given action type. Note that, since subscribing to actions is not a widespread idiom with Vuex, we could go without a plural version, such as `subscribeActions`.\r\n\r\nA similar function, `subscribeMutation` could do the same for mutations.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1690","RelatedDescription":"Open issue \"Helper functions to subscribe a component to the commits/actions stream\" (#1690)"},{"Id":"573354462","IsPullRequest":false,"CreatedAt":"2020-02-29T17:41:17","Actor":"zl7261","Number":"1686","RawContent":null,"Title":"How to typescript vuex getter function?","State":"open","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[ https://github.com/zl7261/vuex_study]( https://github.com/zl7261/vuex_study)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThe vuex getters functions can return an anonymous function that can operate state of vuex .\r\nbut how to typescript annotation function param type\r\nif I call vuex getters like this code style \r\n\r\n``` javascript\r\nconst getters = {\r\n    getStateValue(state) {\r\n        return (value) => {\r\n            console.log(value)\r\n            return state[value]\r\n        }\r\n    }\r\n}\r\n```\r\n```javascript \r\nthis.$store.getters.getStateValue('testMsg')\r\n```\r\nActually, 'textMsg' is type of the Inner anonymous function param,\r\nbut if I call the getters method like this, the IDE think state is String type.\r\n\r\n\r\n\r\n### What is expected?\r\nCan be typescript\r\n\r\n### What is actually happening?\r\nI don't know how to use type annotation in this case.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1686","RelatedDescription":"Open issue \"How to typescript vuex getter function?\" (#1686)"},{"Id":"562379417","IsPullRequest":true,"CreatedAt":"2020-02-27T14:07:35","Actor":"PeterChen1997","Number":"1679","RawContent":null,"Title":"fix docs description","State":"closed","Body":"I think this 'action' maybe is not the action in Vuex? Maybe using 'mutation' in docs is more specific\r\nI check the englinsh docs, and it's the same word 'action'...\r\nMaybe I misunderstand the mean","Url":"https://github.com/vuejs/vuex/pull/1679","RelatedDescription":"Closed or merged PR \"fix docs description\" (#1679)"},{"Id":"569116559","IsPullRequest":false,"CreatedAt":"2020-02-26T00:53:31","Actor":"davidmeirlevy","Number":"1684","RawContent":null,"Title":"`createNamespacedHelpers` return mappers that need `this`","State":"closed","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/davidmeirlevy/9hbqjmg2/34/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nget a mapper:\r\n`const { mapActions } = createNamespacedHelpers(MODULE_NAME)`\r\n\r\nmap some action:\r\n`const {action} = mapActions(['action'])`\r\n\r\nrun this action directly, without adding it to a component methods:\r\n`action()`\r\n\r\n### What is expected?\r\nthe action should be dispacthed\r\n\r\n### What is actually happening?\r\nThis line breaks because we didn't ran this function from a vue component context:\r\n`var dispatch = this.$store.dispatch;`\r\n\r\n---\r\nwhen we want to use the mappers from the `setup()` function of the composition-api, the component's `this` shouldn't be relevant, so you should probably find another way to map actions without expecting being executed as a vue component's method.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1684","RelatedDescription":"Closed issue \"`createNamespacedHelpers` return mappers that need `this`\" (#1684)"},{"Id":"569448568","IsPullRequest":true,"CreatedAt":"2020-02-25T16:56:03","Actor":"davidmeirlevy","Number":"1685","RawContent":null,"Title":"#1684 - wrap namespaced helpers with store ahead","State":"closed","Body":"related to #1684 ","Url":"https://github.com/vuejs/vuex/pull/1685","RelatedDescription":"Closed or merged PR \"#1684 - wrap namespaced helpers with store ahead\" (#1685)"},{"Id":"562476929","IsPullRequest":false,"CreatedAt":"2020-02-21T12:47:59","Actor":"davidpelayo","Number":"1680","RawContent":null,"Title":"mapGetters don't trigger components `beforeUpdate` if the getter value doesn't get directly used at the DOM (<template />)","State":"closed","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n\r\n- Non-working version, due not binding the getter to the component template: [https://codesandbox.io/s/mapgetters-issue-non-working-version-binding-to-dom-88jbw](https://codesandbox.io/s/mapgetters-issue-non-working-version-binding-to-dom-88jbw).\r\n- Working version, due binding the getter to the component template: [https://codesandbox.io/s/mapgetters-issue-working-version-binding-to-dom-j2eh7](https://codesandbox.io/s/mapgetters-issue-working-version-binding-to-dom-j2eh7).\r\n\r\n### Steps to reproduce\r\n1. Declare a simple getter at your store.\r\n2. Injects/use it at your component.\r\n3. Add the `updated` or `beforeUpdate` lifecycle hook with a `debugger` or a `console.log` in it.\r\n4. Call an action which mutates the store changing the state value so that the getters needs to be reevaluated.\r\n5. See how the `debugger` or `console.log` at the `beforeUpdate` doesn't get triggered.\r\n\r\nHowever: If you use the getter directly into the component template, it gets correctly reevaluated and the `beforeUpdate` gets triggered.\r\n\r\n### What is expected?\r\n1. Declare a simple getter at your store.\r\n2. Injects/use it at your component.\r\n3. Add the `beforeUpdate` lifecycle hook with a `debugger` or a `console.log` in it.\r\n4. Call an action which mutates the store changing the state value so that the getters needs to be reevaluated.\r\n5. See how the `debugger` or `console.log` at the `beforeUpdate` gets triggered.\r\n\r\n### What is actually happening?\r\nThe `beforeUpdate` lifecycle method does not get triggered due the reactivity doesn't seem to work correctly, unless you bind the getter directly to the component `<template />`.\r\n\r\n---\r\n#### Context\r\nDue a project's needs, I needed to monitor when the getter value got updated to update a component `data` property, accordingly, and then update the view.\r\n\r\nHowever, a restriction was set in place that the getter couldn't be directly used at the view, because the complexity of the component, the data should have been used instead.\r\n\r\nIt might be that this is actually a feature instead of a bug, requiring binding a getter to the vue to enjoy 100% reactivity from state down to the actual DOM out of the box; but, mentally, the documentation tells you reactivity works so that components can inject getters and get updated values magically; **but not explicitly saying those needs to be declared at the view** (template) - that's why I consider this a bug.\r\n\r\n#### The workaround\r\nWorkaround 1: A simple workaround would consist on setting a dynamic class name or DOM attribute bound to the getter; so that provokes the `updated` to get invoked, and works nicely.\r\n\r\nWorkaround 2: Watch the computed value incoming from the getter, and update your local component state based on the new value.\r\n\r\nHowever, it took me around an hour to debug the whole thing and figure out this topic. **It might be worth to update the documentation if this is actually intended.**\r\n\r\n#### What led me to confusion\r\nThe `beforeUpdate` and `updated` hooks are meant to be triggered only when the virtual DOM needs updates and patching, but not necessarily as a result of the single store being updated. That probably led me to a misleading conception.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1680","RelatedDescription":"Closed issue \"mapGetters don't trigger components `beforeUpdate` if the getter value doesn't get directly used at the DOM (<template />)\" (#1680)"},{"Id":"567707440","IsPullRequest":false,"CreatedAt":"2020-02-19T17:11:26","Actor":"blacksonic","Number":"1683","RawContent":null,"Title":"Vuex breaks with Vue 3.x upgrade","State":"open","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[https://github.com/blacksonic/todoapp-vue/tree/vue3](https://github.com/blacksonic/todoapp-vue/tree/vue3)\r\n\r\n### Steps to reproduce\r\nvue add vue-next\r\ntry to use the Vuex plugin on the instance returned from createApp\r\n\r\n### What is expected?\r\nVuex plugin added to the app instance\r\n\r\n### What is actually happening?\r\nThe app breaks with console error:\r\n\r\nvuex.esm.js?2f62:7 Uncaught TypeError: Cannot read property 'split' of undefined\r\n    at applyMixin (vuex.esm.js?2f62:7)\r\n    at Object.install (vuex.esm.js?2f62:824)\r\n    at Object.use (runtime-core.esm-bundler.js?5c40:1709)\r\n    at eval (main.js?56d7:8)\r\n    at Module../src/main.js (app.js:1246)\r\n    at __webpack_require__ (app.js:786)\r\n    at fn (app.js:151)\r\n    at Object.1 (app.js:1356)\r\n    at __webpack_require__ (app.js:786)\r\n    at checkDeferredModules (app.js:46)\r\n\r\n---\r\nWhich leads to the point where it tries to determine the Vue version from the global Vue instance, which is non-existent.\r\n\r\nvar version = Number(Vue.version.split('.')[0]);\r\nAny suggestions on how to add Vuex to Vue 3 projects?\r\nThere is an exported variable in Vue 3 called version.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1683","RelatedDescription":"Open issue \"Vuex breaks with Vue 3.x upgrade\" (#1683)"},{"Id":"567702944","IsPullRequest":false,"CreatedAt":"2020-02-19T17:04:20","Actor":"blacksonic","Number":"1682","RawContent":null,"Title":"Vuex breaks with Vue 3.x","State":"closed","Body":"I've tried to run a Vue 3 application with Vuex, but when using it as a plugin I get the following error:\r\n\r\n```\r\nvuex.esm.js?2f62:7 Uncaught TypeError: Cannot read property 'split' of undefined\r\n    at applyMixin (vuex.esm.js?2f62:7)\r\n    at Object.install (vuex.esm.js?2f62:824)\r\n    at Object.use (runtime-core.esm-bundler.js?5c40:1709)\r\n    at eval (main.js?56d7:8)\r\n    at Module../src/main.js (app.js:1246)\r\n    at __webpack_require__ (app.js:786)\r\n    at fn (app.js:151)\r\n    at Object.1 (app.js:1356)\r\n    at __webpack_require__ (app.js:786)\r\n    at checkDeferredModules (app.js:46)\r\n```\r\n\r\nWhich leads to the point where it tries to determine the Vue version from the global Vue instance, which is non-existent.\r\n\r\n```javascript\r\nvar version = Number(Vue.version.split('.')[0]);\r\n```\r\n\r\nAny suggestions on how to add Vuex to Vue 3 projects?\r\nThere is an exported variable in Vue 3 called version.","Url":"https://github.com/vuejs/vuex/issues/1682","RelatedDescription":"Closed issue \"Vuex breaks with Vue 3.x\" (#1682)"},{"Id":"562244423","IsPullRequest":true,"CreatedAt":"2020-02-14T00:15:32","Actor":"cjihrig","Number":"1678","RawContent":null,"Title":"refactor: remove extra loops in dispatch()","State":"closed","Body":"This commit replaces two chained `filter()`-`forEach()` sequences in `dispatch()` with single `forEach()`s.","Url":"https://github.com/vuejs/vuex/pull/1678","RelatedDescription":"Closed or merged PR \"refactor: remove extra loops in dispatch()\" (#1678)"},{"Id":"561614729","IsPullRequest":false,"CreatedAt":"2020-02-07T12:41:22","Actor":"XemaA","Number":"1677","RawContent":null,"Title":"Dispatching large data cause app craches","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/XemaA/pen/jOPEOqm?editors=0010](https://codepen.io/XemaA/pen/jOPEOqm?editors=0010)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI am trying to mutate  a file content's in the state so I can use them in different modules of the app.\r\n```javascript\r\n// In the action : I read file content\r\nreadFile(context, payload) {\r\n    const readStream = fs.createReadStream(payload.filePath);\r\n    Papa.parse(readStream, { header: true }, complete(results) { // here I use papaparse (Papa) to parse file content\r\n        context.commit('testA', results.data); // in case of large file, when I comment this line the app doesn't stop\r\n    });\r\n}\r\n// mutation\r\ntestA(state, payload) {\r\n    state.structData = payload;\r\n}\r\n```\r\n\r\n\r\n### What is expected?\r\nfile content mutated to state\r\n\r\n### What is actually happening?\r\non case of 23MB size file the app craches without returning any errors or warning\r\n\r\n---\r\nWhen working with small files the process works as expected, the issue appears only with large files ( I am testing 23MB size file)\r\nI am working on electron/vue app\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1677","RelatedDescription":"Open issue \"Dispatching large data cause app craches\" (#1677)"},{"Id":"560738552","IsPullRequest":true,"CreatedAt":"2020-02-06T02:21:56","Actor":"miguelrincon","Number":"1676","RawContent":null,"Title":"fix(#1571): remove undefined payload from dispatch","State":"open","Body":"Fix for #1571\r\n\r\nRemoves unused payloads from the dispatch calls.\r\n\r\n- Original PR at https://github.com/vuejs/vuex/pull/1573.\r\n- Solution was proposed at https://github.com/vuejs/vuex/issues/1571#issuecomment-505838341","Url":"https://github.com/vuejs/vuex/pull/1676","RelatedDescription":"Open PR \"fix(#1571): remove undefined payload from dispatch\" (#1676)"},{"Id":"558957076","IsPullRequest":false,"CreatedAt":"2020-02-05T08:55:46","Actor":"HuberTRoy","Number":"1673","RawContent":null,"Title":"Default mutations for set state.","State":"closed","Body":"### What problem does this feature solve?\r\nIf I just want to set a value for one state, I must code: \r\n\r\n```js\r\nconst state = {\r\n     test : 1\r\n}\r\n\r\nconst mutations = {\r\n      setTest(state, value) {\r\n            state.test = value\r\n      }\r\n}\r\n```\r\n\r\nI wrote or read most of the mutations are this kind of. So If `vuex` set default mutations for all states we will reduce most of the mutations set.\r\n\r\n### What does the proposed API look like?\r\n\r\n```js\r\nconst state = {\r\n    test: 1\r\n}\r\n\r\nconst actions = {\r\n      async setTestWhenRequest(context) {\r\n            let res = await axios.get('http://www.new-issue.vuejs.org')\r\n            if ( res.code === 200) {\r\n                  context.commit('$setTest', 2)\r\n            }\r\n      }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1673","RelatedDescription":"Closed issue \"Default mutations for set state.\" (#1673)"},{"Id":"559587635","IsPullRequest":true,"CreatedAt":"2020-02-05T08:52:36","Actor":"kiaking","Number":"1674","RawContent":null,"Title":"ci: fix failing e2e test","State":"closed","Body":"This PR Tries to fix randomly failing e2e test.","Url":"https://github.com/vuejs/vuex/pull/1674","RelatedDescription":"Closed or merged PR \"ci: fix failing e2e test\" (#1674)"},{"Id":"560016091","IsPullRequest":false,"CreatedAt":"2020-02-04T22:25:41","Actor":"ashahbazFV","Number":"1675","RawContent":null,"Title":"Dynamic module state not created with hot loading (preserveState set to true)","State":"open","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/compassionate-hermann-msyze](https://codesandbox.io/s/compassionate-hermann-msyze)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Create a module with _vuex-module-decorators_\r\n2. Set the `dynamic` and `preserveState` flags to `true`\r\n    ```ts\r\n    @Module({ dynamic: true, name: 'SomeModule', store, preserveState: true })\r\n    ```\r\n3.  Attempt to access a property of the module, retrieved with `getModule` function to initialise the module from vuex-module-decorators\r\n     ```js\r\n    const someModule = getModule(SomeModule);\r\n    someModule.someProperty;\r\n    ```\r\n4.  Note `someProperty` will be `undefined`\r\n\r\n### What is expected?\r\nWhen installing a dynamic module and there is no state present, a default state should be created\r\n\r\n### What is actually happening?\r\nWhen installing a dynamic module and there is no state present, the module is not registered causing reads to the state for that module to fail.\r\n\r\n---\r\nNOTE: Was unable to reproduce the issue cleanly in CodeSandbox so the reproduction is not working, but the key aspects are still there.\r\n\r\nUpon investigation, it was discovered the [_vuex-module-decorators_](https://github.com/championswimmer/vuex-module-decorators) lib [passes their `preserveState` flag down](https://github.com/championswimmer/vuex-module-decorators/pull/102) to the vuex layer.  When the dynamic module is installed with the `installModule` function and the `hot` option is enabled, the current implementation skips creating any state for the new module.  This introduces side effects, where the module is registered in the vuex store but the state can't be retrieved if there was no state previously present.\r\n\r\nThe [_vuex-persist_](https://github.com/championswimmer/vuex-persist) lib is in use, but it is used to hydrate any past state down to _vuex_.  The store, while using the _vuex-persist_ lib, has the data initialised in the following order.\r\n\r\n1. The store is created by _vuex_ and any known modules are initialised with their default values.\r\n2. If there are data in the local storage within the browser, it is loaded into the store state replacing the default state data.\r\n3. Dynamic modules are added as they are needed.\r\n\r\nUpon modifying the `installModule` function, to check if the state of the new dynamic module exists, the problem is resolved.  Essentially, if the state of the module doesn't currently exist in the `parentState` within the store, then the default module state is created and registered.\r\n\r\nOne set of changes that fix this case are as follows.\r\n\r\nIn [`src/store.js`](https://github.com/vuejs/vuex/blob/dev/src/store.js) the following code seems to be the offending code.\r\n\r\n```js\r\n// set state\r\nif (!isRoot && !hot) {\r\n  const parentState = getNestedState(rootState, path.slice(0, -1))\r\n  const moduleName = path[path.length - 1]\r\n  store._withCommit(() => {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (moduleName in parentState) {\r\n        console.warn(\r\n          `[vuex] state field \"${moduleName}\" was overridden by a module with the same name at \"${path.join('.')}\"`\r\n        )\r\n      }\r\n    }\r\n    Vue.set(parentState, moduleName, module.state)\r\n  })\r\n}\r\n```\r\n\r\nWhen modified, the default state is created when the `moduleName` isn't found in the `parentState`.\r\n\r\n```js\r\n// set state\r\nvar parentState = getNestedState(rootState, path.slice(0, -1));\r\nvar moduleName = path[path.length - 1];\r\nvar moduleStateExists = moduleName in parentState\r\nif (!isRoot && (!hot || !moduleStateExists )) {\r\n store._withCommit(function () {\r\n   {\r\n     if (moduleStateExists) {\r\n       console.warn(\r\n         (\"[vuex] state field \\\"\"   moduleName   \"\\\" was overridden by a module with the same name at \\\"\"   (path.join('.'))   \"\\\"\")\r\n       );\r\n     }\r\n   }\r\n   Vue.set(parentState, moduleName, module.state);\r\n });\r\n}\r\n```\r\n\r\nThere may be other ways to fix this issue, this is one potential solution that was discovered after some investigation.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1675","RelatedDescription":"Open issue \"Dynamic module state not created with hot loading (preserveState set to true)\" (#1675)"},{"Id":"548374675","IsPullRequest":true,"CreatedAt":"2020-02-02T06:41:42","Actor":"huybuidac","Number":"1665","RawContent":null,"Title":"Apply mixins to module","State":"closed","Body":"Support inject common mutations/getters/actions to each Module","Url":"https://github.com/vuejs/vuex/pull/1665","RelatedDescription":"Closed or merged PR \"Apply mixins to module\" (#1665)"},{"Id":"556895643","IsPullRequest":false,"CreatedAt":"2020-01-29T14:23:53","Actor":"Candane","Number":"1672","RawContent":null,"Title":"为什么不推荐使用常量替代 action事件类型?","State":"closed","Body":"为什么不是使用常量代替 Action 类型，通常 Mutation 的类型只在一个 store 使用，如果修改 y 一个类型也在一个 store 里面修改，但是 action 的话可能在很多组件中会使用到，修改的面积会比 Mutation 大得多，为什么官方只推荐使用常量替代 Mutation 事件类型？","Url":"https://github.com/vuejs/vuex/issues/1672","RelatedDescription":"Closed issue \"为什么不推荐使用常量替代 action事件类型?\" (#1672)"},{"Id":"555645733","IsPullRequest":true,"CreatedAt":"2020-01-27T16:09:47","Actor":"kiaking","Number":"1670","RawContent":null,"Title":"#1591 refactor: do not mutate mutation payload in the todo app example","State":"closed","Body":"Issue #1591\r\n\r\nThis PR refactors the mutation logic in todo example to not mutate mutation payload directly in the simplest form.\r\n\r\nIt's still using the reference to todo (at `indexOf`) but I think it's more clearer than before that Vuex recommends to not mutate payload directly.","Url":"https://github.com/vuejs/vuex/pull/1670","RelatedDescription":"Closed or merged PR \"#1591 refactor: do not mutate mutation payload in the todo app example\" (#1670)"},{"Id":"555668976","IsPullRequest":false,"CreatedAt":"2020-01-27T15:57:21","Actor":"steveworkman","Number":"1671","RawContent":null,"Title":" Cannot set reactive property on undefined, null, or primitive value: undefined when using Vuex and Storybook 5.3","State":"open","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[https://github.com/dylanbanks96/storybook-demo](https://github.com/dylanbanks96/storybook-demo)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate a basic component using Vuex, and add storybook documentation. The component attempts to commit data to vuex state via an action and mutator\r\n\r\nEssentially, I'm trying to commit input field data to my store\r\n\r\n### What is expected?\r\nI'm able to access and modify state\r\n\r\n### What is actually happening?\r\nCannot set reactive property on undefined, null, or primitive value: undefined\" and a TypeError: \"index.js:47 TypeError: Cannot use 'in' operator to search for 'foo' in undefined\".\r\n\r\n---\r\nThis may be a storybook issue, but it may be a Vuex issue as well. I've also raised this on S/O https://stackoverflow.com/questions/59919325/vuex-storybook-cannot-set-reactive-property-on-undefined-null-or-primitive\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1671","RelatedDescription":"Open issue \" Cannot set reactive property on undefined, null, or primitive value: undefined when using Vuex and Storybook 5.3\" (#1671)"},{"Id":"555507435","IsPullRequest":false,"CreatedAt":"2020-01-27T14:16:39","Actor":"tbetous","Number":"1669","RawContent":null,"Title":"Slow performance using getter references other getter","State":"closed","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/tbetous/y4m0keav/53/](https://jsfiddle.net/tbetous/y4m0keav/53/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1 - Write a getter `myGetter` that use another getter `otherGetter` by using `getters` argument\r\n\r\n```js\r\nmyGetter: (state, getters) => {\r\n      console.time('myGetter')\r\n      const t0 = performance.now();\r\n      for(let i = 0; i < 100; i  ) {\r\n        const foo = getters.otherGetter\r\n      }\r\n      console.timeEnd('myGetter')\r\n      const t1 = performance.now();\r\n      return t1 - t0\r\n    },\r\n```\r\n\r\n2 - Write a getter `myGetterOptimized` that use another getter `otherGetter` by destructuring `getters`\r\n\r\n```js\r\nmyGetterOptimized: (state, {otherGetter}) => {\r\n      console.time('myGetterOptimized')\r\n      const t0 = performance.now();\r\n      for(let i = 0; i < 100; i  ) {\r\n        const foo = otherGetter\r\n      }\r\n      console.timeEnd('myGetterOptimized')\r\n      const t1 = performance.now();\r\n      return t1 - t0\r\n    },\r\n```\r\n\r\n3 - Compare time execution\r\n\r\n### What is expected?\r\nTime execution should be the same.\r\n\r\n### What is actually happening?\r\nTime execution is different :\r\n- getterOptimized : 0.21999999989930075\r\n- getterNotOptimized : 494.8850000000675\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1669","RelatedDescription":"Closed issue \"Slow performance using getter references other getter\" (#1669)"},{"Id":"554690831","IsPullRequest":false,"CreatedAt":"2020-01-27T01:19:55","Actor":"vicglarson","Number":"1668","RawContent":null,"Title":"dispatch interface returns pending promise instead of resolved","State":"closed","Body":"### Version\r\n3.1.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/jtzqmxk3/](https://jsfiddle.net/jtzqmxk3/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nin this request insterface of dispatch changed\r\nLook at this https://github.com/vuejs/vuex/pull/1115/files#diff-3bf35cd41da51153dcca3003656f7c67R139\r\n\r\nit returns now pending promise for returned true from action instead of resolved. You can see it at jsfiddle console.\r\n\r\n\r\n\r\n\r\n\r\n### What is expected?\r\nuntouched Promise.resolve(true) returned by action wrapper\r\nwhen no any action subscribers added\r\n\r\n\r\n### What is actually happening?\r\nreturned pending promise\r\n\r\n---\r\nalso you can look at \r\nhttps://github.com/vuejs/vuex/issues/1572\r\nwhich targets the same pull request\r\n\r\nPerhaps I have bad assumptions. But behavior for trivial action response is not specified here https://vuex.vuejs.org/ru/guide/actions.html\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1668","RelatedDescription":"Closed issue \"dispatch interface returns pending promise instead of resolved\" (#1668)"},{"Id":"548553432","IsPullRequest":true,"CreatedAt":"2020-01-12T23:55:24","Actor":"huybuidac","Number":"1666","RawContent":null,"Title":"Store adds reset function that helps reset to initial state","State":"closed","Body":"Currently, there is no true way to reset to initial state.\r\n\r\nAdding Reset function to do that.\r\n\r\nFixes: https://github.com/vuejs/vuex/issues/1118","Url":"https://github.com/vuejs/vuex/pull/1666","RelatedDescription":"Closed or merged PR \"Store adds reset function that helps reset to initial state\" (#1666)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-03-12T05:30:51.1174597Z","RunDurationInMilliseconds":2134}