{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework January Preview of Quality Rollup","PublishedOn":"2020-01-23T22:48:37+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the January 2020 Preview of Quality Rollup Updates for .NET Framework.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-january-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Core January 2020 Updates – 2.1.15, 3.0.2, and 3.1.1","PublishedOn":"2020-01-14T20:21:23+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core January 2020 Update. These updates also contain security and reliability fixes. See the individual release notes for details on updated packages.\nNOTE: If you are...","Href":"https://devblogs.microsoft.com/dotnet/net-core-january-2020/","RawContent":null},{"Title":".NET Framework January Security and Quality Rollup","PublishedOn":"2020-01-14T19:13:47+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the January 2020 Security and Quality Rollup Updates for .NET Framework.\nSecurity\nCVE-2020-0605, CVE-2020-0606, CVE-2020-0646 – .NET Framework Remote Code Execution\nA remote...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-january-security-and-quality-rollup/","RawContent":null},{"Title":"Collecting and analyzing memory dumps","PublishedOn":"2020-01-13T21:14:52+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Building upon the diagnostics improvements introduced in .NET Core 3.1, we&#8217;ve introduced a new tool for collecting heap dumps from a running .NET Core process.\nIn a previous blog post we...","Href":"https://devblogs.microsoft.com/dotnet/collecting-and-analyzing-memory-dumps/","RawContent":null},{"Title":"An Introduction to DataFrame","PublishedOn":"2019-12-16T16:00:04+00:00","CommentsCount":28,"FacebookCount":0,"Summary":"Last month, we announced .NET support for Jupyter notebooks, and showed how to use them to work with .NET for Apache Spark and ML.NET. Today, we&#8217;re announcing the preview of a DataFrame type for...","Href":"https://devblogs.microsoft.com/dotnet/an-introduction-to-dataframe/","RawContent":null},{"Title":"ConfigureAwait FAQ","PublishedOn":"2019-12-12T04:31:21+00:00","CommentsCount":46,"FacebookCount":0,"Summary":".NET added async/await to the languages and libraries over seven years ago. In that time, it&#8217;s caught on like wildfire, not only across the .NET ecosystem, but also being replicated in a myriad...","Href":"https://devblogs.microsoft.com/dotnet/configureawait-faq/","RawContent":null},{"Title":"An Introduction to System.Threading.Channels","PublishedOn":"2019-12-12T03:52:18+00:00","CommentsCount":34,"FacebookCount":0,"Summary":"&#8220;Producer/consumer&#8221; problems are everywhere, in all facets of our lives. A line cook at a fast food restaurant, slicing tomatoes that are handed off to another cook to assemble a burger,...","Href":"https://devblogs.microsoft.com/dotnet/an-introduction-to-system-threading-channels/","RawContent":null},{"Title":".NET Framework December 2019 Security and Quality Rollup","PublishedOn":"2019-12-10T21:39:52+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the December 2019 Security and Quality Rollup Updates for .NET Framework.\nSecurity\nNo new security fixes. See September 2019 Security and Quality Rollup for the latest security...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-december-2019-security-and-quality-rollup/","RawContent":null},{"Title":"We made Windows Server Core container images >40% smaller","PublishedOn":"2019-12-09T21:50:23+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Over the past year, we&#8217;ve been working with the Windows Server team to make Windows Server Core container images a lot smaller. They are now 40% smaller! The Windows Server team has already...","Href":"https://devblogs.microsoft.com/dotnet/we-made-windows-server-core-container-images-40-smaller/","RawContent":null},{"Title":"GC Perf Infrastructure – Part 1","PublishedOn":"2019-12-09T09:33:32+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We open sourced our new GC Perf Infrastructure! It’s now part of the dotnet performance repo. I’ve been meaning to write about it ‘cause some curious minds had been asking when they could use it after...","Href":"https://devblogs.microsoft.com/dotnet/gc-perf-infrastructure-part-1/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"11465516205","Type":"IssuesEvent","CreatedAt":"2020-02-07T20:35:37","Actor":"nagytech","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/issues/159","RelatedDescription":"Closed issue \"Add Akka.NET to the DNF project listing\" (#159) at dotnet/foundation","RelatedBody":"With reference to PR #158 I'm requesting to add Akka.NET to the DNF project listings."},{"Id":"11452253839","Type":"IssuesEvent","CreatedAt":"2020-02-06T13:21:11","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/foundation/issues/159","RelatedDescription":"Reopened issue \"Add Akka.NET to the DNF project listing\" (#159) at dotnet/foundation","RelatedBody":"With reference to PR #158 I'm requesting to add Akka.NET to the DNF project listings."},{"Id":"11358893853","Type":"IssuesEvent","CreatedAt":"2020-01-25T17:36:29","Actor":"oskardudycz","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/issues/161","RelatedDescription":"Closed issue \"Marten\" (#161) at dotnet/foundation","RelatedBody":"<!-- \r\nInstructions:\r\nThanks for your application to join the .NET Foundation. \r\n\r\n1.  Here is a checklist of steps we’ll follow during the process: [https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md](https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md)\r\n2.  Please fill out the application in the template below. If you prefer to submit via e-mail to keep information private, you can use this [application form](https://github.com/dotnet-foundation/projects/blob/master/OnBoardingQuestionaire.docx) and submit to contact@dotnetfoundation.org, referencing this issue number. You can also fill out the Word document and submit it as an [attachement to the issue](https://help.github.com/en/articles/file-attachments-on-issues-and-pull-requests), via Google Doc, etc. If you have questions, fill out what you know and discuss on the issue.\r\n3.  After review and comment by the advisory council, we will submit your questionnaire to the board of directors recommending we add your project.\r\n4.  We will send you a contribution agreement via DocuSign.\r\n5.  We can announce the project is joining, and work through the other steps on the checklist.\r\n\r\n\r\nSome common questions that come up on the questionnaire:\r\n\r\n*   Project Transfer Signatories section: List the top contributors, with contact e-mail. For most projects, this is the top 1-5 contributors who have contributed more than a few hundred lines of code.\r\n*   Contribution vs Assignment: The difference is in the contribution model is who actually owns the copyright. It is important, but in terms of practical operation of the project it’s pretty transparent.\r\n\r\n\r\n*   **Contribution:** The project grants the .NET Foundation a license and rights to the intellectual property and source code. The project agrees that it is their work, and the .NET Foundation can protect your copyright.\r\n*   **Assignment:** The project / company gives the .NET Foundation the project, the .NET Foundation grants it back  \r\n\r\n Normally for community projects we recommend contribution. It’s more applicable for projects that have had multiple contributors over a period of time. Assignment is more applicable for a project that was developed in-house by a company, as they have had complete and traceable ownership of the project throughout its lifespan. Either works fine and has little to no day to day impact on the project once it joins from an actual open source development / shipping software point of view. I’d honestly have to go back and check the transfer agreements for a project to tell you what contribution model they chose. So, whatever makes your lawyers happiest is best.\r\n-->\r\n\r\n## 1.   General Information\r\n\r\n**Project Name:** \r\nMarten\r\n\r\n**License:**\r\nMIT\r\n\r\n**Contributor (Company, Organization or individual name(s)):**\r\nJeremy D. Miller, Babu Annamalai, Oskar Dudycz, Joona-Pekka Kokko\r\n\r\n**Existing OSS Project? (Yes/No):**\r\nYes\r\n\r\n**Source Code URL:**\r\nhttps://github.com/JasperFx/marten\r\n\r\n**Project Homepage URL (if different):**\r\nhttps://martendb.io\r\n\r\n**Project Transfer Signatories:**\r\n_Full legal name and email address required of the individual(s) with the authority to transfer or contribute the project to the .NET Foundation. Note that if you'd prefer not to include this in the public application, it can be submitted via e-mail to contact@dotnetfoundation.org (referencing this issue number)._\r\n\r\nJeremy D. Miller jeremydmiller@yahoo.com\r\nBabu Annamalai  babu.annamalai@gmail.com\r\nOskar Dudycz oskar.dudycz@gmail.com\r\nJoona-Pekka Kokko jokokko@gmail.com\r\n\r\n## 2.   Description\r\n**Please provide a brief statement about your project in terms that are understandable to the target consumer of the library or project, i.e. an elevator pitch for the project:**\r\n\r\nMarten gives developers a multi-paradigm framework for modelling, storing and querying data on PostgreSQL. Making use of the battle hardened database engine, Marten transparently exposes the JSON(B) capabilities of PostgreSQL for managing objects and events alike, requiring no ceremony to enable friction-less development. Marten is your object (document) and event store, with bells and whistles attached, be it CRUD, Event Sourcing or anything between.\r\n\r\n**Please provide a 1 sentence (<140 character) summary of your to help users when searching the .NET Foundation projects**\r\nPolyglot Persistence providing object (document) and event store Powered by .NET and PostgreSQL\r\n\r\n## 3.   Project Governance\r\nPlease complete this section about who will be maintaining the open source project and how it will run.\r\n**Project Lead:**\r\n(Who is the primary contact point for the community and the .NET Foundation when discussing governance of the project.)\r\n\r\nName: Jeremy D. Miller\r\n Email: jeremydmiller@yahoo.com  \r\n GitHub Profile URL: https://github.com/jeremydmiller\r\n\r\n**Committers:**\r\n\r\n_Which individuals have commit / write access to the repository, what is their GitHub ID and who is their employer (if contributions are on behalf of an employer)_\r\n\r\nJeremy D. Miller https://github.com/jeremydmiller\r\n\r\nBabu Annamalai https://github.com/mysticmind\r\n\r\nOskar Dudycz https://github.com/oskardudycz\r\n\r\nJoona-Pekka Kokko https://github.com/jokokko\r\n\r\n**Governance Model:**\r\n\r\n_Please describe how new code changes are proposed to the project, how those changes are reviewed and how a decision is made to accept proposed changes. Also describe the process for identifying and appointing new committers._\r\n\r\nChanges are proposed via GH issues. All issues are reviewed and labelled with the proper type and scope. Issues that have the estimated timeline are assigned to a proper milestone. Milestones reflect the package version based on the semantic versioning. \r\nPlans for the new releases are discussed publicly in the issues (see eg. https://github.com/JasperFx/marten/issues/1307 or https://github.com/JasperFx/marten/issues/1391).\r\nQuick surveys, questions, clarifications and in general contact with community is done in dedicated Gitter channel https://gitter.im/JasperFx/marten.\r\nNormally 2 approves from maintainers are needed to merge the Pull Request. \r\nNew committers were appointed once by Jeremy based on the number and quality of commits, activity and helping the community. See more: https://jeremydmiller.com/2018/09/27/marten-3-0-is-released-and-introducing-the-new-core-team/\r\n\r\n**CLA**\r\n\r\n_If already an OSS project, was a Contribution License Agreement in place for contributions accepted? How does the project check who has signed one?_\r\n\r\nNo.\r\n\r\n**CLA Notification Alias**\r\n_Provide an email address that will receive CLA related notifications from the .NET Foundation CLA automation_\r\n\r\n**Project Transfer Type**\r\n\r\n_Projects may join the .NET Foundation in one of two ways and you should chat with your .NET Foundation contact to discuss the best mechanism for your project. You can either a) assign the copyright of the project's source code to the .NET Foundation or b) contribute the project source code to the .NET Foundation under an open source license. Assignment is the preferred approach, but licensing a project to the Foundation may be more appropriate for longer running open source projects that have not previously had a contribution license agreement and have accepted contributions from many different sources.\r\na) Assignment\r\nb) Contribution_\r\n\r\nContribution.\r\n\r\n## 4.   Repository Layout\r\n_The .NET Foundation host guidance for new projects and details on recommended structure here:\r\n[https://github.com/dotnet/home/tree/master/guidance](https://github.com/dotnet/home/tree/master/guidance)\r\n\r\nNote that the open source repository should be the master where changes are made by the core development team using the same PR process that is used for non-committer contributions.\r\n\r\nPlease define below any changes you would want to make to your repositories as part of the process of joining the .NET Foundation_\r\n\r\nI don’t think any repository changes are required as part of this process.\r\n\r\n## 5.   PR Plan\r\n_Please summarize the public relations plan for the announcement when joining the foundation (and releasing as open source if appropriate). What is the main story we wish to promote, through what channels, what issues should we be aware of?  For significant news events then please also work with your .NET Foundation contact to ensure a [full PR plan](https://dotnetfoundation.sharepoint.com/Shared%20Documents/PR/Communications%20Plan%20TEMPLATE.docx?web=1) is developed._\r\n\r\nCurrently we'll promote that through blog post, twitter announcement using twitter handle `@marten_lib` & updated website https://martendb.io. We also want to provide the newsletter and maybe more video tutorials. Contributors also speak about the Event Sourcing with .NET Core and Marten on the local meetups. We also plan to get some sponsorship plan (not clear as yet - https://github.com/JasperFx/marten/issues/1393).\r\n\r\n## 6.   Infrastructure Requirements\r\n_Please describe any infrastructure requirements for the project. For example, how will build servers be operated? Any web hosting or service hosting requirements? Do we need to set up SSL certificates or provide Authenticode Code Signing arrangement for releases?_\r\n\r\nCurrently, we're using the Azure Pipelines and AppVeyor OSS plans and we're happy with that process. We are building our documentation using Storyteller (https://storyteller.github.io/documentation/docs/)  hosted on GitHub pages and Netlify so we also don't need to change it as for now. We might need in the future SSL certificates or Authentication Code Signing.\r\n\r\n## 7.   Additional Notes\r\n_Please provide any additional information required or use this area for notes during the on boarding process. If this open source project has similarities with any other projects in this space then please detail them and why this project is different. If there are any potential issues that you feel the project might need help with early on then also state them here and discuss with your .NET Foundation Contact._\r\n\r\nMarten is sometimes compared to Entity Framework. But Marten is not an ORM, it should be treated as the .NET Document and Event Store that's just backed with PostgreSQL. Our approach to using the PostgreSQL and its sophisticated JSON(B) features is unique in .NET space. It should be more compared to RavenDB rather than Entity Framework.\r\nWe're working on the sustainability of our model (so getting sponsorship) to be able to work on the dedicated time and get more reliability in bigger Enterprise companies. Such help would be more than welcome from .NET Foundation."},{"Id":"11358890799","Type":"IssuesEvent","CreatedAt":"2020-01-25T17:35:17","Actor":"oskardudycz","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/161","RelatedDescription":"Opened issue \"Marten\" (#161) at dotnet/foundation","RelatedBody":"<!-- \r\nInstructions:\r\nThanks for your application to join the .NET Foundation. \r\n\r\n1.  Here is a checklist of steps we’ll follow during the process: [https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md](https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md)\r\n2.  Please fill out the application in the template below. If you prefer to submit via e-mail to keep information private, you can use this [application form](https://github.com/dotnet-foundation/projects/blob/master/OnBoardingQuestionaire.docx) and submit to contact@dotnetfoundation.org, referencing this issue number. You can also fill out the Word document and submit it as an [attachement to the issue](https://help.github.com/en/articles/file-attachments-on-issues-and-pull-requests), via Google Doc, etc. If you have questions, fill out what you know and discuss on the issue.\r\n3.  After review and comment by the advisory council, we will submit your questionnaire to the board of directors recommending we add your project.\r\n4.  We will send you a contribution agreement via DocuSign.\r\n5.  We can announce the project is joining, and work through the other steps on the checklist.\r\n\r\n\r\nSome common questions that come up on the questionnaire:\r\n\r\n*   Project Transfer Signatories section: List the top contributors, with contact e-mail. For most projects, this is the top 1-5 contributors who have contributed more than a few hundred lines of code.\r\n*   Contribution vs Assignment: The difference is in the contribution model is who actually owns the copyright. It is important, but in terms of practical operation of the project it’s pretty transparent.\r\n\r\n\r\n*   **Contribution:** The project grants the .NET Foundation a license and rights to the intellectual property and source code. The project agrees that it is their work, and the .NET Foundation can protect your copyright.\r\n*   **Assignment:** The project / company gives the .NET Foundation the project, the .NET Foundation grants it back  \r\n\r\n Normally for community projects we recommend contribution. It’s more applicable for projects that have had multiple contributors over a period of time. Assignment is more applicable for a project that was developed in-house by a company, as they have had complete and traceable ownership of the project throughout its lifespan. Either works fine and has little to no day to day impact on the project once it joins from an actual open source development / shipping software point of view. I’d honestly have to go back and check the transfer agreements for a project to tell you what contribution model they chose. So, whatever makes your lawyers happiest is best.\r\n-->\r\n\r\n## 1.   General Information\r\n\r\n**Project Name:** \r\nMarten\r\n\r\n**License:**\r\nMIT\r\n\r\n**Contributor (Company, Organization or individual name(s)):**\r\nJeremy D. Miller, Babu Annamalai, Oskar Dudycz, Joona-Pekka Kokko\r\n\r\n**Existing OSS Project? (Yes/No):**\r\nYes\r\n\r\n**Source Code URL:**\r\nhttps://github.com/JasperFx/marten\r\n\r\n**Project Homepage URL (if different):**\r\nhttps://martendb.io\r\n\r\n**Project Transfer Signatories:**\r\n_Full legal name and email address required of the individual(s) with the authority to transfer or contribute the project to the .NET Foundation. Note that if you'd prefer not to include this in the public application, it can be submitted via e-mail to contact@dotnetfoundation.org (referencing this issue number)._\r\n\r\nJeremy D. Miller jeremydmiller@yahoo.com\r\nBabu Annamalai  babu.annamalai@gmail.com\r\nOskar Dudycz oskar.dudycz@gmail.com\r\nJoona-Pekka Kokko jokokko@gmail.com\r\n\r\n## 2.   Description\r\n**Please provide a brief statement about your project in terms that are understandable to the target consumer of the library or project, i.e. an elevator pitch for the project:**\r\n\r\nMarten gives developers a multi-paradigm framework for modelling, storing and querying data on PostgreSQL. Making use of the battle hardened database engine, Marten transparently exposes the JSON(B) capabilities of PostgreSQL for managing objects and events alike, requiring no ceremony to enable friction-less development. Marten is your object (document) and event store, with bells and whistles attached, be it CRUD, Event Sourcing or anything between.\r\n\r\n**Please provide a 1 sentence (<140 character) summary of your to help users when searching the .NET Foundation projects**\r\nPolyglot Persistence providing object (document) and event store Powered by .NET and PostgreSQL\r\n\r\n## 3.   Project Governance\r\nPlease complete this section about who will be maintaining the open source project and how it will run.\r\n**Project Lead:**\r\n(Who is the primary contact point for the community and the .NET Foundation when discussing governance of the project.)\r\n\r\nName: Jeremy D. Miller\r\n Email: jeremydmiller@yahoo.com  \r\n GitHub Profile URL: https://github.com/jeremydmiller\r\n\r\n**Committers:**\r\n\r\n_Which individuals have commit / write access to the repository, what is their GitHub ID and who is their employer (if contributions are on behalf of an employer)_\r\n\r\nJeremy D. Miller https://github.com/jeremydmiller\r\n\r\nBabu Annamalai https://github.com/mysticmind\r\n\r\nOskar Dudycz https://github.com/oskardudycz\r\n\r\nJoona-Pekka Kokko https://github.com/jokokko\r\n\r\n**Governance Model:**\r\n\r\n_Please describe how new code changes are proposed to the project, how those changes are reviewed and how a decision is made to accept proposed changes. Also describe the process for identifying and appointing new committers._\r\n\r\nChanges are proposed via GH issues. All issues are reviewed and labelled with the proper type and scope. Issues that have the estimated timeline are assigned to a proper milestone. Milestones reflect the package version based on the semantic versioning. \r\nPlans for the new releases are discussed publicly in the issues (see eg. https://github.com/JasperFx/marten/issues/1307 or https://github.com/JasperFx/marten/issues/1391).\r\nQuick surveys, questions, clarifications and in general contact with community is done in dedicated Gitter channel https://gitter.im/JasperFx/marten.\r\nNormally 2 approves from maintainers are needed to merge the Pull Request. \r\nNew committers were appointed once by Jeremy based on the number and quality of commits, activity and helping the community. See more: https://jeremydmiller.com/2018/09/27/marten-3-0-is-released-and-introducing-the-new-core-team/\r\n\r\n**CLA**\r\n\r\n_If already an OSS project, was a Contribution License Agreement in place for contributions accepted? How does the project check who has signed one?_\r\n\r\nNo.\r\n\r\n**CLA Notification Alias**\r\n_Provide an email address that will receive CLA related notifications from the .NET Foundation CLA automation_\r\n\r\n**Project Transfer Type**\r\n\r\n_Projects may join the .NET Foundation in one of two ways and you should chat with your .NET Foundation contact to discuss the best mechanism for your project. You can either a) assign the copyright of the project's source code to the .NET Foundation or b) contribute the project source code to the .NET Foundation under an open source license. Assignment is the preferred approach, but licensing a project to the Foundation may be more appropriate for longer running open source projects that have not previously had a contribution license agreement and have accepted contributions from many different sources.\r\na) Assignment\r\nb) Contribution_\r\n\r\nContribution.\r\n\r\n## 4.   Repository Layout\r\n_The .NET Foundation host guidance for new projects and details on recommended structure here:\r\n[https://github.com/dotnet/home/tree/master/guidance](https://github.com/dotnet/home/tree/master/guidance)\r\n\r\nNote that the open source repository should be the master where changes are made by the core development team using the same PR process that is used for non-committer contributions.\r\n\r\nPlease define below any changes you would want to make to your repositories as part of the process of joining the .NET Foundation_\r\n\r\nI don’t think any repository changes are required as part of this process.\r\n\r\n## 5.   PR Plan\r\n_Please summarize the public relations plan for the announcement when joining the foundation (and releasing as open source if appropriate). What is the main story we wish to promote, through what channels, what issues should we be aware of?  For significant news events then please also work with your .NET Foundation contact to ensure a [full PR plan](https://dotnetfoundation.sharepoint.com/Shared%20Documents/PR/Communications%20Plan%20TEMPLATE.docx?web=1) is developed._\r\n\r\nCurrently we'll promote that through blog post, twitter announcement using twitter handle `@marten_lib` & updated website https://martendb.io. We also want to provide the newsletter and maybe more video tutorials. Contributors also speak about the Event Sourcing with .NET Core and Marten on the local meetups. We also plan to get some sponsorship plan (not clear as yet - https://github.com/JasperFx/marten/issues/1393).\r\n\r\n## 6.   Infrastructure Requirements\r\n_Please describe any infrastructure requirements for the project. For example, how will build servers be operated? Any web hosting or service hosting requirements? Do we need to set up SSL certificates or provide Authenticode Code Signing arrangement for releases?_\r\n\r\nCurrently, we're using the Azure Pipelines and AppVeyor OSS plans and we're happy with that process. We are building our documentation using Storyteller (https://storyteller.github.io/documentation/docs/)  hosted on GitHub pages and Netlify so we also don't need to change it as for now. We might need in the future SSL certificates or Authentication Code Signing.\r\n\r\n## 7.   Additional Notes\r\n_Please provide any additional information required or use this area for notes during the on boarding process. If this open source project has similarities with any other projects in this space then please detail them and why this project is different. If there are any potential issues that you feel the project might need help with early on then also state them here and discuss with your .NET Foundation Contact._\r\n\r\nMarten is sometimes compared to Entity Framework. But Marten is not an ORM, it should be treated as the .NET Document and Event Store that's just backed with PostgreSQL. Our approach to using the PostgreSQL and its sophisticated JSON(B) features is unique in .NET space. It should be more compared to RavenDB rather than Entity Framework.\r\nWe're working on the sustainability of our model (so getting sponsorship) to be able to work on the dedicated time and get more reliability in bigger Enterprise companies. Such help would be more than welcome from .NET Foundation."},{"Id":"11357395218","Type":"IssuesEvent","CreatedAt":"2020-01-25T04:38:47","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/issues/160","RelatedDescription":"Closed issue \"Website down\" (#160) at dotnet/foundation","RelatedBody":"Not sure if it’s appropriate to report this here, but when browsing to the dotnet foundation org website, I get the following error.\r\n\r\n~~~\r\n\r\nHTTP Error 500.30 - ANCM In-Process Start Failure\r\n\r\nCommon solutions to this issue:\r\nThe application failed to start\r\nThe application started but then stopped\r\nThe application started but threw an exception during startup\r\nTroubleshooting steps:\r\nCheck the system event log for error messages\r\nEnable logging the application process' stdout messages\r\nAttach a debugger to the application process and inspect\r\nFor more information visit: https://go.microsoft.com/fwlink/?LinkID=2028265\r\n\r\n~~~"},{"Id":"11357323121","Type":"IssuesEvent","CreatedAt":"2020-01-25T03:54:25","Actor":"nagytech","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/160","RelatedDescription":"Opened issue \"Website down\" (#160) at dotnet/foundation","RelatedBody":"Browsing to the dotnet foundation org website, I get the following error.\r\n\r\n~~~\r\n\r\nHTTP Error 500.30 - ANCM In-Process Start Failure\r\n\r\nCommon solutions to this issue:\r\nThe application failed to start\r\nThe application started but then stopped\r\nThe application started but threw an exception during startup\r\nTroubleshooting steps:\r\nCheck the system event log for error messages\r\nEnable logging the application process' stdout messages\r\nAttach a debugger to the application process and inspect\r\nFor more information visit: https://go.microsoft.com/fwlink/?LinkID=2028265\r\n\r\n~~~"},{"Id":"11357320828","Type":"IssuesEvent","CreatedAt":"2020-01-25T03:52:51","Actor":"nagytech","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/issues/159","RelatedDescription":"Closed issue \"Add Akka.NET to the DNF project listing\" (#159) at dotnet/foundation","RelatedBody":"With reference to PR #158 I'm requesting to add Akka.NET to the DNF project listings."},{"Id":"11334200867","Type":"PullRequestEvent","CreatedAt":"2020-01-22T14:09:30","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/152","RelatedDescription":"Merged pull request \"Fix broken links\" (#152) at dotnet/foundation","RelatedBody":""},{"Id":"11334196288","Type":"PullRequestEvent","CreatedAt":"2020-01-22T14:09:01","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/153","RelatedDescription":"Merged pull request \"Fix broken links\" (#153) at dotnet/foundation","RelatedBody":""},{"Id":"11334180047","Type":"PullRequestEvent","CreatedAt":"2020-01-22T14:07:14","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/156","RelatedDescription":"Merged pull request \"Update Teams Link\" (#156) at dotnet/foundation","RelatedBody":"Was `https://dotnetfoundation.org/team` but now is `https://dotnetfoundation.org/about#team`"},{"Id":"11334176612","Type":"PullRequestEvent","CreatedAt":"2020-01-22T14:06:52","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/157","RelatedDescription":"Merged pull request \"Link Reactive Extensions to new github repo\" (#157) at dotnet/foundation","RelatedBody":""},{"Id":"11334171592","Type":"PullRequestEvent","CreatedAt":"2020-01-22T14:06:20","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/158","RelatedDescription":"Merged pull request \"Add Akka.NET to DNF\" (#158) at dotnet/foundation","RelatedBody":"Akka.NET was added to the DNF recently (see, https://github.com/akkadotnet/akka.net/pull/3189) but we are not yet listed on the public website.\r\n\r\nThis PR adds the Akka.NET md page and an entry to the main listing.\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"11491466131","Type":"IssuesEvent","CreatedAt":"2020-02-11T19:02:45","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/151","RelatedDescription":"Opened issue \"February 2020 .NET Updates\" (#151) at dotnet/announcements","RelatedBody":"The following .NET updates were released on February 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework February 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n"},{"Id":"11275368710","Type":"IssuesEvent","CreatedAt":"2020-01-14T20:37:01","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/150","RelatedDescription":"Opened issue \"January 2020 .NET Updates\" (#150) at dotnet/announcements","RelatedBody":"The following .NET updates were released on January 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-security-and-quality-rollup/ )\r\n\r\n## .NET Core\r\n* [January 2020 Updates – 2.1.15, 3.0.2, and 3.1.1](https://devblogs.microsoft.com/dotnet/net-core-january-2020/)\r\n\r\n\r\n* .NET Core 3.1.1 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.1/3.1.1.md) | [Download](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.1/3.1.1-download.md) )\r\n\r\n* .NET Core 3.0.2 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.2/3.0.2.md) | [Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.2/3.0.2-download.md) )\r\n\r\n* .NET Core 2.1.15 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.15/2.1.15.md) | [Download](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.15/2.1.15-download.md) )\r\n\r\n \r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n"},{"Id":"11274184940","Type":"IssuesEvent","CreatedAt":"2020-01-14T18:01:14","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/149","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\" (#149) at dotnet/announcements","RelatedBody":"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/ **TBD**\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 3.0 application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0606](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0606)\r\n\r\n### Revisions\r\n\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2020-01-14_\r\n"},{"Id":"11274183716","Type":"IssuesEvent","CreatedAt":"2020-01-14T18:01:05","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/148","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\" (#148) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/ **TBD**\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 3.0 application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0605](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0605)\r\n\r\n### Revisions\r\n\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2020-01-14_\r\n"},{"Id":"11214612804","Type":"IssuesEvent","CreatedAt":"2020-01-06T23:02:39","Actor":"vivmishra","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/147","RelatedDescription":"Opened issue \".NET Core 2.2 has reached end of life\" (#147) at dotnet/announcements","RelatedBody":"[.NET Core 2.2 reached end of life](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/) on **December 23, 2019**. This means [.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 3.1](https://www.microsoft.com/net/download/dotnet-core/3.1)\r\n- [.NET Core 2.2 end-of-life statement](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/)\r\n\r\nWe've created an issue at [dotnet/core#4084](https://github.com/dotnet/core/issues/4084) for your questions and comments.\r\n\r\n## .NET Core 2.2 Lifecycle\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n[.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) was released in December 2018 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). **.NET Core 3.0** released in **September 2019** and began the end of life countdown for .NET Core 2.2 that concluded on December 23, 2019. \r\n\r\n## .NET Core 2.2 Downloads\r\n\r\n.NET Core 2.2 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.2, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"11521989519","Type":"PullRequestEvent","CreatedAt":"2020-02-14T17:49:00","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28011","RelatedDescription":"Closed pull request \"WIP -- Port linuxdac from master\" (#28011) at dotnet/coreclr","RelatedBody":"This is an early port of the prototype cross OS DAC work from the 5.0 branch to the 3.1 branch.\r\n\r\nIt is intended to indicate some of the gross characteristics of the eventual PR.  It is looking for 20% feedback on approach we should take with supporting this feature for 3.1 LTS.\r\n\r\nPlease note this was the earliest functional port from the 5.0 branch, so it is not fully representative of real code, but it is likely representative of the types of changes required to get a DAC cross OS compiled.\r\n\r\nI wanted feedback before I drafted a final back port for 3.1.\r\n\r\nKey points:\r\n\r\n- Changes are primarily to build configuration.\r\n    - Changes to CMake file to separate concept of Host/Compiler platform and Target/Runtime platform\r\n   - Changes to C++ `#ifdef` to separate concept of Host/Compiler platform and Target/Runtime platform\r\n- These changes are not intended to change the runtime.  For this version runtime changes were not required. The cross OS DAC was built and then tested against official released bits.\r\n- The 5.0 implementation will eventually depend on a new export of the `g_DacTable`.  Ideally we would port that here too. This is a minor runtime change.\r\n\r\nOptions:\r\n\r\n- 3.1 PR w/ minimal backport of the 5.0 Linux DAC required to support the Print Exception scenario.\r\n- 3.1 PR w/ with changes as a patch to be applied only during Cross OS DAC build. Plus infra changes to apply the patch and build the new binaries\r\n- Official build of cross OS DAC out of a separate 3.1DAC branch. Merge 3.1 regularly.  \r\n- Do not support scenario\r\n- Develop alternate approach\r\n\r\n/cc @tommcdon "},{"Id":"11515596884","Type":"PullRequestEvent","CreatedAt":"2020-02-14T01:45:10","Actor":"dotnet-maestro[bot]","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28018","RelatedDescription":"Merged pull request \"[release/3.1] Update dependencies from dotnet/arcade\" (#28018) at dotnet/coreclr","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 88e1281a-0536-412d-736c-08d72a4ce44a\r\n- **Build**: 20200213.5\r\n- **Date Produced**: 2/13/2020 9:34 PM\r\n- **Commit**: 15f00efd583eab4372b2e9ca25bd80ace5b119ad\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.20113.5\r\n\r\n[marker]: <> (End:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n\r\n"},{"Id":"11515169770","Type":"PullRequestEvent","CreatedAt":"2020-02-14T00:14:26","Actor":"dotnet-maestro[bot]","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28018","RelatedDescription":"Opened pull request \"[release/3.1] Update dependencies from dotnet/arcade\" (#28018) at dotnet/coreclr","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 88e1281a-0536-412d-736c-08d72a4ce44a\r\n- **Build**: 20200213.5\r\n- **Date Produced**: 2/13/2020 9:34 PM\r\n- **Commit**: 15f00efd583eab4372b2e9ca25bd80ace5b119ad\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.20113.5\r\n\r\n[marker]: <> (End:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n\r\n"},{"Id":"11514553789","Type":"PullRequestEvent","CreatedAt":"2020-02-13T22:27:51","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27986","RelatedDescription":"Merged pull request \"Port of dotnet/runtime#1059 to 3.1 branch\" (#27986) at dotnet/coreclr","RelatedBody":"This is the fix for #27924. This is a GC hole bug that was found externally, #27590.\r\nThe cause is that the JIT was using the target type of the subtract when it needed\r\nto make a copy of the source, but it needs to use the source type.\r\n\r\n## Customer Impact\r\nCorruption of state that is non-deterministic and hard to track down.\r\n\r\n## Regression?\r\nNot a recent regression, but exposed by Unsafe.ByteOffset.\r\n\r\n## Testing\r\nThe fix has been verified in the runtime repo.\r\n\r\n## Risk\r\nLow: The fix is straightfoward and only impacts 3 lines of code.\r\n\r\n## Code Reviewer\r\n@jaschook and @jkotas"},{"Id":"11514552070","Type":"PullRequestEvent","CreatedAt":"2020-02-13T22:27:36","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27983","RelatedDescription":"Merged pull request \"Port fix for #1241 to 3.1\" (#27983) at dotnet/coreclr","RelatedBody":"Port of dotnet/runtime#1279 to 3.1 branch.\r\nThis is the fix for dotnet/runtime#1241. This is a SBCG bug reported externally. When a struct is partially written, the JIT fails to invalidate assertions (in this case that the entire struct had been zero'd). This results in incorrect optimization. The fix is to invalidate the assertions in the partial write case.\r\n\r\n## Customer Impact\r\nSBCG resulting in incorrect behavior.\r\n\r\n## Regression?\r\nNot a recent regression, but exposed by doing more optimizations on structs.\r\n\r\n## Testing\r\nThe fix has been verified in the runtime repo.\r\n\r\n## Risk\r\nLow: The fix is straightforward and kills assertions which only disables optimizations.\r\n\r\n## Code Reviewer\r\n@briansull and @BruceForstall "},{"Id":"11514550787","Type":"PullRequestEvent","CreatedAt":"2020-02-13T22:27:24","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27984","RelatedDescription":"Merged pull request \"Port PR #258 to 3.1\" (#27984) at dotnet/coreclr","RelatedBody":"Port of dotnet/runtime#258 to 3.1 branch.\r\nThis is the fix for #27937. The manifestation is an AV in the JIT. Although it isn't SBCG, it is difficult for the developer to track down that this is a JIT bug, rather than caused by something in their code.\r\n\r\n## Customer Impact\r\nUnexpected and hard to diagnose crashes.\r\n\r\n## Regression?\r\nNo.\r\n\r\n## Testing\r\nThe fix has been verified in the runtime repo.\r\n\r\n## Risk\r\nLow: The fix is straightforward and only prevents the AV case.\r\n\r\n## Code Reviewers\r\nAuthored by @saucecontrol, reviewed by @CarolEidt and @swaroop-sridhar "},{"Id":"11514549605","Type":"PullRequestEvent","CreatedAt":"2020-02-13T22:27:13","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27985","RelatedDescription":"Merged pull request \"[3.1 port] Fix GC heap corruption on ARM\" (#27985) at dotnet/coreclr","RelatedBody":"Port of dotnet/runtime#1389 to 3.1 branch.  Applications may crash in GC code due to GC heap corruption caused by incorrect padding size calculation on ARM.\r\n\r\n## Customer Impact\r\nUnexpected and hard to diagnose crashes.\r\n\r\n## Regression?\r\nNo.\r\n\r\n## Testing\r\nThe fix has been verified in the runtime repo.\r\n\r\n## Risk\r\nLow: one-line fix of the incorrect calculation."},{"Id":"11514547175","Type":"PullRequestEvent","CreatedAt":"2020-02-13T22:26:53","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28003","RelatedDescription":"Merged pull request \"Port the 5.0 fix for issue #1104\" (#28003) at dotnet/coreclr","RelatedBody":"This is the fix for the 3.1 branch for the runtime issue #1104 \r\nThis a a bug which Sergey Andreenko @sandreenko found where the JIT can\r\noptimize away a range check, allowing an out of bounds read or write.\r\nThe original cause was from PR #23109, where a cut-and-paste typo inverted the \r\ninitialization code for `bool alreadyPresent` in `RangeCheck::IsMonotonicallyIncreasing`\r\n\r\n**Customer Impact**\r\nInvalid code gen that allows an out of bounds read or write.\r\n\r\n**Regression?**\r\nA regression introduced during 3.0 development.\r\n\r\n**Testing**\r\nThe fix has been verified in the runtime repo.\r\n\r\n**Risk**\r\nLow: The fix is straightforward and only impacts 1 line of code.\r\n\r\n**Code Reviewer**\r\n@sandreenko and @BruceForstall "},{"Id":"11514529838","Type":"PullRequestEvent","CreatedAt":"2020-02-13T22:24:20","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28016","RelatedDescription":"Merged pull request \"update branding for 3.1.3\" (#28016) at dotnet/coreclr","RelatedBody":""},{"Id":"11513629339","Type":"PullRequestEvent","CreatedAt":"2020-02-13T20:26:58","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28017","RelatedDescription":"Merged pull request \"branding for 2.1.17\" (#28017) at dotnet/coreclr","RelatedBody":""},{"Id":"11513411758","Type":"PullRequestEvent","CreatedAt":"2020-02-13T19:59:57","Actor":"omajid","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28010","RelatedDescription":"Closed pull request \"[release/3.1] Support glibc deprecation of sys/sysctl.h \" (#28010) at dotnet/coreclr","RelatedBody":"I can't build `release/3.1` out of the box on Fedora 31 with glibc 2.30. This fixes that.\r\n\r\nThis contains 3 changes:\r\n\r\n- https://github.com/dotnet/coreclr/pull/27048\r\n- https://github.com/dotnet/runtime/pull/31865\r\n- And an analogue of the first PR to `gcenv.unix.cpp`"},{"Id":"11512835033","Type":"PullRequestEvent","CreatedAt":"2020-02-13T18:51:32","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28017","RelatedDescription":"Opened pull request \"branding for 2.1.17\" (#28017) at dotnet/coreclr","RelatedBody":""},{"Id":"11512831262","Type":"PullRequestEvent","CreatedAt":"2020-02-13T18:51:06","Actor":"Anipik","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/28016","RelatedDescription":"Opened pull request \"update branding for 3.1.3\" (#28016) at dotnet/coreclr","RelatedBody":""}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"11524562822","Type":"PullRequestEvent","CreatedAt":"2020-02-15T01:16:40","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13235","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13235) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200214.12\r\n- **Date Produced**: 2/15/2020 12:10 AM\r\n- **Commit**: 7fc314f73b075650f79d5225af8165e0a9369c22\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.3-servicing.20114.12\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n"},{"Id":"11524545500","Type":"PullRequestEvent","CreatedAt":"2020-02-15T01:10:31","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13236","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13236) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200214.3\r\n- **Date Produced**: 2/15/2020 12:23 AM\r\n- **Commit**: 8ac9495536a53010b68b4deabe27844afcdd8c20\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.3-servicing.20114.3\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.3\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.3\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n"},{"Id":"11524472536","Type":"PullRequestEvent","CreatedAt":"2020-02-15T00:46:26","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13235","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13235) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200214.12\r\n- **Date Produced**: 2/15/2020 12:10 AM\r\n- **Commit**: 7fc314f73b075650f79d5225af8165e0a9369c22\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.3-servicing.20114.12\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n"},{"Id":"11524263475","Type":"PullRequestEvent","CreatedAt":"2020-02-14T23:54:14","Actor":"wtgodbe","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13234","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13234) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200214.2\r\n- **Date Produced**: 2/14/2020 10:33 PM\r\n- **Commit**: 9128eb60423a020a87d42975be60c08803470b36\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.3-servicing.20114.2\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.3\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.3\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n"},{"Id":"11524140140","Type":"PullRequestEvent","CreatedAt":"2020-02-14T23:25:31","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13234","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13234) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200214.2\r\n- **Date Produced**: 2/14/2020 10:33 PM\r\n- **Commit**: 9128eb60423a020a87d42975be60c08803470b36\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.3-servicing.20114.2\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.3\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.3\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n"},{"Id":"11523768871","Type":"PullRequestEvent","CreatedAt":"2020-02-14T22:10:52","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13233","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13233) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 3731cb06-cbf9-46bf-a883-08d7219800a1\r\n- **Build**: 20200214.5\r\n- **Date Produced**: 2/14/2020 8:26 PM\r\n- **Commit**: 922c8eefc41632df5a5e052daa8aa946bc298000\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.103-servicing.20114.5\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n"},{"Id":"11523614584","Type":"PullRequestEvent","CreatedAt":"2020-02-14T21:45:40","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13232","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13232) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200214.7\r\n- **Date Produced**: 2/14/2020 8:39 PM\r\n- **Commit**: e29c49516646227d5c6c1dcfa7c04993759c3067\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.3-servicing.20114.7\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n"},{"Id":"11523583882","Type":"PullRequestEvent","CreatedAt":"2020-02-14T21:40:35","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13233","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13233) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 3731cb06-cbf9-46bf-a883-08d7219800a1\r\n- **Build**: 20200214.5\r\n- **Date Produced**: 2/14/2020 8:26 PM\r\n- **Commit**: 922c8eefc41632df5a5e052daa8aa946bc298000\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.103-servicing.20114.5\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"11526093505","Type":"PullRequestEvent","CreatedAt":"2020-02-15T13:10:39","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1708","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1708) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200214.5\r\n- **Date Produced**: 2/15/2020 3:39 AM\r\n- **Commit**: 16fbdca79f86f36434b80f2bb898861759ec754b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20114.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"11526067692","Type":"PullRequestEvent","CreatedAt":"2020-02-15T13:00:34","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1708","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1708) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200214.5\r\n- **Date Produced**: 2/15/2020 3:39 AM\r\n- **Commit**: 16fbdca79f86f36434b80f2bb898861759ec754b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20114.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"11519681230","Type":"PullRequestEvent","CreatedAt":"2020-02-14T13:20:44","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1707","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1707) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200213.6\r\n- **Date Produced**: 2/13/2020 9:22 PM\r\n- **Commit**: ba6bfb25914e3434264352dd24ba00b406d23393\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20113.6\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"11519526674","Type":"PullRequestEvent","CreatedAt":"2020-02-14T13:00:35","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1707","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1707) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200213.6\r\n- **Date Produced**: 2/13/2020 9:22 PM\r\n- **Commit**: ba6bfb25914e3434264352dd24ba00b406d23393\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20113.6\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"11509585844","Type":"PullRequestEvent","CreatedAt":"2020-02-13T13:10:43","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1706","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1706) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200212.7\r\n- **Date Produced**: 2/12/2020 8:32 PM\r\n- **Commit**: 951ea7430678b2682ff861fe1149b8a2f55887ca\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20112.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20112.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20112.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20112.7\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20112.7\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20112.7\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"},{"Id":"11509499202","Type":"PullRequestEvent","CreatedAt":"2020-02-13T13:00:38","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1706","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1706) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200212.7\r\n- **Date Produced**: 2/12/2020 8:32 PM\r\n- **Commit**: 951ea7430678b2682ff861fe1149b8a2f55887ca\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20112.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20112.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20112.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20112.7\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20112.7\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20112.7\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"11524187283","Type":"PullRequestEvent","CreatedAt":"2020-02-14T23:36:13","Actor":"joperezr","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42859","RelatedDescription":"Opened pull request \"Adding netfx configuration to System.Runtime.CompilerServices.Unsafe\" (#42859) at dotnet/corefx","RelatedBody":"Porting #42849 relevant parts to release/3.1. Original PR was against 2.1. This has already been approved by tactics."},{"Id":"11523669355","Type":"PullRequestEvent","CreatedAt":"2020-02-14T21:54:26","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42858","RelatedDescription":"Merged pull request \"Disable machine related or flaky tests\" (#42858) at dotnet/corefx","RelatedBody":"System.DrawingTest are failing on mac because the machines are being updated.\r\n BasicTest_AccessInstanceProperties_NoExceptions_Bsd failure is known and we are working on fixing it. "},{"Id":"11522690425","Type":"PullRequestEvent","CreatedAt":"2020-02-14T19:27:45","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42858","RelatedDescription":"Opened pull request \"Disable machine related or flaky tests\" (#42858) at dotnet/corefx","RelatedBody":"System.DrawingTest are failing on mac because the machines are being updated.\r\n BasicTest_AccessInstanceProperties_NoExceptions_Bsd failure is known and we are working on fixing it. "},{"Id":"11522573091","Type":"PullRequestEvent","CreatedAt":"2020-02-14T19:11:16","Actor":"wtgodbe","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42857","RelatedDescription":"Merged pull request \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42857) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200213.3\r\n- **Date Produced**: 2/14/2020 2:42 AM\r\n- **Commit**: 6689dd74ef07963fb7bcc8072e80d7e6fd2cd1de\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.3-servicing.20113.3\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.3-servicing.20113.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.3-servicing.20113.3\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n"},{"Id":"11522572020","Type":"PullRequestEvent","CreatedAt":"2020-02-14T19:11:07","Actor":"wtgodbe","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42856","RelatedDescription":"Merged pull request \"[release/3.1] Update dependencies from dotnet/arcade\" (#42856) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7\r\n- **Build**: 20200213.5\r\n- **Date Produced**: 2/13/2020 9:34 PM\r\n- **Commit**: 15f00efd583eab4372b2e9ca25bd80ace5b119ad\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.20113.5\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.20113.5\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.20113.5\r\n\r\n[marker]: <> (End:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n\r\n"},{"Id":"11522294102","Type":"PullRequestEvent","CreatedAt":"2020-02-14T18:31:30","Actor":"joperezr","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42849","RelatedDescription":"Merged pull request \"[Release/2.1] Adding .NET Framework asset on OOB packages\" (#42849) at dotnet/corefx","RelatedBody":"Contributes to https://github.com/dotnet/runtime/issues/1625\r\n\r\nPTAL: @ericstj @ahsonkhan \r\n\r\nFYI: @Dmitry-Matveev after this fix is in and shipped, then App Insights will be able to depend on the new version of System.Memory which will stop requiring facades to get binplaced and binding redirects to be required.\r\n\r\nThe changes included in this PR will fix all packages that are supported in .Net Framework, currently provide a .NET Standard asset for one .NET Framework version, and we no longer build on other branches (master or release/3.1). The thing left to do before this goes in, is to analyze the packages that had a reference to one of these and no longer build on other branches, so that we produce a new version of them referencing the new packages."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"11528186410","Type":"IssuesEvent","CreatedAt":"2020-02-16T04:01:21","Actor":"CyrusNajmabadi","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/41733","RelatedDescription":"Opened issue \"ITypeSymbol.BaseType docs appear to be incorrect wrt Type Parameters.\" (#41733) at dotnet/roslyn","RelatedBody":"The docs for ITypeSymbol.BaseType explicitly state:\r\n\r\n> The base type of a type parameter is its effective base class.\r\n\r\nHowever, in practice, this does not appear to be true.  For example, when given the following code:\r\n\r\n```c#\r\nabstract class Base\r\n{\r\n    public abstract void Method();\r\n}\r\n\r\nclass Derived<T> : Base where T : Base\r\n{\r\n    T inner;\r\n}\r\n```\r\n\r\nThe ITypeParameterSymbol for `T` returns `null` for `BaseType`.\r\n\r\nDebugging through, this appears to be very explicit:\r\n\r\n`ITypeSymbol.BaseType` is:\r\n\r\n```c#\r\n        INamedTypeSymbol ITypeSymbol.BaseType\r\n        {\r\n            get\r\n            {\r\n                return UnderlyingTypeSymbol.BaseTypeNoUseSiteDiagnostics.GetPublicSymbol();\r\n            }\r\n        }\r\n```\r\n\r\nAnd `BaseTypeNoUseSiteDiagnostics` is defined for all TypeParameters with this sealed override:\r\n\r\n```c#\r\n        internal sealed override NamedTypeSymbol BaseTypeNoUseSiteDiagnostics => null;\r\n```\r\n\r\nNow, TypeParameterSymbol also has:\r\n\r\n```c#\r\n        /// <summary>\r\n        /// The effective base class of the type parameter (spec 10.1.5). If the deduced\r\n        /// base type is a reference type, the effective base type will be the same as\r\n        /// the deduced base type. Otherwise if the deduced base type is a value type,\r\n        /// the effective base type will be the most derived reference type from which\r\n        /// deduced base type is derived.\r\n        /// </summary>\r\n        internal NamedTypeSymbol EffectiveBaseClassNoUseSiteDiagnostics\r\n```\r\n\r\nOne of two things seems to be going on here:\r\n\r\n1. we actually want ITypeParameterSymbol.BaseType to return null (in which case we need to update the docs).\r\n2. The docs are correct, but the impl is incorrect.  In which case we could consider fixing (though it's unclear what the implications of that might be)."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"11527541131","Type":"PullRequestEvent","CreatedAt":"2020-02-15T22:28:56","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7987","RelatedDescription":"Merged pull request \"Limit pregenerated variant interface implementations\" (#7987) at dotnet/corert","RelatedBody":"By default, we pregenerate all implementations of variant interface\r\nmethods on a type - this is because we don't have a good way of tracking\r\nhow variant interfaces are used (it gets quite complex for interfaces\r\nwith multiple variant parameters).\r\n\r\nWe previously at least limited this for interfaces where the variant\r\nargument happens to be a valuetype. We can further limit this for\r\ninterfaces where the parameter is contravariant and the argument is\r\na sealed type.\r\n\r\nThis doesn't help size as much as I would have hoped (no difference\r\nfor hello world, and 500 bytes for no-reflection hello world) but\r\nmaybe it will help more somewhere."},{"Id":"11527169393","Type":"PullRequestEvent","CreatedAt":"2020-02-15T19:56:43","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7987","RelatedDescription":"Opened pull request \"Limit pregenerated variant interface implementations\" (#7987) at dotnet/corert","RelatedBody":"By default, we pregenerate all implementations of variant interface\r\nmethods on a type - this is because we don't have a good way of tracking\r\nhow variant interfaces are used (it gets quite complex for interfaces\r\nwith multiple variant parameters).\r\n\r\nWe previously at least limited this for interfaces where the variant\r\nargument happens to be a valuetype. We can further limit this for\r\ninterfaces where the parameter is contravariant and the argument is\r\na sealed type.\r\n\r\nThis doesn't help size as much as I would have hoped (no difference\r\nfor hello world, and 500 bytes for no-reflection hello world) but\r\nmaybe it will help more somewhere."},{"Id":"11527006236","Type":"PullRequestEvent","CreatedAt":"2020-02-15T18:53:07","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7986","RelatedDescription":"Opened pull request \"Update CoreLib from dotnet/runtime\" (#7986) at dotnet/corert","RelatedBody":"CoreLib sources as of commit 571f972a5b1c7821870b1111bcc64726740957df in dotnet/runtime.\r\n\r\nI've reverted changes to the common ArrayBuilder.cs because our ArrayBuilder is different from the runtime one.\r\n\r\nI've also reverted change to the common SR.cs and excluded the shared CoreLib's SR.cs from build. We need to unify those two in the runtime repo first.\r\n\r\nGoing forward, we'll need to find a way to garbage collect the Common folder because deletes in the runtime repo won't easily propagate to our repo."},{"Id":"11526984966","Type":"IssuesEvent","CreatedAt":"2020-02-15T18:44:57","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7985","RelatedDescription":"Opened issue \"Implement RhpGcPoll\" (#7985) at dotnet/corert","RelatedBody":"Currently implemented as a NOP.\r\n\r\nCorresponds to CORINFO_HELP_POLL_GC in CoreCLR. We might be able to steal some code from it.\r\n\r\nThere's also an ARM implementation of this available in src\\Native\\Runtime\\arm\\GcProbe.asm. That one was implemented for ProjectN, but the samantics should be the same."},{"Id":"11526976117","Type":"IssuesEvent","CreatedAt":"2020-02-15T18:41:27","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7984","RelatedDescription":"Opened issue \"Clean up CoreLib after MemoryMarshal.GetArrayDataReference\" (#7984) at dotnet/corert","RelatedBody":"We ingested dotnet/runtime#1036. The internal uses of `Array.GetRawSzArrayData()` should be cleaned up to use the new API."},{"Id":"11520559889","Type":"PullRequestEvent","CreatedAt":"2020-02-14T15:01:49","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7981","RelatedDescription":"Merged pull request \"Document IlcSystemModule property and others\" (#7981) at dotnet/corert","RelatedBody":"mentioned in #7554"},{"Id":"11513008156","Type":"PullRequestEvent","CreatedAt":"2020-02-13T19:12:07","Actor":"yowl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7983","RelatedDescription":"Opened pull request \"WIP: Wasm: upgrade to LLVM/LLVMSharp 9 and the llvm wasm backend.\" (#7983) at dotnet/corert","RelatedBody":"This PR moves us from the old static function LLVMSharp style to the OO style, and upgrades to the Emscripten upstream backend which is the way forward and allows us to move to LLVM 9 and it's Wasm backend.  This will allow CoreRT to compile larger Wasm projects which at the moment hit https://github.com/emscripten-core/emscripten/issues/8393\r\n\r\nSorry about the huge number of commits, I thought maybe I could squash at the point of the PR but don't see an option for that.  The contentions points are really the Native/Runtime function signature changes and https://github.com/dotnet/corert/compare/master...yowl:llvm8-gvm?expand=1#diff-1bed6054b85520e1ab53fa3a5c8f6a21.\r\n\r\nFor some background on why I've done that:\r\n\r\nhttps://gist.github.com/yowl/c143f0520fa0544d41a24bce627086fe\r\nand\r\nhttps://bugs.llvm.org/show_bug.cgi?id=44381\r\n\r\nWIP while I see what happens to the CI."},{"Id":"11507571845","Type":"PullRequestEvent","CreatedAt":"2020-02-13T09:09:11","Actor":"kant2002","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/7980","RelatedDescription":"Closed pull request \"Provide a way how to project work with local build\" (#7980) at dotnet/corert","RelatedBody":"in additional to published packages.\r\n\r\nThis change mostly to show a way how customer can use CoreRT and made modifications when needed.\r\nLikely current users of CoreRT would be persons who can and would like to get hand dirty into CoreRT due to it's status.\r\n\r\nOther alternative is to have property `UseLocalCoreRT` which will be used to trigger local CoreRT usage."},{"Id":"11507440889","Type":"PullRequestEvent","CreatedAt":"2020-02-13T08:53:14","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7982","RelatedDescription":"Merged pull request \"Add prerequisites for Fedora 31\" (#7982) at dotnet/corert","RelatedBody":"Add prerequisites for Fedora 31 to compile .NET projects with CoreRT to the samples/prerequisites documentation."},{"Id":"11507430972","Type":"PullRequestEvent","CreatedAt":"2020-02-13T08:51:58","Actor":"secana","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7982","RelatedDescription":"Opened pull request \"Add prerequisites for Fedora 31\" (#7982) at dotnet/corert","RelatedBody":"Add prerequisites for Fedora 31 to compile .NET projects with CoreRT to the samples/prerequisites documentation."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"11527140144","Type":"IssuesEvent","CreatedAt":"2020-02-15T19:45:20","Actor":"raymens","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/10628","RelatedDescription":"Closed issue \"3.1.200-preview-014883 crashes on restoring (newly created) fsharp project\" (#10628) at dotnet/sdk","RelatedBody":"Restoring a project fails with the following error `NuGet.targets(124,5): error : '{{FSharpCoreShippedPackageVersion}}' is not a valid version string.`. using the `3.1.200-preview-014883` SDK.\r\n\r\nForcing the SDK to 3.1.101 using `global.json` fixes the issue.\r\n\r\n# Steps to reproduce\r\n\r\n```\r\nPS C:\\Workspace> dotnet new console -lang F# -n SdkErrorSample\r\nThe template \"Console Application\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on SdkErrorSample\\SdkErrorSample.fsproj...\r\nC:\\Program Files\\dotnet\\sdk\\3.1.200-preview-014883\\NuGet.targets(124,5): error : '{{FSharpCoreShippedPackageVersion}}' is not a valid version string. [C:\\Workspace\\SdkErrorSample\\SdkErrorSample.fsproj]\r\n\r\nRestore failed.\r\nPost action failed.\r\nDescription: Restore NuGet packages required by this project.\r\nManual instructions: Run 'dotnet restore'\r\n\r\nPS C:\\Workspace> cd .\\SdkErrorSample\\\r\nPS C:\\Workspace\\SdkErrorSample> dotnet restore\r\nC:\\Program Files\\dotnet\\sdk\\3.1.200-preview-014883\\NuGet.targets(124,5): error : '{{FSharpCoreShippedPackageVersion}}' is not a valid version string. [C:\\Workspace\\SdkErrorSample\\SdkErrorSample.fsproj]\r\nPS C:\\Workspace\\SdkErrorSample>\r\n```"},{"Id":"11526565826","Type":"PullRequestEvent","CreatedAt":"2020-02-15T16:12:05","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/10655","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#10655) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: daa187e0-7e60-4c7a-c1ac-08d6354da8a8\r\n- **Build**: 20200214.5\r\n- **Date Produced**: 2/15/2020 3:39 AM\r\n- **Commit**: 16fbdca79f86f36434b80f2bb898861759ec754b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.20114.5\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n"},{"Id":"11526117055","Type":"PullRequestEvent","CreatedAt":"2020-02-15T13:20:25","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/10656","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/runtime\" (#10656) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20200214.8\r\n- **Date Produced**: 2/15/2020 5:45 AM\r\n- **Commit**: 83e30cc0e6fce7972539b33b5d1e46b44b9a26a9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-preview.1.20114.8\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n"},{"Id":"11526068908","Type":"PullRequestEvent","CreatedAt":"2020-02-15T13:00:58","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/10655","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#10655) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: daa187e0-7e60-4c7a-c1ac-08d6354da8a8\r\n- **Build**: 20200214.5\r\n- **Date Produced**: 2/15/2020 3:39 AM\r\n- **Commit**: 16fbdca79f86f36434b80f2bb898861759ec754b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.20114.5\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n"},{"Id":"11525150389","Type":"IssuesEvent","CreatedAt":"2020-02-15T06:03:46","Actor":"Tzadiko","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/10654","RelatedDescription":"Opened issue \"Dotnet Build Hangs When Building from Cloned Reepo\" (#10654) at dotnet/sdk","RelatedBody":"**Issue**\r\n\r\nI downloaded the dotnet-sdk on Linux. After I clone my Repo into my virtual machine to run my [app](https://github.com/Tzadiko/Princess-DiscordBot), I run `dotnet build`.\r\n\r\nFor some reason, the application hangs.\r\n\r\n![image](https://user-images.githubusercontent.com/44016383/74582766-08371780-4f8e-11ea-839d-071d2e3ae183.png)\r\n \r\n**Environment**\r\n\r\n1 GB Memory / 25 GB Disk / NYC3 - Ubuntu 18.04.3 (LTS) x64\r\n\r\n**Dotnet Info**\r\n\r\n![image](https://user-images.githubusercontent.com/44016383/74582826-b9d64880-4f8e-11ea-8642-bc70b1247fc8.png)\r\n\r\n**Steps to Reproduce**\r\n\r\n1. Clone the following [repo](https://github.com/Tzadiko/Princess-DiscordBot).\r\n2. Run `dotnet build` in the `src` folder\r\n\r\nOn my desktop, this app builds just fine. I'm not sure what else I can include here to help one replicate this issue. "},{"Id":"11525140522","Type":"IssuesEvent","CreatedAt":"2020-02-15T05:59:11","Actor":"trondhindenes","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/10653","RelatedDescription":"Opened issue \"dotnet new --help is incorrect\" (#10653) at dotnet/sdk","RelatedBody":"# Issue Title\r\ndotnet new --help is incorrect\r\n\r\n# General\r\nwhen running `dotnet new --help`, this is printed:\r\n`Usage: new [options]`.   \r\nHowever, the actual template name isnt an option according to the options list, so the correct help string would be:   \r\n`Usage: new [options] <template>`\r\n"},{"Id":"11524086033","Type":"PullRequestEvent","CreatedAt":"2020-02-14T23:13:38","Actor":"sfoslund","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/10652","RelatedDescription":"Opened pull request \"Remove stack dump on dotnet -d\" (#10652) at dotnet/sdk","RelatedBody":"Fixes #4104 \r\n@wli3 has already looked at these changes [here](https://github.com/dotnet/toolset/compare/master...sfoslund:Dotnet-dDump) before the repo merge."}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"552027434","IsPullRequest":false,"CreatedAt":"2020-02-07T20:35:37","Actor":"nagytech","Number":"159","RawContent":null,"Title":"Add Akka.NET to the DNF project listing","State":"closed","Body":"With reference to PR #158 I'm requesting to add Akka.NET to the DNF project listings.","Url":"https://github.com/dotnet/foundation/issues/159","RelatedDescription":"Closed issue \"Add Akka.NET to the DNF project listing\" (#159)"},{"Id":"555112784","IsPullRequest":false,"CreatedAt":"2020-01-25T17:36:28","Actor":"oskardudycz","Number":"161","RawContent":null,"Title":"Marten","State":"closed","Body":"<!-- \r\nInstructions:\r\nThanks for your application to join the .NET Foundation. \r\n\r\n1.  Here is a checklist of steps we’ll follow during the process: [https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md](https://github.com/dotnet/foundation/blob/master/guidance/new-projects.md)\r\n2.  Please fill out the application in the template below. If you prefer to submit via e-mail to keep information private, you can use this [application form](https://github.com/dotnet-foundation/projects/blob/master/OnBoardingQuestionaire.docx) and submit to contact@dotnetfoundation.org, referencing this issue number. You can also fill out the Word document and submit it as an [attachement to the issue](https://help.github.com/en/articles/file-attachments-on-issues-and-pull-requests), via Google Doc, etc. If you have questions, fill out what you know and discuss on the issue.\r\n3.  After review and comment by the advisory council, we will submit your questionnaire to the board of directors recommending we add your project.\r\n4.  We will send you a contribution agreement via DocuSign.\r\n5.  We can announce the project is joining, and work through the other steps on the checklist.\r\n\r\n\r\nSome common questions that come up on the questionnaire:\r\n\r\n*   Project Transfer Signatories section: List the top contributors, with contact e-mail. For most projects, this is the top 1-5 contributors who have contributed more than a few hundred lines of code.\r\n*   Contribution vs Assignment: The difference is in the contribution model is who actually owns the copyright. It is important, but in terms of practical operation of the project it’s pretty transparent.\r\n\r\n\r\n*   **Contribution:** The project grants the .NET Foundation a license and rights to the intellectual property and source code. The project agrees that it is their work, and the .NET Foundation can protect your copyright.\r\n*   **Assignment:** The project / company gives the .NET Foundation the project, the .NET Foundation grants it back  \r\n\r\n Normally for community projects we recommend contribution. It’s more applicable for projects that have had multiple contributors over a period of time. Assignment is more applicable for a project that was developed in-house by a company, as they have had complete and traceable ownership of the project throughout its lifespan. Either works fine and has little to no day to day impact on the project once it joins from an actual open source development / shipping software point of view. I’d honestly have to go back and check the transfer agreements for a project to tell you what contribution model they chose. So, whatever makes your lawyers happiest is best.\r\n-->\r\n\r\n## 1.   General Information\r\n\r\n**Project Name:** \r\nMarten\r\n\r\n**License:**\r\nMIT\r\n\r\n**Contributor (Company, Organization or individual name(s)):**\r\nJeremy D. Miller, Babu Annamalai, Oskar Dudycz, Joona-Pekka Kokko\r\n\r\n**Existing OSS Project? (Yes/No):**\r\nYes\r\n\r\n**Source Code URL:**\r\nhttps://github.com/JasperFx/marten\r\n\r\n**Project Homepage URL (if different):**\r\nhttps://martendb.io\r\n\r\n**Project Transfer Signatories:**\r\n_Full legal name and email address required of the individual(s) with the authority to transfer or contribute the project to the .NET Foundation. Note that if you'd prefer not to include this in the public application, it can be submitted via e-mail to contact@dotnetfoundation.org (referencing this issue number)._\r\n\r\nJeremy D. Miller jeremydmiller@yahoo.com\r\nBabu Annamalai  babu.annamalai@gmail.com\r\nOskar Dudycz oskar.dudycz@gmail.com\r\nJoona-Pekka Kokko jokokko@gmail.com\r\n\r\n## 2.   Description\r\n**Please provide a brief statement about your project in terms that are understandable to the target consumer of the library or project, i.e. an elevator pitch for the project:**\r\n\r\nMarten gives developers a multi-paradigm framework for modelling, storing and querying data on PostgreSQL. Making use of the battle hardened database engine, Marten transparently exposes the JSON(B) capabilities of PostgreSQL for managing objects and events alike, requiring no ceremony to enable friction-less development. Marten is your object (document) and event store, with bells and whistles attached, be it CRUD, Event Sourcing or anything between.\r\n\r\n**Please provide a 1 sentence (<140 character) summary of your to help users when searching the .NET Foundation projects**\r\nPolyglot Persistence providing object (document) and event store Powered by .NET and PostgreSQL\r\n\r\n## 3.   Project Governance\r\nPlease complete this section about who will be maintaining the open source project and how it will run.\r\n**Project Lead:**\r\n(Who is the primary contact point for the community and the .NET Foundation when discussing governance of the project.)\r\n\r\nName: Jeremy D. Miller\r\n Email: jeremydmiller@yahoo.com  \r\n GitHub Profile URL: https://github.com/jeremydmiller\r\n\r\n**Committers:**\r\n\r\n_Which individuals have commit / write access to the repository, what is their GitHub ID and who is their employer (if contributions are on behalf of an employer)_\r\n\r\nJeremy D. Miller https://github.com/jeremydmiller\r\n\r\nBabu Annamalai https://github.com/mysticmind\r\n\r\nOskar Dudycz https://github.com/oskardudycz\r\n\r\nJoona-Pekka Kokko https://github.com/jokokko\r\n\r\n**Governance Model:**\r\n\r\n_Please describe how new code changes are proposed to the project, how those changes are reviewed and how a decision is made to accept proposed changes. Also describe the process for identifying and appointing new committers._\r\n\r\nChanges are proposed via GH issues. All issues are reviewed and labelled with the proper type and scope. Issues that have the estimated timeline are assigned to a proper milestone. Milestones reflect the package version based on the semantic versioning. \r\nPlans for the new releases are discussed publicly in the issues (see eg. https://github.com/JasperFx/marten/issues/1307 or https://github.com/JasperFx/marten/issues/1391).\r\nQuick surveys, questions, clarifications and in general contact with community is done in dedicated Gitter channel https://gitter.im/JasperFx/marten.\r\nNormally 2 approves from maintainers are needed to merge the Pull Request. \r\nNew committers were appointed once by Jeremy based on the number and quality of commits, activity and helping the community. See more: https://jeremydmiller.com/2018/09/27/marten-3-0-is-released-and-introducing-the-new-core-team/\r\n\r\n**CLA**\r\n\r\n_If already an OSS project, was a Contribution License Agreement in place for contributions accepted? How does the project check who has signed one?_\r\n\r\nNo.\r\n\r\n**CLA Notification Alias**\r\n_Provide an email address that will receive CLA related notifications from the .NET Foundation CLA automation_\r\n\r\n**Project Transfer Type**\r\n\r\n_Projects may join the .NET Foundation in one of two ways and you should chat with your .NET Foundation contact to discuss the best mechanism for your project. You can either a) assign the copyright of the project's source code to the .NET Foundation or b) contribute the project source code to the .NET Foundation under an open source license. Assignment is the preferred approach, but licensing a project to the Foundation may be more appropriate for longer running open source projects that have not previously had a contribution license agreement and have accepted contributions from many different sources.\r\na) Assignment\r\nb) Contribution_\r\n\r\nContribution.\r\n\r\n## 4.   Repository Layout\r\n_The .NET Foundation host guidance for new projects and details on recommended structure here:\r\n[https://github.com/dotnet/home/tree/master/guidance](https://github.com/dotnet/home/tree/master/guidance)\r\n\r\nNote that the open source repository should be the master where changes are made by the core development team using the same PR process that is used for non-committer contributions.\r\n\r\nPlease define below any changes you would want to make to your repositories as part of the process of joining the .NET Foundation_\r\n\r\nI don’t think any repository changes are required as part of this process.\r\n\r\n## 5.   PR Plan\r\n_Please summarize the public relations plan for the announcement when joining the foundation (and releasing as open source if appropriate). What is the main story we wish to promote, through what channels, what issues should we be aware of?  For significant news events then please also work with your .NET Foundation contact to ensure a [full PR plan](https://dotnetfoundation.sharepoint.com/Shared%20Documents/PR/Communications%20Plan%20TEMPLATE.docx?web=1) is developed._\r\n\r\nCurrently we'll promote that through blog post, twitter announcement using twitter handle `@marten_lib` & updated website https://martendb.io. We also want to provide the newsletter and maybe more video tutorials. Contributors also speak about the Event Sourcing with .NET Core and Marten on the local meetups. We also plan to get some sponsorship plan (not clear as yet - https://github.com/JasperFx/marten/issues/1393).\r\n\r\n## 6.   Infrastructure Requirements\r\n_Please describe any infrastructure requirements for the project. For example, how will build servers be operated? Any web hosting or service hosting requirements? Do we need to set up SSL certificates or provide Authenticode Code Signing arrangement for releases?_\r\n\r\nCurrently, we're using the Azure Pipelines and AppVeyor OSS plans and we're happy with that process. We are building our documentation using Storyteller (https://storyteller.github.io/documentation/docs/)  hosted on GitHub pages and Netlify so we also don't need to change it as for now. We might need in the future SSL certificates or Authentication Code Signing.\r\n\r\n## 7.   Additional Notes\r\n_Please provide any additional information required or use this area for notes during the on boarding process. If this open source project has similarities with any other projects in this space then please detail them and why this project is different. If there are any potential issues that you feel the project might need help with early on then also state them here and discuss with your .NET Foundation Contact._\r\n\r\nMarten is sometimes compared to Entity Framework. But Marten is not an ORM, it should be treated as the .NET Document and Event Store that's just backed with PostgreSQL. Our approach to using the PostgreSQL and its sophisticated JSON(B) features is unique in .NET space. It should be more compared to RavenDB rather than Entity Framework.\r\nWe're working on the sustainability of our model (so getting sponsorship) to be able to work on the dedicated time and get more reliability in bigger Enterprise companies. Such help would be more than welcome from .NET Foundation.","Url":"https://github.com/dotnet/foundation/issues/161","RelatedDescription":"Closed issue \"Marten\" (#161)"},{"Id":"555038667","IsPullRequest":false,"CreatedAt":"2020-01-25T04:38:47","Actor":"nagytech","Number":"160","RawContent":null,"Title":"Website down","State":"closed","Body":"Not sure if it’s appropriate to report this here, but when browsing to the dotnet foundation org website, I get the following error.\r\n\r\n~~~\r\n\r\nHTTP Error 500.30 - ANCM In-Process Start Failure\r\n\r\nCommon solutions to this issue:\r\nThe application failed to start\r\nThe application started but then stopped\r\nThe application started but threw an exception during startup\r\nTroubleshooting steps:\r\nCheck the system event log for error messages\r\nEnable logging the application process' stdout messages\r\nAttach a debugger to the application process and inspect\r\nFor more information visit: https://go.microsoft.com/fwlink/?LinkID=2028265\r\n\r\n~~~","Url":"https://github.com/dotnet/foundation/issues/160","RelatedDescription":"Closed issue \"Website down\" (#160)"},{"Id":"522951789","IsPullRequest":true,"CreatedAt":"2020-01-22T14:09:29","Actor":"NextTurn","Number":"152","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/152","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#152)"},{"Id":"522965180","IsPullRequest":true,"CreatedAt":"2020-01-22T14:09:00","Actor":"NextTurn","Number":"153","RawContent":null,"Title":"Fix broken links","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/153","RelatedDescription":"Closed or merged PR \"Fix broken links\" (#153)"},{"Id":"539153211","IsPullRequest":true,"CreatedAt":"2020-01-22T14:07:13","Actor":"khalidabuhakmeh","Number":"156","RawContent":null,"Title":"Update Teams Link","State":"closed","Body":"Was `https://dotnetfoundation.org/team` but now is `https://dotnetfoundation.org/about#team`","Url":"https://github.com/dotnet/foundation/pull/156","RelatedDescription":"Closed or merged PR \"Update Teams Link\" (#156)"},{"Id":"544546454","IsPullRequest":true,"CreatedAt":"2020-01-22T14:06:51","Actor":"manne","Number":"157","RawContent":null,"Title":"Link Reactive Extensions to new github repo","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/157","RelatedDescription":"Closed or merged PR \"Link Reactive Extensions to new github repo\" (#157)"},{"Id":"552026315","IsPullRequest":true,"CreatedAt":"2020-01-22T14:06:19","Actor":"nagytech","Number":"158","RawContent":null,"Title":"Add Akka.NET to DNF","State":"closed","Body":"Akka.NET was added to the DNF recently (see, https://github.com/akkadotnet/akka.net/pull/3189) but we are not yet listed on the public website.\r\n\r\nThis PR adds the Akka.NET md page and an entry to the main listing.\r\n","Url":"https://github.com/dotnet/foundation/pull/158","RelatedDescription":"Closed or merged PR \"Add Akka.NET to DNF\" (#158)"},{"Id":"523940971","IsPullRequest":false,"CreatedAt":"2019-11-17T05:53:47","Actor":"NextTurn","Number":"155","RawContent":null,"Title":"Typos in CLA bot profile","State":"open","Body":"https://github.com/dnfclas\r\n\r\n## Expected\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003693-983ed400-0941-11ea-91d9-18c29e752b81.png)\r\n\r\n## Actual\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003652-ec958400-0940-11ea-8239-f9b19a7dc957.png)\r\n\r\nAlways capitalized, never .Net or dot NET. \r\n\r\n[.NET Glossary](https://github.com/dotnet/docs/blob/master/docs/standard/glossary.md#net)\r\n\r\n[Microsoft Style Guide](https://github.com/MicrosoftDocs/microsoft-style-guide/blob/master/styleguide/a-z-word-list-term-collections/n/net.md)","Url":"https://github.com/dotnet/foundation/issues/155","RelatedDescription":"Open issue \"Typos in CLA bot profile\" (#155)"},{"Id":"523861891","IsPullRequest":true,"CreatedAt":"2019-11-16T15:59:11","Actor":"NextTurn","Number":"154","RawContent":null,"Title":"Fix broken links","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/154","RelatedDescription":"Open PR \"Fix broken links\" (#154)"},{"Id":"520212668","IsPullRequest":true,"CreatedAt":"2019-11-08T23:32:02","Actor":"onovotny","Number":"151","RawContent":null,"Title":"Update RxUI license to reflect repo","State":"closed","Body":"Fixes https://github.com/dotnet-foundation/dotnetfoundation-website/issues/68","Url":"https://github.com/dotnet/foundation/pull/151","RelatedDescription":"Closed or merged PR \"Update RxUI license to reflect repo\" (#151)"},{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-11-07T05:43:04","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Closed or merged PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"501128777","IsPullRequest":true,"CreatedAt":"2019-11-07T05:42:14","Actor":"gep13","Number":"150","RawContent":null,"Title":"Add new Cake Maintainer","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Closed or merged PR \"Add new Cake Maintainer\" (#150)"},{"Id":"500670461","IsPullRequest":true,"CreatedAt":"2019-11-07T05:41:48","Actor":"JimBobSquarePants","Number":"149","RawContent":null,"Title":"Add ImageSharp","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Closed or merged PR \"Add ImageSharp\" (#149)"},{"Id":"475315730","IsPullRequest":false,"CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Number":"148","RawContent":null,"Title":"Clarify guidelines in regards to Options and Requirements","State":"open","Body":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?","Url":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Open issue \"Clarify guidelines in regards to Options and Requirements\" (#148)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"562935739","IsPullRequest":true,"CreatedAt":"2020-02-14T17:49:00","Actor":"sdmaclea","Number":"28011","RawContent":null,"Title":"WIP -- Port linuxdac from master","State":"closed","Body":"This is an early port of the prototype cross OS DAC work from the 5.0 branch to the 3.1 branch.\r\n\r\nIt is intended to indicate some of the gross characteristics of the eventual PR.  It is looking for 20% feedback on approach we should take with supporting this feature for 3.1 LTS.\r\n\r\nPlease note this was the earliest functional port from the 5.0 branch, so it is not fully representative of real code, but it is likely representative of the types of changes required to get a DAC cross OS compiled.\r\n\r\nI wanted feedback before I drafted a final back port for 3.1.\r\n\r\nKey points:\r\n\r\n- Changes are primarily to build configuration.\r\n    - Changes to CMake file to separate concept of Host/Compiler platform and Target/Runtime platform\r\n   - Changes to C++ `#ifdef` to separate concept of Host/Compiler platform and Target/Runtime platform\r\n- These changes are not intended to change the runtime.  For this version runtime changes were not required. The cross OS DAC was built and then tested against official released bits.\r\n- The 5.0 implementation will eventually depend on a new export of the `g_DacTable`.  Ideally we would port that here too. This is a minor runtime change.\r\n\r\nOptions:\r\n\r\n- 3.1 PR w/ minimal backport of the 5.0 Linux DAC required to support the Print Exception scenario.\r\n- 3.1 PR w/ with changes as a patch to be applied only during Cross OS DAC build. Plus infra changes to apply the patch and build the new binaries\r\n- Official build of cross OS DAC out of a separate 3.1DAC branch. Merge 3.1 regularly.  \r\n- Do not support scenario\r\n- Develop alternate approach\r\n\r\n/cc @tommcdon ","Url":"https://github.com/dotnet/coreclr/pull/28011","RelatedDescription":"Closed or merged PR \"WIP -- Port linuxdac from master\" (#28011)"},{"Id":"565025740","IsPullRequest":true,"CreatedAt":"2020-02-14T01:45:09","Actor":"dotnet-maestro[bot]","Number":"28018","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 88e1281a-0536-412d-736c-08d72a4ce44a\r\n- **Build**: 20200213.5\r\n- **Date Produced**: 2/13/2020 9:34 PM\r\n- **Commit**: 15f00efd583eab4372b2e9ca25bd80ace5b119ad\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.20113.5\r\n\r\n[marker]: <> (End:88e1281a-0536-412d-736c-08d72a4ce44a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/28018","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#28018)"},{"Id":"548326464","IsPullRequest":true,"CreatedAt":"2020-02-13T22:27:50","Actor":"CarolEidt","Number":"27986","RawContent":null,"Title":"Port of dotnet/runtime#1059 to 3.1 branch","State":"closed","Body":"This is the fix for #27924. This is a GC hole bug that was found externally, #27590.\r\nThe cause is that the JIT was using the target type of the subtract when it needed\r\nto make a copy of the source, but it needs to use the source type.\r\n\r\n## Customer Impact\r\nCorruption of state that is non-deterministic and hard to track down.\r\n\r\n## Regression?\r\nNot a recent regression, but exposed by Unsafe.ByteOffset.\r\n\r\n## Testing\r\nThe fix has been verified in the runtime repo.\r\n\r\n## Risk\r\nLow: The fix is straightfoward and only impacts 3 lines of code.\r\n\r\n## Code Reviewer\r\n@jaschook and @jkotas","Url":"https://github.com/dotnet/coreclr/pull/27986","RelatedDescription":"Closed or merged PR \"Port of dotnet/runtime#1059 to 3.1 branch\" (#27986)"},{"Id":"547728284","IsPullRequest":true,"CreatedAt":"2020-02-13T22:27:35","Actor":"CarolEidt","Number":"27983","RawContent":null,"Title":"Port fix for #1241 to 3.1","State":"closed","Body":"Port of dotnet/runtime#1279 to 3.1 branch.\r\nThis is the fix for dotnet/runtime#1241. This is a SBCG bug reported externally. When a struct is partially written, the JIT fails to invalidate assertions (in this case that the entire struct had been zero'd). This results in incorrect optimization. The fix is to invalidate the assertions in the partial write case.\r\n\r\n## Customer Impact\r\nSBCG resulting in incorrect behavior.\r\n\r\n## Regression?\r\nNot a recent regression, but exposed by doing more optimizations on structs.\r\n\r\n## Testing\r\nThe fix has been verified in the runtime repo.\r\n\r\n## Risk\r\nLow: The fix is straightforward and kills assertions which only disables optimizations.\r\n\r\n## Code Reviewer\r\n@briansull and @BruceForstall ","Url":"https://github.com/dotnet/coreclr/pull/27983","RelatedDescription":"Closed or merged PR \"Port fix for #1241 to 3.1\" (#27983)"},{"Id":"547811395","IsPullRequest":true,"CreatedAt":"2020-02-13T22:27:23","Actor":"CarolEidt","Number":"27984","RawContent":null,"Title":"Port PR #258 to 3.1","State":"closed","Body":"Port of dotnet/runtime#258 to 3.1 branch.\r\nThis is the fix for #27937. The manifestation is an AV in the JIT. Although it isn't SBCG, it is difficult for the developer to track down that this is a JIT bug, rather than caused by something in their code.\r\n\r\n## Customer Impact\r\nUnexpected and hard to diagnose crashes.\r\n\r\n## Regression?\r\nNo.\r\n\r\n## Testing\r\nThe fix has been verified in the runtime repo.\r\n\r\n## Risk\r\nLow: The fix is straightforward and only prevents the AV case.\r\n\r\n## Code Reviewers\r\nAuthored by @saucecontrol, reviewed by @CarolEidt and @swaroop-sridhar ","Url":"https://github.com/dotnet/coreclr/pull/27984","RelatedDescription":"Closed or merged PR \"Port PR #258 to 3.1\" (#27984)"},{"Id":"547818433","IsPullRequest":true,"CreatedAt":"2020-02-13T22:27:12","Actor":"AntonLapounov","Number":"27985","RawContent":null,"Title":"[3.1 port] Fix GC heap corruption on ARM","State":"closed","Body":"Port of dotnet/runtime#1389 to 3.1 branch.  Applications may crash in GC code due to GC heap corruption caused by incorrect padding size calculation on ARM.\r\n\r\n## Customer Impact\r\nUnexpected and hard to diagnose crashes.\r\n\r\n## Regression?\r\nNo.\r\n\r\n## Testing\r\nThe fix has been verified in the runtime repo.\r\n\r\n## Risk\r\nLow: one-line fix of the incorrect calculation.","Url":"https://github.com/dotnet/coreclr/pull/27985","RelatedDescription":"Closed or merged PR \"[3.1 port] Fix GC heap corruption on ARM\" (#27985)"},{"Id":"555024664","IsPullRequest":true,"CreatedAt":"2020-02-13T22:26:52","Actor":"briansull","Number":"28003","RawContent":null,"Title":"Port the 5.0 fix for issue #1104","State":"closed","Body":"This is the fix for the 3.1 branch for the runtime issue #1104 \r\nThis a a bug which Sergey Andreenko @sandreenko found where the JIT can\r\noptimize away a range check, allowing an out of bounds read or write.\r\nThe original cause was from PR #23109, where a cut-and-paste typo inverted the \r\ninitialization code for `bool alreadyPresent` in `RangeCheck::IsMonotonicallyIncreasing`\r\n\r\n**Customer Impact**\r\nInvalid code gen that allows an out of bounds read or write.\r\n\r\n**Regression?**\r\nA regression introduced during 3.0 development.\r\n\r\n**Testing**\r\nThe fix has been verified in the runtime repo.\r\n\r\n**Risk**\r\nLow: The fix is straightforward and only impacts 1 line of code.\r\n\r\n**Code Reviewer**\r\n@sandreenko and @BruceForstall ","Url":"https://github.com/dotnet/coreclr/pull/28003","RelatedDescription":"Closed or merged PR \"Port the 5.0 fix for issue #1104\" (#28003)"},{"Id":"564882854","IsPullRequest":true,"CreatedAt":"2020-02-13T22:24:20","Actor":"Anipik","Number":"28016","RawContent":null,"Title":"update branding for 3.1.3","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28016","RelatedDescription":"Closed or merged PR \"update branding for 3.1.3\" (#28016)"},{"Id":"564883079","IsPullRequest":true,"CreatedAt":"2020-02-13T20:26:57","Actor":"Anipik","Number":"28017","RawContent":null,"Title":"branding for 2.1.17","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28017","RelatedDescription":"Closed or merged PR \"branding for 2.1.17\" (#28017)"},{"Id":"561936487","IsPullRequest":true,"CreatedAt":"2020-02-13T19:59:55","Actor":"omajid","Number":"28010","RawContent":null,"Title":"[release/3.1] Support glibc deprecation of sys/sysctl.h ","State":"closed","Body":"I can't build `release/3.1` out of the box on Fedora 31 with glibc 2.30. This fixes that.\r\n\r\nThis contains 3 changes:\r\n\r\n- https://github.com/dotnet/coreclr/pull/27048\r\n- https://github.com/dotnet/runtime/pull/31865\r\n- And an analogue of the first PR to `gcenv.unix.cpp`","Url":"https://github.com/dotnet/coreclr/pull/28010","RelatedDescription":"Closed or merged PR \"[release/3.1] Support glibc deprecation of sys/sysctl.h \" (#28010)"},{"Id":"564266501","IsPullRequest":true,"CreatedAt":"2020-02-12T20:57:40","Actor":"GrabYourPitchforks","Number":"28015","RawContent":null,"Title":"[release/uwp6.2] Port dotnet/runtime#31946 fix for string.Replace infinite loop","State":"open","Body":"Issue https://github.com/dotnet/runtime/issues/1060 reports that in a linguistic (non-ordinal) call to `string.Replace`, if the target string contains code points with zero collation weight, the `string.Replace` logic can enter an infinite loop.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/31946). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nInfinite loop if calling `string.Replace(\"<something-with-zero-collation-weight>\", \"...\", StringComparison.<any-non-ordinal-comparison>)`. __This has already impacted at least one first-party application__, and they are requesting a backported fix for UWP.\r\n\r\n## Regression?\r\nNot a regression. This overload of `string.Replace` is the only one affected, and it wasn't introduced until .NET Core 2.0. It appears to have [very little usage](https://apisof.net/catalog/System.String.Replace(String,String,StringComparison)) outside of domain-specific scenarios, like text editors.\r\n\r\n## Testing\r\nThe .NET 5 fix at https://github.com/dotnet/runtime/pull/31946 includes tests for the fix.\r\n\r\n## Risk\r\nLow. A code path which previously went into an infinite loop now terminates successfully.\r\n\r\n## Code Reviewer\r\n@tarekgh","Url":"https://github.com/dotnet/coreclr/pull/28015","RelatedDescription":"Open PR \"[release/uwp6.2] Port dotnet/runtime#31946 fix for string.Replace infinite loop\" (#28015)"},{"Id":"564203743","IsPullRequest":true,"CreatedAt":"2020-02-12T19:03:34","Actor":"GrabYourPitchforks","Number":"28014","RawContent":null,"Title":"[release/3.1] Port dotnet/runtime#31946 fix for string.Replace infinite loop","State":"open","Body":"Issue https://github.com/dotnet/runtime/issues/1060 reports that in a linguistic (non-ordinal) call to `string.Replace`, if the target string contains code points with zero collation weight, the `string.Replace` logic can enter an infinite loop.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/31946). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nInfinite loop if calling `string.Replace(\"<something-with-zero-collation-weight>\", \"...\", StringComparison.<any-non-ordinal-comparison>)`.\r\n\r\n## Regression?\r\nNot a regression. This overload of `string.Replace` is the only one affected, and it wasn't introduced until .NET Core 2.0. It appears to have [very little usage](https://apisof.net/catalog/System.String.Replace(String,String,StringComparison)) outside of domain-specific scenarios, like text editors.\r\n\r\n## Testing\r\nThe .NET 5 fix at https://github.com/dotnet/runtime/pull/31946 includes tests for the fix.\r\n\r\n## Risk\r\nLow. A code path which previously went into an infinite loop now terminates successfully.\r\n\r\n## Code Reviewer\r\n@tarekgh","Url":"https://github.com/dotnet/coreclr/pull/28014","RelatedDescription":"Open PR \"[release/3.1] Port dotnet/runtime#31946 fix for string.Replace infinite loop\" (#28014)"},{"Id":"563610462","IsPullRequest":true,"CreatedAt":"2020-02-11T23:36:40","Actor":"GrabYourPitchforks","Number":"28013","RawContent":null,"Title":"[release/3.1] Port dotnet/runtime#31904 fix for slow UTF-8 transcoding performance","State":"open","Body":"Issue https://github.com/dotnet/runtime/issues/2251 reports that on AMD processors, we severely regressed some UTF-8 transcoding code paths on AMD processors. These processors have unoptimized implementations of the `pdep`/`pext` intrinsic. We didn't see this earlier because my benchmarking machine uses an Intel processor.\r\n\r\nThis has already been fixed in .NET 5 (see https://github.com/dotnet/runtime/pull/31904). This PR ports that fix down to _release/3.1_.\r\n\r\n## Customer Impact\r\nSignificant slowdowns in UTF-8 transcoding performance on 3.0 compared to 2.1 when using an AMD processor and where the input to transcode has mixed ASCII and non-ASCII data.\r\n\r\n## Regression?\r\nPerf regression between 2.1 and 3.0. Not a functional regression.\r\n\r\n## Testing\r\nFix has been perf tested (see https://github.com/dotnet/runtime/pull/31904#issuecomment-584190637) and fuzzed (see https://github.com/dotnet/runtime/pull/31904#issuecomment-583706262).\r\n\r\n## Risk\r\nLow. No functional changes; only performance changes. We have excellent unit test coverage and fuzzer coverage over this code.\r\n\r\n## Code Reviewer\r\n@tannergooding","Url":"https://github.com/dotnet/coreclr/pull/28013","RelatedDescription":"Open PR \"[release/3.1] Port dotnet/runtime#31904 fix for slow UTF-8 transcoding performance\" (#28013)"},{"Id":"563480826","IsPullRequest":true,"CreatedAt":"2020-02-11T21:13:58","Actor":"omajid","Number":"28012","RawContent":null,"Title":"[release/3.1] Fix build on systems with glibc >= 2.30","State":"open","Body":"On newer systems with glibc 2.30, the compiler emits a warning:\r\n\r\n    In file included from coreclr/src/pal/src/misc/sysinfo.cpp:32:\r\n    /usr/include/sys/sysctl.h:21:2: error: \"The <sys/sysctl.h> header is deprecated and will be removed.\" [-Werror,-W#warnings]\r\n    #warning \"The <sys/sysctl.h> header is deprecated and will be removed.\"\r\n     ^\r\n\r\nThe glibc 2.30 release notes cover this at\r\nhttps://sourceware.org/ml/libc-alpha/2019-08/msg00029.html:\r\n\r\n* The Linux-specific <sys/sysctl.h> header and the sysctl function have been\r\n  deprecated and will be removed from a future version of glibc.\r\n  Application should directly access /proc instead.  For obtaining random\r\n  bits, the getentropy function can be used.\r\n\r\nTo keep coreclr release/3.1 building, disable treating the #warning as an\r\nerror. Clang and GCC have separate flags to turn this error off.","Url":"https://github.com/dotnet/coreclr/pull/28012","RelatedDescription":"Open PR \"[release/3.1] Fix build on systems with glibc >= 2.30\" (#28012)"},{"Id":"558155384","IsPullRequest":true,"CreatedAt":"2020-01-31T15:05:51","Actor":"stephentoub","Number":"28008","RawContent":null,"Title":"Delete ISSUE_TEMPLATE.md","State":"closed","Body":"All issues have been transferred to dotnet/runtime, and issues in coreclr have been disabled.\r\ncc: @danmosemsft ","Url":"https://github.com/dotnet/coreclr/pull/28008","RelatedDescription":"Closed or merged PR \"Delete ISSUE_TEMPLATE.md\" (#28008)"},{"Id":"558156253","IsPullRequest":true,"CreatedAt":"2020-01-31T15:05:03","Actor":"stephentoub","Number":"28009","RawContent":null,"Title":"Fix readme link in contributed.md","State":"closed","Body":"cc: @danmosemsft ","Url":"https://github.com/dotnet/coreclr/pull/28009","RelatedDescription":"Closed or merged PR \"Fix readme link in contributed.md\" (#28009)"},{"Id":"557644837","IsPullRequest":true,"CreatedAt":"2020-01-31T14:20:41","Actor":"WenningQiu","Number":"28007","RawContent":null,"Title":"CSG stop-gap change on AsyncLocal for .NET Core 3.1","State":"closed","Body":"Stop-gap change for https://github.com/dotnet/docs/issues/9965","Url":"https://github.com/dotnet/coreclr/pull/28007","RelatedDescription":"Closed or merged PR \"CSG stop-gap change on AsyncLocal for .NET Core 3.1\" (#28007)"},{"Id":"557359179","IsPullRequest":true,"CreatedAt":"2020-01-30T09:15:07","Actor":"kouvel","Number":"28006","RawContent":null,"Title":"[3.1] Fail FuncEval if slot backpatching lock is held by any thread","State":"open","Body":"- In many cases cooperative GC mode is entered after acquiring the slot backpatching lock and the thread may block for debugger suspension while holding the lock. A FuncEval may time out on entering the lock if for example it calls a virtual or interface method for the first time. Failing the FuncEval when the lock is held enables the debugger to fall back to other options for expression evaluation.\r\n- Also added polls for debugger suspension before acquiring the slot backpatching lock on background threads that often operate in preemptive GC mode. A common case in master is when the debugger breaks while the tiering delay timer is active, the timer ticks shortly afterwards (after debugger suspension completes) and if a thread pool thread is already available, the background thread would block while holding the lock. This is less common in 3.1 because the callback pulses the GC mode at the beginning, but still may occur occasionally. The poll checks for debugger suspension and pulses the GC mode to block before acquiring the lock.\r\n\r\nRisks:\r\n- The fix is only a heuristic and lessens the problem when it is detected that the lock is held by some thread. Since the lock is acquired in preemptive GC mode, it is still possible that after the check at the start of a FuncEval, another thread acquires the lock and the FuncEval may time out. The polling makes it less likely for the lock to be taken by background tiering work, for example if a FuncEval starts while rejitting a method.\r\n- The expression evaluation experience may be worse when it is detected that the lock is held, and may still happen from unfortunate timing\r\n- Low risk for the change itself\r\n\r\nPort of https://github.com/dotnet/runtime/pull/2380\r\nFix for https://github.com/dotnet/runtime/issues/1537","Url":"https://github.com/dotnet/coreclr/pull/28006","RelatedDescription":"Open PR \"[3.1] Fail FuncEval if slot backpatching lock is held by any thread\" (#28006)"},{"Id":"555745808","IsPullRequest":true,"CreatedAt":"2020-01-27T18:15:56","Actor":"danmosemsft","Number":"28004","RawContent":null,"Title":"Add issue template directing new issues to dotnet/runtime","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28004","RelatedDescription":"Closed or merged PR \"Add issue template directing new issues to dotnet/runtime\" (#28004)"},{"Id":"551004118","IsPullRequest":true,"CreatedAt":"2020-01-17T02:10:57","Actor":"dotnet-maestro-bot","Number":"28002","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"closed","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @hoyosjs\n* @mmitche\n* @Anipik\n* @davmason\n* @jashook\n* @brianrob\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/28002","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#28002)"},{"Id":"550505294","IsPullRequest":true,"CreatedAt":"2020-01-16T19:16:48","Actor":"hoyosjs","Number":"28000","RawContent":null,"Title":"Fix issues in release 3.0","State":"closed","Body":"Changes discussed to obtain green CI and fix RHEL6 outerloop builds:\r\n\r\n- Restore the Helix SDK using Tools.props to work around msbuild issues\r\n- Disable formatting jobs\r\n- Disable windows ARM jobs until dotnet/runtime#1097 is solved\r\n- Fix TRACE statement for RHEL6 in debug/checked pal out-of-proc unwind.\r\n\r\ncc @jeffschwMSFT @mmitche @jashook @trylek ","Url":"https://github.com/dotnet/coreclr/pull/28000","RelatedDescription":"Closed or merged PR \"Fix issues in release 3.0\" (#28000)"},{"Id":"550514396","IsPullRequest":true,"CreatedAt":"2020-01-16T01:27:41","Actor":"mmitche","Number":"28001","RawContent":null,"Title":"[release/2.1] Restore official build for 2.1","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/28001","RelatedDescription":"Closed or merged PR \"[release/2.1] Restore official build for 2.1\" (#28001)"},{"Id":"549855987","IsPullRequest":true,"CreatedAt":"2020-01-15T21:04:10","Actor":"GrabYourPitchforks","Number":"27996","RawContent":null,"Title":"[release/3.1] Port fix to revert EncoderNLS and DecoderNLS Convert changes","State":"closed","Body":"Port https://github.com/dotnet/runtime/pull/752 to release/3.1\r\nFixes https://github.com/dotnet/runtime/issues/594\r\n\r\n## Description\r\n\r\nIn .NET Core 3.0 / 3.1 we changed how the _completed_ out parameter is set on the `EncoderNLS.Convert` and `DecoderNLS.Convert` routines. We had changed the logic to match precisely what MSDN's documentation stated and to fix a possible data corruption bug; however, this broke a number of customers' applications by sending them into infinite loops.\r\n\r\nThis PR reverts that change.\r\n\r\n## Customer Impact\r\n\r\nIf customers were relying on the previous behavior of the _completed_ out parameter, their applications could end up in an infinite loop. What makes matters worse is that the sample code on the MSDN page for `Encoder.Convert` and `Decoder.Convert` is also susceptible to this pattern, so we suspect a large number of customers may have based their own application code on the sample.\r\n\r\n## Regression?\r\n\r\nYes, from .NET Framework 4.x and .NET Core 2.x. One half of this change was introduced in .NET Core 3.0 (see https://github.com/dotnet/coreclr/commit/43a5159d39bd52195c5095da4006183f791c696b); the other half was introduced in .NET Core 3.1 (see https://github.com/dotnet/coreclr/commit/c07ec4cd2f88c23edc87500893576d83c20f2e6d).\r\n\r\n## Testing\r\n\r\nThe reversion is already committed in the 5.0 branches (see https://github.com/dotnet/runtime/commit/d49b541ab156d992aeb4bbe410f7a816bb0ac039), so we have been getting test coverage on those nightlies. No notable regressions have been reported.\r\n\r\n## Risk\r\n\r\nSomewhere between minimal and moderate. It's possible that some applications may have taken a dependency on the new behavior. See for instance https://github.com/dotnet/aspnetcore/pull/17747, where ASP.NET appears to have unintentionally taken a dependency on the new behavior and had to proactively make a change so that they behave correctly both before and after this PR goes through.\r\n\r\n/cc @tarekgh @anurse @danmosemsft ","Url":"https://github.com/dotnet/coreclr/pull/27996","RelatedDescription":"Closed or merged PR \"[release/3.1] Port fix to revert EncoderNLS and DecoderNLS Convert changes\" (#27996)"},{"Id":"550396592","IsPullRequest":true,"CreatedAt":"2020-01-15T20:04:13","Actor":"dotnet-maestro-bot","Number":"27999","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"closed","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @mmitche\n* @Anipik\n* @davmason\n* @jashook\n* @brianrob\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/27999","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#27999)"},{"Id":"550393850","IsPullRequest":true,"CreatedAt":"2020-01-15T19:51:13","Actor":"mmitche","Number":"27998","RawContent":null,"Title":"[release/3.1] Update branding to 3.1.2","State":"closed","Body":"eng/Versions.props doesn't seem to be the source of truth for branding","Url":"https://github.com/dotnet/coreclr/pull/27998","RelatedDescription":"Closed or merged PR \"[release/3.1] Update branding to 3.1.2\" (#27998)"},{"Id":"550393454","IsPullRequest":true,"CreatedAt":"2020-01-15T19:51:06","Actor":"mmitche","Number":"27997","RawContent":null,"Title":"[release/3.0] Update branding to 3.0.3","State":"closed","Body":"eng/Versions.props doesn't seem to the the source of truth for branding","Url":"https://github.com/dotnet/coreclr/pull/27997","RelatedDescription":"Closed or merged PR \"[release/3.0] Update branding to 3.0.3\" (#27997)"},{"Id":"549295331","IsPullRequest":true,"CreatedAt":"2020-01-15T03:31:02","Actor":"VSadov","Number":"27990","RawContent":null,"Title":"Revert CPU clipping in the presence of CPU quota to 3.0, 2.x behavior.","State":"closed","Body":"This is a fix for an issue tracked by https://github.com/dotnet/runtime/issues/622. \r\nIt is a reversal of a change made in 3.1 vs. 3.0 and 2.X \r\n(Basically reverting https://github.com/dotnet/coreclr/pull/26806)\r\nThe change was an improvement in some cases, but was causing considerable performance regressions in constrained container scenarios.\r\n\r\n## Customer Impact\r\nCustomers report performance regressions in constrained container scenarios when CPU quotas are applied.\r\n\r\n## Regression?\r\nYes. From 3.0 and 2.x\r\n\r\n## Testing\r\nRegular PR tests. \r\nVerified that the most affected aspnet benchmarks are back to 3.0 performance levels.\r\n\r\n## Risk\r\nLow: This is reverting to behavior that we had for a few releases.","Url":"https://github.com/dotnet/coreclr/pull/27990","RelatedDescription":"Closed or merged PR \"Revert CPU clipping in the presence of CPU quota to 3.0, 2.x behavior.\" (#27990)"},{"Id":"549775170","IsPullRequest":true,"CreatedAt":"2020-01-14T22:47:49","Actor":"Anipik","Number":"27994","RawContent":null,"Title":"update branding for coreclr 2.1.16","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27994","RelatedDescription":"Closed or merged PR \"update branding for coreclr 2.1.16\" (#27994)"},{"Id":"549842263","IsPullRequest":true,"CreatedAt":"2020-01-14T22:05:50","Actor":"dotnet-maestro-bot","Number":"27995","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"closed","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @Anipik\n* @mmitche\n* @davmason\n* @jashook\n* @brianrob\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/27995","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#27995)"},{"Id":"549732492","IsPullRequest":true,"CreatedAt":"2020-01-14T21:54:02","Actor":"Anipik","Number":"27993","RawContent":null,"Title":"update branding to 3.0.3","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27993","RelatedDescription":"Closed or merged PR \"update branding to 3.0.3\" (#27993)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"565630547","IsPullRequest":true,"CreatedAt":"2020-02-15T01:16:39","Actor":"dotnet-maestro[bot]","Number":"13235","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200214.12\r\n- **Date Produced**: 2/15/2020 12:10 AM\r\n- **Commit**: 7fc314f73b075650f79d5225af8165e0a9369c22\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.3-servicing.20114.12\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13235","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13235)"},{"Id":"565634486","IsPullRequest":true,"CreatedAt":"2020-02-15T01:10:30","Actor":"dotnet-maestro[bot]","Number":"13236","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200214.3\r\n- **Date Produced**: 2/15/2020 12:23 AM\r\n- **Commit**: 8ac9495536a53010b68b4deabe27844afcdd8c20\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.3-servicing.20114.3\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.3\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.3\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13236","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13236)"},{"Id":"565604460","IsPullRequest":true,"CreatedAt":"2020-02-14T23:54:13","Actor":"dotnet-maestro[bot]","Number":"13234","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200214.2\r\n- **Date Produced**: 2/14/2020 10:33 PM\r\n- **Commit**: 9128eb60423a020a87d42975be60c08803470b36\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.3-servicing.20114.2\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.3\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.3\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13234","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13234)"},{"Id":"565569063","IsPullRequest":true,"CreatedAt":"2020-02-14T22:10:51","Actor":"dotnet-maestro[bot]","Number":"13233","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 3731cb06-cbf9-46bf-a883-08d7219800a1\r\n- **Build**: 20200214.5\r\n- **Date Produced**: 2/14/2020 8:26 PM\r\n- **Commit**: 922c8eefc41632df5a5e052daa8aa946bc298000\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.103-servicing.20114.5\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13233","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13233)"},{"Id":"565559337","IsPullRequest":true,"CreatedAt":"2020-02-14T21:45:39","Actor":"dotnet-maestro[bot]","Number":"13232","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200214.7\r\n- **Date Produced**: 2/14/2020 8:39 PM\r\n- **Commit**: e29c49516646227d5c6c1dcfa7c04993759c3067\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.3-servicing.20114.7\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13232","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13232)"},{"Id":"565541940","IsPullRequest":true,"CreatedAt":"2020-02-14T21:40:11","Actor":"dotnet-maestro[bot]","Number":"13231","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 3731cb06-cbf9-46bf-a883-08d7219800a1\r\n- **Build**: 20200214.4\r\n- **Date Produced**: 2/14/2020 7:37 PM\r\n- **Commit**: 6ba4c51eaf1c7eabedee90a10c49a9f0cf3732a0\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.103-servicing.20114.4\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13231","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13231)"},{"Id":"565535575","IsPullRequest":true,"CreatedAt":"2020-02-14T20:45:48","Actor":"dotnet-maestro[bot]","Number":"13230","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: caa76adf-c67f-4e61-5c6d-08d72a4d3f20\r\n- **Build**: 20200214.1\r\n- **Date Produced**: 2/14/2020 7:31 PM\r\n- **Commit**: aa51047c49cdabc90199bdaaae6f005425942b98\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Internal** -> 3.1.3-servicing.20114.1\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.3\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.3\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13230","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13230)"},{"Id":"565508410","IsPullRequest":true,"CreatedAt":"2020-02-14T19:51:20","Actor":"dotnet-maestro[bot]","Number":"13229","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200214.3\r\n- **Date Produced**: 2/14/2020 6:25 PM\r\n- **Commit**: e8d31697ad8cf227034de8119c3f3f14e164dab9\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.3-servicing.20114.3\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13229","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13229)"},{"Id":"565499773","IsPullRequest":true,"CreatedAt":"2020-02-14T19:25:41","Actor":"dotnet-maestro[bot]","Number":"13228","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n## From https://github.com/dotnet/templating\r\n- **Subscription**: 2f46839f-4f80-4d33-eeee-08d727dab80f\r\n- **Build**: 20200213.4\r\n- **Date Produced**: 2/14/2020 1:53 AM\r\n- **Commit**: 46091435536c53242905ab4e991bdc0bac153e64\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.1.3-servicing.20113.4\r\n\r\n[marker]: <> (End:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13228","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/templating\" (#13228)"},{"Id":"565483646","IsPullRequest":true,"CreatedAt":"2020-02-14T18:48:14","Actor":"dotnet-maestro[bot]","Number":"13227","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: 3731cb06-cbf9-46bf-a883-08d7219800a1\r\n- **Build**: 20200214.3\r\n- **Date Produced**: 2/14/2020 5:17 PM\r\n- **Commit**: df853d7d0a5101b3b280ccdf069703ed50879fc7\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.103-servicing.20114.3\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13227","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13227)"},{"Id":"565033412","IsPullRequest":true,"CreatedAt":"2020-02-14T16:53:38","Actor":"dsplaisted","Number":"13224","RawContent":null,"Title":"Update branding to 3.1.103","State":"closed","Body":"@mmitche @nguerrera ","Url":"https://github.com/dotnet/cli/pull/13224","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.103\" (#13224)"},{"Id":"565077353","IsPullRequest":true,"CreatedAt":"2020-02-14T03:15:39","Actor":"dotnet-maestro[bot]","Number":"13226","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200213.2\r\n- **Date Produced**: 2/14/2020 1:53 AM\r\n- **Commit**: 0bc67530cef6dd771a8750d1747926eca2dcb845\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.20113.2\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13226","RelatedDescription":"Open PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13226)"},{"Id":"565061311","IsPullRequest":true,"CreatedAt":"2020-02-14T02:46:49","Actor":"dotnet-maestro[bot]","Number":"13225","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: d54a5172-b4ce-4f86-d36b-08d6f038a15f\r\n- **Build**: 20200213.17\r\n- **Date Produced**: 2/14/2020 1:35 AM\r\n- **Commit**: 53b0d448a53403ca84bb3dac66dcd20eb375aeaa\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.3-servicing.20113.17\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13225","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/aspnetcore\" (#13225)"},{"Id":"565026192","IsPullRequest":true,"CreatedAt":"2020-02-14T00:51:06","Actor":"dotnet-maestro[bot]","Number":"13223","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 15385bb3-00bd-44e3-5c73-08d72a4d3f20\r\n- **Build**: 20200213.5\r\n- **Date Produced**: 2/13/2020 9:34 PM\r\n- **Commit**: 15f00efd583eab4372b2e9ca25bd80ace5b119ad\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.20113.5\r\n\r\n[marker]: <> (End:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13223","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#13223)"},{"Id":"565021839","IsPullRequest":true,"CreatedAt":"2020-02-14T00:32:30","Actor":"dotnet-maestro[bot]","Number":"13222","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:94c24b6f-4197-4be9-5768-08d76e1d56cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 94c24b6f-4197-4be9-5768-08d76e1d56cb\r\n- **Build**: 20200213.5\r\n- **Date Produced**: 2/13/2020 9:34 PM\r\n- **Commit**: 15f00efd583eab4372b2e9ca25bd80ace5b119ad\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.20113.5\r\n\r\n[marker]: <> (End:94c24b6f-4197-4be9-5768-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13222","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/arcade\" (#13222)"},{"Id":"560741905","IsPullRequest":true,"CreatedAt":"2020-02-13T22:20:36","Actor":"dotnet-maestro[bot]","Number":"13217","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200205.6\r\n- **Date Produced**: 2/6/2020 1:47 AM\r\n- **Commit**: c3acdcac86dad91c3d3fbc3b93ecc6b7ba494bdc\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.2-servicing.20105.6\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13217","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13217)"},{"Id":"564956685","IsPullRequest":true,"CreatedAt":"2020-02-13T21:45:48","Actor":"dotnet-maestro[bot]","Number":"13221","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: fa87930c-8514-45a1-0d47-08d6910cd73b\r\n- **Build**: 20200213.1\r\n- **Date Produced**: 2/13/2020 8:32 PM\r\n- **Commit**: 8dcd59d6e006679f7c1932801f733a72e5a3f221\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.103-servicing.20113.1\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13221","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#13221)"},{"Id":"563597764","IsPullRequest":true,"CreatedAt":"2020-02-12T19:50:29","Actor":"sebastienros","Number":"13220","RawContent":null,"Title":"Fix WindowsDesktop runtime download url","State":"closed","Body":"Fixes https://github.com/dotnet/sdk/issues/4237","Url":"https://github.com/dotnet/cli/pull/13220","RelatedDescription":"Closed or merged PR \"Fix WindowsDesktop runtime download url\" (#13220)"},{"Id":"561297789","IsPullRequest":true,"CreatedAt":"2020-02-08T02:12:38","Actor":"dotnet-maestro[bot]","Number":"13219","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200207.4\r\n- **Date Produced**: 2/8/2020 12:39 AM\r\n- **Commit**: 130be5a782f6fa8410627a8fddd3e2988bde1c71\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.20107.4\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13219","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13219)"},{"Id":"561279608","IsPullRequest":true,"CreatedAt":"2020-02-07T22:58:12","Actor":"dotnet-maestro[bot]","Number":"13218","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820\r\n- **Build**: 5.5.0.6422\r\n- **Date Produced**: 2/7/2020 1:55 AM\r\n- **Commit**: 7bac015acc5b7e0161a058c8febc98abe2386d51\r\n- **Branch**: refs/heads/dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.5.0-rtm.6422\r\n\r\n[marker]: <> (End:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13218","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from nuget/nuget.client\" (#13218)"},{"Id":"560692318","IsPullRequest":true,"CreatedAt":"2020-02-06T01:41:38","Actor":"dotnet-maestro[bot]","Number":"13216","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200205.2\r\n- **Date Produced**: 2/5/2020 10:16 PM\r\n- **Commit**: f8d14891f5440e79d0449d357beb4cceede34382\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.20105.2\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13216","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13216)"},{"Id":"560661297","IsPullRequest":true,"CreatedAt":"2020-02-05T22:55:45","Actor":"dotnet-maestro[bot]","Number":"13215","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: c7c33a9e-18af-4618-5026-08d727dabd66\r\n- **Build**: 20200205.4\r\n- **Date Produced**: 2/5/2020 9:42 PM\r\n- **Commit**: c3acdcac86dad91c3d3fbc3b93ecc6b7ba494bdc\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.2-servicing.20105.4\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13215","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/aspnetcore\" (#13215)"},{"Id":"560012548","IsPullRequest":true,"CreatedAt":"2020-02-04T23:18:05","Actor":"dotnet-maestro[bot]","Number":"13214","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820\r\n- **Build**: 5.5.0.6412\r\n- **Date Produced**: 2/3/2020 10:04 PM\r\n- **Commit**: 86f0ae460b9086bd79e4c9bc53650f700a09e4b7\r\n- **Branch**: refs/heads/dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.5.0-rtm.6412\r\n\r\n[marker]: <> (End:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13214","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from nuget/nuget.client\" (#13214)"},{"Id":"559963965","IsPullRequest":true,"CreatedAt":"2020-02-04T21:56:20","Actor":"dotnet-maestro[bot]","Number":"13213","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200204.3\r\n- **Date Produced**: 2/4/2020 7:34 PM\r\n- **Commit**: 20950a8fe1eb06b181f08c778acc5bd4df9719db\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.20104.3\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13213","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13213)"},{"Id":"559918664","IsPullRequest":true,"CreatedAt":"2020-02-04T19:38:50","Actor":"dotnet-maestro[bot]","Number":"13212","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200204.2\r\n- **Date Produced**: 2/4/2020 6:06 PM\r\n- **Commit**: c9f0a7673c300873f72b1d6f97048d1c17760884\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.20104.2\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13212","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13212)"},{"Id":"558418424","IsPullRequest":true,"CreatedAt":"2020-02-03T17:33:18","Actor":"wtgodbe","Number":"13211","RawContent":null,"Title":"Revert to 3.1.1 runtime","State":"closed","Body":"CC @nguerrera @mmitche","Url":"https://github.com/dotnet/cli/pull/13211","RelatedDescription":"Closed or merged PR \"Revert to 3.1.1 runtime\" (#13211)"},{"Id":"557953429","IsPullRequest":true,"CreatedAt":"2020-01-31T07:35:41","Actor":"dotnet-maestro[bot]","Number":"13210","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Subscription**: bdd984ca-7112-4d1b-d452-08d76e1d3434\r\n- **Build**: 20200130.4\r\n- **Date Produced**: 1/31/2020 6:05 AM\r\n- **Commit**: 1de5bc87ab0a42441ceb3044aa0c74185dcb888f\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.20080.4\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13210","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13210)"},{"Id":"554361230","IsPullRequest":true,"CreatedAt":"2020-01-24T23:13:18","Actor":"dotnet-maestro[bot]","Number":"13208","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Subscription**: 3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820\r\n- **Build**: 5.5.0.6392\r\n- **Date Produced**: 1/22/2020 6:02 AM\r\n- **Commit**: 31852f3254dd31c862798f99bd0639133b23fd03\r\n- **Branch**: refs/heads/dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.5.0-preview.3.6392\r\n\r\n[marker]: <> (End:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13208","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from nuget/nuget.client\" (#13208)"},{"Id":"554454460","IsPullRequest":true,"CreatedAt":"2020-01-23T23:16:13","Actor":"dotnet-maestro[bot]","Number":"13209","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/dotnet/aspnetcore\r\n- **Subscription**: d54a5172-b4ce-4f86-d36b-08d6f038a15f\r\n- **Build**: 20200123.3\r\n- **Date Produced**: 1/23/2020 10:30 PM\r\n- **Commit**: bd1e14b7d16b798de8a874189c89afed755a266c\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.3-servicing.20073.3\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13209","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/aspnetcore\" (#13209)"},{"Id":"554312389","IsPullRequest":true,"CreatedAt":"2020-01-23T17:54:43","Actor":"dagood","Number":"13207","RawContent":null,"Title":"[release/2.1.6xx] Publish VS insertion nupkgs to blob feed","State":"open","Body":"Allows prodcon infrastructure to publish the VS insertion nupkgs.\r\n\r\nClean cherry-pick of https://github.com/dotnet/cli/pull/13206 for 2.1.5xx onto 2.1.6xx.","Url":"https://github.com/dotnet/cli/pull/13207","RelatedDescription":"Open PR \"[release/2.1.6xx] Publish VS insertion nupkgs to blob feed\" (#13207)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"565745116","IsPullRequest":true,"CreatedAt":"2020-02-15T13:10:39","Actor":"dotnet-maestro[bot]","Number":"1708","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200214.5\r\n- **Date Produced**: 2/15/2020 3:39 AM\r\n- **Commit**: 16fbdca79f86f36434b80f2bb898861759ec754b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20114.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1708","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1708)"},{"Id":"565313064","IsPullRequest":true,"CreatedAt":"2020-02-14T13:20:43","Actor":"dotnet-maestro[bot]","Number":"1707","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200213.6\r\n- **Date Produced**: 2/13/2020 9:22 PM\r\n- **Commit**: ba6bfb25914e3434264352dd24ba00b406d23393\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20113.6\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1707","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1707)"},{"Id":"564667114","IsPullRequest":true,"CreatedAt":"2020-02-13T13:10:42","Actor":"dotnet-maestro[bot]","Number":"1706","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200212.7\r\n- **Date Produced**: 2/12/2020 8:32 PM\r\n- **Commit**: 951ea7430678b2682ff861fe1149b8a2f55887ca\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20112.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20112.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20112.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20112.7\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20112.7\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20112.7\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1706","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1706)"},{"Id":"563984671","IsPullRequest":true,"CreatedAt":"2020-02-12T13:10:45","Actor":"dotnet-maestro[bot]","Number":"1705","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200211.11\r\n- **Date Produced**: 2/12/2020 12:37 AM\r\n- **Commit**: 998b715ed1fbb966437345a1996af64e22c83368\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20111.11\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20111.11\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20111.11\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20111.11\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20111.11\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20111.11\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1705","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1705)"},{"Id":"563594688","IsPullRequest":false,"CreatedAt":"2020-02-11T23:21:07","Actor":"merarischroeder","Number":"1704","RawContent":null,"Title":"Why is System.Threading.Task.TaskToApm internal?","State":"open","Body":"I saw it being used here today https://github.com/dotnet/runtime/blob/master/src/libraries/System.Net.Quic/src/System/Net/Quic/QuicStream.cs\r\n\r\nI'm building a few stream types and I would like to define a stream wrapper too. I would have thought, with the advent of async Tasks this kind of tooling would have been made available to all programmers.","Url":"https://github.com/dotnet/standard/issues/1704","RelatedDescription":"Open issue \"Why is System.Threading.Task.TaskToApm internal?\" (#1704)"},{"Id":"563191239","IsPullRequest":true,"CreatedAt":"2020-02-11T13:20:58","Actor":"dotnet-maestro[bot]","Number":"1703","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200210.11\r\n- **Date Produced**: 2/11/2020 4:57 AM\r\n- **Commit**: 56e162725058d80918f7aa7e0e689e1fde5c2106\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20110.11\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20110.11\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1703","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1703)"},{"Id":"562545610","IsPullRequest":true,"CreatedAt":"2020-02-10T13:06:14","Actor":"dotnet-maestro[bot]","Number":"1702","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200209.1\r\n- **Date Produced**: 2/9/2020 2:00 PM\r\n- **Commit**: b0e8d3944155f94f83deea8afe025debe369e69f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20109.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20109.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1702","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1702)"},{"Id":"562173293","IsPullRequest":true,"CreatedAt":"2020-02-09T13:21:01","Actor":"dotnet-maestro[bot]","Number":"1701","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200208.2\r\n- **Date Produced**: 2/9/2020 1:00 AM\r\n- **Commit**: 490732cf6dcb77631fee038da1af0df1518c2fb0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20108.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20108.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1701","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1701)"},{"Id":"562099295","IsPullRequest":false,"CreatedAt":"2020-02-09T00:28:01","Actor":"dmitriyse","Number":"1700","RawContent":null,"Title":"Incomplete ThreadPool API in NetStandard 2.1 comparing to NetCoreApp 3.0+","State":"open","Body":"The first framework that provides NetStandard 2.1 is NetCoreApp 3.0.\r\nSo NetStandard 2.1 have no limitations in adding API from .NetCoreApp 3.0\r\n\r\nDespite some useful ```TheadPool``` methods are missing in the .Net Standard 2.1.\r\nFor example:\r\n```\r\n public static bool UnsafeQueueUserWorkItem<TState>(Action<TState> callBack, TState state, bool preferLocal)\r\n```\r\nthese methods are mandatory for the efficient implementation of the ```IValueTaskSource```\r\n\r\nReal life case:\r\nThe ```ManualResetValueTaskSourceCore<TResult>``` included into NetStandard 2.1, but if you try to copy-paste its sources and modernize for your needs  \r\nyou will unable to do it being NetStandard 2.1 library, you need to upgrade to NetCoreApp 3.0.\r\nIf upgrade to NetCoreApp 3.0 is unacceptable then you need to have inefficient implementation - very disappointing problem where you don't expect it.","Url":"https://github.com/dotnet/standard/issues/1700","RelatedDescription":"Open issue \"Incomplete ThreadPool API in NetStandard 2.1 comparing to NetCoreApp 3.0+\" (#1700)"},{"Id":"562016101","IsPullRequest":true,"CreatedAt":"2020-02-08T13:20:56","Actor":"dotnet-maestro[bot]","Number":"1699","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200207.14\r\n- **Date Produced**: 2/8/2020 1:30 AM\r\n- **Commit**: c84720afc91b635e2fbeb5dbd7e2742f18773e0e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20107.14\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20107.14\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20107.14\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20107.14\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20107.14\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20107.14\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1699","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1699)"},{"Id":"561623720","IsPullRequest":true,"CreatedAt":"2020-02-07T13:20:59","Actor":"dotnet-maestro[bot]","Number":"1698","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200206.12\r\n- **Date Produced**: 2/7/2020 4:05 AM\r\n- **Commit**: 50f7059d3a7a83ae1919516755b9ca92c67805e8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20106.12\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20106.12\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20106.12\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20106.12\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20106.12\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20106.12\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1698","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1698)"},{"Id":"560997721","IsPullRequest":true,"CreatedAt":"2020-02-06T13:05:54","Actor":"dotnet-maestro[bot]","Number":"1697","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200205.2\r\n- **Date Produced**: 2/5/2020 8:49 PM\r\n- **Commit**: b65df96ccb820fd5f7ea226aeba310485f395130\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20105.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20105.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20105.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20105.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20105.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20105.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1697","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1697)"},{"Id":"560356993","IsPullRequest":true,"CreatedAt":"2020-02-05T13:10:57","Actor":"dotnet-maestro[bot]","Number":"1696","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200204.2\r\n- **Date Produced**: 2/5/2020 12:17 AM\r\n- **Commit**: 0b404cb7575c8addc5e10f3fac57e79c596db28e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20104.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20104.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20104.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20104.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20104.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20104.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1696","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1696)"},{"Id":"559704588","IsPullRequest":true,"CreatedAt":"2020-02-04T13:11:00","Actor":"dotnet-maestro[bot]","Number":"1695","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200203.5\r\n- **Date Produced**: 2/4/2020 3:04 AM\r\n- **Commit**: 27c8467294a4e64ac6642b4c12ca63495ff126c8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20103.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20103.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20103.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20103.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20103.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20103.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1695","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1695)"},{"Id":"558693346","IsPullRequest":true,"CreatedAt":"2020-02-02T13:20:54","Actor":"dotnet-maestro[bot]","Number":"1694","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200201.2\r\n- **Date Produced**: 2/1/2020 11:43 PM\r\n- **Commit**: 779323758d3e8aa7e4ee3dc2619d57e696078089\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20101.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20101.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20101.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20101.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20101.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20101.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1694","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1694)"},{"Id":"558537562","IsPullRequest":true,"CreatedAt":"2020-02-01T13:20:53","Actor":"dotnet-maestro[bot]","Number":"1693","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200131.7\r\n- **Date Produced**: 1/31/2020 10:34 PM\r\n- **Commit**: bdc8c2f698e8c15195872af1e316b4b8f0eae7e1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20081.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20081.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20081.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20081.7\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20081.7\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20081.7\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1693","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1693)"},{"Id":"558118871","IsPullRequest":true,"CreatedAt":"2020-01-31T13:11:41","Actor":"dotnet-maestro[bot]","Number":"1692","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200130.4\r\n- **Date Produced**: 1/31/2020 1:21 AM\r\n- **Commit**: 00402f1fdc2b59dbc4f0b1c143850cb72e69fc90\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20080.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20080.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20080.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20080.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20080.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20080.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1692","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1692)"},{"Id":"557898042","IsPullRequest":false,"CreatedAt":"2020-01-31T04:01:42","Actor":"jfcardinal","Number":"1691","RawContent":null,"Title":"string.Concat(ReadOnlySpan, ...)?","State":"open","Body":"In January of 2019 @stephentoub proposed adding string.Concat() overloads that accept ReadOnlySpan<char> in corefx. Those were implemented that same month.\r\n\r\nAs far as I can tell, those overloads are not part of .NET Standard 2.1. I have not found a prior discussion of adding them to a future version of .NET Standard, but perhaps I have not searched well enough.\r\n\r\nAre they being considered?","Url":"https://github.com/dotnet/standard/issues/1691","RelatedDescription":"Open issue \"string.Concat(ReadOnlySpan, ...)?\" (#1691)"},{"Id":"557478626","IsPullRequest":true,"CreatedAt":"2020-01-30T13:20:57","Actor":"dotnet-maestro[bot]","Number":"1690","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200129.8\r\n- **Date Produced**: 1/30/2020 4:30 AM\r\n- **Commit**: 8466781af43871ee0d4a1655acc008a305a62c0e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20079.8\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20079.8\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20079.8\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20079.8\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20079.8\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20079.8\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1690","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1690)"},{"Id":"556564619","IsPullRequest":false,"CreatedAt":"2020-01-29T00:14:20","Actor":"ThadHouse","Number":"1689","RawContent":null,"Title":"Clarify how to use .NET Standard 2.1 from Mono","State":"open","Body":".NET Standard 2.1 adds a lot of new stuff I would like to use from a project targeting .NET Core 3 and Mono 6+. I can get the .NET Standard 2.1 libraries built easily enough, but I can't find a single TFM that I can use for the executable references the .NET Standard 2.1 libraries. \r\n\r\nI can target .NET Core 3, but then I get extra libraries in there mono doesn't have, so I have to be careful never to use any of the unsupported functions.\r\n\r\nI can't target .NET 4.8 or any framework library. This works in Mono, but can't link to the Net Standard 2.1 libraries.\r\n\r\nDoes there exist a runtime framework I can target that has all the .NET Standard 2.1 functions but none of the .NET Core 3 functions?","Url":"https://github.com/dotnet/standard/issues/1689","RelatedDescription":"Open issue \"Clarify how to use .NET Standard 2.1 from Mono\" (#1689)"},{"Id":"556194189","IsPullRequest":true,"CreatedAt":"2020-01-28T13:10:53","Actor":"dotnet-maestro[bot]","Number":"1688","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200127.7\r\n- **Date Produced**: 1/28/2020 3:24 AM\r\n- **Commit**: 8807a492094e7972f162440e72fd00ce4def8764\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20077.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20077.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20077.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20077.7\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20077.7\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20077.7\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1688","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1688)"},{"Id":"555558276","IsPullRequest":true,"CreatedAt":"2020-01-27T13:10:55","Actor":"dotnet-maestro[bot]","Number":"1687","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200126.3\r\n- **Date Produced**: 1/26/2020 6:39 PM\r\n- **Commit**: cc8fe69635c7c6e791c87540851aea75946945fa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20076.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20076.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20076.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20076.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20076.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20076.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1687","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1687)"},{"Id":"555225161","IsPullRequest":true,"CreatedAt":"2020-01-26T13:25:57","Actor":"dotnet-maestro[bot]","Number":"1686","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200125.3\r\n- **Date Produced**: 1/26/2020 7:06 AM\r\n- **Commit**: 0fcbdf1444ade7228ae0d179bb23d08ea3df13eb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20075.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20075.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20075.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20075.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20075.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20075.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1686","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1686)"},{"Id":"555082841","IsPullRequest":true,"CreatedAt":"2020-01-25T13:10:52","Actor":"dotnet-maestro[bot]","Number":"1685","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200124.6\r\n- **Date Produced**: 1/25/2020 1:13 AM\r\n- **Commit**: 841c83d8a5b8d8a6bd427f6798b086780138aa9a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20074.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20074.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20074.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20074.6\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20074.6\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20074.6\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1685","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1685)"},{"Id":"554723068","IsPullRequest":true,"CreatedAt":"2020-01-24T13:05:53","Actor":"dotnet-maestro[bot]","Number":"1684","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200123.17\r\n- **Date Produced**: 1/24/2020 3:10 AM\r\n- **Commit**: 82031ff8d9a40204c774fcc1b0f93ace906cee88\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20073.17\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20073.17\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20073.17\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20073.17\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20073.17\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20073.17\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1684","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1684)"},{"Id":"554142460","IsPullRequest":true,"CreatedAt":"2020-01-23T13:10:52","Actor":"dotnet-maestro[bot]","Number":"1683","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200122.3\r\n- **Date Produced**: 1/22/2020 10:48 PM\r\n- **Commit**: 0fb5c992a80a6fb52bfb1d2b726f75157c1ce210\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20072.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20072.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20072.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20072.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20072.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20072.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1683","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1683)"},{"Id":"553525948","IsPullRequest":true,"CreatedAt":"2020-01-22T13:16:19","Actor":"dotnet-maestro[bot]","Number":"1682","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 13e4918d-b9bd-4474-29f1-08d6225f093d\r\n- **Build**: 20200121.3\r\n- **Date Produced**: 1/21/2020 8:28 PM\r\n- **Commit**: e06e2807048b6bc7b3549b401a1833bed3bcd8c3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20071.3\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1682","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1682)"},{"Id":"549879760","IsPullRequest":false,"CreatedAt":"2020-01-15T00:50:36","Actor":"pushkin-","Number":"1681","RawContent":null,"Title":"Confused about EOL for .NET Standard versions","State":"closed","Body":"I am having trouble understanding EOL support for .NET Standard versions. I could only find information about .NET Core [here](https://dotnet.microsoft.com/platform/support/policy/dotnet-core).\r\n\r\nI am planning on using .NET Core 3.1. From what I've found out, I can target .NET Standard 2.1 and anything below it.\r\n\r\nIdeally, I would like my .NET Framework code to also reference the .NET Standard code, which means that I have to use .NET Standard 2.0. However, my concern is that .NET Standard 2.0's support will end soonish, at least compared to 2.1.\r\n\r\nIs that correct? What is EOL for .NET Standard 2.0?\r\n\r\nI did also read that Standard versions are fixed/immutable so new APIs get added to new Standard versions (and so maintenance perhaps doesn't make sense for Standard; new versions just get created). Maybe that partially answers my question. ","Url":"https://github.com/dotnet/standard/issues/1681","RelatedDescription":"Closed issue \"Confused about EOL for .NET Standard versions\" (#1681)"},{"Id":"548387889","IsPullRequest":false,"CreatedAt":"2020-01-13T22:25:56","Actor":"replaysMike","Number":"1679","RawContent":null,"Title":"UTF8 Encoding isn't consistent with .Net Framework","State":"closed","Body":"I found a subtle difference that was revealed in a bunch of hashing code I had written a while back for .Net Framework. I wrote a multi-platform test that shows UTF8Encoding is treated slightly different in .Net Standard and I don't really have a good way to solve it yet.\r\n\r\nConsider the following - I encoded a string in hex to guarantee the bytes are the same for the test:\r\n(hopefully github doesn't mangle the expected string, it looks correct after previewing)\r\n\r\n```csharp\r\n[Test]\r\npublic void ShouldEncodeUTF8()\r\n{\r\n    var netFrameworkExpected = \"�\\u0004[\\u0004�\\u0001�\\v,�\\u001cn]�$«�� )�:�YH̗I5�V���Nl7α��i�g_�ZQW%\\u001d�Dy\\u001eЕ\\u0013w�v+\\u0012*��\\u000f*��\\u0019r��}���8��w��&�\\r���\\f����?���&�t�M��[�`kzhz9\\u0015�\\u0012I�\\u001ey_`�\\u0011\\tF��A�Af~��q��%P�����\\u0003�x�(g���e\\u001fM�32\\u0014��\";\r\n    var hex = \"BC045B0488019F0B2CE61C6E5DFC24C2ABE09BDA2029CC3AE9AD5948CC9749359756B1A2D94E6C37CEB189D269AA675FF75A5157251D8544791ED09513779B762B122A89E10F2A98E91972D7CA7DF9F98038DFDB779FED269A0DE3F8FA0C828993B23F85B5A826B474E84DFECD5B87606B7A687A3915C31249CE1E795F609A11094686DF41E99041667E9DD271A0E22550FDD0C3CEF0039678F328679B8590651F4DBE3332148DBA\";\r\n    var bytes = hex.HexToBytes();\r\n    var utf8Encoded = Encoding.UTF8.GetString(bytes);\r\n    Assert.AreEqual(netFrameworkExpected, utf8Encoded);\r\n}\r\n\r\npublic static byte[] HexToBytes(this string hexString)\r\n{\r\n    return Enumerable.Range(0, hexString.Length)\r\n        .Where(x => x % 2 == 0)\r\n        .Select(x => Convert.ToByte(hexString.Substring(x, 2), 16))\r\n        .ToArray();\r\n}\r\n```\r\n\r\nThis test will pass on .Net Framework 4.8, but will fail on .Net Standard 2.0","Url":"https://github.com/dotnet/standard/issues/1679","RelatedDescription":"Closed issue \"UTF8 Encoding isn't consistent with .Net Framework\" (#1679)"},{"Id":"548955096","IsPullRequest":false,"CreatedAt":"2020-01-13T14:10:16","Actor":"richbryant","Number":"1680","RawContent":null,"Title":"RFC: Add a Unit type to the System namespace","State":"open","Body":"**Abstract**\r\n\r\n`Unit`s are proliferating in the NetCore ecosystem.  Nobody can deny their utility (since you can't return a void) but this does introduce the issue of incompatible structs all called `Unit` provided by different packages.\r\n\r\n**Proposal**\r\n\r\nImplement a `System.Unit` struct, taking on board the needs of the major libraries providing `Unit`s at the moment.\r\n\r\n**Benefits**\r\n\r\n- Provide a `Type` that can be used _interchangeably_ between the major libraries\r\n- Provide a `Unit` for future libraries, preventing yet more proliferation\r\n- Make the lives of everyone who has to work these so much better\r\n\r\n*_Example_*\r\n\r\n[This file](https://github.com/richbryant/BetterUnit/blob/master/BetterUnit/Unit.cs) is an example of integrating `System.Reactive.Unit` (paging @ghuntley @onovotny ) with `Mediatr.Unit` (credit @jbogard) and `language-ext.Unit` (credit @louthy ).\r\n\r\nThis covers 90% of the Use Cases for `Unit`.  If this were implemented in the `System` namespace with other Types, it would solve a lot of issues and prevent a lot of future issues .\r\n","Url":"https://github.com/dotnet/standard/issues/1680","RelatedDescription":"Open issue \"RFC: Add a Unit type to the System namespace\" (#1680)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"565607813","IsPullRequest":true,"CreatedAt":"2020-02-14T23:36:12","Actor":"joperezr","Number":"42859","RawContent":null,"Title":"Adding netfx configuration to System.Runtime.CompilerServices.Unsafe","State":"open","Body":"Porting #42849 relevant parts to release/3.1. Original PR was against 2.1. This has already been approved by tactics.","Url":"https://github.com/dotnet/corefx/pull/42859","RelatedDescription":"Open PR \"Adding netfx configuration to System.Runtime.CompilerServices.Unsafe\" (#42859)"},{"Id":"565515111","IsPullRequest":true,"CreatedAt":"2020-02-14T21:54:25","Actor":"Anipik","Number":"42858","RawContent":null,"Title":"Disable machine related or flaky tests","State":"closed","Body":"System.DrawingTest are failing on mac because the machines are being updated.\r\n BasicTest_AccessInstanceProperties_NoExceptions_Bsd failure is known and we are working on fixing it. ","Url":"https://github.com/dotnet/corefx/pull/42858","RelatedDescription":"Closed or merged PR \"Disable machine related or flaky tests\" (#42858)"},{"Id":"565466356","IsPullRequest":true,"CreatedAt":"2020-02-14T19:11:16","Actor":"dotnet-maestro[bot]","Number":"42857","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200213.3\r\n- **Date Produced**: 2/14/2020 2:42 AM\r\n- **Commit**: 6689dd74ef07963fb7bcc8072e80d7e6fd2cd1de\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.3-servicing.20113.3\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.3-servicing.20113.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.3-servicing.20113.3\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42857","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42857)"},{"Id":"565027627","IsPullRequest":true,"CreatedAt":"2020-02-14T19:11:06","Actor":"dotnet-maestro[bot]","Number":"42856","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7\r\n- **Build**: 20200213.5\r\n- **Date Produced**: 2/13/2020 9:34 PM\r\n- **Commit**: 15f00efd583eab4372b2e9ca25bd80ace5b119ad\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.20113.5\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.20113.5\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.20113.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.20113.5\r\n\r\n[marker]: <> (End:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42856","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#42856)"},{"Id":"562902669","IsPullRequest":true,"CreatedAt":"2020-02-14T18:31:29","Actor":"joperezr","Number":"42849","RawContent":null,"Title":"[Release/2.1] Adding .NET Framework asset on OOB packages","State":"closed","Body":"Contributes to https://github.com/dotnet/runtime/issues/1625\r\n\r\nPTAL: @ericstj @ahsonkhan \r\n\r\nFYI: @Dmitry-Matveev after this fix is in and shipped, then App Insights will be able to depend on the new version of System.Memory which will stop requiring facades to get binplaced and binding redirects to be required.\r\n\r\nThe changes included in this PR will fix all packages that are supported in .Net Framework, currently provide a .NET Standard asset for one .NET Framework version, and we no longer build on other branches (master or release/3.1). The thing left to do before this goes in, is to analyze the packages that had a reference to one of these and no longer build on other branches, so that we produce a new version of them referencing the new packages.","Url":"https://github.com/dotnet/corefx/pull/42849","RelatedDescription":"Closed or merged PR \"[Release/2.1] Adding .NET Framework asset on OOB packages\" (#42849)"},{"Id":"563434956","IsPullRequest":true,"CreatedAt":"2020-02-13T23:50:41","Actor":"omajid","Number":"42853","RawContent":null,"Title":"WIP: Dummy commit to see ci status","State":"closed","Body":"just want to see the status of ci out of the box","Url":"https://github.com/dotnet/corefx/pull/42853","RelatedDescription":"Closed or merged PR \"WIP: Dummy commit to see ci status\" (#42853)"},{"Id":"556561547","IsPullRequest":true,"CreatedAt":"2020-02-13T22:33:38","Actor":"JeremyKuhne","Number":"42845","RawContent":null,"Title":"Fix ReadOnlySequence GetFirstSpan","State":"closed","Body":"Ports https://github.com/dotnet/runtime/pull/276 manually, to address https://github.com/dotnet/runtime/issues/2205.\r\n\r\n**Description**\r\n\r\nWhen getting the first span `GetFirstSpan` from a sequence that is made up of a single segment view of a sequence with multiple sequences the `next` `SequencePosition` is incorrect and will lead to failures trying to enumerate in `SequenceReader` (or anything else that tries to use the `GetFirstSpan` and the returned `SequencePosition`).\r\n\r\n**Customer Impact**\r\n\r\nCustomers will see intermittent failures when sequences happen to align in this way. This issue has gotten multiple reports.\r\n\r\n**Regression?**\r\n\r\nNo.\r\n\r\n**Packaging reviewed?**\r\n\r\nBug fix, no API surface change.\r\n\r\n**Risk**\r\n\r\nLow. This fix has been in master for a few months and there are significant tests and upstream users.\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42845","RelatedDescription":"Closed or merged PR \"Fix ReadOnlySequence GetFirstSpan\" (#42845)"},{"Id":"554298803","IsPullRequest":true,"CreatedAt":"2020-02-13T22:31:37","Actor":"bartonjs","Number":"42838","RawContent":null,"Title":"Update test OS matrix for release/2.1","State":"closed","Body":"```\r\n- redundant RHEL.7\r\n- EOL Ubuntu.1404\r\n- EOL OpenSUSE.42\r\n- EOL Fedora.27\r\n- EOL Fedora.28\r\n+ Fedora.30\r\n-/+ Update Alpine 3.9 and 3.10 to latest docker images\r\n- EOL OSX.1012\r\n+ OSX.1014\r\n+ OSX.1015\r\n- Unsupported Windows.Nano\r\n```","Url":"https://github.com/dotnet/corefx/pull/42838","RelatedDescription":"Closed or merged PR \"Update test OS matrix for release/2.1\" (#42838)"},{"Id":"564866887","IsPullRequest":true,"CreatedAt":"2020-02-13T22:22:26","Actor":"Anipik","Number":"42854","RawContent":null,"Title":"branding update for 3.1.3","State":"closed","Body":"@mmitche we don't need to turn off the stable package here as we didn't do it last time ?","Url":"https://github.com/dotnet/corefx/pull/42854","RelatedDescription":"Closed or merged PR \"branding update for 3.1.3\" (#42854)"},{"Id":"564870185","IsPullRequest":true,"CreatedAt":"2020-02-13T20:53:38","Actor":"Anipik","Number":"42855","RawContent":null,"Title":"branding for 2.1.17","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42855","RelatedDescription":"Closed or merged PR \"branding for 2.1.17\" (#42855)"},{"Id":"563334512","IsPullRequest":true,"CreatedAt":"2020-02-13T19:57:44","Actor":"omajid","Number":"42852","RawContent":null,"Title":"[release/3.1] Add cgroup2 support","State":"closed","Body":"This is a cherry-pick of:\r\n\r\n- #39633\r\n- #39686","Url":"https://github.com/dotnet/corefx/pull/42852","RelatedDescription":"Closed or merged PR \"[release/3.1] Add cgroup2 support\" (#42852)"},{"Id":"562912148","IsPullRequest":true,"CreatedAt":"2020-02-11T17:58:08","Actor":"Anipik","Number":"42850","RawContent":null,"Title":"validating build","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42850","RelatedDescription":"Closed or merged PR \"validating build\" (#42850)"},{"Id":"562931431","IsPullRequest":true,"CreatedAt":"2020-02-11T01:50:20","Actor":"tgani-msft","Number":"42851","RawContent":null,"Title":"Backport attribute to support inline namespaces in C++/CLI ","State":"open","Body":"Port commit cef57de93bab815726f860f79195227c65e4fce5 from dotnet/runtime (5.0) to dotnet/corefx (3.1).\r\n\r\ncommit cef57de93bab815726f860f79195227c65e4fce5\r\nAuthor: Tanveer Gani <45886079+tgani-msft@users.noreply.github.com>\r\nDate:   Thu Jan 30 10:28:26 2020 -0800\r\n\r\n    Add attribute to support inline namespaces in C++/CLI. (#781)\r\n\r\n    * Add attribute to support inline namespaces in C++/CLI.\r\n\r\n    A new assembly-scope custom attribute\r\n\r\n    [CppInlineNamespace(string dottedName)]\r\n\r\n    has been added to implement inline namespaces in C++/CLI. For every\r\n    inline namespace encountered in a translation unit, the C++ compiler\r\n    will emit this attribute with the fully scoped name, in CLR dotted\r\n    form, as the argument for the attribute.\r\n\r\n    * Add [CppInlineNamespace] to refs.","Url":"https://github.com/dotnet/corefx/pull/42851","RelatedDescription":"Open PR \"Backport attribute to support inline namespaces in C++/CLI \" (#42851)"},{"Id":"558211552","IsPullRequest":true,"CreatedAt":"2020-01-31T15:50:37","Actor":"bartonjs","Number":"42848","RawContent":null,"Title":"Update test OS matrix for release/3.1","State":"open","Body":"* Run servicing PRs as fullMatrix: true\r\n* Refresh all docker images to their latest tag\r\n* Added Alpine.311 (amd64)\r\n* Added Fedora.30\r\n* Removed Ubuntu.1904\r\n* Added Ubuntu.1910\r\n* Added OSX.1015","Url":"https://github.com/dotnet/corefx/pull/42848","RelatedDescription":"Open PR \"Update test OS matrix for release/3.1\" (#42848)"},{"Id":"558160930","IsPullRequest":true,"CreatedAt":"2020-01-31T15:04:27","Actor":"stephentoub","Number":"42847","RawContent":null,"Title":"Fix readme.md link in contributing.md","State":"closed","Body":"cc: @danmosemsft ","Url":"https://github.com/dotnet/corefx/pull/42847","RelatedDescription":"Closed or merged PR \"Fix readme.md link in contributing.md\" (#42847)"},{"Id":"555744746","IsPullRequest":true,"CreatedAt":"2020-01-27T18:15:18","Actor":"danmosemsft","Number":"42843","RawContent":null,"Title":"Add issue template directing new issues to dotnet/runtime","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42843","RelatedDescription":"Closed or merged PR \"Add issue template directing new issues to dotnet/runtime\" (#42843)"},{"Id":"553888832","IsPullRequest":true,"CreatedAt":"2020-01-23T01:27:49","Actor":"halter73","Number":"42837","RawContent":null,"Title":"[3.1] Don't call AdvanceTo(default) in PipeReader.CopyToAsync","State":"open","Body":"3.1 backport of dotnet/runtime#1437.\r\n\r\nFixes dotnet/runtime#1436\r\n\r\n#### Description\r\n\r\nWhen the default PipeReader.CopyToAsync(destination) implementation is called with a Stream that throws from WriteAsync(), it will call PipeReader.AdvanceTo(consumed) with the default SequencePosition instead of ReadResult.Buffer.Start as expected. With a custom PipeReader, this can result in the PipeReader being left in an unusable state.\r\n\r\n#### Customer Impact\r\n\r\nIf a customer calls CopyToAsync with a stream that can throw, the original Stream.WriteAsync() exception is hidden by an exception from PipeReader.AdvanceTo(). Here's an example that calls ASP.NET Core 3.1's HttpContext.Request.Body.CopyToAsync() method which uses the default PipeReader.CopyToAsync() implementation under the covers:\r\n\r\n```C#\r\nvar throwingStream = new ThrowingStream();\r\n\r\ntry\r\n{\r\n    await context.Request.Body.CopyToAsync(throwingStream);\r\n}\r\ncatch (Exception ex)\r\n{\r\n    Console.WriteLine(\"CopyToAsync Ex: {0}\", ex);\r\n}\r\n```\r\n\r\n```\r\nCopyToAsync Ex: System.ArgumentOutOfRangeException: Specified argument was out of the range of valid values. (Parameter 'position')\r\n   at System.ThrowHelper.ThrowArgumentOutOfRangeException_PositionOutOfRange()\r\n   at System.Buffers.ReadOnlySequence`1.BoundsCheck(UInt32 sliceStartIndex, Object sliceStartObject, UInt32 sliceEndIndex, Object sliceEndObject)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.AdvanceTo(SequencePosition consumed, SequencePosition examined) in C:\\dev\\aspnet\\AspNetCore\\src\\Servers\\Kestrel\\Core\\src\\Internal\\Http\\Http1ContentLengthMessageBody.cs:line 217\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1ContentLengthMessageBody.AdvanceTo(SequencePosition consumed) in C:\\dev\\aspnet\\AspNetCore\\src\\Servers\\Kestrel\\Core\\src\\Internal\\Http\\Http1ContentLengthMessageBody.cs:line 202   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpRequestPipeReader.AdvanceTo(SequencePosition consumed) in C:\\dev\\aspnet\\AspNetCore\\src\\Servers\\Kestrel\\Core\\src\\Internal\\Http\\HttpRequestPipeReader.cs:line 31\r\n   at System.IO.Pipelines.PipeReader.CopyToAsyncCore[TStream](TStream destination, Func`4 writeAsync, CancellationToken cancellationToken)\r\n   at SampleApp.Startup.<>c__DisplayClass0_0.<<Configure>b__1>d.MoveNext() in C:\\dev\\aspnet\\AspNetCore\\src\\Servers\\Kestrel\\samples\\SampleApp\\Startup.cs:line 49\r\n```\r\n\r\n#### Regression?\r\n\r\nTechnically, no. But in 3.0, Kestrel started using a PipeReader to back its request body Streams which makes this issue more prominent.\r\n\r\n#### Packaging reviewed?\r\n\r\nNot yet, but I've followed the guide at https://github.com/dotnet/runtime/blob/0515878d1eb4fb544ae0219c436c299746fdb2b4/docs/project/library-servicing.md.\r\n\r\n#### Risk\r\n\r\nExtremely minimal. This PR is initializing the `consumed` SequencePosition to the safe value of `ReadResult.Buffer.Start` (indicating nothing was consumed) instead of `default` (effectively null). The default PipeReader.AdvanceTo implementation treats these the same.","Url":"https://github.com/dotnet/corefx/pull/42837","RelatedDescription":"Open PR \"[3.1] Don't call AdvanceTo(default) in PipeReader.CopyToAsync\" (#42837)"},{"Id":"550563524","IsPullRequest":true,"CreatedAt":"2020-01-17T22:17:49","Actor":"dotnet-maestro-bot","Number":"42831","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"closed","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @danmosemsft\n* @Anipik\n* @dotnet-maestro[bot]\n* @mmitche\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42831","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#42831)"},{"Id":"551300317","IsPullRequest":true,"CreatedAt":"2020-01-17T17:54:34","Actor":"dotnet-maestro[bot]","Number":"42834","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200116.2\r\n- **Date Produced**: 1/17/2020 2:55 AM\r\n- **Commit**: fd22fd600a2526a7c58536da0e80325eb710d7f1\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.2-servicing.20066.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.2-servicing.20066.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.2-servicing.20066.2\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42834","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42834)"},{"Id":"551390974","IsPullRequest":true,"CreatedAt":"2020-01-17T13:46:02","Actor":"dotnet-maestro[bot]","Number":"42835","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: 66928e2e-bd95-4f7e-280f-08d690bc5860\r\n- **Build**: 20200116.3\r\n- **Date Produced**: 1/17/2020 6:12 AM\r\n- **Commit**: 259ce7d4619478cfefe7b0c0f6fa765f765f7e37\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.3-servicing.20066.3\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.3-servicing.20066.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.3-servicing.20066.3\r\n\r\n[marker]: <> (End:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42835","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/coreclr\" (#42835)"},{"Id":"550491818","IsPullRequest":true,"CreatedAt":"2020-01-16T22:04:38","Actor":"GrabYourPitchforks","Number":"42829","RawContent":null,"Title":"[release/3.1] Revert changes to EncoderNLS/DecoderNLS.Convert unit tests","State":"closed","Body":"These are the unit test changes to accompany https://github.com/dotnet/coreclr/pull/27996, which was committed to the __release/3.1__ branch in the _coreclr_ repo.\r\n\r\nThis _corefx_ PR isn't a functional product change. It's just updating the unit tests to reflect the incoming _coreclr_ changes. Once a nightly _coreclr_ build is created and it works its way into this repo, this PR will resolve the resulting unit test failures and will unblock future work in this repo.","Url":"https://github.com/dotnet/corefx/pull/42829","RelatedDescription":"Closed or merged PR \"[release/3.1] Revert changes to EncoderNLS/DecoderNLS.Convert unit tests\" (#42829)"},{"Id":"550704048","IsPullRequest":true,"CreatedAt":"2020-01-16T21:35:58","Actor":"dotnet-maestro[bot]","Number":"42832","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200115.4\r\n- **Date Produced**: 1/16/2020 3:43 AM\r\n- **Commit**: 4e29494f5610ecd739b1b762b36d3b93c61a4a4b\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.2-servicing.20065.4\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.2-servicing.20065.4\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.2-servicing.20065.4\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42832","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42832)"},{"Id":"550410091","IsPullRequest":true,"CreatedAt":"2020-01-16T05:32:52","Actor":"dotnet-maestro[bot]","Number":"42827","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: 66928e2e-bd95-4f7e-280f-08d690bc5860\r\n- **Build**: 20200115.2\r\n- **Date Produced**: 1/15/2020 8:41 PM\r\n- **Commit**: c76e272e578101a245e0ff895d1c3879b7995832\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.3-servicing.20065.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.3-servicing.20065.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.3-servicing.20065.2\r\n\r\n[marker]: <> (End:66928e2e-bd95-4f7e-280f-08d690bc5860)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42827","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/coreclr\" (#42827)"},{"Id":"550545725","IsPullRequest":true,"CreatedAt":"2020-01-16T04:10:55","Actor":"dotnet-maestro[bot]","Number":"42830","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200115.3\r\n- **Date Produced**: 1/15/2020 8:39 PM\r\n- **Commit**: f14483fb2857f507c302815a54d02d275864e423\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.2-servicing.20065.3\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.2-servicing.20065.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.2-servicing.20065.3\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42830","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42830)"},{"Id":"550413141","IsPullRequest":true,"CreatedAt":"2020-01-15T23:08:47","Actor":"dotnet-maestro[bot]","Number":"42828","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Subscription**: dbb830b1-8f81-460f-dd40-08d72a4caef5\r\n- **Build**: 20200115.1\r\n- **Date Produced**: 1/15/2020 8:47 AM\r\n- **Commit**: c43d0336eb999fe3bc7bf5873effe89cee716c69\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.1-servicing.20065.1\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.1-servicing.20065.1\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.1-servicing.20065.1\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42828","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42828)"},{"Id":"549897137","IsPullRequest":true,"CreatedAt":"2020-01-15T17:38:38","Actor":"Anipik","Number":"42824","RawContent":null,"Title":"updating assembly version and package version for system.data.sqlclient","State":"closed","Body":"There is no need to update package index here because we update that for 2.x branches after we have published the package. Because we fix that functionality in 3.1\r\n","Url":"https://github.com/dotnet/corefx/pull/42824","RelatedDescription":"Closed or merged PR \"updating assembly version and package version for system.data.sqlclient\" (#42824)"},{"Id":"549892106","IsPullRequest":true,"CreatedAt":"2020-01-15T06:32:14","Actor":"Anipik","Number":"42823","RawContent":null,"Title":"updating assembly versions, packageversions and publishing the packages","State":"closed","Body":"We have serviced 6 commits in 3.1.2\r\n3  -> system.data.sqlclient\r\n1 -> system.text.json\r\n1 -> Reflection.MetadataLoadContext (eric already made that change for this change)\r\n1 -> changes system.Native (part of shared framework)","Url":"https://github.com/dotnet/corefx/pull/42823","RelatedDescription":"Closed or merged PR \"updating assembly versions, packageversions and publishing the packages\" (#42823)"},{"Id":"549865580","IsPullRequest":true,"CreatedAt":"2020-01-15T00:37:58","Actor":"Anipik","Number":"42821","RawContent":null,"Title":"update branding of 2.1.16","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42821","RelatedDescription":"Closed or merged PR \"update branding of 2.1.16\" (#42821)"},{"Id":"549887977","IsPullRequest":true,"CreatedAt":"2020-01-15T00:34:55","Actor":"dotnet-maestro-bot","Number":"42822","RawContent":null,"Title":"Update CoreClr, CoreFx, CoreSetup to servicing-28325-011, servicing-28327-021, stable, respectively (release/2.1)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/42822","RelatedDescription":"Closed or merged PR \"Update CoreClr, CoreFx, CoreSetup to servicing-28325-011, servicing-28327-021, stable, respectively (release/2.1)\" (#42822)"},{"Id":"549772423","IsPullRequest":true,"CreatedAt":"2020-01-14T20:37:06","Actor":"dotnet-maestro-bot","Number":"42820","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"closed","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @Anipik\n* @dotnet-maestro[bot]\n* @mmitche\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42820","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#42820)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"565847444","IsPullRequest":false,"CreatedAt":"2020-02-16T04:01:20","Actor":"CyrusNajmabadi","Number":"41733","RawContent":null,"Title":"ITypeSymbol.BaseType docs appear to be incorrect wrt Type Parameters.","State":"open","Body":"The docs for ITypeSymbol.BaseType explicitly state:\r\n\r\n> The base type of a type parameter is its effective base class.\r\n\r\nHowever, in practice, this does not appear to be true.  For example, when given the following code:\r\n\r\n```c#\r\nabstract class Base\r\n{\r\n    public abstract void Method();\r\n}\r\n\r\nclass Derived<T> : Base where T : Base\r\n{\r\n    T inner;\r\n}\r\n```\r\n\r\nThe ITypeParameterSymbol for `T` returns `null` for `BaseType`.\r\n\r\nDebugging through, this appears to be very explicit:\r\n\r\n`ITypeSymbol.BaseType` is:\r\n\r\n```c#\r\n        INamedTypeSymbol ITypeSymbol.BaseType\r\n        {\r\n            get\r\n            {\r\n                return UnderlyingTypeSymbol.BaseTypeNoUseSiteDiagnostics.GetPublicSymbol();\r\n            }\r\n        }\r\n```\r\n\r\nAnd `BaseTypeNoUseSiteDiagnostics` is defined for all TypeParameters with this sealed override:\r\n\r\n```c#\r\n        internal sealed override NamedTypeSymbol BaseTypeNoUseSiteDiagnostics => null;\r\n```\r\n\r\nNow, TypeParameterSymbol also has:\r\n\r\n```c#\r\n        /// <summary>\r\n        /// The effective base class of the type parameter (spec 10.1.5). If the deduced\r\n        /// base type is a reference type, the effective base type will be the same as\r\n        /// the deduced base type. Otherwise if the deduced base type is a value type,\r\n        /// the effective base type will be the most derived reference type from which\r\n        /// deduced base type is derived.\r\n        /// </summary>\r\n        internal NamedTypeSymbol EffectiveBaseClassNoUseSiteDiagnostics\r\n```\r\n\r\nOne of two things seems to be going on here:\r\n\r\n1. we actually want ITypeParameterSymbol.BaseType to return null (in which case we need to update the docs).\r\n2. The docs are correct, but the impl is incorrect.  In which case we could consider fixing (though it's unclear what the implications of that might be).","Url":"https://github.com/dotnet/roslyn/issues/41733","RelatedDescription":"Open issue \"ITypeSymbol.BaseType docs appear to be incorrect wrt Type Parameters.\" (#41733)"},{"Id":"565830319","IsPullRequest":true,"CreatedAt":"2020-02-16T00:39:27","Actor":"CyrusNajmabadi","Number":"41732","RawContent":null,"Title":"Use 'Sentence case' instead of 'Title Case'","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/41732","RelatedDescription":"Open PR \"Use 'Sentence case' instead of 'Title Case'\" (#41732)"},{"Id":"565825722","IsPullRequest":false,"CreatedAt":"2020-02-16T00:36:54","Actor":"LinqToException","Number":"41731","RawContent":null,"Title":"Initializing interactive window with project causes FailFast due to NRE in RemoteService.Dispose","State":"closed","Body":"**Version Used**: \r\n- VS Enterprise 2019; 16.4.4\r\n- Microsoft (R) Visual C# Interactive Compiler version 3.4.1-beta4-19614-01\r\n\r\n**Steps to Reproduce**:\r\nNot reproducible anymore. Original steps that led to this behaviour:\r\n\r\n1. Creating a new solution, .NET Framework 4.7.2 Console Application (Project A)\r\n2. Add a new project (Project B)\r\n3. Add an internal class to Project A.\r\n4. Add an `IgnoresAccessChecksToAttribute` to project B which allows access to A.\r\n5. Have the `Main` method of Project B reference the class from Project A by typing its name and having Intellisense auto-complete & auto-reference it.\r\n6. Try to initialize the C# interactive window with Project A by right-clicking it in the solution explorer.\r\n7. VS crashes and restarts.\r\n8. VS crashes and restarts every time this is attempted. Re-builds do not seem to change this behaviour.\r\n\r\nAfter commenting the attribute definition as well as its usage in Project B out and making the class public, rebuilding it and trying to initialize it again, it works. Commenting the attribute in again results in it still working - so the crash is gone.\r\n\r\nI've tried reproducing this crash by going through the same steps again with a new solution, but have not been able to get it to crash again.\r\n\r\n**Event Log Entries:**\r\n\r\n```\r\nFaulting application name: devenv.exe, version: 16.4.29728.190, time stamp: 0x5e312a76\r\nFaulting module name: unknown, version: 0.0.0.0, time stamp: 0x00000000\r\nException code: 0x80131623\r\nFault offset: 0x14555a7a\r\nFaulting process id: 0x1fa8\r\nFaulting application start time: 0x01d5e424d5838e24\r\nFaulting application path: C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\Common7\\IDE\\devenv.exe\r\nFaulting module path: unknown\r\nReport Id: d123479b-ea18-4d7e-ba79-800f56558cd6\r\nFaulting package full name: \r\nFaulting package-relative application ID: \r\n```\r\n\r\n```\r\nApplication: devenv.exe\r\nFramework Version: v4.0.30319\r\nDescription: The application requested process termination through System.Environment.FailFast(string message).\r\nMessage: System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Microsoft.CodeAnalysis.Interactive.InteractiveHost.RemoteService.Dispose()\r\n   at Microsoft.CodeAnalysis.Interactive.InteractiveHost.LazyRemoteService.<TryStartAndInitializeProcessAsync>d__8.MoveNext()\r\nStack:\r\n   at System.Environment.FailFast(System.String, System.Exception)\r\n   at Microsoft.CodeAnalysis.FailFast.OnFatalException(System.Exception)\r\n   at Microsoft.CodeAnalysis.ErrorReporting.FatalError.Report(System.Exception, System.Action`1<System.Exception>)\r\n   at Microsoft.CodeAnalysis.ErrorReporting.FatalError.ReportUnlessCanceled(System.Exception)\r\n   at Microsoft.CodeAnalysis.Interactive.InteractiveHost+LazyRemoteService+<TryStartAndInitializeProcessAsync>d__8.MoveNext()\r\n   at Microsoft.CodeAnalysis.Interactive.InteractiveHost+RemoteService.Dispose()\r\n   at Microsoft.CodeAnalysis.Interactive.InteractiveHost+LazyRemoteService+<TryStartAndInitializeProcessAsync>d__8.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[Microsoft.CodeAnalysis.Interactive.RemoteExecutionResult, Microsoft.CodeAnalysis.InteractiveHost, Version=3.4.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]].TrySetResult(Microsoft.CodeAnalysis.Interactive.RemoteExecutionResult)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[Microsoft.CodeAnalysis.Interactive.RemoteExecutionResult, Microsoft.CodeAnalysis.InteractiveHost, Version=3.4.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]].SetResult(Microsoft.CodeAnalysis.Interactive.RemoteExecutionResult)\r\n   at Microsoft.CodeAnalysis.Interactive.InteractiveHost+<Async>d__46`1[[Microsoft.CodeAnalysis.Interactive.RemoteExecutionResult, Microsoft.CodeAnalysis.InteractiveHost, Version=3.4.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[Microsoft.CodeAnalysis.Interactive.RemoteExecutionResult, Microsoft.CodeAnalysis.InteractiveHost, Version=3.4.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]].TrySetResult(Microsoft.CodeAnalysis.Interactive.RemoteExecutionResult)\r\n   at System.Threading.Tasks.TaskCompletionSource`1[[Microsoft.CodeAnalysis.Interactive.RemoteExecutionResult, Microsoft.CodeAnalysis.InteractiveHost, Version=3.4.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]].TrySetResult(Microsoft.CodeAnalysis.Interactive.RemoteExecutionResult)\r\n   at Microsoft.CodeAnalysis.Interactive.InteractiveHost+RemoteAsyncOperation`1[[Microsoft.CodeAnalysis.Interactive.RemoteExecutionResult, Microsoft.CodeAnalysis.InteractiveHost, Version=3.4.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]].<.ctor>b__3_0(System.Object, System.EventArgs)\r\n   at System.Diagnostics.Process.OnExited()\r\n   at System.Diagnostics.Process.RaiseOnExited()\r\n   at System.Diagnostics.Process.CompletionCallback(System.Object, Boolean)\r\n   at System.Threading._ThreadPoolWaitOrTimerCallback.WaitOrTimerCallback_Context(System.Object, Boolean)\r\n   at System.Threading._ThreadPoolWaitOrTimerCallback.WaitOrTimerCallback_Context_f(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading._ThreadPoolWaitOrTimerCallback.PerformWaitOrTimerCallback(System.Object, Boolean)\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/41731","RelatedDescription":"Closed issue \"Initializing interactive window with project causes FailFast due to NRE in RemoteService.Dispose\" (#41731)"},{"Id":"565820021","IsPullRequest":true,"CreatedAt":"2020-02-16T00:06:31","Actor":"AlekseyTs","Number":"41729","RawContent":null,"Title":"For personal review","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/41729","RelatedDescription":"Closed or merged PR \"For personal review\" (#41729)"},{"Id":"565824369","IsPullRequest":true,"CreatedAt":"2020-02-15T23:33:43","Actor":"CyrusNajmabadi","Number":"41730","RawContent":null,"Title":"Implement abstract class through an existing field or prop in the destination.","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/41420\r\n\r\nDepends on https://github.com/dotnet/roslyn/pull/41727.  Should be reviewed once that goes in.\r\n\r\nLooks like this:\r\n\r\n![image](https://user-images.githubusercontent.com/4564579/74596761-87693180-5008-11ea-889b-fc88b93c1e50.png)\r\n\r\nTODO: \r\n- [ ] tests.","Url":"https://github.com/dotnet/roslyn/pull/41730","RelatedDescription":"Open PR \"Implement abstract class through an existing field or prop in the destination.\" (#41730)"},{"Id":"565816205","IsPullRequest":true,"CreatedAt":"2020-02-15T22:07:40","Actor":"cston","Number":"41728","RawContent":null,"Title":"Support specific members from System.[U]IntPtr","State":"open","Body":"Expose overridden methods `GetHashCode()`, `Equals(object obj)`, and `ToString()` from `nint` and `nuint`.","Url":"https://github.com/dotnet/roslyn/pull/41728","RelatedDescription":"Open PR \"Support specific members from System.[U]IntPtr\" (#41728)"},{"Id":"565813599","IsPullRequest":true,"CreatedAt":"2020-02-15T21:43:51","Actor":"CyrusNajmabadi","Number":"41727","RawContent":null,"Title":"Simplify implementation of \"Implement abstract class\".","State":"open","Body":"Note sure what the design reasoning was here, but this feature was built out of many unnecessary intermediary parts.  There's really only need for three pieces:\r\n\r\n1. the feature-independent part that simply computes if an abstract class can be implemented, and what such an implementation would look like.\r\n2. the light-bulb features that utilizes '1'.\r\n3. the VB 'enter command handler' that utilizes '1'.\r\n\r\nAll the intermediary services, and editors, and whatnot just don't really serve any purpose and can be removed.\r\n\r\nThis came up because i wanted to augment this feature for https://github.com/dotnet/roslyn/issues/41420 and i was surprised by how much work that would be.","Url":"https://github.com/dotnet/roslyn/pull/41727","RelatedDescription":"Open PR \"Simplify implementation of \"Implement abstract class\".\" (#41727)"},{"Id":"565812326","IsPullRequest":true,"CreatedAt":"2020-02-15T21:31:50","Actor":"skarllot","Number":"41726","RawContent":null,"Title":"Test convert nullable to non-nullable using custom awaitable","State":"open","Body":"Test reporting on methods that returns ConfiguredTaskAwaitable (#39417).","Url":"https://github.com/dotnet/roslyn/pull/41726","RelatedDescription":"Open PR \"Test convert nullable to non-nullable using custom awaitable\" (#41726)"},{"Id":"565801093","IsPullRequest":true,"CreatedAt":"2020-02-15T19:58:49","Actor":"RikkiGibson","Number":"41725","RawContent":null,"Title":"Lfa inline statement parsing","State":"open","Body":"This PR verifies that the stack depth issues related to statement attributes are solved by #41585.\r\n\r\n@CyrusNajmabadi would appreciate a look at b0b39ba.","Url":"https://github.com/dotnet/roslyn/pull/41725","RelatedDescription":"Open PR \"Lfa inline statement parsing\" (#41725)"},{"Id":"565647068","IsPullRequest":true,"CreatedAt":"2020-02-15T16:14:10","Actor":"dotnet-bot","Number":"41718","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41718","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#41718)"},{"Id":"565771095","IsPullRequest":false,"CreatedAt":"2020-02-15T16:10:24","Actor":"GrahamTheCoder","Number":"41724","RawContent":null,"Title":"Roslyn calls Environment.FailFast rather than throwing exceptions in VS","State":"open","Body":"**Version Used**: master: dcc7ce3e448eb4f1b84f00e1d87136435f5e048e\r\n\r\n**Steps to Reproduce**:\r\n1. Be in the visual studio app domain (or probably anywhere that has run  Microsoft.CodeAnalysis.VisualBasic.CommandLine.Run(...))\r\n2. Call Simplifier.ReduceAsync in a way that will trigger an exception (e.g. the code from https://github.com/dotnet/roslyn/pull/41721)\r\n\r\n**Expected Behavior**:\r\nAn exception is thrown, catchable by the code calling Simplifier.ReduceAsync\r\n(except perhaps in severe corruption or security scenarios)\r\n\r\n**Actual Behavior**:\r\nProcess ends due to Environment.FailFast still being hooked up from compiler call.\r\n\r\n**Details**:\r\nI'm seeing this within Visual Studio when calling the simplifier from a VS extension. I'm not calling the compiler myself directly, but I assume that Visual Studio is doing so within the same VS process. This surprises me a bit because I thought that the compiler always runs via a separate process, so maybe I'm missing some detail. There is the additional oddity that I can't find an entry in the event log for these cases. The only way I can avoid this is by using a [some horribly brittle reflection](https://github.com/icsharpcode/CodeConverter/blob/26d0623141589ca5460d177bd670b04fd85b8ff2/ICSharpCode.CodeConverter/Shared/ProjectConversion.cs#L171-L196).\r\n\r\nEvery time this issue gets mentioned in this repo I could see, someone fixes or gives a workaround for the bug which caused the exception, but not the fundamental problem. This is apparently a [known situation with a big conversation](https://github.com/dotnet/roslyn/issues/19880#issuecomment-305264368) around it, but I just wanted to flag up as its own issue since that comment was nearly 3 years ago.\r\n\r\n**Small improvements**\r\n* The easiest improvement for this is to confine the error handler code to the compiler usage (i.e. unregister the handler afterwards). This obviously wouldn't deal well with concurrency.\r\n* Run the simplifiers on some code from a few open source solutions (perhaps even roslyn itself) to discover some of the bugs in them (many of which will currently trigger a VS crash)\r\n\r\n**Medium solution**\r\nStart using ExceptionUtilities.Unreachable only for cases where you have some reasoning / solid testing that indicates the code is unreachable.\r\nIntroduce `ExceptionUtilties.CatchAll` to distinguish other cases of \"hope this doesn't happen\".\r\n\r\nThen replace all\r\n```csharp\r\ntry\r\n{\r\n    ...\r\n}\r\ncatch (Exception e) when (FatalError.ReportUnlessCanceled(e))\r\n{\r\n    throw ExceptionUtilities.Unreachable;\r\n}\r\n```\r\n\r\nwith\r\n\r\n```csharp\r\ntry\r\n{\r\n    ...\r\n}\r\ncatch (Exception e) when (FatalError.ReportWithoutCrashUnlessCanceled(e))\r\n{\r\n    throw ExceptionUtilities.CatchAll;\r\n}\r\n```\r\n\r\n**Bigger picture**\r\nIsn't there any library call that could just take a memory dump of the running process (e.g. `dotnet-dump collect --process-id ...`) and report it without exiting the process?","Url":"https://github.com/dotnet/roslyn/issues/41724","RelatedDescription":"Open issue \"Roslyn calls Environment.FailFast rather than throwing exceptions in VS\" (#41724)"},{"Id":"565760008","IsPullRequest":false,"CreatedAt":"2020-02-15T15:06:22","Actor":"zeroskyx","Number":"41722","RawContent":null,"Title":"Every CSharpScript.EvaluateAsync() call generates a new assembly that does not get unloaded","State":"open","Body":"Using the following code:\r\n\r\n```\r\nwhile(true)\r\n{\r\n\tawait Microsoft.CodeAnalysis.CSharp.Scripting.CSharpScript.EvaluateAsync(\"4 + 8\");\r\n\tSystem.Console.WriteLine($\"Loaded assemblies: {System AppDomain.CurrentDomain.GetAssemblies().Count()}\");\r\n}\r\n```\r\n\r\nOutput:\r\n\r\n```\r\nLoaded assemblies: 49\r\nLoaded assemblies: 50\r\nLoaded assemblies: 51\r\nLoaded assemblies: 52\r\nLoaded assemblies: 53\r\nLoaded assemblies: 54\r\n...\r\n```\r\n\r\nThe scripting API **generates a new assembly for every call** that does not get unloaded, resulting in an ever-increasing number of loaded assemblies and thus in an **increasing amount of memory consumption**.\r\n\r\nThere does not appear to be a way to unload the generated assemblies since they are not collectible ([How to use and debug assembly unloadability in .NET Core](https://docs.microsoft.com/en-us/dotnet/standard/assembly/unloadability)).\r\n\r\nHow can we unload these generated assemblies?","Url":"https://github.com/dotnet/roslyn/issues/41722","RelatedDescription":"Open issue \"Every CSharpScript.EvaluateAsync() call generates a new assembly that does not get unloaded\" (#41722)"},{"Id":"565758477","IsPullRequest":true,"CreatedAt":"2020-02-15T14:54:18","Actor":"GrahamTheCoder","Number":"41721","RawContent":null,"Title":"Do not simplify VB ObjectCreationExpression initializers into inferred initializers","State":"open","Body":"* The test TestVisualBasic_DontRemovePropertyNameForObjectCreationInitializer initially failed because the binder threw an exception.\r\n  *  In fact, if you're within Visual Studio, the FailFast error handler kicks in and kills Visual Studio. I've raised that as an issue separately: https://github.com/dotnet/roslyn/issues/41724\r\n* The simplifier had tried to convert to an inferred initializer which is invalid syntax for an object creation expression.\r\n* The other test is just to show that the simplification still works correctly in a related case I didn't change in this PR.\r\n\r\nIn my ideal world, either the SyntaxFactory method, or `new ObjectCreationExpressionSyntax` would throw an exception if creating an `ObjectCreationInitializerSyntax` which either:\r\n* Isn't a `ObjectMemberInitializerSyntax`\r\n* Has an initializer which is not a `NamedFieldInitializerSyntax`\r\n\r\nIt's not immediately clear if this is possible since the file is generated from xml, so for now I've fixed the immediate issue.","Url":"https://github.com/dotnet/roslyn/pull/41721","RelatedDescription":"Open PR \"Do not simplify VB ObjectCreationExpression initializers into inferred initializers\" (#41721)"},{"Id":"565747521","IsPullRequest":true,"CreatedAt":"2020-02-15T14:28:47","Actor":"dotnet-maestro[bot]","Number":"41720","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:00c0f9e9-f204-49af-fd58-08d7a4f28342)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 00c0f9e9-f204-49af-fd58-08d7a4f28342\r\n- **Build**: 20200214.5\r\n- **Date Produced**: 2/15/2020 3:39 AM\r\n- **Commit**: 16fbdca79f86f36434b80f2bb898861759ec754b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20114.5\r\n\r\n[marker]: <> (End:00c0f9e9-f204-49af-fd58-08d7a4f28342)\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/41720","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#41720)"},{"Id":"565761382","IsPullRequest":false,"CreatedAt":"2020-02-15T14:27:07","Actor":"juliusfriedman","Number":"41723","RawContent":null,"Title":"Switch behavior change between .Net Core 3.0 and 3.1","State":"open","Body":"See the following simple repo which works under .net core 3.1 and .net core 3.0, in 3.0 it worked fine however in 3.1 I need the default case for the switch otherwise compilation fails with the message indicated.\r\n\r\n```\r\nnamespace SwitchTest\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            System.Diagnostics.Debug.Assert(SwitchTest(true) == 1);\r\n            System.Diagnostics.Debug.Assert(SwitchTest() == 0);\r\n        }\r\n\r\n        static int SwitchTest(bool input = false)\r\n        {\r\n            switch (input)\r\n            {\r\n                default://.Net Core 3.1 needs this otherwise \"Not all code paths return a value\"\r\n                case false: return 0;\r\n                case true: return 1;\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\n```","Url":"https://github.com/dotnet/roslyn/issues/41723","RelatedDescription":"Open issue \"Switch behavior change between .Net Core 3.0 and 3.1\" (#41723)"},{"Id":"565647086","IsPullRequest":true,"CreatedAt":"2020-02-15T03:02:42","Actor":"dotnet-bot","Number":"41719","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"open","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41719","RelatedDescription":"Open PR \"Merge master to features/local-function-attributes\" (#41719)"},{"Id":"565600551","IsPullRequest":true,"CreatedAt":"2020-02-15T02:47:06","Actor":"AlekseyTs","Number":"41711","RawContent":null,"Title":"Allow structures to implement nested interfaces as we do for classes.","State":"closed","Body":"Fixes #41501.","Url":"https://github.com/dotnet/roslyn/pull/41711","RelatedDescription":"Closed or merged PR \"Allow structures to implement nested interfaces as we do for classes.\" (#41711)"},{"Id":"565617045","IsPullRequest":true,"CreatedAt":"2020-02-15T01:31:28","Actor":"dotnet-bot","Number":"41715","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41715","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#41715)"},{"Id":"565617128","IsPullRequest":true,"CreatedAt":"2020-02-15T01:31:25","Actor":"dotnet-bot","Number":"41716","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41716","RelatedDescription":"Closed or merged PR \"Merge master to features/local-function-attributes\" (#41716)"},{"Id":"565633182","IsPullRequest":true,"CreatedAt":"2020-02-15T01:02:19","Actor":"sharwell","Number":"41717","RawContent":null,"Title":"Begin transition to Microsoft.CodeAnalysis.Testing","State":"open","Body":"* Add new verification helpers\r\n* Convert AddAccessibilityModifiersTests to the new test library","Url":"https://github.com/dotnet/roslyn/pull/41717","RelatedDescription":"Open PR \"Begin transition to Microsoft.CodeAnalysis.Testing\" (#41717)"},{"Id":"565614999","IsPullRequest":false,"CreatedAt":"2020-02-14T23:57:44","Actor":"uniqueiniquity","Number":"41714","RawContent":null,"Title":"Navigation bar frequently does not appear in JavaScript or TypeScript files in Visual Studio","State":"open","Body":"**Version Used**: \r\n3.6.0-1.20113.7\r\n**Steps to Reproduce**:\r\n\r\n1. Open Visual Studio 2019 and continue without code\r\n2. File -> New File -> JavaScript file\r\n3. \r\n\r\n**Expected Behavior**:\r\nNavigation bar should appear at the top of the editor.\r\n\r\n**Actual Behavior**:\r\nNo navigation bar appears.\r\n\r\nWhen debugging, seems to be due to the change introduced in #41010.","Url":"https://github.com/dotnet/roslyn/issues/41714","RelatedDescription":"Open issue \"Navigation bar frequently does not appear in JavaScript or TypeScript files in Visual Studio\" (#41714)"},{"Id":"565613851","IsPullRequest":false,"CreatedAt":"2020-02-14T23:54:48","Actor":"KirillOsenkov","Number":"41713","RawContent":null,"Title":"Diagnostics: OperationCanceledException in ExecuteSuppressionAction","State":"open","Body":"VSMac logs contain exceptions from Roslyn with this stack:\r\n\r\n```\r\nERROR [2020-02-07 15:05:15Z]: Roslyn fatal exception\r\nSystem.AggregateException: One or more errors occurred. (The operation was canceled.) ---> System.OperationCanceledException: The operation was canceled.\r\n  at System.Threading.CancellationToken.ThrowOperationCanceledException () [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2019-06/external/bockbuild/builds/mono-x64/external/corert/src/System.Private.CoreLib/shared/System/Threading/CancellationToken.cs:338 \r\n  at System.Threading.CancellationToken.ThrowIfCancellationRequested () [0x00008] in /Users/builder/jenkins/workspace/build-package-osx-mono/2019-06/external/bockbuild/builds/mono-x64/external/corert/src/System.Private.CoreLib/shared/System/Threading/CancellationToken.cs:333 \r\n  at Microsoft.CodeAnalysis.Diagnostics.AnalyzerExecutor.ExecuteSuppressionAction (Microsoft.CodeAnalysis.Diagnostics.DiagnosticSuppressor suppressor, System.Collections.Immutable.ImmutableArray`1[T] reportedDiagnostics) [0x0000a] in /_/src/Compilers/Core/Portable/DiagnosticAnalyzer/AnalyzerExecutor.cs:297 \r\n  at Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver+<>c__DisplayClass73_0.<ApplyProgrammaticSuppressionsCore>b__3 (Microsoft.CodeAnalysis.Diagnostics.DiagnosticSuppressor suppressor) [0x00000] in /_/src/Compilers/Core/Portable/DiagnosticAnalyzer/AnalyzerDriver.cs:697 \r\n  at System.Threading.Tasks.Parallel+<>c__DisplayClass44_0`2[TSource,TLocal].<PartitionerForEachWorker>b__1 (System.Collections.IEnumerator& partitionState, System.Int32 timeout, System.Boolean& replicationDelegateYieldedBeforeCompletion) [0x00103] in /Users/builder/jenkins/workspace/build-package-osx-mono/2019-06/external/bockbuild/builds/mono-x64/external/corefx/src/System.Threading.Tasks.Parallel/src/System/Threading/Tasks/Parallel.cs:3220 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n```\r\n\r\nThe fact that this is an OperationCanceledException tells me there should be a catch(OperationCanceledException) somewhere but I can't find it. How is this supposed to work? Is this benign?","Url":"https://github.com/dotnet/roslyn/issues/41713","RelatedDescription":"Open issue \"Diagnostics: OperationCanceledException in ExecuteSuppressionAction\" (#41713)"},{"Id":"565607421","IsPullRequest":true,"CreatedAt":"2020-02-14T23:34:57","Actor":"genlu","Number":"41712","RawContent":null,"Title":"Fix sorting for import completion","State":"open","Body":"Fix #41601\r\n\r\nAzDO bug: \r\nhttps://devdiv.visualstudio.com/DevDiv/_workitems/edit/1069318","Url":"https://github.com/dotnet/roslyn/pull/41712","RelatedDescription":"Open PR \"Fix sorting for import completion\" (#41712)"},{"Id":"565554505","IsPullRequest":true,"CreatedAt":"2020-02-14T22:37:13","Actor":"dotnet-bot","Number":"41708","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/41708","RelatedDescription":"Closed or merged PR \"Merge master to features/local-function-attributes\" (#41708)"},{"Id":"565580315","IsPullRequest":true,"CreatedAt":"2020-02-14T22:11:34","Actor":"chsienki","Number":"41710","RawContent":null,"Title":"Update Features/source generators to master","State":"open","Body":"Update sg feature branch to master","Url":"https://github.com/dotnet/roslyn/pull/41710","RelatedDescription":"Open PR \"Update Features/source generators to master\" (#41710)"},{"Id":"565557780","IsPullRequest":true,"CreatedAt":"2020-02-14T21:11:18","Actor":"gafter","Number":"41709","RawContent":null,"Title":"Bind expression variables appearing in a goto case statement.","State":"open","Body":"Fixes #40714","Url":"https://github.com/dotnet/roslyn/pull/41709","RelatedDescription":"Open PR \"Bind expression variables appearing in a goto case statement.\" (#41709)"},{"Id":"565545499","IsPullRequest":false,"CreatedAt":"2020-02-14T20:39:15","Actor":"vsfeedback","Number":"41707","RawContent":null,"Title":"VS 2019 Preview: closes on generic parameter rename.","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/856452/vs-2019-preview-closes-on-generic-parameter-rename-1.html)._\n\n---\n**VS 2019 Preview (16.5.0)**\n```\nnamespace ConsoleApp2\n{\n    public class TestClass\n    {\n        public abstract class StepDataBase { }\n\npublic abstract class StepBase<TStepDataBase> \n            where TStepDataBase : StepDataBase { }\n\npublic class StepDataProvider<TStep, TStepDataBase> \n            where TStep : StepBase<TStepDataBase>\n            where TStepDataBase : StepDataBase\n        { }\n\n// NOTE: When using the rename function of resharper and you change the TStepDataBase to TStepBaseExample (for example)\n        // it crashes visual studio when you enter the 'IStepBase' in the rename. I think this happens due to the fact that it is \n        // a circular reference?\n\npublic class CrashClass<TStepBase, TStepDataBase>\n            where TStepBase : StepBase<TStepDataBase>\n            where TStepDataBase : StepDataBase\n        {\n            public StepDataProvider<TStepBase, TStepDataBase> DataProvider { get; set; }\n        }\n    }\n}\n```\n1) Invoke Rename on `TStepDataBase` (line 19).\n2) Type `TStepBase`\n\n**Actual result:**\nVS closes/restarts.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 12/15/2019, 11:14 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 12/18/2019, 02:47 AM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/41707","RelatedDescription":"Open issue \"VS 2019 Preview: closes on generic parameter rename.\" (#41707)"},{"Id":"565545414","IsPullRequest":true,"CreatedAt":"2020-02-14T20:39:01","Actor":"AlekseyTs","Number":"41706","RawContent":null,"Title":"Initial support for \"Simple Programs\" feature.","State":"open","Body":"This is a punch through to support simple single file scenarios.\r\nRelated to #41704.\r\n","Url":"https://github.com/dotnet/roslyn/pull/41706","RelatedDescription":"Open PR \"Initial support for \"Simple Programs\" feature.\" (#41706)"},{"Id":"565539659","IsPullRequest":false,"CreatedAt":"2020-02-14T20:24:39","Actor":"AArnott","Number":"41705","RawContent":null,"Title":"CS8602 false positive due to inferred generic type argument being nullable","State":"open","Body":"**Version Used**: 16.6 Preview 1.0 (29813.275.master)\r\n\r\n**Steps to Reproduce**:\r\n\r\nCreate a C# project with this content:\r\n\r\n```cs\r\nusing System;\r\n\r\n#nullable enable\r\n\r\npublic class VSTHRD109AvoidAssertInAsyncMethodsCodeFix\r\n{\r\n    public void ApplyChangeOptimistically()\r\n    {\r\n        var n = new GenericParameterHelper(1);\r\n        ApplyChangeOptimistically(ref n, i => new GenericParameterHelper(i.Data + 1));\r\n        int x = n.Data;\r\n    }\r\n\r\n    public static bool ApplyChangeOptimistically<T>(ref T hotLocation, Func<T, T> applyChange)\r\n        where T : class?\r\n    {\r\n        return false;\r\n    }\r\n}\r\n\r\npublic class GenericParameterHelper\r\n{\r\n    public GenericParameterHelper(int data)\r\n    {\r\n        this.Data = data;\r\n    }\r\n\r\n    public int Data { get; set; }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nNo warnings.\r\n\r\n**Actual Behavior**:\r\n\r\nTwo CS8602 warnings where the `Data` property is consumed.\r\n\r\n![image](https://user-images.githubusercontent.com/3548/74564829-29b3e700-4f2d-11ea-84e2-19755088e328.png)\r\n\r\nThis is evidently because the inferred generic type argument is nullable:\r\n\r\n![image](https://user-images.githubusercontent.com/3548/74564863-39333000-4f2d-11ea-9a8d-a51d563abd8a.png)\r\n\r\nIf I explicitly specify the generic type argument as `GenericParameterHelper`, the compiler warnings go away. But why would C# think that `GenericParameterHelper?` was the generic type argument? Nothing was nullable anywhere. The `n` local variable is typed as `GenericParameterHelper` -- not `GenericParameterHelper?`.","Url":"https://github.com/dotnet/roslyn/issues/41705","RelatedDescription":"Open issue \"CS8602 false positive due to inferred generic type argument being nullable\" (#41705)"},{"Id":"565538620","IsPullRequest":false,"CreatedAt":"2020-02-14T20:22:23","Actor":"AlekseyTs","Number":"41704","RawContent":null,"Title":"Implement \"Simple Programs\" feature","State":"open","Body":"Proposal: https://github.com/dotnet/csharplang/blob/master/proposals/Simple-programs.md\r\nSee also https://github.com/dotnet/csharplang/issues/3117.","Url":"https://github.com/dotnet/roslyn/issues/41704","RelatedDescription":"Open issue \"Implement \"Simple Programs\" feature\" (#41704)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"565800826","IsPullRequest":true,"CreatedAt":"2020-02-15T22:28:55","Actor":"MichalStrehovsky","Number":"7987","RawContent":null,"Title":"Limit pregenerated variant interface implementations","State":"closed","Body":"By default, we pregenerate all implementations of variant interface\r\nmethods on a type - this is because we don't have a good way of tracking\r\nhow variant interfaces are used (it gets quite complex for interfaces\r\nwith multiple variant parameters).\r\n\r\nWe previously at least limited this for interfaces where the variant\r\nargument happens to be a valuetype. We can further limit this for\r\ninterfaces where the parameter is contravariant and the argument is\r\na sealed type.\r\n\r\nThis doesn't help size as much as I would have hoped (no difference\r\nfor hello world, and 500 bytes for no-reflection hello world) but\r\nmaybe it will help more somewhere.","Url":"https://github.com/dotnet/corert/pull/7987","RelatedDescription":"Closed or merged PR \"Limit pregenerated variant interface implementations\" (#7987)"},{"Id":"565793302","IsPullRequest":true,"CreatedAt":"2020-02-15T18:53:07","Actor":"MichalStrehovsky","Number":"7986","RawContent":null,"Title":"Update CoreLib from dotnet/runtime","State":"open","Body":"CoreLib sources as of commit 571f972a5b1c7821870b1111bcc64726740957df in dotnet/runtime.\r\n\r\nI've reverted changes to the common ArrayBuilder.cs because our ArrayBuilder is different from the runtime one.\r\n\r\nI've also reverted change to the common SR.cs and excluded the shared CoreLib's SR.cs from build. We need to unify those two in the runtime repo first.\r\n\r\nGoing forward, we'll need to find a way to garbage collect the Common folder because deletes in the runtime repo won't easily propagate to our repo.","Url":"https://github.com/dotnet/corert/pull/7986","RelatedDescription":"Open PR \"Update CoreLib from dotnet/runtime\" (#7986)"},{"Id":"565792255","IsPullRequest":false,"CreatedAt":"2020-02-15T18:44:56","Actor":"MichalStrehovsky","Number":"7985","RawContent":null,"Title":"Implement RhpGcPoll","State":"open","Body":"Currently implemented as a NOP.\r\n\r\nCorresponds to CORINFO_HELP_POLL_GC in CoreCLR. We might be able to steal some code from it.\r\n\r\nThere's also an ARM implementation of this available in src\\Native\\Runtime\\arm\\GcProbe.asm. That one was implemented for ProjectN, but the samantics should be the same.\r\n\r\nBecame necessary after we ingested dotnet/runtime#1772.","Url":"https://github.com/dotnet/corert/issues/7985","RelatedDescription":"Open issue \"Implement RhpGcPoll\" (#7985)"},{"Id":"565791877","IsPullRequest":false,"CreatedAt":"2020-02-15T18:41:27","Actor":"MichalStrehovsky","Number":"7984","RawContent":null,"Title":"Clean up CoreLib after MemoryMarshal.GetArrayDataReference","State":"open","Body":"We ingested dotnet/runtime#1036. The internal uses of `Array.GetRawSzArrayData()` should be cleaned up to use the new API.","Url":"https://github.com/dotnet/corert/issues/7984","RelatedDescription":"Open issue \"Clean up CoreLib after MemoryMarshal.GetArrayDataReference\" (#7984)"},{"Id":"563774158","IsPullRequest":true,"CreatedAt":"2020-02-14T15:01:49","Actor":"kant2002","Number":"7981","RawContent":null,"Title":"Document IlcSystemModule property and others","State":"closed","Body":"mentioned in #7554","Url":"https://github.com/dotnet/corert/pull/7981","RelatedDescription":"Closed or merged PR \"Document IlcSystemModule property and others\" (#7981)"},{"Id":"564893362","IsPullRequest":true,"CreatedAt":"2020-02-13T19:12:06","Actor":"yowl","Number":"7983","RawContent":null,"Title":"Wasm: upgrade to LLVM/LLVMSharp 9 and the llvm wasm backend.","State":"open","Body":"This PR moves us from the old static function LLVMSharp style to the OO style, and upgrades to the Emscripten upstream backend which is the way forward and allows us to move to LLVM 9 and it's Wasm backend.  This will allow CoreRT to compile larger Wasm projects which at the moment hit https://github.com/emscripten-core/emscripten/issues/8393\r\n\r\nSorry about the huge number of commits, I thought maybe I could squash at the point of the PR but don't see an option for that.  The contentions points are really the Native/Runtime function signature changes and https://github.com/dotnet/corert/compare/master...yowl:llvm8-gvm?expand=1#diff-1bed6054b85520e1ab53fa3a5c8f6a21.\r\n\r\nFor some background on why I've done that:\r\n\r\nhttps://gist.github.com/yowl/c143f0520fa0544d41a24bce627086fe\r\nand\r\nhttps://bugs.llvm.org/show_bug.cgi?id=44381\r\n\r\nWIP while I see what happens to the CI.","Url":"https://github.com/dotnet/corert/pull/7983","RelatedDescription":"Open PR \"Wasm: upgrade to LLVM/LLVMSharp 9 and the llvm wasm backend.\" (#7983)"},{"Id":"563770129","IsPullRequest":true,"CreatedAt":"2020-02-13T09:09:10","Actor":"kant2002","Number":"7980","RawContent":null,"Title":"Provide a way how to project work with local build","State":"closed","Body":"in additional to published packages.\r\n\r\nThis change mostly to show a way how customer can use CoreRT and made modifications when needed.\r\nLikely current users of CoreRT would be persons who can and would like to get hand dirty into CoreRT due to it's status.\r\n\r\nOther alternative is to have property `UseLocalCoreRT` which will be used to trigger local CoreRT usage.","Url":"https://github.com/dotnet/corert/pull/7980","RelatedDescription":"Closed or merged PR \"Provide a way how to project work with local build\" (#7980)"},{"Id":"564529018","IsPullRequest":true,"CreatedAt":"2020-02-13T08:53:13","Actor":"secana","Number":"7982","RawContent":null,"Title":"Add prerequisites for Fedora 31","State":"closed","Body":"Add prerequisites for Fedora 31 to compile .NET projects with CoreRT to the samples/prerequisites documentation.","Url":"https://github.com/dotnet/corert/pull/7982","RelatedDescription":"Closed or merged PR \"Add prerequisites for Fedora 31\" (#7982)"},{"Id":"561372431","IsPullRequest":true,"CreatedAt":"2020-02-12T10:49:48","Actor":"kant2002","Number":"7972","RawContent":null,"Title":"Fix NRE caused by unknown CanonTypesModule","State":"closed","Body":"See #7971\r\n\r\nI'm not sure if this is proper diagnositcs, but right now instead of NRE\r\nI have following error message\r\n```\r\nUnhandled Exception: Internal.TypeSystem.TypeSystemException+FileNotFoundException: [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: System.Private.CoreLib\r\n     at Internal.TypeSystem.ThrowHelper.ThrowFileNotFoundException(ExceptionStringID id, String fileName)\r\n     at ILCompiler.CompilerTypeSystemContext.GetModuleForSimpleName(String simpleName, Boolean throwIfNotFound)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\n```\r\nFrom now on I can understand that specific module does not found.\r\nProbably for that case should be created specific error message, but I'm not sure what this is means, so cannot make proper text.","Url":"https://github.com/dotnet/corert/pull/7972","RelatedDescription":"Closed or merged PR \"Fix NRE caused by unknown CanonTypesModule\" (#7972)"},{"Id":"562220228","IsPullRequest":true,"CreatedAt":"2020-02-12T02:14:51","Actor":"yowl","Number":"7974","RawContent":null,"Title":"Wasm: TFM to netstandard2.0 to allow upgrade of LLVMSharp","State":"closed","Body":"Changes the TFM from netstandard 1.6 to 2.0 so that we can upgrade LLVMSharp to 9.0.0-beta which supports netstandard2.0 only.  Upgrade to LLVMSharp 9 would allow upgrade to LLVM Wasm backend which is the new default in Emscripten.","Url":"https://github.com/dotnet/corert/pull/7974","RelatedDescription":"Closed or merged PR \"Wasm: TFM to netstandard2.0 to allow upgrade of LLVMSharp\" (#7974)"},{"Id":"562413407","IsPullRequest":true,"CreatedAt":"2020-02-11T09:01:36","Actor":"MichalStrehovsky","Number":"7975","RawContent":null,"Title":"Avoid creating constructed EEType for type comparison","State":"closed","Body":"Make it so that `typeof(X) == typeof(Y)` doesn't result in vtable of X and Y to be allocated.\r\n\r\nThis is actually two things: a slight refactoring of `UsageBasedMetadataManager` and the actual fix.\r\n\r\nThe refactoring:\r\n* Make it so that `UsageBasedMetadataManager` can be used as a replacement for `EmptyMetadataManager`. Empty metadata manager was generating pretty much the same outputs as usage based manager with a fully blocked policy, with the only exception being type loader templates. I'm adding a temporary workaround to keep the outputs the same. We need to think about the right logic to generate templates - then the workaround can be deleted.\r\n* We were not blocking metadata for `System.__Canon`. Fixed things up to make it so.\r\n\r\nActual fix:\r\n* Do not automatically consider LDTOKEN references from code type construction events, but ask the metadata manager.\r\n* Have metadata manager use the reflection scanner to decide whether to do the upgrade from necessary to constructed.\r\n* This extension point can potentially be outsourced to an outside component that computes reflectability.","Url":"https://github.com/dotnet/corert/pull/7975","RelatedDescription":"Closed or merged PR \"Avoid creating constructed EEType for type comparison\" (#7975)"},{"Id":"562876791","IsPullRequest":false,"CreatedAt":"2020-02-10T22:51:38","Actor":"mjsabby","Number":"7979","RawContent":null,"Title":"Stackoverflow doing WaitOneNoCheck","State":"open","Body":"`DeviceDetection.Native!S_P_CoreLib_System_Threading_Lock__TryAcquireContended\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__DeadlockAwareAcquire\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__EnsureClassConstructorRun\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__CheckStaticClassConstructionReturnThreadStaticBase\r\nDeviceDetection.Native!S_P_CoreLib_System_Threading_WaitHandle__WaitOneNoCheck\r\nDeviceDetection.Native!S_P_CoreLib_System_Threading_Lock__TryAcquireContended\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__DeadlockAwareAcquire\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__EnsureClassConstructorRun\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__CheckStaticClassConstructionReturnThreadStaticBase\r\nDeviceDetection.Native!S_P_CoreLib_System_Threading_WaitHandle__WaitOneNoCheck\r\nDeviceDetection.Native!S_P_CoreLib_System_Threading_Lock__TryAcquireContended\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__DeadlockAwareAcquire\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__EnsureClassConstructorRun\r\nDeviceDetection.Native!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__CheckStaticClassConstructionReturnThreadStaticBase\r\nDeviceDetection.Native!S_P_CoreLib_System_Threading_WaitHandle__WaitOneNoCheck\r\n`","Url":"https://github.com/dotnet/corert/issues/7979","RelatedDescription":"Open issue \"Stackoverflow doing WaitOneNoCheck\" (#7979)"},{"Id":"562433102","IsPullRequest":true,"CreatedAt":"2020-02-10T17:41:03","Actor":"kant2002","Number":"7978","RawContent":null,"Title":"Add IlcSystemModule property","State":"closed","Body":"to control which module hold basetypes.\r\n\r\nInspired by required usage\r\nfrom https://github.com/MichalStrehovsky/SeeSharpSnake/pull/13","Url":"https://github.com/dotnet/corert/pull/7978","RelatedDescription":"Closed or merged PR \"Add IlcSystemModule property\" (#7978)"},{"Id":"562413517","IsPullRequest":true,"CreatedAt":"2020-02-10T16:15:24","Actor":"MichalStrehovsky","Number":"7976","RawContent":null,"Title":"Narrow down contents of ExactMethodInstantiations table","State":"closed","Body":"We don't need to generate entries for all generic methods we compiled, just a subset.","Url":"https://github.com/dotnet/corert/pull/7976","RelatedDescription":"Closed or merged PR \"Narrow down contents of ExactMethodInstantiations table\" (#7976)"},{"Id":"562413619","IsPullRequest":true,"CreatedAt":"2020-02-10T16:14:11","Actor":"MichalStrehovsky","Number":"7977","RawContent":null,"Title":"Match `Type.operator==` with CoreCLR","State":"closed","Body":"Runtime implemented types are never equal to non-runtime implemented types.","Url":"https://github.com/dotnet/corert/pull/7977","RelatedDescription":"Closed or merged PR \"Match `Type.operator==` with CoreCLR\" (#7977)"},{"Id":"562124837","IsPullRequest":true,"CreatedAt":"2020-02-10T10:11:12","Actor":"jkotas","Number":"7973","RawContent":null,"Title":"Thread-safe EqualityCompare singleton","State":"closed","Body":"Port https://github.com/dotnet/runtime/pull/31990 to CoreRT","Url":"https://github.com/dotnet/corert/pull/7973","RelatedDescription":"Closed or merged PR \"Thread-safe EqualityCompare singleton\" (#7973)"},{"Id":"561357319","IsPullRequest":false,"CreatedAt":"2020-02-07T02:37:13","Actor":"kant2002","Number":"7969","RawContent":null,"Title":"Instructions for using locally build CoreCLR does not work anymore","State":"closed","Body":"I attempt to modify HelloWorld to use local coreclr instead of package as specified in `how-to-build-and-run-ilcompiler-in-console-shell-prompt.md`\r\n\r\nHere my project file \r\n```\r\n<Project>\r\n  <Import Project=\"$(MSBuildSDKsPath)\\Microsoft.NET.Sdk\\Sdk\\Sdk.props\" />\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n\r\n  <Import Project=\"$(MSBuildSDKsPath)\\Microsoft.NET.Sdk\\Sdk\\Sdk.targets\" />\r\n  <Import Project=\"XXX\\bin\\Windows_NT.x64.Debug\\build\\Microsoft.NETCore.Native.targets\" />\r\n</Project>\r\n```\r\n\r\nPublish process fails with following error message:\r\n```\r\nXXX\\bin\\Windows_NT.x64.Debug\\build\\Microsoft.NETCore.Native.Publish.targets(60,5): error : The PrivateSdkAssemblies ItemGroup is required for _ComputeAssembliesToCompileToNative [XXXX\\samples\\HelloWorld\\HelloWorld.csproj]\r\n```","Url":"https://github.com/dotnet/corert/issues/7969","RelatedDescription":"Closed issue \"Instructions for using locally build CoreCLR does not work anymore\" (#7969)"},{"Id":"558779960","IsPullRequest":true,"CreatedAt":"2020-02-07T02:36:58","Actor":"Suchiman","Number":"7963","RawContent":null,"Title":"Avoid having the linker generate debug symbols if turned off","State":"closed","Body":"fixes #7957","Url":"https://github.com/dotnet/corert/pull/7963","RelatedDescription":"Closed or merged PR \"Avoid having the linker generate debug symbols if turned off\" (#7963)"},{"Id":"558153699","IsPullRequest":false,"CreatedAt":"2020-02-07T02:36:57","Actor":"YumeMienai","Number":"7957","RawContent":null,"Title":"[Windows] DebugType cannot completely control whether to generate debug info","State":"closed","Body":"Arch: win-x64\r\nCompiler: RyuJIT\r\n\r\nI have set `DebugType` to `none` via the `Release` Configuration, the pdb just isn't been copied to the `publish` directory. But it still will be produced when compiling via RyuJIT in `native` directory and the application in `publish` directory also contain `IMAGE_DEBUG_DIRECTORY` which points to the pdb. I think the compile via RyuJIT should also follow `DebugType` setting to switch whether to generate debug info.\r\n\r\nPart of my project file\r\n```\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|AnyCPU'\">\r\n    <DebugType>none</DebugType>\r\n    <DebugSymbols>false</DebugSymbols>\r\n  </PropertyGroup>\r\n```\r\n","Url":"https://github.com/dotnet/corert/issues/7957","RelatedDescription":"Closed issue \"[Windows] DebugType cannot completely control whether to generate debug info\" (#7957)"},{"Id":"561363695","IsPullRequest":true,"CreatedAt":"2020-02-07T02:20:53","Actor":"kant2002","Number":"7970","RawContent":null,"Title":"Clarify that IlcPath variable is required","State":"closed","Body":"After issue #7969 add small clarifications.","Url":"https://github.com/dotnet/corert/pull/7970","RelatedDescription":"Closed or merged PR \"Clarify that IlcPath variable is required\" (#7970)"},{"Id":"561371393","IsPullRequest":false,"CreatedAt":"2020-02-07T01:45:04","Actor":"kant2002","Number":"7971","RawContent":null,"Title":"NRE during compilation","State":"open","Body":"I try to make @MichalStrehovsky SeeCharpSnake run using msbuild modifications instead of manual jiggling with command line. I'm not yet fully understand if I doing correct thing, so give me some slack for that.\r\n\r\nI made compilation of project by adding following modifications. Actually there more modifications but they are not related to CSC compilation. Essentially  add /nostdlib and /noconfig but instead of embedding `System.Object` and friends using `/runtimemetadata` (which I cannot make work with Roslyn) I leave only reference to `System.Runtime` and `System.Runtime.InteropServices`\r\n\r\n```\r\n     <PropertyGroup>\r\n <NoStdLib>true</NoStdLib>\r\n    <NoConfig>true</NoConfig>\r\n    <RuntimeMetadataVersion>v4.0.30319</RuntimeMetadataVersion>\r\n  <GenerateAssemblyInfo>false</GenerateAssemblyInfo>\r\n  </PropertyGroup>\r\n\r\n  <Target Name=\"MyBeforeCompile\" BeforeTargets=\"BeforeCompile\" AfterTargets=\"FindReferenceAssembliesForReferences\">\r\n    <Message  Text=\"ReferencePathWithRefAssemblies: @(ReferencePathWithRefAssemblies)\" />\r\n    <ItemGroup>\r\n      <ReferencePathWithRefAssemblies Remove=\"@(ReferencePathWithRefAssemblies)\"  Condition=\"'%(Filename)' != 'System.Runtime' and '%(Filename)' != 'System.Runtime.InteropServices'\"  />\r\n      <!-- <ReferencePath Remove=\"@(ReferencePath)\" /> -->\r\n    </ItemGroup>\r\n\r\n    <Message  Text=\"ReferencePathWithRefAssemblies: @(ReferencePathWithRefAssemblies)\" />\r\n  </Target>\r\n\r\n```\r\n\r\nThen I try to simplify ILC by removing all `AutoInitializedAssemblies` and `IlcReference` so 'rsp' file now looks like this:\r\n```\r\nobj\\Release\\netcoreapp3.1\\win-x64\\SeeSharpSnake.dll\r\n-o:obj\\Release\\netcoreapp3.1\\win-x64\\native\\SeeSharpSnake.obj\r\n-O\r\n-g\r\n--methodbodyfolding\r\n--Os\r\n--disablereflection\r\n--removefeature:EventSource\r\n--removefeature:FrameworkStrings\r\n--removefeature:Globalization\r\n--removefeature:SerializationGuard\r\n--removefeature:Comparers\r\n\r\n```\r\nAnd now I have exception message during ILC compilation\r\n```\r\n  Generating native code\r\nEXEC : error : Object reference not set to an instance of an object. [D:\\d\\kant\\GitHub\\SeeSharpSnake\\SeeSharpSnake.csproj]\r\n  System.NullReferenceException: Object reference not set to an instance of an object.\r\n     at ILCompiler.CompilerTypeSystemContext.GetModuleForSimpleName(String simpleName, Boolean throwIfNotFound)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\n```\r\n\r\nwhich maybe fine, since I likely hit unexpected combinations. What I want to have is better messaging in that area, so if this is some stupid combination, then it will give me at least `simpleName` which ILC expect. This sounds like simple issue to solve and it can be beneficial for newcomers","Url":"https://github.com/dotnet/corert/issues/7971","RelatedDescription":"Open issue \"NRE during compilation\" (#7971)"},{"Id":"559699531","IsPullRequest":false,"CreatedAt":"2020-02-06T22:12:32","Actor":"kant2002","Number":"7968","RawContent":null,"Title":"Build issues for samples","State":"closed","Body":"If I build any project from samples I receive `error NU1101: Unable to find package Microsoft.DotNet.ILCompiler. No packages exist with this id in source(s): nuget.org`. Which indicates that .NET Core SDK does not pickup settings from nuget.config\r\n\r\nWhen I try to troubleshoot by running `dotnet publish -r win-x64 -c release -v d` I see following\r\n```\r\n         NuGet Config files used:\r\n             .\\GitHub\\dotnet\\corert\\samples\\HelloWorld\\NuGet.Config\r\n             C:\\Users\\user\\AppData\\Roaming\\NuGet\\NuGet.Config\r\n             C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config\r\n             C:\\Program Files (x86)\\NuGet\\Config\\Xamarin.Offline.config\r\n         Feeds used:\r\n             https://api.nuget.org/v3/index.json\r\n```\r\n\r\nIf I run `dotnet restore --configfile .\\nuget.config` everything restored as expected, but I cannot run publish process as in docs, and have to resort to `dotnet publish -r win-x64 -c release --configfile .\\nuget.config`\r\n\r\nMy take on this, is shown in https://github.com/MichalStrehovsky/SeeSharpSnake/pull/10/files where I use `RestoreAdditionalPackageSources` in the project file. This seems to be serve same purpose.\r\n\r\nIf you believe that this is issue in my environment, please correct me. But I really don't know where to look at this point.","Url":"https://github.com/dotnet/corert/issues/7968","RelatedDescription":"Closed issue \"Build issues for samples\" (#7968)"},{"Id":"559369205","IsPullRequest":false,"CreatedAt":"2020-02-04T08:21:19","Actor":"kant2002","Number":"7965","RawContent":null,"Title":"Build does not working when have Preview installed","State":"closed","Body":"I have both Preview and Community installed on my PC. Preview does not have C++ tools installed. What would be good , is to be able specify which toolchain to use.","Url":"https://github.com/dotnet/corert/issues/7965","RelatedDescription":"Closed issue \"Build does not working when have Preview installed\" (#7965)"},{"Id":"559549711","IsPullRequest":true,"CreatedAt":"2020-02-04T08:07:32","Actor":"kant2002","Number":"7967","RawContent":null,"Title":"Remove confusing line about ancient tests","State":"closed","Body":"Was raised in discussion in #7966","Url":"https://github.com/dotnet/corert/pull/7967","RelatedDescription":"Closed or merged PR \"Remove confusing line about ancient tests\" (#7967)"},{"Id":"559430865","IsPullRequest":true,"CreatedAt":"2020-02-04T07:46:53","Actor":"kant2002","Number":"7966","RawContent":null,"Title":"Suggestions to prerequisite docs","State":"closed","Body":"This changes mostly driven by my confusion how to initially start docs. For sure I have to read carefully,\r\nbut I miss important pieces since they was in unexpected places\r\n- Move installing .NET Core to prerequiresite docs\r\n   Assuming this is still valid, since seems to be\r\n   build.cmd/.sh pull .NET Core SDK automatically\r\n- Highlight that Developer Command Prompt needed\r\n   and that you can select environment.\r\n\r\nThis is driven mostly by my confusion in #7965","Url":"https://github.com/dotnet/corert/pull/7966","RelatedDescription":"Closed or merged PR \"Suggestions to prerequisite docs\" (#7966)"},{"Id":"558703713","IsPullRequest":true,"CreatedAt":"2020-02-03T14:17:00","Actor":"MichalStrehovsky","Number":"7962","RawContent":null,"Title":"Get CoreRT Hello World selfcontained binary under 1 MB","State":"closed","Body":"This has actually two things. The actual fix to make self-contained CoreRT Hello World less than 1 MB, and a bunch of tools that helped me find the fix. I’ve had the tools for a while but they don’t get that much use when they only exist on my machine.\r\n\r\n## The tools\r\nI compiled an empty console app with CoreRT. I used the existing `<IlcGenerateMapFile>true</IlcGenerateMapFile>` property to create a map.xml file in the intermediate directory to lists all the things we compiled. I wondered why `DateTime` formatting is needed for an empty app.\r\n\r\nThe existing map file is good to see _what_ was generated, but not _why_ it was generated.\r\n\r\nThe compiler builds a dependency graph internally that captures the whys. There has been a switch to dump the dependency graph into an XML file for a while - it just wasn’t publicly exposed. In this pull request I’m exposing it as `<IlcGenerateDgmlFile>true</ IlcGenerateDgmlFile>`. This generates up to two dgml.xml files in the intermediate directory (two if we’re running an optimized build with the scanner - in that case, the scan.dgml.xml file tends to be more useful).\r\n\r\nThe next thing is interpreting the dependency graph. I wrote a tool for that some time ago, now I’m checking it in.\r\n\r\nThe input to the tool is the DGML file and name of a node of interest. The output is the list of reasons why that node was include.\r\n\r\nIt looks like this for the DateTime formatting case:\r\n\r\n```\r\n() S_P_CoreLib_System_DateTimeFormat__FormatHebrewMonthName\r\n  (call) S_P_CoreLib_System_DateTimeFormat__FormatCustomized\r\n    (call) S_P_CoreLib_System_DateTimeFormat__FormatStringBuilder\r\n      (call) S_P_CoreLib_System_DateTimeFormat__TryFormat_0\r\n        (call) S_P_CoreLib_System_DateTimeFormat__TryFormat\r\n          (call) S_P_CoreLib_System_DateTime__TryFormat\r\n            (reloc) unbox_S_P_CoreLib_System_DateTime__TryFormat\r\n              (Virtual method) (??_7Boxed_S_P_CoreLib_System_DateTime@@6B@ constructed, VirtualMethodUse [S.P.CoreLib]System.DateTime.TryFormat(Span`1<char>,int32&,ReadOnlySpan`1<char>,IFormatProvider))\r\n                (Primary) ??_7Boxed_S_P_CoreLib_System_DateTime@@6B@ constructed\r\n                  (ldtoken) S_P_CoreLib_System_CommonRuntimeTypes___cctor\r\n                    (reloc) S_P_CoreLib_System_CommonRuntimeTypes::__NONGCSTATICS\r\n                      (reloc) __GetGCStaticBase_S_P_CoreLib_System_CommonRuntimeTypes\r\n                        (ldsfld) S_P_CoreLib_System_CommonRuntimeTypes__get_Boolean\r\n                          (call) S_P_CoreLib_Internal_Runtime_Augments_RuntimeAugments__GetEnumUnderlyingType\r\n                            (call) S_P_DisabledReflection_Internal_Reflection_ReflectionCoreCallbacksImplementation__GetEnumInfo\r\n                              (Virtual method) (??_7S_P_DisabledReflection_Internal_Reflection_ReflectionCoreCallbacksImplementation@@6B@ constructed, VirtualMethodUse [S.P.CoreLib]Internal.Reflection.Augments.ReflectionCoreCallbacks.GetEnumInfo(Type))\r\n                                (Primary) ??_7S_P_DisabledReflection_Internal_Reflection_ReflectionCoreCallbacksImplementation@@6B@ constructed\r\n                                  (newobj) S_P_DisabledReflection_Internal_Runtime_CompilerHelpers_LibraryInitializer__InitializeLibrary\r\n                                    (call) HelloWorld__Module___StartupCodeMain\r\n                                      () Startup Code Main Method\r\n                                (Secondary) VirtualMethodUse [S.P.CoreLib]Internal.Reflection.Augments.ReflectionCoreCallbacks.GetEnumInfo(Type)\r\n                                  (callvirt) S_P_CoreLib_System_Enum__GetEnumInfo\r\n                                    (call) S_P_CoreLib_System_Enum__InternalFormat\r\n                                      (call) S_P_CoreLib_System_Enum__ToString\r\n                                        (Virtual method) (??_7S_P_CoreLib_System_Enum@@6B@ constructed, VirtualMethodUse object.ToString())\r\n                                          (Primary) ??_7S_P_CoreLib_System_Enum@@6B@ constructed\r\n                                            (reloc) ??_7Boxed_S_P_CoreLib_System_RuntimeExceptionHelpers_RhFailFastReason@@6B@ constructed\r\n                                              (callvirt) S_P_CoreLib_System_RuntimeExceptionHelpers__RuntimeFailFast\r\n                                                () Runtime export\r\n                                          (Secondary) VirtualMethodUse object.ToString()\r\n                                            (callvirt) S_P_CoreLib_System_RuntimeExceptionHelpers__RuntimeFailFast\r\n                                              () Runtime export\r\n                (Secondary) VirtualMethodUse [S.P.CoreLib]System.DateTime.TryFormat(Span`1<char>,int32&,ReadOnlySpan`1<char>,IFormatProvider)\r\n                  (Interface method) (??_7Boxed_S_P_CoreLib_System_DateTime@@6B@ constructed, VirtualMethodUse [S.P.CoreLib]System.ISpanFormattable.TryFormat(Span`1<char>,int32&,ReadOnlySpan`1<char>,IFormatProvider))\r\n                    (Primary) ??_7Boxed_S_P_CoreLib_System_DateTime@@6B@ constructed\r\n                      (ldtoken) S_P_CoreLib_System_CommonRuntimeTypes___cctor\r\n                        (reloc) S_P_CoreLib_System_CommonRuntimeTypes::__NONGCSTATICS\r\n                          (reloc) __GetGCStaticBase_S_P_CoreLib_System_CommonRuntimeTypes\r\n                            (ldsfld) S_P_CoreLib_System_CommonRuntimeTypes__get_Boolean\r\n                              (call) S_P_CoreLib_Internal_Runtime_Augments_RuntimeAugments__GetEnumUnderlyingType\r\n                                (call) S_P_DisabledReflection_Internal_Reflection_ReflectionCoreCallbacksImplementation__GetEnumInfo\r\n                                  (Virtual method) (??_7S_P_DisabledReflection_Internal_Reflection_ReflectionCoreCallbacksImplementation@@6B@ constructed, VirtualMethodUse [S.P.CoreLib]Internal.Reflection.Augments.ReflectionCoreCallbacks.GetEnumInfo(Type))\r\n                                    (Primary) ??_7S_P_DisabledReflection_Internal_Reflection_ReflectionCoreCallbacksImplementation@@6B@ constructed\r\n                                      (newobj) S_P_DisabledReflection_Internal_Runtime_CompilerHelpers_LibraryInitializer__InitializeLibrary\r\n                                        (call) HelloWorld__Module___StartupCodeMain\r\n                                          () Startup Code Main Method\r\n                                    (Secondary) VirtualMethodUse [S.P.CoreLib]Internal.Reflection.Augments.ReflectionCoreCallbacks.GetEnumInfo(Type)\r\n                                      (callvirt) S_P_CoreLib_System_Enum__GetEnumInfo\r\n                                        (call) S_P_CoreLib_System_Enum__InternalFormat\r\n                                          (call) S_P_CoreLib_System_Enum__ToString\r\n                                            (Virtual method) (??_7S_P_CoreLib_System_Enum@@6B@ constructed, VirtualMethodUse object.ToString())\r\n                                              (Primary) ??_7S_P_CoreLib_System_Enum@@6B@ constructed\r\n                                                (reloc) ??_7Boxed_S_P_CoreLib_System_RuntimeExceptionHelpers_RhFailFastReason@@6B@ constructed\r\n                                                  (callvirt) S_P_CoreLib_System_RuntimeExceptionHelpers__RuntimeFailFast\r\n                                                    () Runtime export\r\n                                              (Secondary) VirtualMethodUse object.ToString()\r\n                                                (callvirt) S_P_CoreLib_System_RuntimeExceptionHelpers__RuntimeFailFast\r\n                                                  () Runtime export\r\n                    (Secondary) VirtualMethodUse [S.P.CoreLib]System.ISpanFormattable.TryFormat(Span`1<char>,int32&,ReadOnlySpan`1<char>,IFormatProvider)\r\n                      (Interface method use) __InterfaceDispatchCell_S_P_CoreLib_System_ISpanFormattable__TryFormat\r\n                        (callvirt) S_P_CoreLib_System_Text_ValueStringBuilder__AppendFormatHelper\r\n                          (call) String__FormatHelper\r\n                            (call) String__Format_1\r\n                              (call) S_P_CoreLib_System_RuntimeExceptionHelpers__RuntimeFailFast\r\n                                () Runtime export\r\n```\r\n\r\nThe reason boils down to pretty much this:\r\n\r\nThe `CommonRuntimeTypes` class has a `typeof` reference to `DateTime`. This means the compiler needs to assume `DateTime` was boxed (we don’t do precise analysis of what happened to the `typeof` and one might just pass the result of the `typeof` to `FormatterServices.GetUninitializedObject` or reflection, which means an instance of the type could get allocated even without an explicit box anywhere in the code).\r\n\r\nOkay, so `DateTime` is considered boxed, what’s the big deal?\r\n\r\nThe reason number 2 (\"Secondary\") listed in the dump is that `ISpanFormattable.TryFormat` is called somewhere. Since `DateTime` implements `ISpanFormattable`, we need to generate the implementations for that because bad things would happen at runtime if someone called `ISpanFormattable` methods on the boxed `DateTime` and we don’t have the code for that.\r\n\r\n## The fix\r\n\r\nTo break this kind of dependency (virtual/interface method call), we need to break one of the two reasons - either get rid of the object allocation, or get rid of the interface call.\r\n\r\nGetting rid of the allocation is pretty straightforward - don’t reference `DateTime` from the `CommonRuntimeTypes` class. That type is used in codepaths that are more rare.\r\n\r\nMakes the AOT compiled empty program go from 1,113,600 bytes to 962,560 bytes.\r\n","Url":"https://github.com/dotnet/corert/pull/7962","RelatedDescription":"Closed or merged PR \"Get CoreRT Hello World selfcontained binary under 1 MB\" (#7962)"},{"Id":"558702617","IsPullRequest":true,"CreatedAt":"2020-02-03T08:56:02","Actor":"MichalStrehovsky","Number":"7961","RawContent":null,"Title":"Add option to disable printing unhandled exceptions to console","State":"closed","Body":"Saves another 100 kB of code in a minimal app.\r\n\r\nMostly helps removing noise in finding big things. I don't expect people to use this which is why it's an Advanced option.\r\n\r\nWe might still want to do something like this for non-console apps though.","Url":"https://github.com/dotnet/corert/pull/7961","RelatedDescription":"Closed or merged PR \"Add option to disable printing unhandled exceptions to console\" (#7961)"},{"Id":"558702451","IsPullRequest":true,"CreatedAt":"2020-02-03T08:55:10","Actor":"MichalStrehovsky","Number":"7960","RawContent":null,"Title":"Make code to support arrays smaller","State":"closed","Body":"Saves a couple hundred bytes per array type. Less code that is specific per each array = savings.","Url":"https://github.com/dotnet/corert/pull/7960","RelatedDescription":"Closed or merged PR \"Make code to support arrays smaller\" (#7960)"},{"Id":"558815916","IsPullRequest":true,"CreatedAt":"2020-02-03T08:49:06","Actor":"jkotas","Number":"7964","RawContent":null,"Title":"Cleanup logic for setting g_heap_type for runtime without server GC","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7964","RelatedDescription":"Closed or merged PR \"Cleanup logic for setting g_heap_type for runtime without server GC\" (#7964)"},{"Id":"558533653","IsPullRequest":true,"CreatedAt":"2020-02-01T16:11:28","Actor":"Suchiman","Number":"7958","RawContent":null,"Title":"Upgrade DependencyGraph Viewer to .NET Core","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7958","RelatedDescription":"Closed or merged PR \"Upgrade DependencyGraph Viewer to .NET Core\" (#7958)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"563444539","IsPullRequest":false,"CreatedAt":"2020-02-15T19:45:19","Actor":"raymens","Number":"10628","RawContent":null,"Title":"3.1.200-preview-014883 crashes on restoring (newly created) fsharp project","State":"closed","Body":"Restoring a project fails with the following error `NuGet.targets(124,5): error : '{{FSharpCoreShippedPackageVersion}}' is not a valid version string.`. using the `3.1.200-preview-014883` SDK.\r\n\r\nForcing the SDK to 3.1.101 using `global.json` fixes the issue.\r\n\r\n# Steps to reproduce\r\n\r\n```\r\nPS C:\\Workspace> dotnet new console -lang F# -n SdkErrorSample\r\nThe template \"Console Application\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on SdkErrorSample\\SdkErrorSample.fsproj...\r\nC:\\Program Files\\dotnet\\sdk\\3.1.200-preview-014883\\NuGet.targets(124,5): error : '{{FSharpCoreShippedPackageVersion}}' is not a valid version string. [C:\\Workspace\\SdkErrorSample\\SdkErrorSample.fsproj]\r\n\r\nRestore failed.\r\nPost action failed.\r\nDescription: Restore NuGet packages required by this project.\r\nManual instructions: Run 'dotnet restore'\r\n\r\nPS C:\\Workspace> cd .\\SdkErrorSample\\\r\nPS C:\\Workspace\\SdkErrorSample> dotnet restore\r\nC:\\Program Files\\dotnet\\sdk\\3.1.200-preview-014883\\NuGet.targets(124,5): error : '{{FSharpCoreShippedPackageVersion}}' is not a valid version string. [C:\\Workspace\\SdkErrorSample\\SdkErrorSample.fsproj]\r\nPS C:\\Workspace\\SdkErrorSample>\r\n```","Url":"https://github.com/dotnet/sdk/issues/10628","RelatedDescription":"Closed issue \"3.1.200-preview-014883 crashes on restoring (newly created) fsharp project\" (#10628)"},{"Id":"565745159","IsPullRequest":true,"CreatedAt":"2020-02-15T16:12:05","Actor":"dotnet-maestro[bot]","Number":"10655","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: daa187e0-7e60-4c7a-c1ac-08d6354da8a8\r\n- **Build**: 20200214.5\r\n- **Date Produced**: 2/15/2020 3:39 AM\r\n- **Commit**: 16fbdca79f86f36434b80f2bb898861759ec754b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20114.5\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.20114.5\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10655","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#10655)"},{"Id":"565747205","IsPullRequest":true,"CreatedAt":"2020-02-15T13:20:24","Actor":"dotnet-maestro[bot]","Number":"10656","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20200214.8\r\n- **Date Produced**: 2/15/2020 5:45 AM\r\n- **Commit**: 83e30cc0e6fce7972539b33b5d1e46b44b9a26a9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-preview.1.20114.8\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10656","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/runtime\" (#10656)"},{"Id":"565703376","IsPullRequest":false,"CreatedAt":"2020-02-15T06:03:46","Actor":"Tzadiko","Number":"10654","RawContent":null,"Title":"Dotnet Build Hangs When Building from Cloned Reepo","State":"open","Body":"**Issue**\r\n\r\nI downloaded the dotnet-sdk on Linux via `snap install dotnet-sdk`. After I clone my Repo into my virtual machine to run my [app](https://github.com/Tzadiko/Princess-DiscordBot), I run `dotnet build`.\r\n\r\nFor some reason, the application hangs.\r\n\r\n![image](https://user-images.githubusercontent.com/44016383/74582766-08371780-4f8e-11ea-839d-071d2e3ae183.png)\r\n \r\n**Environment**\r\n\r\n1 GB Memory / 25 GB Disk / NYC3 - Ubuntu 18.04.3 (LTS) x64\r\n\r\n**Dotnet Info**\r\n\r\n![image](https://user-images.githubusercontent.com/44016383/74582826-b9d64880-4f8e-11ea-8642-bc70b1247fc8.png)\r\n\r\n**Steps to Reproduce**\r\n\r\n1. Clone the following [repo](https://github.com/Tzadiko/Princess-DiscordBot).\r\n2. Run `dotnet build` in the `src` folder\r\n\r\nOn my desktop, this app builds just fine. I'm not sure what else I can include here to help one replicate this issue. ","Url":"https://github.com/dotnet/sdk/issues/10654","RelatedDescription":"Open issue \"Dotnet Build Hangs When Building from Cloned Reepo\" (#10654)"},{"Id":"565600611","IsPullRequest":true,"CreatedAt":"2020-02-14T23:13:37","Actor":"sfoslund","Number":"10652","RawContent":null,"Title":"Remove stack dump on dotnet -d","State":"open","Body":"Fixes #4104 \r\n@wli3 has already looked at these changes [here](https://github.com/dotnet/toolset/compare/master...sfoslund:Dotnet-dDump) before the repo merge.","Url":"https://github.com/dotnet/sdk/pull/10652","RelatedDescription":"Open PR \"Remove stack dump on dotnet -d\" (#10652)"},{"Id":"565535431","IsPullRequest":true,"CreatedAt":"2020-02-14T20:15:12","Actor":"dotnet-maestro[bot]","Number":"10651","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: e0b7e874-2dc6-462b-dd42-08d72a4caef5\r\n- **Build**: 20200214.3\r\n- **Date Produced**: 2/15/2020 12:23 AM\r\n- **Commit**: 8ac9495536a53010b68b4deabe27844afcdd8c20\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.3\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10651","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#10651)"},{"Id":"565532955","IsPullRequest":false,"CreatedAt":"2020-02-14T20:09:45","Actor":"RehanSaeed","Number":"10650","RawContent":null,"Title":"dotnet-install.sh Fails When global.json Contains rollForward=latestMajor","State":"open","Body":"When I add the `rollForward` property to my `global.json` file like so:\r\n\r\n```json\r\n{\r\n  \"sdk\": {\r\n    \"version\": \"3.1.100\",\r\n    \"rollForward\": \"latestMajor\"\r\n  }\r\n}\r\n```\r\n\r\nMy MacOS build fails with the following error:\r\n\r\n```\r\ndotnet-install:(B Downloading link: https://dotnetcli.azureedge.net/dotnet/Sdk/3.1.100rollForward:latestMajor/dotnet-sdk-3.1.100rollForward:latestMajor-osx-x64.tar.gz\r\ncurl: (22) The requested URL returned error: 404 \r\ndotnet-install:(B Cannot download: https://dotnetcli.azureedge.net/dotnet/Sdk/3.1.100rollForward:latestMajor/dotnet-sdk-3.1.100rollForward:latestMajor-osx-x64.tar.gz\r\ndotnet-install:(B Downloading legacy link: https://dotnetcli.azureedge.net/dotnet/Sdk/3.1.100rollForward:latestMajor/dotnet-dev-osx-x64.3.1.100rollForward:latestMajor.tar.gz\r\ncurl: (22) The requested URL returned error: 404 \r\ndotnet-install:(B Cannot download: https://dotnetcli.azureedge.net/dotnet/Sdk/3.1.100rollForward:latestMajor/dotnet-dev-osx-x64.3.1.100rollForward:latestMajor.tar.gz\r\ndotnet_install: Error: Could not find/download: `.NET Core SDK` with version = 3.1.100rollForward:latestMajor(B\r\ndotnet_install: Error: Refer to: https://aka.ms/dotnet-os-lifecycle for information on .NET Core support(B\r\nCommand exited with code 1\r\n```\r\n\r\nMy Ubuntu 18.04 build fails with the following error:\r\n\r\n```\r\ndotnet_install: Warning: Unable to locate zlib. Probable prerequisite missing; install zlib.(B\r\ndotnet-install:(B Downloading link: https://dotnetcli.azureedge.net/dotnet/Sdk/3.1.100rollForward:latestMajor/dotnet-sdk-3.1.100rollForward:latestMajor-linux-x64.tar.gz\r\ncurl: (22) The requested URL returned error: 404 \r\ndotnet-install:(B Cannot download: https://dotnetcli.azureedge.net/dotnet/Sdk/3.1.100rollForward:latestMajor/dotnet-sdk-3.1.100rollForward:latestMajor-linux-x64.tar.gz\r\ndotnet-install:(B Downloading legacy link: https://dotnetcli.azureedge.net/dotnet/Sdk/3.1.100rollForward:latestMajor/dotnet-dev-ubuntu.18.04-x64.3.1.100rollForward:latestMajor.tar.gz\r\ncurl: (22) The requested URL returned error: 404 \r\ndotnet-install:(B Cannot download: https://dotnetcli.azureedge.net/dotnet/Sdk/3.1.100rollForward:latestMajor/dotnet-dev-ubuntu.18.04-x64.3.1.100rollForward:latestMajor.tar.gz\r\ndotnet_install: Error: Could not find/download: `.NET Core SDK` with version = 3.1.100rollForward:latestMajor(B\r\ndotnet_install: Error: Refer to: https://aka.ms/dotnet-os-lifecycle for information on .NET Core support(B\r\nCommand exited with code 1\r\n```\r\n\r\nYou can find my AppVeyor build [here](https://ci.appveyor.com/project/RehanSaeed/schema-net/builds/30809226) and GitHub PR [here](https://github.com/RehanSaeed/Schema.NET/pull/138). My full PowerShell Core script:\r\n\r\n```powershell\r\nif ($isLinux) {\r\n  sudo apt update\r\n  sudo apt install -y zlib1g apt-transport-https\r\n} else {\r\n  brew update\r\n  brew install mono\r\n  brew install mono-libgdiplus\r\n  $env:TERM = 'xterm'\r\n}\r\n\r\nInvoke-WebRequest \"https://dot.net/v1/dotnet-install.sh\" -OutFile \"./dotnet-install.sh\";\r\nchmod u+x dotnet-install.sh\r\n./dotnet-install.sh --jsonfile global.json\r\n```","Url":"https://github.com/dotnet/sdk/issues/10650","RelatedDescription":"Open issue \"dotnet-install.sh Fails When global.json Contains rollForward=latestMajor\" (#10650)"},{"Id":"565027927","IsPullRequest":true,"CreatedAt":"2020-02-14T19:10:59","Actor":"dotnet-maestro[bot]","Number":"10646","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7\r\n- **Build**: 20200213.5\r\n- **Date Produced**: 2/13/2020 9:34 PM\r\n- **Commit**: 15f00efd583eab4372b2e9ca25bd80ace5b119ad\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.20113.5\r\n\r\n[marker]: <> (End:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10646","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#10646)"},{"Id":"565502133","IsPullRequest":false,"CreatedAt":"2020-02-14T19:06:32","Actor":"michaelveloz","Number":"10649","RawContent":null,"Title":"dotnet run looping inifitely","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/issues/10649","RelatedDescription":"Closed issue \"dotnet run looping inifitely\" (#10649)"},{"Id":"565033675","IsPullRequest":true,"CreatedAt":"2020-02-14T16:53:15","Actor":"dsplaisted","Number":"10647","RawContent":null,"Title":"Update branding to 3.1.103","State":"closed","Body":"@mmitche @nguerrera ","Url":"https://github.com/dotnet/sdk/pull/10647","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.103\" (#10647)"},{"Id":"564682132","IsPullRequest":true,"CreatedAt":"2020-02-14T16:18:59","Actor":"dotnet-maestro[bot]","Number":"10640","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20200213.7\r\n- **Date Produced**: 2/14/2020 9:51 AM\r\n- **Commit**: 0f3f8e1930c28b67f29990126bc2e8527e959a2e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-preview.1.20113.7\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10640","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#10640)"},{"Id":"564667352","IsPullRequest":true,"CreatedAt":"2020-02-14T15:51:24","Actor":"dotnet-maestro[bot]","Number":"10639","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: daa187e0-7e60-4c7a-c1ac-08d6354da8a8\r\n- **Build**: 20200213.6\r\n- **Date Produced**: 2/13/2020 9:22 PM\r\n- **Commit**: ba6bfb25914e3434264352dd24ba00b406d23393\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20113.6\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.20113.6\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10639","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#10639)"},{"Id":"565352043","IsPullRequest":false,"CreatedAt":"2020-02-14T14:14:08","Actor":"mthalman","Number":"10648","RawContent":null,"Title":"Support RUN command to avoid ambiguous error","State":"open","Body":"In environments where only the runtime is installed, the command to run an application is `dotnet <application-path-dll>`.  If the user gets that path wrong, they end up with this unhelpful error message:\r\n\r\n```\r\nIt was not possible to find any installed .NET Core SDKs\r\nDid you mean to run .NET Core SDK commands? Install a .NET Core SDK from:\r\n    https://aka.ms/dotnet-download\r\n```\r\n\r\nThis error does not indicate at all what the problem is.  Even worse, it leads the user down the wrong path, thinking there's a problem in their host environment.\r\n\r\nWe've seen this confusion show up frequently in the Docker space when people are authoring their Dockerfiles that use this `dotnet <application-path-dll>` command.  If they misspell the filename or mess up the folder path, they run into this error.  Here is just one recent example: https://stackoverflow.com/questions/60189222/failes-to-start-docker-container-with-dotnet-3-1.\r\n\r\nMy suggestion is to support an explicit `RUN` command that resolves any ambiguity as to what the meaning of the subsequent text is: it is the path to the file.  If the path is not found, then a much better error message can be provided.\r\n\r\nIn the case of Docker, this would allow us to provide sample Dockerfiles that make use of this command, leading the user to a better experience when they get the path wrong.\r\n\r\nSo we could use this:\r\n```Dockerfile\r\nENTRYPOINT [\"dotnet\", \"run\", \"dotnetapp.dll\"]\r\n```\r\nInstead of this:\r\n```Dockerfile\r\nENTRYPOINT [\"dotnet\", \"dotnetapp.dll\"]\r\n```","Url":"https://github.com/dotnet/sdk/issues/10648","RelatedDescription":"Open issue \"Support RUN command to avoid ambiguous error\" (#10648)"},{"Id":"565023261","IsPullRequest":true,"CreatedAt":"2020-02-14T01:37:09","Actor":"dotnet-maestro[bot]","Number":"10645","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fdee9669-2308-4505-9018-08d76d41c6c3)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: fdee9669-2308-4505-9018-08d76d41c6c3\r\n- **Build**: 20200213.5\r\n- **Date Produced**: 2/13/2020 9:34 PM\r\n- **Commit**: 15f00efd583eab4372b2e9ca25bd80ace5b119ad\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.20113.5\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.20113.5\r\n\r\n[marker]: <> (End:fdee9669-2308-4505-9018-08d76d41c6c3)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10645","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/arcade\" (#10645)"},{"Id":"565015798","IsPullRequest":false,"CreatedAt":"2020-02-13T23:43:27","Actor":"wli3","Number":"10644","RawContent":null,"Title":"help for local tools cannot lead to a successful path","State":"open","Body":"If I heard `dotnet tool install -g my.test.tool` command before. I discovered `--local` option by just running `dotnet tool install my.test.tool`\r\n\r\nhowever, if I type `dotnet tool install my.test.tool` I will hit the error\r\n\r\n```\r\nλ dotnet tool install my.test.tool\r\nCannot find a manifest file.\r\nFor a list of locations searched, specify the \"-d\" option before the tool name.\r\nIf you intended to install a global tool, add `--global` to the command.\r\nIf you would like to create a manifest, use `dotnet new tool-manifest`, usually in the repo root directory.\r\n```\r\n\r\n-d is the first option. I append -d to the end naturally. It will hit\r\n\r\n```\r\nλ dotnet tool install my.test.tool -d\r\nUnrecognized command or argument '-d'\r\nUsage: dotnet tool install [options] <PACKAGE_ID>\r\n```\r\n\r\nThis should be a [bug](https://github.com/dotnet/sdk/issues/10643).\r\n\r\nAnd then it is not clear what is \"a manifest\". And why a \"manifest\" is required. So I won't end up typing `dotnet new tool-manifest`, which is the right command going forward.","Url":"https://github.com/dotnet/sdk/issues/10644","RelatedDescription":"Open issue \"help for local tools cannot lead to a successful path\" (#10644)"},{"Id":"565015305","IsPullRequest":false,"CreatedAt":"2020-02-13T23:41:57","Actor":"wli3","Number":"10643","RawContent":null,"Title":"-d info need to be ordered","State":"open","Body":"`dotnet tool install my.test.tool -d` does not work. Need to be `dotnet -d tool install my.test.tool `","Url":"https://github.com/dotnet/sdk/issues/10643","RelatedDescription":"Open issue \"-d info need to be ordered\" (#10643)"},{"Id":"564992541","IsPullRequest":false,"CreatedAt":"2020-02-13T22:39:44","Actor":"lostmsu","Number":"10642","RawContent":null,"Title":"dotnet pack succeedes when Roslyn analyzer emits error","State":"open","Body":"When project uses Roslyn analyzer, which emits error, `dotnet build` fails, but `dotnet pack` succeeds.\r\n\r\n```xml\r\n<PackageReference Include=\"NonCopyableAnalyzer\" Version=\"0.5.1\">\r\n  <PrivateAssets>all</PrivateAssets>\r\n  <IncludeAssets>runtime; build; native; contentfiles;\r\n    analyzers; buildtransitive</IncludeAssets>\r\n</PackageReference>\r\n```\r\n\r\n```csharp\r\n[AttributeUsage(AttributeTargets.Struct)]\r\nclass NonCopyableAttribute : Attribute { }\r\n[NonCopyable]\r\nstruct DoNotCopy{}\r\n\r\nvoid Do() {\r\n  var noCopy = new DoNotCopy();\r\n  var copy = noCopy; // <- this produces error in `dotnet build`, but not with `dotnet pack`\r\n}\r\n```","Url":"https://github.com/dotnet/sdk/issues/10642","RelatedDescription":"Open issue \"dotnet pack succeedes when Roslyn analyzer emits error\" (#10642)"},{"Id":"564849807","IsPullRequest":false,"CreatedAt":"2020-02-13T17:47:18","Actor":"GerjanOnline","Number":"10641","RawContent":null,"Title":"Idea: .dotnet file","State":"open","Body":"I think I have a great idea. Sorry for the brief description but I just came up with it and want to write it down quickly.\r\n\r\nI think dotnet should use a hierarchical `.dotnet` config file to store certain defaults and other configuration options, just like git.\r\n\r\nSo it should also have different scopes/levels:\r\n- System (`%ProgramFiles%/dotnet/.dotnet`), next to the driver `dotnet.exe`\r\n- User (`%userprofile%/.dotnet`)\r\n- Folders (`myrepo/.dotnet`) and subfolders\r\n\r\nThis way you can \"fix\" a lot of \"problems\", some of them:\r\n- Remove the global.json, which I think is ugly \r\n- Put the sdk in `.dotnet`\r\n- Put the default language in here (C#/F#) #4224 \r\n- You can store nuget info here (sources?)\r\n- Maybe info about templates\r\n\r\nFile name candidates\r\n- .dotnet\r\n- .dotnetconfig\r\n- .dotnetrc\r\n- .netconfig\r\n\r\nThe dotnet cli should be able to manipulate this file with `dotnet config`, again: same like git\r\n","Url":"https://github.com/dotnet/sdk/issues/10641","RelatedDescription":"Open issue \"Idea: .dotnet file\" (#10641)"},{"Id":"564618584","IsPullRequest":false,"CreatedAt":"2020-02-13T11:24:47","Actor":"urbanecm","Number":"10638","RawContent":null,"Title":"Dotnet build is stuck","State":"open","Body":"Hello, I've encouraged a weird issue - dotnet build is just stuck forever. I've disucssed the idea at dotnet/cli gitter channel, see https://gitter.im/dotnet/cli?at=5e3db126f3718e705deb7c3f and following. \r\n\r\n# How to reproduce?\r\n```\r\nurbanecm@titanium  ~/tmp\r\n$ ps ux | grep dotnet\r\nurbanecm 1010806  0.0  0.0  13056   804 pts/5    S+   11:22   0:00 grep --color=auto dotnet\r\nurbanecm@titanium  ~/tmp\r\n$ mkdir foo\r\nurbanecm@titanium  ~/tmp\r\n$ cd foo\r\nurbanecm@titanium  ~/tmp/foo\r\n$ dotnet new console\r\nThe template \"Console Application\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on /home/urbanecm/tmp/foo/foo.csproj...\r\n[is stuck]\r\n^C\r\nurbanecm@titanium  ~/tmp/foo\r\n$ ps ux | grep dotnet\r\nurbanecm 1010875  0.0  1.4 3691804 61088 pts/5   SLl  11:22   0:01 dotnet exec /usr/share/dotnet/sdk/2.2.402/MSBuild.dll -maxcpucount -verbosity:m -nologo -target:Restore /home/urbanecm/tmp/foo/foo.csproj -distr\r\nibutedlogger:Microsoft.DotNet.Tools.MSBuild.MSBuildLogger,/usr/share/dotnet/sdk/2.2.402/dotnet.dll*Microsoft.DotNet.Tools.MSBuild.MSBuildForwardingLogger,/usr/share/dotnet/sdk/2.2.402/dotnet.dll\r\nurbanecm 1010940  0.0  0.0  13056   832 pts/5    S+   11:23   0:00 grep --color=auto dotnet\r\nurbanecm@titanium  ~/tmp/foo\r\n$ kill -9 1010875\r\nurbanecm@titanium  ~/tmp/foo\r\n$ dotnet build\r\nMicrosoft (R) Build Engine version 16.2.32702+c4012a063 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n[stuck as well]\r\n^CAttempting to cancel the build...\r\n\r\nurbanecm@titanium  ~/tmp/foo\r\n$ ps ux | grep dotnet\r\nurbanecm 1010985  0.0  1.3 3494904 58296 pts/5   SLl  11:23   0:01 dotnet exec /usr/share/dotnet/sdk/2.2.402/MSBuild.dll -maxcpucount -verbosity:m -restore -consoleloggerparameters:Summary -target:Build -distrib\r\nutedlogger:Microsoft.DotNet.Tools.MSBuild.MSBuildLogger,/usr/share/dotnet/sdk/2.2.402/dotnet.dll*Microsoft.DotNet.Tools.MSBuild.MSBuildForwardingLogger,/usr/share/dotnet/sdk/2.2.402/dotnet.dll\r\nurbanecm 1011039  0.0  0.0  13056   780 pts/5    S+   11:23   0:00 grep --color=auto dotnet\r\nurbanecm@titanium  ~/tmp/foo\r\n$ kill -9 1010985\r\nurbanecm@titanium  ~/tmp/foo\r\n$\r\n```\r\n\r\nHowever, I can't reproduce this at every system I have access to - but I can reproduce at more than one system. \r\n\r\nI would appreciate any guidance in this problem.\r\n\r\n# OS info\r\n\r\n```\r\nurbanecm@titanium  ~/tmp/foo\r\n$ uname -r\r\n5.4.18\r\nurbanecm@titanium  ~/tmp/foo\r\n$ cat /etc/os-release\r\nNAME=\"Ubuntu\"\r\nVERSION=\"16.04.6 LTS (Xenial Xerus)\"\r\nID=ubuntu\r\nID_LIKE=debian\r\nPRETTY_NAME=\"Ubuntu 16.04.6 LTS\"\r\nVERSION_ID=\"16.04\"\r\nHOME_URL=\"http://www.ubuntu.com/\"\r\nSUPPORT_URL=\"http://help.ubuntu.com/\"\r\nBUG_REPORT_URL=\"http://bugs.launchpad.net/ubuntu/\"\r\nVERSION_CODENAME=xenial\r\nUBUNTU_CODENAME=xenial\r\nurbanecm@titanium  ~/tmp/foo\r\n$\r\n```","Url":"https://github.com/dotnet/sdk/issues/10638","RelatedDescription":"Open issue \"Dotnet build is stuck\" (#10638)"},{"Id":"565702948","IsPullRequest":false,"CreatedAt":"2020-02-13T09:33:21","Actor":"trondhindenes","Number":"10653","RawContent":null,"Title":"dotnet new --help is incorrect","State":"open","Body":"# Issue Title\r\ndotnet new --help is incorrect\r\n\r\n# General\r\nwhen running `dotnet new --help`, this is printed:\r\n`Usage: new [options]`.   \r\nHowever, the actual template name isnt an option according to the options list, so the correct help string would be:   \r\n`Usage: new [options] <template>`\r\n","Url":"https://github.com/dotnet/sdk/issues/10653","RelatedDescription":"Open issue \"dotnet new --help is incorrect\" (#10653)"},{"Id":"564235256","IsPullRequest":true,"CreatedAt":"2020-02-12T22:43:14","Actor":"dsplaisted","Number":"10635","RawContent":null,"Title":"Don't set empty DOTNET_CLI_HOME path","State":"closed","Body":"Should hopefully fix failing tests in dotnet/core-sdk","Url":"https://github.com/dotnet/sdk/pull/10635","RelatedDescription":"Closed or merged PR \"Don't set empty DOTNET_CLI_HOME path\" (#10635)"},{"Id":"563575197","IsPullRequest":false,"CreatedAt":"2020-02-12T21:44:36","Actor":"wli3","Number":"10631","RawContent":null,"Title":"dotnet-install -Channel 3.1 -Runtime aspnetcore fail","State":"closed","Body":"AspNetCore's 'latest.version' is like this:\r\n3.1.1\r\na1388f194c30cb21b36b75982962cb5e35954e4e\r\n\r\nRuntime's is like this:\r\na1388f194c30cb21b36b75982962cb5e35954e4e\r\n3.1.1\r\n\r\ndotnet-install assumes the last line is the version: https://github.com/dotnet/sdk/blob/0e105528b3b5fa3d9c509a336fdafd92e464f764/scripts/obtain/dotnet-install.ps1#L180-L189    \r\n","Url":"https://github.com/dotnet/sdk/issues/10631","RelatedDescription":"Closed issue \"dotnet-install -Channel 3.1 -Runtime aspnetcore fail\" (#10631)"},{"Id":"564244937","IsPullRequest":false,"CreatedAt":"2020-02-12T20:17:12","Actor":"wtgodbe","Number":"10636","RawContent":null,"Title":"dotnet-install breaks if \"latest.version\" file is malformed","State":"open","Body":"Currently, `dotnet-install.ps1` assumes that the `latest.version` file will be in a specific format - the first line will be a SHA, the second line will be a version: https://github.com/dotnet/sdk/blob/0e105528b3b5fa3d9c509a336fdafd92e464f764/scripts/obtain/dotnet-install.ps1#L180-L189. These `latest.version` files are currently generated manually, and thus are prone to human error. If the files are uploaded in an incorrect format (e.g. in 3.1.1, the aspnetcore file had the 2 lines in the wrong order), dotnet-install will try to download a runtime blob that doesn't exist. We should harden the script to be smarter about determining which line is a SHA, and which is a version, so that it can handle malformed `latest.version` files. This will go away if/when those files get generated automatically, but I'm not sure what the status is of that.\r\n\r\nCC @dsplaisted @wli3 @vivmishra @leecow \r\n\r\nRelated: https://github.com/dotnet/aspnetcore-internal/issues/3492","Url":"https://github.com/dotnet/sdk/issues/10636","RelatedDescription":"Open issue \"dotnet-install breaks if \"latest.version\" file is malformed\" (#10636)"},{"Id":"563984891","IsPullRequest":true,"CreatedAt":"2020-02-12T16:02:17","Actor":"dotnet-maestro[bot]","Number":"10633","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: daa187e0-7e60-4c7a-c1ac-08d6354da8a8\r\n- **Build**: 20200211.11\r\n- **Date Produced**: 2/12/2020 12:37 AM\r\n- **Commit**: 998b715ed1fbb966437345a1996af64e22c83368\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20111.11\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20111.11\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.20111.11\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10633","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#10633)"},{"Id":"563998493","IsPullRequest":true,"CreatedAt":"2020-02-12T15:46:52","Actor":"dotnet-maestro[bot]","Number":"10634","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: ea219f43-0754-4d2f-576e-08d76e1d56cb\r\n- **Build**: 20200212.1\r\n- **Date Produced**: 2/12/2020 10:37 AM\r\n- **Commit**: 673635654c20e5eee329945c58058855bcc24340\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha.1.20112.1\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/10634","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#10634)"},{"Id":"564253955","IsPullRequest":false,"CreatedAt":"2020-02-12T08:10:19","Actor":"joacar","Number":"10637","RawContent":null,"Title":"Uninstall template by folder in Git bash doesn't work","State":"open","Body":"Hi\r\n\r\n**Issue**\r\nCan't uninstall template in Git Bash by specific folder location to installed template.\r\n\r\nI tried to uninstall template installed from **folder path**  using Git Bash but get that the template doesn't exists and it prints the path Windows style. Changing to `dotnet new -u C:\\path\\to\\component` correctly uninstalls the template. Installation works fine with *nix path style `dotnet new -i | pwd`\r\n\r\nI can happily update existing documents if you point me in the right direction.\r\n\r\nThanks\r\n\r\n## Info\r\nGit Bash: 2.25.0.windows.1\r\ndotnet --version: 3.1.101\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/10637","RelatedDescription":"Open issue \"Uninstall template by folder in Git bash doesn't work\" (#10637)"},{"Id":"563622647","IsPullRequest":true,"CreatedAt":"2020-02-12T07:17:45","Actor":"dsplaisted","Number":"10632","RawContent":null,"Title":"Add files to sign check exclusion list","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/10632","RelatedDescription":"Closed or merged PR \"Add files to sign check exclusion list\" (#10632)"},{"Id":"563489170","IsPullRequest":false,"CreatedAt":"2020-02-11T21:28:23","Actor":"Xarkam","Number":"10630","RawContent":null,"Title":"Cannot repair SDK 3.1.101","State":"open","Body":"Hello, I tried to repair my sdk but the installer fail:\r\n![image](https://user-images.githubusercontent.com/331816/74280732-6610f880-4d1d-11ea-9680-49d970d62e51.png)\r\nThe dialog say: The specified account already exist\r\n\r\nLog:\r\n```\r\n[26B4:2554][2020-02-11T22:21:49]i001: Burn v3.10.4.4718, Windows v10.0 (Build 18363: Service Pack 0), path: C:\\Users\\benja\\AppData\\Local\\Temp\\{BB4BDBD6-CF86-41B8-A83E-5475122C9AD6}\\.cr\\dotnet-sdk-3.1.101-win-x64.exe\r\n[26B4:2554][2020-02-11T22:21:49]i000: Initializing string variable 'DOTNETHOME_X86' to value '[ProgramFilesFolder]dotnet'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Initializing string variable 'DOTNETHOME_X64' to value '[ProgramFiles64Folder]dotnet'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Initializing string variable 'DOTNETHOME' to value '[DOTNETHOME_X64]'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Initializing string variable 'BUNDLEMONIKER' to value 'Microsoft .NET Core SDK 3.1.101'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Initializing string variable 'DOTNETSDKVERSION' to value '3.1.101'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Initializing string variable 'DOTNETRUNTIMEVERSION' to value '3.1.1'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Initializing string variable 'ASPNETCOREVERSION' to value '3.1.1'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Initializing string variable 'WINFORMSANDWPFVERSION' to value '3.1.1'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Initializing string variable 'DOTNETHOMESIMILARITYCHECKOVERRIDE' to value ''\r\n[26B4:2554][2020-02-11T22:21:49]i009: Command Line: '-burn.clean.room=e:\\Users\\benja\\Downloads\\dotnet-sdk-3.1.101-win-x64.exe -burn.filehandle.attached=632 -burn.filehandle.self=636'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Setting string variable 'WixBundleOriginalSource' to value 'e:\\Users\\benja\\Downloads\\dotnet-sdk-3.1.101-win-x64.exe'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Setting string variable 'WixBundleOriginalSourceFolder' to value 'e:\\Users\\benja\\Downloads\\'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Setting string variable 'WixBundleLog' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149.log'\r\n[26B4:2554][2020-02-11T22:21:49]i000: Setting string variable 'WixBundleManufacturer' to value 'Microsoft Corporation'\r\n[26B4:3748][2020-02-11T22:21:49]i000: Setting numeric variable 'WixStdBALanguageId' to value 1033\r\n[26B4:3748][2020-02-11T22:21:49]i000: Setting version variable 'WixBundleFileVersion' to value '3.1.101.14848'\r\n[26B4:2554][2020-02-11T22:21:49]i100: Detect begin, 15 packages\r\n[26B4:2554][2020-02-11T22:21:49]i000: Setting numeric variable 'DotnetInstallLocationExists_x64' to value 1\r\n[26B4:2554][2020-02-11T22:21:49]i000: Setting numeric variable 'DotnetInstallLocationExists_x86' to value 1\r\n[26B4:2554][2020-02-11T22:21:49]i052: Condition 'DotnetInstallLocationExists_x64' evaluates to true.\r\n[26B4:2554][2020-02-11T22:21:49]i000: Setting string variable 'DOTNETHOME_X64' to value 'C:\\Program Files\\dotnet'\r\n[26B4:2554][2020-02-11T22:21:49]i052: Condition 'NOT DotnetInstallLocationExists_x64' evaluates to false.\r\n[26B4:2554][2020-02-11T22:21:49]i052: Condition 'DotnetExeExists_x64' evaluates to false.\r\n[26B4:2554][2020-02-11T22:21:49]i052: Condition 'DotnetInstallLocationExists_x86' evaluates to true.\r\n[26B4:2554][2020-02-11T22:21:49]i000: Setting string variable 'DOTNETHOME_X86' to value 'C:\\Program Files (x86)\\dotnet'\r\n[26B4:2554][2020-02-11T22:21:49]i052: Condition 'NOT DotnetInstallLocationExists_x86' evaluates to false.\r\n[26B4:2554][2020-02-11T22:21:49]i052: Condition 'DotnetExeExists_x86' evaluates to false.\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_runtime_3.1.1_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_hostfxr_3.1.1_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_host_3.1.1_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: windowsdesktop_runtime_3.1.1_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_targeting_pack_3.1.0_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_apphost_pack_3.1.1_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_apphost_pack_3.1.1_win_x64_x86.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_apphost_pack_3.1.1_win_x64_arm.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_apphost_pack_3.1.1_win_x64_arm64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: netstandard_targeting_pack_2.1.0_win_x64.msi, state: Present, cached: Complete\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: aspnetcore_targeting_pack_3.1.0_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: windowsdesktop_targeting_pack_3.1.0_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_31templates_3.1.101_servicing_014848_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: dotnet_sdk_internal_3.1.101_win_x64.msi, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i101: Detected package: AspNetCoreSharedFramework_x64, state: Present, cached: None\r\n[26B4:2554][2020-02-11T22:21:49]i052: Condition 'WixBundleInstalled OR ((NOT (DOTNETHOME_X64 ~= DOTNETHOME_X86)) OR DOTNETHOMESIMILARITYCHECKOVERRIDE)' evaluates to true.\r\n[26B4:2554][2020-02-11T22:21:49]i199: Detect complete, result: 0x0\r\n[26B4:2554][2020-02-11T22:21:51]i200: Plan begin, 15 packages, action: Repair\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_runtime_3.1.1_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_000_dotnet_runtime_3.1.1_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_hostfxr_3.1.1_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_001_dotnet_hostfxr_3.1.1_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_host_3.1.1_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_002_dotnet_host_3.1.1_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_windowsdesktop_runtime_3.1.1_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_003_windowsdesktop_runtime_3.1.1_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_targeting_pack_3.1.0_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_004_dotnet_targeting_pack_3.1.0_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_apphost_pack_3.1.1_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_005_dotnet_apphost_pack_3.1.1_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_apphost_pack_3.1.1_win_x64_x86.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_006_dotnet_apphost_pack_3.1.1_win_x64_x86.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_apphost_pack_3.1.1_win_x64_arm.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_007_dotnet_apphost_pack_3.1.1_win_x64_arm.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_apphost_pack_3.1.1_win_x64_arm64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_008_dotnet_apphost_pack_3.1.1_win_x64_arm64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_netstandard_targeting_pack_2.1.0_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_009_netstandard_targeting_pack_2.1.0_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_aspnetcore_targeting_pack_3.1.0_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_010_aspnetcore_targeting_pack_3.1.0_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_windowsdesktop_targeting_pack_3.1.0_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_011_windowsdesktop_targeting_pack_3.1.0_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_31templates_3.1.101_servicing_014848_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_012_dotnet_31templates_3.1.101_servicing_014848_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_dotnet_sdk_internal_3.1.101_win_x64.msi' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_013_dotnet_sdk_internal_3.1.101_win_x64.msi.log'\r\n[26B4:2554][2020-02-11T22:21:51]i052: Condition 'VersionNT64 AND (NOT OPT_NO_SHAREDFX)' evaluates to true.\r\n[26B4:2554][2020-02-11T22:21:51]i000: Setting string variable 'WixBundleLog_AspNetCoreSharedFramework_x64' to value 'C:\\Users\\benja\\AppData\\Local\\Temp\\Microsoft_.NET_Core_SDK_3.1.101_(x64)_20200211222149_014_AspNetCoreSharedFramework_x64.log'\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_runtime_3.1.1_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_hostfxr_3.1.1_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_host_3.1.1_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: windowsdesktop_runtime_3.1.1_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_targeting_pack_3.1.0_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_apphost_pack_3.1.1_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_apphost_pack_3.1.1_win_x64_x86.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_apphost_pack_3.1.1_win_x64_arm.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_apphost_pack_3.1.1_win_x64_arm64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: netstandard_targeting_pack_2.1.0_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: No, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: aspnetcore_targeting_pack_3.1.0_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: windowsdesktop_targeting_pack_3.1.0_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_31templates_3.1.101_servicing_014848_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: dotnet_sdk_internal_3.1.101_win_x64.msi, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i201: Planned package: AspNetCoreSharedFramework_x64, state: Present, default requested: Repair, ba requested: Repair, execute: Repair, rollback: None, cache: Yes, uncache: No, dependency: Register\r\n[26B4:2554][2020-02-11T22:21:51]i299: Plan complete, result: 0x0\r\n[26B4:2554][2020-02-11T22:21:51]i300: Apply begin\r\n[26B4:2554][2020-02-11T22:21:51]i010: Launching elevated engine process.\r\n[26B4:2554][2020-02-11T22:21:53]i011: Launched elevated engine process.\r\n[26B4:2554][2020-02-11T22:21:53]i012: Connected to elevated engine.\r\n[1914:0954][2020-02-11T22:21:53]i358: Pausing automatic updates.\r\n[1914:0954][2020-02-11T22:21:53]i359: Paused automatic updates.\r\n[1914:0954][2020-02-11T22:21:53]i371: Updating session, registration key: SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\{2bd40b80-6a71-429b-ab79-eb73cd6a7481}, resume: Active, restart initiated: No, disable resume: No\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_runtime_3.1.1_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_runtime_3.1.1_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{ECF3E961-C8E1-4276-BCD2-79C693410CC5}v24.68.28408\\dotnet-runtime-3.1.1-win-x64.msi.\r\n[1914:0954][2020-02-11T22:21:54]i301: Applying execute package: dotnet_runtime_3.1.1_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{ECF3E961-C8E1-4276-BCD2-79C693410CC5}v24.68.28408\\dotnet-runtime-3.1.1-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_hostfxr_3.1.1_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_hostfxr_3.1.1_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{746DF466-E621-440F-9BBF-DDBD496C22EC}v24.68.28408\\dotnet-hostfxr-3.1.1-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_host_3.1.1_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_host_3.1.1_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{B1BF0643-9D94-4F9A-8C21-73E6C8BFA840}v24.68.28408\\dotnet-host-3.1.1-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: windowsdesktop_runtime_3.1.1_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\windowsdesktop_runtime_3.1.1_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{5A278411-F21F-4FFC-80A7-0990EF38BD50}v24.68.28408\\windowsdesktop-runtime-3.1.1-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_targeting_pack_3.1.0_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_targeting_pack_3.1.0_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{31EDE1E7-C855-4633-9D73-56F566136567}v24.64.28315\\dotnet-targeting-pack-3.1.0-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_apphost_pack_3.1.1_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_apphost_pack_3.1.1_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{F3B5B020-F99B-4798-A2D0-C859FF27E779}v24.68.28408\\dotnet-apphost-pack-3.1.1-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_apphost_pack_3.1.1_win_x64_x86.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_apphost_pack_3.1.1_win_x64_x86.msi, moving to: C:\\ProgramData\\Package Cache\\{4718B341-DBFC-4F26-BFCB-91EFF2995B2F}v24.68.28408\\dotnet-apphost-pack-3.1.1-win-x64_x86.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_apphost_pack_3.1.1_win_x64_arm.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_apphost_pack_3.1.1_win_x64_arm.msi, moving to: C:\\ProgramData\\Package Cache\\{0DF97BB8-17F0-4F0F-9CAC-425CF74C3561}v24.68.28408\\dotnet-apphost-pack-3.1.1-win-x64_arm.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_apphost_pack_3.1.1_win_x64_arm64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_apphost_pack_3.1.1_win_x64_arm64.msi, moving to: C:\\ProgramData\\Package Cache\\{8C095070-91CD-41FF-9021-5535C498480A}v24.68.28408\\dotnet-apphost-pack-3.1.1-win-x64_arm64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i304: Verified existing payload: netstandard_targeting_pack_2.1.0_win_x64.msi at path: C:\\ProgramData\\Package Cache\\{A7036CFB-B403-4598-85FF-D397ABB88173}v24.0.28113\\netstandard-targeting-pack-2.1.0-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: aspnetcore_targeting_pack_3.1.0_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\aspnetcore_targeting_pack_3.1.0_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{D6081EC6-BF59-3128-84D0-D3D8309A4339}v3.1.0.0\\aspnetcore-targeting-pack-3.1.0-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: windowsdesktop_targeting_pack_3.1.0_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\windowsdesktop_targeting_pack_3.1.0_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{7519423C-A977-4160-83A2-48633600A216}v24.64.28315\\windowsdesktop-targeting-pack-3.1.0-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_31templates_3.1.101_servicing_014848_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_31templates_3.1.101_servicing_014848_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{4E8EFEE3-6620-43A3-A038-70AD5020B9D8}v3.1.1.014848\\dotnet-31templates-3.1.101-servicing-014848-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: dotnet_sdk_internal_3.1.101_win_x64.msi at path: C:\\ProgramData\\Package Cache\\.unverified\\dotnet_sdk_internal_3.1.101_win_x64.msi, moving to: C:\\ProgramData\\Package Cache\\{57C6FEEE-6402-45EE-8F4F-73DC112E4491}v12.16.31232\\dotnet-sdk-internal-3.1.101-win-x64.msi.\r\n[1914:3B68][2020-02-11T22:21:54]i305: Verified acquired payload: AspNetCoreSharedFramework_x64 at path: C:\\ProgramData\\Package Cache\\.unverified\\AspNetCoreSharedFramework_x64, moving to: C:\\ProgramData\\Package Cache\\{14C06F09-47BF-37BA-AEF9-CC97A18E6DDC}v3.1.1.0\\AspNetCoreSharedFramework-x64.msi.\r\n[26B4:2554][2020-02-11T22:21:59]i319: Applied execute package: dotnet_runtime_3.1.1_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:21:59]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: dotnet_runtime_24.68.28408_x64, package: dotnet_runtime_3.1.1_win_x64.msi\r\n[1914:0954][2020-02-11T22:21:59]i301: Applying execute package: dotnet_hostfxr_3.1.1_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{746DF466-E621-440F-9BBF-DDBD496C22EC}v24.68.28408\\dotnet-hostfxr-3.1.1-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:21:59]i319: Applied execute package: dotnet_hostfxr_3.1.1_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:21:59]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: Dotnet_CLI_HostFxr_24.68.28408_x64, package: dotnet_hostfxr_3.1.1_win_x64.msi\r\n[1914:0954][2020-02-11T22:21:59]i301: Applying execute package: dotnet_host_3.1.1_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{B1BF0643-9D94-4F9A-8C21-73E6C8BFA840}v24.68.28408\\dotnet-host-3.1.1-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:00]i319: Applied execute package: dotnet_host_3.1.1_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:00]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: Dotnet_CLI_SharedHost_24.68.28408_x64, package: dotnet_host_3.1.1_win_x64.msi\r\n[1914:0954][2020-02-11T22:22:00]i301: Applying execute package: windowsdesktop_runtime_3.1.1_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{5A278411-F21F-4FFC-80A7-0990EF38BD50}v24.68.28408\\windowsdesktop-runtime-3.1.1-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:06]i319: Applied execute package: windowsdesktop_runtime_3.1.1_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:06]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: windowsdesktop_runtime_24.68.28408_x64, package: windowsdesktop_runtime_3.1.1_win_x64.msi\r\n[1914:0954][2020-02-11T22:22:06]i301: Applying execute package: dotnet_targeting_pack_3.1.0_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{31EDE1E7-C855-4633-9D73-56F566136567}v24.64.28315\\dotnet-targeting-pack-3.1.0-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:10]i319: Applied execute package: dotnet_targeting_pack_3.1.0_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:10]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: dotnet_targeting_pack_24.64.28315_x64, package: dotnet_targeting_pack_3.1.0_win_x64.msi\r\n[1914:0954][2020-02-11T22:22:10]i301: Applying execute package: dotnet_apphost_pack_3.1.1_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{F3B5B020-F99B-4798-A2D0-C859FF27E779}v24.68.28408\\dotnet-apphost-pack-3.1.1-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:10]i319: Applied execute package: dotnet_apphost_pack_3.1.1_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:10]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: dotnet_apphost_pack_24.68.28408_x64, package: dotnet_apphost_pack_3.1.1_win_x64.msi\r\n[1914:0954][2020-02-11T22:22:10]i301: Applying execute package: dotnet_apphost_pack_3.1.1_win_x64_x86.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{4718B341-DBFC-4F26-BFCB-91EFF2995B2F}v24.68.28408\\dotnet-apphost-pack-3.1.1-win-x64_x86.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:11]i319: Applied execute package: dotnet_apphost_pack_3.1.1_win_x64_x86.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:11]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: dotnet_apphost_pack_24.68.28408_x64_x86, package: dotnet_apphost_pack_3.1.1_win_x64_x86.msi\r\n[1914:0954][2020-02-11T22:22:11]i301: Applying execute package: dotnet_apphost_pack_3.1.1_win_x64_arm.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{0DF97BB8-17F0-4F0F-9CAC-425CF74C3561}v24.68.28408\\dotnet-apphost-pack-3.1.1-win-x64_arm.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:12]i319: Applied execute package: dotnet_apphost_pack_3.1.1_win_x64_arm.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:12]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: dotnet_apphost_pack_24.68.28408_x64_arm, package: dotnet_apphost_pack_3.1.1_win_x64_arm.msi\r\n[1914:0954][2020-02-11T22:22:12]i301: Applying execute package: dotnet_apphost_pack_3.1.1_win_x64_arm64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{8C095070-91CD-41FF-9021-5535C498480A}v24.68.28408\\dotnet-apphost-pack-3.1.1-win-x64_arm64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:12]i319: Applied execute package: dotnet_apphost_pack_3.1.1_win_x64_arm64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:12]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: dotnet_apphost_pack_24.68.28408_x64_arm64, package: dotnet_apphost_pack_3.1.1_win_x64_arm64.msi\r\n[1914:0954][2020-02-11T22:22:12]i301: Applying execute package: netstandard_targeting_pack_2.1.0_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{A7036CFB-B403-4598-85FF-D397ABB88173}v24.0.28113\\netstandard-targeting-pack-2.1.0-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:15]i319: Applied execute package: netstandard_targeting_pack_2.1.0_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:15]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: netstandard_targeting_pack_24.0.28113_x64, package: netstandard_targeting_pack_2.1.0_win_x64.msi\r\n[1914:0954][2020-02-11T22:22:15]i301: Applying execute package: aspnetcore_targeting_pack_3.1.0_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{D6081EC6-BF59-3128-84D0-D3D8309A4339}v3.1.0.0\\aspnetcore-targeting-pack-3.1.0-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" MSIFASTINSTALL=\"7\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:18]i319: Applied execute package: aspnetcore_targeting_pack_3.1.0_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:18]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: Microsoft.AspNetCore.TargetingPack_x64_ENU,v3.1.0, package: aspnetcore_targeting_pack_3.1.0_win_x64.msi\r\n[1914:0954][2020-02-11T22:22:18]i301: Applying execute package: windowsdesktop_targeting_pack_3.1.0_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{7519423C-A977-4160-83A2-48633600A216}v24.64.28315\\windowsdesktop-targeting-pack-3.1.0-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[26B4:2554][2020-02-11T22:22:20]i319: Applied execute package: windowsdesktop_targeting_pack_3.1.0_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:20]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: windowsdesktop_targeting_pack_24.64.28315_x64, package: windowsdesktop_targeting_pack_3.1.0_win_x64.msi\r\n[1914:0954][2020-02-11T22:22:20]i301: Applying execute package: dotnet_31templates_3.1.101_servicing_014848_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{4E8EFEE3-6620-43A3-A038-70AD5020B9D8}v3.1.1.014848\\dotnet-31templates-3.1.101-servicing-014848-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\" ALLOWMSIINSTALL=\"True\"'\r\n[26B4:2554][2020-02-11T22:22:21]i319: Applied execute package: dotnet_31templates_3.1.101_servicing_014848_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:21]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: NetCore_Templates_3.1_3.1.1.014848_x64, package: dotnet_31templates_3.1.101_servicing_014848_win_x64.msi\r\n[1914:0954][2020-02-11T22:22:21]i301: Applying execute package: dotnet_sdk_internal_3.1.101_win_x64.msi, action: Repair, path: C:\\ProgramData\\Package Cache\\{57C6FEEE-6402-45EE-8F4F-73DC112E4491}v12.16.31232\\dotnet-sdk-internal-3.1.101-win-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" DOTNETHOME=\"C:\\Program Files\\dotnet\" DOTNETHOME_X86=\"C:\\Program Files (x86)\\dotnet\" DOTNETHOME_X64=\"C:\\Program Files\\dotnet\" EXEFULLPATH=\"e:\\Users\\benja\\Downloads\\dotnet-sdk-3.1.101-win-x64.exe\" ALLOWMSIINSTALL=\"True\"'\r\n[26B4:2554][2020-02-11T22:22:45]i319: Applied execute package: dotnet_sdk_internal_3.1.101_win_x64.msi, result: 0x0, restart: None\r\n[1914:0954][2020-02-11T22:22:45]i325: Registering dependency: {2bd40b80-6a71-429b-ab79-eb73cd6a7481} on package provider: Dotnet_CLI_3.1.101.014848_x64, package: dotnet_sdk_internal_3.1.101_win_x64.msi\r\n[1914:0954][2020-02-11T22:22:45]i301: Applying execute package: AspNetCoreSharedFramework_x64, action: Repair, path: C:\\ProgramData\\Package Cache\\{14C06F09-47BF-37BA-AEF9-CC97A18E6DDC}v3.1.1.0\\AspNetCoreSharedFramework-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" MSIFASTINSTALL=\"7\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[1914:0954][2020-02-11T22:22:51]e000: Error 0x80070643: Failed to run maintanance mode for MSI package.\r\n[1914:0954][2020-02-11T22:22:51]e000: Error 0x80070643: Failed to execute MSI package.\r\n[26B4:2554][2020-02-11T22:22:51]e000: Error 0x80070643: Failed to configure per-machine MSI package.\r\n[26B4:2554][2020-02-11T22:22:51]w348: Application requested retry of package: AspNetCoreSharedFramework_x64, encountered error: 0x80070643. Retrying...\r\n[1914:0954][2020-02-11T22:22:54]i301: Applying execute package: AspNetCoreSharedFramework_x64, action: Repair, path: C:\\ProgramData\\Package Cache\\{14C06F09-47BF-37BA-AEF9-CC97A18E6DDC}v3.1.1.0\\AspNetCoreSharedFramework-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" MSIFASTINSTALL=\"7\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[1914:0954][2020-02-11T22:22:57]e000: Error 0x80070643: Failed to run maintanance mode for MSI package.\r\n[1914:0954][2020-02-11T22:22:57]e000: Error 0x80070643: Failed to execute MSI package.\r\n[26B4:2554][2020-02-11T22:22:57]e000: Error 0x80070643: Failed to configure per-machine MSI package.\r\n[26B4:2554][2020-02-11T22:22:57]w348: Application requested retry of package: AspNetCoreSharedFramework_x64, encountered error: 0x80070643. Retrying...\r\n[1914:0954][2020-02-11T22:23:00]i301: Applying execute package: AspNetCoreSharedFramework_x64, action: Repair, path: C:\\ProgramData\\Package Cache\\{14C06F09-47BF-37BA-AEF9-CC97A18E6DDC}v3.1.1.0\\AspNetCoreSharedFramework-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" MSIFASTINSTALL=\"7\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[1914:0954][2020-02-11T22:23:05]e000: Error 0x80070643: Failed to run maintanance mode for MSI package.\r\n[1914:0954][2020-02-11T22:23:05]e000: Error 0x80070643: Failed to execute MSI package.\r\n[26B4:2554][2020-02-11T22:23:05]e000: Error 0x80070643: Failed to configure per-machine MSI package.\r\n[26B4:2554][2020-02-11T22:23:05]w348: Application requested retry of package: AspNetCoreSharedFramework_x64, encountered error: 0x80070643. Retrying...\r\n[1914:0954][2020-02-11T22:23:08]i301: Applying execute package: AspNetCoreSharedFramework_x64, action: Repair, path: C:\\ProgramData\\Package Cache\\{14C06F09-47BF-37BA-AEF9-CC97A18E6DDC}v3.1.1.0\\AspNetCoreSharedFramework-x64.msi, arguments: ' ARPSYSTEMCOMPONENT=\"1\" MSIFASTINSTALL=\"7\" DOTNETHOME=\"C:\\Program Files\\dotnet\"'\r\n[1914:0954][2020-02-11T22:23:30]e000: Error 0x80070643: Failed to run maintanance mode for MSI package.\r\n[1914:0954][2020-02-11T22:23:30]e000: Error 0x80070643: Failed to execute MSI package.\r\n[26B4:2554][2020-02-11T22:23:30]e000: Error 0x80070643: Failed to configure per-machine MSI package.\r\n[26B4:2554][2020-02-11T22:23:30]i319: Applied execute package: AspNetCoreSharedFramework_x64, result: 0x80070643, restart: None\r\n[26B4:2554][2020-02-11T22:23:30]e000: Error 0x80070643: Failed to execute MSI package.\r\n[1914:0954][2020-02-11T22:23:30]i351: Removing cached package: AspNetCoreSharedFramework_x64, from path: C:\\ProgramData\\Package Cache\\{14C06F09-47BF-37BA-AEF9-CC97A18E6DDC}v3.1.1.0\\\r\n[1914:0954][2020-02-11T22:23:30]i372: Session end, registration key: SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\{2bd40b80-6a71-429b-ab79-eb73cd6a7481}, resume: ARP, restart: None, disable resume: No\r\n[1914:0954][2020-02-11T22:23:30]i371: Updating session, registration key: SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\{2bd40b80-6a71-429b-ab79-eb73cd6a7481}, resume: ARP, restart initiated: No, disable resume: No\r\n[26B4:2554][2020-02-11T22:23:30]i399: Apply complete, result: 0x80070643, restart: None, ba requested restart:  No\r\n```","Url":"https://github.com/dotnet/sdk/issues/10630","RelatedDescription":"Open issue \"Cannot repair SDK 3.1.101\" (#10630)"},{"Id":"563466372","IsPullRequest":false,"CreatedAt":"2020-02-11T20:45:39","Actor":"Zubastic","Number":"10629","RawContent":null,"Title":"PrintDialog gets into an infinite loop","State":"open","Body":"When try to print page with System.Windows.Controls.PrintDialog at NetCore 3.1 program goes to infinity loop. If using virtual printer (for example Microsoft Print to PDF) it throw exception:\r\n```\r\nSystem.NotSupportedException: Specified method is not supported.\r\n   at MS.Internal.PrintWin32Thunk.XpsPrintJobStream.Seek(Int64 offset, SeekOrigin origin)\r\n   at System.Printing.PrintQueueStream.Seek(Int64 offset, SeekOrigin origin)\r\n   at System.IO.Compression.ZipArchive.WriteFile()\r\n   at System.IO.Compression.ZipArchive.Dispose(Boolean disposing)\r\n   at System.IO.Compression.ZipArchive.Dispose()\r\n   at System.IO.Packaging.ZipPackage.Dispose(Boolean disposing)\r\n   at System.IO.Packaging.Package.System.IDisposable.Dispose()\r\n   at System.IO.Packaging.Package.Close()\r\n   at System.Windows.Xps.Packaging.XpsDocument.DisposeXpsDocument()\r\n   at System.Printing.PrintQueue.DisposeSerializationManager(Boolean abort)\r\n   at System.Windows.Xps.XpsDocumentWriter.EndWrite(Boolean disposeManager, Boolean abort)\r\n   at System.Windows.Xps.XpsDocumentWriter.SaveAsXaml(Object serializedObject, Boolean isSync)\r\n   at System.Windows.Xps.XpsDocumentWriter.Write(DocumentPaginator documentPaginator, PrintTicket printTicket)\r\n   at System.Windows.Controls.PrintDialog.PrintDocument(DocumentPaginator documentPaginator, String description)\r\n   at WpfNetcoreTest.Program..ctor() in C:\\Users\\Zubastic\\Source\\Repos\\Zubastic\\PrintDialogBug\\WpfNetcoreTest\\Program.cs:line 18\r\n   at WpfNetcoreTest.App..ctor() in C:\\Users\\Zubastic\\Source\\Repos\\Zubastic\\PrintDialogBug\\WpfNetcoreTest\\App.xaml.cs:line 18\r\n   at WpfNetcoreTest.App.Main()\r\n```\r\nRepo for reproduce bug:\r\nhttps://github.com/Zubastic/PrintDialogBug","Url":"https://github.com/dotnet/sdk/issues/10629","RelatedDescription":"Open issue \"PrintDialog gets into an infinite loop\" (#10629)"},{"Id":"563415603","IsPullRequest":false,"CreatedAt":"2020-01-28T12:17:04","Actor":"talboren","Number":"10627","RawContent":null,"Title":"Directory separator for TargetPath is not normalized","State":"open","Body":"<!--\r\n\r\nMore information on our issue management policies can be found here: https://aka.ms/aspnet/issue-policies\r\n\r\nPlease keep in mind that the GitHub issue tracker is not intended as a general support forum, but for reporting non-security bugs and feature requests.\r\n\r\nIf you believe you have an issue that affects the SECURITY of the platform, please do NOT create an issue and instead email your issue details to secure@microsoft.com. Your report may be eligible for our [bug bounty](https://www.microsoft.com/en-us/msrc/bounty-dot-net-core) but ONLY if it is reported through email.\r\nFor other types of questions, consider using [StackOverflow](https://stackoverflow.com).\r\n\r\n-->\r\n\r\n### Describe the bug\r\nMy application is using NServiceBus as the implementation to the Service Bus pattern.\r\n\r\nNServiceBus generates several SQL scripts for its persistence mechanism and then executes those script when starting up (to create the necessary tables), these scripts are generated by an MSBuild task at compile time.\r\nThe scripts are generated in to a folder called NServiceBus.Persistence.Sql which then has a few more folders for the relevant database types (e.g: MsSqlServer, MySql etc..) as you can see here:\r\n\r\n![image](https://user-images.githubusercontent.com/18400664/73262135-3074f700-41d6-11ea-87f5-124325f35141.png)\r\n\r\nNServiceBus will then search for the specific files under NServiceBus.Persistence.Sql directory at the parent app directory - at this point everything seems to be working fine.\r\n\r\nThe problem begins when moving to a \"Single File Executable\" with the \"PublishSingleFile\" parameter set.\r\nAfter reading https://github.com/dotnet/designs/blob/master/accepted/single-file/extract.md it seems like I understood the way the extraction mechanism works but it seems like there's a buggy situation where folders that contains folders inside get extracted faulty (when looking at \"/var/tmp/.net/AppName/bov1qdmu.xn3/\":\r\n\r\n![image](https://user-images.githubusercontent.com/18400664/73262814-c65d5180-41d7-11ea-888c-c5f05260bdad.png)\r\n\r\nand the following error message appears:\r\n\r\n> appname_1               | 2020-01-27 16:49:54.790 INFO  Directory '/var/tmp/.net/AppName/bov1qdmu.xn3/NServiceBus.PersistenceSql/MySql/Sagas' not found so no saga creation scripts will be executed.\r\n\r\n\r\n### To Reproduce\r\n<!--\r\nWhat steps can we follow to reproduce the issue?\r\n\r\nWe ❤ code! Include a complete code listing or point us to a minimalistic GitHub repo.\r\n\r\n``` C#\r\nConsole.WriteLine(\"Hello, World!\");\r\n```\r\n\r\nGot Exceptions? Include both the message and the stack trace\r\n-->\r\nHaving a project with NServiceBus using persistence mechanism, reproduce this issue easily by just switching from:\r\n`RUN dotnet publish AppName.csproj -c Release -r linux-musl-x64 -o /app`\r\nTo\r\n`RUN dotnet publish AppName.csproj -c Release -r linux-musl-x64 /p:PublishSingleFile=true -o /app`\r\n\r\n### Further technical details\r\n- ASP.NET Core version: **mcr.microsoft.com/dotnet/core/runtime-deps:3.1-alpine** (3.1.101), \r\n- Include the output of `dotnet --info`: **No runtime is installed, app is self-contained**\r\n- The IDE (VS / VS Code/ VS4Mac) you're running on, and it's version: **Microsoft Visual Studio Professional 2019 Version 16.4.3**\r\n","Url":"https://github.com/dotnet/sdk/issues/10627","RelatedDescription":"Open issue \"Directory separator for TargetPath is not normalized\" (#10627)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"563411989","IsPullRequest":false,"CreatedAt":"2020-02-11T19:02:44","Actor":"TaraOverfield","Number":"151","RawContent":null,"Title":"February 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on February 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework February 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-february-2020-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/151","RelatedDescription":"Open issue \"February 2020 .NET Updates\" (#151)"},{"Id":"549804145","IsPullRequest":false,"CreatedAt":"2020-01-14T20:37:00","Actor":"TaraOverfield","Number":"150","RawContent":null,"Title":"January 2020 .NET Updates","State":"open","Body":"The following .NET updates were released on January 2020. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2020 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-security-and-quality-rollup/ )\r\n\r\n* [.NET Framework January 2020 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-january-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n* [January 2020 Updates – 2.1.15, 3.0.2, and 3.1.1](https://devblogs.microsoft.com/dotnet/net-core-january-2020/)\r\n\r\n* .NET Core 3.1.1 and .NET Core SDK 3.1.101( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.1/3.1.1.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.1) )\r\n\r\n* .NET Core 3.0.2 and .NET Core SDK 3.0.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.2/3.0.2.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/3.0) )\r\n\r\n* .NET Core 2.1.15 and .NET Core SDK 2.1.803 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.15/2.1.15.md) | [Download](https://www.microsoft.com/net/download/dotnet-core/2.1) )\r\n \r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/150","RelatedDescription":"Open issue \"January 2020 .NET Updates\" (#150)"},{"Id":"549728653","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:12","Actor":"blowdart","Number":"149","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2425\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0606](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0606)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/149","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0606 : .NET Core Remote Code Execution Vulnerability\" (#149)"},{"Id":"549728591","IsPullRequest":false,"CreatedAt":"2020-01-14T18:01:03","Actor":"blowdart","Number":"148","RawContent":null,"Title":"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a remote code execution vulnerability exists in .NET software when the software fails to check the source markup of a file. An attacker who successfully exploited the vulnerability could run arbitrary code in the context of the current user.\r\n\r\nExploitation of the vulnerability requires that a user open a specially crafted file with an affected version of .NET Core. In an email attack scenario, an attacker could exploit the vulnerability by sending the specially crafted file to the user and convincing the user to open the file.\r\n\r\nThe security update addresses the vulnerability by correcting how .NET Core checks the source markup of a file.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wpf/issues/2424\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application running on .NET Core 3.0.0, 3.0.1 or 3.1.0.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf you have a runtime or SDK with a version listed in [affected software](#affected-software) you are exposed to the vulnerability.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 3.0, you should download and install Runtime 3.0.2 or SDK 3.0.102 from https://dotnet.microsoft.com/download/dotnet-core/3.0.\r\n* For machines running .NET Core 3.1, you should download and install Runtime 3.1.1 or SDK 3.1.101 from https://dotnet.microsoft.com/download/dotnet-core/3.1.\r\n\r\nIf you have both 3.0 and 3.1 installed, you need to install the updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core GitHub organization. The main repos are located at https://github.com/dotnet/runtime and https://github.com/dotnet/aspnet/. The Announcements repo (https://github.com/dotnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the linked discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nSoroush Dalili ([@irsdl](https://twitter.com/irsdl))\r\n\r\n### External Links\r\n\r\n[CVE-2020-0605](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-0605)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 16, 2020): Clarifying versions.\r\nV1.0 (January 14, 2020): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2020-01-16_\r\n","Url":"https://github.com/dotnet/announcements/issues/148","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2020-0605 : .NET Core Remote Code Execution Vulnerability\" (#148)"},{"Id":"545985606","IsPullRequest":false,"CreatedAt":"2020-01-06T23:02:38","Actor":"vivmishra","Number":"147","RawContent":null,"Title":".NET Core 2.2 has reached end of life","State":"open","Body":"[.NET Core 2.2 reached end of life](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/) on **December 23, 2019**. This means [.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 3.1](https://www.microsoft.com/net/download/dotnet-core/3.1)\r\n- [.NET Core 2.2 end-of-life statement](https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/)\r\n\r\nWe've created an issue at [dotnet/core#4084](https://github.com/dotnet/core/issues/4084) for your questions and comments.\r\n\r\n## .NET Core 2.2 Lifecycle\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n[.NET Core 2.2](https://devblogs.microsoft.com/dotnet/announcing-net-core-2-2/) was released in December 2018 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). **.NET Core 3.0** released in **September 2019** and began the end of life countdown for .NET Core 2.2 that concluded on December 23, 2019. \r\n\r\n## .NET Core 2.2 Downloads\r\n\r\n.NET Core 2.2 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.2, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n","Url":"https://github.com/dotnet/announcements/issues/147","RelatedDescription":"Open issue \".NET Core 2.2 has reached end of life\" (#147)"},{"Id":"541189878","IsPullRequest":false,"CreatedAt":"2019-12-20T20:42:33","Actor":"vivmishra","Number":"146","RawContent":null,"Title":"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1","State":"open","Body":"This week we released localized [IntelliSense](https://docs.microsoft.com/en-us/visualstudio/ide/using-intellisense?view=vs-2019) files for .NET Core 3.0 and 3.1, in following 10 Visual Studio supported languages: \r\n- Brazilian Portuguese\r\n- Chinese (simplified)\r\n- Chinese (traditional)\r\n- French\r\n- German\r\n- Italian\r\n- Japanese\r\n- Korean\t\r\n- Russian\r\n- Spanish\r\n\r\nThe files (in zip archives) are available for download from [**Download localized .NET Core IntelliSense files**](https://dotnet.microsoft.com/download/dotnet-core/intellisense).\r\n\r\n * [Checksums for 3.0 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.0.0-intellisense-sha.txt)\r\n * [Checksums for 3.1 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.1.0-intellisense-sha.txt)\r\n\r\nYou can see [the .NET Core Guide](https://aka.ms/dotnet-core-intellisense) for instructions on how to use these files with Visual Studio.\r\n\r\nBy default, when you're developing .NET Core projects, the SDK only includes the English version of the IntelliSense files. But now you can enhance your localized Visual Studio development experience by adding the localized IntelliSense files from the download site into your local development environment.\r\n\r\nLastly, with this release we have made the localized IntelliSense available as zip archives that does require you to manually extract and copy the files to respective SDK install folders. But we plan to make this experience better in future releases.\r\n\r\n## Discussion\r\nTo discuss this issue, please comment on the corresponding issue at [dotnet/core #4032](https://github.com/dotnet/core/issues/4032).\r\n","Url":"https://github.com/dotnet/announcements/issues/146","RelatedDescription":"Open issue \"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1\" (#146)"},{"Id":"536031264","IsPullRequest":false,"CreatedAt":"2019-12-10T22:29:30","Actor":"TaraOverfield","Number":"145","RawContent":null,"Title":"December 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on December 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework December 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-december-2019-security-and-quality-rollup/ )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/145","RelatedDescription":"Open issue \"December 2019 .NET Updates\" (#145)"},{"Id":"535463424","IsPullRequest":false,"CreatedAt":"2019-12-10T03:08:33","Actor":"terrajobst","Number":"144","RawContent":null,"Title":"Removal of read-collaborator access","State":"open","Body":"***TL;DR**: We’ll remove collaborators with read-only access from our public repos on December 16th. This means some folks will lose their Collaborator badge and the ability to interact with the CI system.*\r\n\r\nOver the years, we’ve added a bunch of folks as collaborators with read permissions to our public repos. The rationale was that we wanted to be able to assign issues to community members because GitHub only allowed assigning issues to users with an explicit permission grant for the repository. However, they changed this in [June 2019](https://github.blog/2019-06-25-assign-issues-to-issue-commenters/). Now, we can assign issues to all users with explicit permissions as well as to users that have commented on the specific issue.\r\n\r\nAlso, we recently started to audit and tighten the permissions for our organizations. As a result, it became clear that large number of repo-specific permission grants are hard to review and audit. Internally, our goal is to grant all permissions via teams instead.\r\n\r\nHence, we plan to remove all collaborators from public repos that only have read permissions (folks with triage permissions will remain). The full list of affected repos is listed below.\r\n\r\nThis shouldn’t impact your ability to work with us, but losing explicit read-only has the following implications:\r\n\r\n-   **You’ll lose the collaborator badge**. We understand that this is visually appealing and for some people it might have been a badge of honor. But given that GitHub also shows a Contributor bade for folks whose PRs got merged, we don’t think it this will be a major take back.    \r\n    ![image](https://user-images.githubusercontent.com/5169960/70491508-43acf580-1ab6-11ea-94df-74ea2dde98b4.png)\r\n\r\n-   ~~**You lose the ability to interact with the CI system**. As a collaborator, you can use comments to [send commands to the CI system](https://github.com/dotnet/runtime/blob/master/docs/project/pullrequest-builds.md). While this can be useful at times, we generally don’t expect (or desire) contributors to do that. Of course, anyone can still access the CI logs.~~\r\n\r\n- **You might lose the ability to interact with the CI system**. Based on your feedback we have decided to give externals access to interact with the CI system *on a case by case basis*. If you believe you need to have that ability, please [leave a comment like Kevin's](https://github.com/dotnet/runtime/issues/718#issuecomment-563717478).\r\n\r\n| Public Repo                | \\#collaborators with read |\r\n|----------------------------|---------------------------|\r\n| arcade                     | 1                         |\r\n| BenchmarkDotNet            | 11                        |\r\n| cli                        | 2                         |\r\n| command-line-api           | 14                        |\r\n| coreclr                    | 18                        |\r\n| corefx                     | 180                       |\r\n| corefxlab                  | 4                         |\r\n| corert                     | 7                         |\r\n| core-sdk                   | 1                         |\r\n| docs                       | 3                         |\r\n| interactive-window         | 1                         |\r\n| machinelearning            | 1                         |\r\n| machinelearning-samples    | 1                         |\r\n| msbuild-language-service   | 1                         |\r\n| runtime                    | 128                       |\r\n| spark                      | 5                         |\r\n| standard                   | 1                         |\r\n| windowsdesktop             | 1                         |\r\n| winforms-datavisualization | 1                         |\r\n| Grand Total                | 381                       |\r\n\r\n### Discussion\r\n\r\nTo discuss this, please comment on the corresponding issue at https://github.com/dotnet/runtime/issues/718.","Url":"https://github.com/dotnet/announcements/issues/144","RelatedDescription":"Open issue \"Removal of read-collaborator access\" (#144)"},{"Id":"532249858","IsPullRequest":false,"CreatedAt":"2019-12-03T20:36:29","Actor":"MichaelSimons","Number":"143","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.1","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.1\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/).\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1511)\r\n\r\n## Details\r\n\r\n* [dotnet-docker#1509](https://github.com/dotnet/dotnet-docker/pull/1509)\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.1. This version of .NET Core is also a [long-term supported (LTS) release](https://dotnet.microsoft.com/platform/support/policy/dotnet-core).\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n\r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.1`.","Url":"https://github.com/dotnet/announcements/issues/143","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.1\" (#143)"},{"Id":"532163408","IsPullRequest":false,"CreatedAt":"2019-12-03T18:00:27","Actor":"leecow","Number":"142","RawContent":null,"Title":".NET Core 3.1.0","State":"open","Body":".NET Core 3.1.0 is available and https://github.com/dotnet/core/issues/3950 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.0/3.1.0.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 , either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/142","RelatedDescription":"Open issue \".NET Core 3.1.0\" (#142)"},{"Id":"523579400","IsPullRequest":false,"CreatedAt":"2019-11-15T16:51:27","Actor":"MichaelSimons","Number":"141","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Framework","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Framework\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #451](https://github.com/microsoft/dotnet-framework-docker/issues/451)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.8`. These are tags that are supported on multiple operating systems and versions, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1803 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.8-windowsservercore-1803` or `mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-1803`.","Url":"https://github.com/dotnet/announcements/issues/141","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Framework\" (#141)"},{"Id":"523578215","IsPullRequest":false,"CreatedAt":"2019-11-15T16:49:04","Actor":"MichaelSimons","Number":"140","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Core","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Core\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Core container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1469](https://github.com/dotnet/dotnet-docker/issues/1469)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `3.0`, `3.0.0`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server, version 1803 images (even though it is no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:3.0-nanoserver-1803`.","Url":"https://github.com/dotnet/announcements/issues/140","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Core\" (#140)"},{"Id":"522994983","IsPullRequest":false,"CreatedAt":"2019-11-14T17:15:08","Actor":"leecow","Number":"139","RawContent":null,"Title":".NET Core 3.1.0 Preview 3","State":"open","Body":".NET Core 3.1.0 Preview 3 is available and https://github.com/dotnet/core/issues/3809 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview3.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-3/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-3/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 3, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/139","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 3\" (#139)"},{"Id":"522864668","IsPullRequest":false,"CreatedAt":"2019-11-14T13:37:28","Actor":"TaraOverfield","Number":"138","RawContent":null,"Title":"November 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on November 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework November 13, 2019, Update for .NET Framework 4.8](https://devblogs.microsoft.com/dotnet/net-framework-november-13-2019-update-for-net-framework-4-8/)\r\n* [.NET Framework November 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-november-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.14 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.14/2.1.14.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.8/2.2.8.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\n* .NET Core 3.0.1 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.1/3.0.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.0) )\r\n\r\nA discussion issue is available at [core/3848](https://github.com/dotnet/core/issues/3848)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/138","RelatedDescription":"Open issue \"November 2019 .NET Updates\" (#138)"},{"Id":"522488807","IsPullRequest":false,"CreatedAt":"2019-11-13T21:41:06","Actor":"MichaelSimons","Number":"137","RawContent":null,"Title":".NET Framework Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Framework Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Framework Docker images have been published for Server Core, version 1909.  \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-framework-docker#448](https://github.com/microsoft/dotnet-framework-docker/issues/448)\r\n\r\n## Details \r\n\r\n* [dotnet-framework-docker#447](https://github.com/microsoft/dotnet-framework-docker/pull/447) \r\n\r\n.NET Framework tags containing the substring `windowsservercore-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-framework). \r\n\r\n.NET Framework multi-arch tags, such as `4.8`, have been updated to use `windowsservercore-1909` images if your host is Windows Server 1909 or higher. \r\n\r\n### Impacted Repos \r\n\r\n* [dotnet/framework/sdk](https://hub.docker.com/_/microsoft-dotnet-framework-sdk/): .NET Framework SDK \r\n* [dotnet/framework/aspnet](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): ASP.NET Runtime  \r\n* [dotnet/framework/wcf](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): Windows Communication Foundation \r\n* [dotnet/framework/runtime](https://hub.docker.com/_/microsoft-dotnet-framework-runtime/): .NET Framework Runtime\r\n* [dotnet/framework/samples](https://hub.docker.com/_/microsoft-dotnet-framework-samples/): .NET Framework Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/137","RelatedDescription":"Open issue \".NET Framework Docker images support for Windows Server, version 1909\" (#137)"},{"Id":"521830642","IsPullRequest":false,"CreatedAt":"2019-11-12T22:05:51","Actor":"MichaelSimons","Number":"136","RawContent":null,"Title":".NET Core Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Core Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Core Docker images have been published for Nano Server, version 1909. \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-docker#1460](https://github.com/dotnet/dotnet-docker/issues/1460)\r\n## Details\r\n\r\n* [dotnet-docker#1457](https://github.com/dotnet/dotnet-docker/pull/1457)\r\n\r\n.NET Core tags containing the substring `nanoserver-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-core).\r\n\r\n.NET Core multi-arch tags, such as `3.0`, have been updated to use `nanoserver-1909` images if your host is Windows Server 1909 or higher.\r\n\r\n### Impacted Repos\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk/): .NET Core SDK\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): ASP.NET Core Runtime\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime/): .NET Core Runtime\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples/): .NET Core Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/136","RelatedDescription":"Open issue \".NET Core Docker images support for Windows Server, version 1909\" (#136)"},{"Id":"520243813","IsPullRequest":false,"CreatedAt":"2019-11-08T21:33:12","Actor":"CESARDELATORRE","Number":"135","RawContent":null,"Title":"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)","State":"open","Body":"This week (coinciding with Microsoft Ignite 2019) we announced the release of **ML.NET 1.4 GA**. \r\nThere are many new features such as:\r\n\r\n- **New Deep Learning Image Classifier (GA):** GPU support for training and inference Image Classifier ML models.\r\n\r\n- **Database Loader  (GA):** You can train your model with data directly from any relational database supported by System.Data.\r\n\r\n- **Enhanced for .NET Core 3.0  (GA):** Performance improvements thanks to hardware intrinsics feature in .NET Core 3.0.\r\n\r\n- **PredictionEnginePool for scalable deployments (GA):** Recommended approach for multi-threaded scalable apps such as ASP.NET Core apps/services and Azure Functions\r\n\r\n- **ML.NET and .NET support in Jupyter notebooks:**  You can now run any .NET code (C# / F#) in Jupyter notebooks and therefore run ML.NET code in it as well. Great for exploring and documenting model training experiments, data distribution exploration, data cleaning, plotting data charts, learning scenarios such as ML.NET courses, hands-on-labs and quizzes, etc.\r\n\r\nSee details in the following **Blog Posts**:\r\n\r\n- [Announcing ML.NET 1.4 general availability (Machine Learning for .NET)](https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-4-global-availability-machine-learning-for-net/)\r\n\r\n- [Using ML.NET in Jupyter notebooks](https://devblogs.microsoft.com/cesardelatorre/using-ml-net-in-jupyter-notebooks/)\r\n\r\n- [.NET Core with Jupyter Notebooks](https://devblogs.microsoft.com/dotnet/net-core-with-juypter-notebooks-is-here-preview-1/)\r\n","Url":"https://github.com/dotnet/announcements/issues/135","RelatedDescription":"Open issue \"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)\" (#135)"},{"Id":"517169249","IsPullRequest":false,"CreatedAt":"2019-11-04T13:57:09","Actor":"leecow","Number":"134","RawContent":null,"Title":".NET Core 3.1.0 Preview 2","State":"open","Body":".NET Core 3.1.0 Preview 2 is available and https://github.com/dotnet/core/issues/3744 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview2.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-2/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-2/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 2, either responding to https://github.com/dotnet/core/issues/3744, creating a new issue or creating a new issue in one of the following repos:\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/134","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 2\" (#134)"},{"Id":"514753283","IsPullRequest":false,"CreatedAt":"2019-10-30T15:14:43","Actor":"jaredpar","Number":"133","RawContent":null,"Title":"Repository Consolidation Timeline","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27549.*\r\n\r\nAs we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setupmoves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM PST on November 13th. We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository.","Url":"https://github.com/dotnet/announcements/issues/133","RelatedDescription":"Open issue \"Repository Consolidation Timeline\" (#133)"},{"Id":"513963125","IsPullRequest":false,"CreatedAt":"2019-10-29T14:32:55","Actor":"mthalman","Number":"132","RawContent":null,"Title":"Release of Alpine 3.10 Docker images","State":"open","Body":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)","Url":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Open issue \"Release of Alpine 3.10 Docker images\" (#132)"},{"Id":"508132491","IsPullRequest":false,"CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Number":"131","RawContent":null,"Title":".NET Core 3.1.0 Preview 1","State":"open","Body":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 1\" (#131)"},{"Id":"506832844","IsPullRequest":false,"CreatedAt":"2019-10-14T19:26:10","Actor":"terrajobst","Number":"130","RawContent":null,"Title":".NET Core 3.0 concludes the .NET Framework API porting project","State":"open","Body":"We started in .NET Core 1.0 with a very minimal API set that only included \\~18K of the .NET Framework APIs. With [.NET Standard 2.0](https://devblogs.microsoft.com/dotnet/announcing-net-standard-2-0/), we tried to make it much more viable to share code between .NET Framework, .NET Core, and Xamarin which resulted in approximately 38K .NET Frameworks APIs being available in .NET Core 2.0. We also built the [Windows Compatibility Pack](https://devblogs.microsoft.com/dotnet/announcing-the-windows-compatibility-pack-for-net-core/) which made another 21K .NET Framework APIs available to .NET Core, resulting in almost 60K additional APIs. And in .NET Core 3.0 we added WPF and WinForms, which increased the number of .NET Framework APIs ported to .NET Core to over 120k, which is more than half of all .NET Framework APIs.\r\n\r\nIt’s also worth pointing out that we added about 62K APIs to .NET Core that don’t exist in .NET Framework. If we compare their total number of APIs, .NET Core has about 80% of the API surface of .NET Framework.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://user-images.githubusercontent.com/5169960/66777114-f8db7c80-ee7c-11e9-9161-acfe1c491586.png\" width=\"600\" align=\"center\">\r\n</p>\r\n\r\nWe announced that the [future of .NET](https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/) will be based on .NET Core. And at Build 2019, [Scott Hunter stated](https://www.youtube.com/watch?v=ZlO1utbB2GQ&t=54m20s) that AppDomains, remoting, Web Forms, WCF server, and Windows Workflow won’t be ported to .NET Core.\r\n\r\nWith .NET Core 3.0, we’re at the point where we’ve ported all technologies that are required for modern workloads, be that desktop apps, mobile apps, console apps, web sites, or cloud services. That’s not to say that we don’t have any gaps or opportunities for new technologies, but we generally believe we won’t be finding them in the .NET Framework code base anymore. Moving forward, we’re focusing our resources on incorporating new technologies.\r\n\r\nSimultaneously, we’re looking into releasing more of the [.NET Framework code base under the MIT license](https://github.com/microsoft/referencesource) on GitHub to allow the community to create OSS projects for technologies we’re not intending to bring to .NET Core. For example, there already are community projects for [CoreWF](https://github.com/UiPath/corewf) and [CoreWCF](https://github.com/CoreWCF/CoreWCF).\r\n\r\nWe’d like to thank everyone who filed issues with requests for APIs being ported. Those issues allowed us to prioritize and close the gaps that prevented people from porting to .NET Core.\r\n\r\nBut since we generally no longer plan to bring existing technologies from .NET Framework to .NET Core we’ll be closing all issues that are [labeled with port-to-core](https://github.com/dotnet/corefx/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3Aport-to-core).\r\n\r\n### Discussion\r\n\r\nTo discuss this issue, please comment on the corresponding issue at https://github.com/dotnet/corefx/issues/41769.","Url":"https://github.com/dotnet/announcements/issues/130","RelatedDescription":"Open issue \".NET Core 3.0 concludes the .NET Framework API porting project\" (#130)"},{"Id":"505445666","IsPullRequest":false,"CreatedAt":"2019-10-10T18:45:56","Actor":"TaraOverfield","Number":"129","RawContent":null,"Title":"October 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework October 2019 Cumulative Update for Windows 10 version 1903 and version 1909](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-cumulative-updates-windows-10-version-1903-and-windows-10-version-1909/)\r\n* [.NET Framework October 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/)\r\n* [.NET Framework October 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/129","RelatedDescription":"Open issue \"October 2019 .NET Updates\" (#129)"},{"Id":"505328689","IsPullRequest":false,"CreatedAt":"2019-10-10T15:19:53","Actor":"carloreggiani","Number":"128","RawContent":null,"Title":"Docker Stop return status Exited \"(3221225786)\"","State":"closed","Body":"Hi\r\nI'm investigating a issue regarding official MCR images on a Win2019 server with Docker EE engine 19.03.2.\r\n\r\nThe images that I'm unsing are:\r\nmcr.microsoft.com/windows/servercore:1809\r\nmcr.microsoft.com/dotnet/framework/aspnet:4.8\r\n\r\nStopping containers based on these images (\"docker stop\" command) I'm getting: \r\n\"Exited (3221225786)\"\r\n\r\nOn linux a stop command normally return: \"Exited (137)\"\r\n\r\nIs it a normal behaviour? What's means 3221225786?\r\n\r\nThanks for any support\r\n\r\nCarlo","Url":"https://github.com/dotnet/announcements/issues/128","RelatedDescription":"Closed issue \"Docker Stop return status Exited \"(3221225786)\"\" (#128)"},{"Id":"504325600","IsPullRequest":false,"CreatedAt":"2019-10-08T23:14:11","Actor":"terrajobst","Number":"127","RawContent":null,"Title":"Consolidated repo names","State":"open","Body":"[ann]: https://github.com/dotnet/announcements/issues/119\r\n\r\nAs we announced earlier, we're [planning on consolidating][ann] some of the repositories in the dotnet org. While this is still work in progress, we'd like to give you an update on where we are.\r\n\r\nSo far, we've identified the following repos:\r\n\r\n* dotnet/**runtime**\r\n\t- Will contain [coreclr](https://github.com/dotnet/coreclr), [corefx](https://github.com/dotnet/corefx), [core-setup](https://github.com/dotnet/core-setup), [aspnet/Extensions](https://github.com/aspnet/Extensions), and some of [mono/mono](https://github.com/mono/mono)\r\n* [dotnet/**sdk**](https://github.com/dotnet/sdk)\r\n\t- Will contain [toolset](https://github.com/dotnet/toolset), [sdk](https://github.com/dotnet/sdk), [cli](https://github.com/dotnet/cli)\r\n* dotnet/**installer**\r\n\t- Renamed from [core-sdk](https://github.com/dotnet/core-sdk)\r\n* dotnet/**aspnetcore**\r\n\t- Moved from [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) and will also contain [aspnet/AspNetCore-Tooling](https://github.com/aspnet/AspNetCore-Tooling)\r\n* dotnet/**efcore**\r\n\t- Moved from [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore)\r\n* [dotnet/**winforms**](https://github.com/dotnet/winforms)\r\n\t- Unchanged, but listed for clarity \r\n* [dotnet/**wpf**](https://github.com/dotnet/wpf)\r\n\t- Unchanged, but listed for clarity\r\n\r\n### Name changes\r\n\r\nYou might notice that we changed our mind on naming from our [earlier announcement][ann]. Based on your feedback, we decided to go with **dotnet/runtime** instead of **dotnet/platform** and **dotnet/sdk** instead of **dotnet/cli**.\r\n\r\nSeveral people pointed out that the previous names weren't relatable to how we talk about the product, for example on download pages. So, we decided to match the product distributions as the primary design point for the new names. We generally refer to the bits you need to run your app as *the runtime* and the bits you need to build apps as *the SDK*. This also matches the naming chosen by other platforms.\r\n\r\n### New repos can't be used for .NET Core 3.x or earlier\r\n\r\nThe consolidated repositories are going to be about .NET 5 and going forward. It will not be possible to build .NET Core 3.1 or earlier from these repositories. As such, only the master branch from each of the repositories will be brought forward. There will be no porting of the individual release branches in the source repositories.\r\n\r\n### Personal names and email addresses\r\n\r\nSince we're planning on rebasing the history in the merged repositories, we can map your name and email address to new values as well. We primarily do this to support our friends in the LGBTQ+ community who have changed their names to reflect their identities. However, anybody is welcome to use this to change their email and name.\r\n\r\nWhatever your reason might be: we value your contributions and we hope this small gesture makes your life a little bit better. So if you changed your name/email – or simply prefer us to use different values – please [submit a request](mailto:dotnet@microsoft.com&subject=.NET%20repo%20consolidation%3A%20request%20for%20name%20change&body=Hey%2C%20%0A%0AI%E2%80%99d%20like%20to%20change%20my%20email%2Fdisplay%20name%20in%20the%20consolidated%20repo%20from%20%0A%0A%20%20%20%20%20%20%20%20My%20Old%20Name%20%3Cold.me%40example.org%3E%20%0A%0Ato%20%0A%0A%20%20%20%20%20%20%20%20My%20New%20Name%20%3Cnew.me%40example.org%3E%20%0A%0AThanks%21%20%0A).\r\n\r\n### More is coming\r\n\r\nWe'll share more updates in the upcoming months. Please let us know of any concerns that we haven't addressed yet!\r\n\r\n### Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27096.","Url":"https://github.com/dotnet/announcements/issues/127","RelatedDescription":"Open issue \"Consolidated repo names\" (#127)"},{"Id":"504304108","IsPullRequest":false,"CreatedAt":"2019-10-08T22:06:07","Actor":"MichaelSimons","Number":"126","RawContent":null,"Title":"4.7.x .NET Framework SDK Docker images no longer published","State":"open","Body":"# 4.7.x .NET Framework SDK Docker images no longer published\r\n\r\nThe [4.7.x .NET Framework SDK Docker images](https://hub.docker.com/_/microsoft-dotnet-framework-sdk) will no longer be published after Oct. 8, 2019.  The 4.8 image tags should be used as a replacement.\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [microsoft/dotnet-framework-docker#428](https://github.com/microsoft/dotnet-framework-docker/issues/428)\r\n\r\n## Details\r\n\r\nAny references to the following SDK tags should be updated to reference `4.8` instead:\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2019`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2019`\r\n\r\nIf you haven't migrated to using images from [MCR](https://github.com/dotnet/announcements/issues/101) and are still using the .NET Framework repos on Docker Hub, you will need to update your tag references to MCR.  This is because the 4.8 images only exist on MCR.  These are the following Docker Hub tags that are affected and should be updated to reference the [4.8 tags at the MCR location](https://hub.docker.com/_/microsoft-dotnet-framework-sdk):\r\n* `microsoft/dotnet-framework:4.7.1-sdk`\r\n* `microsoft/dotnet-framework:4.7.1-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-1803`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2019`","Url":"https://github.com/dotnet/announcements/issues/126","RelatedDescription":"Open issue \"4.7.x .NET Framework SDK Docker images no longer published\" (#126)"},{"Id":"502102886","IsPullRequest":false,"CreatedAt":"2019-10-03T14:30:16","Actor":"MichaelSimons","Number":"125","RawContent":null,"Title":"Alpine Docker images no longer include the tzdata package in 3.0","State":"open","Body":"# Alpine Docker images no longer include the tzdata package in 3.0\r\nBeginning with the 3.0 release, the `tzdata` package has been removed from all Alpine Docker images.\r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\ndotnet/dotnet-docker#1366\r\n\r\n## Details\r\n* https://github.com/dotnet/dotnet-docker/pull/1312\r\n\r\n\r\nThis package was removed because it wasn't required for the main set of scenarios and to have consistency between the runtime-deps images across all Linux distros.  This package is still installed in the 2.x images for Alpine so this will be something to be aware of when migrating from 2.x to 3.0.\r\n\r\n\r\nYou may be impacted by this if you use any of the Alpine images and your code has a dependency on the `tzdata` package, such as using the `System.TimeZoneInfo` API.  In that case, you'll need to update your Dockerfile to explicitly install the package:\r\n```\r\nRUN apk add --no-cache tzdata\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/125","RelatedDescription":"Open issue \"Alpine Docker images no longer include the tzdata package in 3.0\" (#125)"},{"Id":"497868605","IsPullRequest":false,"CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Number":"124","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.0","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n","Url":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.0\" (#124)"},{"Id":"494223006","IsPullRequest":false,"CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Number":"123","RawContent":null,"Title":".NET Core 3.0 RC 1","State":"open","Body":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Open issue \".NET Core 3.0 RC 1\" (#123)"},{"Id":"491801748","IsPullRequest":false,"CreatedAt":"2019-09-10T17:23:20","Actor":"leecow","Number":"122","RawContent":null,"Title":"September 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework September 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-security-and-quality-rollup/)\r\n* [.NET Framework September 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Open issue \"September 2019 .NET Updates\" (#122)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1228429715607826434","CreatedAt":"2020-02-14T21:24:01+00:00","UserScreenname":"dotnet","Text":"Hey @ASPNET devs! Did you know that #ASPNET Core now enables developers to build gRPC services? Yeap. Now you can u… https://t.co/YO2phsGDg4","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":124,"FavoriteCount":42,"RawContent":null},{"Id":"1228351952477704193","CreatedAt":"2020-02-14T16:15:01+00:00","UserScreenname":"dotnet","Text":"18 years ago today, on stage at the @VisualStudio launch event, @BillGates introduced .NET wrapped with ❤️ 💕 💗 ❣️ .… https://t.co/sJ2IpGnUQi","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":1372,"FavoriteCount":491,"RawContent":null},{"Id":"1228070601430110209","CreatedAt":"2020-02-13T21:37:02+00:00","UserScreenname":"dotnet","Text":"What if you could write better code? #dotNETRocks talks to @simmdan and @gustavoas about Program Synthesis Using Ex… https://t.co/37WhkGXq1h","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":16,"FavoriteCount":5,"RawContent":null},{"Id":"1227988300276936705","CreatedAt":"2020-02-13T16:10:00+00:00","UserScreenname":"dotnet","Text":"All you need is 3:05 for #OnDotNET to teach you more about F# support in #Pulumi. Watch here: https://t.co/d780sXbuKv","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":24,"FavoriteCount":10,"RawContent":null},{"Id":"1227927398428991488","CreatedAt":"2020-02-13T12:08:00+00:00","UserScreenname":"dotnet","Text":"Learn about...\n\nLesser known features of the Cosmos DB SDK for .NET w/ @Ealsur &amp; @jeremylikness 💻… https://t.co/MJQFilLL0s","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":6,"RawContent":null},{"Id":"1227699654910980097","CreatedAt":"2020-02-12T21:03:01+00:00","UserScreenname":"dotnet","Text":".@ASPNET Core dev on #macOS? On the #ASPNET Community Standup with Sayed Ibrahim Hashimi tackled that topic and mor… https://t.co/aKAySINTY7","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":22,"FavoriteCount":9,"RawContent":null},{"Id":"1227631197334974465","CreatedAt":"2020-02-12T16:31:00+00:00","UserScreenname":"dotnet","Text":"ICYMI, we announced experimental support for gRPC-Web with .NET. gRPC-Web that allows gRPC to be called from browse… https://t.co/6SmmAVnVYO","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":115,"FavoriteCount":48,"RawContent":null},{"Id":"1227375174762106882","CreatedAt":"2020-02-11T23:33:39+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":14,"FavoriteCount":7,"RawContent":null},{"Id":"1227347585666551808","CreatedAt":"2020-02-11T21:44:02+00:00","UserScreenname":"dotnet","Text":"#dotNET Design Review. Learn 1st hand what's coming: https://t.co/d87N1JtnAP\n✅ Add an API to perform streaming tran… https://t.co/o4SmbvxC0n","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":21,"FavoriteCount":6,"RawContent":null},{"Id":"1227266049856430080","CreatedAt":"2020-02-11T16:20:02+00:00","UserScreenname":"dotnet","Text":"In this episode of #OnDotNET, Azure Event Hubs team members @KaracaSerkant and @ShubhaVijaya join to talk about how… https://t.co/m1xyQjU2fM","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":20,"FavoriteCount":6,"RawContent":null},{"Id":"1226982178904514560","CreatedAt":"2020-02-10T21:32:02+00:00","UserScreenname":"dotnet","Text":"Next up in the series... in this episode of #OnDotNET, Azure Event Hubs team members @KaracaSerkant and… https://t.co/jl1qqRKv3p","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":17,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-02-16T05:30:38.3952794Z","RunDurationInMilliseconds":15027}