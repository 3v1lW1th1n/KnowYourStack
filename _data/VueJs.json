{"Data":{"Vue":{"Events":[{"Id":"6779549633","Type":"IssuesEvent","CreatedAt":"2017-10-29T00:43:12","Actor":"nova-ind","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/issues/6951","RelatedDescription":"Opened issue \"Vue removes tab character from spans\" (#6951) at vuejs/vue","RelatedBody":"### Version\r\n2.5.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/72614/](https://jsfiddle.net/50wL7mdz/72614/)\r\n\r\n### Steps to reproduce\r\nAdd a span element containing a tab character somewhere inside the app element, like inside a paragraph, before the text to be indented.\r\n\r\n### What is expected?\r\nThe tab character should be left alone, thus being able to indent a given line.\r\n\r\n### What is actually happening?\r\nVue strips out the tab character from the span.\r\n\r\n---\r\nI am using https://yabwe.github.io/medium-editor/ to edit content for my posts. When pasting in some code, it will contain tab indentations, which are transformed into \"<span style=\"white-space: pre;\">[TAB]</span>\". Upon viewing what was saved, I came to find out Vue removes the tab characters from inside the aforementioned span tags, thus the code I pasted in loses all indentation.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"6778876071","Type":"PullRequestEvent","CreatedAt":"2017-10-28T16:14:47","Actor":"magicansk","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/pull/1854","RelatedDescription":"Opened pull request \"Add [Zh-TW] Translation docs Traditional Chinese\" (#1854) at vuejs/vue-router","RelatedBody":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\nfixed MD syntax\r\n\r\nAdd [Zh-TW] Translation docs Traditional Chinese "},{"Id":"6778827928","Type":"PullRequestEvent","CreatedAt":"2017-10-28T15:44:02","Actor":"kazupon","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/vuejs/vue-router/pull/1853","RelatedDescription":"Merged pull request \"Update SUMMARY.md\" (#1853) at vuejs/vue-router","RelatedBody":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\nfixed MD syntax"},{"Id":"6778809750","Type":"PullRequestEvent","CreatedAt":"2017-10-28T15:31:44","Actor":"magicansk","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/pull/1853","RelatedDescription":"Opened pull request \"Update SUMMARY.md\" (#1853) at vuejs/vue-router","RelatedBody":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\nfixed MD syntax"},{"Id":"6778197389","Type":"IssuesEvent","CreatedAt":"2017-10-28T07:18:33","Actor":"vue-issue-bot","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1852","RelatedDescription":"Closed issue \"Reactivity in Vue JS\" (#1852) at vuejs/vue-router","RelatedBody":"While i change route some of functionality is not working proper like ,\r\n1.Closing popover while click outside of popover\r\n2.close modal while click outside of modal\r\n3.css is not updated\r\netc.\r\nBut while i reload page its work fine.\r\n\r\n"},{"Id":"6778197376","Type":"IssuesEvent","CreatedAt":"2017-10-28T07:18:33","Actor":"Rahulkukadiya","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1852","RelatedDescription":"Opened issue \"Reactivity in Vue JS\" (#1852) at vuejs/vue-router","RelatedBody":"While i change route some of functionality is not working proper like ,\r\n1.Closing popover while click outside of popover\r\n2.close modal while click outside of modal\r\n3.css is not updated\r\netc.\r\nBut while i reload page its work fine.\r\n\r\n"},{"Id":"6777022305","Type":"PullRequestEvent","CreatedAt":"2017-10-27T20:16:10","Actor":"scottbedard","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/pull/1851","RelatedDescription":"Opened pull request \"Prevent banner from being removed by minifiers\" (#1851) at vuejs/vue-router","RelatedBody":"Trying to debug a webpack bundle splitting setup was made a bit trickier because it was hard to tell where this package was being included. Adding this should make the process a bit simpler.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"6778180575","Type":"IssuesEvent","CreatedAt":"2017-10-28T07:02:51","Actor":"jaesung2061","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/1029","RelatedDescription":"Opened issue \"Alternate method to tracking state changes via actions.\" (#1029) at vuejs/vuex","RelatedBody":"### What problem does this feature solve?\r\nI find myself taking a lot of time working with async tasks because I have to use actions. I have to write a lot of boilerplate. So instead of forcing refactoring async calls to actions, why not allow them to start tracking from the components?\r\n\r\n### What does the proposed API look like?\r\nFrom the component:\r\n\r\n```\r\nmethods() {\r\n    callApi() {\r\n        // take snapshot before api call beings\r\n        const trackerId = this.$store.track('async-call');\r\n\r\n        asyncCall().then((response) => {\r\n            this.$store.commit('makeMutation');\r\n\r\n            // take snapshot at completion\r\n            this.$store.complete(trackerId);\r\n        })\r\n    }\r\n}\r\n````\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6777248120","Type":"IssuesEvent","CreatedAt":"2017-10-27T21:16:26","Actor":"vue-issue-bot","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vuex/issues/1028","RelatedDescription":"Closed issue \"Vuex Broken promise chain.\" (#1028) at vuejs/vuex","RelatedBody":"This issue is really weird and has me stumped.\r\n\r\nThe following dispatch is not called until after the contents of then(() => { .\r\n\r\nIt's almost like dispatch is returning a resolved promise immediately and then calling the Registration_register action.\r\n\r\n`\r\n....\r\nmethods: {\r\n\t\tregister: function () {\r\n\r\n\t\t\treturn this.$store.dispatch('Registration_register', this._data).then(() => {\r\n                         // this is executed immediately \r\n\t\t\t\tif (this.isRegistered) {\r\n\t\t\t\t\tthis.$router.push({ path: '/login' });\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n// When this returns the Registration_register vuex action is called.\r\n....\r\n`\r\n\r\n Now Registration_register is called and works, no exceptions are thrown and the axios get call is successful. It seems the contents of Registration_register do not matter, the dispatch is simply called after the contents of then is run.\r\n\r\n`\r\n....\r\nactions: {\r\n\r\n\r\n\t\tRegistration_clearId ({ dispatch, commit, state }) {\r\n\t\t\tvar clear = {user: '', restaurant: '', device: '', registrationId: ''};\r\n\t\t\tcommit('Registration_setId', clear);\r\n\t\t\tCookies.set('PosDroidRegistrationID', clear);\r\n\t\t},\r\n\t\tRegistration_register ({ dispatch, commit, state }, {restaurant, device, user, pin}) {\r\n\t\t\treturn dispatch('Registration_clearId').then(() => {\r\n\t\t\t\tcommit('Registration_setIsRegistering', true);\r\n\t\t\t\treturn axios.get('api/registraton/register', {params: {restaurant, device, user, pin}}).then((result) => {\r\n\t\t\t\t\tif (result.data.result && result.data.result.valid) {\r\n\t\t\t\t\t\tvar registration = result.data.result;\r\n\t\t\t\t\t\tcommit('Registration_setId', registration);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (!result.data.status.success) {\r\n\t\t\t\t\t\t\t// Somthing went wrong show server error message.\r\n\t\t\t\t\t\t\tcommit('Registration_addError', result.data.status.message);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcommit('Registration_addError', 'Incorrect registration name or password.');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcommit('Registration_setIsRegistering', false);\r\n\t\t\t\t});\r\n\t\t\t}).catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t\t},\r\n....\r\n`\r\n\r\nHere is my Store setup.\r\n\r\n`\r\n\r\nimport Vue from 'vue';\r\nimport Vuex from 'vuex';\r\n\r\nVue.use(Vuex); // Install Vuex Data Store\r\n\r\n// Data Stores\r\nimport {Registration} from './store/registration';\r\nimport {Help} from './store/help';\r\nimport {Sync} from './store/sync';\r\nimport {Accounts} from './store/accounts';\r\nimport {Options} from './store/options';\r\nimport {Login} from './store/login';\r\n\r\nclass Store {\r\n\tstatic instance;\r\n\r\n\tconstructor () {\r\n\t\tif (this.instance) {\r\n\t\t\treturn this.instance;\r\n\t\t}\r\n\t\tthis.instance = this;\r\n\t\tthis.store = new Vuex.Store({\r\n\t\t\tmodules: {\r\n\t\t\t\tRegistration,\r\n\t\t\t\tHelp,\r\n\t\t\t\tAccounts,\r\n\t\t\t\tOptions,\r\n\t\t\t\tSync,\r\n\t\t\t\tLogin\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport default new Store().store;\r\n\r\n`\r\n\r\nVersions.\r\n    \"vue\": \"~2.3.4\",\r\n    \"vue-router\": \"^2.7.0\",\r\n    \"vuex\": \"^2.4.0\"\r\n\r\n"},{"Id":"6777248055","Type":"IssuesEvent","CreatedAt":"2017-10-27T21:16:25","Actor":"posdroid","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/1028","RelatedDescription":"Opened issue \"Vuex Broken promise chain.\" (#1028) at vuejs/vuex","RelatedBody":"This issue is really weird and has me stumped.\r\n\r\nThe following dispatch is not called until after the contents of then(() => { .\r\n\r\nIt's almost like dispatch is returning a resolved promise immediately and then calling the Registration_register action.\r\n\r\n`\r\n....\r\nmethods: {\r\n\t\tregister: function () {\r\n\r\n\t\t\treturn this.$store.dispatch('Registration_register', this._data).then(() => {\r\n                         // this is executed immediately \r\n\t\t\t\tif (this.isRegistered) {\r\n\t\t\t\t\tthis.$router.push({ path: '/login' });\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n// When this returns the Registration_register vuex action is called.\r\n....\r\n`\r\n\r\n Now Registration_register is called and works, no exceptions are thrown and the axios get call is successful. It seems the contents of Registration_register do not matter, the dispatch is simply called after the contents of then is run.\r\n\r\n`\r\n....\r\nactions: {\r\n\r\n\r\n\t\tRegistration_clearId ({ dispatch, commit, state }) {\r\n\t\t\tvar clear = {user: '', restaurant: '', device: '', registrationId: ''};\r\n\t\t\tcommit('Registration_setId', clear);\r\n\t\t\tCookies.set('PosDroidRegistrationID', clear);\r\n\t\t},\r\n\t\tRegistration_register ({ dispatch, commit, state }, {restaurant, device, user, pin}) {\r\n\t\t\treturn dispatch('Registration_clearId').then(() => {\r\n\t\t\t\tcommit('Registration_setIsRegistering', true);\r\n\t\t\t\treturn axios.get('api/registraton/register', {params: {restaurant, device, user, pin}}).then((result) => {\r\n\t\t\t\t\tif (result.data.result && result.data.result.valid) {\r\n\t\t\t\t\t\tvar registration = result.data.result;\r\n\t\t\t\t\t\tcommit('Registration_setId', registration);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (!result.data.status.success) {\r\n\t\t\t\t\t\t\t// Somthing went wrong show server error message.\r\n\t\t\t\t\t\t\tcommit('Registration_addError', result.data.status.message);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcommit('Registration_addError', 'Incorrect registration name or password.');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcommit('Registration_setIsRegistering', false);\r\n\t\t\t\t});\r\n\t\t\t}).catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t\t},\r\n....\r\n`\r\n\r\nHere is my Store setup.\r\n\r\n`\r\n\r\nimport Vue from 'vue';\r\nimport Vuex from 'vuex';\r\n\r\nVue.use(Vuex); // Install Vuex Data Store\r\n\r\n// Data Stores\r\nimport {Registration} from './store/registration';\r\nimport {Help} from './store/help';\r\nimport {Sync} from './store/sync';\r\nimport {Accounts} from './store/accounts';\r\nimport {Options} from './store/options';\r\nimport {Login} from './store/login';\r\n\r\nclass Store {\r\n\tstatic instance;\r\n\r\n\tconstructor () {\r\n\t\tif (this.instance) {\r\n\t\t\treturn this.instance;\r\n\t\t}\r\n\t\tthis.instance = this;\r\n\t\tthis.store = new Vuex.Store({\r\n\t\t\tmodules: {\r\n\t\t\t\tRegistration,\r\n\t\t\t\tHelp,\r\n\t\t\t\tAccounts,\r\n\t\t\t\tOptions,\r\n\t\t\t\tSync,\r\n\t\t\t\tLogin\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport default new Store().store;\r\n\r\n`\r\n\r\nVersions.\r\n    \"vue\": \"~2.3.4\",\r\n    \"vue-router\": \"^2.7.0\",\r\n    \"vuex\": \"^2.4.0\"\r\n\r\n"},{"Id":"6776675115","Type":"IssuesEvent","CreatedAt":"2017-10-27T18:48:41","Actor":"franzwilhelm","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/1027","RelatedDescription":"Opened issue \"Vuex form input bindings - get/set - array\" (#1027) at vuejs/vuex","RelatedBody":"### What problem does this feature solve?\r\nAs described here (https://vuex.vuejs.org/en/forms.html), form input bindings can be handled with a computed property containing a getter and a setter. As far as i know this is not possible with arrays, as the get/set is not a deep watcher. So far the code underneath has worked fine, but feels a bit hacky. How would one go around this. I think form input handling is one of vuex' most important use cases, and that this should be a feature.\r\n\r\n``` javascript\r\nwatch: {\r\n    filters: {\r\n      handler(value) {\r\n        this.$store.commit('testCreation/SET_FILTERS', [...value]);\r\n      },\r\n      deep: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      filters: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.filters = [...this.sFilters];\r\n  },\r\n  computed: {\r\n    ...mapGetters(['sFilters']),\r\n  },\r\n```\r\n\r\n### What does the proposed API look like?\r\nThe proposed API is the same as described in https://vuex.vuejs.org/en/forms.html, only a watcher that makes this possible for arrays\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"}},"RunOn":"2017-10-29T05:30:34.1060376Z","RunDurationInMilliseconds":1980}