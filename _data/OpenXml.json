{"Data":{"Sdk":{"Events":[{"Id":"10229900590","Type":"IssuesEvent","CreatedAt":"2019-08-17T16:38:51","Actor":"PingPongSet","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/619","RelatedDescription":"Opened issue \"Get cell value via column name and other functionality with Open XML SDK\" (#619) at OfficeDev/Open-XML-SDK","RelatedBody":"I need to read a *.xlsx file using Open XML SDK, I wonder if the functionality below is available:\r\n\r\n1 Ability to read cell value using column name like below?\r\n\r\n  var row0ColA = row[0][\"ColA\"]\r\n  \r\n2 ability to read more than one tabs\r\n\r\n3 tab 1's header starts at row 2, tab 2's header starts  row 1\r\n\r\n4 Row filtering ideally before loading file\r\n\r\n5 Column filtering ideally before loading file\r\n\r\nAny code example would be appreicated!\r\n\r\n\r\nhttps://docs.microsoft.com/en-us/office/open-xml/spreadsheets\r\n"},{"Id":"10218728389","Type":"IssuesEvent","CreatedAt":"2019-08-15T16:40:47","Actor":"mc2002tii","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/618","RelatedDescription":"Opened issue \"ChangeDocumentType does not fully remove vbaProject reference\" (#618) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nI'm using the sample code at https://docs.microsoft.com/en-us/office/open-xml/how-to-convert-a-word-processing-document-from-the-docm-to-the-docx-file-format to remove macros from a docm file and convert it to docx because we have some filtering software in place that prevents transferring files with macros.\r\n\r\nUsing that sample code I delete the VbaProjectPart, change the document type, and change the file extension.  However, our filtering software identifies the resulting file as corrupt (Word 2016 opens the file just fine though, so it is probably within spec).\r\n\r\nWhen I examine the contents of the .docx file, I notice that the [Content_Types].xml file at the root   still contains the following line:\r\n<Default ContentType=\"application/vnd.ms-office.vbaProject\" Extension=\"bin\"/>\r\n\r\nThe VbaProjectPart PartName reference is gone and no other content in the .docx file structure contains any macro components.  I think that one line in [Content_Types].xml is enough to trip up our scanner.\r\n\r\nIs there some other way to get rid of this line that I'm missing, is this a bug, or is this structure just something that our scanning software should accept?\r\n\r\n**Information**\r\n\r\n- .NET Target: .NET Core 2.1.12\r\n- DocumentFormat.OpenXml Version: 2.10.0-beta0002\r\n\r\n**Repro**\r\n\r\n            bool fileChanged = false;\r\n\r\n            using (WordprocessingDocument document = WordprocessingDocument.Open(sourcePath, true))\r\n            {\r\n                // Access the main document part.\r\n                var docPart = document.MainDocumentPart;\r\n\r\n                // Look for the vbaProject part. If it is there, delete it.\r\n                var vbaPart = docPart.VbaProjectPart;\r\n                if (vbaPart != null)\r\n                {\r\n                    // Delete the vbaProject part and then save the document.\r\n                    docPart.DeletePart(vbaPart);\r\n                    docPart.Document.Save();\r\n\r\n                    // Track that the document has been changed.\r\n                    fileChanged = true;\r\n                }\r\n\r\n                // Change the document type to not macro-enabled\r\n                document.ChangeDocumentType(WordprocessingDocumentType.Document);\r\n            }\r\n\r\n            if (fileChanged)\r\n            {\r\n                // If it already exists, it will be deleted!\r\n                if (File.Exists(destinationPath))\r\n                    {\r\n                        File.Delete(destinationPath);\r\n                    }\r\n\r\n                // Rename the file and save changes\r\n                Directory.CreateDirectory(destinationDirectory);\r\n                File.Move(sourcePath, destinationPath);\r\n            }\r\n\r\n**Observed**\r\n\r\nfile.docx [Content_Types].xml still contains a macro reference.\r\n\r\n**Expected**\r\nfile.docx should not contain any references to macros.\r\n\r\n"},{"Id":"10211575778","Type":"IssuesEvent","CreatedAt":"2019-08-14T17:16:49","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/617","RelatedDescription":"Closed issue \"Is *.xlsb supported\" (#617) at OfficeDev/Open-XML-SDK","RelatedBody":"Is *.xlsb supported?"},{"Id":"10203541466","Type":"IssuesEvent","CreatedAt":"2019-08-13T17:50:09","Actor":"PingPongSet","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/617","RelatedDescription":"Opened issue \"Is *.xlsb supported\" (#617) at OfficeDev/Open-XML-SDK","RelatedBody":"Is *.xlsb supported?"},{"Id":"10140674685","Type":"IssuesEvent","CreatedAt":"2019-08-03T06:19:24","Actor":"nihao0818","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/616","RelatedDescription":"Opened issue \"The thread-safe issue regarding IsolatedStorage\" (#616) at OfficeDev/Open-XML-SDK","RelatedBody":"Is this a:\r\n- [1] Issue with the OpenXml library\r\n- [ ] Question on library usage\r\n\r\n**Description**\r\n\r\nIt was known to us that OpenXMLSDK had an implementation to use IsolatedStorage for PartPackage larger than 10MB which was not thread-safe. \r\n\r\nDetails:\r\nhttps://social.msdn.microsoft.com/Forums/office/en-US/fcccab24-cd48-40fc-afbb-a7c30191a9e1/open-xml-sdk-v2-handling-multiple-threads\r\nhttps://stackoverflow.com/questions/21482820/openxml-hanging-while-writing-elements\r\n\r\nIâ€™m wondering if that implementation has been changed since then. And if not, do you have any recommendation to handle it in a multi-thread environment? \r\n\r\n**Information**\r\n\r\n- .NET Target:  .NET Framework 4.6.2\r\n- DocumentFormat.OpenXml Version: latest\r\n"}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2019-08-20T05:30:48.8096015Z","RunDurationInMilliseconds":1004}