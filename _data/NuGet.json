{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1, released in 1999 and 2006...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"10890949087","Type":"IssuesEvent","CreatedAt":"2019-11-18T21:31:50","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7704","RelatedDescription":"Opened issue \"[PackageType]Update DB2AzureSearch and recreate index\" (#7704) at NuGet/NuGetGallery","RelatedBody":"DB2AzureSearch needs to be updated to make the same document insertions that Catalog2AzureSearch will be making (see https://github.com/NuGet/NuGetGallery/issues/7702)\r\n\r\nAfter the update is complete, a new index with the updated documents will need to be spun up to backfill the packagetype data."},{"Id":"10890884503","Type":"IssuesEvent","CreatedAt":"2019-11-18T21:23:02","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7703","RelatedDescription":"Opened issue \"[PackageType]Investigate performance impacts\" (#7703) at NuGet/NuGetGallery","RelatedBody":"When discussing how the packageType data should be searched, we had 2 possible options for the data in the document:\r\n\r\nuse a collection filter query\r\nuse a search text query.\r\n\r\nInvestigate the performance impact of each to determine which we should use with package types going forward. This blocks Catalog2AzureSearch/DB2AzureSearch/AzureSearchService changes (probably)"},{"Id":"10890865795","Type":"IssuesEvent","CreatedAt":"2019-11-18T21:20:23","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7702","RelatedDescription":"Opened issue \"[PackageType]Update Catalog2AzureSearch\" (#7702) at NuGet/NuGetGallery","RelatedBody":"Catalog2AzureSearch needs to be updated to insert the new packageTypes document field."},{"Id":"10889856211","Type":"IssuesEvent","CreatedAt":"2019-11-18T19:09:18","Actor":"phuongndtech","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7701","RelatedDescription":"Opened issue \"Unable to load the service index for source https://api.nuget.org/v3/index.json\" (#7701) at NuGet/NuGetGallery","RelatedBody":"Issue: [nuget.org] Unable to load the service index for source https://api.nuget.org/v3/index.json.\r\n  An error occurred while sending the request.\r\n  The request was aborted: Could not create SSL/TLS secure channel.\r\nIDE: Visual Studio 2019\r\nPlease help me resolve it\r\n\r\nThanks"},{"Id":"10889318779","Type":"IssuesEvent","CreatedAt":"2019-11-18T17:59:05","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7699","RelatedDescription":"Reopened issue \"Setup instructions cannot create database(s)\" (#7699) at NuGet/NuGetGallery","RelatedBody":"When I clone the project and go through the setup instructions, specifically running `.\\tools\\Setup-DevEnvironment.ps1` I get errors on the database creation steps:\r\n\r\n```\r\n[BEGIN] Running Migrations\r\nUpdating Nuget Gallery database...\r\nERROR: Method not found: 'System.Data.Entity.ModelConfiguration.Configuration.IndexConfiguration System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.HasIndex(System.Linq.Expressions.Expression`1<System.Func`2<!0,!!0>>)'.\r\nUpdating Nuget Gallery Support request database...\r\nERROR: Method not found: 'System.Data.Common.DbConnection System.Data.Entity.Core.Common.DbProviderServices.CloneDbConnection(System.Data.Common.DbConnection)'.\r\nUpdate Complete!\r\n[DONE] Running Migrations\r\n```\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Clone project\r\n2. Run `.\\build`\r\n3. Run `.\\tools\\Setup-DevEnvironment.ps1`\r\n4. See error\r\n\r\n### Expected behavior\r\nExpect database creation to occur so that project can run successfully."},{"Id":"10888555223","Type":"IssuesEvent","CreatedAt":"2019-11-18T16:28:13","Actor":"festivegoose","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7699","RelatedDescription":"Closed issue \"Setup instructions cannot create database(s)\" (#7699) at NuGet/NuGetGallery","RelatedBody":"When I clone the project and go through the setup instructions, specifically running `.\\tools\\Setup-DevEnvironment.ps1` I get errors on the database creation steps:\r\n\r\n```\r\n[BEGIN] Running Migrations\r\nUpdating Nuget Gallery database...\r\nERROR: Method not found: 'System.Data.Entity.ModelConfiguration.Configuration.IndexConfiguration System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.HasIndex(System.Linq.Expressions.Expression`1<System.Func`2<!0,!!0>>)'.\r\nUpdating Nuget Gallery Support request database...\r\nERROR: Method not found: 'System.Data.Common.DbConnection System.Data.Entity.Core.Common.DbProviderServices.CloneDbConnection(System.Data.Common.DbConnection)'.\r\nUpdate Complete!\r\n[DONE] Running Migrations\r\n```\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Clone project\r\n2. Run `.\\build`\r\n3. Run `.\\tools\\Setup-DevEnvironment.ps1`\r\n4. See error\r\n\r\n### Expected behavior\r\nExpect database creation to occur so that project can run successfully."},{"Id":"10882845109","Type":"PullRequestEvent","CreatedAt":"2019-11-18T02:21:41","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7697","RelatedDescription":"Merged pull request \"Point api/v2/curated-feeds to main V2 feed\" (#7697) at NuGet/NuGetGallery","RelatedBody":"Address https://github.com/NuGet/NuGetGallery/issues/7689.\r\n\r\nWe've been returning all packages for the \"microsoftdotnet\" feed for quite a while now. I think it's safe to formalize this even more by making the calls go through our main V2 controller. This helps reduce code and makes the server-side cache be shared between two endpoints that currently behave the almost the same. Differences are: \r\n\r\n1. The `/Packages()` endpoint returned at most 40 on the curated feed controller. This will become 100 which is the max in the non-curated feed controller.\r\n1. Non-existent curated feeds will now 200 and behave no different than the \"microsoftdotnet\" feed. Note that \"microsoftdotnet\" accounts for 99.89% of the requests so I don't think this is a big deal."},{"Id":"10882453998","Type":"PullRequestEvent","CreatedAt":"2019-11-18T00:15:18","Actor":"zhhyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7700","RelatedDescription":"Opened pull request \"[Token scanning-Phase 1-3] API keys profile page\" (#7700) at NuGet/NuGetGallery","RelatedBody":"API keys profile page shows the revoked API keys info.\r\n![image](https://user-images.githubusercontent.com/41028779/69016569-46537980-0954-11ea-9ac2-19a1ce9d03e9.png)\r\nOr\r\n![image](https://user-images.githubusercontent.com/41028779/69016631-e5787100-0954-11ea-8b5b-eadbd50c7e60.png)\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"10891464115","Type":"IssuesEvent","CreatedAt":"2019-11-18T22:47:42","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8837","RelatedDescription":"Opened issue \"Add Missing PushCommand Functional Tests for snupkg and FileNotFound scenarios\" (#8837) at NuGet/Home","RelatedBody":"## Details about Problem\r\nPushCommandTests currently miss testing several features of Push involving snupkgs and FileNotFound errors. \r\n\r\nThese tests are needed so that there is existing test code that can be modified in the soon to be resolved bug fix: https://github.com/NuGet/Home/issues/8148"},{"Id":"10891130958","Type":"IssuesEvent","CreatedAt":"2019-11-18T21:57:22","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/8804","RelatedDescription":"Reopened issue \"Logic in _GetRestoreProjectStyle should be in a task\" (#8804) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nThe `_GetRestoreProjectStyle` target in `NuGet.targets` has its logic declared as MSBuild XML rather than a task.  This makes it more difficult to unit test and reuse the logic.\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): Any\r\n\r\nNuGet version (x.x.x.xxx): Any\r\n\r\ndotnet.exe --version (if appropriate): Any\r\n\r\nVS version (if appropriate): Any\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Any\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1.\r\n\r\n2.\r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"10889878148","Type":"IssuesEvent","CreatedAt":"2019-11-18T19:11:59","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8836","RelatedDescription":"Opened issue \"[Centrally managing NuGet packages and versions] Implement the changes necessary for the Restore\" (#8836) at NuGet/Home","RelatedBody":""},{"Id":"10889674953","Type":"IssuesEvent","CreatedAt":"2019-11-18T18:46:00","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8835","RelatedDescription":"Opened issue \"retarget signing/verification project to netcoreapp5.0\" (#8835) at NuGet/Home","RelatedBody":"retarget to netcoreapp5.0  and fix all broken tests."},{"Id":"10889625184","Type":"IssuesEvent","CreatedAt":"2019-11-18T18:39:16","Actor":"xavierdecoster","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8834","RelatedDescription":"Opened issue \"Implement --offline support for dotnet list package\" (#8834) at NuGet/Home","RelatedBody":""},{"Id":"10889598951","Type":"IssuesEvent","CreatedAt":"2019-11-18T18:35:43","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8802","RelatedDescription":"Closed issue \"Insertion of NuGet 5.5.0-preview.1.6293\" (#8802) at NuGet/Home","RelatedBody":"VS:\r\n* [x] Insertion PR - https://devdiv.visualstudio.com/DevDiv/_git/VS/pullrequest/213394\r\n\r\n.NET Core (master):\r\n* [ ] SDK - TODO\r\n* [ ] CLI - TODO\r\n* [ ] Toolset - TODO"},{"Id":"10889431352","Type":"IssuesEvent","CreatedAt":"2019-11-18T18:13:49","Actor":"rainersigwald","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8833","RelatedDescription":"Opened issue \"Downgrading transitive PackageReferences\" (#8833) at NuGet/Home","RelatedBody":"_From @jhudsoncedaron on Friday, November 15, 2019 7:52:06 PM_\r\n\r\nWe have a DLL that contains downgrade instructions, so despite being built in the project containing the latest version, it must inherently be loadable on the oldest version we ever shipped. In order to do so, we used PackageReference Update= to pin reference of dlls when building that version.\r\n\r\nUnfortunately this doesn't really work for some reason we don't know. The Update= version force is ignored and the higher version in the dependent dll is used instead. This actually causes the dynamic load to fail whenever we need to update the packages. For some reason, despite the same artifact being present in the dll refrenced by PackageVersion, the dynamic load succeeds there (or we would have noticed the very first time we tried this).\r\n\r\nDon't let netstandard2.0 fool you; we are building with the 3.0 toolchain and the executable (omitted from the sample) is linked against netcoreapp3.0. You can check the dependencies of DynamicLoaded.dll with ildasm. It should reference Demo.dll version 1.0.0 but it references Demo.dll version 2.0.0\r\n\r\nThe real If.dll is not an interface-only dll. It contains quite a bit of code for upgrade and downgrade, and the current version of If.dll used during upgrade can't function with the older version of Demo.dll.\r\n\r\nThis issue is newly discovered a few days ago, thankfully not by a customer.\r\n\r\n[downgradedemo.zip](https://github.com/dotnet/sdk/files/3852941/downgradedemo.zip)\r\n\r\n\r\n_Copied from original issue: dotnet/sdk#3918_"},{"Id":"10885619420","Type":"IssuesEvent","CreatedAt":"2019-11-18T10:45:29","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8832","RelatedDescription":"Opened issue \"[Test Failure]Confusing warning and error occur when building the UWP project after installing the package “Blend.Interactivity.Wpf”\" (#8832) at NuGet/Home","RelatedBody":"Please read the following information before posting the issue.\r\n\r\n## Details about Problem\r\nNuGet version: NuGet Client Release-5.4.x\\5.4.0.6314\r\nVS Version: D16.4\\29516.08\r\nOS: Windows-10-Enterprise-19H1-04-05-2019 ENU\r\n## Detailed repro steps \r\n1. Create a C# Blank App (Universal Windows) template via VS.\r\n2. Open PM UI of the project by right-clicking the project->Manage NuGet Packages… in Solution Explorer.\r\n3. Search the package “Blend.Interactivity.Wpf” in Browse tab and install it.\r\n4. Warning NU1701 show in the Error List dialog and build the solution.\r\n## Expected\r\nWarning NU1701 will still show in the Error List dialog when building/rebuilding the solution. (Same with the result of installing the same package into C# .Net Core Console App as below screenshot)\r\n![CorrectWarning](https://user-images.githubusercontent.com/20632625/69046216-6c038000-0a33-11ea-9e86-f167a938d1c1.png)\r\n\r\n## Actual\r\nConfusing warning PRI257 and file not found error show in the Error List dialog when building/rebuilding the solution as below screenshot.\r\n![ConfusingWarning](https://user-images.githubusercontent.com/20632625/69046223-6efe7080-0a33-11ea-884c-829d0f2aab34.png)\r\n\r\n## Note\r\nIt is not a regression bug since it repro on 16.1 GA (D16.1\\28916.193) with implicit NuGet 5.1.0.6013.\r\n\r\n\r\n"},{"Id":"10883413774","Type":"IssuesEvent","CreatedAt":"2019-11-18T04:48:08","Actor":"dora-gt","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/6735","RelatedDescription":"Closed issue \"install fails with exception\" (#6735) at NuGet/Home","RelatedBody":"Hi,\r\n\r\nI'm trying to compile my project but nuget install fails.\r\nDo you have any idea? (Is it related to endianness? PPC64 is big-endian)\r\n\r\n- NuGet version: 4.5.1.4879\r\n- OS version: CentOS Linux release 7.4.1708 (AltArch) / PPC64\r\n- mono version: \r\n```\r\nMono JIT compiler version 5.10.1.12 (tarball 2018年  3月 24日 土曜日 12:35:22 JST)\r\nCopyright (C) 2002-2014 Novell, Inc, Xamarin Inc and Contributors. www.mono-project.com\r\n\tTLS:           __thread\r\n\tSIGSEGV:       altstack\r\n\tNotifications: epoll\r\n\tArchitecture:  ppc\r\n\tDisabled:      none\r\n\tMisc:          softdebug \r\n\tInterpreter:   yes\r\n\tGC:            sgen (concurrent by default)\r\n```\r\n- Worked before? : no\r\n\r\n```\r\n$ mono nuget.exe install -Verbosity detailed -NonInteractive\r\nNuGet Version: 4.5.1.4879\r\nIndex was outside the bounds of the array.\r\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\r\n  at System.Collections.Generic.LargeArrayBuilder`1[T].GetBuffer (System.Int32 index) [0x00022] in <a2d15e1cd19f4b2da976176ec861d238>:0 \r\n  at System.Collections.Generic.LargeArrayBuilder`1[T].CopyTo (System.Collections.Generic.CopyPosition position, T[] array, System.Int32 arrayIndex, System.Int32 count) [0x00041] in <a2d15e1cd19f4b2da976176ec861d238>:0 \r\n  at System.Collections.Generic.SparseArrayBuilder`1[T].CopyTo (T[] array, System.Int32 arrayIndex, System.Int32 count) [0x0009a] in <a2d15e1cd19f4b2da976176ec861d238>:0 \r\n  at System.Collections.Generic.SparseArrayBuilder`1[T].ToArray () [0x00028] in <a2d15e1cd19f4b2da976176ec861d238>:0 \r\n  at System.Linq.Enumerable+Concat2Iterator`1[TSource].ToArray () [0x00024] in <a2d15e1cd19f4b2da976176ec861d238>:0 \r\n  at System.Linq.Enumerable.ToArray[TSource] (System.Collections.Generic.IEnumerable`1[T] source) [0x00021] in <a2d15e1cd19f4b2da976176ec861d238>:0 \r\n  at NuGet.Frameworks.NuGet.Frameworks1070507.DefaultFrameworkMappings.get_CompatibilityMappings () [0x00452] in <ca6c4e41b9654439919d55160f2b588f>:0 \r\n  at NuGet.Frameworks.NuGet.Frameworks1070507.FrameworkNameProvider.InitMappings (System.Collections.Generic.IEnumerable`1[T] mappings) [0x00055] in <ca6c4e41b9654439919d55160f2b588f>:0 \r\n  at NuGet.Frameworks.NuGet.Frameworks1070507.FrameworkNameProvider..ctor (System.Collections.Generic.IEnumerable`1[T] mappings, System.Collections.Generic.IEnumerable`1[T] portableMappings) [0x0010e] in <ca6c4e41b9654439919d55160f2b588f>:0 \r\n  at NuGet.Frameworks.NuGet.Frameworks1070507.DefaultFrameworkNameProvider..ctor () [0x0001c] in <ca6c4e41b9654439919d55160f2b588f>:0 \r\n  at NuGet.Frameworks.NuGet.Frameworks1070507.DefaultFrameworkNameProvider.get_Instance () [0x0000a] in <ca6c4e41b9654439919d55160f2b588f>:0 \r\n  at NuGet.Packaging.PackagesConfigReader..ctor (System.Xml.Linq.XDocument xml) [0x00000] in <ca6c4e41b9654439919d55160f2b588f>:0 \r\n  at NuGet.CommandLine.DownloadCommandBase.GetInstalledPackageReferences (System.String projectConfigFilePath, System.Boolean allowDuplicatePackageIds) [0x00011] in <ca6c4e41b9654439919d55160f2b588f>:0 \r\n  at NuGet.CommandLine.InstallCommand+<PerformV2RestoreAsync>d__36.MoveNext () [0x0005b] in <ca6c4e41b9654439919d55160f2b588f>:0 \r\n```\r\n\r\n\r\n"},{"Id":"10880783667","Type":"IssuesEvent","CreatedAt":"2019-11-17T13:36:42","Actor":"pingzing","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8831","RelatedDescription":"Opened issue \"Native Dependencies inside NuGet packages not copied into Xamarin.Android APKs \" (#8831) at NuGet/Home","RelatedBody":"Apologies if this is the wrong place--this seems like it could very well sit somewhere between a) my own fault, b) NuGet, c) MSBuild, or d) The Xamarin.Android build process. I thought I'd start here.\r\n\r\nI'm working on a Xamarin Forms project with a dependency on a NuGet package that bundles a native library. That native library is correctly copied into a UWP package's `.appx`, and appropriately P/Invokable. The library's Android version is _not_ copied into the resultant `.apx`, and when the NuGet package attempts P/Invoking, it fails with a predictable DllNotFoundException.\r\n\r\nThe NuGet package in question is version 1.0.5.1 of this package: https://www.nuget.org/packages/ScannitSharp/. The source code of that version can be found here: https://github.com/pingzing/ScannitSharp/tree/b5353392bd5eccf2db27f6156a97f3e393b634c2\r\n\r\nI have a native library using the `android-arm` and `android-arm64` Runtime IDs. They are included in a `/runtimes/<plat-arch>/native` folder, as specified in the docs. I can confirm that the resulting .nupkg contains the folder structure and .dlls, .sos and .dylibs as expected.\r\n\r\nThe dependency chain of the consuming Xamarin Forms project looks something like this:\r\n\r\n```\r\n-----ScannitSharp NuGet Package----- \r\n|   - scannit_core_ffi.so          |\r\n|   - (other runtime dlls, etc)    |\r\n------------------------------------\r\n                 ^\r\n                 |                 \r\n-----Xamarin.Forms Core Project-----\r\n| - Imports ScannitSharp NuGet     |\r\n------------------------------------\r\n                  ^\r\n                  |\r\n-------Xamarin Android Project------\r\n| - Imports Xamarin Forms Core Proj|\r\n| - Produces APK                   |\r\n------------------------------------\r\n```\r\n\r\n## Details about Problem\r\n\r\n**NuGet product used:** \r\n\r\nVS UI\r\n\r\n**VS version (if appropriate):** \r\n\r\n16.3.7\r\n\r\n**OS version (i.e. win10 v1607 (14393.321)):** \r\n\r\nWindows 10 1903 (18362.476)\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Produce a NuGet package that include a native DLL for `android-arm` and `android-arm64`. Make sure the native libraries are stored in the `runtimes/<plat-arch>/native/` folders of the `.nupkg`.\r\n\r\n2. Create a Xamarin Forms project with at least a .NET Standard and Android project.\r\n\r\n3. Add the NuGet package to the .NET Standard Xamarin Forms library.\r\n\r\n4. Build the Android project. Observe lack of native library in resulting APK.\r\n\r\n...\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\nDone! Minimal sample included. A basically-blank Xamarin Forms project that uses the ScannitSharp NuGet package.\r\n\r\n[NugetTest.zip](https://github.com/NuGet/Home/files/3855593/NugetTest.zip)\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"},{"Id":"10286366828","Type":"IssuesEvent","CreatedAt":"2019-08-26T13:37:09","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/38","RelatedDescription":"Opened issue \"New and improved NuGet Search is live!\" (#38) at NuGet/Announcements","RelatedBody":"Announcing the new and improved search on NuGet.org leveraging Azure Search.\r\n\r\n[Blogpost](https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/) | [Feedback Issue](https://github.com/NuGet/NuGetGallery/issues/4124)"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2019-11-19T05:30:45.496022Z","RunDurationInMilliseconds":2546}