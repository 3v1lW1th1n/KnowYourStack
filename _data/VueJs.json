{"Data":{"Vue":{"Events":[{"Id":"6686003926","Type":"IssuesEvent","CreatedAt":"2017-10-07T04:06:54","Actor":"anthonygore","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/issues/6751","RelatedDescription":"Opened issue \"Dynamic import of native ES modules for async components causes error\" (#6751) at vuejs/vue","RelatedBody":"### Version\r\n2.4.4\r\n\r\n### Reproduction link\r\n[https://github.com/anthonygore/vue-dynamic-import](https://github.com/anthonygore/vue-dynamic-import)\r\n\r\n### Steps to reproduce\r\nMust use a browser where dynamic module import is supported e.g. the latest Safari or Chrome Canary.\r\n\r\n### What is expected?\r\nAsync component should load and auto-resolve module\r\n\r\n### What is actually happening?\r\nUncaught error \"Cannot add property _Ctor, object is not extensible\".\r\n\r\n---\r\nAs of v2.4.0, ES modules are auto-resolved when used as dynamic components e.g.\r\n\r\n```js\r\nnew Vue({\r\n  el: '#app',\r\n  components: {\r\n    MyComponent: () => import('./MyComponent.js')\r\n  }\r\n});\r\n```\r\n\r\nHowever, this only works if the module has been transpiled from ES to CommonJS since it checks for the flag `__esModule`. It does not work for native ES modules where the flag is not present.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6685795575","Type":"PullRequestEvent","CreatedAt":"2017-10-07T00:59:08","Actor":"chriscasola","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/pull/6750","RelatedDescription":"Opened pull request \"perf(vdom): don't move plain elements containing components (#6659)\" (#6750) at vuejs/vue","RelatedBody":"Do not move a plain element during patch if it contains any\r\ncomponents. This will prevent re-creating the component in a\r\nnew element after it's previous parent is moved.\r\n\r\n#6659\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nThis is my naive attempt at improving the logic in the diff process to prevent moving a plain element that contains components. I'm definitely open to better options and feedback, I'm not sure this is the right direction to go in. Thanks! "},{"Id":"6685363535","Type":"PullRequestEvent","CreatedAt":"2017-10-06T21:39:07","Actor":"ubershmekel","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/pull/6749","RelatedDescription":"Opened pull request \"Make sure components are objects\" (#6749) at vuejs/vue","RelatedBody":"Started a nuxt project and accidentally made a `components` function which returned the components I needed but none of them ever rendered. Scratching my head for 30 minutes I finally noticed it was a function and not an object.\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n"},{"Id":"6684954806","Type":"IssuesEvent","CreatedAt":"2017-10-06T19:48:04","Actor":"yyx990803","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue/issues/6677","RelatedDescription":"Closed issue \"v-bind with something else than an object should warn you\" (#6677) at vuejs/vue","RelatedBody":"### Version\r\n2.4.4\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/57508hba/4/](https://jsfiddle.net/57508hba/4/)\r\n\r\n### Steps to reproduce\r\n1. Create a component with a slot\r\n2. Bind a reference to a string to the slot via `v-bind`\r\n3. Utilize said component and define a template for the defined slot, giving it a local scope parameter with which to output the bound string.\r\n4. Output the scoped string in your template which is passed to the component created in step 1\r\n\r\n### What is expected?\r\nThe string bound to the slot should be passed into the template passed for the slot, as a string.\r\n\r\n### What is actually happening?\r\nThe string is being exploded into an object where the properties are the string indexes for each character in the string.\r\n\r\n---\r\nI'm not sure if this is intended behavior or not. The default value for the defined slot outputs the string as expected, but as soon as it's passed to the consumer defined template, the string is altered to an object.\r\n\r\nThe temporary work-around for this is to simply pass an actual object to v-bind on the slot, and expect an object as the scoped value in your defined template.\r\n\r\nIt seems that if this is intended behavior, there should be at least a Vue warning about the value being mangled and that v-bind expects an object and not string.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6684954802","Type":"PullRequestEvent","CreatedAt":"2017-10-06T19:48:04","Actor":"yyx990803","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/vuejs/vue/pull/6736","RelatedDescription":"Merged pull request \"Add slot v-bind warning (fix #6677)\" (#6736) at vuejs/vue","RelatedBody":"v-bind with not object warning\r\n\r\nclose #6677 \r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n"},{"Id":"6684916000","Type":"PullRequestEvent","CreatedAt":"2017-10-06T19:37:40","Actor":"yyx990803","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue/pull/6713","RelatedDescription":"Closed pull request \"fix(v-html): added warning when v-html used with child content present\" (#6713) at vuejs/vue","RelatedBody":"v-html and v-text both overwrote the content of the element if anything\r\nwas present: this change checks if there's content and throws an warning\r\nif there is.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe:\r\n\r\nImprovement.\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\n**Other information:**\r\n"}],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"6685473425","Type":"IssuesEvent","CreatedAt":"2017-10-06T22:15:59","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1787","RelatedDescription":"Closed issue \"Component reloaded\" (#1787) at vuejs/vue-router","RelatedBody":"### Version\r\n2.7.0\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/yyx990803/xgrjzsup/](https://jsfiddle.net/yyx990803/xgrjzsup/)\r\n\r\n### Steps to reproduce\r\n1. Change Foo Template\r\nconst Foo = { template: '<div><input>foo</div>' }\r\n\r\n2. Click Go To Foo, type something in the input\r\n\r\n3. Click Go To Bar\r\n\r\n4. Click Go To Foo\r\n\r\n### What is expected?\r\nWhat I type in input inside component \"Foo\" still exists\r\n\r\n### What is actually happening?\r\nWhat I type in input is gone, it feels like the component being reloaded\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6685400586","Type":"IssuesEvent","CreatedAt":"2017-10-06T21:50:57","Actor":"andrew-vandenbrink","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1787","RelatedDescription":"Opened issue \"Component reloaded\" (#1787) at vuejs/vue-router","RelatedBody":"### Version\r\n2.7.0\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/yyx990803/xgrjzsup/](https://jsfiddle.net/yyx990803/xgrjzsup/)\r\n\r\n### Steps to reproduce\r\n1. Change Foo Template\r\nconst Foo = { template: '<div><input>foo</div>' }\r\n\r\n2. Click Go To Foo, type something in the input\r\n\r\n3. Click Go To Bar\r\n\r\n4. Click Go To Foo\r\n\r\n### What is expected?\r\nWhat I type in input inside component \"Foo\" still exists\r\n\r\n### What is actually happening?\r\nWhat I type in input is gone, it feels like the component being reloaded\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6684701923","Type":"IssuesEvent","CreatedAt":"2017-10-06T18:43:45","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1786","RelatedDescription":"Closed issue \"router.match(location) not return query object from url like this.$route\" (#1786) at vuejs/vue-router","RelatedBody":"### Version\r\n2.7.0\r\n\r\n### Reproduction link\r\n[https://github.com/BlackCode7/vue-router-bug](https://github.com/BlackCode7/vue-router-bug)\r\n\r\n### Steps to reproduce\r\n1. git clone https://github.com/BlackCode7/vue-router-bug\r\n2. npm install\r\n3. npm run dev\r\n4. open console\r\n5. click on the \"Get console.log\" button\r\n6. Look at both objects, they should be the same but \"router.match(location)\" loses query parameters\r\n\r\n### What is expected?\r\nObjects returned by \"this.$route\" and \"router.match(location)\" should be the same\r\n\r\n### What is actually happening?\r\nThe object returned by \"router.match(location)\", contains an empty query object inside when there are query in the url\r\n\r\n---\r\nDocumentation: https://router.vuejs.org/en/api/route-object.html\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"6685331659","Type":"IssuesEvent","CreatedAt":"2017-10-06T21:29:20","Actor":"amritk","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vuex/issues/978","RelatedDescription":"Closed issue \"Client dom not matching server in SSR\" (#978) at vuejs/vuex","RelatedBody":"### Version\r\n2.4.1\r\n\r\n### Reproduction link\r\n[https://github.com/amritk/vuex-ssr-issue](https://github.com/amritk/vuex-ssr-issue)\r\n\r\n### Steps to reproduce\r\n- Set the vuex state in a child component\r\n- Use a v-if based on that same state value in the parent component, ie for a title\r\n\r\n\r\n### What is expected?\r\nIt should read the value and show/hide the component based on the value, just like in the client.\r\n\r\n### What is actually happening?\r\nThe server side rendered part does not render the component from v-if, the client does, so it shows the error:\r\n```\r\n[Vue warn]: The client-side rendered virtual DOM tree is not matching server-rendered content. This is likely caused by incorrect HTML markup, for example nesting block-level elements inside <p>, or missing <tbody>. Bailing hydration and performing full client-side render.\r\n```\r\n\r\n---\r\nNow is it because the value is set too late in the child before it is read? Then what would be the correct way to set the title of the parent component from the child routes. \r\n\r\n*I used the vuetify template since it comes with SSR on the ready, Vuetify does not affect this bug.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6685320820","Type":"IssuesEvent","CreatedAt":"2017-10-06T21:26:10","Actor":"amritk","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/978","RelatedDescription":"Opened issue \"Client dom not matching server in SSR\" (#978) at vuejs/vuex","RelatedBody":"### Version\r\n2.4.1\r\n\r\n### Reproduction link\r\n[https://github.com/amritk/vuex-ssr-issue](https://github.com/amritk/vuex-ssr-issue)\r\n\r\n### Steps to reproduce\r\n- Set the vuex state in a child component\r\n- Use a v-if based on that same state value in the parent component, ie for a title\r\n\r\n\r\n### What is expected?\r\nIt should read the value and show/hide the component based on the value, just like in the client.\r\n\r\n### What is actually happening?\r\nThe server side rendered part does not render the component from v-if, the client does, so it shows the error:\r\n\r\n[Vue warn]: The client-side rendered virtual DOM tree is not matching server-rendered content. This is likely caused by incorrect HTML markup, for example nesting block-level elements inside <p>, or missing <tbody>. Bailing hydration and performing full client-side render.\r\n\r\n\r\n---\r\nNow is it because the value is set too late in the child before it is read? Then what would be the correct way to set the title of the parent component from the child routes. \r\n\r\n*I used the vuetify template since it comes with SSR on the ready, Vuetify does not affect this bug.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"}},"RunOn":"2017-10-07T05:30:32.272927Z","RunDurationInMilliseconds":2353}