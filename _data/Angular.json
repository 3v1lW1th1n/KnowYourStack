{"Data":{"Angular-Issues":{"Issues":[{"Id":"409613368","IsPullRequest":true,"CreatedAt":"2019-02-13T03:50:55","Actor":"Sharondio","Number":"28671","RawContent":null,"Title":"docs: add Sharon DiOrio to contributors","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [X] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [X] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nSharon is not included on GDE page.\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nSharon is added to GDE page.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\nIncreases gender diversity of GDEs listed from 12% to 14%.","Url":"https://github.com/angular/angular/pull/28671","RelatedDescription":"Open PR \"docs: add Sharon DiOrio to contributors\" (#28671)"},{"Id":"409584541","IsPullRequest":true,"CreatedAt":"2019-02-13T01:46:42","Actor":"kyliau","Number":"28670","RawContent":null,"Title":"fix(bazel): Install angular repo before yarn_install","State":"open","Body":"PR closes https://github.com/angular/angular/issues/28636\r\n\r\nThis is a temporary fix for the issue above. It'll be reverted once check_version\r\nis removed from angular/bazel.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/28670","RelatedDescription":"Open PR \"fix(bazel): Install angular repo before yarn_install\" (#28670)"},{"Id":"409582427","IsPullRequest":true,"CreatedAt":"2019-02-13T01:36:53","Actor":"kyliau","Number":"28669","RawContent":null,"Title":"refactor(bazel): use multi_sass_binary rule","State":"open","Body":"`multi_sass_binary` rules is reinstated in rules_sass v1.17.0\r\nand it is a better solution than list comprehension currently used\r\nbecause it handles imports correctly.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/28669","RelatedDescription":"Open PR \"refactor(bazel): use multi_sass_binary rule\" (#28669)"},{"Id":"409422845","IsPullRequest":true,"CreatedAt":"2019-02-13T01:25:14","Actor":"devversion","Number":"28659","RawContent":null,"Title":"ci: downgrade to sauce-connect v4.5.1","State":"closed","Body":"We currently face a lot of flakiness with our Saucelabs CI jobs. \r\nThese randomly exceed the 10min CircleCI no-output limit because\r\nsomething throws off `sauce-connect` in a long-lasting loop where\r\nit tries to connect to some of their Saucelabs servers. The initial\r\nassumption from the Saucelabs team was that we might have some\r\ninvalid firewall rules, but this does not answer why this happens\r\n_randomly_, so the latest update from the support is that there have\r\nbeen some changes in the latest version of `sauce-connect` version that\r\n**could** cause this flakiness.\r\n\r\nI've manually did multiple test runs and was only able to reproduce the issues\r\nwith v4.5.3 (latest version), so it might be worth downgrading to v4.5.1. This is\r\nalso what the Saucelabs support proposed us to do (though it's not guaranteed\r\nthat v4.5.1 is unaffected by the same issue)","Url":"https://github.com/angular/angular/pull/28659","RelatedDescription":"Closed or merged PR \"ci: downgrade to sauce-connect v4.5.1\" (#28659)"},{"Id":"409566447","IsPullRequest":false,"CreatedAt":"2019-02-13T00:30:31","Actor":"erneledesma","Number":"28668","RawContent":null,"Title":"Uncaught SyntaxError: Unexpected token :Response {_body: \"JSONP injected script did not invoke callback.\"","State":"open","Body":"🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑\r\n\r\nPlease do not file questions or support requests on the GitHub issues tracker.\r\n\r\nYou can get your questions answered using other communication channels. Please see: \r\nhttps://github.com/angular/angular/blob/master/CONTRIBUTING.md#question\r\n\r\nThank you!\r\n\r\n🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑🛑\r\n","Url":"https://github.com/angular/angular/issues/28668","RelatedDescription":"Open issue \"Uncaught SyntaxError: Unexpected token :Response {_body: \"JSONP injected script did not invoke callback.\"\" (#28668)"},{"Id":"409564465","IsPullRequest":true,"CreatedAt":"2019-02-13T00:22:25","Actor":"AndrewKushnir","Number":"28667","RawContent":null,"Title":"fix(ivy): set proper implementation for module injector","State":"open","Body":"Prior to this change we used current injector implementation for module injector, which was causing problems and produces circular dependencies in case the same token is referenced (with @SkipSelf flag) in the `deps` array. The origin of the problem was that once `directiveInject` implementation becomes active, it was used for module injector as well, thus searching deps in Component/Directive DI scope. This fix sets `injectInjectorOnly` implementation for module injector to resolve the problem.\r\n\r\nThis PR resolves FW-1016.\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Bugfix\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/28667","RelatedDescription":"Open PR \"fix(ivy): set proper implementation for module injector\" (#28667)"},{"Id":"409395586","IsPullRequest":false,"CreatedAt":"2019-02-12T23:52:58","Actor":"michaeljota","Number":"28658","RawContent":null,"Title":"Proposal: Global template variables/constants/enums","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄 \r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🚀 feature request\r\n\r\n### Relevant Package\r\n<!-- Can you pin-point one or more @angular/* packages the are relevant for this feature request? -->\r\n<!-- ✍️edit: --> This feature request is for @angular/core\r\n\r\n\r\n### Description\r\n<!-- ✍️-->\r\nThere has been some requests about declaring an using global variables in Angular templates, but is currently no possible. We need to declare in the component all the variables we are going to use, but sometimes we need to use the same variables in several components making us repeat code. \r\n\r\n### Describe the solution you'd like\r\n<!-- ✍️--> \r\n\r\nI was thinking about one special token that could be injected in the `NgModule` description object, or maybe a special property added to the same object. \r\n\r\nUsing a special token: \r\n```ts\r\n@NgModule({\r\n  declarations: [\r\n    AwesomeComponent \r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTML_TEMPLATE_GLOBALS,\r\n      multi: true,\r\n      useValue: ENUM\r\n    }\r\n  ]\r\n})\r\nexport class AwesomeModule {}\r\n```\r\n\r\nUsing a new property:\r\n\r\n```ts\r\n@NgModule({\r\n  declarations: [\r\n    AwesomeComponent \r\n  ],\r\n  templateProviders: [\r\n    ENUM\r\n  ]\r\n}\r\nexport class AwesomeModule {}\r\n```\r\n\r\nIn either case, the expected behavior would allow to access ENUM in every component template declared in the module. \r\n\r\n```ts\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'awesome-component',\r\n  template: `{{ ENUM.VALUE_ONE }}` \r\n})\r\nexport class AwesomeComponent {}\r\n```\r\n\r\n\r\n### Describe alternatives you've considered\r\n<!-- ✍️-->\r\n\r\n##### Using services\r\n\r\nBy the first case scenario, you may declare the ENUM as an injectable and use it as a service. However, you would still need to declare all the variables that you use, making this solution useless as just assign a property in the components.\r\n\r\n##### Scoped variables exposed in the template\r\nAnother proposal as explained in #25963\r\n\r\n```ts\r\nimport { someConstant } from './somewhere';\r\nimport { UserStatus } from './somewhere';\r\nimport { isDevMode } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'awesome-component',\r\n  template: `\r\n  Constant: {{ someConstant }}\r\n  User Status: {{ UserStatus }}\r\n  isDevMode: {{ isDevMode }}\r\n  `,\r\n  templateImports: { someConstant, UserStatus, isDevMode } // Per @trotyl suggestion \r\n})\r\nexport class AwesomeComponent {}\r\n```\r\n\r\nThis is almost the same, but the property is named differently, is declared as an object per @trotyl suggestion, and is scoped into the component directly.\r\n\r\n\r\n### Related issues:\r\n\r\n- #25963 - Allow constants, enums, functions to be used in templates without having to add component members\r\n- #12743 - Import other modules on template level (i.e. enums, static variables etc.)\r\n- #1552 - Will angular2 support Dart enums in templates?","Url":"https://github.com/angular/angular/issues/28658","RelatedDescription":"Closed issue \"Proposal: Global template variables/constants/enums\" (#28658)"},{"Id":"408923356","IsPullRequest":false,"CreatedAt":"2019-02-12T23:50:23","Actor":"ibedard16","Number":"28647","RawContent":null,"Title":"3rd party packages can cause console.log() to trigger change detection","State":"closed","Body":"# 🐞 bug report\r\n\r\n### Affected Package\r\nThe issue is caused by package @angular/core.\r\n\r\n\r\n### Is this a regression?\r\nNo.\r\n\r\n\r\n### Description\r\nIf a 3rd party library adds behavior to the `console.log()` function, `zone.js` will erroneously trigger change detection. If the `console.log()` statement is in a function bound to the view model, change detection can recursively run.\r\n\r\nAn easy way to prevent the problem would be to wrap the `console.log` statement to run outside of angular. However, this is very unwieldy and not-obvious to a developer adding `console.log` statements to debug their program (aka me).\r\n\r\nI recognize that this likely could be considered an issue with the 3rd party package. However, I'm not entirely certain that there is anything that _can_ be done from that package, as it is meant to be a generic package used in a variety of projects, and not just Angular projects.\r\n\r\nThe 3rd party package, in this case, is [Sentry](https://github.com/getsentry/sentry-javascript), which overwrites the `console.log` function in order to record breadcrumbs for error logging. I'm opening an issue both here and against Sentry's repo, because I'm very uncertain which project can/should ultimately fix this issue.\r\n\r\nEdit: https://github.com/getsentry/sentry-javascript/issues/1883\r\n\r\n## 🔬 Minimal Reproduction\r\nReproduction repo that uses [Sentry](https://github.com/getsentry/sentry-javascript) to reproduce the problem: https://github.com/ibedard16/sentry-recursion-demo\r\n\r\nInstructions to reproduce are in the [readme](https://github.com/ibedard16/sentry-recursion-demo#the-demo).\r\n\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 7.3.1\r\nNode: 8.11.3\r\nOS: win32 x64\r\nAngular: 7.2.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.11.4\r\n@angular-devkit/build-angular     0.11.4\r\n@angular-devkit/build-optimizer   0.11.4\r\n@angular-devkit/build-webpack     0.11.4\r\n@angular-devkit/core              7.1.4\r\n@angular-devkit/schematics        7.3.1\r\n@angular/cli                      7.3.1\r\n@ngtools/webpack                  7.1.4\r\n@schematics/angular               7.3.1\r\n@schematics/update                0.13.1\r\nrxjs                              6.4.0\r\ntypescript                        3.2.4\r\nwebpack                           4.23.1\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\nUsing `@sentry/browser @4.5.4`","Url":"https://github.com/angular/angular/issues/28647","RelatedDescription":"Closed issue \"3rd party packages can cause console.log() to trigger change detection\" (#28647)"},{"Id":"409543461","IsPullRequest":false,"CreatedAt":"2019-02-12T23:09:08","Actor":"kaankoken","Number":"28666","RawContent":null,"Title":"Does RxJs broke @angular/flex-layout?","State":"open","Body":"I found an old angular project, and I run it with this specs\r\n\r\n**Before Update**\r\n`\"dependencies\": {\r\n    \"@angular/animations\": \"6.0.0\",\r\n    \"@angular/cdk\": \"6.0.1\",\r\n    \"@angular/common\": \"6.0.0\",\r\n    \"@angular/compiler\": \"6.0.0\",\r\n    \"@angular/core\": \"6.0.0\",\r\n    \"@angular/flex-layout\": \"2.0.0-beta.10\",\r\n    \"@angular/forms\": \"6.0.0\",\r\n    \"@angular/http\": \"6.0.0\",\r\n    \"@angular/material\": \"6.0.1\",\r\n    \"@angular/platform-browser\": \"6.0.0\",\r\n    \"@angular/platform-browser-dynamic\": \"6.0.0\",\r\n    \"@angular/router\": \"6.0.0\",\r\n    \"@ngu/carousel\": \"1.4.2\",\r\n    \"classlist.js\": \"1.1.20150312\",\r\n    \"core-js\": \"2.4.1\",\r\n    \"date-fns\": \"1.28.5\",\r\n    \"hammerjs\": \"2.0.8\",\r\n    \"ng2-validation\": \"4.2.0\",\r\n    \"perfect-scrollbar\": \"1.3.0\",\r\n    \"rxjs\": \"6.1.0\",\r\n    \"rxjs-compat\": \"6.1.0\",\r\n    \"web-animations-js\": \"2.3.1\",\r\n    \"zone.js\": \"0.8.26\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"~0.6.0\",\r\n    \"@angular-devkit/core\": \"0.6.0\",\r\n    \"@angular/cli\": \"6.0.0\",\r\n    \"@angular/compiler-cli\": \"6.0.0\",\r\n    \"@types/hopscotch\": \"0.2.28\",\r\n    \"@types/jasmine\": \"2.5.38\",\r\n    \"@types/node\": \"6.0.60\",\r\n    \"codelyzer\": \"~2.0.0\",\r\n    \"enhanced-resolve\": \"3.3.0\",\r\n    \"jasmine-core\": \"~2.5.2\",\r\n    \"jasmine-spec-reporter\": \"~3.2.0\",\r\n    \"karma\": \"~1.4.1\",\r\n    \"karma-chrome-launcher\": \"~2.1.1\",\r\n    \"karma-cli\": \"~1.0.1\",\r\n    \"karma-coverage-istanbul-reporter\": \"~0.2.0\",\r\n    \"karma-jasmine\": \"~1.1.0\",\r\n    \"karma-jasmine-html-reporter\": \"~0.2.2\",\r\n    \"protractor\": \"~5.1.0\",\r\n    \"ts-node\": \"2.0.0\",\r\n    \"tslint\": \"4.5.0\",\r\n    \"typescript\": \"2.7.2\"\r\n  }`\r\n\r\n**After update**\r\n\r\n`\"dependencies\": {\r\n    \"@angular/animations\": \"~7.1.0\",\r\n    \"@angular/cdk\": \"^7.3.0\",\r\n    \"@angular/common\": \"~7.1.0\",\r\n    \"@angular/compiler\": \"~7.1.0\",\r\n    \"@angular/core\": \"~7.1.0\",\r\n    \"@angular/flex-layout\": \"^7.0.0-beta.23\",\r\n    \"@angular/forms\": \"~7.1.0\",\r\n    \"@angular/material\": \"^7.3.0\",\r\n    \"@angular/platform-browser\": \"~7.1.0\",\r\n    \"@angular/platform-browser-dynamic\": \"~7.1.0\",\r\n    \"@angular/router\": \"~7.1.0\",\r\n    \"@ngu/carousel\": \"1.4.2\",\r\n    \"classlist.js\": \"^1.1.20150312\",\r\n    \"core-js\": \"^2.5.4\",\r\n    \"hammerjs\": \"^2.0.8\",\r\n    \"perfect-scrollbar\": \"^1.4.0\",\r\n    \"rxjs\": \"^6.3.3\",\r\n    \"rxjs-compat\": \"^6.1.0\",\r\n    \"tslib\": \"^1.9.0\",\r\n    \"web-animations-js\": \"^2.3.1\",\r\n    \"zone.js\": \"~0.8.26\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"^0.13.1\",\r\n    \"@angular/cli\": \"~7.1.4\",\r\n    \"@angular/compiler-cli\": \"~7.1.0\",\r\n    \"@angular/language-service\": \"~7.1.0\",\r\n    \"@types/jasmine\": \"~2.8.8\",\r\n    \"@types/jasminewd2\": \"~2.0.3\",\r\n    \"@types/node\": \"~8.9.4\",\r\n    \"codelyzer\": \"~4.5.0\",\r\n    \"jasmine-core\": \"~2.99.1\",\r\n    \"jasmine-spec-reporter\": \"~4.2.1\",\r\n    \"karma\": \"~3.1.1\",\r\n    \"karma-chrome-launcher\": \"~2.2.0\",\r\n    \"karma-coverage-istanbul-reporter\": \"~2.0.1\",\r\n    \"karma-jasmine\": \"~1.1.2\",\r\n    \"karma-jasmine-html-reporter\": \"^0.2.2\",\r\n    \"protractor\": \"~5.4.0\",\r\n    \"ts-node\": \"~7.0.0\",\r\n    \"tslint\": \"~5.11.0\",\r\n    \"typescript\": \"~3.1.6\"\r\n  }`\r\n\r\nIt was working fine until I updated all the packages. At first `header` of the project was working fine. After update, when I toggle the `header` with `toggle button`, the header is not showing the logo, and make a weird whitespace. (Logo should be on the same line with toggle button)\r\n\r\n**Before toggle**\r\n![image](https://user-images.githubusercontent.com/28218396/52674090-37eeb200-2f2b-11e9-92af-8c35690efcd8.png)\r\n\r\n**After toggle**\r\n![image](https://user-images.githubusercontent.com/28218396/52674048-1a214d00-2f2b-11e9-8ef8-219b69cde2d0.png)\r\n\r\nIs there any fix for that?","Url":"https://github.com/angular/angular/issues/28666","RelatedDescription":"Open issue \"Does RxJs broke @angular/flex-layout?\" (#28666)"},{"Id":"409521176","IsPullRequest":false,"CreatedAt":"2019-02-12T22:03:26","Actor":"gxg10","Number":"28665","RawContent":null,"Title":"app run on  local area network - proxy backend - connection refused","State":"open","Body":"I have an app that will be run for the moment only on local area pc's. \r\nI have an angular app using a spring boot backend that will run on one pc and other pc's in the network will access the angular app. I followed this to set up a proxy to my backend:\r\nhttps://github.com/angular/angular-cli/blob/master/docs/documentation/stories/proxy.md\r\nI run ng serve --host 0.0.0.0, i can access the angular app on other pc's, all the requests are getting ok status but a get request ( download controller of files ) is getting connection refused.\r\nI also created a stackoverflow question.\r\nhttps://stackoverflow.com/questions/54651553/connection-refused-when-downloading-file-on-a-local-area-pc-using-proxy-to-backe\r\nWhat can i do to remove the errors ? ","Url":"https://github.com/angular/angular/issues/28665","RelatedDescription":"Open issue \"app run on  local area network - proxy backend - connection refused\" (#28665)"},{"Id":"409478862","IsPullRequest":true,"CreatedAt":"2019-02-12T20:10:03","Actor":"matsko","Number":"28664","RawContent":null,"Title":"fix(ivy): ensure host bindings and host styling works on a root component","State":"open","Body":"Prior to this fix if a root component was instantiated it create host\r\nbindings, but never render them once update mode ran unless one or more\r\nslot-allocated bindings were issued. Since styling in Ivy does not make\r\nuse of LView slots, the host bindings function never ran on the root\r\ncomponent.\r\n\r\nThis fix ensures that the `hostBindings` function does run for a root\r\ncomponent and also renders the schedlued styling instructions when\r\nexecuted.\r\n\r\nJira Issue: FW-1062","Url":"https://github.com/angular/angular/pull/28664","RelatedDescription":"Open PR \"fix(ivy): ensure host bindings and host styling works on a root component\" (#28664)"},{"Id":"409477960","IsPullRequest":true,"CreatedAt":"2019-02-12T20:07:43","Actor":"kapunahelewong","Number":"28663","RawContent":null,"Title":"docs: fix run-example-e2e.js formatting","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\ne2e tests for docs examples not running properly on master.\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nChange from `* ${filter} *` to `*${filter}*` (no spaces).\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\nFor context: [#28463](https://github.com/angular/angular/commit/99e3a04ea2c7cdecce3862b843bf68714f4d0caf)\r\n","Url":"https://github.com/angular/angular/pull/28663","RelatedDescription":"Open PR \"docs: fix run-example-e2e.js formatting\" (#28663)"},{"Id":"409457605","IsPullRequest":true,"CreatedAt":"2019-02-12T19:15:15","Actor":"eloiqs","Number":"28662","RawContent":null,"Title":"fix(core): improve TestBed.configureTestingModule type safety","State":"open","Body":"Added the same typings used in https://github.com/angular/angular/blob/master/packages/core/testing/src/test_bed.ts#L263-L267\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x ] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ x ] Other... Please describe:\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIt is currently possible to pass anything in the `configureTestingModule` function.\r\n\r\n\r\n## What is the new behavior?\r\n\r\nTypescript will now throw errors when providing garbage.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [x ] Yes\r\n- [ ] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\nTypescript builds are going to start failing if an error is present in user code.\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/28662","RelatedDescription":"Open PR \"fix(core): improve TestBed.configureTestingModule type safety\" (#28662)"},{"Id":"409447058","IsPullRequest":false,"CreatedAt":"2019-02-12T18:48:09","Actor":"calebegg","Number":"28661","RawContent":null,"Title":"Preserve query params in redirectTo for absolute paths","State":"open","Body":"As discussed in #13315, query params are only preserved when redirecting if the path is absolute. This is maddeningly subtle, and I can't imagine that it's an intentional feature. I think query params should always be preserved across redirectTo-based redirects, even those with absolute paths.","Url":"https://github.com/angular/angular/issues/28661","RelatedDescription":"Open issue \"Preserve query params in redirectTo for absolute paths\" (#28661)"},{"Id":"409426232","IsPullRequest":true,"CreatedAt":"2019-02-12T18:36:21","Actor":"AndrewKushnir","Number":"28660","RawContent":null,"Title":"fix(ivy): mark query test as modified in Ivy","State":"closed","Body":"Due to the fact that host nodes no longer match in ContentChild queries in Ivy, we disable test that was enabled previously in other commit.\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n- [x] Bugfix\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No","Url":"https://github.com/angular/angular/pull/28660","RelatedDescription":"Closed or merged PR \"fix(ivy): mark query test as modified in Ivy\" (#28660)"},{"Id":"408997803","IsPullRequest":true,"CreatedAt":"2019-02-12T17:56:14","Actor":"alexeagle","Number":"28651","RawContent":null,"Title":"docs: add a README for third_party usage","State":"closed","Body":"","Url":"https://github.com/angular/angular/pull/28651","RelatedDescription":"Closed or merged PR \"docs: add a README for third_party usage\" (#28651)"},{"Id":"409381461","IsPullRequest":true,"CreatedAt":"2019-02-12T17:49:02","Actor":"crisbeto","Number":"28657","RawContent":null,"Title":"test(ivy): update root causes for autocomplete tests","State":"closed","Body":"Updates the root cause notes for the Material autocomplete tests.\r\n\r\nThis PR resolves FW-1017.","Url":"https://github.com/angular/angular/pull/28657","RelatedDescription":"Closed or merged PR \"test(ivy): update root causes for autocomplete tests\" (#28657)"},{"Id":"409362382","IsPullRequest":true,"CreatedAt":"2019-02-12T15:39:27","Actor":"filipesilva","Number":"28656","RawContent":null,"Title":"fix(compiler): use correct variable in invalid function","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nThe `invalid` function references a missing import instead of its variable.\r\n\r\n## What is the new behavior?\r\nThe `invalid` function references a the correct variable.\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\nRelated to #26743 (but does not close it).","Url":"https://github.com/angular/angular/pull/28656","RelatedDescription":"Open PR \"fix(compiler): use correct variable in invalid function\" (#28656)"},{"Id":"409328013","IsPullRequest":true,"CreatedAt":"2019-02-12T14:30:46","Actor":"petebacondarwin","Number":"28655","RawContent":null,"Title":"fix(ivy): support attribute selectors for content projection on inlin…","State":"open","Body":"…e templates\r\n\r\nThe content projection mechanism is static, in that it only looks at the static\r\ntemplate nodes before directives are matched and change detection is run.\r\nWhen you have a selector-based content projection the selection is based\r\non nodes that are available in the template.\r\n\r\nFor example:\r\n\r\n```\r\n<ng-content selector=\"[some-attr]\"></ng-content>\r\n```\r\n\r\nwould match\r\n\r\n```\r\n<div some-attr=\"...\"></div>\r\n```\r\n\r\nIf you have an inline template in your projected nodes. For example:\r\n\r\n```\r\n<div *ngIf=\"...\" some-attr=\"...\"></div>\r\n```\r\n\r\nThis gets pre-parsed and converted to a canonical form.\r\n\r\nFor example:\r\n\r\n```\r\n<ng-template [ngIf]=\"...\">\r\n  <div some-attr=\"..\"></div>\r\n</ng-template>\r\n```\r\n\r\nNote that non-`*` attributes stay with the content nodes\r\nrather than the `<ng-template>` node.\r\n\r\nWhen this happens in ivy, the ng-template content is removed\r\nfrom the component template function and is compiled into its own\r\ntemplate function. But this means that the information about the\r\nattributes that were on the content are lost and the projection\r\nselection mechanism is unable to match the original\r\n`<div *ngIf=\"...\" some-attr>`.\r\n\r\nThis commit adds support for this in ivy by passing these \"projection-only\"\r\nattributes to the `template()` instruction, so that it can be matched against\r\nselectors that matched the origjnal inline template element attributes.\r\n\r\nThis is achieved by adding a new `AttributeMarker.ProjectionOnly` marker,\r\nwhich must appear after the `AttributeMarker.SelectOnly` marked attribute\r\nnames. Attributes after this new marker are not rendered, nor are they considered\r\nfor matching directives. They are only used when matching content projection\r\nselectors.\r\n\r\n\r\nFixes FW-1002","Url":"https://github.com/angular/angular/pull/28655","RelatedDescription":"Open PR \"fix(ivy): support attribute selectors for content projection on inlin…\" (#28655)"},{"Id":"409281508","IsPullRequest":false,"CreatedAt":"2019-02-12T12:48:43","Actor":"dirkluijk","Number":"28654","RawContent":null,"Title":"Animations: transition between states broken when combined with query","State":"open","Body":"# 🐞 bug report\r\n\r\n### Affected Package\r\nThe issue is caused by package @angular/animations\r\n\r\n### Is this a regression?\r\nNot sure.\r\n\r\n### Description\r\n\r\n```typescript\r\nstate('state1', style({ /*...*/ })),\r\nstate('state2', style({ /*...*/ })),\r\ntransition('state1 <=> state2', [\r\n  animate(500),\r\n  query(/* ... */)\r\n])\r\n```\r\nDoes not work as expected. It does not transition to the states.\r\n\r\nHowever, when swapping the `animate()` and `query()`, it does work:\r\n\r\n```typescript\r\nstate('state1', style({ /*...*/ })),\r\nstate('state2', style({ /*...*/ })),\r\ntransition('state1 <=> state2', [\r\n  query(/* ... */),\r\n  animate(500)\r\n])\r\n```\r\n\r\n## 🔬 Minimal Reproduction\r\nhttps://stackblitz.com/edit/animation-bug\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>Angular 7</code></pre>\r\n\r\n**Anything else relevant?**\r\nSee also: https://stackoverflow.com/questions/51726044/angular-transition-between-states-isnt-animated-correctly-if-animate-is-place/54631683#54631683\r\n","Url":"https://github.com/angular/angular/issues/28654","RelatedDescription":"Open issue \"Animations: transition between states broken when combined with query\" (#28654)"},{"Id":"409018448","IsPullRequest":false,"CreatedAt":"2019-02-11T23:06:33","Actor":"TheeRFG","Number":"28653","RawContent":null,"Title":"Window.open(path, '_parent'); redirects to base route.","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\n<!-- ✍️edit: --> The issue is caused by package \r\n`@angular/router`\r\n\r\n### Is this a regression?\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: 5\r\nI believe this was working at some point in Angular5. I upgraded two major versions (6 and 7) and have noticed this is no longer functioning. This is causing issues within our application. \r\n\r\n### Description\r\n\r\n<!-- ✍️--> A clear and concise description of the problem...\r\nAfter using `window.open(path, '_parent');` my page seems to temporarily load my my component/route and then immediately reboots the entire application. (Not sure if this is a browser back or what)\r\n\r\n## 🔬 Minimal Reproduction\r\n<!--\r\nPlease create and share minimal reproduction of the issue starting with this template: https://stackblitz.com/fork/angular-issue-repro2\r\n-->\r\n<!-- ✍️-->\r\n\r\n<!--\r\nIf StackBlitz is not suitable for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue. Share the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\nhttps://github.com/TheeRFG/ng-broken-routing\r\n1. `ng serve` \r\n2. Click the link to \"Route B!\"\r\n3. Watch the application temporarily load \"route-b works!\" before rebootstrapping and starting back at \"I am root!\"\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\n$ ng version\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 7.3.1\r\nNode: 10.14.1\r\nOS: win32 x64\r\nAngular: 7.2.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.13.1\r\n@angular-devkit/build-angular     0.13.1\r\n@angular-devkit/build-optimizer   0.13.1\r\n@angular-devkit/build-webpack     0.13.1\r\n@angular-devkit/core              7.3.1\r\n@angular-devkit/schematics        7.3.1\r\n@angular/cli                      7.3.1\r\n@ngtools/webpack                  7.3.1\r\n@schematics/angular               7.3.1\r\n@schematics/update                0.13.1\r\nrxjs                              6.3.3\r\ntypescript                        3.2.4\r\nwebpack                           4.29.0\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\nIn my bigger application where I first noticed this issue, even though my root path is linked to a component my page actually sits at \r\n```\r\n<app-root ng-version=\"7.2.4\">\r\n    <router-outlet id=\"main-router-outlet\"></router-outlet>\r\n    <app-empty-navigation class=\"ng-star-inserted\"><div></div></app-empty-navigation>\r\n</app-root>\r\n```\r\nand subsequent initial navigations fail. Navigations _after_ this first failed navigation work and resolve, but this is not an ideal user experience. \r\n\r\nI realize there are better routing solutions available to Angular, but because of the legacy nature of a large portion of our application and its use of frames, this is the only way for our application to tell the parent windows they need to navigate. ","Url":"https://github.com/angular/angular/issues/28653","RelatedDescription":"Open issue \"Window.open(path, '_parent'); redirects to base route.\" (#28653)"},{"Id":"408876521","IsPullRequest":true,"CreatedAt":"2019-02-11T22:53:52","Actor":"pkozlowski-opensource","Number":"28644","RawContent":null,"Title":"fix(ivy): support checkNoChanges on embedded views","State":"closed","Body":"Before this fix our ViewRef implementation assumed that checkNoChanges can be\r\nonly called on component views. In reality checkNoChanges can be also called on\r\nembedded views (ex.: when an embedded view is attached to ApplicationRef).\r\n","Url":"https://github.com/angular/angular/pull/28644","RelatedDescription":"Closed or merged PR \"fix(ivy): support checkNoChanges on embedded views\" (#28644)"},{"Id":"409010590","IsPullRequest":false,"CreatedAt":"2019-02-11T22:41:30","Actor":"akonieczka","Number":"28652","RawContent":null,"Title":"RouterLink does not support state property (but RouterLinkWithHref does)","State":"open","Body":"# 🐞 bug report\r\n\r\n### Affected Package\r\nThe issue is caused by package @angular\\router\\esm2015\\src\\directives\\router_link.js\r\n\r\n### Description\r\nRouterLink line 158 DOES NOT have the correct code. It should be...\r\n    state: this.state\r\n\r\nRouterLinkWithHref line 312 DOES have the correct code.\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\nAngular CLI: 7.2.1\r\nNode: 10.13.0\r\nOS: win32 x64\r\nAngular: 7.2.0\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.12.1\r\n@angular-devkit/build-angular      0.12.1\r\n@angular-devkit/build-ng-packagr   0.12.1\r\n@angular-devkit/build-optimizer    0.12.1\r\n@angular-devkit/build-webpack      0.12.1\r\n@angular-devkit/core               7.2.1\r\n@angular-devkit/schematics         7.2.1\r\n@angular/cdk                       7.2.1\r\n@angular/cli                       7.2.1\r\n@angular/flex-layout               7.0.0-beta.22\r\n@angular/material                  7.2.1\r\n@ngtools/json-schema               1.1.0\r\n@ngtools/webpack                   7.2.1\r\n@schematics/angular                7.2.1\r\n@schematics/update                 0.12.1\r\nng-packagr                         4.4.5\r\nrxjs                               6.3.3\r\ntypescript                         3.2.2\r\nwebpack                            4.23.1\r\n</code></pre>\r\n","Url":"https://github.com/angular/angular/issues/28652","RelatedDescription":"Open issue \"RouterLink does not support state property (but RouterLinkWithHref does)\" (#28652)"},{"Id":"408966826","IsPullRequest":true,"CreatedAt":"2019-02-11T21:28:17","Actor":"brandonroberts","Number":"28650","RawContent":null,"Title":"fix(docs-infra): add progression files to exclude list for docs examples","State":"closed","Body":"Also disables Http guide under Ivy tests with documented error\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [x] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/28650","RelatedDescription":"Closed or merged PR \"fix(docs-infra): add progression files to exclude list for docs examples\" (#28650)"},{"Id":"408950241","IsPullRequest":true,"CreatedAt":"2019-02-11T20:19:38","Actor":"devversion","Number":"28649","RawContent":null,"Title":"build: convert largeform benchmarks to bazel","State":"closed","Body":"* Switches the `largeform` benchmarks to Bazel. This is the last remaining e2e test within `modules/`.","Url":"https://github.com/angular/angular/pull/28649","RelatedDescription":"Closed or merged PR \"build: convert largeform benchmarks to bazel\" (#28649)"},{"Id":"408929728","IsPullRequest":true,"CreatedAt":"2019-02-11T19:04:30","Actor":"jasonaden","Number":"28648","RawContent":null,"Title":"feat(common): add APIs to read component pieces of URL","State":"open","Body":"Without this change, the framework doesn't surface URL parts such as hostname, protocol, and port. This makes it difficult to rebuild a complete URL. This change provides new APIs to read these values.\r\n","Url":"https://github.com/angular/angular/pull/28648","RelatedDescription":"Open PR \"feat(common): add APIs to read component pieces of URL\" (#28648)"},{"Id":"408919002","IsPullRequest":true,"CreatedAt":"2019-02-11T18:35:38","Actor":"devversion","Number":"28646","RawContent":null,"Title":"build: fix rollup config tslint rule not working on windows","State":"open","Body":"The `rollupConfigRule` currently does not work on Windows\r\nbecause it accidentally fails looking for the `rollup.config.js` files.\r\n\r\nThis is because the tslint rule compares the current `ts.SourceFile`\r\nfile path with the `process.cwd()` path. This is problematic because\r\nTypeScript by default only returns posix-paths, and the path comparisons\r\nare therefore always invalid. In order to properly compare the two paths,\r\nwe need to normalize the TypeScript source file path.","Url":"https://github.com/angular/angular/pull/28646","RelatedDescription":"Open PR \"build: fix rollup config tslint rule not working on windows\" (#28646)"},{"Id":"408906663","IsPullRequest":true,"CreatedAt":"2019-02-11T18:02:48","Actor":"devversion","Number":"28645","RawContent":null,"Title":"build: remove legacy e2e tests job","State":"open","Body":"See individual commits for changes \r\n\r\n<sup>Though most lack of commit descriptions as there is not too much to write about..</sup>","Url":"https://github.com/angular/angular/pull/28645","RelatedDescription":"Open PR \"build: remove legacy e2e tests job\" (#28645)"},{"Id":"408776378","IsPullRequest":false,"CreatedAt":"2019-02-11T13:16:08","Actor":"wKoza","Number":"28643","RawContent":null,"Title":"[Ivy] @ViewChild doesn't read me ElementRef","State":"open","Body":"# 🐞 bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\nThe issue is caused by package @angular/core\r\n\r\n### Is this a regression?\r\n\r\nMaybe, it seems to be available if we read [this status](https://github.com/angular/angular/blob/master/packages/core/src/render3/STATUS.md#query) \r\n\r\n### Description\r\n\r\nI'm testing Ivy on a little application with the beta.3 but I have a component like this:\r\n\r\n```\r\n@Component({\r\n    selector: 'tracklist',\r\n    templateUrl: './tracklist.component.html',\r\n    styleUrls: ['./tracklist.component.css'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TracklistComponent implements AfterViewInit {\r\n...\r\n    @ViewChild('matTable', {read: ElementRef}) elRef;\r\n\r\nconstructor(private route: ActivatedRoute, private renderer: Renderer2) { }\r\n\r\n\r\nngAfterViewInit() {\r\n...\r\n  this.renderer.setStyle(this.elRef.nativeElement, 'overflow-y', 'hidden');\r\n}\r\n\r\n```\r\n\r\nWhen I run `ng serve --aot` and I instantiate this component, I have this error:\r\n\r\n<pre><code>\r\nError TypeError : Cannot read property 'nativeElement' of undefined\r\n</code></pre>\r\n\r\n`elRef` is always undefined.\r\n\r\n\r\n## 🌍  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\nAngular CLI: 7.2.4\r\nNode: 10.10.0\r\nOS: darwin x64\r\nAngular: 8.0.0-beta.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... http, language-service, platform-browser\r\n... platform-browser-dynamic, platform-server, router\r\n... service-worker\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.12.4\r\n@angular-devkit/build-angular     0.12.4\r\n@angular-devkit/build-optimizer   0.12.4\r\n@angular-devkit/build-webpack     0.12.4\r\n@angular-devkit/core              7.2.4\r\n@angular-devkit/schematics        7.2.4\r\n@angular/cdk                      7.3.1\r\n@angular/cli                      7.2.4\r\n@angular/material                 7.3.1\r\n@ngtools/webpack                  7.2.4\r\n@schematics/angular               7.2.4\r\n@schematics/update                0.12.4\r\nrxjs                              6.3.3\r\ntypescript                        3.2.4\r\nwebpack                           4.28.4\r\n\r\n</code></pre>\r\n\r\n\r\n","Url":"https://github.com/angular/angular/issues/28643","RelatedDescription":"Open issue \"[Ivy] @ViewChild doesn't read me ElementRef\" (#28643)"},{"Id":"408713252","IsPullRequest":true,"CreatedAt":"2019-02-11T10:21:53","Actor":"alan-agius4","Number":"28642","RawContent":null,"Title":" refactor: replace local namespaced imports with named","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [x] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nAt the moment, the API extractor doesn't support local namespaced imports, this will break the generation of flat dts files. When we turn on dts bundling for this package it will break. Hence this is the ground work needed for making this package compatable with the API extractor.\r\n\r\nRelates to #28588\r\n\r\n","Url":"https://github.com/angular/angular/pull/28642","RelatedDescription":"Open PR \" refactor: replace local namespaced imports with named\" (#28642)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"409616397","IsPullRequest":false,"CreatedAt":"2019-02-13T04:05:45","Actor":"Vandivier","Number":"13664","RawContent":null,"Title":"include watch script by default","State":"open","Body":"# 🚀 Feature request\r\n\r\nWho doesn't need a watch command?\r\n\r\nAdd \"watch\": \"ng build --watch\" to the generated package.json\r\n\r\nHappy to PR if approved","Url":"https://github.com/angular/angular-cli/issues/13664","RelatedDescription":"Open issue \"include watch script by default\" (#13664)"},{"Id":"409563729","IsPullRequest":false,"CreatedAt":"2019-02-13T00:49:16","Actor":"devfer-js","Number":"13663","RawContent":null,"Title":"Function calls are not supported","State":"closed","Body":"I have this error when i use the command ng build --prod\r\nERROR in src\\app\\app.component.ts(7,16): Error during template compile of 'AppComponent'\r\n  Function calls are not supported in decorators but 'slideTo' was called in 'slider'\r\n    'slider' calls 'slideTo'.","Url":"https://github.com/angular/angular-cli/issues/13663","RelatedDescription":"Closed issue \"Function calls are not supported\" (#13663)"},{"Id":"409521985","IsPullRequest":false,"CreatedAt":"2019-02-12T22:05:35","Actor":"mengzhen94","Number":"13661","RawContent":null,"Title":"'npm ci' crashes 'ng build --watch'","State":"open","Body":"Hello, I am running into an issue that if I have `ng build --watch` running, run `npm ci` will crash `ng build --watch` intermittently with an error \r\n```\r\nerror: ENOENT: no such file or directory, lstat 'node_modules'\r\n    at Object.realpathSync (fs.js:1480:7)\r\n    at compiler.hooks.contextModuleFactory.tap.cmf (node_modules/@ngtools/webpack/src/angular_compiler_plugin.js:465:48)\r\n    at SyncHook.eval [as call] (eval at create node_modules/tapable/lib/HookCodeFactory.js:19:10), <anonymous>:7:1)\r\n    at Compiler.createContextModuleFactory (node_modules/webpack/lib/Compiler.js:519:35)\r\n    at Compiler.newCompilationParams (node_modules/webpack/lib/Compiler.js:526:31)\r\n    at Compiler.compile (node_modules/webpack/lib/Compiler.js:533:23)\r\n    at compiler.hooks.watchRun.callAsync.err (node_modules/webpack/lib/Watching.js:76:18)\r\n    at AsyncSeriesHook.eval [as callAsync] (eval at create (node_modules/tapable/lib/HookCodeFactory.js:32:10), <anonymous>:24:1)\r\n    at Watching._go (node_modules/webpack/lib/Watching.js:40:32)\r\n    at Watching._invalidate (node_modules/webpack/lib/Watching.js:165:9)\r\n    at watcher.compiler.watchFileSystem.watch (node_modules/webpack/lib/Watching.js:136:10)\r\n    at newCallback node_modules/@ngtools/webpack/src/virtual_file_system_decorator.js:125:13)\r\n    at Watchpack.watcher.once (node_modules/webpack/lib/node/NodeWatchFileSystem.js:59:4)\r\n    at Object.onceWrapper (events.js:273:13)\r\n    at Watchpack.emit (events.js:182:13)\r\n    at Watchpack._onTimeout (node_modules/watchpack/lib/watchpack.js:144:7)\r\n```\r\n\r\nI assume this is because `npm ci` automatically removed existing node_modules and `ng build --watch` is watching node_modules. I tried adding \r\n```\r\n \"exclude\": [\r\n    \"node_modules\"\r\n  ]\r\n```\r\nto `tsconfig.json` but no luck.\r\n\r\nIs there anyway to exclude node_modules from `ng build --watch`? Or any idea how to avoid crashing? Thanks","Url":"https://github.com/angular/angular-cli/issues/13661","RelatedDescription":"Open issue \"'npm ci' crashes 'ng build --watch'\" (#13661)"},{"Id":"409450798","IsPullRequest":true,"CreatedAt":"2019-02-12T18:57:42","Actor":"clydin","Number":"13660","RawContent":null,"Title":"feat(@angular-devkit/schematics): support basic promise/async based rules","State":"open","Body":"","Url":"https://github.com/angular/angular-cli/pull/13660","RelatedDescription":"Open PR \"feat(@angular-devkit/schematics): support basic promise/async based rules\" (#13660)"},{"Id":"409360942","IsPullRequest":false,"CreatedAt":"2019-02-12T18:27:15","Actor":"zuzusik","Number":"13658","RawContent":null,"Title":"\"Module not found: Error: Can't resolve...\" when consuming declarations","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n```\r\n- [ ] new\r\n- [ ] build\r\n- [x] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n```\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> \r\n\r\nNot sure\r\n### Description\r\n\r\n<!-- ✍️-->\r\n\r\n`/src/app/components/buggy-component.ts`:\r\n```ts\r\nimport {SomeClass} from '../../../declarations/package';\r\nimport {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'buggy-component',\r\n  template: '<div>test</div>'\r\n})\r\nexport class BuggyComponent {\r\n  constructor(private prop : SomeClass) {}\r\n}\r\n```\r\nError:\r\n```\r\nERROR in ./src/app/components/buggy-component.ts\r\nModule not found: Error: Can't resolve '../../../declarations/package' in '/Users/zuzusik/projects/typescript-bug/src/app/components'\r\n```\r\n\r\n`src/app/components/buggy-component-workaround.ts`\r\n\r\n```ts\r\nimport {SomeClass} from '../../../declarations/package';\r\nimport {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'buggy-component-workaround',\r\n  template: '<div>test</div>'\r\n})\r\nexport class BuggyComponentWorkaround {\r\n  private prop : SomeClass;\r\n\r\n  constructor(prop) {\r\n    this.prop = prop;\r\n  }\r\n}\r\n```\r\nNo errors\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue. Share the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\nclone https://github.com/zuzusik/typescript-bug\r\nrun `npm install`\r\nrun `ng serve`\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>\r\nERROR in ./src/app/components/buggy-component.ts\r\nModule not found: Error: Can't resolve '../../../declarations/package' in '/Users/zuzusik/projects/typescript-bug/src/app/components'\r\n</code></pre>\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\nAngular CLI: 7.3.1\r\nNode: 8.12.0\r\nOS: darwin x64\r\nAngular: 7.2.4\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.13.1\r\n@angular-devkit/build-angular     0.13.1\r\n@angular-devkit/build-optimizer   0.13.1\r\n@angular-devkit/build-webpack     0.13.1\r\n@angular-devkit/core              7.3.1\r\n@angular-devkit/schematics        7.3.1\r\n@angular/cli                      7.3.1\r\n@ngtools/webpack                  7.3.1\r\n@schematics/angular               7.3.1\r\n@schematics/update                0.13.1\r\nrxjs                              6.3.3\r\ntypescript                        3.2.4\r\nwebpack                           4.29.0\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n\r\nI need such a construction to inject service from Angular.js and specify it's type from compiled .d.ts file.\r\n","Url":"https://github.com/angular/angular-cli/issues/13658","RelatedDescription":"Closed issue \"\"Module not found: Error: Can't resolve...\" when consuming declarations\" (#13658)"},{"Id":"409396448","IsPullRequest":false,"CreatedAt":"2019-02-12T18:07:16","Actor":"tieppt","Number":"13659","RawContent":null,"Title":"ng new with --style=sass generates angular.json incorect infomation","State":"closed","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n```\r\n- [x] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n```\r\n\r\n### Is this a regression?\r\n\r\nTested on version 7.3.1\r\n\r\n\r\n### Description\r\n\r\nWhen generating a new app and selecting sass from the prompt, scss files are generated as this MR https://github.com/angular/angular-cli/pull/13552, but the `angular.json` file tries to reference style for component as `sass`:\r\n```\r\n\"schematics\": {\r\n  \"@schematics/angular:component\": {\r\n    \"style\": \"sass\"\r\n  }\r\n},\r\n```\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\n`ng new app`\r\nrouting -> no\r\nstyles -> sass\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ✍️-->\r\n\r\n</code></pre>\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n$ ng version                                                                                      ✔  4017  23:36:56\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 7.3.1\r\nNode: 10.15.0\r\nOS: darwin x64\r\nAngular:\r\n...\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.13.1\r\n@angular-devkit/core         7.3.1\r\n@angular-devkit/schematics   7.3.1\r\n@schematics/angular          7.3.1\r\n@schematics/update           0.13.1\r\nrxjs                         6.3.3\r\ntypescript                   3.2.4\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n\r\nUpdate the following lines:\r\n\r\nhttps://github.com/angular/angular-cli/blob/86356a747dccad75e4721a7d57e68c856a431c0b/packages/schematics/angular/application/index.ts#L164-L189\r\n\r\nto:\r\n\r\n```ts\r\n  const styleExt = styleToFileExtention(options.style);\r\n  if (options.inlineTemplate === true\r\n    || options.inlineStyle === true\r\n    || options.style !== Style.Css) {\r\n    schematics['@schematics/angular:component'] = {};\r\n    if (options.inlineTemplate === true) {\r\n      (schematics['@schematics/angular:component'] as JsonObject).inlineTemplate = true;\r\n    }\r\n    if (options.inlineStyle === true) {\r\n      (schematics['@schematics/angular:component'] as JsonObject).inlineStyle = true;\r\n    }\r\n    if (options.style && options.style !== Style.Css) {\r\n      (schematics['@schematics/angular:component'] as JsonObject).style = styleExt;\r\n    }\r\n  }\r\n\r\n  if (options.skipTests === true) {\r\n    ['class', 'component', 'directive', 'guard', 'module', 'pipe', 'service'].forEach((type) => {\r\n      if (!(`@schematics/angular:${type}` in schematics)) {\r\n        schematics[`@schematics/angular:${type}`] = {};\r\n      }\r\n      (schematics[`@schematics/angular:${type}`] as JsonObject).skipTests = true;\r\n    });\r\n  }\r\n\r\n\r\n```\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/13659","RelatedDescription":"Closed issue \"ng new with --style=sass generates angular.json incorect infomation\" (#13659)"},{"Id":"409359838","IsPullRequest":false,"CreatedAt":"2019-02-12T15:34:17","Actor":"CameronEzraJones","Number":"13657","RawContent":null,"Title":"Choosing stylesheet format in interactive mode skips options","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n```\r\n- [x] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n```\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: ....\r\nI don't know if this was working in previous versions or not\r\n\r\n### Description\r\n\r\n<!-- ✍️--> A clear and concise description of the problem...\r\nWhen I run the command `ng new angular-app --interactive`, it first shows whether I want to add Angular routing. This is working properly. However, the next question asks me which stylesheet format I would like to use, and this is experiencing the problem.\r\nThis bug is occuring in version 7.3.1\r\n\r\n## 🔬 Minimal Reproduction\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue. Share the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n1. run `ng new angular-app --interactive`. The question  The prompt \"Would you like to add Angular routing?\" appears\r\n2. entery `y` to indicate you want Angular routing. The prompt \"Which stylesheet format would you like to use?\" appears with these options in order:\r\n\r\n- CSS\r\n- Sass   [ http://sass-lang.com   ]\r\n- Less   [ http://lesscss.org     ]\r\n- Stylus [ http://stylus-lang.com ]\r\n\r\nThe selector is initially on CSS\r\n\r\n3. Press the down arrow.\r\n\r\nExpected: The selector moves to the Sass option\r\nActual: The selector moves to the Less option\r\n## 🔥 Exception or Error\r\n<pre><code>\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ✍️-->\r\n\r\n</code></pre>\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ✍️-->\r\nng --version\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 7.3.1\r\nNode: 11.9.0\r\nOS: win32 x64\r\nAngular:\r\n...\r\n\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.13.1\r\n@angular-devkit/core         7.3.1\r\n@angular-devkit/schematics   7.3.1\r\n@schematics/angular          7.3.1\r\n@schematics/update           0.13.1\r\nrxjs                         6.3.3\r\ntypescript                   3.2.4\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/13657","RelatedDescription":"Open issue \"Choosing stylesheet format in interactive mode skips options\" (#13657)"},{"Id":"409338029","IsPullRequest":false,"CreatedAt":"2019-02-12T14:51:36","Actor":"diminutivesloop","Number":"13656","RawContent":null,"Title":"Expose webpack-dev-server allowedHosts option","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🚀 Feature request\r\n\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are relevant for this feature request? -->\r\n<!-- ✍️edit: -->\r\n```\r\n- [ ] new\r\n- [ ] build\r\n- [x] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n```\r\n\r\n### Description\r\nDue to constraints of our development environment my team usually accesses their local instance of our Angular application via their Windows machine name rather than an ip address or localhost. Since machine names are unique we can't set the `host` option in `angular.json` and as a result individual developers have to pass their machine name on the command line when running `ng serve`.\r\n\r\n### Describe the solution you'd like\r\nSince our machine names have a common parent domain it would simplify our development setup if the `allowedHosts` option of webpack-dev-server was exposed as an option for `ng serve`. This would enable us to configure a host wildcard that includes all of our machine names without additional user-local configuration.\r\n\r\n### Describe alternatives you've considered\r\nOne alternative solution would be to enable the `disableHostCheck` option but this leaves our machines vulnerable to a dns rebinding attack. ","Url":"https://github.com/angular/angular-cli/issues/13656","RelatedDescription":"Open issue \"Expose webpack-dev-server allowedHosts option\" (#13656)"},{"Id":"409321179","IsPullRequest":true,"CreatedAt":"2019-02-12T14:16:27","Actor":"alan-agius4","Number":"13655","RawContent":null,"Title":"fix(angular-devkit/schematics): use `join` instead of normal string concatenation","State":"open","Body":"\r\nThis leads to cleaner paths while debugging\r\n\r\n\r\nCloses: https://github.com/angular/angular-cli/issues/13654","Url":"https://github.com/angular/angular-cli/pull/13655","RelatedDescription":"Open PR \"fix(angular-devkit/schematics): use `join` instead of normal string concatenation\" (#13655)"},{"Id":"409233753","IsPullRequest":false,"CreatedAt":"2019-02-12T10:45:38","Actor":"seneric","Number":"13654","RawContent":null,"Title":"'move' incorrect files name (angular_devkit/schematics/src/rules/move.ts)","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 Bug report\r\n\r\n\r\n### Description\r\n\r\nFor example when you try use **move('/myApp', '/')** \r\nat line 33 : tree.rename(path, toPath + '/' + path.substr(fromPath.length));\r\n**toPath + '/' + path.substr(fromPath.length)** all files contain '///' before there name.\r\n\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\ntree.create('a/b/file1', 'hello world');\r\nmove('a/b', '/') => file name is **///file1**\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nA possible correction:\r\nI replaced line 33:\r\n `tree.rename(path, toPath + '/' + path.substr(fromPath.length));`\r\n\r\nby\r\n```\r\nif (toPath === '/') {\r\n  tree.rename(path, path.substr(fromPath.length));\r\n} else {\r\n  tree.rename(path, toPath + ((path.substr(fromPath.length))[0] === '/' ? '': '/') + path.substr(fromPath.length));\r\n}\r\n```\r\n\r\n\r\ntest file:\r\n```\r\ndescribe('move', () => {\r\n    it('works on moving the whole structure', done => {\r\n        const tree = new HostTree();\r\n        tree.create('a/b/file1', 'hello world');\r\n        tree.create('a/b/file2', 'hello world');\r\n        tree.create('a/c/file3', 'hello world');\r\n\r\n        callRule(move('sub'), observableOf(tree), context)\r\n            .toPromise()\r\n            .then(result => {\r\n                expect(result.exists('sub/a/b/file1')).toBe(true);\r\n                expect(result.exists('sub/a/b/file2')).toBe(true);\r\n                expect(result.exists('sub/a/c/file3')).toBe(true);\r\n            })\r\n            .then(done, done.fail);\r\n    });\r\n\r\n    it('works on moving a subdirectory structure', done => {\r\n        const tree = new HostTree();\r\n        tree.create('a/b/file1', 'hello world');\r\n        tree.create('a/b/file2', 'hello world');\r\n        tree.create('a/c/file3', 'hello world');\r\n\r\n        callRule(move('a/b', 'sub'), observableOf(tree), context)\r\n            .toPromise()\r\n            .then(result => {\r\n                expect(result.exists('sub/file1')).toBe(true);\r\n                expect(result.exists('sub/file2')).toBe(true);\r\n                expect(result.exists('a/c/file3')).toBe(true);\r\n            })\r\n            .then(done, done.fail);\r\n    });\r\n\r\n    it('works on moving a directory into a subdirectory of itself', done => {\r\n        const tree = new HostTree();\r\n        tree.create('a/b/file1', 'hello world');\r\n        tree.create('a/b/file2', 'hello world');\r\n        tree.create('a/c/file3', 'hello world');\r\n\r\n        callRule(move('a/b', 'a/b/c'), observableOf(tree), context)\r\n            .toPromise()\r\n            .then(result => {\r\n                expect(result.exists('a/b/c/file1')).toBe(true);\r\n                expect(result.exists('a/b/c/file2')).toBe(true);\r\n                expect(result.exists('a/c/file3')).toBe(true);\r\n            })\r\n            .then(done, done.fail);\r\n    });\r\n\r\n    it('works on moving a directory into a parent of itself', done => {\r\n        const tree = new HostTree();\r\n        tree.create('a/b/file1', 'hello world');\r\n        tree.create('a/b/file2', 'hello world');\r\n        tree.create('a/c/file3', 'hello world');\r\n\r\n        callRule(move('a/b', 'a'), observableOf(tree), context)\r\n            .toPromise()\r\n            .then(result => {\r\n                expect(result.exists('file1')).toBe(false);\r\n                expect(result.exists('file2')).toBe(false);\r\n                expect(result.exists('a/file1')).toBe(true);\r\n                expect(result.exists('a/file2')).toBe(true);\r\n                expect(result.exists('a/c/file3')).toBe(true);\r\n            })\r\n            .then(done, done.fail);\r\n    });\r\n\r\n    it('becomes a noop with identical from and to', done => {\r\n        const tree = new HostTree();\r\n        tree.create('a/b/file1', 'hello world');\r\n        tree.create('a/b/file2', 'hello world');\r\n        tree.create('a/c/file3', 'hello world');\r\n\r\n        callRule(move(''), observableOf(tree), context)\r\n            .toPromise()\r\n            .then(result => {\r\n                expect(result.exists('a/b/file1')).toBe(true);\r\n                expect(result.exists('a/b/file2')).toBe(true);\r\n                expect(result.exists('a/c/file3')).toBe(true);\r\n            })\r\n            .then(done, done.fail);\r\n    });\r\n\r\n    it('works on moving a directory to root', done => {\r\n        const tree = new HostTree();\r\n        tree.create('a/b/file1', 'hello world');\r\n        tree.create('a/b/file2', 'hello world');\r\n        tree.create('a/c/file3', 'hello world');\r\n\r\n        callRule(move('a/b', '/'), observableOf(tree), context)\r\n            .toPromise()\r\n            .then(result => {\r\n                expect(result.exists('/file1')).toBe(true);\r\n                expect(result.exists('/file2')).toBe(true);\r\n                expect(result.exists('/file3')).toBe(false);\r\n                expect(result.exists('a/c/file3')).toBe(true);\r\n            })\r\n            .then(done, done.fail);\r\n    });\r\n});\r\n\r\n```\r\n\r\n\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\nall angular-cli versions (even the last \"master branch\" version)\r\n</code></pre>\r\n","Url":"https://github.com/angular/angular-cli/issues/13654","RelatedDescription":"Open issue \"'move' incorrect files name (angular_devkit/schematics/src/rules/move.ts)\" (#13654)"},{"Id":"409181279","IsPullRequest":true,"CreatedAt":"2019-02-12T08:41:04","Actor":"alan-agius4","Number":"13653","RawContent":null,"Title":"docs: remove analyse link from statsJson description","State":"open","Body":"https://webpack.github.io/analyse has been broken for over a year and it seems that it is no longer maintained.\r\n\r\nSee  https://github.com/webpack/analyse/issues/30\r\n\r\nCloses #10589","Url":"https://github.com/angular/angular-cli/pull/13653","RelatedDescription":"Open PR \"docs: remove analyse link from statsJson description\" (#13653)"},{"Id":"409143499","IsPullRequest":true,"CreatedAt":"2019-02-12T06:37:49","Actor":"renovate-bot","Number":"13652","RawContent":null,"Title":"build: update chokidar to version 2.1.1","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change | References |\n|---|---|---|---|---|\n| chokidar | dependencies | patch | `2.1.0` -> `2.1.1` | [source](https://togithub.com/paulmillr/chokidar) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>paulmillr/chokidar</summary>\n\n### [`v2.1.1`](https://togithub.com/paulmillr/chokidar/compare/2.1.0...2.1.1)\n\n[Compare Source](https://togithub.com/paulmillr/chokidar/compare/2.1.0...2.1.1)\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or if you modify the PR title to begin with \"`rebase!`\".\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- renovate-rebase -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/marketplace/renovate). View repository job log [here](https://renovatebot.com/dashboard#angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/13652","RelatedDescription":"Open PR \"build: update chokidar to version 2.1.1\" (#13652)"},{"Id":"409095757","IsPullRequest":false,"CreatedAt":"2019-02-12T05:26:23","Actor":"TCourtneyOwen","Number":"13651","RawContent":null,"Title":"Does angular-cli support creating a project in JavaScript rather than typescript?","State":"closed","Body":"I am trying to create a new Angular project that uses pure JavaScript rather than typescript. I didn’t see anyway to specify that I want a JavaScript project in the CLI documentation. Is this possible? I was hoping that I could specify a param with “ng new”.\r\n\r\nThanks","Url":"https://github.com/angular/angular-cli/issues/13651","RelatedDescription":"Closed issue \"Does angular-cli support creating a project in JavaScript rather than typescript?\" (#13651)"},{"Id":"408838904","IsPullRequest":true,"CreatedAt":"2019-02-11T15:34:57","Actor":"filipesilva","Number":"13650","RawContent":null,"Title":"feat(@angular-devkit/build-angular): favor ESM over FESM bundles","State":"open","Body":"Fix #13635 \r\n\r\nBlocked by https://github.com/angular/angular/issues/26743, https://github.com/angular/angular/pull/28656","Url":"https://github.com/angular/angular-cli/pull/13650","RelatedDescription":"Open PR \"feat(@angular-devkit/build-angular): favor ESM over FESM bundles\" (#13650)"},{"Id":"408812548","IsPullRequest":false,"CreatedAt":"2019-02-11T14:39:48","Actor":"Adam-Kernig","Number":"13649","RawContent":null,"Title":"Angular 7.2.4 - Unmet Peer Dependancy","State":"open","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n```\r\n- [X ] update\r\n```\r\n\r\n### Is this a regression?\r\nDid this behavior use to work in the previous version?\r\nYes, the previous version in which this bug was not present was: ....\r\n\r\n\r\n### Description\r\nOkay, As usual im notified on angular updates, I went to run the ng update command as usual to be correctly notified of the 7.2.4 updates (going from 7.2.3)\r\n\r\nAfter installing im notified of peer dependancies missing\r\n**\r\n\r\n> npm ERR! peer dep missing: ajv@^6.9.1, required by ajv-keywords@3.4.0\r\n\r\n**\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n- ng new\r\n- Let node install\r\n- See error: ajv-keywords@3.4.0 requires a peer of ajv@^6.9.1 but none is installed. You must install peer dependencies yourself.\r\n\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>\r\najv-keywords@3.4.0 requires a peer of ajv@^6.9.1 but none is installed. You must install peer dependencies yourself.\r\n\r\n</code></pre>\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\nPackage                      Version\r\n------------------------------------------------------\r\n@angular-devkit/architect    0.13.1\r\n@angular-devkit/core         7.3.1\r\n@angular-devkit/schematics   7.3.1\r\n@schematics/angular          7.3.1\r\n@schematics/update           0.13.1\r\nrxjs                         6.3.3\r\ntypescript                   3.2.4\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\nPerforming npm ls --depth 0 will identify the issues\r\n├── UNMET PEER DEPENDENCY @angular/common@7.2.4\r\n├── UNMET PEER DEPENDENCY @angular/core@7.2.4\r\n\r\nIf this was an expected dependancy I should think it would be put in dev dependancies instead of installing it after upgrading? It seems odd that out of the box this doesn't come installed.\r\n\r\nHopefully this is enough info to track down.\r\n","Url":"https://github.com/angular/angular-cli/issues/13649","RelatedDescription":"Open issue \"Angular 7.2.4 - Unmet Peer Dependancy\" (#13649)"},{"Id":"408761610","IsPullRequest":true,"CreatedAt":"2019-02-11T12:34:53","Actor":"NisStrom","Number":"13648","RawContent":null,"Title":"feat(@angular/cli): add new force flag for e2e","State":"open","Body":"","Url":"https://github.com/angular/angular-cli/pull/13648","RelatedDescription":"Open PR \"feat(@angular/cli): add new force flag for e2e\" (#13648)"},{"Id":"408574651","IsPullRequest":false,"CreatedAt":"2019-02-11T09:25:54","Actor":"wKoza","Number":"13646","RawContent":null,"Title":"[ivy] ng new ivy4ever --experimentalIvy=true doesn't add aot: true option","State":"closed","Body":"# 🚀 Feature request\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n```\r\n- [X] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n```\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> Yes, the previous version in which this bug was not present was: ....\r\n\r\n\r\n### Description\r\n\r\nWhen I run this command:\r\n```\r\nng new ivy4ever --experimentalIvy=true\r\n```\r\n~~I notice that the postInstall script isn't added to the package.json file.~~\r\nFuthermore, should not we add the property `aot: true` to angular.json ?\r\n\r\n```\r\n\"architect\": {\r\n        \"build\": {\r\n          \"builder\": \"@angular-devkit/build-angular:browser\",\r\n          \"options\": {\r\n            \"aot\": true,\r\n...\r\n```\r\n\r\n## 🔬 Minimal Reproduction\r\n```\r\nng new ivy4ever --experimentalIvy=true\r\n```\r\n\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\nAngular CLI: 7.2.4\r\nNode: 10.10.0\r\nOS: darwin x64\r\nAngular: 7.2.4\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.12.4\r\n@angular-devkit/build-angular     0.12.4\r\n@angular-devkit/build-optimizer   0.12.4\r\n@angular-devkit/build-webpack     0.12.4\r\n@angular-devkit/core              7.2.4\r\n@angular-devkit/schematics        7.2.4\r\n@ngtools/webpack                  7.2.4\r\n@schematics/angular               7.2.4\r\n@schematics/update                0.12.4\r\nrxjs                              6.3.3\r\ntypescript                        3.2.4\r\nwebpack                           4.28.4\r\n\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/13646","RelatedDescription":"Closed issue \"[ivy] ng new ivy4ever --experimentalIvy=true doesn't add aot: true option\" (#13646)"},{"Id":"408666784","IsPullRequest":true,"CreatedAt":"2019-02-11T07:52:27","Actor":"alan-agius4","Number":"13647","RawContent":null,"Title":"refactor: clean up library tsconfig","State":"open","Body":"These properties are already defined in the root tsconfig","Url":"https://github.com/angular/angular-cli/pull/13647","RelatedDescription":"Open PR \"refactor: clean up library tsconfig\" (#13647)"},{"Id":"408389710","IsPullRequest":true,"CreatedAt":"2019-02-10T11:59:52","Actor":"clydin","Number":"13638","RawContent":null,"Title":"Add classlist to differential polyfills","State":"closed","Body":"The polyfill is only required on IE10/11 which are ES5 only browsers.","Url":"https://github.com/angular/angular-cli/pull/13638","RelatedDescription":"Closed or merged PR \"Add classlist to differential polyfills\" (#13638)"},{"Id":"408477306","IsPullRequest":true,"CreatedAt":"2019-02-09T22:25:04","Actor":"renovate-bot","Number":"13645","RawContent":null,"Title":"build: update ajv to version 6.9.1","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change | References |\n|---|---|---|---|---|\n| ajv | dependencies | minor | `6.8.1` -> `6.9.1` | [source](https://togithub.com/epoberezkin/ajv) |\n| ajv | devDependencies | minor | `6.8.1` -> `6.9.1` | [source](https://togithub.com/epoberezkin/ajv) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>epoberezkin/ajv</summary>\n\n### [`v6.9.1`](https://togithub.com/epoberezkin/ajv/compare/v6.9.0...v6.9.1)\n\n[Compare Source](https://togithub.com/epoberezkin/ajv/compare/v6.9.0...v6.9.1)\n\n### [`v6.9.0`](https://togithub.com/epoberezkin/ajv/releases/v6.9.0)\n\n[Compare Source](https://togithub.com/epoberezkin/ajv/compare/v6.8.1...v6.9.0)\n\nOpenAPI keyword `nullable` can be any boolean (and not only `true`).\nCustom keyword definition changes:\n\n-   `dependencies` option in  to require the presence of keywords in the same schema.\n-   more strict validation of the definition using JSON Schema.\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or if you modify the PR title to begin with \"`rebase!`\".\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.\n\n---\n\n - [ ] <!-- renovate-rebase -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [Renovate Bot](https://togithub.com/marketplace/renovate). View repository job log [here](https://renovatebot.com/dashboard#angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/13645","RelatedDescription":"Open PR \"build: update ajv to version 6.9.1\" (#13645)"},{"Id":"408475800","IsPullRequest":true,"CreatedAt":"2019-02-09T22:06:23","Actor":"clydin","Number":"13644","RawContent":null,"Title":"refactor(@schematics/angular): remove redundant branchAndMerge rules","State":"open","Body":"Also simplifies the library schematic as a result of the removal.","Url":"https://github.com/angular/angular-cli/pull/13644","RelatedDescription":"Open PR \"refactor(@schematics/angular): remove redundant branchAndMerge rules\" (#13644)"},{"Id":"408463729","IsPullRequest":true,"CreatedAt":"2019-02-09T19:42:14","Actor":"hrocha16","Number":"13643","RawContent":null,"Title":"fix(@angular-devkit/build-angular): added warning for ES2017","State":"open","Body":"Fixes https://github.com/angular/angular-cli/issues/13477","Url":"https://github.com/angular/angular-cli/pull/13643","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): added warning for ES2017\" (#13643)"},{"Id":"408435564","IsPullRequest":false,"CreatedAt":"2019-02-09T16:32:59","Actor":"Jonnyprof","Number":"13641","RawContent":null,"Title":"Build fails when building library which contains a library with pipes","State":"closed","Body":"# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n```\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n```\r\n\r\n### Is this a regression?\r\nI don't think so.\r\n\r\n\r\n### Description\r\nWhen building a library that contains another library **which is paced in yarn workspaces**(symlinks to dist folder) the build fails.\r\nThere are no errors if the other library is different than pipe (component, directive, etc).\r\n\r\n## 🔬 Minimal Reproduction\r\nI've created a repository with very simple libraries to reproduce the problem. It has the reproduction steps in readme file. https://github.com/Jonnyprof/libraryPipes\r\nI've published @example-libs libraries in npmjs repository to help with the process.\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue. Share the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>\r\nBUILD ERROR\r\nCannot read property 'type' of null\r\nTypeError: Cannot read property 'type' of null\r\n    at /media/john/Mes/Webs/proves/libraryPipes/node_modules/@angular/compiler/bundles/compiler.umd.js:21259:31\r\n    at Array.forEach (<anonymous>)\r\n    at removeSummaryDuplicates (/media/john/Mes/Webs/proves/libraryPipes/node_modules/@angular/compiler/bundles/compiler.umd.js:21258:15)\r\n    at TemplateParser.tryParseHtml (/media/john/Mes/Webs/proves/libraryPipes/node_modules/@angular/compiler/bundles/compiler.umd.js:20675:33)\r\n    at TemplateParser.tryParse (/media/john/Mes/Webs/proves/libraryPipes/node_modules/@angular/compiler/bundles/compiler.umd.js:20667:25)\r\n    at TemplateParser.parse (/media/john/Mes/Webs/proves/libraryPipes/node_modules/@angular/compiler/bundles/compiler.umd.js:20648:31)\r\n    at AotCompiler._parseTemplate (/media/john/Mes/Webs/proves/libraryPipes/node_modules/@angular/compiler/bundles/compiler.umd.js:24135:47)\r\n    at AotCompiler._createTypeCheckBlock (/media/john/Mes/Webs/proves/libraryPipes/node_modules/@angular/compiler/bundles/compiler.umd.js:23882:27)\r\n    at /media/john/Mes/Webs/proves/libraryPipes/node_modules/@angular/compiler/bundles/compiler.umd.js:23850:31\r\n    at Array.forEach (<anonymous>)\r\n    at /media/john/Mes/Webs/proves/libraryPipes/node_modules/@angular/compiler/bundles/compiler.umd.js:23844:53\r\n    at Array.forEach (<anonymous>)\r\n    at AotCompiler._createNgFactoryStub (/media/john/Mes/Webs/proves/libraryPipes/node_modules/@angular/compiler/bundles/compiler.umd.js:23823:28)\r\n    at AotCompiler.emitTypeCheckStub (/media/john/Mes/Webs/proves/libraryPipes/node_modules/@angular/compiler/bundles/compiler.umd.js:23791:22)\r\n    at /media/john/Mes/Webs/proves/libraryPipes/node_modules/@angular/compiler-cli/src/transformers/program.js:656:54\r\n    at Array.forEach (<anonymous>)\r\n</code></pre>\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\nAngular CLI: 7.3.0\r\nNode: 11.5.0\r\nOS: linux x64\r\nAngular: 7.2.3\r\n... animations, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.13.0\r\n@angular-devkit/build-angular      0.13.0\r\n@angular-devkit/build-ng-packagr   0.13.0\r\n@angular-devkit/build-optimizer    0.13.0\r\n@angular-devkit/build-webpack      0.13.0\r\n@angular-devkit/core               7.3.0\r\n@angular-devkit/schematics         7.3.0\r\n@angular/cli                       7.3.0\r\n@ngtools/json-schema               1.1.0\r\n@ngtools/webpack                   7.3.0\r\n@schematics/angular                7.3.0\r\n@schematics/update                 0.13.0\r\nng-packagr                         4.7.0\r\nrxjs                               6.3.3\r\ntypescript                         3.2.4\r\nwebpack                            4.29.0\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\nI've spent a lot of time debugging but I have only guesses. I think that the error is related with getting summary from summaryCache, because sometimes it looks for `node_modules/@example-lib/uppercase-pipe` and other for `dist/libs/uppercase-pipe`.\r\n\r\nSorry for my english! :P\r\n<!-- ✍️Is this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ✍️Do any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/13641","RelatedDescription":"Closed issue \"Build fails when building library which contains a library with pipes\" (#13641)"},{"Id":"408441428","IsPullRequest":false,"CreatedAt":"2019-02-09T15:44:15","Actor":"oleersoy","Number":"13642","RawContent":null,"Title":"[Feature Request] Complementary UI - Similar to the Vue CLI UI","State":"closed","Body":"https://cli.vuejs.org/dev-guide/ui-api.html#ui-files","Url":"https://github.com/angular/angular-cli/issues/13642","RelatedDescription":"Closed issue \"[Feature Request] Complementary UI - Similar to the Vue CLI UI\" (#13642)"},{"Id":"408395327","IsPullRequest":false,"CreatedAt":"2019-02-09T07:46:48","Actor":"selva","Number":"13640","RawContent":null,"Title":"news api error : origin 'http://localhost:4200' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n```\r\n- [ ] new\r\n- [ ] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n```\r\n\r\n### Description\r\n\r\n<!-- ✍️--> I am able see the data in network but not in browser console. this is literally weired for me.  prints the api result in server side logs. please help me out.\r\n\r\ncode:\r\ngetlatestnews(st,ed): Observable<any> {\r\n   return this.http.get('XXXXXXX&FromTime='+st+'&EndTime='+ed)\r\n }  \r\n\r\n\r\n## 🔥 Exception or Error\r\n<pre><code>\r\nAccess to XMLHttpRequest at 'xxxNews apixxxx' from origin 'http://localhost:4200' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.\r\n\r\n</code></pre>\r\n\r\n\r\n## 🌍 Your Environment\r\n<pre><code>\r\n\"@angular-redux/store\": \"^9.0.0\",\r\n    \"@angular/animations\": \"^6.1.0\",\r\n    \"@angular/common\": \"^6.1.0\",\r\n    \"@angular/compiler\": \"^6.1.0\",\r\n    \"@angular/core\": \"^6.1.0\",\r\n    \"@angular/forms\": \"^6.1.0\",\r\n    \"@angular/http\": \"^6.1.0\",\r\n    \"@angular/platform-browser\": \"^6.1.0\",\r\n    \"@angular/platform-browser-dynamic\": \"^6.1.0\",\r\n    \"@angular/platform-server\": \"^6.1.0\",\r\n    \"@angular/router\": \"^6.1.0\",\r\n    \"@ng-toolkit/universal\": \"^1.1.50\",\r\n    \"@nguniversal/express-engine\": \"0.0.0\",\r\n    \"@nguniversal/module-map-ngfactory-loader\": \"0.0.0\",\r\n    \"@ngx-meta/core\": \"^7.0.0\",\r\n\r\n</code></pre>\r\n","Url":"https://github.com/angular/angular-cli/issues/13640","RelatedDescription":"Closed issue \"news api error : origin 'http://localhost:4200' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource\" (#13640)"},{"Id":"408394919","IsPullRequest":true,"CreatedAt":"2019-02-09T03:51:17","Actor":"hrocha16","Number":"13639","RawContent":null,"Title":"fix(@angular-devkit/build-angular): minimum threshold","State":"open","Body":"Fixes https://github.com/angular/angular-cli/issues/13555","Url":"https://github.com/angular/angular-cli/pull/13639","RelatedDescription":"Open PR \"fix(@angular-devkit/build-angular): minimum threshold\" (#13639)"},{"Id":"408366175","IsPullRequest":true,"CreatedAt":"2019-02-09T00:13:01","Actor":"alexeagle","Number":"13637","RawContent":null,"Title":"fix(@schematics/angular): Include bazel-out in .gitignore","State":"closed","Body":"We could do this only when we know the user has opted into using Bazel, like in the @angular/bazel schematics.\r\nHowever, the complexity of amending new lines to the .gitignore isn't worth it, when we can just add one line here.\r\n\r\nFixes #13636","Url":"https://github.com/angular/angular-cli/pull/13637","RelatedDescription":"Closed or merged PR \"fix(@schematics/angular): Include bazel-out in .gitignore\" (#13637)"},{"Id":"408365783","IsPullRequest":false,"CreatedAt":"2019-02-09T00:13:01","Actor":"lacolaco","Number":"13636","RawContent":null,"Title":"[Bazel] Update gitignore for bazel-out directory","State":"closed","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄 \r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🚀 feature request\r\n\r\n### Relevant Package\r\n<!-- Can you pin-point one or more @angular/* packages the are relevant for this feature request? -->\r\n\r\n* `@angular/bazel`\r\n\r\n### Description\r\n<!-- ✍️--> A clear and concise description of the problem or missing capability...\r\n\r\n`bazel-out` directory is created by bazel build but it is not ignored by Git. \r\nIt is a compilation output similar to `tsc-out`.\r\n\r\n### Describe the solution you'd like\r\n<!-- ✍️--> If you have a solution in mind, please describe it.\r\n\r\nUpdate gitignore file for bazel-out directory when `ng new --collection=@angular/bazel` (or `ng add @angular/bazel` in the future)\r\n","Url":"https://github.com/angular/angular-cli/issues/13636","RelatedDescription":"Closed issue \"[Bazel] Update gitignore for bazel-out directory\" (#13636)"},{"Id":"408357731","IsPullRequest":false,"CreatedAt":"2019-02-08T23:04:15","Actor":"aitboudad","Number":"13635","RawContent":null,"Title":"[Build optimizer] fesm5 build breaks tree shaking","State":"open","Body":"<!--🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅\r\n\r\nOh hi there! 😄\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\n🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅🔅-->\r\n\r\n\r\n# 🐞 Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ✍️edit: -->\r\n```\r\n- [x] build\r\n```\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ✍️--> No\r\n\r\n\r\n### Description\r\nHi, I've noticed that some packages ([ng-bootstrap](https://github.com/ng-bootstrap/ng-bootstrap/issues/2883)) which provide `fesm5` as a default package module doesn't take advantage of build optimizer, importing a submodule will include the whole library\r\n\r\n\r\n\r\n## 🔬 Minimal Reproduction\r\n\r\nsee https://github.com/ng-bootstrap/ng-bootstrap/issues/2883","Url":"https://github.com/angular/angular-cli/issues/13635","RelatedDescription":"Open issue \"[Build optimizer] fesm5 build breaks tree shaking\" (#13635)"},{"Id":"409561305","IsPullRequest":false,"CreatedAt":"2019-01-30T19:25:32","Actor":"CSchulz","Number":"13662","RawContent":null,"Title":"Support custom ElementSchemaRegistry for the AOT compiler","State":"open","Body":"# 🚀 feature request\r\n\r\n### Relevant Package\r\n<!-- Can you pin-point one or more @angular/* packages the are relevant for this feature request? -->\r\nThis feature request is for @angular/compiler\r\n\r\n### Description\r\nAllow setting the ElementSchemaRegistry for the AOT compiler.\r\n\r\nAt the moment we can configure a custom ElementSchemaRegistry for JIT using the bootstrap parameter compilerOptions configuring a static provider overwriting the ElementSchemaRegistry provider:\r\n```\r\nbootstrapModule<M>(moduleType: Type<M>, compilerOptions?: (CompilerOptions & BootstrapOptions) | Array<CompilerOptions & BootstrapOptions>): Promise<NgModuleRef<M>>;\r\n```\r\n\r\n### Describe the solution you'd like\r\nSetting the wanted ElementSchemaRegistry in the angular.json.\r\n\r\n### Describe alternatives you've considered\r\n...","Url":"https://github.com/angular/angular-cli/issues/13662","RelatedDescription":"Open issue \"Support custom ElementSchemaRegistry for the AOT compiler\" (#13662)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"409569689","IsPullRequest":false,"CreatedAt":"2019-02-13T00:43:39","Actor":"vijam","Number":"15172","RawContent":null,"Title":"Stepper step from data is not unique for each step when used *ngfor","State":"open","Body":"#### What is the expected behavior?\r\neach step should be having unique form data of step.\r\n\r\n#### What is the current behavior?\r\nall the steps is with single step data \r\n\r\n\r\n#### What are the steps to reproduce?\r\nhttps://stackblitz.com/edit/angular-material-stepper212?file=app%2Fstepper-overview-example.html\r\n\r\n\r\n#### Which versions of Angular, Material, OS, TypeScript, browsers are affected?\r\n\r\n\r\n#### Is there anything else we should know?\r\nnope","Url":"https://github.com/angular/material2/issues/15172","RelatedDescription":"Open issue \"Stepper step from data is not unique for each step when used *ngfor\" (#15172)"},{"Id":"409437846","IsPullRequest":true,"CreatedAt":"2019-02-12T20:36:08","Actor":"jelbourn","Number":"15170","RawContent":null,"Title":"build(release-script): npm logout after publishing","State":"closed","Body":"","Url":"https://github.com/angular/material2/pull/15170","RelatedDescription":"Closed or merged PR \"build(release-script): npm logout after publishing\" (#15170)"},{"Id":"409461461","IsPullRequest":true,"CreatedAt":"2019-02-12T19:24:50","Actor":"andrewseguin","Number":"15171","RawContent":null,"Title":"refactor(sort): state should be determined and provided by container","State":"open","Body":"Refactors `MatSort` and `MatSortHeader` so that they are not tightly coupled. \r\n\r\nCurrently, the sort header determines its state by accessing properties from the `MatSort` such as `active` and `direction` to determine if it is sorted. This means that `MatSort `cannot be replaced by something like a multi-sort container.\r\n\r\nThis change changes the interaction so that the `MatSortHeader` requests its state from the container and there is a simple contract that the container needs to follow to be replaced.\r\n\r\nNote that this is the first of three phases needed to get us towards having a `MatMultiSort`. The conversation can be found here #13538. Thanks to @relair for making the foundation for this feature","Url":"https://github.com/angular/material2/pull/15171","RelatedDescription":"Open PR \"refactor(sort): state should be determined and provided by container\" (#15171)"},{"Id":"409435778","IsPullRequest":false,"CreatedAt":"2019-02-12T18:19:10","Actor":"andrewseguin","Number":"15169","RawContent":null,"Title":"[Sort] If there is no direction, active should not be populated with a sortable ID","State":"open","Body":"After cycling through the sort options, if a sortable's direction becomes empty (`''`) then `MatSort`'s `this.active` should revert to an empty string or undefined again.","Url":"https://github.com/angular/material2/issues/15169","RelatedDescription":"Open issue \"[Sort] If there is no direction, active should not be populated with a sortable ID\" (#15169)"},{"Id":"409429560","IsPullRequest":false,"CreatedAt":"2019-02-12T18:03:45","Actor":"VVKot","Number":"15168","RawContent":null,"Title":"Option for menu not to return focus to menu trigger on close","State":"open","Body":"#### Please describe the feature you would like to request.\r\nOption not to autofocus menu trigger after closing the menu.\r\n\r\n#### What is the use-case or motivation for this proposal?\r\nThere use cases when the focus should go elsewhere, for example, a menu option to rename element(double-click is reserved for other interaction).\r\n\r\n#### Is there anything else we should know?\r\nI have a suggestion similar to #11696 . It would be great to have such an option. Maybe we can mark the menu element to not return focus it is not feasible for the menu as a whole?\r\n\r\nAlso, according to #13150 BottomSheet and MatDialog have similar options.\r\n","Url":"https://github.com/angular/material2/issues/15168","RelatedDescription":"Open issue \"Option for menu not to return focus to menu trigger on close\" (#15168)"},{"Id":"409394640","IsPullRequest":true,"CreatedAt":"2019-02-12T16:43:14","Actor":"Suresh918","Number":"15167","RawContent":null,"Title":"fix(docs): aria labels added for mat-chip-list examples #15010","State":"open","Body":"Fixes #15010","Url":"https://github.com/angular/material2/pull/15167","RelatedDescription":"Open PR \"fix(docs): aria labels added for mat-chip-list examples #15010\" (#15167)"},{"Id":"409393600","IsPullRequest":false,"CreatedAt":"2019-02-12T16:41:03","Actor":"acteralex","Number":"15166","RawContent":null,"Title":"Creating incorrectly lazy-rendering MatMenu","State":"open","Body":"#### What is the expected behavior?\r\nThe mat-menu is rendered with sub-menu.\r\nA sub-menu should be visible after hovering on mat-menu-item exists [matMenuTriggerFor].\r\n![mat-menu](https://user-images.githubusercontent.com/668544/52651421-34443680-2efd-11e9-93a6-dc2c338a649d.png)\r\n\r\n\r\n#### What is the current behavior?\r\nThe mat-menu component is rendered without arrow (to show the active mat-menu-item has sub-menu). But If you click on the element which has sub-menu, menu will appear and disappear once time.\r\n\r\n#### What are the steps to reproduce?\r\nLook here please https://stackblitz.com/edit/angular-bzbtmd\r\n\r\n\r\n#### Which versions of Angular, Material, OS, TypeScript, browsers are affected?\r\n**Angular** version 7.2.2\r\n**Angular Material** version 7.2.2\r\n**OS** Windows 70\r\n**TypeScript** 3.2.4\r\n**browsers are affected?** No","Url":"https://github.com/angular/material2/issues/15166","RelatedDescription":"Open issue \"Creating incorrectly lazy-rendering MatMenu\" (#15166)"},{"Id":"409387190","IsPullRequest":false,"CreatedAt":"2019-02-12T16:28:24","Actor":"lazarljubenovic","Number":"15165","RawContent":null,"Title":"The ESC key is never documented","State":"open","Body":"#### What is the expected behavior?\r\n\r\nMost docs have a section _Keyboard interaction_, which should contain all keyboard controls.\r\n\r\n#### What is the current behavior?\r\n\r\nI've noticed that the key ESC is missing from all of them (at least according to the search `<kbd>ESC</kbd>` project-wise).\r\n\r\n#### What are the steps to reproduce?\r\n\r\nUse the power of thy eyes: https://material.angular.io/components/autocomplete/overview#keyboard-interaction\r\n\r\n#### Which versions of Angular, Material, OS, TypeScript, browsers are affected?\r\n\r\nN/A.\r\n\r\n#### Is there anything else we should know?\r\n\r\nI could go through all docs and add the ESC item whenever it's relevant, but I want to check firstly if it's omitted on purpose. Can't find anything in previous issues about it.\r\n","Url":"https://github.com/angular/material2/issues/15165","RelatedDescription":"Open issue \"The ESC key is never documented\" (#15165)"},{"Id":"409365258","IsPullRequest":false,"CreatedAt":"2019-02-12T15:45:09","Actor":"jelbourn","Number":"15164","RawContent":null,"Title":"Material schematics should generate .css files for some settings","State":"open","Body":"If the user's project is configured to use `.sass` (not `.scss`) or Stylus, we should emit plan CSS files since our generated source is not valid in those syntaxes. Both `.scss` and `.less` are supersets of CSS, so those are fine.","Url":"https://github.com/angular/material2/issues/15164","RelatedDescription":"Open issue \"Material schematics should generate .css files for some settings\" (#15164)"},{"Id":"409014270","IsPullRequest":true,"CreatedAt":"2019-02-12T15:41:26","Actor":"jelbourn","Number":"15154","RawContent":null,"Title":"docs: update readme for Q1 2019","State":"closed","Body":"Fixes #14992","Url":"https://github.com/angular/material2/pull/15154","RelatedDescription":"Closed or merged PR \"docs: update readme for Q1 2019\" (#15154)"},{"Id":"409362781","IsPullRequest":false,"CreatedAt":"2019-02-12T15:40:13","Actor":"Helveg","Number":"15163","RawContent":null,"Title":"MatTree examples not applying material styling","State":"open","Body":"#### What is the expected behavior?\r\nI'm trying to recreate the examples found here https://material.angular.io/components/tree/overview\r\n\r\n#### What is the current behavior?\r\nThe examples all behave strange: The nested tree example shows only top level chevrons, not even node names and appears unstyled. The flat architecture does list all nodes but still looks unstyled.\r\n![image](https://user-images.githubusercontent.com/28923979/52647273-af4d2300-2ee4-11e9-82f1-12c4bd72d777.png)\r\n\r\n#### What are the steps to reproduce?\r\nThe issue is not reproducible in StackBlitz.\r\n* Initialize new Angular project: `ng new mat-test`\r\n* Angular Routing: Y\r\n* Stylesheets: SCSS\r\n* `ng add @angular/material`\r\n* Indigo/Pink theme\r\n* HammerJS: Yes\r\n* Copy paste example code into a new component (TS & HTML code)\r\n\r\n\r\n\r\n#### Which versions of Angular, Material, OS, TypeScript, browsers are affected?\r\nAngular 7\r\n\r\n#### Is there anything else we should know?\r\nI first got a yellow notification in the console about a missing stylesheet, but the ng add command did import the indigo theme stylesheet into angular.json's styles array.","Url":"https://github.com/angular/material2/issues/15163","RelatedDescription":"Open issue \"MatTree examples not applying material styling\" (#15163)"},{"Id":"409352741","IsPullRequest":false,"CreatedAt":"2019-02-12T15:20:30","Actor":"ClemensSchneider","Number":"15162","RawContent":null,"Title":"Pinch event does no longer work when MatTooltipModule is imported","State":"open","Body":"#### Bug, feature request, or proposal:\r\nBug\r\n\r\n#### What is the expected behavior?\r\nPinch event should work.\r\n\r\nImporting MatTooltipModule should have no impact on events that are specified in `@angular/platform-browser`.\r\n\r\n#### What is the current behavior?\r\npinch events are no longer fired.\r\n\r\n#### What are the steps to reproduce?\r\nhttps://angular-vcghq7.stackblitz.io/ (use a touch-enabled device to test pinching)\r\n\r\nRemoving the `MatTooltipModule` import from `app.module.ts` makes pinching work again.\r\n\r\n#### What is the use-case or motivation for changing an existing behavior?\r\n\r\n\r\n#### Which versions of Angular, Material, OS, TypeScript, browsers are affected?\r\nAt least @angular/material@^7\r\n\r\n#### Is there anything else we should know?\r\nSeems like the following commit introduced a provider for `HAMMER_GESTURE_CONFIG` that does not register `pinch` events: https://github.com/angular/material2/pull/12941/commits/866c1418c6bb5058433acd8225d942e201cf5958\r\n\r\nAlso, this provider seems to alter the way hammer-js related gestures are interpreted for the complete application.\r\n\r\nSee https://github.com/angular/material2/blob/master/src/lib/core/gestures/gesture-config.ts\r\n","Url":"https://github.com/angular/material2/issues/15162","RelatedDescription":"Open issue \"Pinch event does no longer work when MatTooltipModule is imported\" (#15162)"},{"Id":"409348815","IsPullRequest":true,"CreatedAt":"2019-02-12T15:12:37","Actor":"cbejensen","Number":"15161","RawContent":null,"Title":"docs(stepper): update non-default boolean for editable prop","State":"open","Body":"Previously, the docs said `editable` can be set to `true`, but that is the default, so it makes more sense to say they can be set to `false` to change the default behavior.","Url":"https://github.com/angular/material2/pull/15161","RelatedDescription":"Open PR \"docs(stepper): update non-default boolean for editable prop\" (#15161)"},{"Id":"409341338","IsPullRequest":true,"CreatedAt":"2019-02-12T14:57:51","Actor":"crisbeto","Number":"15160","RawContent":null,"Title":"fix(select): error when navigating via keyboard to reset option on a closed select","State":"open","Body":"Fixes `mat-select` throwing an error when the user reaches a reset option using the arrow keys on a closed select. Seems to be due to a missing null check in the changes from #14540.\r\n\r\nFixes #15159.","Url":"https://github.com/angular/material2/pull/15160","RelatedDescription":"Open PR \"fix(select): error when navigating via keyboard to reset option on a closed select\" (#15160)"},{"Id":"409317797","IsPullRequest":false,"CreatedAt":"2019-02-12T14:09:02","Actor":"tommueller","Number":"15159","RawContent":null,"Title":"mat-select throws \"Cannot read property 'viewValue' of undefined\" using keyboard-selection","State":"open","Body":"#### What is the expected behavior?\r\nDo not throw an error.\r\n\r\n#### What is the current behavior?\r\nAn error is thrown:\r\n```\r\npreview-ea134a5d6fd899ac12dbb.js:1 ERROR TypeError: Cannot read property 'viewValue' of undefined\r\n    at MatSelect._handleClosedKeydown (vkgojvkrnyxe.angular.stackblitz.io/turbo_modules/@angular/material@7.3.1/bundles/material.umd.js:23384)\r\n    at MatSelect._handleKeydown (vkgojvkrnyxe.angular.stackblitz.io/turbo_modules/@angular/material@7.3.1/bundles/material.umd.js:23340)\r\n    at Object.eval [as handleEvent] (ng:///AppModule/SelectValueBindingExample.ngfactory.js:36)\r\n    at handleEvent (vkgojvkrnyxe.angular.stackblitz.io/turbo_modules/@angular/core@7.2.4/bundles/core.umd.js:23029)\r\n    at callWithDebugContext (vkgojvkrnyxe.angular.stackblitz.io/turbo_modules/@angular/core@7.2.4/bundles/core.umd.js:24099)\r\n    at Object.debugHandleEvent [as handleEvent] (vkgojvkrnyxe.angular.stackblitz.io/turbo_modules/@angular/core@7.2.4/bundles/core.umd.js:23826)\r\n    at dispatchEvent (vkgojvkrnyxe.angular.stackblitz.io/turbo_modules/@angular/core@7.2.4/bundles/core.umd.js:20478)\r\n    at eval (vkgojvkrnyxe.angular.stackblitz.io/turbo_modules/@angular/core@7.2.4/bundles/core.umd.js:20925)\r\n    at HTMLElement.eval (vkgojvkrnyxe.angular.stackblitz.io/turbo_modules/@angular/platform-browser@7.2.4/bundles/platform-browser.umd.js:1073)\r\n    at ZoneDelegate.invokeTask (vkgojvkrnyxe.angular.stackblitz.io/turbo_modules/zone.js@0.8.29/dist/zone.js:423)\r\n```\r\n\r\n#### What are the steps to reproduce?\r\nUsing the official Angular Material Select stackblitz: https://vkgojvkrnyxe.angular.stackblitz.io you can reproduce it by selecting the first entry (\"None\") by using your keyboards up-keys.\r\n\r\n\r\n#### Which versions of Angular, Material, OS, TypeScript, browsers are affected?\r\nCurrent build: 7.3.1\r\nDefinitely latest FF and Chrome.\r\n","Url":"https://github.com/angular/material2/issues/15159","RelatedDescription":"Open issue \"mat-select throws \"Cannot read property 'viewValue' of undefined\" using keyboard-selection\" (#15159)"},{"Id":"409274370","IsPullRequest":true,"CreatedAt":"2019-02-12T12:29:24","Actor":"ViktorSlavov","Number":"15158","RawContent":null,"Title":"fix(docs): add aria label to checkboxes in selection example, #15021","State":"open","Body":"Fixes #15021\r\n\r\nPR adds aria-labels to the check-boxes in the [table selection example](https://material.angular.io/components/table/examples) so they can be read by accessibility tools","Url":"https://github.com/angular/material2/pull/15158","RelatedDescription":"Open PR \"fix(docs): add aria label to checkboxes in selection example, #15021\" (#15158)"},{"Id":"409215101","IsPullRequest":true,"CreatedAt":"2019-02-12T10:03:09","Actor":"dafo","Number":"15157","RawContent":null,"Title":"Fixing a typo in a 'select' test","State":"open","Body":"it('should scroll **top** the top when pressing HOME',\r\nchganged to\r\nit('should scroll **to** the top when pressing HOME'\r\n","Url":"https://github.com/angular/material2/pull/15157","RelatedDescription":"Open PR \"Fixing a typo in a 'select' test\" (#15157)"},{"Id":"409150279","IsPullRequest":false,"CreatedAt":"2019-02-12T07:03:51","Actor":"amitport","Number":"15156","RawContent":null,"Title":"feat(chips): support outlined chips","State":"open","Body":"#### Please describe the feature you would like to request.\r\nplease implement outlined chips as specified in https://material.io/design/components/chips.html#specs\r\n(action and input variants would be nice, there is some difference in behavior. For instance, outlined action chips are not elevated when pressed)\r\n\r\n#### What is the use-case or motivation for this proposal?\r\nthey look nice and are part of the spec\r\n\r\n#### Is there anything else we should know?\r\nthank you!","Url":"https://github.com/angular/material2/issues/15156","RelatedDescription":"Open issue \"feat(chips): support outlined chips\" (#15156)"},{"Id":"409007533","IsPullRequest":false,"CreatedAt":"2019-02-12T00:52:47","Actor":"csikosjanos","Number":"15153","RawContent":null,"Title":"Material schematics don't support legacy \"Sass\" format","State":"closed","Body":"#### What is the expected behavior?\r\nWhen I've configured the CLI to use `sass` for generated components, I would expect the material schematics to use already defined file format when generating components (such as the table).\r\n\r\n#### What is the current behavior?\r\nIt generates the file with the correct extension `.sass`, but the file content is CSS which is not correct and also invalid, therefore doesn't compile until the content of the file is not fixed manually.\r\n\r\n#### What are the steps to reproduce?\r\n```\r\nng new <project-name> --style=sass\r\nng add @angular/material\r\nng generate @angular/material:table my-table\r\n```\r\n\r\n#### Which versions of Angular, Material, OS, TypeScript, browsers are affected?\r\n```\r\n$ ng --version\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / △ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 7.0.7\r\nNode: 11.9.0\r\nOS: darwin x64\r\nAngular: 7.0.4\r\n... common, compiler, compiler-cli, core, forms, http\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.10.7\r\n@angular-devkit/build-angular     0.10.7\r\n@angular-devkit/build-optimizer   0.10.7\r\n@angular-devkit/build-webpack     0.10.7\r\n@angular-devkit/core              7.0.7\r\n@angular-devkit/schematics        7.0.7\r\n@angular/animations               7.2.4\r\n@angular/cdk                      7.3.1\r\n@angular/cli                      7.0.7\r\n@angular/fire                     5.1.1\r\n@angular/material                 7.3.1\r\n@ngtools/webpack                  7.0.7\r\n@schematics/angular               7.0.7\r\n@schematics/update                0.10.7\r\nrxjs                              6.3.3\r\ntypescript                        3.1.6\r\nwebpack                           4.19.1\r\n```\r\n\r\n#### Is there anything else we should know?\r\n","Url":"https://github.com/angular/material2/issues/15153","RelatedDescription":"Closed issue \"Material schematics don't support legacy \"Sass\" format\" (#15153)"},{"Id":"409001834","IsPullRequest":true,"CreatedAt":"2019-02-11T23:29:31","Actor":"jelbourn","Number":"15152","RawContent":null,"Title":"chore: bump version to 7.3.2 w/ changelog","State":"closed","Body":"","Url":"https://github.com/angular/material2/pull/15152","RelatedDescription":"Closed or merged PR \"chore: bump version to 7.3.2 w/ changelog\" (#15152)"},{"Id":"409023183","IsPullRequest":false,"CreatedAt":"2019-02-11T23:14:55","Actor":"clundberg1","Number":"15155","RawContent":null,"Title":"Datepicker: mat-datepicker-toggle messes up the input's styles in IE11","State":"open","Body":"#### What is the expected behavior?\r\nIt should look the same on all major browsers\r\n\r\n#### What is the current behavior?\r\nThe mat-datepicker-toggle component messes up the input's styles to the point where it looks like a textarea.\r\n\r\n#### What are the steps to reproduce?\r\nThis is what it looks like using the mat-datepicker-toggle component on Chrome:\r\n![image](https://user-images.githubusercontent.com/29963339/52600201-7ba8c500-2e20-11e9-847b-d6406391f782.png)\r\n\r\nAnd here it is on IE11:\r\n![image](https://user-images.githubusercontent.com/29963339/52600143-48663600-2e20-11e9-9f04-d0ef681f70bc.png)\r\n\r\n\r\n","Url":"https://github.com/angular/material2/issues/15155","RelatedDescription":"Open issue \"Datepicker: mat-datepicker-toggle messes up the input's styles in IE11\" (#15155)"},{"Id":"408999795","IsPullRequest":true,"CreatedAt":"2019-02-11T22:13:11","Actor":"jelbourn","Number":"15151","RawContent":null,"Title":"chore: bump version to 7.3.2 w/ changelog","State":"closed","Body":"","Url":"https://github.com/angular/material2/pull/15151","RelatedDescription":"Closed or merged PR \"chore: bump version to 7.3.2 w/ changelog\" (#15151)"},{"Id":"408933039","IsPullRequest":true,"CreatedAt":"2019-02-11T19:18:45","Actor":"crisbeto","Number":"15150","RawContent":null,"Title":"docs(radio): add aria labelling to examples","State":"closed","Body":"Adds the missing labels to a couple of the radio button live examples.\r\n\r\nFixes #15026.","Url":"https://github.com/angular/material2/pull/15150","RelatedDescription":"Closed or merged PR \"docs(radio): add aria labelling to examples\" (#15150)"},{"Id":"408910182","IsPullRequest":true,"CreatedAt":"2019-02-11T18:12:13","Actor":"benelliott","Number":"15149","RawContent":null,"Title":"feat(style): allow palettes to specify a separate hue for colored text","State":"open","Body":"New `text` hue will default to 500 for backwards compatibility.\r\n\r\nFixes #15148","Url":"https://github.com/angular/material2/pull/15149","RelatedDescription":"Open PR \"feat(style): allow palettes to specify a separate hue for colored text\" (#15149)"},{"Id":"408905531","IsPullRequest":false,"CreatedAt":"2019-02-11T17:59:46","Actor":"benelliott","Number":"15148","RawContent":null,"Title":"Allow palettes to specify a separate hue for uncontained text","State":"open","Body":"#### Please describe the feature you would like to request.\r\n\r\nThere is a lot of emphasis on making sure that you choose accessible text colors to ensure readability when your palette color is used in the background but there is no such concern when your palette color itself is used as the text color on a neutral background. This is exacerbated by the fact that @angular/material components will implicitly use the default hue of the palette when selecting this text color - for example in `_form-field_theme.scss`:\r\n\r\n  ```$focused-label-color: mat-color($primary);```\r\n\r\nit's very hard to pick a palette whose primary is effective both as a strong background color and as a strong text color for small text on a neutral background _and_ conforms to any existing brand guidelines.\r\n\r\nOne way to fix this would be to extend `mat-palette` with a fourth argument, `$text`. For compatibility it could default to `$default` if not specified, but this would allow you to use a much darker hue on form field labels and so on without making primary backgrounds darker everywhere else.\r\n\r\nYou can quite easily see the accessibility issues with the current system with some of the prepackaged themes. For instance setting the theme to `purple-green` on https://material.angular.io/components/form-field/examples gives a contrast ratio of 2.09 for the form field inputs.\r\n\r\n#### What is the use-case or motivation for this proposal?\r\n\r\nImproves accessibility\r\n\r\n#### Is there anything else we should know?\r\n\r\nNo\r\n","Url":"https://github.com/angular/material2/issues/15148","RelatedDescription":"Open issue \"Allow palettes to specify a separate hue for uncontained text\" (#15148)"},{"Id":"408895092","IsPullRequest":true,"CreatedAt":"2019-02-11T17:33:37","Actor":"swseverance","Number":"15147","RawContent":null,"Title":"fix(examples): fix form-field-custom-control","State":"open","Body":"* Update `MyTelInput` to implement `ControlValueAccessor` interface\r\n* Resolves #14810","Url":"https://github.com/angular/material2/pull/15147","RelatedDescription":"Open PR \"fix(examples): fix form-field-custom-control\" (#15147)"},{"Id":"408886096","IsPullRequest":true,"CreatedAt":"2019-02-11T17:12:08","Actor":"Suresh918","Number":"15146","RawContent":null,"Title":"fix(docs): Menu button in example is missing an accessible name #15039","State":"open","Body":"Fixes #15039","Url":"https://github.com/angular/material2/pull/15146","RelatedDescription":"Open PR \"fix(docs): Menu button in example is missing an accessible name #15039\" (#15146)"},{"Id":"408879110","IsPullRequest":true,"CreatedAt":"2019-02-11T16:56:59","Actor":"Suresh918","Number":"15145","RawContent":null,"Title":"fix(docs): Icon examples aria labels added #15013","State":"open","Body":"Fixes #15013","Url":"https://github.com/angular/material2/pull/15145","RelatedDescription":"Open PR \"fix(docs): Icon examples aria labels added #15013\" (#15145)"},{"Id":"408862528","IsPullRequest":true,"CreatedAt":"2019-02-11T16:29:26","Actor":"dafo","Number":"15144","RawContent":null,"Title":"Fixing a typo in a 'select' test","State":"closed","Body":"it('should scroll **top** the top when pressing HOME',\r\nis changed to\r\nit('should scroll **to** the top when pressing HOME',","Url":"https://github.com/angular/material2/pull/15144","RelatedDescription":"Closed or merged PR \"Fixing a typo in a 'select' test\" (#15144)"},{"Id":"408718328","IsPullRequest":false,"CreatedAt":"2019-02-11T10:34:52","Actor":"Rapiiidooo","Number":"15143","RawContent":null,"Title":"Mat-Stepper horizontal and vertical as directive","State":"open","Body":"#### Please describe the feature you would like to request.\r\nThe feature would be to group them in one component and add a new directive to change the orientation of the mat-stepper. (Like slider and divider for example)\r\n\r\n#### What is the use-case or motivation for this proposal?\r\nAs the title explain, there are mat-stepper-vertical and mat-stepper-horizontal components, what I am requesting would be more intuitive and really faster to switch between vertical and horizontal for responsive design.\r\n\r\n#### Is there anything else we should know?\r\nNothing, except thanks to all contributors of this project, you are amazing and keep going :)","Url":"https://github.com/angular/material2/issues/15143","RelatedDescription":"Open issue \"Mat-Stepper horizontal and vertical as directive\" (#15143)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-02-13T05:30:10.2508999Z","RunDurationInMilliseconds":7219}