{"Data":{"GitHub":{"Issues":[{"Id":"355800763","IsPullRequest":true,"CreatedAt":"2018-08-31T00:38:19","Actor":"briancylui","Number":"788","RawContent":null,"Title":"Make perf results table of CpuMath hardware intrinsics more informative","State":"open","Body":"All style changes aimed at making the perf results table look nicer - no functionality changes.  Look forward to green light!\r\n\r\n\r\ncc: @eerhardt @safern @tannergooding @danmosemsft \r\n","Url":"https://github.com/dotnet/machinelearning/pull/788","RelatedDescription":"Open PR \"Make perf results table of CpuMath hardware intrinsics more informative\" (#788)"},{"Id":"355423058","IsPullRequest":true,"CreatedAt":"2018-08-31T00:04:22","Actor":"shauheen","Number":"775","RawContent":null,"Title":"Merge master into release/preview for 0.5","State":"closed","Body":"This PR merges master into release branch for 0.5","Url":"https://github.com/dotnet/machinelearning/pull/775","RelatedDescription":"Closed or merged PR \"Merge master into release/preview for 0.5\" (#775)"},{"Id":"355374642","IsPullRequest":false,"CreatedAt":"2018-08-30T23:24:49","Actor":"yaeldekel","Number":"770","RawContent":null,"Title":"Bug in deserialization of ImageLoaderTransform","State":"closed","Body":"When it is deserialized, the base class is deserialized first, but when it is serialized, the base class is serialized last.","Url":"https://github.com/dotnet/machinelearning/issues/770","RelatedDescription":"Closed issue \"Bug in deserialization of ImageLoaderTransform\" (#770)"},{"Id":"355385749","IsPullRequest":true,"CreatedAt":"2018-08-30T22:19:02","Actor":"artidoro","Number":"771","RawContent":null,"Title":"Attribution of images in test/data/images","State":"closed","Body":" Fixes #697\r\n\r\n- I added the attribution for the images located in the test/data/images folder. \r\n- I used the citation format indicated in wikipedia's \"[best practices for attributions](https://wiki.creativecommons.org/wiki/Best_practices_for_attribution#This_is_an_ideal_attribution)\" \r\n\r\nNote: I used the same readme that provides citations for the datasets located in test/data and separated it in two parts. I think it makes more sense to keep the citations for the data and images in the folder in a single file.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/771","RelatedDescription":"Closed or merged PR \"Attribution of images in test/data/images\" (#771)"},{"Id":"355771464","IsPullRequest":false,"CreatedAt":"2018-08-30T22:07:15","Actor":"JRAlexander","Number":"787","RawContent":null,"Title":"Differences in FastTreeBinaryClassifier between versions","State":"open","Body":"In the Sentiment Analysis sample, when running 0.3.0 or  0.4.0 you get different results.\r\n\r\n**Both results in the console are positive** for 0.4.0. The **first result should be negative** if it is supposed to be the same as 0.3.0, which I'd assume it would.\r\n\r\nhttps://github.com/dotnet/docs/issues/7024 ","Url":"https://github.com/dotnet/machinelearning/issues/787","RelatedDescription":"Open issue \"Differences in FastTreeBinaryClassifier between versions\" (#787)"},{"Id":"355704156","IsPullRequest":false,"CreatedAt":"2018-08-30T18:33:25","Actor":"Anipik","Number":"786","RawContent":null,"Title":"Porting the tests for Different Sweepers","State":"open","Body":"Currently there are just tests for UniformRandomSweeer And RandomGridSweeper.\r\n\r\nThere are no tests for DeterministicSweeper,  SimpleSweeper,  SmacSweeper and NelderMeadSweeper. This will increase code coverage and will help to catch any current or future bugs in these Sweeper classes.\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/786","RelatedDescription":"Open issue \"Porting the tests for Different Sweepers\" (#786)"},{"Id":"355703140","IsPullRequest":false,"CreatedAt":"2018-08-30T18:30:35","Actor":"JRAlexander","Number":"785","RawContent":null,"Title":"Documentation fixes for .5 release","State":"open","Body":"List of api docs needing revision:\r\n* [ ] - [LearningPipeline](https://review.docs.microsoft.com/en-us/dotnet/api/microsoft.ml.learningpipeline?view=ml-dotnet&branch=smoke-test-preview)\r\n* [ ] - [OnnxConverter.Convert(PredictionModel) Method](https://review.docs.microsoft.com/en-us/dotnet/api/microsoft.ml.models.onnxconverter.convert?view=ml-dotnet&branch=smoke-test-preview#Microsoft_ML_Models_OnnxConverter_Convert_Microsoft_ML_PredictionModel_)","Url":"https://github.com/dotnet/machinelearning/issues/785","RelatedDescription":"Open issue \"Documentation fixes for .5 release\" (#785)"},{"Id":"355701021","IsPullRequest":false,"CreatedAt":"2018-08-30T18:24:33","Actor":"abgoswam","Number":"784","RawContent":null,"Title":"Using TensorFlowTransform with pre-trained models that are not frozen.","State":"open","Body":"Currently the TensorFlowTransform works with frozen TensorFlow models as input.\r\n\r\nWe need to investigate what it takes to get it to work with models that are not frozen.\r\nThis will also help if in the future we want to do transfer learning via fine-tuning of pre-trained models.","Url":"https://github.com/dotnet/machinelearning/issues/784","RelatedDescription":"Open issue \"Using TensorFlowTransform with pre-trained models that are not frozen.\" (#784)"},{"Id":"355689598","IsPullRequest":true,"CreatedAt":"2018-08-30T18:23:19","Actor":"shauheen","Number":"782","RawContent":null,"Title":"Bump the master branch to 0.6","State":"closed","Body":"Setting the master to 0.6","Url":"https://github.com/dotnet/machinelearning/pull/782","RelatedDescription":"Closed or merged PR \"Bump the master branch to 0.6\" (#782)"},{"Id":"355693710","IsPullRequest":true,"CreatedAt":"2018-08-30T18:02:23","Actor":"abgoswam","Number":"783","RawContent":null,"Title":"Updates to Unit Test cases for the TensorFlowTransform","State":"open","Body":"Fixes #779 \r\n\r\n(1) address the additional comments on the original TensorFlowTransform [PR](https://github.com/dotnet/machinelearning/pull/704)\r\n\r\n(2) added an additional unit test to verify invalid shapes are being handled correctly \r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/783","RelatedDescription":"Open PR \"Updates to Unit Test cases for the TensorFlowTransform\" (#783)"},{"Id":"355679894","IsPullRequest":false,"CreatedAt":"2018-08-30T17:20:41","Actor":"zyw400","Number":"781","RawContent":null,"Title":"Error Executing Graph with ImageLoader","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: windows\r\n- **.NET Version (eg., dotnet --info)**: latest master branch\r\n\r\n### Issue\r\n when executing a graph generated using PyTLC with ImageLoader, bombed with an error:\r\n[8/30/2018 5:06:37 PM Error] [xUnit.net 00:00:12.4271461]     Microsoft.ML.Runtime.RunTests.TestEntryPoints.EntryPointExecGraphCommand [FAIL]\r\n[8/30/2018 5:06:37 PM Informational] [xUnit.net 00:00:12.4294784]       **System.FormatException : One of the identified items was in an invalid format.**\r\n[8/30/2018 5:06:37 PM Informational] [xUnit.net 00:00:12.4311870]       Stack Trace:\r\n[8/30/2018 5:06:37 PM Informational] [xUnit.net 00:00:12.4325847]         D:\\mldotnet0823\\machinelearning\\src\\Microsoft.ML.Core\\Utilities\\Contracts.cs(706,0): at Microsoft.ML.Runtime.Contracts.CheckDecode(IExceptionContext ctx, Boolean f)\r\n[8/30/2018 5:06:37 PM Informational] [xUnit.net 00:00:12.4330332]         D:\\mldotnet0823\\machinelearning\\src\\Microsoft.ML.Data\\Model\\ModelLoadContext.cs(153,0): at Microsoft.ML.Runtime.Model.ModelLoadContext.LoadNonEmptyString()\r\n[8/30/2018 5:06:37 PM Informational] [xUnit.net 00:00:12.4331477]         D:\\mldotnet0823\\machinelearning\\src\\Microsoft.ML.Data\\Transforms\\TransformBase.cs(354,0): at Microsoft.ML.Runtime.Data.OneToOneTransformBase.Bindings.Create(OneToOneTransformBase parent, ModelLoadContext ctx, ISchema input, ITransposeSchema transInput, Func`2 testType)\r\n[8/30/2018 5:06:37 PM Informational] [xUnit.net 00:00:12.4332460]         D:\\mldotnet0823\\machinelearning\\src\\Microsoft.ML.Data\\Transforms\\TransformBase.cs(508,0): at Microsoft.ML.Runtime.Data.OneToOneTransformBase..ctor(IHost host, ModelLoadContext ctx, IDataView input, Func`2 testType)\r\n[8/30/2018 5:06:37 PM Informational] [xUnit.net 00:00:12.4333372]         D:\\mldotnet0823\\machinelearning\\src\\Microsoft.ML.ImageAnalytics\\ImageLoaderTransform.cs(92,0): at Microsoft.ML.Runtime.ImageAnalytics.ImageLoaderTransform..ctor(IHost host, ModelLoadContext ctx, IDataView input)\r\n[8/30/2018 5:06:37 PM Informational] [xUnit.net 00:00:12.4334287]         D:\\mldotnet0823\\machinelearning\\src\\Microsoft.ML.ImageAnalytics\\ImageLoaderTransform.cs(110,0): at Microsoft.ML.Runtime.ImageAnalytics.ImageLoaderTransform.<>c__DisplayClass11_0.<Create>b__0(IChannel ch)\r\n[8/30/2018 5:06:37 PM Informational] [xUnit.net 00:00:12.4335158]         D:\\mldotnet0823\\machinelearning\\src\\Microsoft.ML.Core\\Data\\IHostEnvironment.cs(232,0): at Microsoft.ML.Runtime.HostExtensions.Apply[T](IHost host, String channelName, Func`2 func)\r\n[8/30/2018 5:06:37 PM Informational] [xUnit.net 00:00:12.4336053]         D:\\mldotnet0823\\machinelearning\\src\\Microsoft.ML.ImageAnalytics\\ImageLoaderTransform.cs(110,0): at Microsoft.ML.Runtime.ImageAnalytics.ImageLoaderTransform.Create(IHostEnvironment env, ModelLoadContext ctx, IDataView input)\r\n[8/30/2018 5:06:37 PM Informational] [xUnit.net 00:00:12.4349911]       Output:\r\n[8/30/2018 5:06:37 PM Informational] [xUnit.net 00:00:12.4350922]         Test EntryPointExecGraphCommand: aborted: passed\r\n[8/30/2018 5:06:37 PM Informational] [xUnit.net 00:00:12.4543727]   Finished:    Microsoft.ML.Core.Tests\r\n\r\n[image_graph.txt](https://github.com/dotnet/machinelearning/files/2337169/image_graph.txt)\r\n\r\n[test.txt](https://github.com/dotnet/machinelearning/files/2337195/test.txt)\r\n![microsoftlogo](https://user-images.githubusercontent.com/33538664/44867992-4592d280-ac3e-11e8-9e4b-140c8d1e9e3d.png)\r\n![revolutionanalyticslogo](https://user-images.githubusercontent.com/33538664/44867993-4592d280-ac3e-11e8-9759-052795f2e4f1.png)\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/781","RelatedDescription":"Open issue \"Error Executing Graph with ImageLoader\" (#781)"},{"Id":"355677888","IsPullRequest":false,"CreatedAt":"2018-08-30T17:14:38","Actor":"danmosemsft","Number":"780","RawContent":null,"Title":"Delete dead code related to AVX","State":"open","Body":"Some of the original code relating to AVX and SSE is dead and can be deleted including\r\n\r\n* all of avx.cpp and avx.cs\r\n* functions in thunk.cs that exposed avx.cpp functions, eg MatMulDX\r\n\r\nI checked in TLC as well and the above were only used by code in NeuralNetworks/*, which will not migrate to ML.NET.\r\n\r\nI also notice some functions in sse.cs seem dead eg MeanOfSrc \r\n","Url":"https://github.com/dotnet/machinelearning/issues/780","RelatedDescription":"Open issue \"Delete dead code related to AVX\" (#780)"},{"Id":"355671163","IsPullRequest":false,"CreatedAt":"2018-08-30T16:53:54","Actor":"abgoswam","Number":"779","RawContent":null,"Title":"Address additional comments on the TensorFlowTransform PR","State":"open","Body":"There are some additional comments that need to be addressed for the TensorFlowTransform [PR](https://github.com/dotnet/machinelearning/pull/704)\r\n\r\nCreating an issue to address those comments. \r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/779","RelatedDescription":"Open issue \"Address additional comments on the TensorFlowTransform PR\" (#779)"},{"Id":"355404178","IsPullRequest":true,"CreatedAt":"2018-08-30T15:14:56","Actor":"briancylui","Number":"774","RawContent":null,"Title":"Fix netcoreapp3.0 errors in AVX intrinsics","State":"closed","Body":"This is a small PR that fixes an error made while making changes in a previous PR - nothing fancy!  Look forward to green light.\r\n\r\ncc: @safern @eerhardt @tannergooding","Url":"https://github.com/dotnet/machinelearning/pull/774","RelatedDescription":"Closed or merged PR \"Fix netcoreapp3.0 errors in AVX intrinsics\" (#774)"},{"Id":"355629352","IsPullRequest":true,"CreatedAt":"2018-08-30T15:08:22","Actor":"TomFinley","Number":"778","RawContent":null,"Title":"WIP Static typed Estimator/Transformer/Data","State":"open","Body":"Fixes #632. The first version of the statically typed parallels to `IEstimator`, `ITransformer`, `IDataView`. Stub for the library's analyzer.","Url":"https://github.com/dotnet/machinelearning/pull/778","RelatedDescription":"Open PR \"WIP Static typed Estimator/Transformer/Data\" (#778)"},{"Id":"355588928","IsPullRequest":true,"CreatedAt":"2018-08-30T13:43:28","Actor":"Nepomuceno","Number":"777","RawContent":null,"Title":"Including Wikipedia citations","State":"closed","Body":"Including the missing citations and organizing previous citation so we are more consistent inside the Readme.\r\n\r\n\r\nSolving the issue #697 ","Url":"https://github.com/dotnet/machinelearning/pull/777","RelatedDescription":"Closed or merged PR \"Including Wikipedia citations\" (#777)"},{"Id":"355544873","IsPullRequest":false,"CreatedAt":"2018-08-30T11:34:20","Actor":"sharpwood","Number":"776","RawContent":null,"Title":"Provide an example of LightgbmRanker?","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/776","RelatedDescription":"Open issue \"Provide an example of LightgbmRanker?\" (#776)"},{"Id":"355399692","IsPullRequest":true,"CreatedAt":"2018-08-30T02:27:11","Actor":"eerhardt","Number":"773","RawContent":null,"Title":"Misc SubComponent removals","State":"open","Body":"Removing SubComponent usages in:\r\n\r\n* ML.Maml\r\n* ComponentCreation extension methods\r\n\r\nAfter this change the only places that use SubComponents are:\r\n\r\n1. CmdParser.cs, SubComponent.cs, and ComponentCatalog.cs (which will be the last things to be removed).\r\n2. PipelineInference (which the whole project will be removed from this repo with #689)\r\n3. EntryPoint code gen (which should no longer apply since there are no more usages of SubComponents in the API)\r\n4. Tests\r\n\r\nWorking towards #585","Url":"https://github.com/dotnet/machinelearning/pull/773","RelatedDescription":"Open PR \"Misc SubComponent removals\" (#773)"},{"Id":"355392744","IsPullRequest":false,"CreatedAt":"2018-08-30T01:46:35","Actor":"Ivanidzo4ka","Number":"772","RawContent":null,"Title":"Test system doesn't actually run in MTA apartment state","State":"open","Body":"https://github.com/dotnet/machinelearning/blob/9258be22e3338dec18075c6e66048b1861533ec8/test/Microsoft.ML.TestFramework/BaseTestBaseline.cs#L804\r\nWe don't run tests in MTA, since for quite a while coreclr didn't support MTA.\r\n\r\nIt was fixed in https://github.com/dotnet/coreclr/pull/15652, so I think we should enable it.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/772","RelatedDescription":"Open issue \"Test system doesn't actually run in MTA apartment state\" (#772)"},{"Id":"355285073","IsPullRequest":true,"CreatedAt":"2018-08-30T00:10:25","Actor":"eerhardt","Number":"767","RawContent":null,"Title":"Update buildtools to 3.0.0-preview1-03129-01","State":"closed","Body":"This new version has a fix for the Copyright header.\r\n\r\nFix #766\r\n\r\nNOTE: The `init-tools` changes are direct copies from `dotnet/corefx/master`.\r\n\r\nFYI - @shauheen ","Url":"https://github.com/dotnet/machinelearning/pull/767","RelatedDescription":"Closed or merged PR \"Update buildtools to 3.0.0-preview1-03129-01\" (#767)"},{"Id":"355258177","IsPullRequest":false,"CreatedAt":"2018-08-30T00:10:25","Actor":"eerhardt","Number":"766","RawContent":null,"Title":"Need to change our Copyright on NuGet packages","State":"closed","Body":"nuget.org has new requirements for Microsoft owned packages. One of these compliance checks is that the Copyright matches exactly the same string they expect. Our current Copyright does not match their exact string - see https://github.com/dotnet/buildtools/pull/2136 for the fix.","Url":"https://github.com/dotnet/machinelearning/issues/766","RelatedDescription":"Closed issue \"Need to change our Copyright on NuGet packages\" (#766)"},{"Id":"355336508","IsPullRequest":false,"CreatedAt":"2018-08-29T21:16:03","Actor":"yaeldekel","Number":"769","RawContent":null,"Title":"Enable specifying a mapping between data view column names and TensorFlow inputs","State":"open","Body":"Currently the column names have to match the input names that are stored in the TensorFlow model. We should enable users to provide a mapping from the data view columns to the TensorFlow inputs.\r\nWe should also enable users to specify a new name for the output column.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/769","RelatedDescription":"Open issue \"Enable specifying a mapping between data view column names and TensorFlow inputs\" (#769)"},{"Id":"355335284","IsPullRequest":true,"CreatedAt":"2018-08-29T21:12:23","Actor":"Anipik","Number":"768","RawContent":null,"Title":"Ported some Sweeper tests","State":"open","Body":"Fixes https://github.com/dotnet/machinelearning/issues/786\r\n\r\n- I have ported some sweeper tests\r\n- Changed the tests from mstest into Xunit\r\n- Disable LowDiscrepancyRandomSweeper tests as the class is not yet ported\r\n- skipped NelderMeadSweeper tests as not able to load this ldrandpl class\r\n- reformatted some tests to use theory\r\n\r\ncc @eerhardt @Ivanidzo4ka @danmosemsft ","Url":"https://github.com/dotnet/machinelearning/pull/768","RelatedDescription":"Open PR \"Ported some Sweeper tests\" (#768)"},{"Id":"355228267","IsPullRequest":false,"CreatedAt":"2018-08-29T15:59:20","Actor":"yaeldekel","Number":"765","RawContent":null,"Title":"Add \"Reshape Transform\"","State":"open","Body":"We need the following functionalities in order to score TensorFlow models:\r\n\r\n1. Change the ColumnType of the column to be a different shape – this would not do anything to the data, it would just change the type of the column, to match the input dimensions the model expects (for example, if the data contains a column of length 784, and the model expects a 28x28 input).\r\n2. Actually reshape the data – (C,H,W) to (H,W,C). This transform would also have to move data around in addition to changing the ColumnType.\r\n3. Reshape data from RGB to other ordering of the channels. This transform would move the data around, but leave the ColumnType as it was.\r\n\r\n2 is already implemented as an option in the PixelExtractorTransform, and 3 could also be implemented as an option in that transform, but it may be useful to have them as a separate transform, for cases where the input data doesn't necessarily come from the PixelExtractorTransform.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/765","RelatedDescription":"Open issue \"Add \"Reshape Transform\"\" (#765)"},{"Id":"355223254","IsPullRequest":false,"CreatedAt":"2018-08-29T15:47:31","Actor":"Zruty0","Number":"764","RawContent":null,"Title":"Rework schema and metadata","State":"open","Body":"We wanted to change the following about the schema:\r\n- Formally make it a collection of 'columns'.\r\n- Turn metadata into an instance of `IRow`.\r\n- (maybe) introduce 'global metadata' in addition to 'column metadata'.\r\nBelow is the sketch of the new interface for schema: \r\n\r\n```c#\r\n    public interface ISchema : IReadOnlyList<ISchemaColumn>\r\n    {\r\n        /// <summary>\r\n        /// Dataset-wide metadata.\r\n        /// </summary>\r\n        IRow Metadata { get; }\r\n    }\r\n\r\n    public interface ISchemaColumn\r\n    {\r\n        /// <summary>\r\n        /// The name of a column. This string should always be non-empty.\r\n        /// </summary>\r\n        string Name { get; }\r\n\r\n        /// <summary>\r\n        /// The type of the column.\r\n        /// </summary>\r\n        ColumnType Type { get; }\r\n\r\n        /// <summary>\r\n        /// The metadata for a column, or <c>null</c> if this column has no metadata.\r\n        /// </summary>\r\n        IRow Metadata { get; }\r\n    }\r\n```\r\n\r\nIn addition, we might want to rework `IRow` to not include the notion of 'Row ID' and 'active columns'. Maybe this calls for another interface, like `IMovingRow` that would include these.\r\n\r\n/cc @TomFinley","Url":"https://github.com/dotnet/machinelearning/issues/764","RelatedDescription":"Open issue \"Rework schema and metadata\" (#764)"},{"Id":"354980619","IsPullRequest":false,"CreatedAt":"2018-08-29T03:22:28","Actor":"ericstj","Number":"763","RawContent":null,"Title":"ML.NET packages are missing third party notices","State":"open","Body":"Packages which include source / binaries that come from a third party need to be documented via a third party notices file in the root of the package.  The source repository should also contain a third party notices file in the root.\r\n\r\nFor example see https://github.com/dotnet/corefx/blob/master/THIRD-PARTY-NOTICES.TXT","Url":"https://github.com/dotnet/machinelearning/issues/763","RelatedDescription":"Open issue \"ML.NET packages are missing third party notices\" (#763)"},{"Id":"354940505","IsPullRequest":false,"CreatedAt":"2018-08-28T23:28:22","Actor":"jignparm","Number":"762","RawContent":null,"Title":"ONNX/Sonoma - upgrade to RS5 Lotus runtime and onnx 1.2 version support","State":"open","Body":"Upgrade to latest Lotus runtime and onnx model format","Url":"https://github.com/dotnet/machinelearning/issues/762","RelatedDescription":"Open issue \"ONNX/Sonoma - upgrade to RS5 Lotus runtime and onnx 1.2 version support\" (#762)"},{"Id":"354940288","IsPullRequest":false,"CreatedAt":"2018-08-28T23:27:08","Actor":"jignparm","Number":"761","RawContent":null,"Title":"ONNX/Sonoma - add API to retrieve shapes/dims of input and output layers","State":"open","Body":"Access shape info programatically instead of via user input","Url":"https://github.com/dotnet/machinelearning/issues/761","RelatedDescription":"Open issue \"ONNX/Sonoma - add API to retrieve shapes/dims of input and output layers\" (#761)"},{"Id":"354939964","IsPullRequest":false,"CreatedAt":"2018-08-28T23:25:21","Actor":"codemzs","Number":"760","RawContent":null,"Title":"Test for parquet loader because type system has changed","State":"open","Body":"We need to verify parquet loader works with the .NET standard type system.","Url":"https://github.com/dotnet/machinelearning/issues/760","RelatedDescription":"Open issue \"Test for parquet loader because type system has changed\" (#760)"},{"Id":"354885162","IsPullRequest":true,"CreatedAt":"2018-08-28T20:11:08","Actor":"Ivanidzo4ka","Number":"759","RawContent":null,"Title":"Term transformer implementation","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/759","RelatedDescription":"Open PR \"Term transformer implementation\" (#759)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-08-31T05:30:34.3993444Z","RunDurationInMilliseconds":964}