{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null},{"Title":"NuGet Summer 2018 Roadmap","PublishedOn":"2018-07-02T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This blog post provides insights into the NuGet team plans for the upcoming quarter (July &#8211; Sep 2018). In the March 2018 NuGet Spring 2018 Roadmap, we had outlined Package Signing,...","Href":"https://devblogs.microsoft.com/nuget/nuget-summer-2018-roadmap/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"10710051214","Type":"IssuesEvent","CreatedAt":"2019-10-25T00:30:35","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7631","RelatedDescription":"Closed issue \"[Deployment] Registration4 migration\" (#7631) at NuGet/NuGetGallery","RelatedBody":"Related to https://github.com/NuGet/Engineering/issues/2784\r\n\r\n- [x] DEV\r\n  - [x] Catalog2registration reg4;\r\n  - [x] E2E test configuration to allow both reg3 and reg4 in search responses;\r\n  - [x] Configuration for all jobs to use reg4 and for c2azs specifically to wait for both reg3 and reg4;\r\n  - [x] Catalog2AzureSearch deployment to wait for both reg3 and reg4 cursors, Release [480703](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=480703);\r\n  - [x] Catalog2Monitoring deployment with new configuration, Release [480707](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=480707);\r\n  - [x] MonitoringProcessor deployment with new configuration, Release [480708](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=480708);\r\n  - [x] CopyAzureContainer deployment with new configuration, Release [480709](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=480709);\r\n  - [x] SearchService deplyoment with new configuration, Release [482074](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=482074);\r\n  - [x] Service index file update to point to registration4;\r\n- [x] INT\r\n  - [x] Catalog2registration reg4;\r\n  - [x] E2E test configuration to allow both reg3 and reg4 in search responses;\r\n  - [x] Configuration for all jobs to use reg4 and for c2azs specifically to wait for both reg3 and reg4;\r\n  - [x] Catalog2AzureSearch deployment to wait for both reg3 and reg4 cursors, Release [483221](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=483221);\r\n  - [x] Catalog2Monitoring deployment with new configuration, Release [483223](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=483223);\r\n  - [x] MonitoringProcessor deployment with new configuration, Release [483232](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=483232);\r\n  - [x] CopyAzureContainer deployment with new configuration, Release [484009](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=484009);\r\n  - [x] SearchService deplyoment with new configuration, Release [483323](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=483323);\r\n  - [x] Service index file update to point to registration4;\r\n- [x] PROD\r\n  - [x] Catalog2registration reg4;\r\n  - [x] E2E test configuration to allow both reg3 and reg4 in search responses;\r\n  - [x] Configuration for all jobs to use reg4 and for c2azs specifically to wait for both reg3 and reg4;\r\n  - [x] Catalog2AzureSearch deployment to wait for both reg3 and reg4 cursors, Release [483221](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=483221);\r\n  - [x] Catalog2Monitoring deployment with new configuration, Release [485211](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=485211);\r\n  - [x] MonitoringProcessor deployment with new configuration, Release [485217](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=485217);\r\n  - [x] CopyAzureContainer deployment with new configuration, Release [484009](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=484009);\r\n  - [x] SearchService deplyoment with new configuration, Release [483323](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=483323);\r\n  - [x] Service index file update to point to registration4;\r\n"},{"Id":"10709723380","Type":"PullRequestEvent","CreatedAt":"2019-10-24T23:08:44","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7647","RelatedDescription":"Opened pull request \"Add odata.org to Microsoft domains\" (#7647) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/nuget/engineering/issues/2804"},{"Id":"10709459945","Type":"IssuesEvent","CreatedAt":"2019-10-24T22:13:22","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7646","RelatedDescription":"Opened issue \"[Gravatar Proxy] Handle \"Service Unavailable\" responses\" (#7646) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nAbout ~10 times an hour, Gravatar responds with a HTTP 503 (see [this query](https://ms.portal.azure.com#@33e01921-4d64-4f8c-a055-5bdaffd5e33d/blade/Microsoft_Azure_Monitoring_Logs/LogsBlade/resourceId/%2Fsubscriptions%2F685c4662-53d8-40f9-ac51-926097ede041%2FresourceGroups%2Fnuget-prod-0-v2gallery%2Fproviders%2Fmicrosoft.insights%2Fcomponents%2Fnuget-prod-v2gallery/source/LogsBlade.AnalyticsShareLinkToQuery/q/H4sIAAAAAAAAA0WNQQqDMBBF955i6EpBpB7Abgq9RhknHw2YRGaSlpYevtaF3f73Ht9hRXSI4mHVh54zFJR9gGUOK12Ip1T3Z9f8IeuETMNAJ4MURTcpP3ibO0nhRIdoRQRmu3njxbAzKyGw%252BjdIUom5bmh80ehjfZy21M9NSworS74mh61K6qA%252Fc4%252Fu5GBC1RepItIovQAAAA%253D%253D)). As a result, the browser displays a broken image to the user.\r\n\r\n### To Reproduce\r\nUnknown. This seems to be due to issues in Gravatar.\r\n\r\n### Expected behavior\r\nConsider showing a fallback image instead.\r\n"},{"Id":"10709143689","Type":"PullRequestEvent","CreatedAt":"2019-10-24T21:20:11","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7645","RelatedDescription":"Opened pull request \"[MSA] Audit the external credential for attempted login in Gallery\" (#7645) at NuGet/NuGetGallery","RelatedBody":"We need to audit the credential which was used to attempt to login in the gallery before it was identified and authorized(from DB). This is necessary for retrospective analysis. Also, log the `Tenant Id` and `OID` used with the external credential.\r\n\r\nThis depends on the shims changes.\r\n\r\nAddresses: https://github.com/NuGet/Engineering/issues/2652 "},{"Id":"10707432336","Type":"IssuesEvent","CreatedAt":"2019-10-24T17:27:21","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7446","RelatedDescription":"Closed issue \"[Azure Search] Stand up secondary Azure Search environment to allow A/B testing\" (#7446) at NuGet/NuGetGallery","RelatedBody":"- [x] provision Azure Search resources\r\n- [x] Add preview Azure Search E2E and func test configs\r\n- [x] Deploy preview Azure Search resources\r\n- [x] Deploy preview Azure Search jobs\r\n- [x] Deploy preview Azure Search services\r\n- [x] Deploy gallery with both search configs pointing to main Azure Search\r\n- [x] Turn A/B test config to 0\r\n- [ ] Deploy gallery with preview search config pointing to preview Azure Search\r\n- [x] Update the OneNote"},{"Id":"10700588614","Type":"IssuesEvent","CreatedAt":"2019-10-24T00:37:45","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7641","RelatedDescription":"Closed issue \"Cannot access https://nuget.org from azure cloud.\" (#7641) at NuGet/NuGetGallery","RelatedBody":"I see reset packets coming from nuget's servers when trying to access the site. \r\n\r\n### For issues regarding the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), file a bug on [NuGet Home](https://github.com/nuget/home/issues).\r\n\r\n### For issues connecting to NuGet.org, please refer to [this guide](https://docs.microsoft.com/en-us/nuget/faqs/nuget-faq#nugetorg-not-accessible).\r\n\r\n### For issues regarding your NuGet.org account, please refer to [this guide](https://docs.microsoft.com/en-us/nuget/faqs/nuget-faq#nugetorg-account-management).\r\n\r\n### Describe the bug\r\nA clear and concise description of what the bug is.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. On this URL '...'\r\n2. Perform this operation '...'\r\n3. See error\r\n\r\n### Expected behavior\r\nA clear and concise description of what you expected to happen.\r\n\r\n### Screenshots\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n### Additional context\r\nAdd any other context about the problem here."},{"Id":"10699739423","Type":"IssuesEvent","CreatedAt":"2019-10-23T21:41:13","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7590","RelatedDescription":"Closed issue \"Orchestrator validation sets can be stuck when two processor copies happen in parallel\" (#7590) at NuGet/NuGetGallery","RelatedBody":"## Bug Hit Count\r\n\r\nEnvironment | Count\r\n-- | --\r\nDEV | 2\r\nINT | 1\r\nPROD | 7\r\n\r\n## Explanation\r\n\r\nA validation set (`dccf5bef-f050-4655-a3df-148ae192605e`) became stuck when two parallel threads we processing the completion of the `ScanAndSign` processor. From the orchestrator's perspective, this was the sequence of events:\r\n\r\nThread | Event\r\n-- | --\r\n1 | Received message\r\n1 | Determined `ScanAndSign` is complete\r\n1 | Start the copy of the `ScanAndSign` .nupkg to the `validation-set` location\r\n2 | Received message\r\n2 | Determined `ScanAndSign` is complete\r\n2 | Start the copy of the `ScanAndSign` .nupkg to the `validation-set` location\r\n1 | Clean up the `ScanAndSign` .nupkg\r\n1 | Start `PackageSigningValidator2`\r\n1 | Complete message\r\n2 | **Copy fails with source missing**\r\n\r\nWhen the copy on thread 2 fails, it has already set the destination blob to zero bytes.\r\n\r\nThe copy process uses an empty etag condition so it has no problem clobbering the validation set package with a \"duplicate\" copy operation. The line of code is here:\r\nhttps://github.com/NuGet/NuGet.Jobs/blob/c3912a04df42ab4146b1cd8069f3baf8a3793d9b/src/NuGet.Services.Validation.Orchestrator/ValidationPackageFileService.cs#L226\r\n\r\nWhen the `PackageSigningValidator2` wakes up to validate the package, it sees an empty blob and fails.\r\n\r\n## Mitigation\r\n\r\nRevalidating the package fixes the problem every time from my experience.\r\n\r\nIf this happens a lot, we can do our best to reduce message duplication by turning off queue-back. Note that this will increase validation times.\r\n\r\n## Fix\r\n\r\nI talked to @agr and we came up with three solutions, one which was ruled out.\r\n\r\n1. Add a `validation-set` package etag so that one of the copies fails with etag mismatch.\r\n1. Add a lease on the `validation-set` package.\r\n1. ~~Don't clean up the `ScanAndSign` copy and less blob storage cleanup do it's thing~~. We can't do this one because you can still have a slow processor completion clobber a subsequent blob. For example, processor A is being completed still but the `validation-set` blob has already been updated with work from processor B.\r\n\r\n## Detecting the problem\r\n\r\n```\r\ntraces\r\n| where timestamp > todatetime('2019-10-09T01:00:00') \r\n| where message contains \"VALIDATION SET ID OF THE PACKAGE\"\r\n| extend callGuid = tostring(customDimensions.CallGuid)\r\n| extend instanceName = tostring(customDimensions.InstanceName)\r\n| where instanceName !startswith \"Validation.Orchestrator-\"\r\n| order by timestamp desc\r\n| project timestamp, callGuid, instanceName, message\r\n```\r\n\r\nIn `Validation.PackageSigning.ProcessSignature-*` logs, you'll see something like this over and over:\r\n\r\n```\r\nDownloaded 0 bytes in 0.0104824 seconds for request...\r\n```\r\n\r\n## Examples\r\n\r\nValidation Set IDs:\r\n\r\n### DEV\r\n\r\n```\r\n2019-09-30 - dccf5bef-f050-4655-a3df-148ae192605e\r\n2019-10-09 - d81c7729-8bdb-4cac-b1d9-e20b2979af90\r\n```\r\n\r\n### INT\r\n\r\n```\r\n2019-10-10 - 4b1517a4-0f4f-4aef-b16d-3e8bede745b2 - GroupDocs.Viewer 19.9.0-alpha-20191010083705\r\n```\r\n\r\n### PROD\r\n\r\n```\r\n2019-10-09 - 60f1974a-11e8-4c95-9eea-74119e80a24b - HZH_Controls 1.0.7\r\n2019-10-09 - 495d3ff0-7912-4f1e-a8a7-4c9ace92b8c2 - amgbuild 0.28.0\r\n2019-10-09 - e963448d-64e4-4b00-a3c7-5f722b118dc5 - PeanutButter.TempDb.Runner 1.2.310\r\n2019-10-09 - 804c07a8-6c5c-4c4d-91b2-b1df70aff4b3 - MassTransit.DocumentDb 5.5.6-develop.2194\r\n2019-10-09 - cf2a2dd4-97aa-4e0c-b27c-4bfcb4f6155b - WebVella.TagHelpers 1.0.24\r\n2019-10-09 - bbb4d00c-28a2-41e3-9686-90f613fc8716 - IDTechSDK 1.2.174.3\r\n2019-10-10 - 355ba0f9-1b0e-4e85-bdaf-27e66c21b9ba - RobotRaconteurNET 0.9.1\r\n```"},{"Id":"10699736034","Type":"IssuesEvent","CreatedAt":"2019-10-23T21:40:41","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7629","RelatedDescription":"Closed issue \"Add pessimistic concurrent control to orchestrator to reduce concurrency issues\" (#7629) at NuGet/NuGetGallery","RelatedBody":"Related to https://github.com/NuGet/NuGetGallery/issues/7590.\r\n\r\nValidation.SymbolsOrchestrator\r\n- Release: [483281](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?releaseId=483281&_a=release-pipeline-progress)\r\n- [x] DEV\r\n- [x] INT\r\n- [x] PROD\r\n\r\nValidation.Orchestrator\r\n- Release: [483284](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=483284)\r\n- [x] DEV\r\n- [x] INT\r\n- [x] PROD"},{"Id":"10699246630","Type":"PullRequestEvent","CreatedAt":"2019-10-23T20:30:48","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7643","RelatedDescription":"Merged pull request \"[ReleasePrep][2019.10.22]RI dev into master\" (#7643) at NuGet/NuGetGallery","RelatedBody":"Heartbeat support\r\nNet472 upgrade\r\nSxS search page improvement\r\nEF 6.3 upgrade\r\nGravatar proxy test."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"10709067137","Type":"IssuesEvent","CreatedAt":"2019-10-24T21:08:45","Actor":"lithium112","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8746","RelatedDescription":"Opened issue \"If nuget installation is terminated unexpectedly, retrying does nothing\" (#8746) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used: NuGet.exe \r\n\r\nNuGet version (x.x.x.xxx): 5.3.0.6260\r\n\r\nOS version: Windows Server 2019, but likely not OS version dependent.\r\n\r\nWorked before? If so, with which NuGet version: No\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Start installing a nuget package to a destination: \r\nnuget.exe install SomePackage -Source C:\\SourceFolder -OutputDirectory C:\\DestFolder -packagesavemode nuspec\r\n\r\n2. Terminate the process while the installation is in progress (e.g. Ctrl+c, kill process, etc.)\r\n\r\n3. Retry installation with the same parameters as step 1. \r\n\r\nSeems like this happens because nuget.exe determines whether the installation is successful based on the presence of the .nupkg or .nuspec marker file in the destination directory. However because this file is placed before the nuget installation is complete, there's no way for nuget.exe to know that a previous attempt failed part way through.\r\n\r\nCan the marker file be placed last so that retries of nuget installation always succeed?"},{"Id":"10708365953","Type":"IssuesEvent","CreatedAt":"2019-10-24T19:31:59","Actor":"bpaczkowski","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8745","RelatedDescription":"Opened issue \"Force no cache for single package source in nuget.config\" (#8745) at NuGet/Home","RelatedBody":"We're using package wildcards for some of our internal libraries to make it easier to update them, but as it stands now, they wont get updated to the newest version (matching the wildcard) without the use of the no-cache operator, which also applies it to nuget.org package source. Ideally it would be if no-cache was applied to all wildcarded packages, but if I could apply it to a single package source (our internal one), this would suffice."},{"Id":"10708242407","Type":"IssuesEvent","CreatedAt":"2019-10-24T19:15:11","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8670","RelatedDescription":"Closed issue \"[Centrally managing NuGet packages and versions] Evaluate design options for supporting pinning of transitive dependencies in CPVM \" (#8670) at NuGet/Home","RelatedBody":"Evaluate design options for supporting pin of transitive dependencies in CPVM \r\n"},{"Id":"10706388734","Type":"IssuesEvent","CreatedAt":"2019-10-24T15:19:20","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8744","RelatedDescription":"Opened issue \"DependencyGraphSpec should have option to not clone PackageSpec items\" (#8744) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nWhen profiling ways to make NuGet no-op restore faster, I noticed that the full `DependencyGraphSpec` is being rebuilt for each project with its closure.  In the process, the full `PackageSpec` object is being cloned.  This makes sense for some scenarios but in no-op restore it adds unnecessary allocations and slows things down.\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): Any\r\n\r\nNuGet version (x.x.x.xxx): Any\r\n\r\ndotnet.exe --version (if appropriate): Any\r\n\r\nVS version (if appropriate): Any\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Any\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a large DependencyGraphSpec with 700 projects\r\n\r\n2. For each project, call `WithProjectClosure()`\r\n\r\nProfiling shows a significant amount of work is being performed cloning the `PackageSpec` objects.\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"10706101336","Type":"IssuesEvent","CreatedAt":"2019-10-24T14:49:55","Actor":"mrward","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8743","RelatedDescription":"Opened issue \"IncludeInPackage does not copy references from NuGet package depdendencies\" (#8743) at NuGet/Home","RelatedBody":"Originally posted here: https://developercommunity.visualstudio.com/content/problem/785069/cannot-include-dependent-packages-when-building-a.html\r\n\r\n## Details about Problem\r\n\r\n>  I am using the excellent built-in tool for creating nuget packages.\r\n>\r\n>I would like to include a dependent package/assembly/dll to the final nuget package, and I expected to be able to do so by checking the 'Include in Package' under NuGet properties for a Reference to the dependent package.\r\n>\r\n>However, what I am seeing is that it doesn't appear to have any effect to check the 'Include in Package' checkbox for references to external packages.\r\n>\r\n>Is this an error, or am I perhaps doing it wrong?\r\n>\r\n>I made a temporary workaround by including the actual dll in the lib/net472/ folder by adding it to the project manually, but I would naturally avoid a hack like that. :-)\r\n\r\n"},{"Id":"10703083302","Type":"IssuesEvent","CreatedAt":"2019-10-24T08:52:29","Actor":"voroninp","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8742","RelatedDescription":"Opened issue \"Dotnet pack does not respect floating version.\" (#8742) at NuGet/Home","RelatedBody":"## Details about Problem\r\nI use `nuget pack`\r\n\r\nNuGetVersion: NuGet Command Line `5.3.0.4`\r\ndotnet version: `3.0.100`\r\nVS version: 2019 `16.3.6`\r\nOS version: Win10 Pro v1903 (18362.418) (Under parallesl)\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. I have a package with version set to `5.0`\r\n\r\n2. This package references another package\r\n```XML\r\n<PackageReference Include=\"com.luscii.connect.common\" Version=\"*\" />\r\n```\r\n3. The latest version of the referenced package is `11.0.97`\r\n4. My expectation is that `nuget pack` scans all available feeds, finds the latest version and sets it accordingly in `nuspec` of created package.\r\n```XML\r\n<dependency id=\"com.luscii.connect.common\" version=\"[11.0.97,)\" exclude=\"Build,Analyzers\" />\r\n```\r\n5. What I see in created package is:\r\n```XML\r\n<dependency id=\"com.luscii.connect.common\" version=\"5.0.0\" exclude=\"Build,Analyzers\" />\r\n```\r\nBut there is no version `5.0.0` at all. And why is it fixed?\r\n\r\nThis is similar to the issue #7232"},{"Id":"10701492467","Type":"IssuesEvent","CreatedAt":"2019-10-24T04:16:21","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8732","RelatedDescription":"Closed issue \"Disposing of a plugin can sometimes throw and fail the whole operation.\" (#8732) at NuGet/Home","RelatedBody":"Specifically, follow the stack trace: \r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/c1f6915918b82c096bbd666bd9c18528f1f70630/src/NuGet.Core/NuGet.Protocol/Plugins/Plugin.cs#L148\r\nhttps://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.Protocol/Plugins/Connection.cs#L128\r\nhttps://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.Protocol/Plugins/Sender.cs#L55\r\n\r\nDispose calls close which can sometimes throw an IOException. \r\n\r\nRelated to https://github.com/NuGet/Home/issues/8528."},{"Id":"10700607165","Type":"IssuesEvent","CreatedAt":"2019-10-24T00:42:20","Actor":"TangMonk","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8741","RelatedDescription":"Opened issue \"Nuget should support load dependency for different environment \" (#8741) at NuGet/Home","RelatedBody":"for instance:\r\n\r\n```\r\n<ItemGroup Env=\"Development\">\r\n    <PackageReference Include=\"LigerShark.WebOptimizer.Core\" Version=\"3.0.250\" />\r\n    <PackageReference Include=\"LigerShark.WebOptimizer.Sass\" Version=\"3.0.40-beta\" />\r\n    <PackageReference Include=\"LigerShark.WebOptimizer.TypeScript\" Version=\"2.5.10-beta\" />\r\n</ItemGroup>\r\n\r\n<ItemGroup Env=\"Production\">\r\n <PackageReference Include=\"Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation\" Version=\"3.0.0\" />\r\n</ItemGroup>\r\n```"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10286366828","Type":"IssuesEvent","CreatedAt":"2019-08-26T13:37:09","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/38","RelatedDescription":"Opened issue \"New and improved NuGet Search is live!\" (#38) at NuGet/Announcements","RelatedBody":"Announcing the new and improved search on NuGet.org leveraging Azure Search.\r\n\r\n[Blogpost](https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/) | [Feedback Issue](https://github.com/NuGet/NuGetGallery/issues/4124)"},{"Id":"10168692521","Type":"IssuesEvent","CreatedAt":"2019-08-07T21:31:54","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/37","RelatedDescription":"Opened issue \"Using OData to query NuGet.org repository is being deprecated\" (#37) at NuGet/Announcements","RelatedBody":"We introduced `V3 APIs` in early 2016. We have made continuous investments to make it more reliable, performant and secure. Going forward, we plan to bring all new features and improvements only to the newer `V3 APIs`. As part of this strategy, we are deprecating the usage of `OData` queries. Subsequently, we plan to **disable the `OData` queries starting Feb 5th, 2020**.\r\n\r\n**Call to Action: Transition to V3 APIs**\r\n\r\nHere are some resources to help you with the migration:\r\n* [NuGet Server `V3 APIs` reference](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n* [Guide to transition from NuGet `V2 API` to `V3 API`](https://docs.microsoft.com/en-us/nuget/guides/api/query-for-all-published-packages). \r\n* [Blog post: Switching from WCF OData to Web API](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n\r\nIf you need further help in moving your use case to `V3 APIs`, do reach out to us at [support@nuget.org](mailto:support@nuget.org).\r\n"},{"Id":"10115721045","Type":"IssuesEvent","CreatedAt":"2019-07-30T22:44:31","Actor":"shoter","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/36","RelatedDescription":"Closed issue \"Replace reference to codeplex issue numer 3072\" (#36) at NuGet/Announcements","RelatedBody":"This is copy of codeplex issue number 3072 as it is referenced inside code. I should do a PR shortly to address this one.\r\n\r\nThe place where it is referenced is RuntimeHelper.cs:150\r\n\r\n\r\n---\r\n\r\nWe're hitting an issue with Microsoft.Bcl package where NuGet is adding a binding redirect for a binary that is considered part of the framework, this causes the application to crash because the binding redirect refers to assembly version that is not available at runtime.\r\n\r\n@Repro:\r\n\r\n1. Create a new Console Application targeting 4.5\r\n2. Create a new Portable Library targeting .NET Framework 4.5, Silverlight 4, Windows Phone 7.5 and .NET for Windows Store apps\r\n3. Add a reference to the portable library from the Console Application\r\n4. Install the Microsoft.Bcl package (1.0.16-rc) to both projects\r\n\r\n@Expected: No binding redirect for System.Runtime in the .NET Framework 4.5 project because a ___later version___ is part of the target framework (see C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\RedistList\\FrameworkList.xml)\r\n@Actual: Binding redirect\r\n\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-1.5.11.0\" newVersion=\"1.5.11.0\" />\r\n</dependentAssembly>\r\n\r\n\r\nYou can use the IVsFrameworkMultiTargeting to determine if a given assembly version is available as part of a given target framework.\r\nMake sure when you fix this, that you only skip the binding redirect if ___a later or same version___ is available in the framework.  \r\n2013-02-22\r\n\r\n---\r\n\r\nWe'll do this in 2.4 release.  \r\n2013-02-26\r\n\r\n---\r\n\r\nIs IVsFrameworkMultiTargeting.IsReferenceableInTargetFx the method I need to call? What should I pass to pwszAssemblySpec?  \r\n2013-06-08\r\n\r\n---\r\n\r\nIt's the full name of the assembly (mscorlib, Version=[version], PublicKeyToken=[token], Culture=[culture]). It can either contain all the information (key, version, etc), or just the simple name (\"mscorlib\")  \r\n2013-06-10\r\n\r\n---\r\n\r\nSo look like I can only check for the same version of the target framework. Can't check for a later version using this method, because I don't know what future versions will be.  \r\n2013-06-12\r\n\r\n---\r\n\r\nThat's fine. That's exactly the behavior we want. For example, System.Runtime didn't ship in 4.0, but did in 4.5. We still want a binding redirect generated for it in 4.0, but not for 4.5.  \r\n2013-06-13\r\n\r\n---\r\n\r\nI followed the exact same steps above, but there's no binding redirect added to the Console Application. It's only added to the __Portable Library project__. Is that the bug?  \r\n2013-06-13\r\n\r\n---\r\n\r\nThe binding redirects added to the Portable Library project seems to come from the Microsoft.Bcl package itself (from the content folder's app.config.transform file). this looks like a non-bug.\r\n2013-06-13\r\n\r\n  \r\nI'm chasing up the repro with Eric St. John. He walked through the code and figured out where it was broken.\r\n\r\nIt's the not the app.config.tranform, notice how the net45 content is empty, and hence no transforms. We also marked our transforms with a special marker that indicates that we added the redirects . The binding redirects we were seeing were not coming from us.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAre you seeing the binding redirects added to the Console Application or the Portable Library? I don't see binding redirect added to Console Application, only the Portable Library.  \r\n2013-06-13\r\n\r\n---\r\n\r\nYes I'm talking about the ConsoleApplication. The binding redirects in the portable library project are expected, and do not affect runtime behavior (as the app.config is ignored and not copied to the app project), and hence can't cause an application to crash.\r\n\r\nI've found another repro (NuGet has really weird logic around when it decides to add binding redirects so it was hard to find a repro).\r\n\r\nThe repro is instead of using the Microsoft.Bcl package, install the Microsoft.Net.Http, 2.2.3-beta package. Make sure you are targeting __4.5__ from the ConsoleApplication and the exact platforms that I called out above for portable.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAlso, the ConsoleApplication must be referencing the portable project before installing the package.  \r\n2013-06-13\r\n\r\n---\r\n\r\nOK now I can repro  \r\n2013-06-14\r\n\r\n---\r\n\r\nOK, I've got a fix now. It no longer adds the binding redirect for System.Runtime.dll, but still adds one for System.Net.Http.Primitives. I guess it's expected, right? Please confirm.\r\n\r\n```\r\n<assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Net.Http.Primitives\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-4.2.3.0\" newVersion=\"4.2.3.0\" />\r\n</dependentAssembly>\r\n</assemblyBinding>\r\n```  \r\n2013-06-14\r\n\r\n---\r\n\r\n\r\nYes that's correct. System.Net.Http.Primitives does not exist in the framework.  \r\n2013-06-14\r\n\r\n---\r\n\r\nFixed in changeset b8d515f6341193b970d2a9d837e580e762d2eb71  \r\n2013-06-19\r\n\r\n---\r\n\r\ni get the same issue with my test project still, runtime being added... if i comment this out the tests run fine... if not i get exceptions thrown from json.net  \r\n2013-08-09\r\n\r\n---\r\n\r\n(or i can change the version up to 4.0.0.0 or something and it works)  \r\n2013-08-09"},{"Id":"10115715827","Type":"IssuesEvent","CreatedAt":"2019-07-30T22:43:23","Actor":"shoter","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/36","RelatedDescription":"Opened issue \"Replace reference to codeplex issue numer 3072\" (#36) at NuGet/Announcements","RelatedBody":"This is copy of codeplex issue number 3072 as it is referenced inside code. I should do a PR shortly to address this one.\r\n\r\nThe place where it is referenced is RuntimeHelper.cs:150\r\n\r\n\r\n---\r\n\r\nWe're hitting an issue with Microsoft.Bcl package where NuGet is adding a binding redirect for a binary that is considered part of the framework, this causes the application to crash because the binding redirect refers to assembly version that is not available at runtime.\r\n\r\n@Repro:\r\n\r\n1. Create a new Console Application targeting 4.5\r\n2. Create a new Portable Library targeting .NET Framework 4.5, Silverlight 4, Windows Phone 7.5 and .NET for Windows Store apps\r\n3. Add a reference to the portable library from the Console Application\r\n4. Install the Microsoft.Bcl package (1.0.16-rc) to both projects\r\n\r\n@Expected: No binding redirect for System.Runtime in the .NET Framework 4.5 project because a ___later version___ is part of the target framework (see C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\RedistList\\FrameworkList.xml)\r\n@Actual: Binding redirect\r\n\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-1.5.11.0\" newVersion=\"1.5.11.0\" />\r\n</dependentAssembly>\r\n\r\n\r\nYou can use the IVsFrameworkMultiTargeting to determine if a given assembly version is available as part of a given target framework.\r\nMake sure when you fix this, that you only skip the binding redirect if ___a later or same version___ is available in the framework.  \r\n2013-02-22\r\n\r\n---\r\n\r\nWe'll do this in 2.4 release.  \r\n2013-02-26\r\n\r\n---\r\n\r\nIs IVsFrameworkMultiTargeting.IsReferenceableInTargetFx the method I need to call? What should I pass to pwszAssemblySpec?  \r\n2013-06-08\r\n\r\n---\r\n\r\nIt's the full name of the assembly (mscorlib, Version=[version], PublicKeyToken=[token], Culture=[culture]). It can either contain all the information (key, version, etc), or just the simple name (\"mscorlib\")  \r\n2013-06-10\r\n\r\n---\r\n\r\nSo look like I can only check for the same version of the target framework. Can't check for a later version using this method, because I don't know what future versions will be.  \r\n2013-06-12\r\n\r\n---\r\n\r\nThat's fine. That's exactly the behavior we want. For example, System.Runtime didn't ship in 4.0, but did in 4.5. We still want a binding redirect generated for it in 4.0, but not for 4.5.  \r\n2013-06-13\r\n\r\n---\r\n\r\nI followed the exact same steps above, but there's no binding redirect added to the Console Application. It's only added to the __Portable Library project__. Is that the bug?  \r\n2013-06-13\r\n\r\n---\r\n\r\nThe binding redirects added to the Portable Library project seems to come from the Microsoft.Bcl package itself (from the content folder's app.config.transform file). this looks like a non-bug.\r\n2013-06-13\r\n\r\n  \r\nI'm chasing up the repro with Eric St. John. He walked through the code and figured out where it was broken.\r\n\r\nIt's the not the app.config.tranform, notice how the net45 content is empty, and hence no transforms. We also marked our transforms with a special marker that indicates that we added the redirects . The binding redirects we were seeing were not coming from us.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAre you seeing the binding redirects added to the Console Application or the Portable Library? I don't see binding redirect added to Console Application, only the Portable Library.  \r\n2013-06-13\r\n\r\n---\r\n\r\nYes I'm talking about the ConsoleApplication. The binding redirects in the portable library project are expected, and do not affect runtime behavior (as the app.config is ignored and not copied to the app project), and hence can't cause an application to crash.\r\n\r\nI've found another repro (NuGet has really weird logic around when it decides to add binding redirects so it was hard to find a repro).\r\n\r\nThe repro is instead of using the Microsoft.Bcl package, install the Microsoft.Net.Http, 2.2.3-beta package. Make sure you are targeting __4.5__ from the ConsoleApplication and the exact platforms that I called out above for portable.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAlso, the ConsoleApplication must be referencing the portable project before installing the package.  \r\n2013-06-13\r\n\r\n---\r\n\r\nOK now I can repro  \r\n2013-06-14\r\n\r\n---\r\n\r\nOK, I've got a fix now. It no longer adds the binding redirect for System.Runtime.dll, but still adds one for System.Net.Http.Primitives. I guess it's expected, right? Please confirm.\r\n\r\n```\r\n<assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Net.Http.Primitives\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-4.2.3.0\" newVersion=\"4.2.3.0\" />\r\n</dependentAssembly>\r\n</assemblyBinding>\r\n```  \r\n2013-06-14\r\n\r\n---\r\n\r\n\r\nYes that's correct. System.Net.Http.Primitives does not exist in the framework.  \r\n2013-06-14\r\n\r\n---\r\n\r\nFixed in changeset b8d515f6341193b970d2a9d837e580e762d2eb71  \r\n2013-06-19\r\n\r\n---\r\n\r\ni get the same issue with my test project still, runtime being added... if i comment this out the tests run fine... if not i get exceptions thrown from json.net  \r\n2013-08-09\r\n\r\n---\r\n\r\n(or i can change the version up to 4.0.0.0 or something and it works)  \r\n2013-08-09"},{"Id":"10105705706","Type":"IssuesEvent","CreatedAt":"2019-07-29T18:41:10","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/35","RelatedDescription":"Opened issue \"Machine readable output for dotnet list package\" (#35) at NuGet/Announcements","RelatedBody":"The spec for 'Machine readable output for dotnet list package' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Machine readable output for dotnet list package](https://github.com/NuGet/Home/wiki/%5BSpec%5D-Machine-readable-output-for-dotnet-list-package) | https://github.com/NuGet/Home/issues/7752 |"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1164220617710686209","CreatedAt":"2019-08-21T17:00:00+00:00","UserScreenname":"nuget","Text":"âš  Restoring packages from https://t.co/KVB7werYQh might fail in some regions. We are investigating the issue. Folloâ€¦ https://t.co/t69YZ9eFo1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":2,"RawContent":null},{"Id":"1162433926578626560","CreatedAt":"2019-08-16T18:40:19+00:00","UserScreenname":"nuget","Text":"Did you check out the new docs landing page? We tried to make it better and more useful. What do you think?â€¦ https://t.co/96nBP0rV5l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":3,"RawContent":null},{"Id":"1159229316351197184","CreatedAt":"2019-08-07T22:26:21+00:00","UserScreenname":"nuget","Text":"Using OData to query https://t.co/F9kiKfdOWi repository is being deprecated\n#Announcement \n\nhttps://t.co/dtelctlNOe","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2019-10-25T05:30:50.7006245Z","RunDurationInMilliseconds":2734}