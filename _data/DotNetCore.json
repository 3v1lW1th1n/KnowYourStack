{"Data":{"Blog":{"FeedItems":[{"Title":"The F# development home on GitHub is now dotnet/fsharp","PublishedOn":"2019-05-20T18:16:50+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"TL;DR We&#8217;ve moved the F# GitHub repository from microsoft/visualfsharp to dotnet/fsharp, as specified in the corresponding RFC.\nF# has a somewhat strange history in its name and brand. If we...","Href":"https://devblogs.microsoft.com/dotnet/the-f-development-home-on-github-is-now-dotnet-fsharp/","RawContent":null},{"Title":"Create Interactive .NET Documentation with Try .NET","PublishedOn":"2019-05-16T20:01:47+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"When it comes to developers&#8217; documentation, it is essential that we capture their interest and lead them down the path of success as soon as possible. Across multiple languages, developer...","Href":"https://devblogs.microsoft.com/dotnet/creating-interactive-net-documentation/","RawContent":null},{"Title":"Performance Improvements in .NET Core 3.0","PublishedOn":"2019-05-15T19:17:00+00:00","CommentsCount":41,"FacebookCount":0,"Summary":"Back when we were getting ready to ship .NET Core 2.0, I wrote a blog post exploring some of the many performance improvements that had gone into it. I enjoyed putting it together so much and received...","Href":"https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-core-3-0/","RawContent":null},{"Title":"Default implementations in interfaces","PublishedOn":"2019-05-14T23:47:18+00:00","CommentsCount":41,"FacebookCount":0,"Summary":"Default implementations in interfaces\nWith last week&#8217;s posts Announcing .NET Core 3.0 Preview 5 and Visual Studio 2019 version 16.1 Preview 3, the last major feature of C# 8.0 is now available...","Href":"https://devblogs.microsoft.com/dotnet/default-implementations-in-interfaces/","RawContent":null},{"Title":".NET Core May 2019 Updates – 1.0.16, 1.1.14, 2.1.11 and 2.2.5","PublishedOn":"2019-05-14T19:06:45+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core May 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on updated packages.\nNOTE: If you are a Visual...","Href":"https://devblogs.microsoft.com/dotnet/net-core-may-2019/","RawContent":null},{"Title":".NET Framework May 2019 Security and Quality Rollup","PublishedOn":"2019-05-14T18:29:22+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the May 2019 Cumulative Update, Security and Quality Rollup, and Security Only Update.\nSecurity\nCVE-2019-0820 – Denial of Service Vulnerability\nA denial of service...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/","RawContent":null},{"Title":"Introducing the new Microsoft.Data.SqlClient","PublishedOn":"2019-05-08T22:05:21+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"This post was written by Vicky Harp, Program Manager on SqlClient and SQL Server Tools.\nThose of you who have been following .NET development closely have very likely seen Scott Hunter&#8217;s latest...","Href":"https://devblogs.microsoft.com/dotnet/introducing-the-new-microsoftdatasqlclient/","RawContent":null},{"Title":"Announcing Entity Framework 6.3 Preview with .NET Core Support","PublishedOn":"2019-05-08T22:00:28+00:00","CommentsCount":30,"FacebookCount":0,"Summary":"The first preview of the EF 6.3 runtime is now available in NuGet.\nNote that the package is versioned as 6.3.0-preview5. We plan to continue releasing previews of EF 6.3 every month in alignment with...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-6-3-preview-with-net-core-support/","RawContent":null},{"Title":"Introducing diagnostics improvements in .NET Core 3.0","PublishedOn":"2019-05-08T16:00:57+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"In .NET Core 3.0, we are introducing a suite of tools that utilize new features in the .NET runtime that make it easier to diagnose and solve performance problems.\nThese runtime features help you...","Href":"https://devblogs.microsoft.com/dotnet/introducing-diagnostics-improvements-in-net-core-3-0/","RawContent":null},{"Title":".NET Core is the Future of .NET ","PublishedOn":"2019-05-06T22:22:54+00:00","CommentsCount":104,"FacebookCount":0,"Summary":"We introduced .NET Core 1.0 on November 2014. The goal with .NET Core was to take the learning from our experience building, shipping and servicing .NET Framework over the previous 12 years and build...","Href":"https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9596433106","Type":"PullRequestEvent","CreatedAt":"2019-05-09T18:35:22","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Merged pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."},{"Id":"9583176004","Type":"PullRequestEvent","CreatedAt":"2019-05-08T04:08:41","Actor":"mitchelsellers","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Opened pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."},{"Id":"9560620210","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:10:38","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Merged pull request \"Add AngleSharp\" (#143) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9560610143","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:08:41","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Merged pull request \"add links to ML.NET docs\" (#141) at dotnet/foundation","RelatedBody":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects"},{"Id":"9560608015","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:08:15","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Merged pull request \"Add DotVVM\" (#144) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9557840000","Type":"PullRequestEvent","CreatedAt":"2019-05-03T12:47:26","Actor":"tomasherceg","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Opened pull request \"Add DotVVM\" (#144) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9523802619","Type":"PullRequestEvent","CreatedAt":"2019-04-27T20:23:58","Actor":"FlorianRappl","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Opened pull request \"Add AngleSharp\" (#143) at dotnet/foundation","RelatedBody":"cc @jongalloway "}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9625371249","Type":"IssuesEvent","CreatedAt":"2019-05-14T19:27:47","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/115","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#115) at dotnet/announcements","RelatedBody":"The following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9625048568","Type":"IssuesEvent","CreatedAt":"2019-05-14T18:38:24","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#114) at dotnet/announcements","RelatedBody":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9624436763","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:06:25","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624425934","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624413462","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9473320861","Type":"IssuesEvent","CreatedAt":"2019-04-19T01:16:11","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Opened issue \"# New images for .NET Framework 4.8\" (#110) at dotnet/announcements","RelatedBody":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK."}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"9681090811","Type":"PullRequestEvent","CreatedAt":"2019-05-23T04:59:36","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24740","RelatedDescription":"Opened pull request \"Reenable all CoreFX tests\" (#24740) at dotnet/coreclr","RelatedBody":""},{"Id":"9681047247","Type":"PullRequestEvent","CreatedAt":"2019-05-23T04:45:44","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24717","RelatedDescription":"Merged pull request \"[master] Update dependencies from dnceng/internal/dotnet-optimization\" (#24717) at dotnet/coreclr","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n- **Build**: 20190521.3\r\n- **Date Produced**: 5/21/2019 4:00 PM\r\n- **Commit**: 680817355bb2e1326de1124c846263f8d9fb9294\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **optimization.IBC.CoreCLR** -> 99.99.99-master-20190521.3\r\n  - **optimization.PGO.CoreCLR** -> 99.99.99-master-20190521.3\r\n\r\n"},{"Id":"9680994556","Type":"PullRequestEvent","CreatedAt":"2019-05-23T04:28:50","Actor":"mikem8361","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24734","RelatedDescription":"Merged pull request \"Add warning banner and sos threads -special fix\" (#24734) at dotnet/coreclr","RelatedBody":"Issue https://github.com/dotnet/diagnostics/issues/38"},{"Id":"9680865650","Type":"PullRequestEvent","CreatedAt":"2019-05-23T03:47:49","Actor":"davmason","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24542","RelatedDescription":"Merged pull request \"Add EnumerateRefs API and remove GetObjectReferences\" (#24542) at dotnet/coreclr","RelatedBody":"The GetObjectReferences API is unnecessarily expensive because it has to buffer the number of references. For arrays and/or objects with large reference count this API is quite unusable.\r\n\r\nInstead this Enumerate Object References API allows for a pay-for-play experience."},{"Id":"9680597871","Type":"PullRequestEvent","CreatedAt":"2019-05-23T02:32:01","Actor":"hoyosjs","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24739","RelatedDescription":"Opened pull request \"Consolidate native versioning\" (#24739) at dotnet/coreclr","RelatedBody":"@elinor-fung I've cherry picked most of your change and tried to unify the versioning. Does this look right?\r\n"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"9680825153","Type":"PullRequestEvent","CreatedAt":"2019-05-23T03:35:46","Actor":"scottaddie","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11411","RelatedDescription":"Opened pull request \"Remove ef command from help output\" (#11411) at dotnet/cli","RelatedBody":"The `dotnet ef` command was removed from the .NET Core SDK as of 3.0 Preview 4 (per https://docs.microsoft.com/ef/core/what-is-new/ef-core-3.0/breaking-changes#the-ef-core-command-line-tool-dotnet-ef-is-no-longer-part-of-the-net-core-sdk). This PR removes `ef` from the `dotnet --help` output. It also removes 2 related tests.\r\n\r\nRelated to the discussion in https://github.com/aspnet/EntityFrameworkCore/issues/14016."},{"Id":"9680146493","Type":"IssuesEvent","CreatedAt":"2019-05-23T00:26:24","Actor":"dsplaisted","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/11410","RelatedDescription":"Opened issue \"Fail gracefully when building on non-Windows and WindowsDesktop shared framework is referenced\" (#11410) at dotnet/cli","RelatedBody":"For the 3.0 release, we plan to not support building Windows Forms and WPF apps on non-Windows operating systems.  (We may consider supporting it later, see for example https://github.com/dotnet/wpf/issues/688).\r\n\r\nMost WPF apps will use Microsoft.NET.Sdk.WindowsDesktop, and the experience for that on non-Windows is covered here: https://github.com/dotnet/cli/issues/10842\r\n\r\nHowever, some projects may not use the WindowsDesktop SDK, but will still have a WindowsDesktop FrameworkReference (either explicitly or via a PackageReference).  In that case, we should also fail gracefully.  This means:\r\n\r\n- On non-Windows, don't pre-emptively download WindowsDesktop targeting or runtime packs (which we normally do in case we encounter a transitive FrameworkReference)\r\n- When we encounter a WindowsDesktop FrameworkReference on non-Windows, generate an error message stating that the project can only be built on Windows (instead of the generic error message)."},{"Id":"9680116900","Type":"PullRequestEvent","CreatedAt":"2019-05-23T00:18:14","Actor":"KevinRansom","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11409","RelatedDescription":"Opened pull request \"Update nunit test dependencies\" (#11409) at dotnet/cli","RelatedBody":"update nunit template"},{"Id":"9680042170","Type":"PullRequestEvent","CreatedAt":"2019-05-22T23:57:09","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11400","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/templating\" (#11400) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190521.1\r\n- **Date Produced**: 5/22/2019 4:36 AM\r\n- **Commit**: 7e9c6d6aef7962c25a8a0ad1f9be9fc5c3f00ca9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19271.1\r\n\r\n"},{"Id":"9680040698","Type":"PullRequestEvent","CreatedAt":"2019-05-22T23:56:43","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11399","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/sdk\" (#11399) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190521.2\r\n- **Date Produced**: 5/22/2019 7:08 AM\r\n- **Commit**: a67433ffadecd0c6848de330914a7928806d1240\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview6.19271.2\r\n\r\n"},{"Id":"9680035568","Type":"PullRequestEvent","CreatedAt":"2019-05-22T23:55:16","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11277","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#11277) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190501.6\r\n- **Date Produced**: 5/2/2019 7:15 AM\r\n- **Commit**: ea9b2530a1559dd6426730aba52fca1924db2b65\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19251.6\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190502.2\r\n- **Date Produced**: 5/2/2019 7:00 PM\r\n- **Commit**: ed63a7faf2d119829dd971be91bb46b6ebaa1dd2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19252.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190503.8\r\n- **Date Produced**: 5/4/2019 2:00 AM\r\n- **Commit**: 4cacf7aa7b2cd8bdd042e721e6ad73d809dd5678\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19253.8\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190504.1\r\n- **Date Produced**: 5/4/2019 12:58 PM\r\n- **Commit**: 1b8589bbf53b9a5e819460798eff59830f39a3be\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19254.1\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190505.2\r\n- **Date Produced**: 5/5/2019 2:25 PM\r\n- **Commit**: 6a34948f7bdbc3ceb2fb16441b49f7748a462646\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19255.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190506.12\r\n- **Date Produced**: 5/7/2019 5:12 AM\r\n- **Commit**: c31fac9f6899094226cb5cd77c85b8f60ecafa3d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19256.12\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190507.7\r\n- **Date Produced**: 5/8/2019 12:49 AM\r\n- **Commit**: bda52d7619f9420de46f2c39ffc972864bbcab63\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19257.7\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190508.5\r\n- **Date Produced**: 5/8/2019 10:17 PM\r\n- **Commit**: 9005cee9510d23535c09bd9b6be7c426e526c067\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19258.5\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190509.9\r\n- **Date Produced**: 5/10/2019 12:31 AM\r\n- **Commit**: 155080ecb738e189db75f8f2461ebad75d955aa7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19259.9\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190510.2\r\n- **Date Produced**: 5/10/2019 8:01 PM\r\n- **Commit**: 810920cf8a5fc183585304193f8b4e4e189497e9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19260.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190511.1\r\n- **Date Produced**: 5/11/2019 1:13 PM\r\n- **Commit**: 136dfbfa8a6173dadc107bf7393bdeaceecb4d3a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19261.1\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190512.1\r\n- **Date Produced**: 5/12/2019 12:58 PM\r\n- **Commit**: 30682cda0dd7ca1765463749dd91ec3cfec75eb9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19262.1\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190513.3\r\n- **Date Produced**: 5/13/2019 6:32 PM\r\n- **Commit**: e6712584bba6e2f0e35a3704793c459ff97c09af\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19263.3\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190514.13\r\n- **Date Produced**: 5/15/2019 2:37 AM\r\n- **Commit**: 670f6ee1a619a2a7c84cfdfe2a1c84fbe94e1c6b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19264.13\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190516.2\r\n- **Date Produced**: 5/16/2019 8:24 AM\r\n- **Commit**: 37c11672ee11dc2b3365b95a29e0c012f44032be\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19266.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190516.4\r\n- **Date Produced**: 5/16/2019 7:11 PM\r\n- **Commit**: 61cc7d4d347300835925ce5245bfc3ecb6b621d7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19266.4\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190517.7\r\n- **Date Produced**: 5/18/2019 4:34 AM\r\n- **Commit**: 55ce2900743cb609e51e2c6487e87e42eb627880\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19267.7\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190518.2\r\n- **Date Produced**: 5/18/2019 3:22 PM\r\n- **Commit**: 6d0514d3da59137630b9add5b5e619bce2631f02\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19268.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190520.1\r\n- **Date Produced**: 5/20/2019 8:30 AM\r\n- **Commit**: e913fb3b02d4089a91ff91c041c5f6e7c29038b0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19270.1\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190520.2\r\n- **Date Produced**: 5/20/2019 1:26 PM\r\n- **Commit**: 3b0760f8789d5d4bd146b36bd9051696d7a56bfa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19270.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190521.7\r\n- **Date Produced**: 5/22/2019 1:45 AM\r\n- **Commit**: 7a6fb6528b2060cd9e3a3d92535f5b6fdc6b2e82\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19271.7\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190521.7\r\n- **Date Produced**: 5/22/2019 1:45 AM\r\n- **Commit**: 7a6fb6528b2060cd9e3a3d92535f5b6fdc6b2e82\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19271.7\r\n\r\n"},{"Id":"9679952029","Type":"PullRequestEvent","CreatedAt":"2019-05-22T23:31:55","Actor":"KevinRansom","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/11321","RelatedDescription":"Closed pull request \"Update nunit\" (#11321) at dotnet/cli","RelatedBody":"Update the templates for nunit.\r\n"},{"Id":"9679895531","Type":"PullRequestEvent","CreatedAt":"2019-05-22T23:17:04","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/11407","RelatedDescription":"Closed pull request \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#11407) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190521.7\r\n- **Date Produced**: 5/22/2019 1:45 AM\r\n- **Commit**: 7a6fb6528b2060cd9e3a3d92535f5b6fdc6b2e82\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19271.7\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"9678571748","Type":"PullRequestEvent","CreatedAt":"2019-05-22T19:20:47","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1192","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1192) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190514.13\r\n- **Date Produced**: 5/15/2019 2:37 AM\r\n- **Commit**: 670f6ee1a619a2a7c84cfdfe2a1c84fbe94e1c6b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19264.13\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190516.2\r\n- **Date Produced**: 5/16/2019 8:24 AM\r\n- **Commit**: 37c11672ee11dc2b3365b95a29e0c012f44032be\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19266.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19266.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19266.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19266.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19266.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190516.4\r\n- **Date Produced**: 5/16/2019 7:11 PM\r\n- **Commit**: 61cc7d4d347300835925ce5245bfc3ecb6b621d7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19266.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19266.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19266.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19266.4\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19266.4\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190517.7\r\n- **Date Produced**: 5/18/2019 4:34 AM\r\n- **Commit**: 55ce2900743cb609e51e2c6487e87e42eb627880\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19267.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19267.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19267.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19267.7\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19267.7\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190518.2\r\n- **Date Produced**: 5/18/2019 3:22 PM\r\n- **Commit**: 6d0514d3da59137630b9add5b5e619bce2631f02\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19268.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19268.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19268.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19268.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19268.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190520.1\r\n- **Date Produced**: 5/20/2019 8:30 AM\r\n- **Commit**: e913fb3b02d4089a91ff91c041c5f6e7c29038b0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19270.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19270.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19270.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19270.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19270.1\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190520.2\r\n- **Date Produced**: 5/20/2019 1:26 PM\r\n- **Commit**: 3b0760f8789d5d4bd146b36bd9051696d7a56bfa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19270.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19270.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19270.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19270.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19270.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190521.7\r\n- **Date Produced**: 5/22/2019 1:45 AM\r\n- **Commit**: 7a6fb6528b2060cd9e3a3d92535f5b6fdc6b2e82\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19271.7\r\n\r\n"},{"Id":"9675847034","Type":"PullRequestEvent","CreatedAt":"2019-05-22T13:15:56","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1204","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1204) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190521.9\r\n- **Date Produced**: 5/22/2019 6:10 AM\r\n- **Commit**: b9b357f9a5a6ccf6a70c2e13b5a7d84a3ed1a684\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19271.9\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19271.9\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19271.9\r\n\r\n"},{"Id":"9675726818","Type":"PullRequestEvent","CreatedAt":"2019-05-22T13:00:46","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1204","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1204) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190521.9\r\n- **Date Produced**: 5/22/2019 6:10 AM\r\n- **Commit**: b9b357f9a5a6ccf6a70c2e13b5a7d84a3ed1a684\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19271.9\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19271.9\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19271.9\r\n\r\n"},{"Id":"9671231423","Type":"PullRequestEvent","CreatedAt":"2019-05-21T22:04:59","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1198","RelatedDescription":"Merged pull request \"Add missing members to MemoryMarshal\" (#1198) at dotnet/standard","RelatedBody":"This fixes #1193."},{"Id":"9671231409","Type":"IssuesEvent","CreatedAt":"2019-05-21T22:04:59","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1193","RelatedDescription":"Closed issue \"Fix APICompat issues with netstandard2.0 System.Memory\" (#1193) at dotnet/standard","RelatedBody":"After adding a shim for `System.Memory` to netstandard2.1, we uncovered an incompatibility with netstandard2.0:\r\n\r\nhttps://github.com/dotnet/standard/blob/d3413ee9ec761bdf067114a498b9da3ebf0149df/src/apicompat/baselines/ApiCompatBaseline.netstandard2.0.txt#L72-L74\r\n\r\nIndeed, these members exist in CoreFx's ref, but are missing in Standard:  https://github.com/dotnet/corefx/blob/1f9b84a0804e868c7e0f37a3c10fbaf7c735ae14/src/System.Memory/ref/System.Memory.cs#L471\r\n\r\n@terrajobst we should add these missing members to the surface area for `netstandard2.1`"},{"Id":"9670252671","Type":"PullRequestEvent","CreatedAt":"2019-05-21T19:26:08","Actor":"ViktorHofer","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1203","RelatedDescription":"Merged pull request \"Fix public key of ns2.0 shims\" (#1203) at dotnet/standard","RelatedBody":"System.Buffers, System.Memory, and System.Threading.Tasks.Extensions all use\r\nthe open key.  Ensure we use the same key here."}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"9681057445","Type":"IssuesEvent","CreatedAt":"2019-05-23T04:49:01","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/37886","RelatedDescription":"Opened issue \"RSAXml.FromNonsenseXml test failing in CoreCLR CI\" (#37886) at dotnet/corefx","RelatedBody":"```\r\nAssert.Throws() Failure\r\nExpected: typeof(System.Security.Cryptography.CryptographicException)\r\nActual:   (No exception was thrown)\r\nStack Trace :\r\n   at System.Security.Cryptography.Rsa.Tests.RSAXml.FromNonsenseXml() in /_/src/Common/tests/System/Security/Cryptography/AlgorithmImplementations/RSA/RSAXml.cs:line 1349\r\n```\r\n\r\nhttps://github.com/dotnet/coreclr/pull/24604#issuecomment-494653061"},{"Id":"9680993207","Type":"PullRequestEvent","CreatedAt":"2019-05-23T04:28:23","Actor":"ViktorHofer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/37883","RelatedDescription":"Merged pull request \"Update to new compiler toolset by using arcade's property\" (#37883) at dotnet/corefx","RelatedBody":"I also updated the `NullableContextOptions` to be `Nullable`. I didn't get any failures on Windows locally.\r\n\r\nThis is dependent of an arcade update once a new SDK is published into the channel with this change: https://github.com/dotnet/arcade/pull/2856\r\n\r\ncc: @dotnet/nullablefc @ViktorHofer "},{"Id":"9680545434","Type":"PullRequestEvent","CreatedAt":"2019-05-23T02:17:58","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/37879","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr,corert\" (#37879) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corert\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar @stephentoub"},{"Id":"9680410219","Type":"PullRequestEvent","CreatedAt":"2019-05-23T01:41:46","Actor":"ViktorHofer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/37858","RelatedDescription":"Merged pull request \"Use RepoTools instead of global tools\" (#37858) at dotnet/corefx","RelatedBody":"Depends on https://github.com/dotnet/arcade/pull/2848\r\n\r\nI added the restoring repo tools (out-of-proc) logic to arcade with an extension point to configure the path of the repo tools manifest. Also I removed the restoring optional tools logic as we don't have TestILC anymore in corefx. If we want that step back we can just look into the git history. There's currently no reason to have it.\r\n\r\nRemoving the global tools logic from sendtohelix.proj as it won't work with repo tools this way. When we actually need this we will probably go a different way (i.e. coverlet integration with dotnet test or restoring repo tools on helix)."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"9681098745","Type":"IssuesEvent","CreatedAt":"2019-05-23T05:01:53","Actor":"prjm","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/35887","RelatedDescription":"Closed issue \"Inline temporary variable refactoring produces invalid code for while loop\" (#35887) at dotnet/roslyn","RelatedBody":"**Version Used**:  Visual Studio Community Edition 2019, 16.1.0\r\n**Steps to Reproduce**:\r\n\r\n1.  Create a sample application\r\n2. Add this source code (with a matching namespace):\r\n\r\n```c#\r\nnamespace ConsoleApp4\r\n{\r\n    internal class Program\r\n    {\r\n        private static string CalculateSomething()\r\n            => \"a\";\r\n\r\n        private static void Main(string[] args)\r\n        {\r\n            var d = default(string);\r\n            do\r\n            {\r\n                d = CalculateSomething();\r\n            } while (d != default);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n3. move the cursor to `var d = ...`\r\n4. open the quick actions menu / lightbulb-symbol\r\n5. select _Inline temporary variable_\r\n\r\n**Expected Behavior**:\r\n\r\n6. refactoring is not provided because `d` can't be inlined \r\n\r\n**Actual Behavior**:\r\n\r\n6. refactoring is provided, marked with `Conflicts detected`, produces the following code:\r\n\r\n```c#\r\n            var d = default(string);\r\n            do\r\n            {\r\n                d = CalculateSomething();\r\n            } while (default(string) != default);\r\n```"},{"Id":"9680925159","Type":"PullRequestEvent","CreatedAt":"2019-05-23T04:06:02","Actor":"mavasani","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/31812","RelatedDescription":null,"RelatedBody":"\r\n\r\n"},{"Id":"9680924952","Type":"PullRequestEvent","CreatedAt":"2019-05-23T04:05:58","Actor":"mavasani","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/31812","RelatedDescription":"Closed pull request \"Add feature to convert switch statement to switch expression\" (#31812) at dotnet/roslyn","RelatedBody":"\r\n\r\n"},{"Id":"9680537475","Type":"PullRequestEvent","CreatedAt":"2019-05-23T02:15:53","Actor":"ivanbasov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/35837","RelatedDescription":"Merged pull request \"Set non-blocking mode per textView\" (#35837) at dotnet/roslyn","RelatedBody":"Since 16.1, the Editor support blocking/non-blocking mode per textView. This fixes a situation when users turned the _non-blocking_ option ON for TypeScript/F# and could never turned it OFF.\r\n\r\nThere still can happen mixed scenarios with TypeScript and C# in the same file. However, the right fix for them would be to send the value to the Editor not via the option but as a result."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"9680349815","Type":"PullRequestEvent","CreatedAt":"2019-05-23T01:25:13","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7437","RelatedDescription":"Merged pull request \"Initial script changes to enable CPAOT on Linux\" (#7437) at dotnet/corert","RelatedBody":"This is a small set of script changes I made to enable\r\nCPAOT build on Linux. I have basically added the new\r\noption to runtest.sh and fixed a few trivial issues\r\nI hit in my local testing. I haven't yet figured out\r\nhow to cleanly pull down the CoreClrRuntime folder,\r\nfor now I'm copying it over manually from a live CoreCLR\r\nbuild on my DTL VM.\r\n\r\nWith these changes (and after manually copying the Core_Root\r\nfolder from CoreCLR to bin/obj/Linux.x64.Debug/CoreClrRuntme)\r\nI'm able to build the ReadyToRunUnit test. Sadly it doesn't\r\nrun yet, corerun claims that \"coreclr_initialize failed:\r\n0x80070057\"; I have however found out that I'm receiving\r\nexactly the same error when trying to run the same test\r\ncompiled with Crossgen so I guess it's rather a problem\r\nwith my local enlistment and / or build. I'm looking into\r\nthis right now.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"9679541180","Type":"PullRequestEvent","CreatedAt":"2019-05-22T21:56:28","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7442","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7442) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"9678743876","Type":"PullRequestEvent","CreatedAt":"2019-05-22T19:48:19","Actor":"tannergooding","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7441","RelatedDescription":"Opened pull request \"Updating MicrosoftNetCompilersToolsetVersion to 3.2.0-beta2-19272-03\" (#7441) at dotnet/corert","RelatedBody":"CC. @jaredpar, @agocke, @dotnet/nullablefc\r\n\r\nCoreRT side for https://github.com/dotnet/arcade/pull/2856 and https://github.com/dotnet/buildtools/pull/2256"},{"Id":"9677949155","Type":"PullRequestEvent","CreatedAt":"2019-05-22T17:41:09","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corert/pull/7437","RelatedDescription":null,"RelatedBody":"This is a small set of script changes I made to enable\r\nCPAOT build on Linux. I have basically added the new\r\noption to runtest.sh and fixed a few trivial issues\r\nI hit in my local testing. I haven't yet figured out\r\nhow to cleanly pull down the CoreClrRuntime folder,\r\nfor now I'm copying it over manually from a live CoreCLR\r\nbuild on my DTL VM.\r\n\r\nWith these changes (and after manually copying the Core_Root\r\nfolder from CoreCLR to bin/obj/Linux.x64.Debug/CoreClrRuntme)\r\nI'm able to build the ReadyToRunUnit test. Sadly it doesn't\r\nrun yet, corerun claims that \"coreclr_initialize failed:\r\n0x80070057\"; I have however found out that I'm receiving\r\nexactly the same error when trying to run the same test\r\ncompiled with Crossgen so I guess it's rather a problem\r\nwith my local enlistment and / or build. I'm looking into\r\nthis right now.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"9677946957","Type":"PullRequestEvent","CreatedAt":"2019-05-22T17:40:47","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/7437","RelatedDescription":"Closed pull request \"Initial script changes to enable CPAOT on Linux\" (#7437) at dotnet/corert","RelatedBody":"This is a small set of script changes I made to enable\r\nCPAOT build on Linux. I have basically added the new\r\noption to runtest.sh and fixed a few trivial issues\r\nI hit in my local testing. I haven't yet figured out\r\nhow to cleanly pull down the CoreClrRuntime folder,\r\nfor now I'm copying it over manually from a live CoreCLR\r\nbuild on my DTL VM.\r\n\r\nWith these changes (and after manually copying the Core_Root\r\nfolder from CoreCLR to bin/obj/Linux.x64.Debug/CoreClrRuntme)\r\nI'm able to build the ReadyToRunUnit test. Sadly it doesn't\r\nrun yet, corerun claims that \"coreclr_initialize failed:\r\n0x80070057\"; I have however found out that I'm receiving\r\nexactly the same error when trying to run the same test\r\ncompiled with Crossgen so I guess it's rather a problem\r\nwith my local enlistment and / or build. I'm looking into\r\nthis right now.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"9677928738","Type":"PullRequestEvent","CreatedAt":"2019-05-22T17:37:50","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corert/pull/7437","RelatedDescription":null,"RelatedBody":"This is a small set of script changes I made to enable\r\nCPAOT build on Linux. I have basically added the new\r\noption to runtest.sh and fixed a few trivial issues\r\nI hit in my local testing. I haven't yet figured out\r\nhow to cleanly pull down the CoreClrRuntime folder,\r\nfor now I'm copying it over manually from a live CoreCLR\r\nbuild on my DTL VM.\r\n\r\nWith these changes (and after manually copying the Core_Root\r\nfolder from CoreCLR to bin/obj/Linux.x64.Debug/CoreClrRuntme)\r\nI'm able to build the ReadyToRunUnit test. Sadly it doesn't\r\nrun yet, corerun claims that \"coreclr_initialize failed:\r\n0x80070057\"; I have however found out that I'm receiving\r\nexactly the same error when trying to run the same test\r\ncompiled with Crossgen so I guess it's rather a problem\r\nwith my local enlistment and / or build. I'm looking into\r\nthis right now.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"9677928514","Type":"PullRequestEvent","CreatedAt":"2019-05-22T17:37:48","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/7437","RelatedDescription":"Closed pull request \"Initial script changes to enable CPAOT on Linux\" (#7437) at dotnet/corert","RelatedBody":"This is a small set of script changes I made to enable\r\nCPAOT build on Linux. I have basically added the new\r\noption to runtest.sh and fixed a few trivial issues\r\nI hit in my local testing. I haven't yet figured out\r\nhow to cleanly pull down the CoreClrRuntime folder,\r\nfor now I'm copying it over manually from a live CoreCLR\r\nbuild on my DTL VM.\r\n\r\nWith these changes (and after manually copying the Core_Root\r\nfolder from CoreCLR to bin/obj/Linux.x64.Debug/CoreClrRuntme)\r\nI'm able to build the ReadyToRunUnit test. Sadly it doesn't\r\nrun yet, corerun claims that \"coreclr_initialize failed:\r\n0x80070057\"; I have however found out that I'm receiving\r\nexactly the same error when trying to run the same test\r\ncompiled with Crossgen so I guess it's rather a problem\r\nwith my local enlistment and / or build. I'm looking into\r\nthis right now.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"9677061502","Type":"PullRequestEvent","CreatedAt":"2019-05-22T15:34:13","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7440","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7440) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @mikernet"},{"Id":"9672623660","Type":"PullRequestEvent","CreatedAt":"2019-05-22T04:26:17","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7440","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7440) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9672620170","Type":"PullRequestEvent","CreatedAt":"2019-05-22T04:25:11","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7439","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7439) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh @stephentoub"},{"Id":"9671368662","Type":"PullRequestEvent","CreatedAt":"2019-05-21T22:34:37","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7434","RelatedDescription":"Merged pull request \"Port GC changes from coreclr - 9\" (#7434) at dotnet/corert","RelatedBody":"This port continues https://github.com/dotnet/corert/pull/7416\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/5e82b75a22e9f1ee379beab45c2ddc6146132aab):**\r\n- https://github.com/dotnet/coreclr/commit/7eb6865565fbd3c45ca58e398a72750fa43c432e (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/59f2a57563b7488779a9b93220a9dfe5c6a45700 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/bdf219c364e15cae908f9c87446ff4ae26a9fe1e (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/55ce686a6092cf38458d2dce6da18aef8eab7c43 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/bed0a5e263324d3e035a2140c24cc70f1e143d93 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/fa01b864246bb588e5088be36dbfe3af833b266f (skipped)\r\n- https://github.com/dotnet/coreclr/commit/8acf6c9f7e33b1bfe77205cd2e61f2c60e8c00ce (manual port)\r\n- https://github.com/dotnet/coreclr/commit/1eea080a7b3a13110975b92034a22e4fc473df46 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/9f38303221294f45740feefc1b6ddf72347ff882 (gc only port)\r\n"},{"Id":"9671368335","Type":"PullRequestEvent","CreatedAt":"2019-05-21T22:34:32","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7439","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7439) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9671364043","Type":"PullRequestEvent","CreatedAt":"2019-05-21T22:33:35","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7438","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7438) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @AArnott"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"9680185374","Type":"PullRequestEvent","CreatedAt":"2019-05-23T00:37:39","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3260","RelatedDescription":"Opened pull request \"Switch to hosted Mac pool for CI\" (#3260) at dotnet/sdk","RelatedBody":"DotNetCore-Mac pool is being retired."}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"447450874","IsPullRequest":true,"CreatedAt":"2019-05-23T04:59:36","Actor":"jkotas","Number":"24740","RawContent":null,"Title":"Reenable all CoreFX tests","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24740","RelatedDescription":"Open PR \"Reenable all CoreFX tests\" (#24740)"},{"Id":"447116944","IsPullRequest":true,"CreatedAt":"2019-05-23T04:45:44","Actor":"dotnet-maestro[bot]","Number":"24717","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-optimization","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n- **Build**: 20190521.3\r\n- **Date Produced**: 5/21/2019 4:00 PM\r\n- **Commit**: 680817355bb2e1326de1124c846263f8d9fb9294\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **optimization.IBC.CoreCLR** -> 99.99.99-master-20190521.3\r\n  - **optimization.PGO.CoreCLR** -> 99.99.99-master-20190521.3\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/24717","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-optimization\" (#24717)"},{"Id":"447395697","IsPullRequest":true,"CreatedAt":"2019-05-23T04:28:50","Actor":"mikem8361","Number":"24734","RawContent":null,"Title":"Add warning banner and sos threads -special fix","State":"closed","Body":"Issue https://github.com/dotnet/diagnostics/issues/38","Url":"https://github.com/dotnet/coreclr/pull/24734","RelatedDescription":"Closed or merged PR \"Add warning banner and sos threads -special fix\" (#24734)"},{"Id":"447422154","IsPullRequest":true,"CreatedAt":"2019-05-23T02:32:01","Actor":"hoyosjs","Number":"24739","RawContent":null,"Title":"Consolidate native versioning","State":"open","Body":"@elinor-fung I've cherry picked most of your change and tried to unify the versioning. Does this look right?\r\n","Url":"https://github.com/dotnet/coreclr/pull/24739","RelatedDescription":"Open PR \"Consolidate native versioning\" (#24739)"},{"Id":"447420245","IsPullRequest":true,"CreatedAt":"2019-05-23T02:23:09","Actor":"AndyAyersMS","Number":"24738","RawContent":null,"Title":"Add missing pin to two tests and re-enable for GC stress","State":"open","Body":"Test was evidently assuming that because an object that referred to an array\r\nwas pinned, so was the array. Failure was intermittent, GC is not guaranteed\r\nto move objects or to render their former contents inaccessible.\r\n\r\nFixes #24173.\r\nFixes #24464.","Url":"https://github.com/dotnet/coreclr/pull/24738","RelatedDescription":"Open PR \"Add missing pin to two tests and re-enable for GC stress\" (#24738)"},{"Id":"447412631","IsPullRequest":true,"CreatedAt":"2019-05-23T01:46:11","Actor":"davmason","Number":"24737","RawContent":null,"Title":"Prevent duplicate class addition when a profiler adds a type","State":"open","Body":"My previous change to allow profilers to add classes to R2R images had a flaw in it. We would call `LazyPopulateAvailableClassHash` and then `AddAvailableClass`, but the first call to `LazyPopulateAvailableClassHash` would populate the class hash with everything that was already in metadata, leading to an BadImageFormat exception when we tried to add a duplicate type in `AddAvailableClass`. It happened to work in my testing because `ICorProfilerInfo4::ApplyMetadata` would swallow exceptions. \r\n\r\nIf a profiler adds types in `ModuleLoadFinished` the exception won't be swallowed though and it will tear down the process.","Url":"https://github.com/dotnet/coreclr/pull/24737","RelatedDescription":"Open PR \"Prevent duplicate class addition when a profiler adds a type\" (#24737)"},{"Id":"447409340","IsPullRequest":true,"CreatedAt":"2019-05-23T01:34:16","Actor":"hoyosjs","Number":"24736","RawContent":null,"Title":"[WIP] Bump arcade version, SDK version, and consolidate native version sources","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24736","RelatedDescription":"Closed or merged PR \"[WIP] Bump arcade version, SDK version, and consolidate native version sources\" (#24736)"},{"Id":"447348382","IsPullRequest":true,"CreatedAt":"2019-05-23T01:19:21","Actor":"sandreenko","Number":"24731","RawContent":null,"Title":"Change timeouts for outerloop job and move one test to longRunningGc.","State":"closed","Body":"6d46cf4711: Change outerloop timeout per collection.\r\n\r\nWe have different test collections timeouts on Alpine.38.Amd64, examples:\r\nhttps://mc.dot.net/#/user/coreclr-ci/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190521.780/workItem/JIT.jit64.hfa/wilogs\r\nhttps://mc.dot.net/#/user/coreclr-ci/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2F/20190521.779/workItem/PayloadGroup0/wilogs\r\nhttps://mc.dot.net/#/user/coreclr-ci/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fr2r~2Fcli~2F/20190521.783/workItem/Loader.classloader.TypeGeneratorTests.TypeGeneratorTest0-299/wilogs\r\n\r\n3f0922e778: Move _il_relthread-race to pri1 and mark as long running GC test.\r\nThe test is using 4 threads and calls GC.Collect while waiting for them.\r\n\r\nLink https://github.com/dotnet/coreclr/issues/23624.","Url":"https://github.com/dotnet/coreclr/pull/24731","RelatedDescription":"Closed or merged PR \"Change timeouts for outerloop job and move one test to longRunningGc.\" (#24731)"},{"Id":"447376805","IsPullRequest":true,"CreatedAt":"2019-05-23T00:51:01","Actor":"sdmaclea","Number":"24732","RawContent":null,"Title":"ComponentActivator GetType must throwOnError","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24732","RelatedDescription":"Closed or merged PR \"ComponentActivator GetType must throwOnError\" (#24732)"},{"Id":"447398863","IsPullRequest":true,"CreatedAt":"2019-05-23T00:34:33","Actor":"elinor-fung","Number":"24735","RawContent":null,"Title":"Fix missing version numbers in packaged files and getting IBC merge version in official build","State":"open","Body":"Thanks @hoyosjs for pointing out issues happening in official build.","Url":"https://github.com/dotnet/coreclr/pull/24735","RelatedDescription":"Open PR \"Fix missing version numbers in packaged files and getting IBC merge version in official build\" (#24735)"},{"Id":"447388600","IsPullRequest":true,"CreatedAt":"2019-05-22T23:43:47","Actor":"josalem","Number":"24733","RawContent":null,"Title":"Add COMPlus_DisableLttngLibraryLoad environment variable","State":"open","Body":"Adds a `COMPlus_DisableLttngLibraryLoad` environment variable for preventing LTTng from being loaded.  This doesn't change any default behavior and this library load can safely be skipped.\r\n\r\nShould hopefully unblock people stuck on #15693.\r\n\r\nCC - @tommcdon ","Url":"https://github.com/dotnet/coreclr/pull/24733","RelatedDescription":"Open PR \"Add COMPlus_DisableLttngLibraryLoad environment variable\" (#24733)"},{"Id":"447252466","IsPullRequest":true,"CreatedAt":"2019-05-22T22:18:45","Actor":"AaronRobinsonMSFT","Number":"24725","RawContent":null,"Title":"Remove filter for Exception type during registry inquiry.","State":"closed","Body":"Update Console output with more details.\r\n\r\nFixes #24661 \r\n\r\ncc @jkoritzinsky @RussKeldorph ","Url":"https://github.com/dotnet/coreclr/pull/24725","RelatedDescription":"Closed or merged PR \"Remove filter for Exception type during registry inquiry.\" (#24725)"},{"Id":"447298004","IsPullRequest":true,"CreatedAt":"2019-05-22T22:13:23","Actor":"sywhang","Number":"24729","RawContent":null,"Title":"put lttng probe check under FEATURE_EVENT_TRACE","State":"closed","Body":"See https://github.com/dotnet/coreclr/commit/4685a1e008ad7cf4118e8778d89e63d87ca5b7b6#r33557088\r\n\r\n/cc @AntonLapounov ","Url":"https://github.com/dotnet/coreclr/pull/24729","RelatedDescription":"Closed or merged PR \"put lttng probe check under FEATURE_EVENT_TRACE\" (#24729)"},{"Id":"447266996","IsPullRequest":true,"CreatedAt":"2019-05-22T21:20:12","Actor":"cshung","Number":"24726","RawContent":null,"Title":"Relax the assertion for FieldDesc::GetBase","State":"closed","Body":"In [`proftoeeinterfaceimpl.cpp`](https://github.com/dotnet/coreclr/blob/96e8c58d77762497a8333e675db2fd396887decb/src/vm/proftoeeinterfaceimpl.cpp#L3303), we are calling [`FieldDesc.GetBase()`](https://github.com/dotnet/coreclr/blob/96e8c58d77762497a8333e675db2fd396887decb/src/vm/field.h#L454) under the [assumption](https://github.com/dotnet/coreclr/blob/96e8c58d77762497a8333e675db2fd396887decb/src/vm/proftoeeinterfaceimpl.cpp#L3203) that it will not throw or trigger GC, but the [contract](https://github.com/dotnet/coreclr/blob/96e8c58d77762497a8333e675db2fd396887decb/src/vm/field.h#L458) on `FieldDesc.GetBase()` seems to imply otherwise. \r\n\r\nAfter careful reading through the code, it appears that the contract of `FieldDesc.GetBase()` is wrong, the implementation of it won't throw or trigger GC, therefore I updated the contract to reflect what it is.","Url":"https://github.com/dotnet/coreclr/pull/24726","RelatedDescription":"Closed or merged PR \"Relax the assertion for FieldDesc::GetBase\" (#24726)"},{"Id":"447345104","IsPullRequest":true,"CreatedAt":"2019-05-22T21:11:30","Actor":"jbevain","Number":"24730","RawContent":null,"Title":"Add Arm64 to ImageFileMachine and ProcessorArchitecture","State":"open","Body":"This all started when a C++ Unity application referencing an ARM64 winmd failed to build using MSBuild.\r\n\r\nMSBuild currently has a dependency on `System.Reflection.ProcessorArchitecture`, and needs to support arm64 binaries. Here's a proposed PR:\r\n\r\nhttps://github.com/microsoft/msbuild/pull/4389\r\n\r\nThe current proposed fix is to use a direct integer constant value as ProcessorArchitecture, but ideally we'd like to avoid the enum values to diverge if somebody adds another enum entry for another architecture.\r\n\r\nAny comment on the approach or interest in this?","Url":"https://github.com/dotnet/coreclr/pull/24730","RelatedDescription":"Open PR \"Add Arm64 to ImageFileMachine and ProcessorArchitecture\" (#24730)"},{"Id":"447288636","IsPullRequest":false,"CreatedAt":"2019-05-22T18:46:42","Actor":"sywhang","Number":"24728","RawContent":null,"Title":"Improve logging for EventSource.WriteEvent parameter mismatch","State":"open","Body":"See: https://github.com/dotnet/coreclr/issues/24724#issuecomment-494913143\r\n\r\nWhen WriteEvent() is called with an incorrect number of parameters, we log a message to the debugger but it doesn't contain any info about the EventSource or EventId or the argument passed, which would be helpful when diagnosing which call to WriteEvent failed: https://github.com/dotnet/coreclr/blob/master/src/System.Private.CoreLib/shared/System/Diagnostics/Tracing/EventSource.cs#L2084\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/24728","RelatedDescription":"Open issue \"Improve logging for EventSource.WriteEvent parameter mismatch\" (#24728)"},{"Id":"447234792","IsPullRequest":false,"CreatedAt":"2019-05-22T18:43:37","Actor":"jiangzeng01","Number":"24724","RawContent":null,"Title":"Unexpected WriteEvent parameter value in netperf file","State":"closed","Body":"Test:\r\ncoreclr\\tests\\src\\tracing\\eventsource\\eventsourcetrace\\EventSourceTrace.cs\r\n\r\nRepro steps:\r\n1. Change the line 23 of EventSourceTrace.cs to:\r\n_internal void MathResult(int x, int y, int z, string formula) { this.WriteEvent(1, x, y, z, x, y, z, formula); }_\r\n2. Build & run the test\r\n3. Check MathResults events in the netperf file generated, the parameter **formula** is showing some strange values which are not expected.\r\n\r\nOther concern:\r\nWith this change, I passed x,y,z as parameters to WriteEvent twice, should it be showing twice in the netperf file? For now, it shows only once.\r\n\r\n![image](https://user-images.githubusercontent.com/49379637/58194427-12c2ca00-7cf8-11e9-8b05-eea292d4c6f5.png)\r\n","Url":"https://github.com/dotnet/coreclr/issues/24724","RelatedDescription":"Closed issue \"Unexpected WriteEvent parameter value in netperf file\" (#24724)"},{"Id":"447286226","IsPullRequest":false,"CreatedAt":"2019-05-22T18:40:54","Actor":"arcooke","Number":"24727","RawContent":null,"Title":"Run crashes without output. Internal CLR error 0x80131506 after clean.","State":"open","Body":"Hi.  I am running core 3 preview on two linux systems.  Same versions, same projects, both installed with snaps.  The runtime crashes on Solus, but not on KDE Neon (Ubuntu 18.04) \r\n\r\n**DOES** crash:\r\n```\r\n$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     solus\r\n OS Version:  4.0\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /snap/dotnet-sdk/37/sdk/3.0.100-preview5-011568/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-preview5-011568 [/snap/dotnet-sdk/37/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [/snap/dotnet-sdk/37/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [/snap/dotnet-sdk/37/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nDoes **NOT** crash:\r\n```\r\n$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     neon\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /snap/dotnet-sdk/37/sdk/3.0.100-preview5-011568/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-preview5-011568 [/snap/dotnet-sdk/37/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [/snap/dotnet-sdk/37/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [/snap/dotnet-sdk/37/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n---\r\n\r\n(the rest of this is related only to the Solus system)\r\n\r\nThe first issue I encountered is `dotnet run` was crashing without any output.  See a screen recording here: \r\n\r\nhttps://i.imgur.com/T0cbkZY.gifv\r\n\r\nAfter a bit of testing, I got an internal CLR error at the end of a `dotnet clean`.. but this only happened once.  I can't get that error to come back.  I'm not certain if this is related.\r\n\r\n```\r\n$ dotnet clean\r\nMicrosoft (R) Build Engine version 16.0.462+g62fb89029d for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nBuild started 5/22/2019 12:29:45 PM.\r\n     1>Project \"/home/adam/Source/cura/cura-api/cura-api.csproj\" on node 1 (Clean target(s)).\r\n     1>_CheckForNETCoreSdkIsPreview:\r\n       /snap/dotnet-sdk/current/sdk/3.0.100-preview5-011568/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(157,5): message NETSDK1057: You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview [/home/adam/Source/cura/cura-api/cura-api.csproj]\r\n       CoreClean:\r\n         Deleting file ... blah blah ...\r\n         Deleting file ... blah blah ...\r\n         ...\r\n         ...\r\n         ...\r\n         Deleting file ... blah blah ...\r\n         Deleting file ... blah blah ...         \r\n     1>Done Building Project \"/home/adam/Source/cura/cura-api/cura-api.csproj\" (Clean target(s)).\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:00.64\r\nInternal CLR error. (0x80131506)\r\n   at Interop+Sys.EnumerateInterfaceAddresses(IPv4AddressDiscoveredCallback, IPv6AddressDiscoveredCallback, LinkLayerAddressDiscoveredCallback)\r\n   at Interop+Sys.EnumerateInterfaceAddresses(IPv4AddressDiscoveredCallback, IPv6AddressDiscoveredCallback, LinkLayerAddressDiscoveredCallback)\r\n   at System.Net.NetworkInformation.LinuxNetworkInterface.GetLinuxNetworkInterfaces()\r\n   at System.Net.NetworkInformation.NetworkInterfacePal.GetIsNetworkAvailable()\r\n   at System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable()\r\n   at Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.Sender.Send(Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.StorageTransmission, System.TimeSpan ByRef)\r\n   at Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.Sender.SendLoop()\r\n   at System.Threading.Tasks.Task.InnerInvoke()\r\n   at System.Threading.Tasks.Task+<>c.<.cctor>b__274_0(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef, System.Threading.Thread)\r\n   at System.Threading.Tasks.Task.ExecuteEntryUnsafe(System.Threading.Thread)\r\n   at System.Threading.Tasks.ThreadPoolTaskScheduler+<>c.<.cctor>b__10_0(System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart_Context(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart(System.Object)\r\n```\r\n\r\nIf there is a log file somewhere that might help, just let me know where to find it and I will provide that.  Thanks","Url":"https://github.com/dotnet/coreclr/issues/24727","RelatedDescription":"Open issue \"Run crashes without output. Internal CLR error 0x80131506 after clean.\" (#24727)"},{"Id":"447136966","IsPullRequest":true,"CreatedAt":"2019-05-22T18:21:48","Actor":"jkotas","Number":"24718","RawContent":null,"Title":"Delete FEATURE_WINDOWSPHONE","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24718","RelatedDescription":"Closed or merged PR \"Delete FEATURE_WINDOWSPHONE\" (#24718)"},{"Id":"447203732","IsPullRequest":true,"CreatedAt":"2019-05-22T17:56:56","Actor":"CarolEidt","Number":"24721","RawContent":null,"Title":"Test case for #24657","State":"closed","Body":"This bug is a duplicate of #18522. Adding the additional repro.\r\n\r\nClose #24657","Url":"https://github.com/dotnet/coreclr/pull/24721","RelatedDescription":"Closed or merged PR \"Test case for #24657\" (#24721)"},{"Id":"447198470","IsPullRequest":true,"CreatedAt":"2019-05-22T17:28:27","Actor":"stephentoub","Number":"24719","RawContent":null,"Title":"Fix Path.Join argument nullable annotation","State":"closed","Body":"cc: @dotnet/nullablefc ","Url":"https://github.com/dotnet/coreclr/pull/24719","RelatedDescription":"Closed or merged PR \"Fix Path.Join argument nullable annotation\" (#24719)"},{"Id":"447233302","IsPullRequest":true,"CreatedAt":"2019-05-22T16:28:23","Actor":"elinor-fung","Number":"24723","RawContent":null,"Title":"Use Microsoft.Build.Traversal instead of dir.traversal.targets for packaging .builds projects","State":"open","Body":"Sever the dependency of the `.builds` projects under `src/.nuget` on `src/dir.traversal.targets`. With this change, the only things still depending on `dir.traversal.targets` should be tests.","Url":"https://github.com/dotnet/coreclr/pull/24723","RelatedDescription":"Open PR \"Use Microsoft.Build.Traversal instead of dir.traversal.targets for packaging .builds projects\" (#24723)"},{"Id":"447228494","IsPullRequest":true,"CreatedAt":"2019-05-22T16:17:49","Actor":"zooba","Number":"24722","RawContent":null,"Title":"Use -c when trying to find Python","State":"open","Body":"Piping code into Python is indistinguishable from interactive execution, but since we never want interactive execution here it's better to use `-c <CODE>`.\r\n\r\nSee https://twitter.com/MStrehovsky/status/1131216623086460933?s=20 for the original problem report.","Url":"https://github.com/dotnet/coreclr/pull/24722","RelatedDescription":"Open PR \"Use -c when trying to find Python\" (#24722)"},{"Id":"447202304","IsPullRequest":false,"CreatedAt":"2019-05-22T15:25:57","Actor":"sebastianbk","Number":"24720","RawContent":null,"Title":"[macOS] EXC_BAD_ACCESS when inspecting lazy-loaded objects","State":"open","Body":"When running a debugging session in Visual Studio Code, I repeatedly run into this very frustrating issue where the debugger crashes when attempting to inspect lazy-loaded objects generated by Entity Framework Core.\r\n\r\nI have built an ASP.NET Core 2.1 web app and, when hitting a breakpoint set in a controller action (or in any other type of method), I can inspect both value and reference type variables used in the action without any issue. However, when attempting to inspect lazy-loaded variables of the type `Castle.Proxies.[ClassName]Proxy`, the debugger crashes with the exception `EXC_BAD_ACCESS (SIGBUS)`. See the full crash logs in the bottom of this issue.\r\n\r\nAs an example, check out the screenshot below. I can inspect the variables `id` (value type) and `test` (reference type) but, when inspecting `dataset`, it crashes.\r\n\r\n![image](https://user-images.githubusercontent.com/660576/58184735-f4d27680-7cb1-11e9-9357-49952c8f8c7f.png)\r\n\r\nThis issue does not occur in Windows—only in macOS. For reference, here are the version numbers of the different pieces I have installed on my system:\r\n\r\n- macOS v10.14.5\r\n- .NET Core SDK v2.2.107\r\n- Visual Studio Code v1.34.0\r\n- Extension: ms-vscode.csharp v1.19.1\r\n\r\nThe target framework of my project: `netcoreapp2.1`\r\n\r\nHere is an overview of the NuGet packages I have installed in my project:\r\n\r\n```xml\r\n<ItemGroup>\r\n\t<PackageReference Include=\"Google.Apis.CloudMachineLearningEngine.v1\" Version=\"1.38.0.1517\" />\r\n\t<PackageReference Include=\"Google.Apis.Oauth2.v2\" Version=\"1.38.0.1489\" />\r\n\t<PackageReference Include=\"Google.Cloud.Diagnostics.AspNetCore\" Version=\"2.0.1\" />\r\n\t<PackageReference Include=\"Google.Cloud.Kms.V1\" Version=\"1.0.0\" />\r\n\t<PackageReference Include=\"Google.Cloud.Logging.V2\" Version=\"2.2.0\" />\r\n\t<PackageReference Include=\"Google.Cloud.Storage.V1\" Version=\"2.3.0\" />\r\n\t<PackageReference Include=\"Hangfire\" Version=\"1.6.22\" />\r\n\t<PackageReference Include=\"Hangfire.Console\" Version=\"1.4.2\" />\r\n\t<PackageReference Include=\"Hangfire.Pro\" Version=\"2.1.2\" />\r\n\t<PackageReference Include=\"Hangfire.Pro.Redis.StrongName\" Version=\"2.4.0\" />\r\n\t<PackageReference Include=\"Microsoft.AspNetCore.App\" />\r\n\t<PackageReference Include=\"Microsoft.AspNetCore.DataProtection.Redis\" Version=\"0.4.1\" />\r\n\t<PackageReference Include=\"Microsoft.AspNetCore.Identity\" Version=\"2.1.6\" />\r\n\t<PackageReference Include=\"Microsoft.AspNetCore.SignalR.Redis\" Version=\"1.0.4\" />\r\n\t<PackageReference Include=\"Microsoft.EntityFrameworkCore\" Version=\"2.1.4\" />\r\n\t<PackageReference Include=\"Microsoft.EntityFrameworkCore.Proxies\" Version=\"2.1.4\" />\r\n\t<PackageReference Include=\"Microsoft.EntityFrameworkCore.Tools\" Version=\"2.1.4\" />\r\n\t<PackageReference Include=\"Microsoft.Extensions.Caching.Redis\" Version=\"2.1.2\" />\r\n\t<PackageReference Include=\"Npgsql.EntityFrameworkCore.PostgreSQL\" Version=\"2.1.2\" />\r\n\t<PackageReference Include=\"Postmark\" Version=\"4.0.1\" />\r\n\t<PackageReference Include=\"reCAPTCHA.AspNetCore\" Version=\"2.1.3\" />\r\n\t<PackageReference Include=\"SharpZipLib\" Version=\"1.1.0\" />\r\n</ItemGroup>\r\n```\r\n\r\nExpand the section below to check out the crash logs.\r\n\r\n<details><summary>Crash logs</summary>\r\n\r\n```\r\nProcess:               dotnet [1344]\r\nPath:                  /usr/local/share/dotnet/dotnet\r\nIdentifier:            dotnet\r\nVersion:               0\r\nCode Type:             X86-64 (Native)\r\nParent Process:        ??? [1340]\r\nResponsible:           dotnet [1344]\r\nUser ID:               501\r\n\r\nDate/Time:             2019-05-22 16:30:51.195 +0200\r\nOS Version:            Mac OS X 10.14.5 (18F132)\r\nReport Version:        12\r\nBridge OS Version:     3.5 (16P5125)\r\nAnonymous UUID:        10BE0330-6347-DD35-5D56-7ECDC81B7F1A\r\n\r\nSleep/Wake UUID:       2334A637-079B-49F6-B4A4-375194CDD988\r\n\r\nTime Awake Since Boot: 570 seconds\r\nTime Since Wake:       140 seconds\r\n\r\nSystem Integrity Protection: enabled\r\n\r\nCrashed Thread:        23\r\n\r\nException Type:        EXC_BAD_ACCESS (SIGBUS)\r\nException Codes:       KERN_PROTECTION_FAILURE at 0x00007ff7b683b800\r\nException Note:        EXC_CORPSE_NOTIFY\r\n\r\nTermination Signal:    Bus error: 10\r\nTermination Reason:    Namespace SIGNAL, Code 0xa\r\nTerminating Process:   exc handler [1344]\r\n\r\nVM Regions Near 0x7ff7b683b800:\r\n    MALLOC_SMALL           00007ff7b6000000-00007ff7b6800000 [ 8192K] rw-/rwx SM=PRV  \r\n--> MALLOC_SMALL           00007ff7b6800000-00007ff7b7000000 [ 8192K] rw-/rwx SM=COW  \r\n    MALLOC_SMALL           00007ff7b7000000-00007ff7b8000000 [ 16.0M] rw-/rwx SM=PRV  \r\n\r\nThread 0:: Dispatch queue: com.apple.main-thread\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25f82 WaitForMultipleObjectsEx + 82\r\n6   libcoreclr.dylib              \t0x000000010bda733d Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1325\r\n7   libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n8   libcoreclr.dylib              \t0x000000010bec550e CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 62\r\n9   libcoreclr.dylib              \t0x000000010bda81b0 Thread::Block(int, PendingSync*) + 32\r\n10  libcoreclr.dylib              \t0x000000010bd9fd15 SyncBlock::Wait(int, int) + 485\r\n11  libcoreclr.dylib              \t0x000000010bff3599 ObjectNative::WaitTimeout(bool, int, Object*) + 201\r\n12  ???                           \t0x000000011a79b0d2 0 + 4739150034\r\n13  ???                           \t0x000000011a7515b9 0 + 4738848185\r\n14  ???                           \t0x000000011a751449 0 + 4738847817\r\n15  ???                           \t0x000000011a7acdd6 0 + 4739222998\r\n16  ???                           \t0x000000011b7454f7 0 + 4755576055\r\n17  ???                           \t0x000000011ac83d09 0 + 4744297737\r\n18  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n19  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n20  libcoreclr.dylib              \t0x000000010bcbe26a RunMain(MethodDesc*, short, int*, PtrArray**) + 682\r\n21  libcoreclr.dylib              \t0x000000010bcbe4df Assembly::ExecuteMainMethod(PtrArray**, int) + 223\r\n22  libcoreclr.dylib              \t0x000000010bcfe174 CorHost2::ExecuteAssembly(unsigned int, char16_t const*, int, char16_t const**, unsigned int*) + 436\r\n23  libcoreclr.dylib              \t0x000000010bc32b46 coreclr_execute_assembly + 230\r\n24  libhostpolicy.dylib           \t0x000000010bb333d8 0x10baaa000 + 562136\r\n25  libhostpolicy.dylib           \t0x000000010bb1c813 0x10baaa000 + 469011\r\n26  libhostpolicy.dylib           \t0x000000010bb23099 0x10baaa000 + 495769\r\n27  libhostfxr.dylib              \t0x000000010ba46223 0x10b9bd000 + 561699\r\n28  libhostfxr.dylib              \t0x000000010ba65f44 0x10b9bd000 + 692036\r\n29  libhostfxr.dylib              \t0x000000010ba68b22 0x10b9bd000 + 703266\r\n30  libhostfxr.dylib              \t0x000000010ba66fd8 0x10b9bd000 + 696280\r\n31  libhostfxr.dylib              \t0x000000010ba47299 0x10b9bd000 + 565913\r\n32  dotnet                        \t0x000000010b98f402 0x10b983000 + 50178\r\n33  dotnet                        \t0x000000010b98f9f5 0x10b983000 + 51701\r\n34  libdyld.dylib                 \t0x00007fff67c313d5 start + 1\r\n\r\nThread 1:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6622a mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff67d6676c mach_msg + 60\r\n2   libcoreclr.dylib              \t0x000000010bc2f438 MachMessage::Receive(unsigned int) + 72\r\n3   libcoreclr.dylib              \t0x000000010bc2e38e SEHExceptionThread(void*) + 94\r\n4   libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n5   libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n6   libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 2:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6c78e kevent + 10\r\n1   libcoreclr.dylib              \t0x000000010bc23ca0 CorUnix::CPalSynchronizationManager::ReadBytesFromProcessPipe(int, unsigned char*, int) + 560\r\n2   libcoreclr.dylib              \t0x000000010bc23273 CorUnix::CPalSynchronizationManager::WorkerThread(void*) + 131\r\n3   libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n4   libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n5   libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n6   libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 3:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d67ef2 read + 10\r\n1   libcoreclr.dylib              \t0x000000010bc9cc94 TwoWayPipe::Read(void*, unsigned int) + 36\r\n2   libcoreclr.dylib              \t0x000000010bc951c8 DbgTransportSession::TransportWorker() + 3016\r\n3   libcoreclr.dylib              \t0x000000010bc92ff9 DbgTransportSession::TransportWorkerStatic(void*) + 9\r\n4   libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n5   libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n6   libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n7   libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 4:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25f82 WaitForMultipleObjectsEx + 82\r\n6   libcoreclr.dylib              \t0x000000010bc914a8 DebuggerRCThread::MainLoop() + 264\r\n7   libcoreclr.dylib              \t0x000000010bc9133b DebuggerRCThread::ThreadProc() + 251\r\n8   libcoreclr.dylib              \t0x000000010bc91044 DebuggerRCThread::ThreadProcStatic(void*) + 132\r\n9   libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n12  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 5:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25588 WaitForSingleObject + 72\r\n6   libcoreclr.dylib              \t0x000000010bc9294d HelperCanary::ThreadProc() + 221\r\n7   libcoreclr.dylib              \t0x000000010bc92838 HelperCanary::ThreadProc(void*) + 56\r\n8   libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n9   libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n10  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n11  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 6:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010bf0eca3 SVR::gc_heap::gc_thread_function() + 163\r\n8   libcoreclr.dylib              \t0x000000010bf0ebff SVR::gc_heap::gc_thread_stub(void*) + 79\r\n9   libcoreclr.dylib              \t0x000000010be336e8 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char const*)::$_1::__invoke(void*) + 168\r\n10  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n12  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n13  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 7:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010bf0ec81 SVR::gc_heap::gc_thread_function() + 129\r\n8   libcoreclr.dylib              \t0x000000010bf0ebff SVR::gc_heap::gc_thread_stub(void*) + 79\r\n9   libcoreclr.dylib              \t0x000000010be336e8 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char const*)::$_1::__invoke(void*) + 168\r\n10  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n12  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n13  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 8:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010bf0ec81 SVR::gc_heap::gc_thread_function() + 129\r\n8   libcoreclr.dylib              \t0x000000010bf0ebff SVR::gc_heap::gc_thread_stub(void*) + 79\r\n9   libcoreclr.dylib              \t0x000000010be336e8 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char const*)::$_1::__invoke(void*) + 168\r\n10  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n12  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n13  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 9:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010bf0ec81 SVR::gc_heap::gc_thread_function() + 129\r\n8   libcoreclr.dylib              \t0x000000010bf0ebff SVR::gc_heap::gc_thread_stub(void*) + 79\r\n9   libcoreclr.dylib              \t0x000000010be336e8 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char const*)::$_1::__invoke(void*) + 168\r\n10  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n12  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n13  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 10:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010bf0ec81 SVR::gc_heap::gc_thread_function() + 129\r\n8   libcoreclr.dylib              \t0x000000010bf0ebff SVR::gc_heap::gc_thread_stub(void*) + 79\r\n9   libcoreclr.dylib              \t0x000000010be336e8 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char const*)::$_1::__invoke(void*) + 168\r\n10  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n12  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n13  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 11:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010bf0ec81 SVR::gc_heap::gc_thread_function() + 129\r\n8   libcoreclr.dylib              \t0x000000010bf0ebff SVR::gc_heap::gc_thread_stub(void*) + 79\r\n9   libcoreclr.dylib              \t0x000000010be336e8 (anonymous namespace)::CreateNonSuspendableThread(void (*)(void*), void*, char const*)::$_1::__invoke(void*) + 168\r\n10  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n11  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n12  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n13  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 12:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25f82 WaitForMultipleObjectsEx + 82\r\n6   libcoreclr.dylib              \t0x000000010be300ae FinalizerThread::WaitForFinalizerEvent(CLREvent*) + 158\r\n7   libcoreclr.dylib              \t0x000000010be301a3 FinalizerThread::FinalizerThreadWorker(void*) + 115\r\n8   libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n9   libcoreclr.dylib              \t0x000000010bdacb79 ManagedThreadBase::FinalizerBase(void (*)(void*)) + 73\r\n10  libcoreclr.dylib              \t0x000000010be304bc FinalizerThread::FinalizerThreadStart(void*) + 204\r\n11  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n12  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n13  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n14  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 13:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6622a mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff67d6676c mach_msg + 60\r\n2   libclrjit.dylib               \t0x0000000115690018 MachMessage::Receive(unsigned int) + 72\r\n3   libclrjit.dylib               \t0x000000011568ef6e SEHExceptionThread(void*) + 94\r\n4   libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n5   libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n6   libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 14:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6622a mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff67d6676c mach_msg + 60\r\n2   com.apple.CoreFoundation      \t0x00007fff3bd03bee __CFRunLoopServiceMachPort + 328\r\n3   com.apple.CoreFoundation      \t0x00007fff3bd0315c __CFRunLoopRun + 1612\r\n4   com.apple.CoreFoundation      \t0x00007fff3bd028be CFRunLoopRunSpecific + 455\r\n5   com.apple.CoreFoundation      \t0x00007fff3bd026d2 CFRunLoopRun + 40\r\n6   ???                           \t0x000000011ac91cc3 0 + 4744355011\r\n7   ???                           \t0x000000011c31c271 0 + 4767990385\r\n8   ???                           \t0x000000011c595126 0 + 4770582822\r\n9   libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n10  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n11  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n12  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n13  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n14  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n15  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n16  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n17  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n18  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 15:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d67ef2 read + 10\r\n1   System.Native.dylib           \t0x0000000117272b2e SystemNative_Read + 46\r\n2   ???                           \t0x000000011a7f7eae 0 + 4739530414\r\n3   ???                           \t0x000000011a789438 0 + 4739077176\r\n4   ???                           \t0x000000011a789268 0 + 4739076712\r\n5   ???                           \t0x000000011a787376 0 + 4739068790\r\n6   ???                           \t0x000000011a7a99d5 0 + 4739209685\r\n7   ???                           \t0x000000011a759447 0 + 4738880583\r\n8   ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n9   ???                           \t0x000000011a75091c 0 + 4738844956\r\n10  ???                           \t0x000000011a79e278 0 + 4739162744\r\n11  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n12  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n13  libcoreclr.dylib              \t0x000000010be02545 QueueUserWorkItemManagedCallback(void*) + 165\r\n14  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n15  libcoreclr.dylib              \t0x000000010bdacb23 ManagedThreadBase::ThreadPool(ADID, void (*)(void*), void*) + 51\r\n16  libcoreclr.dylib              \t0x000000010bda16e0 ManagedPerAppDomainTPCount::DispatchWorkItem(bool*, bool*) + 272\r\n17  libcoreclr.dylib              \t0x000000010bdcc0b5 ThreadpoolMgr::WorkerThreadStart(void*) + 1301\r\n18  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n19  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n20  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n21  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 16:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010becd8fc Thread::WaitSuspendEventsHelper() + 188\r\n8   libcoreclr.dylib              \t0x000000010becc218 Thread::RareEnablePreemptiveGC() + 248\r\n9   libcoreclr.dylib              \t0x000000010becb847 Thread::RareDisablePreemptiveGC() + 343\r\n10  libcoreclr.dylib              \t0x000000010be03aa8 AppDomainTimerCallback(void*, unsigned char) + 200\r\n11  libcoreclr.dylib              \t0x000000010bdcf930 ThreadpoolMgr::AsyncTimerCallbackCompletion(void*) + 160\r\n12  libcoreclr.dylib              \t0x000000010bda13a6 UnManagedPerAppDomainTPCount::DispatchWorkItem(bool*, bool*) + 422\r\n13  libcoreclr.dylib              \t0x000000010bdcc0b5 ThreadpoolMgr::WorkerThreadStart(void*) + 1301\r\n14  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n15  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n16  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n17  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 17:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25f82 WaitForMultipleObjectsEx + 82\r\n6   libcoreclr.dylib              \t0x000000010bda733d Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1325\r\n7   libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n8   libcoreclr.dylib              \t0x000000010bec550e CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 62\r\n9   libcoreclr.dylib              \t0x000000010bda81b0 Thread::Block(int, PendingSync*) + 32\r\n10  libcoreclr.dylib              \t0x000000010bd9fd15 SyncBlock::Wait(int, int) + 485\r\n11  libcoreclr.dylib              \t0x000000010bff3599 ObjectNative::WaitTimeout(bool, int, Object*) + 201\r\n12  ???                           \t0x000000011a7ac107 0 + 4739219719\r\n13  ???                           \t0x000000011a7abe6c 0 + 4739219052\r\n14  ???                           \t0x000000011aca13b8 0 + 4744418232\r\n15  ???                           \t0x000000011aca03ad 0 + 4744414125\r\n16  ???                           \t0x000000011cde9057 0 + 4779315287\r\n17  ???                           \t0x000000011c5950d0 0 + 4770582736\r\n18  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n19  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n20  libcoreclr.dylib              \t0x000000010bdfbc79 ThreadNative::KickOffThread_Worker(void*) + 393\r\n21  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n22  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n23  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n24  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n25  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n26  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n27  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 18:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25f82 WaitForMultipleObjectsEx + 82\r\n6   libcoreclr.dylib              \t0x000000010bda733d Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1325\r\n7   libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n8   libcoreclr.dylib              \t0x000000010bec550e CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 62\r\n9   libcoreclr.dylib              \t0x000000010bda81b0 Thread::Block(int, PendingSync*) + 32\r\n10  libcoreclr.dylib              \t0x000000010bd9fd15 SyncBlock::Wait(int, int) + 485\r\n11  libcoreclr.dylib              \t0x000000010bff3599 ObjectNative::WaitTimeout(bool, int, Object*) + 201\r\n12  ???                           \t0x000000011acb25cb 0 + 4744488395\r\n13  ???                           \t0x000000011acb2507 0 + 4744488199\r\n14  ???                           \t0x000000011c595126 0 + 4770582822\r\n15  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n16  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n17  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n18  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n19  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n20  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n21  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n22  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n23  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n24  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 19:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d67ef2 read + 10\r\n1   System.Native.dylib           \t0x0000000117272b2e SystemNative_Read + 46\r\n2   ???                           \t0x000000011a7f7eae 0 + 4739530414\r\n3   ???                           \t0x000000011a789438 0 + 4739077176\r\n4   ???                           \t0x000000011a789268 0 + 4739076712\r\n5   ???                           \t0x000000011a787376 0 + 4739068790\r\n6   ???                           \t0x000000011a7a99d5 0 + 4739209685\r\n7   ???                           \t0x000000011a759447 0 + 4738880583\r\n8   ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n9   ???                           \t0x000000011a75091c 0 + 4738844956\r\n10  ???                           \t0x000000011a79e278 0 + 4739162744\r\n11  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n12  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n13  libcoreclr.dylib              \t0x000000010be02545 QueueUserWorkItemManagedCallback(void*) + 165\r\n14  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n15  libcoreclr.dylib              \t0x000000010bdacb23 ManagedThreadBase::ThreadPool(ADID, void (*)(void*), void*) + 51\r\n16  libcoreclr.dylib              \t0x000000010bda16e0 ManagedPerAppDomainTPCount::DispatchWorkItem(bool*, bool*) + 272\r\n17  libcoreclr.dylib              \t0x000000010bdcc0b5 ThreadpoolMgr::WorkerThreadStart(void*) + 1301\r\n18  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n19  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n20  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n21  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 20:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21725 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25e68 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x000000010bec5900 CLRLifoSemaphore::WaitForSignal(unsigned int) + 32\r\n7   libcoreclr.dylib              \t0x000000010bec5a9a CLRLifoSemaphore::Wait(unsigned int) + 122\r\n8   libcoreclr.dylib              \t0x000000010bdcc1bb ThreadpoolMgr::WorkerThreadStart(void*) + 1563\r\n9   libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n12  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 21:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010becd8fc Thread::WaitSuspendEventsHelper() + 188\r\n8   libcoreclr.dylib              \t0x000000010becc218 Thread::RareEnablePreemptiveGC() + 248\r\n9   libcoreclr.dylib              \t0x000000010becb847 Thread::RareDisablePreemptiveGC() + 343\r\n10  libcoreclr.dylib              \t0x000000010be5bdc0 JIT_RareDisableHelperWorker + 48\r\n11  libcoreclr.dylib              \t0x000000010bf7c74d JIT_RareDisableHelper + 23\r\n12  ???                           \t0x000000011d6a5009 0 + 4788473865\r\n13  ???                           \t0x000000011d416a44 0 + 4785793604\r\n14  ???                           \t0x000000011d416e69 0 + 4785794665\r\n15  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n16  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n17  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n18  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n19  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n20  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n21  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n22  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n23  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n24  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 22:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21725 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25e68 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x000000010bec5900 CLRLifoSemaphore::WaitForSignal(unsigned int) + 32\r\n7   libcoreclr.dylib              \t0x000000010bec5a9a CLRLifoSemaphore::Wait(unsigned int) + 122\r\n8   libcoreclr.dylib              \t0x000000010bdcc1bb ThreadpoolMgr::WorkerThreadStart(void*) + 1563\r\n9   libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n12  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 23 Crashed:\r\n0   ???                           \t0x00007ff7b683b800 0 + 140701895735296\r\n1   ???                           \t0x0000000120b3921b 0 + 4843606555\r\n2   ???                           \t0x0000000120b391a9 0 + 4843606441\r\n3   ???                           \t0x0000000120b386eb 0 + 4843603691\r\n4   ???                           \t0x0000000120b3822b 0 + 4843602475\r\n5   ???                           \t0x0000000120b381ac 0 + 4843602348\r\n6   ???                           \t0x0000000120b38443 0 + 4843603011\r\n7   ???                           \t0x0000000120b3822b 0 + 4843602475\r\n8   ???                           \t0x0000000120b381ac 0 + 4843602348\r\n9   ???                           \t0x0000000120b49bee 0 + 4843674606\r\n10  ???                           \t0x0000000120b48aab 0 + 4843670187\r\n11  ???                           \t0x0000000120b48a0e 0 + 4843670030\r\n12  ???                           \t0x0000000120b48885 0 + 4843669637\r\n13  ???                           \t0x0000000120b42ad8 0 + 4843645656\r\n14  ???                           \t0x0000000120b4231b 0 + 4843643675\r\n15  ???                           \t0x0000000120b42298 0 + 4843643544\r\n16  ???                           \t0x0000000120b42157 0 + 4843643223\r\n17  ???                           \t0x000000011f627596 0 + 4821513622\r\n18  ???                           \t0x000000011b54bed6 0 + 4753506006\r\n19  ???                           \t0x000000011b54bc33 0 + 4753505331\r\n20  ???                           \t0x000000011b55b15c 0 + 4753568092\r\n21  ???                           \t0x00000001210fcb98 0 + 4849650584\r\n22  ???                           \t0x000000011b55af94 0 + 4753567636\r\n23  ???                           \t0x000000011b1e0ab1 0 + 4749920945\r\n24  ???                           \t0x000000011b2007ae 0 + 4750051246\r\n25  ???                           \t0x000000011b0c4274 0 + 4748755572\r\n26  ???                           \t0x000000011b184dfa 0 + 4749544954\r\n27  ???                           \t0x000000011b1a2d10 0 + 4749667600\r\n28  ???                           \t0x000000011b19f676 0 + 4749653622\r\n29  ???                           \t0x000000011b188bf2 0 + 4749560818\r\n30  ???                           \t0x00000001210f5082 0 + 4849619074\r\n31  ???                           \t0x00000001210f4e2e 0 + 4849618478\r\n32  ???                           \t0x00000001231acfbc 0 + 4883926972\r\n33  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n34  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n35  libcoreclr.dylib              \t0x000000010bc8db1e FuncEvalWrapper(MethodDescCallSite*, DebuggerEval*, unsigned long const*, unsigned char*) + 126\r\n36  libcoreclr.dylib              \t0x000000010bc90426 DoNormalFuncEval(DebuggerEval*, unsigned char*, Object**, void**, void**, long*, ValueClassInfo**) + 1510\r\n37  libcoreclr.dylib              \t0x000000010bc8efa4 GCProtectArgsAndDoNormalFuncEval(DebuggerEval*, unsigned char*) + 1780\r\n38  libcoreclr.dylib              \t0x000000010bc8fa4b FuncEvalHijackWorker + 347\r\n39  libcoreclr.dylib              \t0x000000010bc9ca19 FuncEvalHijack + 14\r\n40  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n41  ???                           \t0x000000011a8f1e28 0 + 4740554280\r\n42  ???                           \t0x000000011a79e278 0 + 4739162744\r\n43  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n44  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n45  libcoreclr.dylib              \t0x000000010be02545 QueueUserWorkItemManagedCallback(void*) + 165\r\n46  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n47  libcoreclr.dylib              \t0x000000010bdacb23 ManagedThreadBase::ThreadPool(ADID, void (*)(void*), void*) + 51\r\n48  libcoreclr.dylib              \t0x000000010bda16e0 ManagedPerAppDomainTPCount::DispatchWorkItem(bool*, bool*) + 272\r\n49  libcoreclr.dylib              \t0x000000010bdcc0b5 ThreadpoolMgr::WorkerThreadStart(void*) + 1301\r\n50  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n51  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n52  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n53  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 24:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21725 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc2637d SleepEx + 141\r\n5   libcoreclr.dylib              \t0x000000010bdceddb ThreadpoolMgr::TimerThreadFire() + 123\r\n6   libcoreclr.dylib              \t0x000000010bdcecc5 ThreadpoolMgr::TimerThreadStart(void*) + 181\r\n7   libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n8   libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n9   libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n10  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 25:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25f82 WaitForMultipleObjectsEx + 82\r\n6   libcoreclr.dylib              \t0x000000010bda733d Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1325\r\n7   libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n8   libcoreclr.dylib              \t0x000000010bec550e CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 62\r\n9   libcoreclr.dylib              \t0x000000010bda81b0 Thread::Block(int, PendingSync*) + 32\r\n10  libcoreclr.dylib              \t0x000000010bd9fd15 SyncBlock::Wait(int, int) + 485\r\n11  libcoreclr.dylib              \t0x000000010bff3599 ObjectNative::WaitTimeout(bool, int, Object*) + 201\r\n12  ???                           \t0x000000011a7ac107 0 + 4739219719\r\n13  ???                           \t0x000000011a7abe6c 0 + 4739219052\r\n14  ???                           \t0x000000011aca13b8 0 + 4744418232\r\n15  ???                           \t0x000000011aca03ad 0 + 4744414125\r\n16  ???                           \t0x000000011cde90c5 0 + 4779315397\r\n17  ???                           \t0x000000011c5950d0 0 + 4770582736\r\n18  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n19  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n20  libcoreclr.dylib              \t0x000000010bdfbc79 ThreadNative::KickOffThread_Worker(void*) + 393\r\n21  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n22  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n23  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n24  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n25  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n26  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n27  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 26:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d67ef2 read + 10\r\n1   System.Native.dylib           \t0x000000011727679f SignalHandlerLoop + 79\r\n2   libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n3   libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n4   libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 27:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25f82 WaitForMultipleObjectsEx + 82\r\n6   libcoreclr.dylib              \t0x000000010bda733d Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1325\r\n7   libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n8   libcoreclr.dylib              \t0x000000010bec550e CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 62\r\n9   libcoreclr.dylib              \t0x000000010bda81b0 Thread::Block(int, PendingSync*) + 32\r\n10  libcoreclr.dylib              \t0x000000010bd9fd15 SyncBlock::Wait(int, int) + 485\r\n11  libcoreclr.dylib              \t0x000000010bff3599 ObjectNative::WaitTimeout(bool, int, Object*) + 201\r\n12  ???                           \t0x000000011a7ac107 0 + 4739219719\r\n13  ???                           \t0x000000011a7abe6c 0 + 4739219052\r\n14  ???                           \t0x000000011aca13b8 0 + 4744418232\r\n15  ???                           \t0x000000011aca03ad 0 + 4744414125\r\n16  ???                           \t0x000000011cde90c5 0 + 4779315397\r\n17  ???                           \t0x000000011c5950d0 0 + 4770582736\r\n18  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n19  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n20  libcoreclr.dylib              \t0x000000010bdfbc79 ThreadNative::KickOffThread_Worker(void*) + 393\r\n21  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n22  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n23  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n24  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n25  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n26  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n27  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 28:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25f82 WaitForMultipleObjectsEx + 82\r\n6   libcoreclr.dylib              \t0x000000010bdccf00 ThreadpoolMgr::WaitThreadStart(void*) + 608\r\n7   libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n8   libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n9   libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n10  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 29:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25f82 WaitForMultipleObjectsEx + 82\r\n6   libcoreclr.dylib              \t0x000000010bda733d Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1325\r\n7   libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n8   libcoreclr.dylib              \t0x000000010be0b8f1 WaitHandleNative::CorWaitMultipleNative(Object*, int, bool, bool) + 609\r\n9   ???                           \t0x000000011a7d90f5 0 + 4739404021\r\n10  ???                           \t0x000000012134bed9 0 + 4852072153\r\n11  ???                           \t0x000000011c5950d0 0 + 4770582736\r\n12  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n13  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n14  libcoreclr.dylib              \t0x000000010bdfbc79 ThreadNative::KickOffThread_Worker(void*) + 393\r\n15  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n16  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n17  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n18  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n19  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n20  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n21  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 30:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25f82 WaitForMultipleObjectsEx + 82\r\n6   libcoreclr.dylib              \t0x000000010bda733d Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1325\r\n7   libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n8   libcoreclr.dylib              \t0x000000010bec550e CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 62\r\n9   libcoreclr.dylib              \t0x000000010bda81b0 Thread::Block(int, PendingSync*) + 32\r\n10  libcoreclr.dylib              \t0x000000010bd9fd15 SyncBlock::Wait(int, int) + 485\r\n11  libcoreclr.dylib              \t0x000000010bff3599 ObjectNative::WaitTimeout(bool, int, Object*) + 201\r\n12  ???                           \t0x0000000121350cdb 0 + 4852092123\r\n13  ???                           \t0x00000001213509f7 0 + 4852091383\r\n14  ???                           \t0x000000011c595126 0 + 4770582822\r\n15  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n16  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n17  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n18  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n19  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n20  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n21  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n22  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n23  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n24  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 31:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25f82 WaitForMultipleObjectsEx + 82\r\n6   libcoreclr.dylib              \t0x000000010bda733d Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1325\r\n7   libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n8   libcoreclr.dylib              \t0x000000010bec550e CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 62\r\n9   libcoreclr.dylib              \t0x000000010bda81b0 Thread::Block(int, PendingSync*) + 32\r\n10  libcoreclr.dylib              \t0x000000010bd9fd15 SyncBlock::Wait(int, int) + 485\r\n11  libcoreclr.dylib              \t0x000000010bff3599 ObjectNative::WaitTimeout(bool, int, Object*) + 201\r\n12  ???                           \t0x000000011a79b0d2 0 + 4739150034\r\n13  ???                           \t0x000000011a753d87 0 + 4738858375\r\n14  ???                           \t0x000000011a7539df 0 + 4738857439\r\n15  ???                           \t0x0000000121375945 0 + 4852242757\r\n16  ???                           \t0x000000012137507a 0 + 4852240506\r\n17  ???                           \t0x0000000121374fdd 0 + 4852240349\r\n18  ???                           \t0x0000000121374400 0 + 4852237312\r\n19  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n20  ???                           \t0x000000011a75091c 0 + 4738844956\r\n21  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n22  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n23  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n24  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n25  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n26  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n27  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n28  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n29  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n30  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n31  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 32:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25f82 WaitForMultipleObjectsEx + 82\r\n6   libcoreclr.dylib              \t0x000000010bda733d Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1325\r\n7   libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n8   libcoreclr.dylib              \t0x000000010bec550e CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 62\r\n9   libcoreclr.dylib              \t0x000000010bda81b0 Thread::Block(int, PendingSync*) + 32\r\n10  libcoreclr.dylib              \t0x000000010bd9fd15 SyncBlock::Wait(int, int) + 485\r\n11  libcoreclr.dylib              \t0x000000010bff3599 ObjectNative::WaitTimeout(bool, int, Object*) + 201\r\n12  ???                           \t0x000000011acb25cb 0 + 4744488395\r\n13  ???                           \t0x000000011acb2507 0 + 4744488199\r\n14  ???                           \t0x000000011c595126 0 + 4770582822\r\n15  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n16  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n17  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n18  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n19  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n20  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n21  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n22  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n23  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n24  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 33:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21725 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25e68 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x000000010bec5900 CLRLifoSemaphore::WaitForSignal(unsigned int) + 32\r\n7   libcoreclr.dylib              \t0x000000010bec5a9a CLRLifoSemaphore::Wait(unsigned int) + 122\r\n8   libcoreclr.dylib              \t0x000000010bdcc1bb ThreadpoolMgr::WorkerThreadStart(void*) + 1563\r\n9   libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n12  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 34:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21725 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25f82 WaitForMultipleObjectsEx + 82\r\n6   libcoreclr.dylib              \t0x000000010bda71a0 Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 912\r\n7   libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n8   libcoreclr.dylib              \t0x000000010be0b3da WaitHandleNative::CorWaitOneNative(SafeHandle*, int, bool, bool) + 266\r\n9   ???                           \t0x000000011a7d8e9c 0 + 4739403420\r\n10  ???                           \t0x000000011a7d8dcd 0 + 4739403213\r\n11  ???                           \t0x000000011a7d8e40 0 + 4739403328\r\n12  ???                           \t0x0000000121393eff 0 + 4852367103\r\n13  ???                           \t0x000000012138f5df 0 + 4852348383\r\n14  ???                           \t0x000000012137507a 0 + 4852240506\r\n15  ???                           \t0x0000000121374fdd 0 + 4852240349\r\n16  ???                           \t0x0000000121374400 0 + 4852237312\r\n17  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n18  ???                           \t0x000000011a75091c 0 + 4738844956\r\n19  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n20  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n21  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n22  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n23  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n24  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n25  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n26  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n27  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n28  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n29  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 35:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21725 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25f82 WaitForMultipleObjectsEx + 82\r\n6   libcoreclr.dylib              \t0x000000010bda71a0 Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 912\r\n7   libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n8   libcoreclr.dylib              \t0x000000010be0b3da WaitHandleNative::CorWaitOneNative(SafeHandle*, int, bool, bool) + 266\r\n9   ???                           \t0x000000011a7d8e9c 0 + 4739403420\r\n10  ???                           \t0x000000011a7d8dcd 0 + 4739403213\r\n11  ???                           \t0x000000011a7d8e40 0 + 4739403328\r\n12  ???                           \t0x0000000121393eff 0 + 4852367103\r\n13  ???                           \t0x000000012138f7b3 0 + 4852348851\r\n14  ???                           \t0x000000012137507a 0 + 4852240506\r\n15  ???                           \t0x0000000121374fdd 0 + 4852240349\r\n16  ???                           \t0x0000000121374400 0 + 4852237312\r\n17  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n18  ???                           \t0x000000011a75091c 0 + 4738844956\r\n19  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n20  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n21  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n22  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n23  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n24  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n25  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n26  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n27  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n28  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n29  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 36:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21725 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25f82 WaitForMultipleObjectsEx + 82\r\n6   libcoreclr.dylib              \t0x000000010bda71a0 Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 912\r\n7   libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n8   libcoreclr.dylib              \t0x000000010be0b3da WaitHandleNative::CorWaitOneNative(SafeHandle*, int, bool, bool) + 266\r\n9   ???                           \t0x000000011a7d8e9c 0 + 4739403420\r\n10  ???                           \t0x000000011a7d8dcd 0 + 4739403213\r\n11  ???                           \t0x000000011a7d8e40 0 + 4739403328\r\n12  ???                           \t0x00000001213a6d9f 0 + 4852444575\r\n13  ???                           \t0x000000012139032c 0 + 4852351788\r\n14  ???                           \t0x000000012137507a 0 + 4852240506\r\n15  ???                           \t0x0000000121374fdd 0 + 4852240349\r\n16  ???                           \t0x0000000121374400 0 + 4852237312\r\n17  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n18  ???                           \t0x000000011a75091c 0 + 4738844956\r\n19  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n20  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n21  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n22  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n23  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n24  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n25  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n26  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n27  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n28  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n29  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 37:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010becd8fc Thread::WaitSuspendEventsHelper() + 188\r\n8   libcoreclr.dylib              \t0x000000010becc218 Thread::RareEnablePreemptiveGC() + 248\r\n9   libcoreclr.dylib              \t0x000000010becb847 Thread::RareDisablePreemptiveGC() + 343\r\n10  libcoreclr.dylib              \t0x000000010bda7514 Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1796\r\n11  libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n12  libcoreclr.dylib              \t0x000000010be0b8f1 WaitHandleNative::CorWaitMultipleNative(Object*, int, bool, bool) + 609\r\n13  ???                           \t0x000000011a7d90f5 0 + 4739404021\r\n14  ???                           \t0x000000011a7d9178 0 + 4739404152\r\n15  ???                           \t0x000000012139f8e9 0 + 4852414697\r\n16  ???                           \t0x00000001213959e8 0 + 4852373992\r\n17  ???                           \t0x000000012139453f 0 + 4852368703\r\n18  ???                           \t0x000000012137507a 0 + 4852240506\r\n19  ???                           \t0x0000000121374fdd 0 + 4852240349\r\n20  ???                           \t0x0000000121374400 0 + 4852237312\r\n21  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n22  ???                           \t0x000000011a75091c 0 + 4738844956\r\n23  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n24  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n25  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n26  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n27  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n28  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n29  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n30  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n31  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n32  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n33  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 38:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010becd8fc Thread::WaitSuspendEventsHelper() + 188\r\n8   libcoreclr.dylib              \t0x000000010becc218 Thread::RareEnablePreemptiveGC() + 248\r\n9   libcoreclr.dylib              \t0x000000010becb847 Thread::RareDisablePreemptiveGC() + 343\r\n10  libcoreclr.dylib              \t0x000000010bda7514 Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1796\r\n11  libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n12  libcoreclr.dylib              \t0x000000010be0b8f1 WaitHandleNative::CorWaitMultipleNative(Object*, int, bool, bool) + 609\r\n13  ???                           \t0x000000011a7d90f5 0 + 4739404021\r\n14  ???                           \t0x000000011a7d9178 0 + 4739404152\r\n15  ???                           \t0x000000012139f8e9 0 + 4852414697\r\n16  ???                           \t0x00000001213959e8 0 + 4852373992\r\n17  ???                           \t0x000000012139453f 0 + 4852368703\r\n18  ???                           \t0x000000012137507a 0 + 4852240506\r\n19  ???                           \t0x0000000121374fdd 0 + 4852240349\r\n20  ???                           \t0x0000000121374400 0 + 4852237312\r\n21  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n22  ???                           \t0x000000011a75091c 0 + 4738844956\r\n23  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n24  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n25  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n26  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n27  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n28  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n29  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n30  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n31  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n32  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n33  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 39:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010becd8fc Thread::WaitSuspendEventsHelper() + 188\r\n8   libcoreclr.dylib              \t0x000000010becc218 Thread::RareEnablePreemptiveGC() + 248\r\n9   libcoreclr.dylib              \t0x000000010becb847 Thread::RareDisablePreemptiveGC() + 343\r\n10  libcoreclr.dylib              \t0x000000010bda7514 Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1796\r\n11  libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n12  libcoreclr.dylib              \t0x000000010be0b8f1 WaitHandleNative::CorWaitMultipleNative(Object*, int, bool, bool) + 609\r\n13  ???                           \t0x000000011a7d90f5 0 + 4739404021\r\n14  ???                           \t0x000000011a7d9178 0 + 4739404152\r\n15  ???                           \t0x000000012139f8e9 0 + 4852414697\r\n16  ???                           \t0x00000001213959e8 0 + 4852373992\r\n17  ???                           \t0x000000012139453f 0 + 4852368703\r\n18  ???                           \t0x000000012137507a 0 + 4852240506\r\n19  ???                           \t0x0000000121374fdd 0 + 4852240349\r\n20  ???                           \t0x0000000121374400 0 + 4852237312\r\n21  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n22  ???                           \t0x000000011a75091c 0 + 4738844956\r\n23  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n24  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n25  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n26  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n27  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n28  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n29  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n30  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n31  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n32  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n33  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 40:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010becd8fc Thread::WaitSuspendEventsHelper() + 188\r\n8   libcoreclr.dylib              \t0x000000010becc218 Thread::RareEnablePreemptiveGC() + 248\r\n9   libcoreclr.dylib              \t0x000000010becb847 Thread::RareDisablePreemptiveGC() + 343\r\n10  libcoreclr.dylib              \t0x000000010bda7514 Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1796\r\n11  libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n12  libcoreclr.dylib              \t0x000000010be0b8f1 WaitHandleNative::CorWaitMultipleNative(Object*, int, bool, bool) + 609\r\n13  ???                           \t0x000000011a7d90f5 0 + 4739404021\r\n14  ???                           \t0x000000011a7d9178 0 + 4739404152\r\n15  ???                           \t0x000000012139f8e9 0 + 4852414697\r\n16  ???                           \t0x00000001213959e8 0 + 4852373992\r\n17  ???                           \t0x000000012139453f 0 + 4852368703\r\n18  ???                           \t0x000000012137507a 0 + 4852240506\r\n19  ???                           \t0x0000000121374fdd 0 + 4852240349\r\n20  ???                           \t0x0000000121374400 0 + 4852237312\r\n21  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n22  ???                           \t0x000000011a75091c 0 + 4738844956\r\n23  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n24  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n25  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n26  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n27  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n28  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n29  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n30  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n31  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n32  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n33  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 41:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010becd8fc Thread::WaitSuspendEventsHelper() + 188\r\n8   libcoreclr.dylib              \t0x000000010becc218 Thread::RareEnablePreemptiveGC() + 248\r\n9   libcoreclr.dylib              \t0x000000010becb847 Thread::RareDisablePreemptiveGC() + 343\r\n10  libcoreclr.dylib              \t0x000000010bda7514 Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1796\r\n11  libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n12  libcoreclr.dylib              \t0x000000010be0b8f1 WaitHandleNative::CorWaitMultipleNative(Object*, int, bool, bool) + 609\r\n13  ???                           \t0x000000011a7d90f5 0 + 4739404021\r\n14  ???                           \t0x000000011a7d9178 0 + 4739404152\r\n15  ???                           \t0x000000012139f8e9 0 + 4852414697\r\n16  ???                           \t0x00000001213959e8 0 + 4852373992\r\n17  ???                           \t0x000000012139453f 0 + 4852368703\r\n18  ???                           \t0x000000012137507a 0 + 4852240506\r\n19  ???                           \t0x0000000121374fdd 0 + 4852240349\r\n20  ???                           \t0x0000000121374400 0 + 4852237312\r\n21  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n22  ???                           \t0x000000011a75091c 0 + 4738844956\r\n23  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n24  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n25  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n26  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n27  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n28  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n29  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n30  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n31  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n32  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n33  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 42:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010becd8fc Thread::WaitSuspendEventsHelper() + 188\r\n8   libcoreclr.dylib              \t0x000000010becc218 Thread::RareEnablePreemptiveGC() + 248\r\n9   libcoreclr.dylib              \t0x000000010becb847 Thread::RareDisablePreemptiveGC() + 343\r\n10  libcoreclr.dylib              \t0x000000010bda7514 Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1796\r\n11  libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n12  libcoreclr.dylib              \t0x000000010be0b8f1 WaitHandleNative::CorWaitMultipleNative(Object*, int, bool, bool) + 609\r\n13  ???                           \t0x000000011a7d90f5 0 + 4739404021\r\n14  ???                           \t0x000000011a7d9178 0 + 4739404152\r\n15  ???                           \t0x000000012139f8e9 0 + 4852414697\r\n16  ???                           \t0x00000001213959e8 0 + 4852373992\r\n17  ???                           \t0x000000012139453f 0 + 4852368703\r\n18  ???                           \t0x000000012137507a 0 + 4852240506\r\n19  ???                           \t0x0000000121374fdd 0 + 4852240349\r\n20  ???                           \t0x0000000121374400 0 + 4852237312\r\n21  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n22  ???                           \t0x000000011a75091c 0 + 4738844956\r\n23  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n24  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n25  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n26  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n27  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n28  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n29  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n30  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n31  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n32  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n33  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 43:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010becd8fc Thread::WaitSuspendEventsHelper() + 188\r\n8   libcoreclr.dylib              \t0x000000010becc218 Thread::RareEnablePreemptiveGC() + 248\r\n9   libcoreclr.dylib              \t0x000000010becb847 Thread::RareDisablePreemptiveGC() + 343\r\n10  libcoreclr.dylib              \t0x000000010bda7514 Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1796\r\n11  libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n12  libcoreclr.dylib              \t0x000000010be0b8f1 WaitHandleNative::CorWaitMultipleNative(Object*, int, bool, bool) + 609\r\n13  ???                           \t0x000000011a7d90f5 0 + 4739404021\r\n14  ???                           \t0x000000011a7d9178 0 + 4739404152\r\n15  ???                           \t0x000000012139f8e9 0 + 4852414697\r\n16  ???                           \t0x00000001213959e8 0 + 4852373992\r\n17  ???                           \t0x000000012139453f 0 + 4852368703\r\n18  ???                           \t0x000000012137507a 0 + 4852240506\r\n19  ???                           \t0x0000000121374fdd 0 + 4852240349\r\n20  ???                           \t0x0000000121374400 0 + 4852237312\r\n21  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n22  ???                           \t0x000000011a75091c 0 + 4738844956\r\n23  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n24  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n25  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n26  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n27  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n28  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n29  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n30  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n31  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n32  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n33  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 44:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010becd8fc Thread::WaitSuspendEventsHelper() + 188\r\n8   libcoreclr.dylib              \t0x000000010becc218 Thread::RareEnablePreemptiveGC() + 248\r\n9   libcoreclr.dylib              \t0x000000010becb847 Thread::RareDisablePreemptiveGC() + 343\r\n10  libcoreclr.dylib              \t0x000000010bda7514 Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1796\r\n11  libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n12  libcoreclr.dylib              \t0x000000010be0b8f1 WaitHandleNative::CorWaitMultipleNative(Object*, int, bool, bool) + 609\r\n13  ???                           \t0x000000011a7d90f5 0 + 4739404021\r\n14  ???                           \t0x000000011a7d9178 0 + 4739404152\r\n15  ???                           \t0x000000012139f8e9 0 + 4852414697\r\n16  ???                           \t0x00000001213959e8 0 + 4852373992\r\n17  ???                           \t0x000000012139453f 0 + 4852368703\r\n18  ???                           \t0x000000012137507a 0 + 4852240506\r\n19  ???                           \t0x0000000121374fdd 0 + 4852240349\r\n20  ???                           \t0x0000000121374400 0 + 4852237312\r\n21  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n22  ???                           \t0x000000011a75091c 0 + 4738844956\r\n23  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n24  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n25  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n26  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n27  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n28  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n29  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n30  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n31  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n32  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n33  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 45:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010becd8fc Thread::WaitSuspendEventsHelper() + 188\r\n8   libcoreclr.dylib              \t0x000000010becc218 Thread::RareEnablePreemptiveGC() + 248\r\n9   libcoreclr.dylib              \t0x000000010becb847 Thread::RareDisablePreemptiveGC() + 343\r\n10  libcoreclr.dylib              \t0x000000010bda7514 Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1796\r\n11  libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n12  libcoreclr.dylib              \t0x000000010be0b8f1 WaitHandleNative::CorWaitMultipleNative(Object*, int, bool, bool) + 609\r\n13  ???                           \t0x000000011a7d90f5 0 + 4739404021\r\n14  ???                           \t0x000000011a7d9178 0 + 4739404152\r\n15  ???                           \t0x000000012139f8e9 0 + 4852414697\r\n16  ???                           \t0x00000001213959e8 0 + 4852373992\r\n17  ???                           \t0x000000012139453f 0 + 4852368703\r\n18  ???                           \t0x000000012137507a 0 + 4852240506\r\n19  ???                           \t0x0000000121374fdd 0 + 4852240349\r\n20  ???                           \t0x0000000121374400 0 + 4852237312\r\n21  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n22  ???                           \t0x000000011a75091c 0 + 4738844956\r\n23  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n24  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n25  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n26  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n27  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n28  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n29  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n30  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n31  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n32  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n33  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 46:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010becd8fc Thread::WaitSuspendEventsHelper() + 188\r\n8   libcoreclr.dylib              \t0x000000010becc218 Thread::RareEnablePreemptiveGC() + 248\r\n9   libcoreclr.dylib              \t0x000000010becb847 Thread::RareDisablePreemptiveGC() + 343\r\n10  libcoreclr.dylib              \t0x000000010bda7514 Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1796\r\n11  libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n12  libcoreclr.dylib              \t0x000000010be0b8f1 WaitHandleNative::CorWaitMultipleNative(Object*, int, bool, bool) + 609\r\n13  ???                           \t0x000000011a7d90f5 0 + 4739404021\r\n14  ???                           \t0x000000011a7d9178 0 + 4739404152\r\n15  ???                           \t0x000000012139f8e9 0 + 4852414697\r\n16  ???                           \t0x00000001213959e8 0 + 4852373992\r\n17  ???                           \t0x000000012139453f 0 + 4852368703\r\n18  ???                           \t0x000000012137507a 0 + 4852240506\r\n19  ???                           \t0x0000000121374fdd 0 + 4852240349\r\n20  ???                           \t0x0000000121374400 0 + 4852237312\r\n21  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n22  ???                           \t0x000000011a75091c 0 + 4738844956\r\n23  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n24  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n25  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n26  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n27  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n28  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n29  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n30  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n31  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n32  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n33  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 47:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010becd8fc Thread::WaitSuspendEventsHelper() + 188\r\n8   libcoreclr.dylib              \t0x000000010becc218 Thread::RareEnablePreemptiveGC() + 248\r\n9   libcoreclr.dylib              \t0x000000010becb847 Thread::RareDisablePreemptiveGC() + 343\r\n10  libcoreclr.dylib              \t0x000000010bda7514 Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1796\r\n11  libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n12  libcoreclr.dylib              \t0x000000010be0b8f1 WaitHandleNative::CorWaitMultipleNative(Object*, int, bool, bool) + 609\r\n13  ???                           \t0x000000011a7d90f5 0 + 4739404021\r\n14  ???                           \t0x000000011a7d9178 0 + 4739404152\r\n15  ???                           \t0x000000012139f8e9 0 + 4852414697\r\n16  ???                           \t0x00000001213959e8 0 + 4852373992\r\n17  ???                           \t0x000000012139453f 0 + 4852368703\r\n18  ???                           \t0x000000012137507a 0 + 4852240506\r\n19  ???                           \t0x0000000121374fdd 0 + 4852240349\r\n20  ???                           \t0x0000000121374400 0 + 4852237312\r\n21  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n22  ???                           \t0x000000011a75091c 0 + 4738844956\r\n23  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n24  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n25  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n26  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n27  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n28  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n29  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n30  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n31  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n32  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n33  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 48:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010becd8fc Thread::WaitSuspendEventsHelper() + 188\r\n8   libcoreclr.dylib              \t0x000000010becc218 Thread::RareEnablePreemptiveGC() + 248\r\n9   libcoreclr.dylib              \t0x000000010becb847 Thread::RareDisablePreemptiveGC() + 343\r\n10  libcoreclr.dylib              \t0x000000010bda7514 Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1796\r\n11  libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n12  libcoreclr.dylib              \t0x000000010be0b8f1 WaitHandleNative::CorWaitMultipleNative(Object*, int, bool, bool) + 609\r\n13  ???                           \t0x000000011a7d90f5 0 + 4739404021\r\n14  ???                           \t0x000000011a7d9178 0 + 4739404152\r\n15  ???                           \t0x000000012139f8e9 0 + 4852414697\r\n16  ???                           \t0x00000001213959e8 0 + 4852373992\r\n17  ???                           \t0x000000012139453f 0 + 4852368703\r\n18  ???                           \t0x000000012137507a 0 + 4852240506\r\n19  ???                           \t0x0000000121374fdd 0 + 4852240349\r\n20  ???                           \t0x0000000121374400 0 + 4852237312\r\n21  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n22  ???                           \t0x000000011a75091c 0 + 4738844956\r\n23  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n24  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n25  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n26  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n27  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n28  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n29  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n30  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n31  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n32  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n33  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 49:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010becd8fc Thread::WaitSuspendEventsHelper() + 188\r\n8   libcoreclr.dylib              \t0x000000010becc218 Thread::RareEnablePreemptiveGC() + 248\r\n9   libcoreclr.dylib              \t0x000000010becb847 Thread::RareDisablePreemptiveGC() + 343\r\n10  libcoreclr.dylib              \t0x000000010bda7514 Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1796\r\n11  libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n12  libcoreclr.dylib              \t0x000000010be0b8f1 WaitHandleNative::CorWaitMultipleNative(Object*, int, bool, bool) + 609\r\n13  ???                           \t0x000000011a7d90f5 0 + 4739404021\r\n14  ???                           \t0x000000011a7d9178 0 + 4739404152\r\n15  ???                           \t0x000000012139f8e9 0 + 4852414697\r\n16  ???                           \t0x00000001213959e8 0 + 4852373992\r\n17  ???                           \t0x000000012139453f 0 + 4852368703\r\n18  ???                           \t0x000000012137507a 0 + 4852240506\r\n19  ???                           \t0x0000000121374fdd 0 + 4852240349\r\n20  ???                           \t0x0000000121374400 0 + 4852237312\r\n21  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n22  ???                           \t0x000000011a75091c 0 + 4738844956\r\n23  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n24  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n25  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n26  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n27  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n28  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n29  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n30  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n31  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n32  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n33  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 50:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010becd8fc Thread::WaitSuspendEventsHelper() + 188\r\n8   libcoreclr.dylib              \t0x000000010becc218 Thread::RareEnablePreemptiveGC() + 248\r\n9   libcoreclr.dylib              \t0x000000010becb847 Thread::RareDisablePreemptiveGC() + 343\r\n10  libcoreclr.dylib              \t0x000000010bda7514 Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1796\r\n11  libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n12  libcoreclr.dylib              \t0x000000010be0b8f1 WaitHandleNative::CorWaitMultipleNative(Object*, int, bool, bool) + 609\r\n13  ???                           \t0x000000011a7d90f5 0 + 4739404021\r\n14  ???                           \t0x000000011a7d9178 0 + 4739404152\r\n15  ???                           \t0x000000012139f8e9 0 + 4852414697\r\n16  ???                           \t0x00000001213959e8 0 + 4852373992\r\n17  ???                           \t0x000000012139453f 0 + 4852368703\r\n18  ???                           \t0x000000012137507a 0 + 4852240506\r\n19  ???                           \t0x0000000121374fdd 0 + 4852240349\r\n20  ???                           \t0x0000000121374400 0 + 4852237312\r\n21  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n22  ???                           \t0x000000011a75091c 0 + 4738844956\r\n23  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n24  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n25  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n26  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n27  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n28  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n29  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n30  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n31  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n32  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n33  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 51:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010becd8fc Thread::WaitSuspendEventsHelper() + 188\r\n8   libcoreclr.dylib              \t0x000000010becc218 Thread::RareEnablePreemptiveGC() + 248\r\n9   libcoreclr.dylib              \t0x000000010becb847 Thread::RareDisablePreemptiveGC() + 343\r\n10  libcoreclr.dylib              \t0x000000010bda7514 Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1796\r\n11  libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n12  libcoreclr.dylib              \t0x000000010be0b8f1 WaitHandleNative::CorWaitMultipleNative(Object*, int, bool, bool) + 609\r\n13  ???                           \t0x000000011a7d90f5 0 + 4739404021\r\n14  ???                           \t0x000000011a7d9178 0 + 4739404152\r\n15  ???                           \t0x000000012139f8e9 0 + 4852414697\r\n16  ???                           \t0x00000001213959e8 0 + 4852373992\r\n17  ???                           \t0x000000012139453f 0 + 4852368703\r\n18  ???                           \t0x000000012137507a 0 + 4852240506\r\n19  ???                           \t0x0000000121374fdd 0 + 4852240349\r\n20  ???                           \t0x0000000121374400 0 + 4852237312\r\n21  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n22  ???                           \t0x000000011a75091c 0 + 4738844956\r\n23  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n24  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n25  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n26  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n27  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n28  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n29  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n30  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n31  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n32  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n33  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 52:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010becd8fc Thread::WaitSuspendEventsHelper() + 188\r\n8   libcoreclr.dylib              \t0x000000010becc218 Thread::RareEnablePreemptiveGC() + 248\r\n9   libcoreclr.dylib              \t0x000000010becb847 Thread::RareDisablePreemptiveGC() + 343\r\n10  libcoreclr.dylib              \t0x000000010bda7514 Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1796\r\n11  libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n12  libcoreclr.dylib              \t0x000000010be0b8f1 WaitHandleNative::CorWaitMultipleNative(Object*, int, bool, bool) + 609\r\n13  ???                           \t0x000000011a7d90f5 0 + 4739404021\r\n14  ???                           \t0x000000011a7d9178 0 + 4739404152\r\n15  ???                           \t0x000000012139f8e9 0 + 4852414697\r\n16  ???                           \t0x00000001213959e8 0 + 4852373992\r\n17  ???                           \t0x000000012139453f 0 + 4852368703\r\n18  ???                           \t0x000000012137507a 0 + 4852240506\r\n19  ???                           \t0x0000000121374fdd 0 + 4852240349\r\n20  ???                           \t0x0000000121374400 0 + 4852237312\r\n21  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n22  ???                           \t0x000000011a75091c 0 + 4738844956\r\n23  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n24  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n25  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n26  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n27  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n28  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n29  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n30  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n31  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n32  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n33  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 53:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010becd8fc Thread::WaitSuspendEventsHelper() + 188\r\n8   libcoreclr.dylib              \t0x000000010becc218 Thread::RareEnablePreemptiveGC() + 248\r\n9   libcoreclr.dylib              \t0x000000010becb847 Thread::RareDisablePreemptiveGC() + 343\r\n10  libcoreclr.dylib              \t0x000000010bda7514 Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1796\r\n11  libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n12  libcoreclr.dylib              \t0x000000010be0b8f1 WaitHandleNative::CorWaitMultipleNative(Object*, int, bool, bool) + 609\r\n13  ???                           \t0x000000011a7d90f5 0 + 4739404021\r\n14  ???                           \t0x000000011a7d9178 0 + 4739404152\r\n15  ???                           \t0x000000012139f8e9 0 + 4852414697\r\n16  ???                           \t0x00000001213959e8 0 + 4852373992\r\n17  ???                           \t0x000000012139453f 0 + 4852368703\r\n18  ???                           \t0x000000012137507a 0 + 4852240506\r\n19  ???                           \t0x0000000121374fdd 0 + 4852240349\r\n20  ???                           \t0x0000000121374400 0 + 4852237312\r\n21  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n22  ???                           \t0x000000011a75091c 0 + 4738844956\r\n23  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n24  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n25  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n26  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n27  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n28  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n29  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n30  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n31  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n32  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n33  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 54:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010becd8fc Thread::WaitSuspendEventsHelper() + 188\r\n8   libcoreclr.dylib              \t0x000000010becc218 Thread::RareEnablePreemptiveGC() + 248\r\n9   libcoreclr.dylib              \t0x000000010becb847 Thread::RareDisablePreemptiveGC() + 343\r\n10  libcoreclr.dylib              \t0x000000010bda7514 Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1796\r\n11  libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n12  libcoreclr.dylib              \t0x000000010be0b8f1 WaitHandleNative::CorWaitMultipleNative(Object*, int, bool, bool) + 609\r\n13  ???                           \t0x000000011a7d90f5 0 + 4739404021\r\n14  ???                           \t0x000000011a7d9178 0 + 4739404152\r\n15  ???                           \t0x000000012139f8e9 0 + 4852414697\r\n16  ???                           \t0x00000001213959e8 0 + 4852373992\r\n17  ???                           \t0x000000012139453f 0 + 4852368703\r\n18  ???                           \t0x000000012137507a 0 + 4852240506\r\n19  ???                           \t0x0000000121374fdd 0 + 4852240349\r\n20  ???                           \t0x0000000121374400 0 + 4852237312\r\n21  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n22  ???                           \t0x000000011a75091c 0 + 4738844956\r\n23  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n24  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n25  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n26  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n27  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n28  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n29  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n30  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n31  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n32  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n33  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 55:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010becd8fc Thread::WaitSuspendEventsHelper() + 188\r\n8   libcoreclr.dylib              \t0x000000010becc218 Thread::RareEnablePreemptiveGC() + 248\r\n9   libcoreclr.dylib              \t0x000000010becb847 Thread::RareDisablePreemptiveGC() + 343\r\n10  libcoreclr.dylib              \t0x000000010bda7514 Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1796\r\n11  libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n12  libcoreclr.dylib              \t0x000000010be0b8f1 WaitHandleNative::CorWaitMultipleNative(Object*, int, bool, bool) + 609\r\n13  ???                           \t0x000000011a7d90f5 0 + 4739404021\r\n14  ???                           \t0x000000011a7d9178 0 + 4739404152\r\n15  ???                           \t0x000000012139f8e9 0 + 4852414697\r\n16  ???                           \t0x00000001213959e8 0 + 4852373992\r\n17  ???                           \t0x000000012139453f 0 + 4852368703\r\n18  ???                           \t0x000000012137507a 0 + 4852240506\r\n19  ???                           \t0x0000000121374fdd 0 + 4852240349\r\n20  ???                           \t0x0000000121374400 0 + 4852237312\r\n21  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n22  ???                           \t0x000000011a75091c 0 + 4738844956\r\n23  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n24  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n25  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n26  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n27  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n28  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n29  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n30  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n31  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n32  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n33  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 56:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010becd8fc Thread::WaitSuspendEventsHelper() + 188\r\n8   libcoreclr.dylib              \t0x000000010becc218 Thread::RareEnablePreemptiveGC() + 248\r\n9   libcoreclr.dylib              \t0x000000010becb847 Thread::RareDisablePreemptiveGC() + 343\r\n10  libcoreclr.dylib              \t0x000000010bda7514 Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1796\r\n11  libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n12  libcoreclr.dylib              \t0x000000010be0b8f1 WaitHandleNative::CorWaitMultipleNative(Object*, int, bool, bool) + 609\r\n13  ???                           \t0x000000011a7d90f5 0 + 4739404021\r\n14  ???                           \t0x000000011a7d9178 0 + 4739404152\r\n15  ???                           \t0x000000012139f8e9 0 + 4852414697\r\n16  ???                           \t0x00000001213959e8 0 + 4852373992\r\n17  ???                           \t0x000000012139453f 0 + 4852368703\r\n18  ???                           \t0x000000012137507a 0 + 4852240506\r\n19  ???                           \t0x0000000121374fdd 0 + 4852240349\r\n20  ???                           \t0x0000000121374400 0 + 4852237312\r\n21  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n22  ???                           \t0x000000011a75091c 0 + 4738844956\r\n23  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n24  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n25  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n26  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n27  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n28  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n29  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n30  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n31  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n32  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n33  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 57:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010becd8fc Thread::WaitSuspendEventsHelper() + 188\r\n8   libcoreclr.dylib              \t0x000000010becc218 Thread::RareEnablePreemptiveGC() + 248\r\n9   libcoreclr.dylib              \t0x000000010becb847 Thread::RareDisablePreemptiveGC() + 343\r\n10  libcoreclr.dylib              \t0x000000010bda7514 Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1796\r\n11  libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n12  libcoreclr.dylib              \t0x000000010be0b3da WaitHandleNative::CorWaitOneNative(SafeHandle*, int, bool, bool) + 266\r\n13  ???                           \t0x000000011a7d8e9c 0 + 4739403420\r\n14  ???                           \t0x000000011a7d8dcd 0 + 4739403213\r\n15  ???                           \t0x000000011a7d8e40 0 + 4739403328\r\n16  ???                           \t0x0000000121393eff 0 + 4852367103\r\n17  ???                           \t0x00000001213a572b 0 + 4852438827\r\n18  ???                           \t0x000000012137507a 0 + 4852240506\r\n19  ???                           \t0x0000000121374fdd 0 + 4852240349\r\n20  ???                           \t0x0000000121374400 0 + 4852237312\r\n21  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n22  ???                           \t0x000000011a75091c 0 + 4738844956\r\n23  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n24  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n25  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n26  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n27  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n28  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n29  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n30  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n31  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n32  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n33  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 58:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010becd8fc Thread::WaitSuspendEventsHelper() + 188\r\n8   libcoreclr.dylib              \t0x000000010becc218 Thread::RareEnablePreemptiveGC() + 248\r\n9   libcoreclr.dylib              \t0x000000010becb847 Thread::RareDisablePreemptiveGC() + 343\r\n10  libcoreclr.dylib              \t0x000000010bda7514 Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1796\r\n11  libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n12  libcoreclr.dylib              \t0x000000010be0b3da WaitHandleNative::CorWaitOneNative(SafeHandle*, int, bool, bool) + 266\r\n13  ???                           \t0x000000011a7d8e9c 0 + 4739403420\r\n14  ???                           \t0x000000011a7d8dcd 0 + 4739403213\r\n15  ???                           \t0x000000011a7d8e40 0 + 4739403328\r\n16  ???                           \t0x0000000121393eff 0 + 4852367103\r\n17  ???                           \t0x00000001213a638a 0 + 4852441994\r\n18  ???                           \t0x00000001213a5bca 0 + 4852440010\r\n19  ???                           \t0x00000001213a5512 0 + 4852438290\r\n20  ???                           \t0x000000012137507a 0 + 4852240506\r\n21  ???                           \t0x0000000121374fdd 0 + 4852240349\r\n22  ???                           \t0x0000000121374400 0 + 4852237312\r\n23  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n24  ???                           \t0x000000011a75091c 0 + 4738844956\r\n25  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n26  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n27  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n28  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n29  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n30  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n31  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n32  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n33  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n34  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n35  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 59:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6622a mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff67d6676c mach_msg + 60\r\n2   com.apple.CoreFoundation      \t0x00007fff3bd03bee __CFRunLoopServiceMachPort + 328\r\n3   com.apple.CoreFoundation      \t0x00007fff3bd0315c __CFRunLoopRun + 1612\r\n4   com.apple.CoreFoundation      \t0x00007fff3bd028be CFRunLoopRunSpecific + 455\r\n5   com.apple.CoreFoundation      \t0x00007fff3bd026d2 CFRunLoopRun + 40\r\n6   ???                           \t0x000000011ac91cc3 0 + 4744355011\r\n7   ???                           \t0x000000011c31c271 0 + 4767990385\r\n8   ???                           \t0x000000011c595126 0 + 4770582822\r\n9   libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n10  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n11  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n12  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n13  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n14  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n15  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n16  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n17  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n18  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 60:\r\n0   libsystem_pthread.dylib       \t0x00007fff67e243f0 start_wqthread + 0\r\n\r\nThread 61:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6622a mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff67d6676c mach_msg + 60\r\n2   com.apple.CoreFoundation      \t0x00007fff3bd03bee __CFRunLoopServiceMachPort + 328\r\n3   com.apple.CoreFoundation      \t0x00007fff3bd0315c __CFRunLoopRun + 1612\r\n4   com.apple.CoreFoundation      \t0x00007fff3bd028be CFRunLoopRunSpecific + 455\r\n5   com.apple.CoreFoundation      \t0x00007fff3bd026d2 CFRunLoopRun + 40\r\n6   ???                           \t0x000000011ac91cc3 0 + 4744355011\r\n7   ???                           \t0x000000011c31c271 0 + 4767990385\r\n8   ???                           \t0x000000011c595126 0 + 4770582822\r\n9   libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n10  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n11  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n12  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n13  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n14  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n15  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n16  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n17  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n18  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 62:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25f82 WaitForMultipleObjectsEx + 82\r\n6   libcoreclr.dylib              \t0x000000010bda733d Thread::DoAppropriateWaitWorker(int, void**, int, unsigned int, WaitMode) + 1325\r\n7   libcoreclr.dylib              \t0x000000010bda1fa0 Thread::DoAppropriateWait(int, void**, int, unsigned int, WaitMode, PendingSync*) + 48\r\n8   libcoreclr.dylib              \t0x000000010bec550e CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 62\r\n9   libcoreclr.dylib              \t0x000000010bda81b0 Thread::Block(int, PendingSync*) + 32\r\n10  libcoreclr.dylib              \t0x000000010bd9fd15 SyncBlock::Wait(int, int) + 485\r\n11  libcoreclr.dylib              \t0x000000010bff3599 ObjectNative::WaitTimeout(bool, int, Object*) + 201\r\n12  ???                           \t0x000000011acb25cb 0 + 4744488395\r\n13  ???                           \t0x000000011acb2507 0 + 4744488199\r\n14  ???                           \t0x000000011c595126 0 + 4770582822\r\n15  libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n16  libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n17  libcoreclr.dylib              \t0x000000010bdfbc9f ThreadNative::KickOffThread_Worker(void*) + 431\r\n18  libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n19  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n20  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n21  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n22  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n23  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n24  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 63:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21725 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25e68 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x000000010bec5900 CLRLifoSemaphore::WaitForSignal(unsigned int) + 32\r\n7   libcoreclr.dylib              \t0x000000010bec5a9a CLRLifoSemaphore::Wait(unsigned int) + 122\r\n8   libcoreclr.dylib              \t0x000000010bdcc1bb ThreadpoolMgr::WorkerThreadStart(void*) + 1563\r\n9   libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n12  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 64:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21725 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25e68 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x000000010bec5900 CLRLifoSemaphore::WaitForSignal(unsigned int) + 32\r\n7   libcoreclr.dylib              \t0x000000010bec5a9a CLRLifoSemaphore::Wait(unsigned int) + 122\r\n8   libcoreclr.dylib              \t0x000000010bdcc1bb ThreadpoolMgr::WorkerThreadStart(void*) + 1563\r\n9   libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n12  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 65:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21725 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25e68 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x000000010bec5900 CLRLifoSemaphore::WaitForSignal(unsigned int) + 32\r\n7   libcoreclr.dylib              \t0x000000010bec5a9a CLRLifoSemaphore::Wait(unsigned int) + 122\r\n8   libcoreclr.dylib              \t0x000000010bdcc1bb ThreadpoolMgr::WorkerThreadStart(void*) + 1563\r\n9   libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n12  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 66:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010becd8fc Thread::WaitSuspendEventsHelper() + 188\r\n8   libcoreclr.dylib              \t0x000000010becc218 Thread::RareEnablePreemptiveGC() + 248\r\n9   libcoreclr.dylib              \t0x000000010becb847 Thread::RareDisablePreemptiveGC() + 343\r\n10  libcoreclr.dylib              \t0x000000010bd54f07 invokeCompileMethod(EEJitManager*, CEEInfo*, CORINFO_METHOD_INFO*, CORJIT_FLAGS, unsigned char**, unsigned int*) + 167\r\n11  libcoreclr.dylib              \t0x000000010bd54fc8 CallCompileMethodWithSEHWrapper(EEJitManager*, CEEInfo*, CORINFO_METHOD_INFO*, CORJIT_FLAGS, unsigned char**, unsigned int*, MethodDesc*) + 40\r\n12  libcoreclr.dylib              \t0x000000010bd5582d UnsafeJitFunction(MethodDesc*, COR_ILMETHOD_DECODER*, CORJIT_FLAGS, unsigned int*) + 1277\r\n13  libcoreclr.dylib              \t0x000000010bd829ad MethodDesc::JitCompileCodeLocked(PrepareCodeConfig*, ListLockEntryBase<NativeCodeVersion>*, unsigned int*, CORJIT_FLAGS*) + 269\r\n14  libcoreclr.dylib              \t0x000000010bd82740 MethodDesc::JitCompileCodeLockedEventWrapper(PrepareCodeConfig*, ListLockEntryBase<NativeCodeVersion>*) + 560\r\n15  libcoreclr.dylib              \t0x000000010bd81cfe MethodDesc::JitCompileCode(PrepareCodeConfig*) + 366\r\n16  libcoreclr.dylib              \t0x000000010bd81aea MethodDesc::PrepareILBasedCode(PrepareCodeConfig*) + 154\r\n17  libcoreclr.dylib              \t0x000000010bd841ec MethodDesc::DoPrestub(MethodTable*) + 1020\r\n18  libcoreclr.dylib              \t0x000000010bd83b70 PreStubWorker + 416\r\n19  libcoreclr.dylib              \t0x000000010bf7c5cd ThePreStub + 92\r\n20  ???                           \t0x00000001231ab726 0 + 4883920678\r\n21  ???                           \t0x000000011a7a7bdb 0 + 4739202011\r\n22  ???                           \t0x00000001231ab4c3 0 + 4883920067\r\n23  ???                           \t0x00000001231ab23e 0 + 4883919422\r\n24  ???                           \t0x000000011a7a7bdb 0 + 4739202011\r\n25  ???                           \t0x00000001231aac84 0 + 4883917956\r\n26  ???                           \t0x00000001231a8ee1 0 + 4883910369\r\n27  ???                           \t0x000000011a7a7bdb 0 + 4739202011\r\n28  ???                           \t0x00000001231a8694 0 + 4883908244\r\n29  ???                           \t0x000000012347b68e 0 + 4886869646\r\n30  ???                           \t0x000000011c19bf83 0 + 4766416771\r\n31  ???                           \t0x0000000121439a4b 0 + 4853045835\r\n32  ???                           \t0x000000011c1a7c96 0 + 4766465174\r\n33  ???                           \t0x000000011c1a97e2 0 + 4766472162\r\n34  ???                           \t0x000000012140d9db 0 + 4852865499\r\n35  ???                           \t0x000000012140d969 0 + 4852865385\r\n36  ???                           \t0x000000011c172932 0 + 4766247218\r\n37  ???                           \t0x000000011c1a9284 0 + 4766470788\r\n38  ???                           \t0x000000012140d41b 0 + 4852864027\r\n39  ???                           \t0x000000012140d3a9 0 + 4852863913\r\n40  ???                           \t0x000000011c172872 0 + 4766247026\r\n41  ???                           \t0x000000011c1a9284 0 + 4766470788\r\n42  ???                           \t0x000000012140d41b 0 + 4852864027\r\n43  ???                           \t0x000000012140d3a9 0 + 4852863913\r\n44  ???                           \t0x000000011c1a9499 0 + 4766471321\r\n45  ???                           \t0x000000012140d25b 0 + 4852863579\r\n46  ???                           \t0x000000011c172a98 0 + 4766247576\r\n47  ???                           \t0x000000011e9e5aa2 0 + 4808661666\r\n48  ???                           \t0x000000012140d0eb 0 + 4852863211\r\n49  ???                           \t0x000000012140d071 0 + 4852863089\r\n50  ???                           \t0x000000011c1721a8 0 + 4766245288\r\n51  ???                           \t0x000000011c172633 0 + 4766246451\r\n52  ???                           \t0x000000011c1a9b37 0 + 4766473015\r\n53  ???                           \t0x000000012140c9fb 0 + 4852861435\r\n54  ???                           \t0x000000012140c989 0 + 4852861321\r\n55  ???                           \t0x000000011c183b1b 0 + 4766317339\r\n56  ???                           \t0x000000011c1ac2c4 0 + 4766483140\r\n57  ???                           \t0x000000012140c83b 0 + 4852860987\r\n58  ???                           \t0x000000012140c7c9 0 + 4852860873\r\n59  ???                           \t0x000000011c183519 0 + 4766315801\r\n60  ???                           \t0x000000011c1abc47 0 + 4766481479\r\n61  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n62  ???                           \t0x000000012140c0f0 0 + 4852859120\r\n63  ???                           \t0x000000011a79c1c7 0 + 4739154375\r\n64  ???                           \t0x000000011a751c1e 0 + 4738849822\r\n65  ???                           \t0x000000011a7d7e0c 0 + 4739399180\r\n66  ???                           \t0x000000011a7aaf4f 0 + 4739215183\r\n67  ???                           \t0x000000011a8601ca 0 + 4739957194\r\n68  ???                           \t0x000000011c1afeca 0 + 4766498506\r\n69  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n70  ???                           \t0x0000000121409d50 0 + 4852850000\r\n71  ???                           \t0x000000011a79c1c7 0 + 4739154375\r\n72  ???                           \t0x000000011a751c1e 0 + 4738849822\r\n73  ???                           \t0x000000011a7a18d6 0 + 4739176662\r\n74  ???                           \t0x000000011a7ddffb 0 + 4739424251\r\n75  ???                           \t0x000000011e853399 0 + 4807013273\r\n76  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n77  ???                           \t0x00000001231a78e1 0 + 4883904737\r\n78  ???                           \t0x000000011a79c1c7 0 + 4739154375\r\n79  ???                           \t0x000000011a751c1e 0 + 4738849822\r\n80  ???                           \t0x000000011a7a18d6 0 + 4739176662\r\n81  ???                           \t0x000000011a7ddffb 0 + 4739424251\r\n82  ???                           \t0x000000011dafbbe7 0 + 4793023463\r\n83  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n84  ???                           \t0x00000001231a7631 0 + 4883904049\r\n85  ???                           \t0x000000011a79c1c7 0 + 4739154375\r\n86  ???                           \t0x000000011a751c1e 0 + 4738849822\r\n87  ???                           \t0x000000011a7d7e0c 0 + 4739399180\r\n88  ???                           \t0x000000011a7aaf4f 0 + 4739215183\r\n89  ???                           \t0x000000011a8601ca 0 + 4739957194\r\n90  ???                           \t0x000000011dafac84 0 + 4793019524\r\n91  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n92  ???                           \t0x00000001231a734a 0 + 4883903306\r\n93  ???                           \t0x000000011a79c1c7 0 + 4739154375\r\n94  ???                           \t0x000000011a751c1e 0 + 4738849822\r\n95  ???                           \t0x000000011a7d7e0c 0 + 4739399180\r\n96  ???                           \t0x000000011a7aaf4f 0 + 4739215183\r\n97  ???                           \t0x000000011a8601ca 0 + 4739957194\r\n98  ???                           \t0x00000001231a0a75 0 + 4883876469\r\n99  ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n100 ???                           \t0x000000011a8f4e08 0 + 4740566536\r\n101 ???                           \t0x000000011a79c1c7 0 + 4739154375\r\n102 ???                           \t0x000000011a751c1e 0 + 4738849822\r\n103 ???                           \t0x000000011a7f159a 0 + 4739503514\r\n104 ???                           \t0x000000011a7d97af 0 + 4739405743\r\n105 ???                           \t0x000000011a7d9c09 0 + 4739406857\r\n106 ???                           \t0x000000012316bf93 0 + 4883660691\r\n107 ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n108 ???                           \t0x000000011a8f6d18 0 + 4740574488\r\n109 ???                           \t0x000000011a79c1c7 0 + 4739154375\r\n110 ???                           \t0x000000011a751c1e 0 + 4738849822\r\n111 ???                           \t0x000000011a7a18d6 0 + 4739176662\r\n112 ???                           \t0x00000001231705a4 0 + 4883678628\r\n113 ???                           \t0x000000011a751c56 0 + 4738849878\r\n114 ???                           \t0x000000011a7f159a 0 + 4739503514\r\n115 ???                           \t0x000000011a7d97af 0 + 4739405743\r\n116 ???                           \t0x000000011a7d9c09 0 + 4739406857\r\n117 ???                           \t0x000000011b6c7309 0 + 4755059465\r\n118 ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n119 ???                           \t0x000000012111431a 0 + 4849746714\r\n120 ???                           \t0x000000011a79c1c7 0 + 4739154375\r\n121 ???                           \t0x000000011a751c1e 0 + 4738849822\r\n122 ???                           \t0x000000011a7f159a 0 + 4739503514\r\n123 ???                           \t0x000000011a7d97af 0 + 4739405743\r\n124 ???                           \t0x000000011a7d9c09 0 + 4739406857\r\n125 ???                           \t0x000000011aed591c 0 + 4746729756\r\n126 ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n127 ???                           \t0x000000012111149a 0 + 4849734810\r\n128 ???                           \t0x000000011a79c1c7 0 + 4739154375\r\n129 ???                           \t0x000000011a751c1e 0 + 4738849822\r\n130 ???                           \t0x000000011a7a18d6 0 + 4739176662\r\n131 ???                           \t0x000000011a7ddffb 0 + 4739424251\r\n132 ???                           \t0x000000011b1e2c07 0 + 4749929479\r\n133 ???                           \t0x000000011a70dd0d 0 + 4738571533\r\n134 ???                           \t0x00000001210f81aa 0 + 4849631658\r\n135 ???                           \t0x000000011a79e278 0 + 4739162744\r\n136 libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n137 libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n138 libcoreclr.dylib              \t0x000000010be02545 QueueUserWorkItemManagedCallback(void*) + 165\r\n139 libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n140 libcoreclr.dylib              \t0x000000010bdacb23 ManagedThreadBase::ThreadPool(ADID, void (*)(void*), void*) + 51\r\n141 libcoreclr.dylib              \t0x000000010bda16e0 ManagedPerAppDomainTPCount::DispatchWorkItem(bool*, bool*) + 272\r\n142 libcoreclr.dylib              \t0x000000010bdcc0b5 ThreadpoolMgr::WorkerThreadStart(void*) + 1301\r\n143 libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n144 libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n145 libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n146 libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 67:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010becd8fc Thread::WaitSuspendEventsHelper() + 188\r\n8   libcoreclr.dylib              \t0x000000010becc218 Thread::RareEnablePreemptiveGC() + 248\r\n9   libcoreclr.dylib              \t0x000000010becb847 Thread::RareDisablePreemptiveGC() + 343\r\n10  libcoreclr.dylib              \t0x000000010be03aa8 AppDomainTimerCallback(void*, unsigned char) + 200\r\n11  libcoreclr.dylib              \t0x000000010bdcf930 ThreadpoolMgr::AsyncTimerCallbackCompletion(void*) + 160\r\n12  libcoreclr.dylib              \t0x000000010bda13a6 UnManagedPerAppDomainTPCount::DispatchWorkItem(bool*, bool*) + 422\r\n13  libcoreclr.dylib              \t0x000000010bdcc0b5 ThreadpoolMgr::WorkerThreadStart(void*) + 1301\r\n14  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n15  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n16  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n17  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 68:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21725 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25e68 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x000000010bec5900 CLRLifoSemaphore::WaitForSignal(unsigned int) + 32\r\n7   libcoreclr.dylib              \t0x000000010bec5a9a CLRLifoSemaphore::Wait(unsigned int) + 122\r\n8   libcoreclr.dylib              \t0x000000010bdcc1bb ThreadpoolMgr::WorkerThreadStart(void*) + 1563\r\n9   libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n12  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 69:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21725 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25e68 PAL_WaitForSingleObjectPrioritized + 72\r\n6   libcoreclr.dylib              \t0x000000010bec5900 CLRLifoSemaphore::WaitForSignal(unsigned int) + 32\r\n7   libcoreclr.dylib              \t0x000000010bec5a9a CLRLifoSemaphore::Wait(unsigned int) + 122\r\n8   libcoreclr.dylib              \t0x000000010bdcc1bb ThreadpoolMgr::WorkerThreadStart(void*) + 1563\r\n9   libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n10  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n11  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n12  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 70:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010becd8fc Thread::WaitSuspendEventsHelper() + 188\r\n8   libcoreclr.dylib              \t0x000000010becc218 Thread::RareEnablePreemptiveGC() + 248\r\n9   libcoreclr.dylib              \t0x000000010becb847 Thread::RareDisablePreemptiveGC() + 343\r\n10  libcoreclr.dylib              \t0x000000010be03aa8 AppDomainTimerCallback(void*, unsigned char) + 200\r\n11  libcoreclr.dylib              \t0x000000010bdcf930 ThreadpoolMgr::AsyncTimerCallbackCompletion(void*) + 160\r\n12  libcoreclr.dylib              \t0x000000010bda13a6 UnManagedPerAppDomainTPCount::DispatchWorkItem(bool*, bool*) + 422\r\n13  libcoreclr.dylib              \t0x000000010bdcc0b5 ThreadpoolMgr::WorkerThreadStart(void*) + 1301\r\n14  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n15  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n16  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n17  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 71:: default-executor\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libgrpc_csharp_ext.x64.dylib  \t0x000000011954b6f8 gpr_cv_wait + 120\r\n3   libgrpc_csharp_ext.x64.dylib  \t0x00000001194be498 GrpcExecutor::ThreadMain(void*) + 536\r\n4   libgrpc_csharp_ext.x64.dylib  \t0x000000011954cc7d grpc_core::(anonymous namespace)::ThreadInternalsPosix::ThreadInternalsPosix(char const*, void (*)(void*), void*, bool*)::'lambda'(void*)::__invoke(void*) + 125\r\n5   libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n6   libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n7   libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 72:: resolver-executor\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libgrpc_csharp_ext.x64.dylib  \t0x000000011954b6f8 gpr_cv_wait + 120\r\n3   libgrpc_csharp_ext.x64.dylib  \t0x00000001194be498 GrpcExecutor::ThreadMain(void*) + 536\r\n4   libgrpc_csharp_ext.x64.dylib  \t0x000000011954cc7d grpc_core::(anonymous namespace)::ThreadInternalsPosix::ThreadInternalsPosix(char const*, void (*)(void*), void*, bool*)::'lambda'(void*)::__invoke(void*) + 125\r\n5   libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n6   libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n7   libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 73:: grpc_global_timer\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libgrpc_csharp_ext.x64.dylib  \t0x000000011954b6f8 gpr_cv_wait + 120\r\n3   libgrpc_csharp_ext.x64.dylib  \t0x00000001194cb26b timer_thread(void*) + 587\r\n4   libgrpc_csharp_ext.x64.dylib  \t0x000000011954cc7d grpc_core::(anonymous namespace)::ThreadInternalsPosix::ThreadInternalsPosix(char const*, void (*)(void*), void*, bool*)::'lambda'(void*)::__invoke(void*) + 125\r\n5   libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n6   libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n7   libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 74:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6e36e poll + 10\r\n1   libgrpc_csharp_ext.x64.dylib  \t0x00000001194ba866 pollset_work(grpc_pollset*, grpc_pollset_worker**, long long) + 1302\r\n2   libgrpc_csharp_ext.x64.dylib  \t0x00000001194daedb cq_next(grpc_completion_queue*, gpr_timespec, void*) + 507\r\n3   ???                           \t0x0000000123183e65 0 + 4883758693\r\n4   ???                           \t0x0000000123189b01 0 + 4883782401\r\n5   ???                           \t0x000000011c5950d0 0 + 4770582736\r\n6   libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n7   libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n8   libcoreclr.dylib              \t0x000000010bdfbc79 ThreadNative::KickOffThread_Worker(void*) + 393\r\n9   libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n10  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n11  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n12  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n13  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n14  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n15  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 75:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6e36e poll + 10\r\n1   libgrpc_csharp_ext.x64.dylib  \t0x00000001194ba866 pollset_work(grpc_pollset*, grpc_pollset_worker**, long long) + 1302\r\n2   libgrpc_csharp_ext.x64.dylib  \t0x00000001194daedb cq_next(grpc_completion_queue*, gpr_timespec, void*) + 507\r\n3   ???                           \t0x0000000123183e65 0 + 4883758693\r\n4   ???                           \t0x0000000123189b01 0 + 4883782401\r\n5   ???                           \t0x000000011c5950d0 0 + 4770582736\r\n6   libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n7   libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n8   libcoreclr.dylib              \t0x000000010bdfbc79 ThreadNative::KickOffThread_Worker(void*) + 393\r\n9   libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n10  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n11  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n12  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n13  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n14  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n15  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 76:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6e36e poll + 10\r\n1   libgrpc_csharp_ext.x64.dylib  \t0x00000001194ba866 pollset_work(grpc_pollset*, grpc_pollset_worker**, long long) + 1302\r\n2   libgrpc_csharp_ext.x64.dylib  \t0x00000001194daedb cq_next(grpc_completion_queue*, gpr_timespec, void*) + 507\r\n3   ???                           \t0x0000000123183e65 0 + 4883758693\r\n4   ???                           \t0x0000000123189b01 0 + 4883782401\r\n5   ???                           \t0x000000011c5950d0 0 + 4770582736\r\n6   libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n7   libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n8   libcoreclr.dylib              \t0x000000010bdfbc79 ThreadNative::KickOffThread_Worker(void*) + 393\r\n9   libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n10  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n11  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n12  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n13  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n14  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n15  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 77:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6e36e poll + 10\r\n1   libgrpc_csharp_ext.x64.dylib  \t0x00000001194ba866 pollset_work(grpc_pollset*, grpc_pollset_worker**, long long) + 1302\r\n2   libgrpc_csharp_ext.x64.dylib  \t0x00000001194daedb cq_next(grpc_completion_queue*, gpr_timespec, void*) + 507\r\n3   ???                           \t0x0000000123183e65 0 + 4883758693\r\n4   ???                           \t0x0000000123189b01 0 + 4883782401\r\n5   ???                           \t0x000000011c5950d0 0 + 4770582736\r\n6   libcoreclr.dylib              \t0x000000010bf7b8c7 CallDescrWorkerInternal + 124\r\n7   libcoreclr.dylib              \t0x000000010bde808d MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 909\r\n8   libcoreclr.dylib              \t0x000000010bdfbc79 ThreadNative::KickOffThread_Worker(void*) + 393\r\n9   libcoreclr.dylib              \t0x000000010bdac551 ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 385\r\n10  libcoreclr.dylib              \t0x000000010bdacae3 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n11  libcoreclr.dylib              \t0x000000010bdfbe81 ThreadNative::KickOffThread(void*) + 289\r\n12  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n13  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n14  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n15  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 78:: grpc_global_timer\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libgrpc_csharp_ext.x64.dylib  \t0x000000011954b6e6 gpr_cv_wait + 102\r\n3   libgrpc_csharp_ext.x64.dylib  \t0x00000001194cb26b timer_thread(void*) + 587\r\n4   libgrpc_csharp_ext.x64.dylib  \t0x000000011954cc7d grpc_core::(anonymous namespace)::ThreadInternalsPosix::ThreadInternalsPosix(char const*, void (*)(void*), void*, bool*)::'lambda'(void*)::__invoke(void*) + 125\r\n5   libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n6   libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n7   libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 79:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21762 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 338\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc25cf3 CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 1891\r\n5   libcoreclr.dylib              \t0x000000010bc25ebd WaitForSingleObjectEx + 77\r\n6   libcoreclr.dylib              \t0x000000010bec5580 CLREventBase::WaitEx(unsigned int, WaitMode, PendingSync*) + 176\r\n7   libcoreclr.dylib              \t0x000000010becd8fc Thread::WaitSuspendEventsHelper() + 188\r\n8   libcoreclr.dylib              \t0x000000010becc218 Thread::RareEnablePreemptiveGC() + 248\r\n9   libcoreclr.dylib              \t0x000000010becb847 Thread::RareDisablePreemptiveGC() + 343\r\n10  libcoreclr.dylib              \t0x000000010be03aa8 AppDomainTimerCallback(void*, unsigned char) + 200\r\n11  libcoreclr.dylib              \t0x000000010bdcf930 ThreadpoolMgr::AsyncTimerCallbackCompletion(void*) + 160\r\n12  libcoreclr.dylib              \t0x000000010bda13a6 UnManagedPerAppDomainTPCount::DispatchWorkItem(bool*, bool*) + 422\r\n13  libcoreclr.dylib              \t0x000000010bdcc0b5 ThreadpoolMgr::WorkerThreadStart(void*) + 1301\r\n14  libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n15  libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n16  libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n17  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 80:\r\n0   libsystem_kernel.dylib        \t0x00007fff67d6986a __psynch_cvwait + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff67e2856e _pthread_cond_wait + 722\r\n2   libcoreclr.dylib              \t0x000000010bc21725 CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 277\r\n3   libcoreclr.dylib              \t0x000000010bc21377 CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 375\r\n4   libcoreclr.dylib              \t0x000000010bc2637d SleepEx + 141\r\n5   libcoreclr.dylib              \t0x000000010be38e5f __SwitchToThread(unsigned int, unsigned int) + 15\r\n6   libcoreclr.dylib              \t0x000000010bdce39c ThreadpoolMgr::GateThreadStart(void*) + 396\r\n7   libcoreclr.dylib              \t0x000000010bc2bd88 CorUnix::CPalThread::ThreadEntry(void*) + 328\r\n8   libsystem_pthread.dylib       \t0x00007fff67e252eb _pthread_body + 126\r\n9   libsystem_pthread.dylib       \t0x00007fff67e28249 _pthread_start + 66\r\n10  libsystem_pthread.dylib       \t0x00007fff67e2440d thread_start + 13\r\n\r\nThread 23 crashed with X86 Thread State (64-bit):\r\n  rax: 0x0000000000005503  rbx: 0x000000018c5f39e0  rcx: 0x0000000120b3971f  rdx: 0x000000000007fa40\r\n  rdi: 0x000070000b7db560  rsi: 0x00007ff7b8200000  rbp: 0x000070000b7dbfa0  rsp: 0x000070000b7dbf28\r\n   r8: 0x0000000000000002   r9: 0x0000000000000000  r10: 0x0000000000000003  r11: 0x0000000000000003\r\n  r12: 0x0000000000000000  r13: 0x000070000b7dc000  r14: 0x000000018c5f2160  r15: 0x0000000000000000\r\n  rip: 0x00007ff7b683b800  rfl: 0x0000000000010206  cr2: 0x00007ff7b683b800\r\n  \r\nLogical CPU:     2\r\nError Code:      0x00000015\r\nTrap Number:     14\r\n\r\n\r\nBinary Images:\r\n       0x10b983000 -        0x10b9a4ff7 +dotnet (0) <4F669538-7527-35D5-831C-3F4A3FE7BAC5> /usr/local/share/dotnet/dotnet\r\n       0x10b9bd000 -        0x10baa1fff +libhostfxr.dylib (0) <51A401DF-59EC-39CE-B6F4-1F1A5BCD5454> /usr/local/share/dotnet/host/fxr/2.2.5/libhostfxr.dylib\r\n       0x10baaa000 -        0x10bb93ff7 +libhostpolicy.dylib (0) <535F49BC-75B3-3A10-8BFF-3D12D8DEC256> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.1.9/libhostpolicy.dylib\r\n       0x10bbe7000 -        0x10c12afff +libcoreclr.dylib (0) <84A407F1-9FAA-3F24-9926-5DCBFF350863> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.1.9/libcoreclr.dylib\r\n       0x1154c9000 -        0x1156d7fff +libclrjit.dylib (0) <68830A59-9D2F-3C49-B382-EACFCFC72F8A> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.1.9/libclrjit.dylib\r\n       0x11578d000 -        0x115798fff +System.Globalization.Native.dylib (0) <B667CBA8-9224-39A8-A387-4CD223AA951F> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.1.9/System.Globalization.Native.dylib\r\n       0x11726f000 -        0x117277fff +System.Native.dylib (0) <5176CFB2-92C0-3A98-8DD7-9E96A9B5DE11> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.1.9/System.Native.dylib\r\n       0x118602000 -        0x118608ff7 +System.Security.Cryptography.Native.Apple.dylib (0) <6A37D3EE-25BB-329C-8F69-A868AC1EFE33> /usr/local/share/dotnet/shared/Microsoft.NETCore.App/2.1.9/System.Security.Cryptography.Native.Apple.dylib\r\n       0x11916a000 -        0x1191d46ef  dyld (655.1.1) <CE635DB2-D47E-3C05-A0A3-6BD982E7E750> /usr/lib/dyld\r\n       0x1194a5000 -        0x1196daffb +libgrpc_csharp_ext.x64.dylib (0) <1E1CBD77-358A-395D-815F-5BF23D0C9623> /Users/USER/*/libgrpc_csharp_ext.x64.dylib\r\n    0x7fff3813a000 -     0x7fff3813afff  com.apple.Accelerate (1.11 - Accelerate 1.11) <762942CB-CFC9-3A0C-9645-A56523A06426> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate\r\n    0x7fff38152000 -     0x7fff387ebfef  com.apple.vImage (8.1 - ???) <EFFD9A9C-5563-3762-91CA-9F50FDB7A547> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage\r\n    0x7fff387ec000 -     0x7fff38a65ff3  libBLAS.dylib (1243.200.4) <417CA0FC-B6CB-3FB3-ACBC-8914E3F62D20> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib\r\n    0x7fff38a66000 -     0x7fff38ad8ffb  libBNNS.dylib (38.250.1) <538D12A2-9B9D-3E22-9896-F90F6E69C06E> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib\r\n    0x7fff38ad9000 -     0x7fff38e82ff3  libLAPACK.dylib (1243.200.4) <92175DF4-863A-3780-909A-A3E5C410F2E9> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib\r\n    0x7fff38e83000 -     0x7fff38e98feb  libLinearAlgebra.dylib (1243.200.4) <CB671EE6-DEA1-391C-9B2B-AA09A46B4D7A> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib\r\n    0x7fff38e99000 -     0x7fff38e9eff3  libQuadrature.dylib (3.200.2) <1BAE7E22-2862-379F-B334-A3756067730F> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib\r\n    0x7fff38e9f000 -     0x7fff38f1bff3  libSparse.dylib (79.200.5) <E78B33D3-672A-3C53-B512-D3DDB2E9AC8D> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparse.dylib\r\n    0x7fff38f1c000 -     0x7fff38f2ffe3  libSparseBLAS.dylib (1243.200.4) <E9243341-DB77-37C1-97C5-3DFA00DD70FA> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib\r\n    0x7fff38f30000 -     0x7fff39117ff7  libvDSP.dylib (671.250.4) <7B110627-A9C1-3FB7-A077-0C7741BA25D8> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib\r\n    0x7fff39118000 -     0x7fff391cbff7  libvMisc.dylib (671.250.4) <73637194-497A-39F9-90F5-004DA772AC69> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib\r\n    0x7fff391cc000 -     0x7fff391ccfff  com.apple.Accelerate.vecLib (3.11 - vecLib 3.11) <74288115-EF61-30B6-843F-0593B31D4929> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib\r\n    0x7fff3a175000 -     0x7fff3a175fff  com.apple.ApplicationServices (50.1 - 50.1) <4A6ACC13-2623-36B8-A196-2300980803CD> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices\r\n    0x7fff3a176000 -     0x7fff3a1e1fff  com.apple.ApplicationServices.ATS (377 - 453.11.2.2) <A258DA73-114B-3102-A056-4AAAD3CEB9DD> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS\r\n    0x7fff3a27a000 -     0x7fff3a391fff  libFontParser.dylib (228.6.2.3) <3602D55B-3B9E-3B3A-A814-08C1244A8AE4> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib\r\n    0x7fff3a392000 -     0x7fff3a3d4fff  libFontRegistry.dylib (228.12.2.3) <2A56347B-2809-3407-A8B4-2AB88E484062> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib\r\n    0x7fff3a4c5000 -     0x7fff3a4c9ff3  com.apple.ColorSyncLegacy (4.13.0 - 1) <B53D557C-071F-3ED9-826A-847DEB465F62> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSyncLegacy.framework/Versions/A/ColorSyncLegacy\r\n    0x7fff3a564000 -     0x7fff3a5b6ff7  com.apple.HIServices (1.22 - 628) <26A8B7C0-41CC-3DB4-99D7-BD922866DC77> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices\r\n    0x7fff3a5b7000 -     0x7fff3a5c6fff  com.apple.LangAnalysis (1.7.0 - 1.7.0) <F5617A2A-FEA6-3832-B5BA-C2111B98786F> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis\r\n    0x7fff3a5c7000 -     0x7fff3a610ff7  com.apple.print.framework.PrintCore (14.2 - 503.8) <57C2FE32-0E74-3079-B626-C2D52F2D2717> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore\r\n    0x7fff3a611000 -     0x7fff3a64aff7  com.apple.QD (3.12 - 407.2) <28C7D39F-59C9-3314-BECC-67045487229C> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD\r\n    0x7fff3a64b000 -     0x7fff3a657fff  com.apple.speech.synthesis.framework (8.1.3 - 8.1.3) <80FA7439-EC77-3CEC-B5D1-5EFE9E503E11> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis\r\n    0x7fff3a658000 -     0x7fff3a8cfff7  com.apple.audio.toolbox.AudioToolbox (1.14 - 1.14) <EB71583C-58C9-3CF8-92F9-2D57B24BBD4F> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox\r\n    0x7fff3ac29000 -     0x7fff3afcafff  com.apple.CFNetwork (978.0.7 - 978.0.7) <9FDEFE50-BE1B-386E-8B3C-AEF251069E52> /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork\r\n    0x7fff3b4ee000 -     0x7fff3b5baff7  com.apple.ColorSync (4.13.0 - 3340.7) <74B373AB-42C7-330D-A577-1C43BFA6024F> /System/Library/Frameworks/ColorSync.framework/Versions/A/ColorSync\r\n    0x7fff3b746000 -     0x7fff3b7ccfff  com.apple.audio.CoreAudio (4.3.0 - 4.3.0) <1E8E64E6-0E58-375A-97F7-07CB4EE181AC> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio\r\n    0x7fff3b85b000 -     0x7fff3bbdffe3  com.apple.CoreData (120 - 866.5) <37F35F2E-FE57-3E3F-A1E5-AD274A8C1FDE> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData\r\n    0x7fff3bbe0000 -     0x7fff3bcc7ff7  com.apple.CoreDisplay (101.3 - 109.19) <B00A19C2-4A6A-388C-8AD6-33A42D10D7F0> /System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay\r\n    0x7fff3bcc8000 -     0x7fff3c10cfff  com.apple.CoreFoundation (6.9 - 1575.12) <64C38BF2-1869-33C8-B1B6-DCA9C824C0E4> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation\r\n    0x7fff3c10e000 -     0x7fff3c79dfe7  com.apple.CoreGraphics (2.0 - 1260.2) <23436C9A-7D62-3E9F-867A-798C93B52080> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics\r\n    0x7fff3c79f000 -     0x7fff3cabffff  com.apple.CoreImage (14.4.0 - 750.0.140) <96FA4D1B-AC88-305C-8F4D-D7D44657B733> /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage\r\n    0x7fff3cf1d000 -     0x7fff3cf1dfff  com.apple.CoreServices (945 - 945) <E937BA69-19D5-3A30-B31E-8A6B94E9D9A0> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices\r\n    0x7fff3cf1e000 -     0x7fff3cf9aff7  com.apple.AE (773 - 773) <55AE7C9E-27C3-30E9-A047-3B92A6FD53B4> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE\r\n    0x7fff3cf9b000 -     0x7fff3d272fff  com.apple.CoreServices.CarbonCore (1178.32 - 1178.32) <52F5484E-94B1-37B7-B1AC-E210DF5721AE> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore\r\n    0x7fff3d273000 -     0x7fff3d2bbff7  com.apple.DictionaryServices (1.2 - 284.16.4) <C3D15FD1-759B-3815-8128-42D8220BC459> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices\r\n    0x7fff3d2bc000 -     0x7fff3d2c4ffb  com.apple.CoreServices.FSEvents (1239.200.12 - 1239.200.12) <8406D379-8D33-3611-861B-7ABD26DB50D2> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents\r\n    0x7fff3d2c5000 -     0x7fff3d477fff  com.apple.LaunchServices (945 - 945) <05FA145B-75AA-3AE6-BB82-F156B29F4FF1> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices\r\n    0x7fff3d478000 -     0x7fff3d516ff7  com.apple.Metadata (10.7.0 - 1191.57) <BFFAED00-2560-318A-BB8F-4E7E5123EC61> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata\r\n    0x7fff3d517000 -     0x7fff3d561ff7  com.apple.CoreServices.OSServices (945 - 945) <119C5548-59C3-3F94-B23F-8AF02CA10EAA> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices\r\n    0x7fff3d562000 -     0x7fff3d5c9ff7  com.apple.SearchKit (1.4.0 - 1.4.0) <DA08AA6F-A6F1-36C0-87F4-E26294E51A3A> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit\r\n    0x7fff3d5ca000 -     0x7fff3d5ebff3  com.apple.coreservices.SharedFileList (71.28 - 71.28) <487A8464-729E-305A-B5D1-E3FE8EB9CFC5> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList\r\n    0x7fff3d8f6000 -     0x7fff3da58ff3  com.apple.CoreText (352.0 - 584.26.3.2) <A99FD623-7F6E-3C77-8241-E98F664EC039> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText\r\n    0x7fff3da59000 -     0x7fff3da98fff  com.apple.CoreVideo (1.8 - 0.0) <1AD23C58-E68E-329B-A1FA-6BF7DD577687> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo\r\n    0x7fff3dd7f000 -     0x7fff3dd84ffb  com.apple.DiskArbitration (2.7 - 2.7) <F481F2C0-884E-3265-8111-ABBEC93F0920> /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration\r\n    0x7fff3df4a000 -     0x7fff3e2f7fff  com.apple.Foundation (6.9 - 1575.12) <AD258ED7-64AE-367C-AE5F-48D45089D9F2> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation\r\n    0x7fff3e366000 -     0x7fff3e395ffb  com.apple.GSS (4.0 - 2.0) <E41430E5-713B-3E53-BF7E-A3991A881B62> /System/Library/Frameworks/GSS.framework/Versions/A/GSS\r\n    0x7fff3e601000 -     0x7fff3e690fff  com.apple.framework.IOKit (2.0.2 - 1483.260.4) <CCA92450-8808-37EC-B68E-2C2846B086CE> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit\r\n    0x7fff3e692000 -     0x7fff3e6a1ffb  com.apple.IOSurface (255.5.4 - 255.5.4) <83F58E47-0D06-3E78-9D19-D38D3205464B> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface\r\n    0x7fff3e6f5000 -     0x7fff3e880fef  com.apple.ImageIO.framework (3.3.0 - 1850.2) <E1CC52A4-1074-3997-849B-42EF20EE1ADC> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO\r\n    0x7fff3e881000 -     0x7fff3e885ffb  libGIF.dylib (1850.2) <FB52622F-2A7D-36D0-B821-35DB2BAF9EE8> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib\r\n    0x7fff3e886000 -     0x7fff3e962fef  libJP2.dylib (1850.2) <7FAC16D8-1144-30A1-BABC-008423C7A851> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib\r\n    0x7fff3e963000 -     0x7fff3e988feb  libJPEG.dylib (1850.2) <78401F6E-345B-3179-A82A-01F813F15D95> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib\r\n    0x7fff3ec4b000 -     0x7fff3ec71feb  libPng.dylib (1850.2) <FF3ABAE1-43F0-3A76-A284-398397693D46> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib\r\n    0x7fff3ec72000 -     0x7fff3ec74ffb  libRadiance.dylib (1850.2) <92529333-0935-341B-B271-69C235FEF6B5> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib\r\n    0x7fff3ec75000 -     0x7fff3ecc2fe7  libTIFF.dylib (1850.2) <FFC74F3B-16F9-38FE-9D3F-D8DC6DEDB9E9> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib\r\n    0x7fff3fe39000 -     0x7fff3fe52fff  com.apple.Kerberos (3.0 - 1) <DB1E0679-37E1-3B93-9789-32F63D660C3B> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos\r\n    0x7fff4086e000 -     0x7fff40916ff7  com.apple.Metal (161.9.16 - 161.9.16) <A93AA7FC-B72A-3CBF-9932-81DDDFA1DFCD> /System/Library/Frameworks/Metal.framework/Versions/A/Metal\r\n    0x7fff40932000 -     0x7fff40951ff7  com.apple.MetalPerformanceShaders.MPSCore (1.0 - 1) <EE85B6D5-5C12-3CE8-8C33-54A203EDC76E> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSCore.framework/Versions/A/MPSCore\r\n    0x7fff40952000 -     0x7fff409cefe7  com.apple.MetalPerformanceShaders.MPSImage (1.0 - 1) <5A78F2DC-9D2B-37BA-B21F-ECFFCC6F7720> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSImage.framework/Versions/A/MPSImage\r\n    0x7fff409cf000 -     0x7fff409f6fff  com.apple.MetalPerformanceShaders.MPSMatrix (1.0 - 1) <096DB3E6-7DDF-3B47-857A-46A203642ACF> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSMatrix.framework/Versions/A/MPSMatrix\r\n    0x7fff409f7000 -     0x7fff40b22ff7  com.apple.MetalPerformanceShaders.MPSNeuralNetwork (1.0 - 1) <D2128338-F1E8-3BEE-A729-AC13A524DD78> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSNeuralNetwork.framework/Versions/A/MPSNeuralNetwork\r\n    0x7fff40b23000 -     0x7fff40b3dfff  com.apple.MetalPerformanceShaders.MPSRayIntersector (1.0 - 1) <ADA5A93C-F79E-3931-840D-48C6B6B305EA> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSRayIntersector.framework/Versions/A/MPSRayIntersector\r\n    0x7fff40b3e000 -     0x7fff40b3fff7  com.apple.MetalPerformanceShaders.MetalPerformanceShaders (1.0 - 1) <515A92B3-A23B-3AC2-8D1B-85B248595B76> /System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/MetalPerformanceShaders\r\n    0x7fff41936000 -     0x7fff41942ff7  com.apple.NetFS (6.0 - 4.0) <E917806F-0607-3292-B2D6-A15404D61B99> /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS\r\n    0x7fff443e0000 -     0x7fff44437ff7  com.apple.opencl (2.15.3 - 2.15.3) <AA9CE8F7-DB7C-35A5-A019-2207D1BBFF38> /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL\r\n    0x7fff44438000 -     0x7fff44453ff7  com.apple.CFOpenDirectory (10.14 - 207.200.4) <F03D84EB-49B2-3A00-9127-B9A269824026> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory\r\n    0x7fff44454000 -     0x7fff4445fffb  com.apple.OpenDirectory (10.14 - 207.200.4) <A8020CEE-5B78-3581-A735-EA2833683F31> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory\r\n    0x7fff44daf000 -     0x7fff44db1fff  libCVMSPluginSupport.dylib (17.7.2) <247121BB-626C-318E-B24E-3D436E752DF7> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib\r\n    0x7fff44db2000 -     0x7fff44db7ff3  libCoreFSCache.dylib (166.2) <222C2A4F-7E32-30F6-8459-2FAB98073A3D> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib\r\n    0x7fff44db8000 -     0x7fff44dbcfff  libCoreVMClient.dylib (166.2) <6789ECD4-91DD-32EF-A1FD-F27D2344CD8B> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib\r\n    0x7fff44dbd000 -     0x7fff44dc5ff7  libGFXShared.dylib (17.7.2) <B75A6E93-E5BE-32A8-8D46-00D8E909DFD3> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib\r\n    0x7fff44dc6000 -     0x7fff44dd1fff  libGL.dylib (17.7.2) <E88FF023-7E15-3E95-88FD-6C415550F769> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib\r\n    0x7fff44dd2000 -     0x7fff44e0cfe7  libGLImage.dylib (17.7.2) <B4C140F3-AF8C-30C8-A03E-B16A20BB05A7> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib\r\n    0x7fff44f80000 -     0x7fff44fbefff  libGLU.dylib (17.7.2) <EA69FA36-3F20-337C-A6B3-EC49DC2F12F5> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib\r\n    0x7fff4595b000 -     0x7fff4596affb  com.apple.opengl (17.7.2 - 17.7.2) <8EFFA6F9-ABE8-3131-9D3F-37E9796DDF34> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL\r\n    0x7fff4676d000 -     0x7fff469c3fff  com.apple.QuartzCore (1.11 - 699.27.4.1) <BB3BBD58-84DF-3849-B4ED-5FF8DA4015B8> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore\r\n    0x7fff471f8000 -     0x7fff474f7fff  com.apple.security (7.0 - 58286.260.20) <59B4100E-5A31-3EF4-954A-2A69341995F3> /System/Library/Frameworks/Security.framework/Versions/A/Security\r\n    0x7fff474f8000 -     0x7fff47584fff  com.apple.securityfoundation (6.0 - 55185.260.1) <DB8EB672-5D3A-3082-A62E-4D75C81D94A4> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation\r\n    0x7fff475b6000 -     0x7fff475bafff  com.apple.xpc.ServiceManagement (1.0 - 1) <4AD0F8EE-884C-3FA7-85D9-27F201BC3C64> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement\r\n    0x7fff47952000 -     0x7fff479bffff  com.apple.SystemConfiguration (1.17 - 1.17) <1562078D-3251-31B2-B9C6-2667C567F883> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration\r\n    0x7fff4ac3e000 -     0x7fff4ace3feb  com.apple.APFS (1.0 - 1) <C001DCC2-32BE-327A-AE03-281885BD93BF> /System/Library/PrivateFrameworks/APFS.framework/Versions/A/APFS\r\n    0x7fff4b6f5000 -     0x7fff4b6f6ff7  com.apple.AggregateDictionary (1.0 - 1) <A6AF8AC4-1F25-37C4-9157-A02E9C200926> /System/Library/PrivateFrameworks/AggregateDictionary.framework/Versions/A/AggregateDictionary\r\n    0x7fff4be48000 -     0x7fff4be57fc7  com.apple.AppleFSCompression (96.200.3 - 1.0) <3CF60CE8-976E-3CB8-959D-DD0948C1C2DE> /System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression\r\n    0x7fff4bf9f000 -     0x7fff4bfe8ff3  com.apple.AppleJPEG (1.0 - 1) <4C1F426B-7D77-3980-9633-7DBD8C666B9A> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG\r\n    0x7fff4c23c000 -     0x7fff4c25efff  com.apple.applesauce (1.0 - ???) <F49107C7-3C51-3024-8EF1-C57643BE4F3B> /System/Library/PrivateFrameworks/AppleSauce.framework/Versions/A/AppleSauce\r\n    0x7fff4c3bd000 -     0x7fff4c3d1ffb  com.apple.AssertionServices (1.0 - 1) <11FC4241-6069-3B3A-9BCE-9B68F3A4D2AB> /System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices\r\n    0x7fff4ca4e000 -     0x7fff4ca56fff  com.apple.coreservices.BackgroundTaskManagement (1.0 - 57.1) <2A396FC0-7B79-3088-9A82-FB93C1181A57> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement\r\n    0x7fff4caed000 -     0x7fff4cb5aff3  com.apple.BaseBoard (360.28 - 360.28) <DBE27FB4-3FFD-3E9A-846C-F6E7D797286A> /System/Library/PrivateFrameworks/BaseBoard.framework/Versions/A/BaseBoard\r\n    0x7fff4e7c4000 -     0x7fff4e7cdffb  com.apple.CommonAuth (4.0 - 2.0) <81C987FD-69EB-344B-94D9-B9D93624D257> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth\r\n    0x7fff4f4a5000 -     0x7fff4f4b6ff7  com.apple.CoreEmoji (1.0 - 69.19.9) <228457B3-E191-356E-9A5B-3C0438D05FBA> /System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji\r\n    0x7fff4fa5f000 -     0x7fff4fac5ff7  com.apple.CoreNLP (1.0 - 130.15.22) <27877820-17D0-3B02-8557-4014E876CCC7> /System/Library/PrivateFrameworks/CoreNLP.framework/Versions/A/CoreNLP\r\n    0x7fff50835000 -     0x7fff50839fff  com.apple.DSExternalDisplay (3.1 - 380) <645C719D-05D4-3CD7-84D7-4C5218859E0C> /System/Library/PrivateFrameworks/DSExternalDisplay.framework/Versions/A/DSExternalDisplay\r\n    0x7fff51a31000 -     0x7fff51e4cfff  com.apple.vision.FaceCore (3.3.4 - 3.3.4) <A576E2DA-BF6F-3B18-8FEB-324E5C5FA9BD> /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore\r\n    0x7fff56da1000 -     0x7fff56da6fff  com.apple.GPUWrangler (3.40.16 - 3.40.16) <B9D4F2DD-5D11-32FF-B5BE-29E137458728> /System/Library/PrivateFrameworks/GPUWrangler.framework/Versions/A/GPUWrangler\r\n    0x7fff57bb1000 -     0x7fff57bc0fff  com.apple.GraphVisualizer (1.0 - 5) <48D020B7-5938-3FAE-B468-E291AEE2C06F> /System/Library/PrivateFrameworks/GraphVisualizer.framework/Versions/A/GraphVisualizer\r\n    0x7fff57d10000 -     0x7fff57d84ffb  com.apple.Heimdal (4.0 - 2.0) <5E8F6B79-960D-3030-B889-D29A4015D205> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal\r\n    0x7fff59073000 -     0x7fff5907affb  com.apple.IOAccelerator (404.9 - 404.9) <F9C604B3-3DF7-3EE7-8A44-7877FAF2E6A4> /System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator\r\n    0x7fff5907e000 -     0x7fff59096fff  com.apple.IOPresentment (1.0 - 42.6) <55CB91EF-90F1-3D0A-A59E-2F75CD2EB4AE> /System/Library/PrivateFrameworks/IOPresentment.framework/Versions/A/IOPresentment\r\n    0x7fff5972c000 -     0x7fff59807ff7  com.apple.LanguageModeling (1.0 - 159.15.15) <3DE3CE61-542B-37B7-883E-4B9717CAC65F> /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling\r\n    0x7fff59808000 -     0x7fff59844ff7  com.apple.Lexicon-framework (1.0 - 33.15.10) <4B5E843E-2809-3E70-9560-9254E2656419> /System/Library/PrivateFrameworks/Lexicon.framework/Versions/A/Lexicon\r\n    0x7fff5984b000 -     0x7fff59850fff  com.apple.LinguisticData (1.0 - 238.25) <61910887-D5CE-3567-9A5F-6DFEC942EC1F> /System/Library/PrivateFrameworks/LinguisticData.framework/Versions/A/LinguisticData\r\n    0x7fff5a545000 -     0x7fff5a56dff7  com.apple.spotlight.metadata.utilities (1.0 - 1191.57) <38BB1FB7-3336-384C-B71F-4D0D402EB606> /System/Library/PrivateFrameworks/MetadataUtilities.framework/Versions/A/MetadataUtilities\r\n    0x7fff5a56e000 -     0x7fff5a5fbff7  com.apple.gpusw.MetalTools (1.0 - 1) <DBC4718E-F588-382D-A415-405D0028804D> /System/Library/PrivateFrameworks/MetalTools.framework/Versions/A/MetalTools\r\n    0x7fff5a84c000 -     0x7fff5a876ffb  com.apple.MultitouchSupport.framework (2450.1 - 2450.1) <3BF81F33-89A8-3A2D-84B3-B343020B6D98> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport\r\n    0x7fff5aab2000 -     0x7fff5aabcfff  com.apple.NetAuth (6.2 - 6.2) <0D01BBE5-0269-310D-B148-D19DAE143DEB> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth\r\n    0x7fff5b31d000 -     0x7fff5b36eff3  com.apple.OTSVG (1.0 - ???) <3976F8CC-1CFB-3E09-9009-FE985550565B> /System/Library/PrivateFrameworks/OTSVG.framework/Versions/A/OTSVG\r\n    0x7fff60e41000 -     0x7fff610efffb  com.apple.SkyLight (1.600.0 - 340.26) <CD2A7069-6CEA-3737-9E9D-7AE2FED912AB> /System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight\r\n    0x7fff62561000 -     0x7fff6256dffb  com.apple.TCC (1.0 - 1) <968ECAE1-FBB9-3478-BDCE-85E54B6C422D> /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC\r\n    0x7fff6443e000 -     0x7fff64440ffb  com.apple.loginsupport (1.0 - 1) <3F8D6334-BCD6-36C1-BA20-CC8503A84375> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport\r\n    0x7fff6470a000 -     0x7fff6473efff  libCRFSuite.dylib (41.15.4) <406DAC06-0C77-3F90-878B-4D38F11F0256> /usr/lib/libCRFSuite.dylib\r\n    0x7fff64741000 -     0x7fff6474bff7  libChineseTokenizer.dylib (28.15.3) <9B7F6109-3A5D-3641-9A7E-31D2239D73EE> /usr/lib/libChineseTokenizer.dylib\r\n    0x7fff647d9000 -     0x7fff647daffb  libDiagnosticMessagesClient.dylib (107) <A14D0819-0970-34CD-8680-80E4D7FE8C2C> /usr/lib/libDiagnosticMessagesClient.dylib\r\n    0x7fff64811000 -     0x7fff64a68ff3  libFosl_dynamic.dylib (18.3.4) <45E50221-1A39-3AB3-8267-C1E4E39ECF83> /usr/lib/libFosl_dynamic.dylib\r\n    0x7fff64ab9000 -     0x7fff64ad7fff  libMobileGestalt.dylib (645.260.6) <0232958E-1EF2-3627-B8FF-09C6522594C7> /usr/lib/libMobileGestalt.dylib\r\n    0x7fff64ad8000 -     0x7fff64ad8fff  libOpenScriptingUtil.dylib (179.1) <4D603146-EDA5-3A74-9FF8-4F75D8BB9BC6> /usr/lib/libOpenScriptingUtil.dylib\r\n    0x7fff64c18000 -     0x7fff64c19ffb  libSystem.B.dylib (1252.250.1) <1A13E822-B59C-3A36-A2E4-9968149714F9> /usr/lib/libSystem.B.dylib\r\n    0x7fff64c95000 -     0x7fff64c96fff  libThaiTokenizer.dylib (2.15.1) <ADB37DC3-7D9B-3E73-A72A-BCC3433C937A> /usr/lib/libThaiTokenizer.dylib\r\n    0x7fff64ca8000 -     0x7fff64cbeffb  libapple_nghttp2.dylib (1.24.1) <6F04250A-6686-3FDC-9A8D-290C64B06502> /usr/lib/libapple_nghttp2.dylib\r\n    0x7fff64cbf000 -     0x7fff64ce8ffb  libarchive.2.dylib (54.250.1) <47289946-8504-3966-9127-6CE39993DC2C> /usr/lib/libarchive.2.dylib\r\n    0x7fff64d6c000 -     0x7fff64d6cff3  libauto.dylib (187) <3E3780E1-96F3-3A22-91C5-92F9A5805518> /usr/lib/libauto.dylib\r\n    0x7fff64e3c000 -     0x7fff64e4cffb  libbsm.0.dylib (39.200.18) <CF381E0B-025B-364F-A83D-2527E03F1AA3> /usr/lib/libbsm.0.dylib\r\n    0x7fff64e4d000 -     0x7fff64e5afff  libbz2.1.0.dylib (38.200.3) <272953A1-8D36-329B-BDDB-E887B347710F> /usr/lib/libbz2.1.0.dylib\r\n    0x7fff64e5b000 -     0x7fff64eaeff7  libc++.1.dylib (400.9.4) <9A60A190-6C34-339F-BB3D-AACE942009A4> /usr/lib/libc++.1.dylib\r\n    0x7fff64eaf000 -     0x7fff64ec4ff7  libc++abi.dylib (400.17) <38C09CED-9090-3719-90F3-04A2749F5428> /usr/lib/libc++abi.dylib\r\n    0x7fff64ec5000 -     0x7fff64ec5ff3  libcharset.1.dylib (51.200.6) <2A27E064-314C-359C-93FC-8A9B06206174> /usr/lib/libcharset.1.dylib\r\n    0x7fff64ec6000 -     0x7fff64ed6ffb  libcmph.dylib (6.15.1) <9C52B2FE-179F-32AC-B87E-2AFC49ABF817> /usr/lib/libcmph.dylib\r\n    0x7fff64ed7000 -     0x7fff64eefffb  libcompression.dylib (52.250.2) <7F4BB18C-1FB4-3825-8D8B-6E6B168774C6> /usr/lib/libcompression.dylib\r\n    0x7fff65164000 -     0x7fff6517afff  libcoretls.dylib (155.220.1) <4C64BE3E-41E3-3020-8BB7-07E90C0C861C> /usr/lib/libcoretls.dylib\r\n    0x7fff6517b000 -     0x7fff6517cff3  libcoretls_cfhelpers.dylib (155.220.1) <0959B3E9-6643-3589-8BB3-21D52CDF0EF1> /usr/lib/libcoretls_cfhelpers.dylib\r\n    0x7fff65628000 -     0x7fff6567eff7  libcups.2.dylib (462.10) <2AC7B8C3-0D25-3E0F-A34A-94658A06FF94> /usr/lib/libcups.2.dylib\r\n    0x7fff657b2000 -     0x7fff657b2fff  libenergytrace.dylib (17.200.1) <80BB567A-FD18-3497-BF97-353F57D98CDD> /usr/lib/libenergytrace.dylib\r\n    0x7fff657e4000 -     0x7fff657e9ff7  libgermantok.dylib (17.15.2) <E5F0F794-FF27-3D64-AE52-C78C6A84DD67> /usr/lib/libgermantok.dylib\r\n    0x7fff657ea000 -     0x7fff657efff7  libheimdal-asn1.dylib (520.260.1) <DC44D1D1-D3DF-38B3-AFC3-1D50B92BE401> /usr/lib/libheimdal-asn1.dylib\r\n    0x7fff6581a000 -     0x7fff6590afff  libiconv.2.dylib (51.200.6) <2047C9B7-3F74-3A95-810D-2ED8F0475A99> /usr/lib/libiconv.2.dylib\r\n    0x7fff6590b000 -     0x7fff65b6cfff  libicucore.A.dylib (62135.0.1) <2B292561-798A-381C-AA41-90EE6549C7CF> /usr/lib/libicucore.A.dylib\r\n    0x7fff65bb9000 -     0x7fff65bbafff  liblangid.dylib (128.15.1) <22D05C4F-769B-3075-ABCF-44A0EBACE028> /usr/lib/liblangid.dylib\r\n    0x7fff65bbb000 -     0x7fff65bd3ff3  liblzma.5.dylib (10.200.3) <E1F4FD60-1CE4-37B9-AD95-29D348AF1AC0> /usr/lib/liblzma.5.dylib\r\n    0x7fff65beb000 -     0x7fff65c8fff7  libmecab.1.0.0.dylib (779.24.1) <A8D0379B-85FA-3B3D-89ED-5CF2C3826AB2> /usr/lib/libmecab.1.0.0.dylib\r\n    0x7fff65c90000 -     0x7fff65e94fff  libmecabra.dylib (779.24.1) <D71F71E0-30E2-3DB3-B636-7DE13D51FB4B> /usr/lib/libmecabra.dylib\r\n    0x7fff6606c000 -     0x7fff663bdff7  libnetwork.dylib (1229.250.15) <72C7E9E3-B2BE-3300-BE1B-64606222022C> /usr/lib/libnetwork.dylib\r\n    0x7fff6644f000 -     0x7fff66bd4fdf  libobjc.A.dylib (756.2) <7C312627-43CB-3234-9324-4DEA92D59F50> /usr/lib/libobjc.A.dylib\r\n    0x7fff66be6000 -     0x7fff66beaffb  libpam.2.dylib (22.200.1) <586CF87F-349C-393D-AEEB-FB75F94A5EB7> /usr/lib/libpam.2.dylib\r\n    0x7fff66bed000 -     0x7fff66c22fff  libpcap.A.dylib (79.250.1) <C0893641-7DFF-3A33-BDAE-190FF54837E8> /usr/lib/libpcap.A.dylib\r\n    0x7fff66d3b000 -     0x7fff66d53ffb  libresolv.9.dylib (65.200.2) <893142A5-F153-3437-A22D-407EE542B5C5> /usr/lib/libresolv.9.dylib\r\n    0x7fff66da6000 -     0x7fff66f83fe7  libsqlite3.dylib (274.25) <55CE34C4-00C0-3844-B7ED-80FA7F0AF03F> /usr/lib/libsqlite3.dylib\r\n    0x7fff6719c000 -     0x7fff6719fff7  libutil.dylib (51.200.4) <CE9B18C9-66ED-32D4-9D29-01F8FCB467B0> /usr/lib/libutil.dylib\r\n    0x7fff671a0000 -     0x7fff671adfff  libxar.1.dylib (417.1) <39CCF46B-C81A-34B1-92A1-58C4E5DA846E> /usr/lib/libxar.1.dylib\r\n    0x7fff671b2000 -     0x7fff67294ff3  libxml2.2.dylib (32.8) <54F896CF-6D83-300B-9CD9-1636BE5375A4> /usr/lib/libxml2.2.dylib\r\n    0x7fff67295000 -     0x7fff672bdff3  libxslt.1.dylib (16.1) <31F7018B-D8F2-36ED-A13B-1E5A16DFAAA1> /usr/lib/libxslt.1.dylib\r\n    0x7fff672be000 -     0x7fff672d0ff7  libz.1.dylib (70.200.4) <B048FC1F-058F-3A08-A1FE-81D5308CB3E6> /usr/lib/libz.1.dylib\r\n    0x7fff67ab4000 -     0x7fff67ab8ff3  libcache.dylib (81) <1987D1E1-DB11-3291-B12A-EBD55848E02D> /usr/lib/system/libcache.dylib\r\n    0x7fff67ab9000 -     0x7fff67ac3ff3  libcommonCrypto.dylib (60118.250.2) <1765BB6E-6784-3653-B16B-CB839721DC9A> /usr/lib/system/libcommonCrypto.dylib\r\n    0x7fff67ac4000 -     0x7fff67acbff7  libcompiler_rt.dylib (63.4) <5212BA7B-B7EA-37B4-AF6E-AC4F507EDFB8> /usr/lib/system/libcompiler_rt.dylib\r\n    0x7fff67acc000 -     0x7fff67ad5ff7  libcopyfile.dylib (146.250.1) <98CD00CD-9B91-3B5C-A9DB-842638050FA8> /usr/lib/system/libcopyfile.dylib\r\n    0x7fff67ad6000 -     0x7fff67b5afc3  libcorecrypto.dylib (602.260.2) <BED0F385-D8A2-334A-BD7B-0673B5DABBC5> /usr/lib/system/libcorecrypto.dylib\r\n    0x7fff67be1000 -     0x7fff67c1aff7  libdispatch.dylib (1008.250.7) <26DF5B1E-A388-38EF-B73B-AF0E93FB02DB> /usr/lib/system/libdispatch.dylib\r\n    0x7fff67c1b000 -     0x7fff67c47ff7  libdyld.dylib (655.1.1) <002418CC-AD11-3D10-865B-015591D24E6C> /usr/lib/system/libdyld.dylib\r\n    0x7fff67c48000 -     0x7fff67c48ffb  libkeymgr.dylib (30) <0D0F9CA2-8D5A-3273-8723-59987B5827F2> /usr/lib/system/libkeymgr.dylib\r\n    0x7fff67c49000 -     0x7fff67c55ff3  libkxld.dylib (4903.261.4) <71CF1ECD-AC4E-3FDD-BEDF-14933D843EEE> /usr/lib/system/libkxld.dylib\r\n    0x7fff67c56000 -     0x7fff67c56ff7  liblaunch.dylib (1336.261.2) <BD5CDB35-2BB4-349A-8D14-78E387563F89> /usr/lib/system/liblaunch.dylib\r\n    0x7fff67c57000 -     0x7fff67c5cfff  libmacho.dylib (927.0.2) <3C5C9024-45FD-38C2-B01A-07A322966063> /usr/lib/system/libmacho.dylib\r\n    0x7fff67c5d000 -     0x7fff67c5fffb  libquarantine.dylib (86.220.1) <6D0BC770-7348-3608-9254-F7FFBD347634> /usr/lib/system/libquarantine.dylib\r\n    0x7fff67c60000 -     0x7fff67c61ff7  libremovefile.dylib (45.200.2) <9FBEB2FF-EEBE-31BC-BCFC-C71F8D0E99B6> /usr/lib/system/libremovefile.dylib\r\n    0x7fff67c62000 -     0x7fff67c79ff3  libsystem_asl.dylib (356.200.4) <A62A7249-38B8-33FA-9875-F1852590796C> /usr/lib/system/libsystem_asl.dylib\r\n    0x7fff67c7a000 -     0x7fff67c7aff7  libsystem_blocks.dylib (73) <A453E8EE-860D-3CED-B5DC-BE54E9DB4348> /usr/lib/system/libsystem_blocks.dylib\r\n    0x7fff67c7b000 -     0x7fff67d02fff  libsystem_c.dylib (1272.250.1) <7EDACF78-2FA3-35B8-B051-D70475A35117> /usr/lib/system/libsystem_c.dylib\r\n    0x7fff67d03000 -     0x7fff67d06ffb  libsystem_configuration.dylib (963.260.1) <C7D2BA09-8D5B-3393-8D84-304D76C55DEF> /usr/lib/system/libsystem_configuration.dylib\r\n    0x7fff67d07000 -     0x7fff67d0aff7  libsystem_coreservices.dylib (66) <719F75A4-74C5-3BA6-A09E-0C5A3E5889D7> /usr/lib/system/libsystem_coreservices.dylib\r\n    0x7fff67d0b000 -     0x7fff67d11fff  libsystem_darwin.dylib (1272.250.1) <EC9B39A5-9592-3577-8997-7DC721D20D8C> /usr/lib/system/libsystem_darwin.dylib\r\n    0x7fff67d12000 -     0x7fff67d18ff7  libsystem_dnssd.dylib (878.260.1) <64B79B01-B1B0-3C7E-87A1-023B71843F1F> /usr/lib/system/libsystem_dnssd.dylib\r\n    0x7fff67d19000 -     0x7fff67d64ffb  libsystem_info.dylib (517.200.9) <D09D5AE0-2FDC-3A6D-93EC-729F931B1457> /usr/lib/system/libsystem_info.dylib\r\n    0x7fff67d65000 -     0x7fff67d8dff7  libsystem_kernel.dylib (4903.261.4) <7B0F52C4-4CC9-3282-8457-C18C6FE1B99E> /usr/lib/system/libsystem_kernel.dylib\r\n    0x7fff67d8e000 -     0x7fff67dd9ff7  libsystem_m.dylib (3158.200.7) <F19B6DB7-014F-3820-831F-389CCDA06EF6> /usr/lib/system/libsystem_m.dylib\r\n    0x7fff67dda000 -     0x7fff67e04fff  libsystem_malloc.dylib (166.261.1) <4D1CEF38-DE32-3ECF-9F70-0ADDD5C8775F> /usr/lib/system/libsystem_malloc.dylib\r\n    0x7fff67e05000 -     0x7fff67e0fff7  libsystem_networkextension.dylib (767.250.2) <FF06F13A-AEFE-3A27-A073-910EF78AEA36> /usr/lib/system/libsystem_networkextension.dylib\r\n    0x7fff67e10000 -     0x7fff67e17fff  libsystem_notify.dylib (172.200.21) <145B5CFC-CF73-33CE-BD3D-E8DDE268FFDE> /usr/lib/system/libsystem_notify.dylib\r\n    0x7fff67e18000 -     0x7fff67e21fef  libsystem_platform.dylib (177.250.1) <16949870-9152-3B0D-9EF0-40FAF84B0F1E> /usr/lib/system/libsystem_platform.dylib\r\n    0x7fff67e22000 -     0x7fff67e2cff7  libsystem_pthread.dylib (330.250.2) <2D5C08FF-484F-3D59-9132-CE1DCB3F76D7> /usr/lib/system/libsystem_pthread.dylib\r\n    0x7fff67e2d000 -     0x7fff67e30ff7  libsystem_sandbox.dylib (851.260.2) <9CACC5F5-3859-3A1F-BCC6-96DDD4A556A8> /usr/lib/system/libsystem_sandbox.dylib\r\n    0x7fff67e31000 -     0x7fff67e33ff3  libsystem_secinit.dylib (30.260.2) <88F3CE61-5FAD-3CDA-AA13-B5B18B3EBD26> /usr/lib/system/libsystem_secinit.dylib\r\n    0x7fff67e34000 -     0x7fff67e3bff3  libsystem_symptoms.dylib (820.267.1) <03F1C2DD-0F5A-3D9D-88F6-B26C0F94EB52> /usr/lib/system/libsystem_symptoms.dylib\r\n    0x7fff67e3c000 -     0x7fff67e51fff  libsystem_trace.dylib (906.260.1) <100013AE-0443-3CF0-AC17-5D934608B60B> /usr/lib/system/libsystem_trace.dylib\r\n    0x7fff67e53000 -     0x7fff67e58ffb  libunwind.dylib (35.4) <24A97A67-F017-3CFC-B0D0-6BD0224B1336> /usr/lib/system/libunwind.dylib\r\n    0x7fff67e59000 -     0x7fff67e88fff  libxpc.dylib (1336.261.2) <9A0FFA79-082F-3293-BF49-63976B073B74> /usr/lib/system/libxpc.dylib\r\n\r\nExternal Modification Summary:\r\n  Calls made by other processes targeting this process:\r\n    task_for_pid: 1\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by this process:\r\n    task_for_pid: 0\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by all processes on this machine:\r\n    task_for_pid: 124\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n\r\nVM Region Summary:\r\nReadOnly portion of Libraries: Total=349.2M resident=0K(0%) swapped_out_or_unallocated=349.2M(100%)\r\nWritable regions: Total=249.3M written=0K(0%) resident=0K(0%) swapped_out=0K(0%) unallocated=249.3M(100%)\r\n \r\n                                VIRTUAL   REGION \r\nREGION TYPE                        SIZE    COUNT (non-coalesced) \r\n===========                     =======  ======= \r\nActivity Tracing                   256K        1 \r\nDispatch continuations            12.0M        1 \r\nKernel Alloc Once                    8K        1 \r\nMALLOC                            70.2M       38 \r\nMALLOC guard page                   16K        4 \r\nMALLOC_LARGE (reserved)           14.9M        1         reserved VM address space (unallocated)\r\nSTACK GUARD                       56.3M       81 \r\nStack                             47.4M       81 \r\nVM_ALLOCATE                       15.3G     1920 \r\nVM_ALLOCATE (reserved)              64K        1         reserved VM address space (unallocated)\r\n__DATA                            16.4M      196 \r\n__FONT_DATA                          4K        1 \r\n__LINKEDIT                       225.9M       11 \r\n__TEXT                           123.4M      198 \r\n__UNICODE                          564K        1 \r\nmapped file                      110.7M      796 \r\nshared memory                       48K        6 \r\n===========                     =======  ======= \r\nTOTAL                             16.0G     3338 \r\nTOTAL, minus reserved VM space    16.0G     3338 \r\n\r\nModel: Macmini8,1, BootROM 220.260.170.0.0 (iBridge: 16.16.5125.0.0,0), 6 processors, Intel Core i5, 3 GHz, 8 GB, SMC \r\nGraphics: kHW_IntelUHDGraphics630Item, Intel UHD Graphics 630, spdisplays_builtin\r\nMemory Module: BANK 0/ChannelA-DIMM0, 4 GB, DDR4, 2667 MHz, Micron, 4ATF51264HZ-2G6E3\r\nMemory Module: BANK 2/ChannelB-DIMM0, 4 GB, DDR4, 2667 MHz, Micron, 4ATF51264HZ-2G6E3\r\nAirPort: spairport_wireless_card_type_airport_extreme (0x14E4, 0x7BF), wl0: Mar 28 2019 19:17:52 version 9.137.9.0.32.6.34 FWID 01-36f56c94\r\nBluetooth: Version 6.0.12f1, 3 services, 27 devices, 1 incoming serial ports\r\nNetwork Service: Wi-Fi, AirPort, en1\r\nUSB Device: USB 3.1 Bus\r\nUSB Device: USB 2.0 Hub\r\nUSB Device: USB Keyboard\r\nUSB Device: Contour Rollermouse Red\r\nUSB Device: iBridge Bus\r\nUSB Device: Headset\r\nUSB Device: iBridge\r\nThunderbolt Bus: Mac mini, Apple Inc., 41.2\r\nThunderbolt Bus: Mac mini, Apple Inc., 41.2\r\n```\r\n</details>\r\n\r\nI hope that somebody will be able to help me resolve this issue. If you need any more debug information, please let me know. Thank you.","Url":"https://github.com/dotnet/coreclr/issues/24720","RelatedDescription":"Open issue \"[macOS] EXC_BAD_ACCESS when inspecting lazy-loaded objects\" (#24720)"},{"Id":"447077095","IsPullRequest":true,"CreatedAt":"2019-05-22T13:31:00","Actor":"marek-safar","Number":"24715","RawContent":null,"Title":"Commit 29810a78e5b93d8da9fb921d096226d249fc75a5 added unconditional","State":"closed","Body":"dependency on GetCpuUtilization\r\n\r\nUpdate projitems file inclusion","Url":"https://github.com/dotnet/coreclr/pull/24715","RelatedDescription":"Closed or merged PR \"Commit 29810a78e5b93d8da9fb921d096226d249fc75a5 added unconditional\" (#24715)"},{"Id":"447096335","IsPullRequest":false,"CreatedAt":"2019-05-22T12:03:56","Actor":"parmsib","Number":"24716","RawContent":null,"Title":"GC kicks in too late, eventually leads to OOM in Linux","State":"open","Body":"Hello!\r\n\r\nWe've had issues with a very memory hungry application, which repeatedly copies\r\na large data structure and releases the old version, getting killed by the OOM killer in linux.\r\nThe machine in question has close to 200 GB of RAM, but the application manages to fill that up, despite the same application staying within ~90 GB of memory usage while running on a windows machine.\r\n\r\nBasically, it seems the GC wasn't kicking in often enough to release enough memory for commit size not to spike above what the machine could handle.\r\n\r\nWe tried both server and workstation mode for the GC, and adding a 30 GB swapfile in order to \r\nmaybe hold out until the GC has had time to alleviate the situation. Neither solved the issue.\r\n\r\nIn order to solve this, vm.overcommit_memory was changed to 2. Apparently, by default, Linux allows allocation of more memory than what is actually available physically. By setting vm.overcommit_memory to 2, this is disabled, and our application has since kept below the overcommit limit (given by vm.overcommit_ratio) without any apparent issues.\r\n\r\nI'm not sure what exactly the GC uses for determining when to do collections, but since AFAIK there is no way to set a heap size limit like in Java, it does not seem to be aware of/respect hard physical resource limitations on a linux machine by default.\r\n\r\nI don't know what the best course of action is (if any), but either warning potential users about vm.overcommit_memory or changing the what the GC bases it's decision to run collections on might be two possible fixes.\r\n\r\nI just want to avoid other people having to go through the same problems we did.","Url":"https://github.com/dotnet/coreclr/issues/24716","RelatedDescription":"Open issue \"GC kicks in too late, eventually leads to OOM in Linux\" (#24716)"},{"Id":"447071957","IsPullRequest":false,"CreatedAt":"2019-05-22T11:04:56","Actor":"TamarChristinaArm","Number":"24714","RawContent":null,"Title":"[ARM64/Linux] Register allocator doesn't seem to always track liveness across basic blocks","State":"open","Body":"In the following case with `QuickJIT` turned off\r\n\r\n```\r\nstatic int[] Test(int[] a)\r\n{\r\n  unsafe {\r\n    fixed (int *a_ptr = a, b_ptr = b)\r\n    {\r\n    }\r\n  }\r\n  return a;\r\n}\r\n```\r\n\r\nThere are some dead stores and repeated loads of the same values\r\n\r\nfor instance the initialization code along with the next basic block which seems to do a null check:\r\n\r\n```\r\nG_M32566_IG01:\r\n        A9BE7BFD          stp     fp, lr, [sp,#-32]!\r\n        910003FD          mov     fp, sp\r\n        F9000FBF          str     xzr, [fp,#24] // [V05 loc2]\r\n        F9000BBF          str     xzr, [fp,#16] // [V06 loc3]\r\n\r\nG_M32566_IG02:\r\n        F9000FA0          str     x0, [fp,#24]  // [V05 loc2]\r\n        B4000120          cbz     x0, G_M32566_IG04\r\n        F9400FA2          ldr     x2, [fp,#24]  // [V05 loc2]\r\n        B9800842          ldrsw   x2, [x2,#8]\r\n        340000C2          cbz     w2, G_M32566_IG04\r\n```\r\n\t\t\r\n`fp+24` is stored twice to without being read. This is probably due to an ABI requirement that all variables be initialized to `0`? And the stack slots are probably used by the `GC` to track pinned memory?\r\n\r\nBut essentially the first store of  `xzr` to `fp+24` is dead as you always reach `G_M32566_IG02` from `G_M32566_IG01`. I don't know how much `DSE` the `CLR` does, but for the `non-QuickJIT` case as this I would have expected some in this case.\r\n\r\nBut also the copying of the pointer via the stack seems unneeded.\r\n\r\n```\r\n        F9000FA0          str     x0, [fp,#24]  // [V05 loc2]\r\n        B4000120          cbz     x0, G_M32566_IG04\r\n        F9400FA2          ldr     x2, [fp,#24]  // [V05 loc2]\r\n        B9800842          ldrsw   x2, [x2,#8]\r\n```\r\n\t\r\nis the same as, and the storing of `x0` can be done in the initialization above it.\r\n\r\n```\r\n        B4000120          cbz     x0, G_M32566_IG04\r\n        B9800842          ldrsw   x2, [x0,#8]\r\n```\r\n\r\nbut saves a load and store as `x2` us still live.\r\n\r\nlooking at the larger sequence:\r\n\r\n```\r\nG_M32566_IG02:\r\n        F9000FA0          str     x0, [fp,#24]  // [V05 loc2]\r\n        B4000120          cbz     x0, G_M32566_IG04\r\n        F9400FA2          ldr     x2, [fp,#24]  // [V05 loc2]\r\n        B9800842          ldrsw   x2, [x2,#8]\r\n        340000C2          cbz     w2, G_M32566_IG04\r\n\r\nG_M32566_IG03:\r\n        52800002          mov     w2, #0\r\n        F9400FA3          ldr     x3, [fp,#24]  // [V05 loc2]\r\n        B9800863          ldrsw   x3, [x3,#8]\r\n        6B03005F          cmp     w2, w3\r\n        54000202          bhs     G_M32566_IG08\r\n```\r\n\r\n`G_M32566_IG02` seems to be doing an initialization check on the pointer and `G_M32566_IG03` a `null` ptr check? But you can only get to `G_M32566_IG03` by falling through from `G_M32566_IG02` for which it's doing the same load it did in `G_M32566_IG02`.\r\n\r\nThis sequence can be:\r\n\r\n```\r\nG_M32566_IG02:\r\n        B4000120          cbz     x0, G_M32566_IG04\r\n        B9800842          ldrsw   x2, [x0,#8]\r\n        340000C2          cbz     w2, G_M32566_IG04\r\n\r\nG_M32566_IG03:\r\n        6B03005F          cmp     wzr, w2\r\n        54000202          bhs     G_M32566_IG08\r\n```\r\n\t\r\nBut this also shows an oddity here. Since you can only get to `G_M32566_IG03` if `x2` is `non-zero`, the check in `G_M32566_IG03` is odd, it seems to be superfluous.\r\n\r\nThe failure actions performed in `G_M32566_IG04` and `G_M32566_IG08` are different though, in the former it seems to just skip over the range check and goes to the initialization check of `b_ptr` where the latter will hit the `RNGCHKFAIL`.\r\n\r\nSo does it actually need the first check?\r\n\r\nThis seems to be the pattern for pinning any array for use with `Vector` `Create`, which gives a lot of overhead even before you load the vector.\r\n\r\n/CC @CarolEidt @tannergooding ","Url":"https://github.com/dotnet/coreclr/issues/24714","RelatedDescription":"Open issue \"[ARM64/Linux] Register allocator doesn't seem to always track liveness across basic blocks\" (#24714)"},{"Id":"447071937","IsPullRequest":false,"CreatedAt":"2019-05-22T11:04:53","Actor":"TamarChristinaArm","Number":"24713","RawContent":null,"Title":"[ARM64/Linux] Ineffincies when using initializing/cleaning unsafe pointers","State":"open","Body":"For the following case with `QuickJIT` turned off\r\n\r\n```\r\nstatic int[] Test(int[] a)\r\n{\r\n  unsafe {\r\n    fixed (int *a_ptr = a, b_ptr = b)\r\n    {\r\n    }\r\n  }\r\n  return a;\r\n}\r\n```\r\n\r\nThe initialization of the pointer correctly uses the zero register\r\n\r\n```\r\n        F9000FBF          str     xzr, [fp,#24] // [V05 loc2]\r\n        F9000BBF          str     xzr, [fp,#16] // [V06 loc3]\r\n```\r\n\t\r\nHowever it doesn't use `stp/ldp` when it's possible to.\r\n\r\nalso when cleaning up the `str`s suddenly don't use `xzr` anymore\r\n\r\n```\r\n        D2800001          mov     x1, #0\r\n        F9000FA1          str     x1, [fp,#24]  // [V05 loc2]\r\n        F9000BA1          str     x1, [fp,#16]  // [V06 loc3]\r\n```\r\n\r\n/CC @CarolEidt @tannergooding ","Url":"https://github.com/dotnet/coreclr/issues/24713","RelatedDescription":"Open issue \"[ARM64/Linux] Ineffincies when using initializing/cleaning unsafe pointers\" (#24713)"},{"Id":"447071914","IsPullRequest":false,"CreatedAt":"2019-05-22T11:04:50","Actor":"TamarChristinaArm","Number":"24712","RawContent":null,"Title":"[ARM64/Linux] Inefficient conditionals branching","State":"open","Body":"The following\r\n\r\n```\r\nstatic int[] Test(int[] a, int n)\r\n{\r\n  int y;\r\n  if (n == 3)\r\n    y = n;\r\n  else\r\n    y = n + 1;\r\n  a[2] = y;\r\n  return a;\r\n}\r\n```\r\n\r\nproduces the following conditional (with `QuickJIT` off)\r\n\r\n```\r\nG_M32566_IG02:\r\n        71000C5F          cmp     w2, #3\r\n        54000061          bne     G_M32566_IG03\r\n        52800061          mov     w1, #3\r\n        14000002          b       G_M32566_IG04\r\n```\r\n\r\nso for both the if and else case it branches, it has no fall through case that doesn't\r\nrequire the branch.\r\n\r\nbut also it has generated an extra mov here because it knows n is 3. However change the\r\ncondition to\r\n\r\n```\r\nstatic int[] Test(int[] a, int n)\r\n{\r\n  int y;\r\n  if (n > 3)\r\n    y = n;\r\n  else\r\n    y = n + 1;\r\n  a[2] = y;\r\n  return a;\r\n}\r\n```\r\n\r\nand it now just re-uses the register containing n since it's dead after the if anyway\r\n\r\n```\r\nG_M32566_IG02:\r\n        71000C5F          cmp     w2, #3\r\n        5400004D          ble     G_M32566_IG03\r\n        14000002          b       G_M32566_IG04\r\n\r\nG_M32566_IG03:\r\n        11000442          add     w2, w2, #1\r\n\r\nG_M32566_IG04:\r\n        52800041          mov     w1, #2\r\n        B9800803          ldrsw   x3, [x0,#8]\r\n        6B03003F          cmp     w1, w3\r\n        54000082          bhs     G_M32566_IG06\r\n        B9001802          str     w2, [x0,#24]\r\n```\r\n\r\nSo not quite sure why the second case generates smaller code.\r\n\r\nBut again the conditional can just be re-arranged to\r\n\r\n```\r\nG_M32566_IG02:\r\n        71000C5F          cmp     w2, #3\r\n        14000002          bgt     G_M32566_IG04\r\n```\r\n\t\t\r\nand remove a branch.\r\n\r\n/CC @CarolEidt @tannergooding ","Url":"https://github.com/dotnet/coreclr/issues/24712","RelatedDescription":"Open issue \"[ARM64/Linux] Inefficient conditionals branching\" (#24712)"},{"Id":"447071865","IsPullRequest":false,"CreatedAt":"2019-05-22T11:04:43","Actor":"TamarChristinaArm","Number":"24711","RawContent":null,"Title":"[ARM64/Linux] Range checks against constants contain unneeded moves","State":"open","Body":"It seems like the sequence for doing range checks was optimized for the variable case. when the index is a constant the comparison generates suboptimal code (with `QuickJIT` off).\r\n\r\n```\r\nstatic int[] Test(int[] a, int n)\r\n{\r\n  a[2] = n;\r\n  return a;\r\n}\r\n```\r\ngenerates\r\n```\r\n        52800041          mov     w1, #2\r\n        B9800803          ldrsw   x3, [x0,#8]\r\n        6B03003F          cmp     w1, w3\r\n        54000082          bhs     G_M32566_IG04\r\n        B9001802          str     w2, [x0,#24]\r\n```\r\n\r\nwhile flipping the branch condition would have gotten\r\n\r\n```\r\n        B9800803          ldrsw   x3, [x0,#8]\r\n        6B03003F          cmp     w3, #2\r\n        54000082          bls     G_M32566_IG04\r\n        B9001802          str     w2, [x0,#24]\r\n```\r\n\r\nsaving the need for a move and register usage.\r\n\r\n/CC @CarolEidt @tannergooding ","Url":"https://github.com/dotnet/coreclr/issues/24711","RelatedDescription":"Open issue \"[ARM64/Linux] Range checks against constants contain unneeded moves\" (#24711)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"447435416","IsPullRequest":true,"CreatedAt":"2019-05-23T03:35:46","Actor":"scottaddie","Number":"11411","RawContent":null,"Title":"Remove ef command from help output","State":"open","Body":"The `dotnet ef` command was removed from the .NET Core SDK as of 3.0 Preview 4 (per https://docs.microsoft.com/ef/core/what-is-new/ef-core-3.0/breaking-changes#the-ef-core-command-line-tool-dotnet-ef-is-no-longer-part-of-the-net-core-sdk). This PR removes `ef` from the `dotnet --help` output. It also removes 2 related tests.\r\n\r\nRelated to the discussion in https://github.com/aspnet/EntityFrameworkCore/issues/14016.","Url":"https://github.com/dotnet/cli/pull/11411","RelatedDescription":"Open PR \"Remove ef command from help output\" (#11411)"},{"Id":"447397296","IsPullRequest":false,"CreatedAt":"2019-05-23T00:26:23","Actor":"dsplaisted","Number":"11410","RawContent":null,"Title":"Fail gracefully when building on non-Windows and WindowsDesktop shared framework is referenced","State":"open","Body":"For the 3.0 release, we plan to not support building Windows Forms and WPF apps on non-Windows operating systems.  (We may consider supporting it later, see for example https://github.com/dotnet/wpf/issues/688).\r\n\r\nMost WPF apps will use Microsoft.NET.Sdk.WindowsDesktop, and the experience for that on non-Windows is covered here: https://github.com/dotnet/cli/issues/10842\r\n\r\nHowever, some projects may not use the WindowsDesktop SDK, but will still have a WindowsDesktop FrameworkReference (either explicitly or via a PackageReference).  In that case, we should also fail gracefully.  This means:\r\n\r\n- On non-Windows, don't pre-emptively download WindowsDesktop targeting or runtime packs (which we normally do in case we encounter a transitive FrameworkReference)\r\n- When we encounter a WindowsDesktop FrameworkReference on non-Windows, generate an error message stating that the project can only be built on Windows (instead of the generic error message).","Url":"https://github.com/dotnet/cli/issues/11410","RelatedDescription":"Open issue \"Fail gracefully when building on non-Windows and WindowsDesktop shared framework is referenced\" (#11410)"},{"Id":"447395763","IsPullRequest":true,"CreatedAt":"2019-05-23T00:18:14","Actor":"KevinRansom","Number":"11409","RawContent":null,"Title":"Update nunit test dependencies","State":"open","Body":"update nunit template","Url":"https://github.com/dotnet/cli/pull/11409","RelatedDescription":"Open PR \"Update nunit test dependencies\" (#11409)"},{"Id":"447101102","IsPullRequest":true,"CreatedAt":"2019-05-22T23:57:09","Actor":"dotnet-maestro[bot]","Number":"11400","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190521.1\r\n- **Date Produced**: 5/22/2019 4:36 AM\r\n- **Commit**: 7e9c6d6aef7962c25a8a0ad1f9be9fc5c3f00ca9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19271.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11400","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11400)"},{"Id":"447097835","IsPullRequest":true,"CreatedAt":"2019-05-22T23:56:43","Actor":"dotnet-maestro[bot]","Number":"11399","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190521.2\r\n- **Date Produced**: 5/22/2019 7:08 AM\r\n- **Commit**: a67433ffadecd0c6848de330914a7928806d1240\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview6.19271.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11399","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11399)"},{"Id":"447372742","IsPullRequest":true,"CreatedAt":"2019-05-22T23:17:03","Actor":"dotnet-maestro[bot]","Number":"11407","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190521.7\r\n- **Date Produced**: 5/22/2019 1:45 AM\r\n- **Commit**: 7a6fb6528b2060cd9e3a3d92535f5b6fdc6b2e82\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19271.7\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11407","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#11407)"},{"Id":"447357917","IsPullRequest":true,"CreatedAt":"2019-05-22T23:17:02","Actor":"wli3","Number":"11405","RawContent":null,"Title":"Change to find current muxer","State":"closed","Body":"fix https://github.com/dotnet/cli/issues/11380 more discussion in the issue\r\n\r\nWhy we essentially move back to the original implementation in https://github.com/dotnet/cli/issues/2489 ?\r\n\r\nIt is more relate to the usage of corehost [CoreHost.cs](https://github.com/dotnet/cli/blob/342cf7949037a17f4bf18a59faf6fcff6a4d25b1/src/Microsoft.DotNet.Cli.Utils/CoreHost.cs)\r\n\r\nMuxer share the same logic with Muxer.GetDataFromAppDomain, by the time majority of the logic of [Publish](https://github.com/dotnet/cli/blob/342cf7949037a17f4bf18a59faf6fcff6a4d25b1/src/dotnet/commands/dotnet-publish/PublishCommand.cs) is in CLI and it need corehost to find correct asset location.\r\n\r\nAs part of the work. It changed to the current way of finding FX location. But I believe it was a mistake to assume dotnet.exe will be in the parent directory (we did not count multi level loop up in). Since there is no more corehost.cs and publish is in SDK. We should use the simple and correct solution.\r\n\r\nTryResolverMuxerFromPath is used when it was a separate library. And self contain app can get result from it. But it is also no longer needed.\r\n","Url":"https://github.com/dotnet/cli/pull/11405","RelatedDescription":"Closed or merged PR \"Change to find current muxer\" (#11405)"},{"Id":"447374440","IsPullRequest":true,"CreatedAt":"2019-05-22T22:46:37","Actor":"wli3","Number":"11408","RawContent":null,"Title":"Update arcade script","State":"closed","Body":"I need https://github.com/dotnet/arcade/pull/2836 to get in CLI.\r\n\r\nI just did a manual copy paste.\r\n","Url":"https://github.com/dotnet/cli/pull/11408","RelatedDescription":"Closed or merged PR \"Update arcade script\" (#11408)"},{"Id":"447360056","IsPullRequest":false,"CreatedAt":"2019-05-22T22:23:50","Actor":"wli3","Number":"11406","RawContent":null,"Title":"DotNetCoreInstaller@1` task failed with non-zero exit code when switch to 1","State":"closed","Body":"From @AArnott \r\n\r\nActually, [my PR to switch to use `UseDotNet@2`](https://github.com/microsoft/vs-streamjsonrpc/pull/283) can't complete because 3 PR builds in a row have failed in the `dotnet test` step. [All tests pass, but `dotnet.exe` returns a nonzero exit code](https://dev.azure.com/azure-public/vside/_build/results?buildId=6240&view=logs&jobId=2d2b3007-3c5c-5840-9bb0-2b1ea49925f3&taskId=ea74d3ec-af51-57bf-65e6-f50dd234a1e5&lineStart=1163&lineEnd=1177&colStart=1&colEnd=1).\r\n\r\n```\r\n\r\nTotal tests: 246. Passed: 246. Failed: 0. Skipped: 0.\r\nTest Run Successful.\r\nTest execution time: 10.1186 Seconds\r\n     1>Done Building Project \"d:\\a\\1\\s\\src\\StreamJsonRpc.Tests\\StreamJsonRpc.Tests.csproj\" (VSTest target(s)) -- FAILED.\r\n\r\nBuild FAILED.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:22.63\r\n##[error]Error: The process 'C:\\hostedtoolcache\\windows\\dotnet\\dotnet.exe' failed with exit code 1\r\n##[warning]Invalid results file. Make sure the result format of the file 'd:\\a\\_temp\\VssAdministrator_fv-az48_2019-05-22_04_51_17.trx' matches 'VSTest' test results format.\r\n##[error]Dotnet command failed with non-zero exit code on the following projects : d:\\a\\1\\s\\src\\StreamJsonRpc.Tests\\StreamJsonRpc.Tests.csproj\r\n```\r\n\r\nAs you can see it also emits a warning about the .trx file. None of this happens when I use the `DotNetCoreInstaller@0` task. I wonder why in the world switching installer tasks would cause this problem. ","Url":"https://github.com/dotnet/cli/issues/11406","RelatedDescription":"Closed issue \"DotNetCoreInstaller@1` task failed with non-zero exit code when switch to 1\" (#11406)"},{"Id":"446935452","IsPullRequest":true,"CreatedAt":"2019-05-22T22:23:19","Actor":"wli3","Number":"11396","RawContent":null,"Title":"Delete flaky test","State":"closed","Body":" This load test like test style is not good for unit test. The error is likely caused by timeout since there are [instance](https://dev.azure.com/dnceng/public/_build/results?buildId=196283&view=ms.vss-test-web.build-test-results-tab&runId=4765564&resultId=100004) that it ran 24 seconds (cap 50 seconds). And it is fault positive. The deadlock has not been seen in product.\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11396","RelatedDescription":"Closed or merged PR \"Delete flaky test\" (#11396)"},{"Id":"447113862","IsPullRequest":false,"CreatedAt":"2019-05-22T21:13:05","Actor":"PDostalek","Number":"11401","RawContent":null,"Title":"[loc][Query][Cli] Localizability of \"ValueMustBeAnObject\" ","State":"closed","Body":"Hi,\r\nplease help localization team to answer question from translator.\r\nIn case translator is not sure about context/meaning/localizability of string we raise a question.\r\n\r\nSource:\r\nThe property '{0}' must be an object if it is specified.\r\n\r\nFile Name:\r\ndotnet\\commands\\dotnet-run\\xlf\\LocalizableStrings.xlf\r\n\r\n==========================================\r\nQuery:\r\nPlease clarify if \"it\" stands for the property or the object.","Url":"https://github.com/dotnet/cli/issues/11401","RelatedDescription":"Closed issue \"[loc][Query][Cli] Localizability of \"ValueMustBeAnObject\" \" (#11401)"},{"Id":"447114913","IsPullRequest":false,"CreatedAt":"2019-05-22T21:12:50","Actor":"PDostalek","Number":"11402","RawContent":null,"Title":" [loc][Query][Cli] Localizability of \"CouldNotConvertToString\" ","State":"closed","Body":"Hi,\r\nplease help localization team to answer question from translator.\r\nIn case translator is not sure about context/meaning/localizability of string we raise a question.\r\n\r\nSource:\r\nCould not convert the value of property '{0}' to a string.\r\n\r\nFile Name:\r\ndotnet\\commands\\dotnet-run\\xlf\\LocalizableStrings.xlf\r\n\r\n==========================================\r\nQuery:\r\nPlease, define what will placeholder be replaced by.","Url":"https://github.com/dotnet/cli/issues/11402","RelatedDescription":"Closed issue \" [loc][Query][Cli] Localizability of \"CouldNotConvertToString\" \" (#11402)"},{"Id":"447339998","IsPullRequest":true,"CreatedAt":"2019-05-22T20:57:50","Actor":"livarcocc","Number":"11404","RawContent":null,"Title":"Update NuGet to 5.2.0-preview2.6020","State":"open","Body":"","Url":"https://github.com/dotnet/cli/pull/11404","RelatedDescription":"Open PR \"Update NuGet to 5.2.0-preview2.6020\" (#11404)"},{"Id":"447310981","IsPullRequest":false,"CreatedAt":"2019-05-22T19:44:43","Actor":"dasMulli","Number":"11403","RawContent":null,"Title":"Failure in Telemetry sending should not be printed to output","State":"open","Body":"## Steps to reproduce\r\n* macOS\r\n* .NET Core 3.0 preview 5\r\n* call an unknown `dotnet` command\r\n\r\n## Expected  behavior\r\nCommand is run or error message is written that a command is not found\r\n\r\n## Actual behavior\r\n```\r\n╰─ dotnet asdfs\r\nCould not execute because the specified command or file was not found.\r\nPossible reasons for this include:\r\n  * You misspelled a built-in dotnet command.\r\n  * You intended to execute a .NET Core program, but dotnet-asdfs does not exist.\r\n  * You intended to run a global tool, but a dotnet-prefixed executable with this name could not be found on the PATH.\r\nInternal CLR error. (0x80131506)\r\n   at Interop+Sys.EnumerateGatewayAddressesForInterface(UInt32, DnsAddessDiscoveredCallback)\r\n   at Interop+Sys.EnumerateGatewayAddressesForInterface(UInt32, DnsAddessDiscoveredCallback)\r\n   at System.Net.NetworkInformation.BsdIpInterfaceProperties.GetGatewayAddresses(Int32)\r\n   at System.Net.NetworkInformation.BsdIpInterfaceProperties..ctor(System.Net.NetworkInformation.BsdNetworkInterface, Int32)\r\n   at System.Net.NetworkInformation.BsdNetworkInterface..ctor(System.String)\r\n   at System.Net.NetworkInformation.BsdNetworkInterface.GetOrCreate(System.Collections.Generic.Dictionary`2<System.String,System.Net.NetworkInformation.BsdNetworkInterface>, System.String)\r\n   at System.Net.NetworkInformation.BsdNetworkInterface+<>c__DisplayClass5_0.<GetBsdNetworkInterfaces>b__2(System.String, LinkLayerAddressInfo*)\r\n   at Interop+Sys.EnumerateInterfaceAddresses(IPv4AddressDiscoveredCallback, IPv6AddressDiscoveredCallback, LinkLayerAddressDiscoveredCallback)\r\n   at Interop+Sys.EnumerateInterfaceAddresses(IPv4AddressDiscoveredCallback, IPv6AddressDiscoveredCallback, LinkLayerAddressDiscoveredCallback)\r\n   at System.Net.NetworkInformation.BsdNetworkInterface.GetBsdNetworkInterfaces()\r\n   at System.Net.NetworkInformation.NetworkInterfacePal.GetIsNetworkAvailable()\r\n   at System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable()\r\n   at Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.Sender.Send(Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.StorageTransmission, System.TimeSpan ByRef)\r\n   at Microsoft.DotNet.Cli.Telemetry.PersistenceChannel.Sender.SendLoop()\r\n   at System.Threading.Tasks.Task.InnerInvoke()\r\n   at System.Threading.Tasks.Task+<>c.<.cctor>b__274_0(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef, System.Threading.Thread)\r\n   at System.Threading.Tasks.Task.ExecuteEntryUnsafe(System.Threading.Thread)\r\n   at System.Threading.Tasks.ThreadPoolTaskScheduler+<>c.<.cctor>b__10_0(System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart_Context(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart(System.Object)                                         \r\n```\r\n\r\n## Environment data\r\n`netstat -nr` output:\r\n```\r\nRouting tables\r\n\r\nInternet:\r\nDestination        Gateway            Flags        Refs      Use   Netif Expire\r\ndefault            10.0.20.1          UGSc          212        0     en0       \r\n10.0.20/24         link#10            UCS             3        0     en0      !\r\n10.0.20.1/32       link#10            UCS             1        0     en0      !\r\n10.0.20.1          88:f7:c7:19:af:38  UHLWIir        53       63     en0   1183\r\n10.0.20.21         74:81:14:3e:b8:82  UHLWIi          1       99     en0   1071\r\n10.0.20.25/32      link#10            UCS             1        0     en0      !\r\n10.0.20.25         f0:18:98:2a:14:55  UHLWIi          3    26429     lo0       \r\n10.0.20.153        40:9c:28:55:70:55  UHLWIi          2    29726     en0   1097\r\n10.0.20.255        ff:ff:ff:ff:ff:ff  UHLWbI          0        2     en0      !\r\n127                127.0.0.1          UCS             0        0     lo0       \r\n127.0.0.1          127.0.0.1          UH              4    99561     lo0       \r\n169.254            link#10            UCS             2        0     en0      !\r\n169.254.164.251    70:56:81:c7:5d:3e  UHLSW           0       12     en0      !\r\n224.0.0/4          link#10            UmCS            3        0     en0      !\r\n224.0.0.251        1:0:5e:0:0:fb      UHmLWI          0      119     en0       \r\n224.0.0.252        1:0:5e:0:0:fc      UHmLWI          0      106     en0       \r\n239.255.255.250    1:0:5e:7f:ff:fa    UHmLWI          0      724     en0       \r\n255.255.255.255/32 link#10            UCS             1        0     en0      !\r\n255.255.255.255    ff:ff:ff:ff:ff:ff  UHLWbI          0        2     en0      !\r\n\r\nInternet6:\r\nDestination                             Gateway                         Flags         Netif Expire\r\ndefault                                 fe80::%utun0                    UGcI          utun0       \r\ndefault                                 fe80::%utun1                    UGcI          utun1       \r\ndefault                                 fe80::%utun2                    UGcI          utun2       \r\n::1                                     ::1                             UHL             lo0       \r\nfe80::%lo0/64                           fe80::1%lo0                     UcI             lo0       \r\nfe80::1%lo0                             link#2                          UHLI            lo0       \r\nfe80::%en5/64                           link#8                          UCI             en5       \r\nfe80::aede:48ff:fe00:1122%en5           ac:de:48:0:11:22                UHLI            lo0       \r\nfe80::aede:48ff:fe33:4455%en5           ac:de:48:33:44:55               UHLWIi          en5       \r\nfe80::%awdl0/64                         link#12                         UCI           awdl0       \r\nfe80::dcd9:4cff:fef2:f19e%awdl0         de:d9:4c:f2:f1:9e               UHLI            lo0       \r\nfe80::%utun0/64                         fe80::1bde:11de:239f:14e8%utun0 UcI           utun0       \r\nfe80::1bde:11de:239f:14e8%utun0         link#18                         UHLI            lo0       \r\nfe80::%utun1/64                         fe80::570:21dd:179:a871%utun1   UcI           utun1       \r\nfe80::570:21dd:179:a871%utun1           link#20                         UHLI            lo0       \r\nfe80::%utun2/64                         fe80::8be:f0d8:93e3:7e3c%utun2  UcI           utun2       \r\nfe80::8be:f0d8:93e3:7e3c%utun2          link#21                         UHLI            lo0       \r\nff01::%lo0/32                           ::1                             UmCI            lo0       \r\nff01::%en5/32                           link#8                          UmCI            en5       \r\nff01::%awdl0/32                         link#12                         UmCI          awdl0       \r\nff01::%utun0/32                         fe80::1bde:11de:239f:14e8%utun0 UmCI          utun0       \r\nff01::%utun1/32                         fe80::570:21dd:179:a871%utun1   UmCI          utun1       \r\nff01::%utun2/32                         fe80::8be:f0d8:93e3:7e3c%utun2  UmCI          utun2       \r\nff02::%lo0/32                           ::1                             UmCI            lo0       \r\nff02::%en5/32                           link#8                          UmCI            en5       \r\nff02::%awdl0/32                         link#12                         UmCI          awdl0       \r\nff02::%utun0/32                         fe80::1bde:11de:239f:14e8%utun0 UmCI          utun0       \r\nff02::%utun1/32                         fe80::570:21dd:179:a871%utun1   UmCI          utun1       \r\nff02::%utun2/32                         fe80::8be:f0d8:93e3:7e3c%utun2  UmCI          utun2  \r\n```\r\n\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.0.100-preview5-011568/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  2.1.302 [/usr/local/share/dotnet/sdk]\r\n  2.1.403 [/usr/local/share/dotnet/sdk]\r\n  2.1.500 [/usr/local/share/dotnet/sdk]\r\n  2.2.100-rtm-009602 [/usr/local/share/dotnet/sdk]\r\n  2.2.100 [/usr/local/share/dotnet/sdk]\r\n  2.2.103 [/usr/local/share/dotnet/sdk]\r\n  2.2.104 [/usr/local/share/dotnet/sdk]\r\n  2.2.105 [/usr/local/share/dotnet/sdk]\r\n  2.2.106 [/usr/local/share/dotnet/sdk]\r\n  2.2.202 [/usr/local/share/dotnet/sdk]\r\n  2.2.203 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview-010184 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview3-010431 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview5-011568 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0-preview1-final [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.0-rc1-final [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0-rtm-35673 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.4 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0-preview1-final [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.0-rc1-final [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0-rtm-35673 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.4 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-19075-0444 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.4 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-preview1-26216-03 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-rc1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0-rtm-27109-04 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.4 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27324-5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11403","RelatedDescription":"Open issue \"Failure in Telemetry sending should not be printed to output\" (#11403)"},{"Id":"446971389","IsPullRequest":false,"CreatedAt":"2019-05-22T07:18:36","Actor":"AriNuer","Number":"11398","RawContent":null,"Title":"Installation components are over translated on sdk installation wizard with Chinese","State":"open","Body":"## Steps to reproduce\r\n1. Open SDK 3.0.100-preview6-012031 on Win10-x64 CHN\r\n2. Observe the installation completion page of the installation wizard \r\n\r\n## Expected  behavior\r\nThe installation components should show in English rather than Chinese\r\n\r\n## Actual behavior\r\nOver translation occurs on installation components\r\n![image](https://user-images.githubusercontent.com/42136111/58154354-0745b380-7ca4-11e9-80a3-2a074812c838.png)\r\n\r\nNote:\r\nRelated components show in English during installation, take .net core runtime for example\r\n![image](https://user-images.githubusercontent.com/42136111/58154466-4116ba00-7ca4-11e9-9ae6-3988eccd72d3.png)\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK（反映任何 global.json）:\r\n Version:   3.0.100-preview6-012031\r\n Commit:    f84d1b7f66\r\n\r\n运行时环境:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x86\r\n Base Path:   C:\\Program Files (x86)\\dotnet\\sdk\\3.0.100-preview6-012031\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27720-09\r\n  Commit:  c3145b06ba\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-preview6-012031 [C:\\Program Files (x86)\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0-preview6-19271-01 [C:\\Program Files (x86)\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview6-27720-09 [C:\\Program Files (x86)\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview6-27720-09 [C:\\Program Files (x86)\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11398","RelatedDescription":"Open issue \"Installation components are over translated on sdk installation wizard with Chinese\" (#11398)"},{"Id":"446960503","IsPullRequest":false,"CreatedAt":"2019-05-22T06:47:27","Actor":"Jepson109","Number":"11397","RawContent":null,"Title":"Button \"install\" is truncated on the SDK installation wizard with Japanese","State":"open","Body":"## Steps to reproduce\r\n1.Open the sdk installation file (.NET core sdk 3.0.100-preview6-012031).\r\n2.Observe the button \"インストール\" .\r\n\r\n## Expected  behavior\r\nButton content isn't truncated\r\n\r\n## Actual behavior\r\nButton content is truncated\r\n![image](https://user-images.githubusercontent.com/38854445/58152836-23dfec80-7ca0-11e9-8d90-c524ea6022cc.png)\r\n![image](https://user-images.githubusercontent.com/38854445/58152967-73261d00-7ca0-11e9-9b51-58181604cb22.png)\r\n\r\n## Environment data\r\nVS Version: 16.2.0 Preview 2.0 [28921.339.d16.2stg]\r\n`dotnet --info` output:\r\n.NET Core SDK (global.json を反映):\r\n Version:   3.0.100-preview6-012031\r\n Commit:    f84d1b7f66\r\n\r\nランタイム環境:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012031\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27720-09\r\n  Commit:  c3145b06ba\r\n\r\n.NET Core SDKs installed:\r\n  2.1.800-preview-009677 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.400-preview-010195 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview6-012031 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview6-19271-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview6-27720-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview6-27720-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11397","RelatedDescription":"Open issue \"Button \"install\" is truncated on the SDK installation wizard with Japanese\" (#11397)"},{"Id":"446782608","IsPullRequest":true,"CreatedAt":"2019-05-22T05:27:23","Actor":"dsplaisted","Number":"11392","RawContent":null,"Title":"Update stage 0","State":"closed","Body":"Includes NuGet update which should unblock #11366 ","Url":"https://github.com/dotnet/cli/pull/11392","RelatedDescription":"Closed or merged PR \"Update stage 0\" (#11392)"},{"Id":"446922390","IsPullRequest":false,"CreatedAt":"2019-05-22T04:02:04","Actor":"Jepson109","Number":"11395","RawContent":null,"Title":"Hotkey conflict on the SDK installation wizard with Turkish","State":"open","Body":"## Steps to reproduce\r\n1.Open  the sdk installation file (.NET core sdk 3.0.100-preview6-012031)\r\n2.Tap \"Alt\" key to observe the hotkey on installation wizard\r\n\r\n## Expected  behavior\r\nHotkeys work fine on the installation wizard\r\n\r\n## Actual behavior\r\nHotkey \"k\" is conflicted on the installation wizard\r\n![Untitled](https://user-images.githubusercontent.com/38854445/58146582-5500f280-7c89-11e9-805c-36128951e94e.png)\r\n## Environment data\r\nVS Version: 16.2.0 Preview 2.0 [28920.75.d16.2stg ]\r\n`dotnet --info` output:\r\n.NET Core SDK (varsa global.json'u yansıtır):\r\n Version:   3.0.100-preview6-012031\r\n Commit:    f84d1b7f66\r\n\r\nÇalışma Zamanı Ortamı:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012031\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27720-09\r\n  Commit:  c3145b06ba\r\n\r\n.NET Core SDKs installed:\r\n  2.1.800-preview-009677 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.400-preview-010195 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview6-012031 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview6-19271-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview6-27720-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview6-27720-09 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11395","RelatedDescription":"Open issue \"Hotkey conflict on the SDK installation wizard with Turkish\" (#11395)"},{"Id":"446877660","IsPullRequest":true,"CreatedAt":"2019-05-22T03:57:15","Actor":"livarcocc","Number":"11394","RawContent":null,"Title":"Merge 2.2.3xx into 2.2.4xx","State":"closed","Body":"\r\n","Url":"https://github.com/dotnet/cli/pull/11394","RelatedDescription":"Closed or merged PR \"Merge 2.2.3xx into 2.2.4xx\" (#11394)"},{"Id":"446876975","IsPullRequest":true,"CreatedAt":"2019-05-22T03:56:15","Actor":"livarcocc","Number":"11393","RawContent":null,"Title":"Merge 2.1.7xx into release 2.1.8xx","State":"closed","Body":"\r\n","Url":"https://github.com/dotnet/cli/pull/11393","RelatedDescription":"Closed or merged PR \"Merge 2.1.7xx into release 2.1.8xx\" (#11393)"},{"Id":"446311673","IsPullRequest":true,"CreatedAt":"2019-05-21T20:32:13","Actor":"livarcocc","Number":"11382","RawContent":null,"Title":"Update branding to 2.1.701","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11382","RelatedDescription":"Closed or merged PR \"Update branding to 2.1.701\" (#11382)"},{"Id":"446312935","IsPullRequest":true,"CreatedAt":"2019-05-21T19:24:32","Actor":"livarcocc","Number":"11385","RawContent":null,"Title":"Update branding to 2.2.301","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11385","RelatedDescription":"Closed or merged PR \"Update branding to 2.2.301\" (#11385)"},{"Id":"446312584","IsPullRequest":true,"CreatedAt":"2019-05-21T19:24:21","Actor":"livarcocc","Number":"11384","RawContent":null,"Title":"Update branding to 2.2.205","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11384","RelatedDescription":"Closed or merged PR \"Update branding to 2.2.205\" (#11384)"},{"Id":"446579538","IsPullRequest":true,"CreatedAt":"2019-05-21T12:02:11","Actor":"dotnet-bot","Number":"11391","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11391","RelatedDescription":"Open PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#11391)"},{"Id":"446579500","IsPullRequest":true,"CreatedAt":"2019-05-21T12:02:06","Actor":"dotnet-bot","Number":"11390","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11390","RelatedDescription":"Open PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#11390)"},{"Id":"446579474","IsPullRequest":true,"CreatedAt":"2019-05-21T12:02:03","Actor":"dotnet-bot","Number":"11389","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.2.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11389","RelatedDescription":"Open PR \"Merge release/2.1.5xx to release/2.2.1xx\" (#11389)"},{"Id":"446579450","IsPullRequest":true,"CreatedAt":"2019-05-21T12:01:59","Actor":"dotnet-bot","Number":"11388","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.1.6xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.1.6xx\ngit reset --hard upstream/release/2.1.6xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.1.6xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11388","RelatedDescription":"Open PR \"Merge release/2.1.5xx to release/2.1.6xx\" (#11388)"},{"Id":"446445509","IsPullRequest":false,"CreatedAt":"2019-05-21T06:51:51","Actor":"atifaziz","Number":"11387","RawContent":null,"Title":"Multiple global tool versions installed with unexpected behaviours thereafter","State":"open","Body":"## Steps to reproduce\r\n\r\nI honestly don't know how I or `dotnet tool install -g` got me here 😕 but I have two version of [`dotnet-try`](https://www.nuget.org/packages/dotnet-try/) installed:\r\n\r\n```\r\nPS> dotnet tool list -g\r\nPackage Id                             Version           Commands                   \r\n------------------------------------------------------------------------------------\r\namazon.lambda.testtool-2.1             0.9.2             dotnet-lambda-test-tool-2.1\r\namazon.lambda.tools                    3.2.3             dotnet-lambda              \r\nbenchmarkdotnet.tool                   0.11.5            dotnet-benchmark           \r\ncoverlet.console                       1.5.1             coverlet                   \r\ncsharpminifierconsole                  1.0.2             csmin                      \r\ncsharpsyntaxvalidator                  1.1.0             csval                      \r\ndotnet-ignore                          1.0.4             dotnet-ignore              \r\ndotnet-nuget-gc                        0.1.12            dotnet-nuget-gc            \r\ndotnet-outdated                        2.2.0             dotnet-outdated            \r\ndotnet-reportgenerator-globaltool      4.1.5             reportgenerator            \r\ndotnet-script                          0.29.0            dotnet-script              \r\ndotnet-symbol                          1.0.3             dotnet-symbol              \r\ndotnet-t4                              2.0.4             t4                         \r\ndotnet-try                             1.0.19264.11      dotnet-try                 \r\ndotnet-try                             1.0.19266.17      dotnet-try                 \r\ndotnet-warp                            1.0.9             dotnet-warp                \r\ndotnetsay                              2.1.4             dotnetsay                  \r\ndotnetthx                              0.1.2             dotnet-thx                 \r\nelemental.sysinfotool                  0.5.0             sysinfo                    \r\ngit-istage                             0.2.61            git-istage                 \r\ngit-rocket-filter                      1.0.1             git-rocket-filter          \r\ngit-status-cli                         1.0.0             git-status                 \r\nnyancat                                1.1.0             nyancat                    \r\nrecolor                                2.4.0             recolor                    \r\nsourcelink                             3.0.0             sourcelink                 \r\n```\r\n\r\nHowever, when I try to update, I get an error:\r\n\r\n```\r\nPS> dotnet tool update -g dotnet-try\r\nTool 'dotnet-try' has multiple versions installed and cannot be updated.\r\n```\r\n\r\nAnd the same happen when trying to uninstall:\r\n\r\n```\r\nPS> dotnet tool uninstall -g dotnet-try\r\nTool 'dotnet-try' has multiple versions installed and cannot be uninstalled.\r\n```\r\n\r\nWhen I look at the help for `uninstall`, I do not see a way to uninstall a specific version:\r\n\r\n```\r\nUsage: dotnet tool uninstall [options] <PACKAGE_ID>\r\n\r\nArguments:\r\n  <PACKAGE_ID>   The NuGet Package Id of the tool to uninstall.\r\n\r\nOptions:\r\n  -g, --global         Uninstall the tool from the current user's tools directory.\r\n  --tool-path <PATH>   The directory containing the tool to uninstall.\r\n  -h, --help           Show command line help.\r\n```\r\n\r\nInterestingly, I can still run `dotnet-try` and when I do with its `--version` switch, I see that it's running the older version (1.0.19264.11 < 1.0.19266.17):\r\n\r\n    PS> dotnet try --version\r\n    1.0.26411+32b271139a2df7175d00a808cca2b85c59504b70\r\n\r\n## Expected  behavior\r\n\r\nExpected one of the following:\r\n\r\n- latest version of the tool to run\r\n- `install` should have never let me get into this situation in the first place\r\n- `uninstall` should uninstall all versions\r\n- `uninstall` should have a `--version` flag\r\n\r\n## Actual behavior\r\n\r\n- Impossible to update\r\n- Impossible to uninstall\r\n- Older version of tool is run\r\n\r\n## Environment data\r\n\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.204\r\n Commit:    8757db13ec\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.204\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.5\r\n  Commit:  0a3c9209c0\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.14 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.204 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n","Url":"https://github.com/dotnet/cli/issues/11387","RelatedDescription":"Open issue \"Multiple global tool versions installed with unexpected behaviours thereafter\" (#11387)"},{"Id":"446312019","IsPullRequest":true,"CreatedAt":"2019-05-21T03:26:51","Actor":"livarcocc","Number":"11383","RawContent":null,"Title":"Update branding to 2.2.108","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11383","RelatedDescription":"Closed or merged PR \"Update branding to 2.2.108\" (#11383)"},{"Id":"446321270","IsPullRequest":false,"CreatedAt":"2019-05-20T21:35:29","Actor":"wli3","Number":"11386","RawContent":null,"Title":"Local tools vs2019 v16.1 -- There was an error running the selected code generator","State":"open","Body":"From @restrellasosa\r\n\r\n[\r\n![Capture](https://user-images.githubusercontent.com/6253560/57991475-38906a80-7a7d-11e9-9ff6-5bad861fe8b6.JPG)\r\n](url)\r\n\r\nHow i can fix this. I try all! I dont know why and if anybody have knowlegde pls!\r\n\r\n--------------------------\r\n\r\nFrom @tebeco\r\n@restrellasosa \r\nis that related to local tool ? or should it be in another issue ?\r\n\r\n--------------------------\r\nFrom @restrellasosa \r\n\r\nLocal tools vs2019 v16.1\r\n[cid:image002.png@01D50E9E.F9466720]\r\n\r\n[cid:image006.png@01D50E9E.F9466720]\r\n\r\nEnviado desde Correo<https://go.microsoft.com/fwlink/?LinkId=550986> para Windows 10\r\n\r\n----------------------------\r\nFrom @tebeco\r\n\r\nit's visual studio right ?\r\nVisual Studio is your IDE\r\nLocal tool are the name given to a specific tooling ship via nuget to extend `dotnet.exe`\r\n\r\nif your issue is related to Visual Studio and it installation\r\nCan delete your comments here and create an issue in Visual Studio feedback hub ?\r\nfor that just click the \"Feedback\" button in visual studio ? It's in the top right corner next to the \"Live Share\" button","Url":"https://github.com/dotnet/cli/issues/11386","RelatedDescription":"Open issue \"Local tools vs2019 v16.1 -- There was an error running the selected code generator\" (#11386)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"444399962","IsPullRequest":true,"CreatedAt":"2019-05-22T19:20:47","Actor":"dotnet-maestro[bot]","Number":"1192","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190514.13\r\n- **Date Produced**: 5/15/2019 2:37 AM\r\n- **Commit**: 670f6ee1a619a2a7c84cfdfe2a1c84fbe94e1c6b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19264.13\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190516.2\r\n- **Date Produced**: 5/16/2019 8:24 AM\r\n- **Commit**: 37c11672ee11dc2b3365b95a29e0c012f44032be\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19266.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19266.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19266.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19266.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19266.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190516.4\r\n- **Date Produced**: 5/16/2019 7:11 PM\r\n- **Commit**: 61cc7d4d347300835925ce5245bfc3ecb6b621d7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19266.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19266.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19266.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19266.4\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19266.4\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190517.7\r\n- **Date Produced**: 5/18/2019 4:34 AM\r\n- **Commit**: 55ce2900743cb609e51e2c6487e87e42eb627880\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19267.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19267.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19267.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19267.7\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19267.7\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190518.2\r\n- **Date Produced**: 5/18/2019 3:22 PM\r\n- **Commit**: 6d0514d3da59137630b9add5b5e619bce2631f02\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19268.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19268.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19268.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19268.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19268.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190520.1\r\n- **Date Produced**: 5/20/2019 8:30 AM\r\n- **Commit**: e913fb3b02d4089a91ff91c041c5f6e7c29038b0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19270.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19270.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19270.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19270.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19270.1\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190520.2\r\n- **Date Produced**: 5/20/2019 1:26 PM\r\n- **Commit**: 3b0760f8789d5d4bd146b36bd9051696d7a56bfa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19270.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19270.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19270.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19270.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19270.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190521.7\r\n- **Date Produced**: 5/22/2019 1:45 AM\r\n- **Commit**: 7a6fb6528b2060cd9e3a3d92535f5b6fdc6b2e82\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19271.7\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1192","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1192)"},{"Id":"447122667","IsPullRequest":true,"CreatedAt":"2019-05-22T13:15:56","Actor":"dotnet-maestro[bot]","Number":"1204","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190521.9\r\n- **Date Produced**: 5/22/2019 6:10 AM\r\n- **Commit**: b9b357f9a5a6ccf6a70c2e13b5a7d84a3ed1a684\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19271.9\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19271.9\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19271.9\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1204","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1204)"},{"Id":"445645996","IsPullRequest":true,"CreatedAt":"2019-05-21T22:04:59","Actor":"terrajobst","Number":"1198","RawContent":null,"Title":"Add missing members to MemoryMarshal","State":"closed","Body":"This fixes #1193.","Url":"https://github.com/dotnet/standard/pull/1198","RelatedDescription":"Closed or merged PR \"Add missing members to MemoryMarshal\" (#1198)"},{"Id":"444621714","IsPullRequest":false,"CreatedAt":"2019-05-21T22:04:59","Actor":"wtgodbe","Number":"1193","RawContent":null,"Title":"Fix APICompat issues with netstandard2.0 System.Memory","State":"closed","Body":"After adding a shim for `System.Memory` to netstandard2.1, we uncovered an incompatibility with netstandard2.0:\r\n\r\nhttps://github.com/dotnet/standard/blob/d3413ee9ec761bdf067114a498b9da3ebf0149df/src/apicompat/baselines/ApiCompatBaseline.netstandard2.0.txt#L72-L74\r\n\r\nIndeed, these members exist in CoreFx's ref, but are missing in Standard:  https://github.com/dotnet/corefx/blob/1f9b84a0804e868c7e0f37a3c10fbaf7c735ae14/src/System.Memory/ref/System.Memory.cs#L471\r\n\r\n@terrajobst we should add these missing members to the surface area for `netstandard2.1`","Url":"https://github.com/dotnet/standard/issues/1193","RelatedDescription":"Closed issue \"Fix APICompat issues with netstandard2.0 System.Memory\" (#1193)"},{"Id":"446749048","IsPullRequest":true,"CreatedAt":"2019-05-21T19:26:08","Actor":"ericstj","Number":"1203","RawContent":null,"Title":"Fix public key of ns2.0 shims","State":"closed","Body":"System.Buffers, System.Memory, and System.Threading.Tasks.Extensions all use\r\nthe open key.  Ensure we use the same key here.","Url":"https://github.com/dotnet/standard/pull/1203","RelatedDescription":"Closed or merged PR \"Fix public key of ns2.0 shims\" (#1203)"},{"Id":"446608759","IsPullRequest":true,"CreatedAt":"2019-05-21T14:48:22","Actor":"dotnet-maestro[bot]","Number":"1202","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190521.1\r\n- **Date Produced**: 5/21/2019 9:31 AM\r\n- **Commit**: 51a1f16ee2aaded4ce1fca6847471b58f7ffa160\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19271.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19271.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19271.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1202","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1202)"},{"Id":"445640404","IsPullRequest":true,"CreatedAt":"2019-05-20T20:27:35","Actor":"terrajobst","Number":"1197","RawContent":null,"Title":"Add asymmetric key import/export APIs","State":"closed","Body":"This fixes #1178.","Url":"https://github.com/dotnet/standard/pull/1197","RelatedDescription":"Closed or merged PR \"Add asymmetric key import/export APIs\" (#1197)"},{"Id":"440265255","IsPullRequest":false,"CreatedAt":"2019-05-20T20:27:35","Actor":"bartonjs","Number":"1178","RawContent":null,"Title":"Consider asymmetric key import/export API for NS2.1","State":"closed","Body":"https://github.com/dotnet/corefx/issues/20414 significantly helps .NET applications work with asymmetric keys \"the Linux way\", as well as other generally useful in hybrid environments scenarios.\r\n\r\nTypes to diff against corefx/3.0:\r\n* System.Security.Cryptography.AsymmetricAlgorithm\r\n* System.Security.Cryptography.RSA\r\n* System.Security.Cryptography.ECDsa\r\n* System.Security.Cryptography.ECDiffieHellman\r\n\r\n(and potentially the deriving types, for their `override`s)","Url":"https://github.com/dotnet/standard/issues/1178","RelatedDescription":"Closed issue \"Consider asymmetric key import/export API for NS2.1\" (#1178)"},{"Id":"445635400","IsPullRequest":true,"CreatedAt":"2019-05-20T20:22:04","Actor":"terrajobst","Number":"1196","RawContent":null,"Title":"Enable C# mode command line diff","State":"closed","Body":"When diffing on the command line, enabling this ensures that hunk headers will use the containing construct (i.e. method, type, or namespace).\r\n\r\nFor example, instead of this (pay attention to the `@@` line):\r\n\r\n```diff\r\ndiff --git a/src/netstandard/ref/System.Security.Cryptography.cs b/src/netstandard/ref/System.Security.Cryptography.cs\r\nindex 9f68653..19d239a 100644\r\n--- a/src/netstandard/ref/System.Security.Cryptography.cs\r\n+++ b/src/netstandard/ref/System.Security.Cryptography.cs\r\n@@ -101,8 +101,20 @@ namespace System.Security.Cryptography\r\n         public virtual byte[] ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan<char> password, System.Security.Cryptography.PbeParameters pbeParameters) { throw null; }\r\n         public virtual byte[] ExportPkcs8PrivateKey() { throw null; }\r\n+        public virtual byte[] ExportSubjectPublicKeyInfo() { throw null; }\r\n         public virtual void FromXmlString(string xmlString) { }\r\n     }\r\n     public abstract partial class AsymmetricKeyExchangeDeformatter\r\n     {\r\n```\r\n\r\nYou'll see this:\r\n\r\n```diff\r\ndiff --git a/src/netstandard/ref/System.Security.Cryptography.cs b/src/netstandard/ref/System.Security.Cryptography.cs\r\nindex 9f68653..19d239a 100644\r\n--- a/src/netstandard/ref/System.Security.Cryptography.cs\r\n+++ b/src/netstandard/ref/System.Security.Cryptography.cs\r\n@@ -101,8 +101,20 @@ public abstract partial class AsymmetricAlgorithm : System.IDisposable\r\n         public virtual byte[] ExportEncryptedPkcs8PrivateKey(System.ReadOnlySpan<char> password, System.Security.Cryptography.PbeParameters pbeParameters) { throw null; }\r\n         public virtual byte[] ExportPkcs8PrivateKey() { throw null; }\r\n+        public virtual byte[] ExportSubjectPublicKeyInfo() { throw null; }\r\n         public virtual void FromXmlString(string xmlString) { }\r\n     }\r\n     public abstract partial class AsymmetricKeyExchangeDeformatter\r\n     {\r\n```","Url":"https://github.com/dotnet/standard/pull/1196","RelatedDescription":"Closed or merged PR \"Enable C# mode command line diff\" (#1196)"},{"Id":"446103850","IsPullRequest":true,"CreatedAt":"2019-05-20T13:38:53","Actor":"dotnet-maestro[bot]","Number":"1201","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190520.1\r\n- **Date Produced**: 5/20/2019 11:22 AM\r\n- **Commit**: e58b35cd0f8fe6caa194ca7e48388d8d59854fe0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19270.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19270.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19270.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1201","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1201)"},{"Id":"445816606","IsPullRequest":true,"CreatedAt":"2019-05-19T13:14:40","Actor":"dotnet-maestro[bot]","Number":"1200","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190518.5\r\n- **Date Produced**: 5/18/2019 11:19 PM\r\n- **Commit**: 36ad1c62d4bb753a489d4c055b909af2cb6d407f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19268.5\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19268.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19268.5\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1200","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1200)"},{"Id":"445713531","IsPullRequest":true,"CreatedAt":"2019-05-18T13:13:40","Actor":"dotnet-maestro[bot]","Number":"1199","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190517.12\r\n- **Date Produced**: 5/18/2019 4:32 AM\r\n- **Commit**: c671ce2be16ae3c6086a061d9d94b81005217735\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19267.12\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19267.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19267.12\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1199","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1199)"},{"Id":"445427447","IsPullRequest":true,"CreatedAt":"2019-05-17T14:02:55","Actor":"dotnet-maestro[bot]","Number":"1195","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190516.12\r\n- **Date Produced**: 5/17/2019 8:31 AM\r\n- **Commit**: 6f9570e012054bf407778c0b07632e7733ecbb13\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19266.12\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19266.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19266.12\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1195","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1195)"},{"Id":"444869749","IsPullRequest":false,"CreatedAt":"2019-05-16T10:11:58","Actor":"KexyBiscuit","Number":"1194","RawContent":null,"Title":"Is ValueTask<> missing in latest NetStandard?","State":"open","Body":"```\r\nerror CS0012: The type 'ValueTask<>' is defined in an assembly that is not referenced. You must add a reference to assembly 'System.Threading.Tasks.Extensions, Version=4.2.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n```\r\n\r\nMight be related to #1180?\r\n\r\n```\r\n> dotnet --version\r\n3.0.100-preview6-011910\r\n```\r\n\r\n```\r\n<TargetFramework>netstandard2.1</TargetFramework>\r\n<NetStandardImplicitPackageVersion>2.1.0-prerelease.19265.2</NetStandardImplicitPackageVersion>\r\n```","Url":"https://github.com/dotnet/standard/issues/1194","RelatedDescription":"Open issue \"Is ValueTask<> missing in latest NetStandard?\" (#1194)"},{"Id":"442461759","IsPullRequest":true,"CreatedAt":"2019-05-15T21:27:47","Actor":"terrajobst","Number":"1183","RawContent":null,"Title":"Seal types that cannot be inherited","State":"closed","Body":"These changes are related to #1176 and address the same problem.\r\n\r\nFixes #1171.","Url":"https://github.com/dotnet/standard/pull/1183","RelatedDescription":"Closed or merged PR \"Seal types that cannot be inherited\" (#1183)"},{"Id":"441943870","IsPullRequest":true,"CreatedAt":"2019-05-15T19:22:33","Actor":"wtgodbe","Number":"1180","RawContent":null,"Title":"Add shims to netstandard2.1 for types that used to have OOB packages","State":"closed","Body":"Resolves https://github.com/dotnet/corefx/issues/36719 & https://github.com/dotnet/standard/issues/1063. These TypeForward files were generated with `GenApi`, using the `netstandard2.0` assets from the packages I added to `netstandard.depproj`. \r\n\r\nStill to do:\r\n- Add a DARC subscription from CoreFx -> Standard\r\n- Add a placeholder file for `netstandard2.1` to the `System.Reflection.Emit*` packages in CoreFx - will be done by https://github.com/dotnet/corefx/pull/37532\r\n\r\n@ericstj @terrajobst PTAL\r\n\r\nCC @bartonjs ","Url":"https://github.com/dotnet/standard/pull/1180","RelatedDescription":"Closed or merged PR \"Add shims to netstandard2.1 for types that used to have OOB packages\" (#1180)"},{"Id":"442864446","IsPullRequest":true,"CreatedAt":"2019-05-14T17:23:33","Actor":"wtgodbe","Number":"1185","RawContent":null,"Title":"Fail CI build if APICompat baseline files would change","State":"closed","Body":"Currently, if a change in Arcade would cause changes in the APICompat baseline files, the baseline files are rewritten without throwing an error. If somebody makes such a change without checking in the changes to the APICompat baselines, the CI should fail. This change achieves that. Resolves https://github.com/dotnet/standard/issues/1184.\r\n\r\n@ericstj @terrajobst PTAL","Url":"https://github.com/dotnet/standard/pull/1185","RelatedDescription":"Closed or merged PR \"Fail CI build if APICompat baseline files would change\" (#1185)"},{"Id":"442475952","IsPullRequest":false,"CreatedAt":"2019-05-14T17:23:33","Actor":"wtgodbe","Number":"1184","RawContent":null,"Title":"Fail CI when APICompat Baseline files change","State":"closed","Body":"Right now, when a change to Standard causes a change to the APICompat baseline(s), the build succeeds, and the baseline files are re-written with the change. In CI, we should fail the build on changes to the APICompat baseline files (rather than silently rewriting them).\r\n\r\nCC @ericstj @terrajobst ","Url":"https://github.com/dotnet/standard/issues/1184","RelatedDescription":"Closed issue \"Fail CI when APICompat Baseline files change\" (#1184)"},{"Id":"443876288","IsPullRequest":true,"CreatedAt":"2019-05-14T12:39:27","Actor":"dotnet-maestro[bot]","Number":"1191","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190513.3\r\n- **Date Produced**: 5/13/2019 6:32 PM\r\n- **Commit**: e6712584bba6e2f0e35a3704793c459ff97c09af\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19263.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19263.3\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1191","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1191)"},{"Id":"443629557","IsPullRequest":true,"CreatedAt":"2019-05-14T00:00:25","Actor":"JohnTortugo","Number":"1189","RawContent":null,"Title":"Update azure-pipelines.yml","State":"closed","Body":"Related to: https://github.com/dotnet/core-eng/issues/6291","Url":"https://github.com/dotnet/standard/pull/1189","RelatedDescription":"Closed or merged PR \"Update azure-pipelines.yml\" (#1189)"},{"Id":"443632814","IsPullRequest":false,"CreatedAt":"2019-05-13T22:41:56","Actor":"yangsong2828","Number":"1190","RawContent":null,"Title":"HttpModule with Microsoft.AspNetCore.Http","State":"open","Body":"We have multiple projects depend on one common IIS module, say Logging module.\r\nHowever, we can't move all projects to asp.net core at one shot. But we want to move one at a time.\r\nIf I port it to middleware, it can't be used by legacy IIS projects any more.\r\nSo what is your recommendation to move those common piece to asp .net core? Thanks.","Url":"https://github.com/dotnet/standard/issues/1190","RelatedDescription":"Open issue \"HttpModule with Microsoft.AspNetCore.Http\" (#1190)"},{"Id":"443361033","IsPullRequest":true,"CreatedAt":"2019-05-13T12:19:21","Actor":"dotnet-maestro[bot]","Number":"1188","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190512.1\r\n- **Date Produced**: 5/12/2019 12:58 PM\r\n- **Commit**: 30682cda0dd7ca1765463749dd91ec3cfec75eb9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19262.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19262.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19262.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19262.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19262.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1188","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1188)"},{"Id":"443096722","IsPullRequest":true,"CreatedAt":"2019-05-12T12:18:57","Actor":"dotnet-maestro[bot]","Number":"1187","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190511.1\r\n- **Date Produced**: 5/11/2019 1:13 PM\r\n- **Commit**: 136dfbfa8a6173dadc107bf7393bdeaceecb4d3a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19261.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19261.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19261.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19261.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19261.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1187","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1187)"},{"Id":"442986105","IsPullRequest":true,"CreatedAt":"2019-05-11T12:28:56","Actor":"dotnet-maestro[bot]","Number":"1186","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190510.2\r\n- **Date Produced**: 5/10/2019 8:01 PM\r\n- **Commit**: 810920cf8a5fc183585304193f8b4e4e189497e9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19260.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19260.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19260.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19260.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19260.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1186","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1186)"},{"Id":"439794677","IsPullRequest":true,"CreatedAt":"2019-05-09T21:46:08","Actor":"terrajobst","Number":"1175","RawContent":null,"Title":"Add bulk operations to Collection<T>","State":"closed","Body":"These APIs were [recently merged](https://github.com/dotnet/corefx/pull/35772) into CoreFx.\r\n\r\nThis fixes #1091.","Url":"https://github.com/dotnet/standard/pull/1175","RelatedDescription":"Closed or merged PR \"Add bulk operations to Collection<T>\" (#1175)"},{"Id":"442425601","IsPullRequest":true,"CreatedAt":"2019-05-09T21:41:45","Actor":"joperezr","Number":"1182","RawContent":null,"Title":"Fix official build which is failing when trying to publish the packages to BAR","State":"closed","Body":"cc: @wtgodbe \r\n\r\nOfficial builds are failing when trying to publish packages to BAR because the AssetsManifest file isn't being generated any longer. This was caused because of a breaking change in Arcade. These changes will fix this issue.","Url":"https://github.com/dotnet/standard/pull/1182","RelatedDescription":"Closed or merged PR \"Fix official build which is failing when trying to publish the packages to BAR\" (#1182)"},{"Id":"439815886","IsPullRequest":true,"CreatedAt":"2019-05-09T20:13:26","Actor":"terrajobst","Number":"1176","RawContent":null,"Title":"Prevent non-framework code from extending BaseNumberConverter","State":"closed","Body":"This fixes #1171.\r\n\r\nPlease note that this is technically an API breaking change (we shipped `BaseNumberConverter` in .NET Standard 2.0 with a protected constructor, which was mistake). But there is no way to derive and instantiate this class. An exception will get thrown if you try to instantiate the derived class. \r\n\r\nFor more details, see https://github.com/dotnet/corefx/pull/37278.\r\n\r\n/cc @ericstj ","Url":"https://github.com/dotnet/standard/pull/1176","RelatedDescription":"Closed or merged PR \"Prevent non-framework code from extending BaseNumberConverter\" (#1176)"},{"Id":"442368786","IsPullRequest":true,"CreatedAt":"2019-05-09T19:01:19","Actor":"joperezr","Number":"1181","RawContent":null,"Title":"Move WithCancellation/ConfigureAwait extension methods to TaskAsyncEnumerableExtensions","State":"closed","Body":"cc: @stephentoub @terrajobst \r\n\r\nResponding to changes made by https://github.com/dotnet/corefx/pull/37367 where the extnsion methods where moved to a new type. This is the first time I make a change like this so please do let me know if I missed anything.","Url":"https://github.com/dotnet/standard/pull/1181","RelatedDescription":"Closed or merged PR \"Move WithCancellation/ConfigureAwait extension methods to TaskAsyncEnumerableExtensions\" (#1181)"},{"Id":"441500740","IsPullRequest":false,"CreatedAt":"2019-05-08T00:36:05","Actor":"PHuhn","Number":"1179","RawContent":null,"Title":"System.ComponentModel.Annotations V4.5.0 attributes in .Net Standard library not working in .Net framework","State":"open","Body":"Thanks for creating .Net Standard...\r\n\r\nI am attempting to migrate my .Net Framework libraries to .Net Standard, so my libraries will be available in .Net Framework and .Net Core. One of the libraries is using DataAnnotations as follows:\r\n```\r\npublic partial class LogData\r\n{\r\n    [Key, Column(Order = 1)]\r\n    [Required(ErrorMessage = \"Id is required.\")]\r\n    public long Id { get; set; }\r\n\r\n    [Required(ErrorMessage = \"Date is required.\")]\r\n    public DateTime Date { get; set; }\r\n\r\n    [Required(ErrorMessage = \"Application is required.\"), MaxLength(30, ErrorMessage = \"'Application' must be 30 or less characters.\")]\r\n    public string Application { get; set; }\r\n\r\n    [Required(ErrorMessage = \"Method is required.\"), MaxLength(255, ErrorMessage = \"'Method' must be 255 or less characters.\")]\r\n    public string Method { get; set; }\r\n\r\n    [Required(ErrorMessage = \"LogLevel is required.\")]\r\n    [Range(typeof(byte), \"0\", \"4\", ErrorMessage = \"'LogLevel' must be between 0 and 4\")]\r\n    public byte LogLevel { get; set; }\r\n\r\n    [Required(ErrorMessage = \"Level is required.\"), MaxLength(8, ErrorMessage = \"'Level' must be 8 or less characters.\")]\r\n    public string Level { get; set; }\r\n\r\n    [Required(ErrorMessage = \"UserAccount is required.\"), MaxLength(255, ErrorMessage = \"'UserAccount' must be 255 or less characters.\")]\r\n    public string UserAccount { get; set; }\r\n\r\n    [Required(ErrorMessage = \"Message is required.\"), MaxLength(4000, ErrorMessage = \"'Message' must be 4000 or less characters.\")]\r\n    public string Message { get; set; }\r\n\r\n    [MaxLength(4000, ErrorMessage = \"'Exception' must be 4000 or less characters.\")]\r\n    public string Exception { get; set; }\r\n}\r\n```\r\nThe migration **up** method in the .Net Core console applications is as follows:\r\n```\r\nmigrationBuilder.CreateTable(\r\n    name: \"Logs\",\r\n    columns: table => new\r\n    {\r\n        Id = table.Column<long>(nullable: false)\r\n            .Annotation(\"SqlServer:ValueGenerationStrategy\", SqlServerValueGenerationStrategy.IdentityColumn),\r\n        Date = table.Column<DateTime>(nullable: false),\r\n        Application = table.Column<string>(maxLength: 30, nullable: false),\r\n        Method = table.Column<string>(maxLength: 255, nullable: false),\r\n        LogLevel = table.Column<byte>(nullable: false),\r\n        Level = table.Column<string>(maxLength: 8, nullable: false),\r\n        UserAccount = table.Column<string>(maxLength: 255, nullable: false),\r\n        Message = table.Column<string>(maxLength: 4000, nullable: false),\r\n        Exception = table.Column<string>(maxLength: 4000, nullable: true)\r\n    },\r\n    constraints: table =>\r\n    {\r\n        table.PrimaryKey(\"PK_Logs\", x => x.Id);\r\n    });\r\n```\r\nThis as I would expect it to be.\r\n\r\nThe migration **up** method in the .Net Framework console applications is as follows:\r\n```\r\nCreateTable(\r\n    \"dbo.Logs\",\r\n    c => new\r\n        {\r\n            Id = c.Long(nullable: false, identity: true),\r\n            Date = c.DateTime(nullable: false),\r\n            Application = c.String(),\r\n            Method = c.String(),\r\n            LogLevel = c.Byte(nullable: false),\r\n            Level = c.String(),\r\n            UserAccount = c.String(),\r\n            Message = c.String(),\r\n            Exception = c.String(),\r\n        })\r\n    .PrimaryKey(t => t.Id);\r\n```\r\nThis is lacking the various length constraints.  Is this the intended output?\r\n\r\nI have attached a test solution. It has three projects as follows:\r\n*\tNSG.LogData (.NetStandard library containing annotated-data class),\r\n*\tNSG.ConsoleCore (.Net Core console project, that includes NSG.LogData library, and creates a code-first database),\r\n*\tNSG.ConsoleNet (.Net Framework console project, that includes NSG.LogData library, and creates a code-first database).\r\n\r\nPackage installation for NSG.ConsoleCore:\r\n\r\n\tInstall-Package Microsoft.EntityFrameworkCore.SqlServer\r\n\tInstall-Package Microsoft.EntityFrameworkCore.Tools\r\n\r\nMigration command for NSG.ConsoleCore:\r\n\r\n\tEntityFrameworkCore\\Add-Migration -name InitialCreate -Project NSG.ConsoleCore -StartupProject NSG.ConsoleCore\r\n\r\nMigration command for NSG.ConsoleNet:\r\n\r\n\tEntityFramework\\Add-Migration -name InitialCreate -Project NSG.ConsoleNet -StartupProject NSG.ConsoleNet\r\n\r\n\r\n\r\n\r\n[NSG.DataAnnotations.zip](https://github.com/dotnet/standard/files/3154973/NSG.DataAnnotations.zip)\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1179","RelatedDescription":"Open issue \"System.ComponentModel.Annotations V4.5.0 attributes in .Net Standard library not working in .Net framework\" (#1179)"},{"Id":"439822079","IsPullRequest":true,"CreatedAt":"2019-05-03T16:58:36","Actor":"mmitche","Number":"1177","RawContent":null,"Title":"Move to Azure DevOps for public CI","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1177","RelatedDescription":"Closed or merged PR \"Move to Azure DevOps for public CI\" (#1177)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"447448952","IsPullRequest":false,"CreatedAt":"2019-05-23T04:49:00","Actor":"jkotas","Number":"37886","RawContent":null,"Title":"RSAXml.FromNonsenseXml test failing in CoreCLR CI","State":"open","Body":"```\r\nAssert.Throws() Failure\r\nExpected: typeof(System.Security.Cryptography.CryptographicException)\r\nActual:   (No exception was thrown)\r\nStack Trace :\r\n   at System.Security.Cryptography.Rsa.Tests.RSAXml.FromNonsenseXml() in /_/src/Common/tests/System/Security/Cryptography/AlgorithmImplementations/RSA/RSAXml.cs:line 1349\r\n```\r\n\r\nhttps://github.com/dotnet/coreclr/pull/24604#issuecomment-494653061","Url":"https://github.com/dotnet/corefx/issues/37886","RelatedDescription":"Open issue \"RSAXml.FromNonsenseXml test failing in CoreCLR CI\" (#37886)"},{"Id":"447394579","IsPullRequest":true,"CreatedAt":"2019-05-23T04:28:23","Actor":"safern","Number":"37883","RawContent":null,"Title":"Update to new compiler toolset by using arcade's property","State":"closed","Body":"I also updated the `NullableContextOptions` to be `Nullable`. I didn't get any failures on Windows locally.\r\n\r\nThis is dependent of an arcade update once a new SDK is published into the channel with this change: https://github.com/dotnet/arcade/pull/2856\r\n\r\ncc: @dotnet/nullablefc @ViktorHofer ","Url":"https://github.com/dotnet/corefx/pull/37883","RelatedDescription":"Closed or merged PR \"Update to new compiler toolset by using arcade's property\" (#37883)"},{"Id":"447360963","IsPullRequest":true,"CreatedAt":"2019-05-23T02:17:56","Actor":"Dotnet-GitSync-Bot","Number":"37879","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corert\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar @stephentoub","Url":"https://github.com/dotnet/corefx/pull/37879","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corert\" (#37879)"},{"Id":"446935249","IsPullRequest":true,"CreatedAt":"2019-05-23T01:41:46","Actor":"ViktorHofer","Number":"37858","RawContent":null,"Title":"Use RepoTools instead of global tools","State":"closed","Body":"Depends on https://github.com/dotnet/arcade/pull/2848\r\n\r\nI added the restoring repo tools (out-of-proc) logic to arcade with an extension point to configure the path of the repo tools manifest. Also I removed the restoring optional tools logic as we don't have TestILC anymore in corefx. If we want that step back we can just look into the git history. There's currently no reason to have it.\r\n\r\nRemoving the global tools logic from sendtohelix.proj as it won't work with repo tools this way. When we actually need this we will probably go a different way (i.e. coverlet integration with dotnet test or restoring repo tools on helix).","Url":"https://github.com/dotnet/corefx/pull/37858","RelatedDescription":"Closed or merged PR \"Use RepoTools instead of global tools\" (#37858)"},{"Id":"447340115","IsPullRequest":true,"CreatedAt":"2019-05-23T01:10:50","Actor":"dotnet-maestro[bot]","Number":"37878","RawContent":null,"Title":"[master] Update dependencies from dotnet/standard","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190522.2\r\n- **Date Produced**: 5/22/2019 8:42 PM\r\n- **Commit**: 8f6300e1f771d40dee4017f62ce885eb8251c322\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19272.2\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37878","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/standard\" (#37878)"},{"Id":"447399443","IsPullRequest":false,"CreatedAt":"2019-05-23T00:37:38","Actor":"buyaa-n","Number":"37885","RawContent":null,"Title":"When a polymorphic interface type used for an object, deserialization throwing NRE","State":"open","Body":"I am aware of ploymorphism not supported yet, but i think JsonException should be thrown instead of NRE\r\n```csharp\r\n        public class MyClass\r\n        {\r\n            public string Value { get; set; }\r\n\r\n            public IThing Thing { get; set; }\r\n        }\r\n\r\n        public interface IThing\r\n        {\r\n            int Number { get; set; }\r\n        }\r\n\r\n        public class MyThing : IThing\r\n        {\r\n            public int Number { get; set; }\r\n        }\r\n\r\n        [Fact]\r\n        public void AssertDoesDeserialize()\r\n        {\r\n            const string json = @\"{\r\n\"\"Value\"\": \"\"A value\"\",\r\n\"\"Thing\"\": {\r\n\"\"Number\"\": 123\r\n}\r\n}\";\r\n            Assert.Throws<JsonException>(() =>\r\n            {\r\n                JsonSerializer.Parse<List<MyClass>>(json);\r\n            });\r\n            /* this test works if not use any interface type, but i guess that is expected as polymorphism not supported yet\r\n                        MyClass myClass = JsonSerializer.Parse<MyClass>(json);\r\n                        Assert.NotNull(myClass);\r\n                        Assert.Equal(\"A value\", myClass.Value);\r\n                        Assert.NotNull(myClass.Thing);\r\n                        Assert.Equal(123, myClass.Thing.Number);\r\n            */\r\n        }\r\n```","Url":"https://github.com/dotnet/corefx/issues/37885","RelatedDescription":"Open issue \"When a polymorphic interface type used for an object, deserialization throwing NRE\" (#37885)"},{"Id":"447398902","IsPullRequest":false,"CreatedAt":"2019-05-23T00:34:42","Actor":"KeltarHelviett","Number":"37884","RawContent":null,"Title":"RemoveWhere with post processing action","State":"open","Body":"I suggest to add method for HashSet<T>. \r\n`HashSet<T>.RemoveWhere(Predicate<T>, Action<T> postProcessingAction).`\r\nIt's a common situation when you need to remove something from collection and do a post processing things (e.g. remove references)","Url":"https://github.com/dotnet/corefx/issues/37884","RelatedDescription":"Open issue \"RemoveWhere with post processing action\" (#37884)"},{"Id":"447392074","IsPullRequest":false,"CreatedAt":"2019-05-23T00:00:38","Actor":"krwq","Number":"37882","RawContent":null,"Title":"Consider Json support for reading numbers as octal (prefixed with 0)","State":"open","Body":"Some Json parsers i.e. Newtonsoft.Json are capable of reading octal numbers (which are prefixed by 0). Our Json parser does not support it and in addition throws very cryptic error message:\r\n\r\n```\r\nSystem.Text.Json.JsonReaderException : '1' is an invalid end of a number. Expected a delimiter. LineNumber: 0 | BytePositionInLine: 10.\r\n```\r\n\r\nRepro:\r\n\r\n```csharp\r\n            bool found = false;\r\n            byte[] bytes = Encoding.UTF8.GetBytes(\"{ \\\"foo\\\": 01 }\");\r\n            Utf8JsonReader reader = new Utf8JsonReader(bytes, true, new JsonReaderState());\r\n            while (reader.Read())\r\n            {\r\n                Console.WriteLine(reader.TokenType);\r\n                switch (reader.TokenType)\r\n                {\r\n                    case JsonTokenType.Number:\r\n                    {\r\n                        Assert.False(found);\r\n                        found = true;\r\n                        Assert.True(reader.TryGetInt32(out int val));\r\n                        Assert.Equal(1, val);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            Assert.True(found);\r\n```\r\n\r\nisolated issue from: https://github.com/dotnet/corefx/issues/37727","Url":"https://github.com/dotnet/corefx/issues/37882","RelatedDescription":"Open issue \"Consider Json support for reading numbers as octal (prefixed with 0)\" (#37882)"},{"Id":"447381675","IsPullRequest":true,"CreatedAt":"2019-05-22T23:13:59","Actor":"wtgodbe","Number":"37881","RawContent":null,"Title":"Add tests for double-encoded URLs to both UrlDecode() methods","State":"open","Body":"Just a rough pass at testing the behavior described in https://github.com/dotnet/corefx/issues/36532.\r\n\r\nCC @scalablecory @daohunliwei","Url":"https://github.com/dotnet/corefx/pull/37881","RelatedDescription":"Open PR \"Add tests for double-encoded URLs to both UrlDecode() methods\" (#37881)"},{"Id":"447375766","IsPullRequest":false,"CreatedAt":"2019-05-22T22:57:32","Actor":"ViktorHofer","Number":"37880","RawContent":null,"Title":"Long running test: Socket_SendReceiveAsync_PropagateToStream_Success","State":"closed","Body":"`System.Net.Sockets.Tests.UnixDomainSocketTest.Socket_SendReceiveAsync_PropagateToStream_Success` hang on CI on `Windows.10.Amd64.ClientRS4.ES.Open-x64:Debug`: https://dev.azure.com/dnceng/public/_build/results?buildId=197516&view=logs\r\n\r\n```\r\n  Discovering: System.Net.Sockets.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Net.Sockets.Tests (found 707 of 1059 test cases)\r\n  Starting:    System.Net.Sockets.Tests (parallel test collections = on, max threads = 4)\r\n    System.Net.Sockets.Tests.KeepAliveTest.Socket_KeepAlive_RetryCount_Failure [SKIP]\r\n      Condition(s) not met: \"IsWindowsBelow1703\"\r\n    System.Net.Sockets.Tests.UnixDomainSocketTest.Socket_CreateUnixDomainSocket_Throws_OnWindows [SKIP]\r\n      Condition(s) not met: \"IsSubWindows10\"\r\n   System.Net.Sockets.Tests: [Long Running Test] 'System.Net.Sockets.Tests.UnixDomainSocketTest.Socket_SendReceiveAsync_PropagateToStream_Success', Elapsed: 00:02:15\r\n   System.Net.Sockets.Tests: [Long Running Test] 'System.Net.Sockets.Tests.UnixDomainSocketTest.Socket_SendReceiveAsync_PropagateToStream_Success', Elapsed: 00:04:15\r\n   System.Net.Sockets.Tests: [Long Running Test] 'System.Net.Sockets.Tests.UnixDomainSocketTest.Socket_SendReceiveAsync_PropagateToStream_Success', Elapsed: 00:06:15\r\n   System.Net.Sockets.Tests: [Long Running Test] 'System.Net.Sockets.Tests.UnixDomainSocketTest.Socket_SendReceiveAsync_PropagateToStream_Success', Elapsed: 00:08:15\r\n   System.Net.Sockets.Tests: [Long Running Test] 'System.Net.Sockets.Tests.UnixDomainSocketTest.Socket_SendReceiveAsync_PropagateToStream_Success', Elapsed: 00:10:15\r\n   System.Net.Sockets.Tests: [Long Running Test] 'System.Net.Sockets.Tests.UnixDomainSocketTest.Socket_SendReceiveAsync_PropagateToStream_Success', Elapsed: 00:12:15\r\n   System.Net.Sockets.Tests: [Long Running Test] 'System.Net.Sockets.Tests.UnixDomainSocketTest.Socket_SendReceiveAsync_PropagateToStream_Success', Elapsed: 00:14:15\r\n```\r\n\r\ncc @wfurt @davidsh ","Url":"https://github.com/dotnet/corefx/issues/37880","RelatedDescription":"Closed issue \"Long running test: Socket_SendReceiveAsync_PropagateToStream_Success\" (#37880)"},{"Id":"447321780","IsPullRequest":true,"CreatedAt":"2019-05-22T22:56:14","Actor":"ViktorHofer","Number":"37875","RawContent":null,"Title":"Cleanup in Directory.Build.props/targets files","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/37875","RelatedDescription":"Closed or merged PR \"Cleanup in Directory.Build.props/targets files\" (#37875)"},{"Id":"447262984","IsPullRequest":true,"CreatedAt":"2019-05-22T22:50:06","Actor":"ViktorHofer","Number":"37869","RawContent":null,"Title":"Use netfx ref package from nuget","State":"closed","Body":"Remove the extra feed and use the official published version from nuget.\r\n\r\ncc @ericstj","Url":"https://github.com/dotnet/corefx/pull/37869","RelatedDescription":"Closed or merged PR \"Use netfx ref package from nuget\" (#37869)"},{"Id":"447330289","IsPullRequest":true,"CreatedAt":"2019-05-22T20:33:32","Actor":"roji","Number":"37877","RawContent":null,"Title":"Add async methods in System.Data.Common, implement IAsyncDisposable","State":"open","Body":"Closes #35012","Url":"https://github.com/dotnet/corefx/pull/37877","RelatedDescription":"Open PR \"Add async methods in System.Data.Common, implement IAsyncDisposable\" (#37877)"},{"Id":"447323910","IsPullRequest":true,"CreatedAt":"2019-05-22T20:17:41","Actor":"Gnbrkm41","Number":"37876","RawContent":null,"Title":"Fix binary bitwise operators with resized BitArray","State":"open","Body":"Fixes #37849.\r\n\r\n* Use `Length` property instead of `m_array.Length` to avoid operating on unused area / IndexOutOfRangeException when the array is resized\r\n* Add tests for binary bitwise operators using resized `BitArray`s (to ensure they do not throw)","Url":"https://github.com/dotnet/corefx/pull/37876","RelatedDescription":"Open PR \"Fix binary bitwise operators with resized BitArray\" (#37876)"},{"Id":"447280115","IsPullRequest":true,"CreatedAt":"2019-05-22T20:10:24","Actor":"ViktorHofer","Number":"37871","RawContent":null,"Title":"Fix powershell command invocation for test","State":"closed","Body":"Fixes https://github.com/dotnet/corefx/issues/37865","Url":"https://github.com/dotnet/corefx/pull/37871","RelatedDescription":"Closed or merged PR \"Fix powershell command invocation for test\" (#37871)"},{"Id":"447158654","IsPullRequest":false,"CreatedAt":"2019-05-22T20:10:24","Actor":"Gnbrkm41","Number":"37865","RawContent":null,"Title":"build.cmd -test fails with missing 'testscope' argument","State":"closed","Body":"Whenever I try to run `build & build -buildtests -test` or pretty much anytime I try to run build script with `-test` option specified, the PS script fail saying that the argument 'testscope' is missing. Freshly forked/cloned from the latest corefx master branch. (at the moment the most recent commit is https://github.com/dotnet/corefx/commit/a0aac7aef0e9c6c1fd4bd5d51a4dff6e0e05f9d8.) I don't remember this happening when I tried this last time (which... I think is about two weeks ago?).\r\n\r\nI'm guessing it won't be too helpful, but going to upload the original error message anyway (in Korean). Ran on `Developer Command Prompt for VS 2019 Preview` (v16.2.0-pre.1.0), Windows 10 Home/Pro, Build No. 18890/18898 (yes, I tried it on two separate PCs)\r\n```\r\nC:\\Users\\gotos\\source\\repos\\corefx\\eng\\build.ps1 : 'testscope' 매개 변수에 대한 인수가 누락되었습니다. 유형이 'System.String'인 매개 변수를 지정하고 다시 시도하십시오.\r\n    + CategoryInfo          : InvalidArgument: (:) [build.ps1], ParentContainsErrorRecordException\r\n    + FullyQualifiedErrorId : MissingArgument,build.ps1\r\n```","Url":"https://github.com/dotnet/corefx/issues/37865","RelatedDescription":"Closed issue \"build.cmd -test fails with missing 'testscope' argument\" (#37865)"},{"Id":"447316825","IsPullRequest":true,"CreatedAt":"2019-05-22T19:59:47","Actor":"tarekgh","Number":"37874","RawContent":null,"Title":"Add logging to the Task timeout tests","State":"open","Body":"We need to get more info to understand what is going on when the test timeout. Also, we are now FailFast to have the test runs create a debugger dump at least when running on Linux platforms. Hopefully this can help in the diagnostics","Url":"https://github.com/dotnet/corefx/pull/37874","RelatedDescription":"Open PR \"Add logging to the Task timeout tests\" (#37874)"},{"Id":"447291268","IsPullRequest":true,"CreatedAt":"2019-05-22T18:53:22","Actor":"roji","Number":"37872","RawContent":null,"Title":"Add feature detection properties to DbProviderFactory","State":"open","Body":"CanCreateDataAdapter, CanCreateCommandBuilder\r\n\r\nCloses #35564","Url":"https://github.com/dotnet/corefx/pull/37872","RelatedDescription":"Open PR \"Add feature detection properties to DbProviderFactory\" (#37872)"},{"Id":"447272549","IsPullRequest":false,"CreatedAt":"2019-05-22T18:16:11","Actor":"safern","Number":"37870","RawContent":null,"Title":"When retrying a build using a new attempt helix test results are aggregated.","State":"closed","Body":"We should consider the build attempt number as part of the `HelixBuild` metadata so that we don't aggregate test runs when retrying a build using the `new attempt`. \r\n\r\ncc: @krwq @ViktorHofer ","Url":"https://github.com/dotnet/corefx/issues/37870","RelatedDescription":"Closed issue \"When retrying a build using a new attempt helix test results are aggregated.\" (#37870)"},{"Id":"447255859","IsPullRequest":false,"CreatedAt":"2019-05-22T17:24:04","Actor":"tarekgh","Number":"37868","RawContent":null,"Title":"Cannot build corefx on Ubuntu 18.04 machines","State":"open","Body":"getting the errors:\r\n\r\n```\r\n/home/tarek/oss/corefx/external/runtime/runtime.depproj : error NU1102: Unable to find package Microsoft.NETCore.Platforms with version (>= 3.0.0-preview6.19271.9)\r\n/home/tarek/oss/corefx/external/runtime/runtime.depproj : error NU1102:   - Found 1366 version(s) in dotnet-core [ Nearest version: 3.0.0-preview5.19222.4 ]\r\n/home/tarek/oss/corefx/external/runtime/runtime.depproj : error NU1102:   - Found 35 version(s) in https://api.nuget.org/v3/index.json [ Nearest version: 3.0.0-preview4.19212.13 ]\r\n/home/tarek/oss/corefx/external/runtime/runtime.depproj : error NU1102:   - Found 0 version(s) in https://dotnet.myget.org/F/roslyn/api/v3/index.json\r\n/home/tarek/oss/corefx/external/runtime/runtime.depproj : error NU1102:   - Found 0 version(s) in https://dotnet.myget.org/F/sourcelink/api/v3/index.json\r\n/home/tarek/oss/corefx/external/runtime/runtime.depproj : error NU1102:   - Found 0 version(s) in dotnet-coreclr\r\n/home/tarek/oss/corefx/external/runtime/runtime.depproj : error NU1102:   - Found 0 version(s) in https://www.myget.org/F/xunit/api/v3/index.json\r\n```\r\n\r\n\r\n[msbuild.binlog.zip](https://github.com/dotnet/corefx/files/3208555/msbuild.binlog.zip)\r\n","Url":"https://github.com/dotnet/corefx/issues/37868","RelatedDescription":"Open issue \"Cannot build corefx on Ubuntu 18.04 machines\" (#37868)"},{"Id":"447252510","IsPullRequest":true,"CreatedAt":"2019-05-22T17:15:46","Actor":"steveharter","Number":"37867","RawContent":null,"Title":"Allow unlimited json array dimensions during deserialization","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/36889\r\n\r\nNote some tests were moved from `Value.ReadTests` and `Value.WriteTests` to `Array.ReadTests`, `Array.WriteTests` and `Object.ReadTests`. There were no changes to these tests.\r\n","Url":"https://github.com/dotnet/corefx/pull/37867","RelatedDescription":"Open PR \"Allow unlimited json array dimensions during deserialization\" (#37867)"},{"Id":"447096590","IsPullRequest":true,"CreatedAt":"2019-05-22T15:00:30","Actor":"dotnet-maestro[bot]","Number":"37860","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190521.7\r\n- **Date Produced**: 5/22/2019 1:45 AM\r\n- **Commit**: 7a6fb6528b2060cd9e3a3d92535f5b6fdc6b2e82\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.0-beta.19271.7\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19271.7\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19271.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19271.7\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37860","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#37860)"},{"Id":"447117933","IsPullRequest":true,"CreatedAt":"2019-05-22T14:59:58","Actor":"dotnet-maestro[bot]","Number":"37864","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-optimization","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n- **Build**: 20190521.3\r\n- **Date Produced**: 5/21/2019 4:00 PM\r\n- **Commit**: 680817355bb2e1326de1124c846263f8d9fb9294\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **optimization.windows_nt-x64.IBC.CoreFx** -> 99.99.99-master-20190521.3\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37864","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-optimization\" (#37864)"},{"Id":"446931603","IsPullRequest":true,"CreatedAt":"2019-05-22T14:54:57","Actor":"Dotnet-GitSync-Bot","Number":"37857","RawContent":null,"Title":"Mirror changes from dotnet/corert,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corefx/pull/37857","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert,coreclr\" (#37857)"},{"Id":"447164212","IsPullRequest":true,"CreatedAt":"2019-05-22T14:17:01","Actor":"watfordgnf","Number":"37866","RawContent":null,"Title":"Address #37794 by removing \"UTF-16\" when not needed in System.Text.Json docs","State":"open","Body":"This addresses #37794 by removing \"UTF-16\" when not needed in the various System.Text.Json documentation comments. All overloads on `Utf8JsonWriter` and `JsonEncodedText` which took `string` or `ReadOnlySpan<char>` have been updated.","Url":"https://github.com/dotnet/corefx/pull/37866","RelatedDescription":"Open PR \"Address #37794 by removing \"UTF-16\" when not needed in System.Text.Json docs\" (#37866)"},{"Id":"446941473","IsPullRequest":true,"CreatedAt":"2019-05-22T14:12:55","Actor":"dotnet-maestro-bot","Number":"37859","RawContent":null,"Title":"Update ProjectNTfs to beta-27722-00 (master)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/37859","RelatedDescription":"Closed or merged PR \"Update ProjectNTfs to beta-27722-00 (master)\" (#37859)"},{"Id":"447113113","IsPullRequest":true,"CreatedAt":"2019-05-22T13:46:46","Actor":"dotnet-maestro[bot]","Number":"37863","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190521.71\r\n- **Date Produced**: 5/21/2019 1:54 PM\r\n- **Commit**: 22288107a7acf7a3cf40f72c0464a722c80b7ba9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-preview6-27721-71\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-preview6-27721-71\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview6-27721-71\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37863","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/coreclr\" (#37863)"},{"Id":"447105936","IsPullRequest":true,"CreatedAt":"2019-05-22T13:31:40","Actor":"dotnet-maestro[bot]","Number":"37862","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190521.9\r\n- **Date Produced**: 5/22/2019 6:10 AM\r\n- **Commit**: b9b357f9a5a6ccf6a70c2e13b5a7d84a3ed1a684\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.native.System.IO.Ports** -> 4.6.0-preview6.19271.9\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview6.19271.9\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/37862","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#37862)"},{"Id":"447101464","IsPullRequest":false,"CreatedAt":"2019-05-22T12:15:39","Actor":"ektrah","Number":"37861","RawContent":null,"Title":"Unsafe.AsRef<T>(in T) loses nullability of T","State":"open","Body":"It seems that passing a nullable-reference-type reference to System.Runtime.CompilerServices.Unsafe.AsRef<T>(in T) turns it into a non-nullable-reference-type reference:\r\n\r\n![screenshot](https://user-images.githubusercontent.com/4752078/58172275-66053000-7c98-11e9-91a4-32682db50d26.png)\r\n\r\nCuriously, this doesn't happen when assigning to the reference...\r\n\r\n![screenshot2](https://user-images.githubusercontent.com/4752078/58172814-e6786080-7c99-11e9-9e57-f29963ecf12f.png)\r\n\r\n...unless the previously referenced value isn't null:\r\n\r\n![screenshot3](https://user-images.githubusercontent.com/4752078/58172829-f3954f80-7c99-11e9-863d-d5ce9c88c187.png)\r\n\r\nNot sure if this is an issue with System.Runtime.CompilerServices.Unsafe (lack of nullability annotations?) or Roslyn or both...\r\n\r\nI'm using Visual Studio 16.1.0 with .NET Core 3.0.100-preview5-011568.\r\n\r\n<details>\r\n<summary>Full code (click to expand)</summary>\r\n\r\n```csharp\r\nusing System;\r\nusing System.Runtime.CompilerServices;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n    class Program\r\n    {\r\n        static void Main()\r\n        {\r\n            string? s = \"Hello World\";\r\n\r\n            ref string? r1 = ref s;\r\n\r\n            ref string? r2 = ref Unsafe.AsRef(in s);\r\n\r\n            DangerousUpdate(in s);\r\n\r\n            DangerousUpdateIfNotNull(in s);\r\n        }\r\n\r\n        static void DangerousUpdate(in string? s)\r\n        {\r\n            Unsafe.AsRef(in s) = null;\r\n        }\r\n\r\n        static void DangerousUpdateIfNotNull(in string? s)\r\n        {\r\n            if (s == null)\r\n                throw new InvalidOperationException();\r\n\r\n            Unsafe.AsRef(in s) = null;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <LangVersion>8.0</LangVersion>\r\n    <NullableContextOptions>enable</NullableContextOptions>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Runtime.CompilerServices.Unsafe\" Version=\"4.6.0-preview6.19259.10\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n</details>\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/37861","RelatedDescription":"Open issue \"Unsafe.AsRef<T>(in T) loses nullability of T\" (#37861)"},{"Id":"447314095","IsPullRequest":false,"CreatedAt":"2019-05-20T21:28:55","Actor":"jeremyVignelles","Number":"37873","RawContent":null,"Title":"Proposal - Introduce IDisposable ownership annotations","State":"open","Body":"Hi,\r\n\r\nI have thought about this for a while, and I finally got time for that, so I'm posting here.\r\nPlease tell me if that's not the right place to ask for that.\r\n\r\n# Rationale\r\n\r\nI am an average developper that wants to make sure that I don't forget to call `Dispose()` on `IDisposable`. What is great is that there's a roslyn analyzer for that : https://github.com/DotNetAnalyzers/IDisposableAnalyzers\r\n\r\nHowever, sometimes, that analyzer doesn't know how things work, and a signature like\r\n\r\n```cs\r\npublic MyDisposableClass GetInstance()\r\n```\r\n\r\nwill trigger a warning, while sometime it's just returning a cached copy which is owned by the class.\r\n\r\nThere is no way for the analyser to know the semantic of what should be disposed and what should not.\r\n\r\nThen came the idea that we could provide some attributes that could help the analyzer.\r\n\r\n# The problem\r\nHow to redistribute that kind of attributes?\r\n- Embedding the attributes with the analyzer? The analyzer itself is a development dependency, and we shouldn't leak that kind of implementation details into the project.\r\n- Having a package dependency for this kind of annotations? What about version conflicts between two projects that uses different versions of the annotations? \r\n- Having a .cs file that the project that wants to check embeds, similar to LibLog ? How would the analyzer check the attributes? with only the class name?\r\n- Maintaining external annotations like [JetBrains](https://github.com/JetBrains/ExternalAnnotations) ? That would be probably feasible, and makes it possible to annotate existing code, but we are not JetBrains...\r\n\r\nEach of those options have drawbacks, and probably more than exposed above. Then we thought about it in a different way :\r\nIf we truly want to analyze the behavior of the code, what if we find a more universal way : introduce the annotations directly in .net.\r\n\r\n# The proposition\r\nHere comes the IDisposable ownership attributes. The first formal definition was made [here](https://github.com/DotNetAnalyzers/IDisposableAnalyzers/pull/130/files), and I think that the API shape is understandable.\r\n\r\n```cs\r\n    /// <summary>\r\n    /// The return value must be disposed by the caller.\r\n    /// </summary>\r\n    [AttributeUsage(AttributeTargets.ReturnValue | AttributeTargets.Parameter, AllowMultiple = false, Inherited = true)]\r\n    public class GivesOwnershipAttribute : Attribute\r\n    {\r\n    }\r\n\r\n    /// <summary>\r\n    /// The return value must not be disposed by the caller.\r\n    /// </summary>\r\n    [AttributeUsage(AttributeTargets.ReturnValue | AttributeTargets.Parameter, AllowMultiple = false, Inherited = true)]\r\n    public class KeepsOwnershipAttribute : Attribute\r\n    {\r\n    }\r\n\r\n    /// <summary>\r\n    /// The ownership of instance is transferred and the receiver is responsible for disposing.\r\n    /// </summary>\r\n    [AttributeUsage(AttributeTargets.Parameter, AllowMultiple = false, Inherited = true)]\r\n    public class TakesOwnershipAttribute : Attribute\r\n    {\r\n    }\r\n```\r\n\r\nLet's dig into this : \r\nBy defining these attributes, we state that \"The owner of the object is responsible to `Dispose()` it\".\r\n\r\nOwnership can be given (i.e. transferred to caller):\r\n\r\n```cs\r\npublic class ResourceFactory {\r\n   [return: GivesOwnership]\r\n   public Resource Create()\r\n   {\r\n        return new MyResource();\r\n   }\r\n}\r\n```\r\n\r\nIt can be taken\r\n\r\n```cs\r\npublic class ResourceHandler : IDisposable {\r\n   private Resource _resource;\r\n   public void SetResource([TakesOwnership] Resource resource) => this._resource = resource;\r\n   public void Dispose()\r\n   {\r\n      this._resource.Dispose();\r\n   }\r\n}\r\n\r\nnew ResourceHandler().SetResource(new Resource);\r\n```\r\n\r\nWe can also say explicitely that the resource is kept:\r\n```cs\r\npublic class ResourceCache : IDisposable {\r\n    private Resource _resource;\r\n    [return: KeepsOwnership]\r\n    public Resource GetResource()\r\n    {\r\n       return this._resource;\r\n    }\r\n}\r\n```\r\n\r\n# Why in .NET?\r\nHaving a way to express ownership is really nice to know what is happening, and many places in the framework itself could benefit from that.\r\n\r\nTake this code for example:\r\n\r\n``` cs\r\nvar stream = File.Open...;\r\nvar reader = new StreamReader(stream);\r\n```\r\n\r\nWhich one should I dispose?\r\n\r\nIf `StreamReader` declared this constructor as `TakesOwnership`, the question is no more.\r\n\r\nAnother question I often have is : \"When using `IServiceCollection.AddSingleton()`, are my objects correctly `Dispose()` 'd?\"\r\n\r\n# Potential uses\r\n\r\n- Documentation : The documentation could automatically state that the method has a special behavior regarding the object ownership\r\n- Analyzers : IDisposableAnalyzers would be one of them, but maybe something more integrated, like in the compiler or in VS ?\r\n\r\nWhat do you think?","Url":"https://github.com/dotnet/corefx/issues/37873","RelatedDescription":"Open issue \"Proposal - Introduce IDisposable ownership annotations\" (#37873)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"447310607","IsPullRequest":false,"CreatedAt":"2019-05-23T05:01:53","Actor":"prjm","Number":"35887","RawContent":null,"Title":"Inline temporary variable refactoring produces invalid code for while loop","State":"closed","Body":"**Version Used**:  Visual Studio Community Edition 2019, 16.1.0\r\n**Steps to Reproduce**:\r\n\r\n1.  Create a sample application\r\n2. Add this source code (with a matching namespace):\r\n\r\n```c#\r\nnamespace ConsoleApp4\r\n{\r\n    internal class Program\r\n    {\r\n        private static string CalculateSomething()\r\n            => \"a\";\r\n\r\n        private static void Main(string[] args)\r\n        {\r\n            var d = default(string);\r\n            do\r\n            {\r\n                d = CalculateSomething();\r\n            } while (d != default);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n3. move the cursor to `var d = ...`\r\n4. open the quick actions menu / lightbulb-symbol\r\n5. select _Inline temporary variable_\r\n\r\n**Expected Behavior**:\r\n\r\n6. refactoring is not provided because `d` can't be inlined \r\n\r\n**Actual Behavior**:\r\n\r\n6. refactoring is provided, marked with `Conflicts detected`, produces the following code:\r\n\r\n```c#\r\n            var d = default(string);\r\n            do\r\n            {\r\n                d = CalculateSomething();\r\n            } while (default(string) != default);\r\n```","Url":"https://github.com/dotnet/roslyn/issues/35887","RelatedDescription":"Closed issue \"Inline temporary variable refactoring produces invalid code for while loop\" (#35887)"},{"Id":"447392222","IsPullRequest":true,"CreatedAt":"2019-05-23T01:30:07","Actor":"dotnet-bot","Number":"35900","RawContent":null,"Title":"Merge master-vs-deps to features/razorSupport2","State":"closed","Body":"\nThis is an automatically generated pull request from master-vs-deps into features/razorSupport2.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-features/razorSupport2\ngit reset --hard upstream/features/razorSupport2\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-features/razorSupport2 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35900","RelatedDescription":"Closed or merged PR \"Merge master-vs-deps to features/razorSupport2\" (#35900)"},{"Id":"447399996","IsPullRequest":true,"CreatedAt":"2019-05-23T00:40:35","Actor":"tmat","Number":"35902","RawContent":null,"Title":" Remove DiagnosticData.Workspace","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/35902","RelatedDescription":"Open PR \" Remove DiagnosticData.Workspace\" (#35902)"},{"Id":"447392357","IsPullRequest":false,"CreatedAt":"2019-05-23T00:01:39","Actor":"drewnoakes","Number":"35901","RawContent":null,"Title":"NullableContextOptions no longer works","State":"open","Body":"_This issue has been moved from [VSTS ticketId 896657](https://developercommunity.visualstudio.com/content/problem/576567/nullablecontextoptions-no-longer-works.html)._\r\n\r\nIn our .csproj files, this used to enable nullable context:\r\n\r\n```\r\n<NullableContextOptions>enable</NullableContextOptions>\r\n```\r\n\r\nNow, after upgrading to 16.2 preview 1, it no longer works.  The compiler throws errors as if we were not in a nullable context.  Surrounding code with `#nullable enable`/`restore` still works, but it's not feasible to do it for each and every code file in our solution.\r\n\r\n---\r\n\r\n### Original comments\r\n\r\n#### Pierre Arnaud on 5/22/2019, 05:59 PM\r\n\r\nI've the exact same issue on all my projects.<br>\r\n\r\n#### Visual Studio Feedback System on 5/22/2019, 06:02 PM\r\n\r\nWe have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.\r\n\r\n#### Kexy Biscuit on 5/22/2019, 07:14 PM\r\n\r\nMe too, this breaks nearly everything for me.\r\n\r\n#### richf on 5/22/2019, 10:04 PM\r\n\r\nSame problem.\r\n\r\nBuilding from commandline does not have any issue\r\n\r\n#### Anthony Trudeau on 5/23/2019, 08:20 AM\r\n\r\n@VisualStudio on Twitter directed me to share my comments here after some messages there.\r\n\r\nI'm on 16.1 within a new WPF project and using the element in the project file has no affect. There are no errors, warnings, or otherwise. Using the directive in the individual code files works as expected.\r\n","Url":"https://github.com/dotnet/roslyn/issues/35901","RelatedDescription":"Open issue \"NullableContextOptions no longer works\" (#35901)"},{"Id":"447392179","IsPullRequest":true,"CreatedAt":"2019-05-23T00:00:54","Actor":"dotnet-bot","Number":"35899","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/35899","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#35899)"},{"Id":"447390418","IsPullRequest":false,"CreatedAt":"2019-05-22T23:53:00","Actor":"0xd4d","Number":"35898","RawContent":null,"Title":"'CS8602: Dereference of a possibly null reference' if it's a struct property, but not if it's a class property","State":"open","Body":"**Version Used**: VS 16.1\r\n\r\n**Steps to Reproduce**:\r\n\r\nCompile the following program with nullable reference types enabled\r\n\r\n```C#\r\nnamespace ConsoleApp13\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var s = default(S);\r\n            // 2nd 's.Prop': warning CS8602: Dereference of a possibly null reference.\r\n            if (s.Prop != null && s.Prop.Trim().Length == 0) { }\r\n\r\n            var c = new C();\r\n            // 2nd 'c.Prop': no warning\r\n            if (c.Prop != null && c.Prop.Trim().Length == 0) { }\r\n        }\r\n    }\r\n\r\n    struct S\r\n    {\r\n        public string? Prop => string.Empty;\r\n    }\r\n\r\n    sealed class C\r\n    {\r\n        public string? Prop => string.Empty;\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nNo warnings\r\n\r\n**Actual Behavior**:\r\n\r\nWarnings if it's a struct, but not if it's a class.\r\n","Url":"https://github.com/dotnet/roslyn/issues/35898","RelatedDescription":"Open issue \"'CS8602: Dereference of a possibly null reference' if it's a struct property, but not if it's a class property\" (#35898)"},{"Id":"447389956","IsPullRequest":false,"CreatedAt":"2019-05-22T23:50:35","Actor":"KirillOsenkov","Number":"35897","RawContent":null,"Title":"Microsoft.CodeAnalysis.EditorFeatures.Wpf NuGet package needs to declare a dependency on Microsoft.VisualStudio.InteractiveWindow","State":"open","Body":"**Version Used**: \r\n3.1.0-beta4-19261-04\r\n\r\nThe NuGet package https://www.nuget.org/packages/microsoft.codeanalysis.editorfeatures.wpf contains Microsoft.CodeAnalysis.EditorFeatures.Wpf.dll which reference Microsoft.VisualStudio.InteractiveWindow.dll 2.0.0.0.\r\n\r\nHowever the NuGet package doesn't declare this dependency. The NuGet package needs to declare an explicit dependency on https://www.nuget.org/packages/microsoft.visualstudio.interactivewindow","Url":"https://github.com/dotnet/roslyn/issues/35897","RelatedDescription":"Open issue \"Microsoft.CodeAnalysis.EditorFeatures.Wpf NuGet package needs to declare a dependency on Microsoft.VisualStudio.InteractiveWindow\" (#35897)"},{"Id":"447381328","IsPullRequest":false,"CreatedAt":"2019-05-22T23:26:11","Actor":"tannergooding","Number":"35896","RawContent":null,"Title":"Warning given when the nullability of a method signature is non-nullable but the delegate expects nullable","State":"closed","Body":"The following code currently warns:\r\n```csharp\r\nusing System;\r\n\r\n#nullable enable\r\n\r\npublic delegate void ContextCallback(object? state);\r\n\r\npublic class C {\r\n    // warning CS8622: Nullability of reference types in type of parameter 'state' of 'void C.WaitOrTimerCallback_Context_t(object state)' doesn't match the target delegate 'ContextCallback'.\r\n    private static readonly ContextCallback _ccbt = new ContextCallback(WaitOrTimerCallback_Context_t);\r\n    \r\n    private static void WaitOrTimerCallback_Context_t(object state) { }\r\n}\r\n```\r\n\r\nI would expect no warning since the method signature does not allow nullable inputs which still fits with the requirements of the delegate signature.\r\n\r\nI would expect a warning in the opposite case (a method whose parameter is nullable is passed to a delegate with a matching signature but where the corresponding parameter is non-nullable).","Url":"https://github.com/dotnet/roslyn/issues/35896","RelatedDescription":"Closed issue \"Warning given when the nullability of a method signature is non-nullable but the delegate expects nullable\" (#35896)"},{"Id":"447377674","IsPullRequest":false,"CreatedAt":"2019-05-22T23:13:52","Actor":"vsfeedback","Number":"35894","RawContent":null,"Title":"Attribute-typed Identifier Renaming Issue","State":"closed","Body":"When pressing Ctrl+R+R to rename a Attribute-typed Identifier will end up an additional 'Attribute' word inserted into the new identifier.\n\nFor example, when i rename an attribute called 'ExampleAttribute' to 'InstanceAttribute' by replacing 'Example' with 'Instance', i will get 'InstanceAttributeAttribute'.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/550414/attribute-typed-identifier-renaming-issue.html\nVSTS ticketId: 857934_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 4/29/2019, 01:23 AM (23 days ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/35894","RelatedDescription":"Closed issue \"Attribute-typed Identifier Renaming Issue\" (#35894)"},{"Id":"447379579","IsPullRequest":true,"CreatedAt":"2019-05-22T23:04:47","Actor":"JoeRobich","Number":"35895","RawContent":null,"Title":"Get FullPath and deduplicate potential editorconfig files","State":"open","Body":"Work around https://github.com/microsoft/msbuild/issues/4392\r\n\r\n/CC @tmeschter and @jasonmalinowski ","Url":"https://github.com/dotnet/roslyn/pull/35895","RelatedDescription":"Open PR \"Get FullPath and deduplicate potential editorconfig files\" (#35895)"},{"Id":"447371665","IsPullRequest":false,"CreatedAt":"2019-05-22T22:33:31","Actor":"vsfeedback","Number":"35893","RawContent":null,"Title":"Class name namespace error","State":"open","Body":"Class name is considering as namespace\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/490101/class-name-namespace-error.html\nVSTS ticketId: 820709_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 3/15/2019, 00:26 AM (68 days ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/35893","RelatedDescription":"Open issue \"Class name namespace error\" (#35893)"},{"Id":"447362485","IsPullRequest":true,"CreatedAt":"2019-05-22T22:00:57","Actor":"333fred","Number":"35892","RawContent":null,"Title":"Ensure unimplemented interface members are reported even in presence …","State":"open","Body":"…of unification warnings (#35422)\r\n\r\n(cherry picked from commit 74d697a3ba9db727d8337d040f305bf71a566e3f)\r\n\r\nCherry-picking to 16.1.","Url":"https://github.com/dotnet/roslyn/pull/35892","RelatedDescription":"Open PR \"Ensure unimplemented interface members are reported even in presence …\" (#35892)"},{"Id":"447360313","IsPullRequest":false,"CreatedAt":"2019-05-22T21:54:24","Actor":"vsfeedback","Number":"35891","RawContent":null,"Title":"Two local functions with same parmater offer unique names in Intellisense","State":"open","Body":"VSF_TYPE_MARKDOWNDeclaring two local functions with classes (structs, others?) as parameters results in intellisense suggesting that the parameters in the second function have a different name, even though there is no reason it cannot use the same name.\n\n```\nclass Test\n{\n\tvoid function()\n\t{\n\t\tvoid LocalFunction1(Test test) //intellisense will suggest test\n\t\t{ }\n\nvoid LocalFunction2(Test test1) //intellisense will suggest test1 instead of test\n\t\t{ }\n\t}\n}\n```\n\nThe same behaviour can be observed for classes with more complex names\n\n```\nclass TestClass\n{\n\tvoid function()\n\t{\n\nvoid LocalFunction1(TestClass testClass) //intellisense will suggest testClass\n\t\t{ }\n\nvoid LocalFunction2(TestClass test) //intellisense will suggest test instead of testClass\n\t\t{ }\n\t}\n}\n```\nMay be related https://github.com/dotnet/roslyn/issues/31304\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/569267/two-local-functions-with-same-parmater-offer-uniqu.html\nVSTS ticketId: 893063_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 5/15/2019, 07:16 PM (6 days ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\nVisual Studio Feedback System on 5/17/2019, 05:50 PM (4 days ago): <p>Thank you for sharing your feedback! Our teams prioritize action on product issues with broad customer impact. See details at:  https://docs.microsoft.com/en-us/visualstudio/ide/report-a-problem?view=vs-2017#faq . In case you need answers to common questions or need assisted support, be sure to use  https://visualstudio.microsoft.com/vs/support/ . We'll keep you posted on any updates to this feedback.</p>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/35891","RelatedDescription":"Open issue \"Two local functions with same parmater offer unique names in Intellisense\" (#35891)"},{"Id":"447339560","IsPullRequest":true,"CreatedAt":"2019-05-22T20:56:45","Actor":"JoeRobich","Number":"35890","RawContent":null,"Title":"Bump the 16.1 version for future servicing releases","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/35890","RelatedDescription":"Open PR \"Bump the 16.1 version for future servicing releases\" (#35890)"},{"Id":"447338338","IsPullRequest":false,"CreatedAt":"2019-05-22T20:53:33","Actor":"YairHalberstadt","Number":"35889","RawContent":null,"Title":"ArgumentNullException when running RoslynDeployment","State":"open","Body":"**Version Used**: \r\n\r\nhttps://github.com/dotnet/roslyn/pull/35539\r\nVS 16.1\r\n\r\n**Steps to Reproduce**:\r\n\r\nWhen I run RoslynDeployment with the debugger attached (I haven't tried without), and once VS is loaded I open an existing solution, I get the following exception:\r\n\r\n```\r\nSystem.ArgumentNullException\r\n  HResult=0x80004003\r\n  Message=Value cannot be null.\r\nParameter name: key\r\n  Source=mscorlib\r\n  StackTrace:\r\nMicrosoft.VisualStudio.LanguageServices.dll!Microsoft.VisualStudio.LanguageServices.Implementation.Venus.ContainedDocument.TryGetContainedDocument(Microsoft.CodeAnalysis.DocumentId id) Line 66\r\n\tat E:\\Git\\roslyn\\src\\VisualStudio\\Core\\Def\\Implementation\\Venus\\ContainedDocument.cs(66)\r\nMicrosoft.VisualStudio.LanguageServices.dll!Microsoft.VisualStudio.LanguageServices.Implementation.SuggestionService.VisualStudioSupportsFeatureService.SupportsCodeFixesWorker(Microsoft.CodeAnalysis.DocumentId id) Line 87\r\n\tat E:\\Git\\roslyn\\src\\VisualStudio\\Core\\Def\\Implementation\\VisualStudioSupportsFeatureService.cs(87)\r\nMicrosoft.VisualStudio.LanguageServices.dll!Microsoft.VisualStudio.LanguageServices.Implementation.SuggestionService.VisualStudioSupportsFeatureService.VisualStudioTextBufferSupportsFeatureService.SupportsCodeFixes(Microsoft.VisualStudio.Text.ITextBuffer textBuffer) Line 24\r\n\tat E:\\Git\\roslyn\\src\\VisualStudio\\Core\\Def\\Implementation\\VisualStudioSupportsFeatureService.cs(24)\r\nMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.Editor.Shared.Extensions.ITextBufferExtensions.SupportsCodeFixes(Microsoft.VisualStudio.Text.ITextBuffer buffer) Line 66\r\n\tat E:\\Git\\roslyn\\src\\EditorFeatures\\Core\\Shared\\Extensions\\ITextBufferExtensions.cs(66)\r\nMicrosoft.CodeAnalysis.EditorFeatures.Wpf.dll!Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedActionsSourceProvider.SuggestedActionsSource.GetFixLevelAsync(Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedActionsSourceProvider provider, Microsoft.CodeAnalysis.Document document, Microsoft.VisualStudio.Text.SnapshotSpan range, System.Threading.CancellationToken cancellationToken) Line 806\r\n\tat E:\\Git\\roslyn\\src\\EditorFeatures\\Core.Wpf\\Suggestions\\SuggestedActionsSource.cs(806)\r\nMicrosoft.CodeAnalysis.EditorFeatures.Wpf.dll!Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedActionsSourceProvider.SuggestedActionsSource.GetSuggestedActionCategoriesAsync.AnonymousMethod__0() Line 1008\r\n\tat E:\\Git\\roslyn\\src\\EditorFeatures\\Core.Wpf\\Suggestions\\SuggestedActionsSource.cs(1008)\r\n```\r\n\r\nIt looks like we pass the result of `VisualStudioSupportsFeatureService.GetContainedDocumentId()`, which can return null, to `SupportsCodeFixesWorker`, which cannot accept null.\r\n\r\nA bunch of errors also occur after this. I don't know if that is correlation or causation though. However roslyn fails to spot any semantic errors in the document after this.\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/35889","RelatedDescription":"Open issue \"ArgumentNullException when running RoslynDeployment\" (#35889)"},{"Id":"447316460","IsPullRequest":false,"CreatedAt":"2019-05-22T19:58:52","Actor":"cston","Number":"35888","RawContent":null,"Title":"Reduce the impact of nullable attributes in metadata","State":"open","Body":"The current approach for representing nullable annotations in [metadata](https://github.com/dotnet/roslyn/blob/master/docs/features/nullable-reference-types.md#annotations) can result in a significant number of attributes.\r\n\r\nConsider alternatives to reduce the number of attributes.","Url":"https://github.com/dotnet/roslyn/issues/35888","RelatedDescription":"Open issue \"Reduce the impact of nullable attributes in metadata\" (#35888)"},{"Id":"447299712","IsPullRequest":false,"CreatedAt":"2019-05-22T19:27:03","Actor":"vsfeedback","Number":"35886","RawContent":null,"Title":"Invalid warning IDE0059 when more than two assignments are on the same line","State":"closed","Body":"VSF_TYPE_MARKDOWNIDE0059 can't handle more than two declaration/assignments on the same line. The following console app repros \n\n    using System;\n    using System.Collections.Generic;\n    using System.Linq;\n    using System.Text;\n    using System.Threading.Tasks;\n    using static System.Console;\n\n    namespace InvalidWarningIDE0059\n    {\n        class Program\n        {\n            static void Main(string[] args)\n            {\n                int first, second, third, fourth = -1;\n                first = DERP();\n                second = DERP();\n                third = DERP();\n                fourth = DERP();\n                WriteLine(first);\n                WriteLine(second);\n                WriteLine(third);\n                WriteLine(fourth);\n            }\n            static int DERP()\n            {\n                return 1;\n            }\n        }\n    }\n\nThe last variable when 2+ variables are declared and assigned on a single line triggers IDE0059. In this example, ```fourth``` is marked with the warning. If you remove ```fourth``` then ```third``` is.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/552602/invalid-warning-ide0059-when-more-than-two-assignm.html\nVSTS ticketId: 860172_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 5/4/2019, 07:54 PM (17 days ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/35886","RelatedDescription":"Closed issue \"Invalid warning IDE0059 when more than two assignments are on the same line\" (#35886)"},{"Id":"447294077","IsPullRequest":false,"CreatedAt":"2019-05-22T19:00:21","Actor":"AlekseyTs","Number":"35885","RawContent":null,"Title":"VB DIM: An attempt to use non virtual method with implementation declared in an interface from code targeting desktop framework should cause runtime capability error","State":"open","Body":"```\r\n        <Fact>\r\n        Public Sub MethodImplementation_31()\r\n\r\n            Dim csSource =\r\n\"\r\npublic interface I1\r\n{\r\n    sealed string M1() => \"\"I1.M1\"\";\r\n}\r\n\"\r\n            Dim csCompiation = GetCSharpCompiation(csSource).EmitToImageReference()\r\n\r\n            Dim source1 =\r\n<compilation>\r\n    <file name=\"c.vb\"><![CDATA[\r\nPublic Class C\r\n    Shared Sub Main()\r\n        Dim i1 as I1 = New Test()\r\n        i1.M1()\r\n    End Sub\r\nEnd Class\r\n\r\nClass Test\r\n    Implements I1\r\nEnd Class\r\n]]></file>\r\n</compilation>\r\n\r\n            Dim comp1 = CreateCompilation(source1, options:=TestOptions.DebugExe, targetFramework:=TargetFramework.DesktopLatestExtended, references:={csCompiation})\r\n            ' Expect an error similar to - error CS8501: Target runtime doesn't support default interface implementation.\r\n            comp1.AssertTheseDiagnostics()\r\n        End Sub\r\n```","Url":"https://github.com/dotnet/roslyn/issues/35885","RelatedDescription":"Open issue \"VB DIM: An attempt to use non virtual method with implementation declared in an interface from code targeting desktop framework should cause runtime capability error\" (#35885)"},{"Id":"447282436","IsPullRequest":true,"CreatedAt":"2019-05-22T18:31:24","Actor":"tmat","Number":"35884","RawContent":null,"Title":"SourceLink 1.0.0-beta2-19270-01","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/35884","RelatedDescription":"Open PR \"SourceLink 1.0.0-beta2-19270-01\" (#35884)"},{"Id":"447271001","IsPullRequest":false,"CreatedAt":"2019-05-22T18:02:24","Actor":"vsfeedback","Number":"35883","RawContent":null,"Title":"Deleting empty lines causes the cursor to indent","State":"open","Body":"VSF_TYPE_MARKDOWNIn Visual Studio 2019, if I have multiple emptly lines of code, I put my cursor on the first line to delete. Pressing the delete key deletes the following line, but also indents the cursor. If I keep pressing delete, the cursor moves more, up to 10 times.  This did not happen in Visual Studio 2015.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/560744/deleting-empty-lines-causes-the-cursor-to-indent.html\nVSTS ticketId: 888905_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 5/8/2019, 02:48 AM (14 days ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/35883","RelatedDescription":"Open issue \"Deleting empty lines causes the cursor to indent\" (#35883)"},{"Id":"447270658","IsPullRequest":false,"CreatedAt":"2019-05-22T18:01:35","Actor":"vsfeedback","Number":"35882","RawContent":null,"Title":"Intellisense Suggesting Incorrect ExtensionMethod","State":"open","Body":"In a C# project (tested on .Net 7.3 and 7.2), when I have an extension method for a generic T, and constrain T to `where : struct, IGenericInterface&lt;U&gt;` intellisense seems incapable of resolving the generic interface constraint. As a result _all_ valuetypes now _look_ to be extended with my extension function when Intellisense provides suggestions during auto-complete -- even though it's not possible to compile using the extension function (which is correct). Intellisense should not be including these extension functions as suggestions.\r\n\r\nI would be very interested in understanding if there is a limitation which prevents Intellisense from resolving the generic interface constraint which causes this issue. Otherwise it seems like a simple error.\r\n\r\nSee attached example .cs file\r\n\r\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/559194/intellisense-suggesting-incorrect-extensionmethod.html\r\nVSTS ticketId: 888238_\r\n_These are the original issue comments:_\r\n\r\nKevin MacAulay Vacheresse on 5/6/2019, 03:32 PM (15 days ago): <p>Here is the relevant example .cs</p>\r\n\r\n```C#\r\nnamespace Constraints\r\n{\r\n    public interface IMyInterface<U> { }\r\n\r\n    public static class Extensions\r\n    {\r\n        public static void CustomExtension<T, U>(this T val, U otherVal)\r\n            where T : struct, IMyInterface<U>\r\n        { }\r\n    }\r\n\r\n    class Program\r\n    {\r\n        struct Foo { }\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            var foo = new Foo();\r\n\r\n            // Uncomment and use auto-complete to see the 'CustomExtension&lt;&gt;' suggestion, even though Foo can be \r\n            //seen statically to not meet the interface constrain on IMyInterface\r\n\r\n            //foo.\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nVisual Studio Feedback System on 5/6/2019, 07:50 PM (15 days ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\r\n\r\nKevin MacAulay Vacheresse on 5/8/2019, 11:56 AM (13 days ago): <p>As I understand it, this https://blogs.msdn.microsoft.com/ericlippert/2009/12/10/constraints-are-not-part-of-the-signature/  applies here. However, while this failure to compile is acceptable, it seems that Intellisense should not be treating all types as candidates when we can deduce the code can never compile, and thus is not a  validate candidate.</p>\r\n\r\n_These are the original issue solutions:_\r\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/35882","RelatedDescription":"Open issue \"Intellisense Suggesting Incorrect ExtensionMethod\" (#35882)"},{"Id":"447002226","IsPullRequest":false,"CreatedAt":"2019-05-22T17:54:45","Actor":"CreateAndInject","Number":"35873","RawContent":null,"Title":"CodeLens allways show English rather than local language in 16.1","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/issues/35873","RelatedDescription":"Closed issue \"CodeLens allways show English rather than local language in 16.1\" (#35873)"},{"Id":"447260340","IsPullRequest":false,"CreatedAt":"2019-05-22T17:35:25","Actor":"vsfeedback","Number":"35881","RawContent":null,"Title":"Incrorrect codefix for IDE0040 when field is volatile","State":"open","Body":"VSF_TYPE_MARKDOWNThe following C# field definition triggers IDE0040.\n\n`volatile int _bytes;`\n\nThe code fix incorrectly removes `volatile` and turns the code to the following line.\n\n`private int _bytes;`\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/551870/incrorrect-codefix-for-ide0040-when-field-is-volat.html\nVSTS ticketId: 859770_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 4/29/2019, 11:57 PM (22 days ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\nVatsalya Agrawal [MSFT] on 5/1/2019, 10:38 AM (20 days ago): <p>Thanks a lot for providing feedback. We could not reproduce the issue. Could you please share more detailed repro steps/repro project.</p>\n\nWMJ on 5/16/2019, 06:18 PM (5 days ago): See the screenshot and attached project.\nWMJ on 5/16/2019, 06:17 PM (5 days ago): Hi, Have you ever try to reproduce that? It is very easy to reproduce.<br><br>Create a new console app and add a field in the Program class:<br><br>using System;<br>using System.Collections.Generic;<br>using System.Linq;<br>using System.Text;<br><br>namespace ConsoleApp1<br>\\{<br>\tclass Program<br>\t\\{<br>\t\tvolatile int _Field;<br><br>\t\tstatic void Main(string[] args) \\{<br>\t\t}<br>\t}<br>}<br><br>In the quick fix for field _Field, IDE0040, you will see it removes the volatile and inserts private there.<br>\nVisual Studio Feedback System on 5/22/2019, 10:26 AM (8 min ago): <p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/35881","RelatedDescription":"Open issue \"Incrorrect codefix for IDE0040 when field is volatile\" (#35881)"},{"Id":"447236104","IsPullRequest":false,"CreatedAt":"2019-05-22T16:35:08","Actor":"ltcmelo","Number":"35880","RawContent":null,"Title":"Specification of the `foreach` translation and valid/invalid conversions","State":"open","Body":"I'm following the language specification to [rewrite `foreach` statements] (https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/statements#iteration-statements). All of the test cases I had so far worked correctly, but I just ran into a situation where the rewritten code fails to compile (this was partly discussed in gitter) with the more recent [extended (and tuple-aware) syntax](https://github.com/dotnet/roslyn/issues/35809).\r\n\r\n For convenience:\r\n\r\n```\r\nforeach (V v in x)\r\n      embedded_statement\r\n```\r\n\r\nBecomes:\r\n\r\n```\r\n{\r\n    E e = ((C)(x)).GetEnumerator();\r\n    //...\r\n        while (e.MoveNext()) {\r\n            V v = (V)(T)e.Current;\r\n            embedded_statement\r\n        }\r\n    //...\r\n}\r\n```\r\n\r\nI'm interested on the statement `V v = (V)(T)e.Current;`, where `V` is the \"declared\" type in the original `foreach` and `T` is the element type.\r\n\r\nThis continues to work, even with the \"double cast\":\r\n\r\n```\r\nList<(int, int)> lll = null;\r\nforeach (var (xx, yy) in lll)\r\n            ;\r\n```\r\n\r\nIt produces the assignment `var (xx, yy) =((int xx, int yy))((int, int))e.Current;`, which is well typed.\r\n\r\nHowever, this breaks:\r\n\r\n```\r\n// this compiles to me on .NET Core\r\nvar ddd = new Dictionary<int, int>();\r\nforeach (var (xxx, yyy) in ddd)\r\n    ; \r\n```\r\n\r\nBecause it produces the assignment `var (xxx, yyy) =((int xxx, int yyy))(KeyValuePair<int, int>)e.Current;` which doesn't type: **Cannot convert type 'System.Collections.Generic.KeyValuePair<int, int>' to '(int, int)’***.\r\n\r\nI have a [gist with a complete example](https://gist.github.com/ltcmelo/e9e28b3b5a1c99544cee8a192086e9cf). Interestingly, @CyrusNajmabadi claimed that the original code was **invalid**. But then, @canton7 mentioned that deconstruction is [available at least in one library](https://source.dot.net/#System.Private.CoreLib/shared/System/Collections/Generic/KeyValuePair.cs,77).\r\n\r\nIs this just a matter of updating the language spec by eliminating the cast (the `V` part) for deconstruction `foreach`, as I think is what @CyrusNajmabadi suggests, or is there anything else here?\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/35880","RelatedDescription":"Open issue \"Specification of the `foreach` translation and valid/invalid conversions\" (#35880)"},{"Id":"447228982","IsPullRequest":false,"CreatedAt":"2019-05-22T16:18:54","Actor":"RayKoopa","Number":"35879","RawContent":null,"Title":"\"'using' statement can be simplified\" breaks code if variable name has been used before","State":"open","Body":"**Version Used**: \r\n16.2.0 Preview 1.0\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a new C# 8 project with the following, compilable code:\r\n```cs\r\nusing System.IO;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n    class Program\r\n    {\r\n        static void Main()\r\n        {\r\n            using (Stream stream = File.OpenRead(\"test\"))\r\n            {\r\n            }\r\n            using (Stream stream = File.OpenRead(\"test\"))\r\n            {\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n2. Accept VS' suggestion to simplify the second `using` by turning it into a using declaration (IDE0063).\r\n\r\n**Expected Behavior**:\r\nI expected the refactor to create compilable code like this:\r\n```cs\r\n        static void Main()\r\n        {\r\n            using (Stream stream = File.OpenRead(\"test\"))\r\n            {\r\n            }\r\n            using Stream stream2 = File.OpenRead(\"test\"); // note the required unique name\r\n        }\r\n```\r\n\r\n**Actual Behavior**:\r\nThe suggestion however does not check if a variable in the same scope has already been declared and generates the following which does not compile:\r\n```cs\r\n        static void Main()\r\n        {\r\n            using (Stream stream = File.OpenRead(\"test\"))\r\n            {\r\n            }\r\n            // CS0136 \"A local or parameter named 'stream' cannot be declared in this scope\r\n            // because that name is used in an enclosing local scope to define a local or parameter.\r\n            using Stream stream = File.OpenRead(\"test\");\r\n        }\r\n```\r\n\r\nI couldn't find a similar issue about exactly this refactor, please close as duplicate if I am mistaken.","Url":"https://github.com/dotnet/roslyn/issues/35879","RelatedDescription":"Open issue \"\"'using' statement can be simplified\" breaks code if variable name has been used before\" (#35879)"},{"Id":"447209722","IsPullRequest":true,"CreatedAt":"2019-05-22T15:39:49","Actor":"Andrew-Hanlon","Number":"35878","RawContent":null,"Title":"Fix #33560 Handle tokens being equal for same line","State":"open","Body":"Fixes #33560 - If tokens are equal (i.e. a single token), then directly check for line break. ","Url":"https://github.com/dotnet/roslyn/pull/35878","RelatedDescription":"Open PR \"Fix #33560 Handle tokens being equal for same line\" (#35878)"},{"Id":"447176765","IsPullRequest":true,"CreatedAt":"2019-05-22T14:39:30","Actor":"sharwell","Number":"35877","RawContent":null,"Title":"Make importing constructors public to fix RS0034 (Exported parts should have ImportingConstructor)","State":"open","Body":"This is a prerequisite to updating our diagnostic analyzer package in #35439.","Url":"https://github.com/dotnet/roslyn/pull/35877","RelatedDescription":"Open PR \"Make importing constructors public to fix RS0034 (Exported parts should have ImportingConstructor)\" (#35877)"},{"Id":"447044914","IsPullRequest":false,"CreatedAt":"2019-05-22T10:02:57","Actor":"davkean","Number":"35875","RawContent":null,"Title":"Should not have select part of a field to generate constructor","State":"open","Body":"I always forget what I have to do to generate a constructor from a field. \r\n\r\nI'm not allowed to generate a constructor from the field with the following:\r\n\r\n![image](https://user-images.githubusercontent.com/1103906/58165874-00cb3200-7ccc-11e9-91fe-2dbc86ab6ab9.png)\r\n![image](https://user-images.githubusercontent.com/1103906/58165830-e42efa00-7ccb-11e9-9007-8a29264d2a79.png)\r\n![image](https://user-images.githubusercontent.com/1103906/58165852-f315ac80-7ccb-11e9-89f9-68f19dec1465.png)\r\n\r\nBut I am if I do the following:\r\n![image](https://user-images.githubusercontent.com/1103906/58165933-16405c00-7ccc-11e9-9793-3c9566ab82d1.png)\r\n![image](https://user-images.githubusercontent.com/1103906/58166197-a383b080-7ccc-11e9-8e32-563dc6f9500b.png)\r\n\r\n\r\nWhy can I do some things to fields by having the cursor before, in or after the field, but I cannot generate a constructor from it?","Url":"https://github.com/dotnet/roslyn/issues/35875","RelatedDescription":"Open issue \"Should not have select part of a field to generate constructor\" (#35875)"},{"Id":"447012348","IsPullRequest":false,"CreatedAt":"2019-05-22T08:54:19","Actor":"torgabor","Number":"35874","RawContent":null,"Title":"InvalidProgramException when compiling program containing stackalloc Span<bool>","State":"open","Body":"**Version Used**: \r\nVisual  Studio 2019 16.2.0 Preview \r\nMicrosoft (R) Visual C# Compiler version 3.0.19.21801 (18b0cfb6)\r\n.Net Core v3.0.0-preview5\r\n\r\n**Steps to Reproduce**:\r\n\r\nRun the following program:\r\n```csharp\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\nusing static System.Math;\r\n\r\nnamespace ConsoleApp5\r\n{\r\n    class Program\r\n    {\r\n        private static readonly double mWeightThreshold = 0.7;\r\n\r\n\r\n        private const  int mNumChars = 4;\r\n        public static unsafe double Proximity(string aString1, string aString2)\r\n        {            \r\n            Span<bool> lMatched1 = stackalloc bool[aString1.Length];\r\n            Span<bool> lMatched2 = stackalloc bool[aString2.Length];\r\n            int lLen1 = aString1.Length;\r\n            int lLen2 = aString2.Length;\r\n\r\n            fixed (char* ptr1 = aString1)\r\n            fixed (char* ptr2 = aString2)\r\n            {\r\n\r\n                if (lLen1 == 0)\r\n                    return lLen2 == 0 ? 1.0 : 0.0;\r\n\r\n                int lSearchRange = Max(0, Max(lLen1, lLen2) / 2 - 1);\r\n\r\n\r\n                int lNumCommon = 0;\r\n                for (int i = 0; i < lLen1; ++i)\r\n                {\r\n                    int lStart = Max(0, i - lSearchRange);\r\n                    int lEnd = Min(i + lSearchRange + 1, lLen2);\r\n                    for (int j = lStart; j < lEnd; ++j)\r\n                    {\r\n                        if (lMatched2[j]) continue;\r\n                        if (ptr1[i] != ptr2[j])\r\n                            continue;\r\n                        lMatched1[i] = true;\r\n                        lMatched2[j] = true;\r\n                        ++lNumCommon;\r\n                        break;\r\n                    }\r\n                }\r\n                if (lNumCommon == 0) return 0.0;\r\n\r\n                int lNumHalfTransposed = 0;\r\n                int k = 0;\r\n                for (int i = 0; i < lLen1; ++i)\r\n                {\r\n                    if (!lMatched1[i]) continue;\r\n                    while (!lMatched2[k]) ++k;\r\n                    if (ptr1[i] != ptr2[k])\r\n                        ++lNumHalfTransposed;\r\n                    ++k;\r\n                }\r\n                \r\n                int lNumTransposed = lNumHalfTransposed / 2;\r\n\r\n                \r\n                double lNumCommonD = lNumCommon;\r\n                double lWeight = (lNumCommonD / lLen1\r\n                                 + lNumCommonD / lLen2\r\n                                 + (lNumCommon - lNumTransposed) / lNumCommonD) / 3.0;\r\n\r\n                if (lWeight <= mWeightThreshold) return lWeight;\r\n                int lMax = Min(mNumChars, Min(lLen1, lLen2));\r\n                int lPos = 0;\r\n                while (lPos < lMax && ptr1[lPos] == ptr2[lPos])\r\n                    ++lPos;\r\n                if (lPos == 0) return lWeight;\r\n                return lWeight + 0.1 * lPos * (1.0 - lWeight);\r\n            }\r\n        }\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            double prox = Proximity(\"Hello World\", \"Hello Peter\");\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\nThe program will crash with an `InvalidProgramException`. Replacing the Span<bool> with bool* \r\nfixes the issue.\r\nProblem not reproducible on \r\nVisual Studio 2019 16.1.0\r\nMicrosoft (R) Visual C# Compiler version 3.100.19.26603 (9d80dea7)\r\n\r\nAfter looking up the exception, the official documents said that this is a compiler issue. Hope I raised it in the right place :smiley:. \r\n","Url":"https://github.com/dotnet/roslyn/issues/35874","RelatedDescription":"Open issue \"InvalidProgramException when compiling program containing stackalloc Span<bool>\" (#35874)"},{"Id":"446918564","IsPullRequest":false,"CreatedAt":"2019-05-22T03:41:48","Actor":"CyrusNajmabadi","Number":"35872","RawContent":null,"Title":"Remove obsolete editor-layer IIndentationService","State":"open","Body":"The core interface moves to the workspace layer in https://github.com/dotnet/roslyn/pull/33978.  This issue tracks removing the older obsolete interface once we ensure no 3rd parties (i.e. TS/xaml) are using this.","Url":"https://github.com/dotnet/roslyn/issues/35872","RelatedDescription":"Open issue \"Remove obsolete editor-layer IIndentationService\" (#35872)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"446206809","IsPullRequest":true,"CreatedAt":"2019-05-23T01:25:12","Actor":"trylek","Number":"7437","RawContent":null,"Title":"Initial script changes to enable CPAOT on Linux","State":"closed","Body":"This is a small set of script changes I made to enable\r\nCPAOT build on Linux. I have basically added the new\r\noption to runtest.sh and fixed a few trivial issues\r\nI hit in my local testing. I haven't yet figured out\r\nhow to cleanly pull down the CoreClrRuntime folder,\r\nfor now I'm copying it over manually from a live CoreCLR\r\nbuild on my DTL VM.\r\n\r\nWith these changes (and after manually copying the Core_Root\r\nfolder from CoreCLR to bin/obj/Linux.x64.Debug/CoreClrRuntme)\r\nI'm able to build the ReadyToRunUnit test. Sadly it doesn't\r\nrun yet, corerun claims that \"coreclr_initialize failed:\r\n0x80070057\"; I have however found out that I'm receiving\r\nexactly the same error when trying to run the same test\r\ncompiled with Crossgen so I guess it's rather a problem\r\nwith my local enlistment and / or build. I'm looking into\r\nthis right now.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7437","RelatedDescription":"Closed or merged PR \"Initial script changes to enable CPAOT on Linux\" (#7437)"},{"Id":"447361022","IsPullRequest":true,"CreatedAt":"2019-05-22T21:56:28","Actor":"Dotnet-GitSync-Bot","Number":"7442","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"open","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @marek-safar","Url":"https://github.com/dotnet/corert/pull/7442","RelatedDescription":"Open PR \"Mirror changes from dotnet/coreclr,corefx\" (#7442)"},{"Id":"447312328","IsPullRequest":true,"CreatedAt":"2019-05-22T19:48:18","Actor":"tannergooding","Number":"7441","RawContent":null,"Title":"Updating MicrosoftNetCompilersToolsetVersion to 3.2.0-beta2-19272-03","State":"open","Body":"CC. @jaredpar, @agocke, @dotnet/nullablefc\r\n\r\nCoreRT side for https://github.com/dotnet/arcade/pull/2856 and https://github.com/dotnet/buildtools/pull/2256","Url":"https://github.com/dotnet/corert/pull/7441","RelatedDescription":"Open PR \"Updating MicrosoftNetCompilersToolsetVersion to 3.2.0-beta2-19272-03\" (#7441)"},{"Id":"446926910","IsPullRequest":true,"CreatedAt":"2019-05-22T15:34:12","Actor":"Dotnet-GitSync-Bot","Number":"7440","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @mikernet","Url":"https://github.com/dotnet/corert/pull/7440","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7440)"},{"Id":"446854506","IsPullRequest":true,"CreatedAt":"2019-05-22T04:25:11","Actor":"Dotnet-GitSync-Bot","Number":"7439","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh @stephentoub","Url":"https://github.com/dotnet/corert/pull/7439","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7439)"},{"Id":"445642704","IsPullRequest":true,"CreatedAt":"2019-05-21T22:34:36","Actor":"Suchiman","Number":"7434","RawContent":null,"Title":"Port GC changes from coreclr - 9","State":"closed","Body":"This port continues https://github.com/dotnet/corert/pull/7416\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/5e82b75a22e9f1ee379beab45c2ddc6146132aab):**\r\n- https://github.com/dotnet/coreclr/commit/7eb6865565fbd3c45ca58e398a72750fa43c432e (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/59f2a57563b7488779a9b93220a9dfe5c6a45700 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/bdf219c364e15cae908f9c87446ff4ae26a9fe1e (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/55ce686a6092cf38458d2dce6da18aef8eab7c43 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/bed0a5e263324d3e035a2140c24cc70f1e143d93 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/fa01b864246bb588e5088be36dbfe3af833b266f (skipped)\r\n- https://github.com/dotnet/coreclr/commit/8acf6c9f7e33b1bfe77205cd2e61f2c60e8c00ce (manual port)\r\n- https://github.com/dotnet/coreclr/commit/1eea080a7b3a13110975b92034a22e4fc473df46 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/9f38303221294f45740feefc1b6ddf72347ff882 (gc only port)\r\n","Url":"https://github.com/dotnet/corert/pull/7434","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr - 9\" (#7434)"},{"Id":"446251764","IsPullRequest":true,"CreatedAt":"2019-05-21T22:33:34","Actor":"Dotnet-GitSync-Bot","Number":"7438","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @AArnott","Url":"https://github.com/dotnet/corert/pull/7438","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7438)"},{"Id":"445072772","IsPullRequest":true,"CreatedAt":"2019-05-20T07:44:09","Actor":"trylek","Number":"7428","RawContent":null,"Title":"CPAOT support for large version bubble, take #2","State":"closed","Body":"As I haven't found out how to reopen my original PR after reverting it, I have prepared a new one. In the first commit I have pushed the original change rebased to the preparatory change moving CanInline\r\nto CompilationModuleGroup. In the second commit I added logic for clean separation of input assembly set from the version bubble assembly set.\r\n\r\nEarlier in CPAOT development, we used to use CompilationModuleGroup.ContainsType / ContainsMethodBody for checking whether a given typesystem element belongs to either of these sets. To facilitate the separation I have added two new methods on CompilationModuleGroup, VersionsWithType and VersionsWithMethodBody. I audited all calls to ContainsMethodBody & ContainsType in the CPAOT codebase and I modified those querying the version bubble to call VersionsWithType/MethodBody instead.\r\n\r\nThanks\r\n\r\nTomas\r\n","Url":"https://github.com/dotnet/corert/pull/7428","RelatedDescription":"Closed or merged PR \"CPAOT support for large version bubble, take #2\" (#7428)"},{"Id":"445756425","IsPullRequest":true,"CreatedAt":"2019-05-18T21:35:30","Actor":"trylek","Number":"7436","RawContent":null,"Title":"SuperIlc fixes for building the entire Pri#1 suite","State":"open","Body":"After adding support for the issues.targets file I became\r\nable to run the entire Pri# 1 test suite using SuperIlc.\r\nThis change fixes issues uncovered by this more extensive\r\ntesting.\r\n\r\n1) We need to slightly special-case the Core_Root folder\r\nas it technically lies under the CoreCLR\\bin\\tests\\(cfg)\r\nfolder; when building this entire folder, SuperIlc used to\r\npick it up as one of the folders to compile and was\r\nsubsequently racing between the build of this folder and\r\nof the tests that refer to it in CPAOT framework mode.\r\n\r\n2) BuildFolder construction was collecting test references\r\ntoo early i.e. before the framework was built. I came to\r\nthe conclusion that this is a general problem stemming from\r\nthe fact that ProcessInfo was an arbitrary mixture of the\r\nprocess parameters and the state machine used during the\r\nactual build. I have cleaned this up by separating the\r\nparameter file into a new class ProcessParameters; this let\r\nme add logic for constructing the actual paramterers later.\r\n\r\n3) I have added new options to specify explicit compilation\r\nand execution timeouts to add at least minimum support for\r\nlong-building and long-running tests.\r\n\r\n4) I have parallelized folder deletion and subtree lookup\r\nto improve their performance.\r\n\r\n5) I have added caching to the check for managed assemblies.\r\nPreviously, in the Pri# 1 tests we used to open framework\r\nassemblies about 3 million times just for the purpose of\r\nthis lookup.\r\n\r\n6) I have reduced the batch size for running ETW processes\r\nfrom 100 to 10 as the larger number of events collected\r\nwithin a single session was apparently slowing down test\r\nexecution.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7436","RelatedDescription":"Open PR \"SuperIlc fixes for building the entire Pri#1 suite\" (#7436)"},{"Id":"445661755","IsPullRequest":true,"CreatedAt":"2019-05-18T05:14:47","Actor":"Dotnet-GitSync-Bot","Number":"7435","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @safern","Url":"https://github.com/dotnet/corert/pull/7435","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7435)"},{"Id":"445624997","IsPullRequest":true,"CreatedAt":"2019-05-18T00:48:06","Actor":"Dotnet-GitSync-Bot","Number":"7433","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7433","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7433)"},{"Id":"445569920","IsPullRequest":true,"CreatedAt":"2019-05-17T22:23:58","Actor":"jkotas","Number":"7432","RawContent":null,"Title":"Mark CustomAttributeNamedArgument and CustomAttributeTypedArgument as readonly","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7432","RelatedDescription":"Closed or merged PR \"Mark CustomAttributeNamedArgument and CustomAttributeTypedArgument as readonly\" (#7432)"},{"Id":"445509182","IsPullRequest":true,"CreatedAt":"2019-05-17T18:08:27","Actor":"Dotnet-GitSync-Bot","Number":"7431","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh","Url":"https://github.com/dotnet/corert/pull/7431","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7431)"},{"Id":"445259095","IsPullRequest":true,"CreatedAt":"2019-05-17T15:51:42","Actor":"Dotnet-GitSync-Bot","Number":"7430","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks @Anipik","Url":"https://github.com/dotnet/corert/pull/7430","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7430)"},{"Id":"445085554","IsPullRequest":true,"CreatedAt":"2019-05-17T04:25:54","Actor":"Dotnet-GitSync-Bot","Number":"7429","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh","Url":"https://github.com/dotnet/corert/pull/7429","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7429)"},{"Id":"444773127","IsPullRequest":true,"CreatedAt":"2019-05-16T13:56:26","Actor":"Dotnet-GitSync-Bot","Number":"7427","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks","Url":"https://github.com/dotnet/corert/pull/7427","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7427)"},{"Id":"444513464","IsPullRequest":true,"CreatedAt":"2019-05-15T22:10:39","Actor":"jkotas","Number":"7426","RawContent":null,"Title":"Move IlcBuildTasksPath default to Microsoft.NETCore.Native.targets","State":"closed","Body":"It is used by DumpNativeResources task in Microsoft.NETCore.Native.targets\r\n\r\nFixes #7425","Url":"https://github.com/dotnet/corert/pull/7426","RelatedDescription":"Closed or merged PR \"Move IlcBuildTasksPath default to Microsoft.NETCore.Native.targets\" (#7426)"},{"Id":"444383256","IsPullRequest":false,"CreatedAt":"2019-05-15T22:10:39","Actor":"ctaggart","Number":"7425","RawContent":null,"Title":"NativeCompilationDuringPublish=false leads to msbuild error evaluating \"$(IlcBuildTasksPath)\"","State":"closed","Body":"When I set `/p:NativeCompilationDuringPublish=false ` as described in [the documentation](https://github.com/dotnet/corert/blob/master/Documentation/how-to-build-and-run-ilcompiler-in-console-shell-prompt.md#disabling-native-compilation) and [recommended](https://github.com/dotnet/corert/issues/258#issuecomment-492331206), I get this error:\r\n\r\n```\r\nroot@5d9313239163:/src/Shirley# dotnet publish -r ubuntu.16.04-x64 -c Release /p:NativeCompilationDuringPublish=false\r\nMicrosoft (R) Build Engine version 16.0.450+ga8dc7f1d34 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n/root/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-02/build/Microsoft.NETCore.Native.targets(301,45): error MSB4022: The result \"\" of evaluating the value \"$(IlcBuildTasksPath)\" of the \"AssemblyFile\" attribute in element <UsingTask> is not valid. [/src/Shirley/Shirley.fsproj]\r\n```\r\n\r\nAs a work-a-round I'm going to try a variation of [another way to disable the ILCompiler](https://github.com/dotnet/corert/issues/258#issuecomment-492331624).","Url":"https://github.com/dotnet/corert/issues/7425","RelatedDescription":"Closed issue \"NativeCompilationDuringPublish=false leads to msbuild error evaluating \"$(IlcBuildTasksPath)\"\" (#7425)"},{"Id":"444137558","IsPullRequest":true,"CreatedAt":"2019-05-15T15:45:52","Actor":"jkotas","Number":"7424","RawContent":null,"Title":"Update dependencies","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7424","RelatedDescription":"Closed or merged PR \"Update dependencies\" (#7424)"},{"Id":"444029647","IsPullRequest":true,"CreatedAt":"2019-05-14T21:13:10","Actor":"Dotnet-GitSync-Bot","Number":"7423","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @cshung @sywhang @tannergooding","Url":"https://github.com/dotnet/corert/pull/7423","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7423)"},{"Id":"443016643","IsPullRequest":true,"CreatedAt":"2019-05-14T17:01:52","Actor":"trylek","Number":"7415","RawContent":null,"Title":"Move CanInline to CompilationModuleGroup","State":"closed","Body":"As a preparatory change towards adding support for large version\r\nbubble to CPAOT I'm proposing to move CanInline from Compilation to\r\nCompilationModuleGroup in accordance with Simon's and Michal's\r\nfeedback - this refactoring will make it much easier to decouple\r\nthe set of assemblies being compiled from the set of assemblies\r\nwe can inline against (in large version bubble mode anything\r\ncan be inlined).\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7415","RelatedDescription":"Closed or merged PR \"Move CanInline to CompilationModuleGroup\" (#7415)"},{"Id":"443994361","IsPullRequest":false,"CreatedAt":"2019-05-14T16:25:03","Actor":"ctaggart","Number":"7422","RawContent":null,"Title":"RhpETWLogLiveCom error on Debian 9 build","State":"closed","Body":"I got `dotnet publish -r win-x64`  working on Windows for my project, but when I try to build from `mcr.microsoft.com/dotnet/core/sdk:2.2.203-stretch` docker image, I get an error about `RhpETWLogLiveCom` missing.\r\n\r\n```\r\nroot@5d9313239163:/src/Shirley# dotnet publish -r linux-x64 -c release\r\nMicrosoft (R) Build Engine version 16.0.450+ga8dc7f1d34 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 54.08 ms for /src/Shirley/Shirley.fsproj.\r\n  Shirley -> /src/Shirley/bin/release/netcoreapp2.2/linux-x64/Shirley.dll\r\n  /usr/bin/clang-3.9\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : warning : RD.XML processing will change before release (https://github.com/dotnet/corert/issues/5001) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(ReadOnlySpan`1<char>)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(System.ReadOnlySpan`1<Char>) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char, Int32) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(int8*,int32,int32,Encoding)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(SByte*, Int32, Int32, System.Text.Encoding) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(int8*,int32,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(SByte*, Int32, Int32) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(int8*)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(SByte*) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char*,int32,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char*, Int32, Int32) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char*)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char*) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char[],int32,int32)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char[], Int32, Int32) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `string..ctor(char[])` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: Void System.String..ctor(Char[]) [/src/Shirley/Shirley.fsproj]\r\nEXEC : warning : Method `[S.P.CoreLib]System.Activator.CreateInstanceIntrinsic<__Canon>()` will always throw because: [TEMPORARY EXCEPTION MESSAGE] InvalidProgramSpecific: System.__Canon System.Activator.CreateInstanceIntrinsic() [/src/Shirley/Shirley.fsproj]\r\n  obj/release/netcoreapp2.2/linux-x64/native/Shirley.o: In function `S_P_CoreLib_System_Runtime_InteropServices_InteropExtensions__RhpETWShouldWalkCom':\r\n  (__managedcode+0x613573): undefined reference to `RhpETWShouldWalkCom'\r\n  obj/release/netcoreapp2.2/linux-x64/native/Shirley.o: In function `S_P_CoreLib_System_Runtime_InteropServices_InteropExtensions__RhpETWLogLiveCom':\r\n  (__managedcode+0x61359b): undefined reference to `RhpETWLogLiveCom'\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/src/Shirley/Shirley.fsproj]\r\n/root/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/build/Microsoft.NETCore.Native.targets(337,5): error MSB3073: The command \"clang-3.9 \"obj/release/netcoreapp2.2/linux-x64/native/Shirley.o\" -o \"bin/release/netcoreapp2.2/linux-x64/native/Shirley\" /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/sdk/libbootstrapper.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/sdk/libRuntime.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/sdk/libSystem.Private.CoreLib.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/sdk/libSystem.Private.TypeLoader.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.Globalization.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.IO.Compression.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.Net.Security.Native.a /root/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27714-01/framework/System.Security.Cryptography.Native.OpenSsl.a -g -Wl,-rpath,'$ORIGIN' -Wl,--as-needed -pthread -lstdc++ -ldl -lm -lz -lgssapi_krb5 -lrt\" exited with code 1. [/src/Shirley/Shirley.fsproj]\r\n```\r\n\r\nBased on https://github.com/dotnet/corert/blob/master/Documentation/prerequisites-for-building.md, I installed clang with:\r\n```\r\nwget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -\r\necho \"deb http://apt.llvm.org/stretch/ llvm-toolchain-stretch main\" | tee -a /etc/apt/sources.list\r\napt-get update\r\napt-get install cmake clang-3.9 libicu-dev uuid-dev libcurl4-openssl-dev zlib1g-dev libkrb5-dev -y\r\n```\r\n\r\nThe CoreRT version is:\r\n```\r\n      \"Microsoft.DotNet.ILCompiler\": {\r\n        \"type\": \"Direct\",\r\n        \"requested\": \"[1.0.0-alpha-*, )\",\r\n        \"resolved\": \"1.0.0-alpha-27714-01\",\r\n        \"contentHash\": \"Xa2TzZJKoyhMJF7rx+/WjXYOYfQEprdr6CGptdQ0ix4kVI2icYJQnbm+TALQHfb9okW0X3ebNrlPxXhJW461Qw==\"\r\n      },\r\n```\r\n\r\nI noticed this import here and noticed it hasn't been changed in a while.\r\nhttps://github.com/dotnet/corert/blame/master/src/System.Private.CoreLib/src/System/Runtime/RuntimeImports.cs#L724-L729\r\n\r\nAm I missing a dependency?\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7422","RelatedDescription":"Closed issue \"RhpETWLogLiveCom error on Debian 9 build\" (#7422)"},{"Id":"443767461","IsPullRequest":false,"CreatedAt":"2019-05-14T08:04:14","Actor":"mariopasquali","Number":"7421","RawContent":null,"Title":"Compiling ARM on x64","State":"open","Body":"Hi all,\r\n\r\nIt is a few weeks I am trying to set up an environment for compiling a Linux-ARM executable on a x64 machine, without much luck for now.  \r\n\r\nI have set up multiple machines including Debian 9, Ubuntu 16, Ubuntu 18, all 64-bits, even tried with 32-bits versions.  I am currently working on a Ubuntu 16 x64.  Probably an obvious question, but could someone confirm this is supported for compiling an ARM32 output?\r\n\r\nThere are a few possible typos in the following document that are possibly confusing:\r\nhttps://github.com/dotnet/corert/blob/master/Documentation/cross-building.md\r\n\r\n- `\"In addition, to cross compile CoreCLR\"` should it be CoreRT?\r\n- `\"Cross compiling CoreCLR\"` should it be CoreRT?\r\n- `\"$ ROOTFS_DIR=~/coreclr-cross/\"` should it be corert?\r\n- `\"$ ROOTFS_DIR=~/coreclr-cross/arm ./build.sh\"` should it be corert?\r\n\r\nAnother aspect that I didn't get right is the section \"Using CoreRT for cross compiling under arm on x86 host\".  Is this the section applying to my case where I whish building an output for ARM32 on x86?  If yes, then when would the previous section \"Cross compiling CoreCLR\" apply?\r\n\r\nA few more remarks on the section \"Using CoreRT for cross compiling under arm on x86 host\":\r\n- The steps for \"Build CoreFX\" seems outdated.  Should probably by updated with https://github.com/dotnet/corefx/blob/master/Documentation/building/cross-building.md.  \r\n- `\"./build.sh x86 debug verbose cross crosstarget skiptests\"` There is no parameter crosstarget in build.sh as far as I can see.  Is this outdated?  I am running into various issues when trying to run this step without \"crosstarget\" parameter, like file not found of ConstrainedCallSupportHelpers.S, `\"GetUnwindProcInfo is not supported on this arch yet.\"`, etc.\r\n- Regarding step 4, it would be helpful to give examples of the variables.  What is supposed to be ${WORKING_DIR}?  The output of the application that should be compiled?\r\n\r\nThank you,\r\nMario ","Url":"https://github.com/dotnet/corert/issues/7421","RelatedDescription":"Open issue \"Compiling ARM on x64\" (#7421)"},{"Id":"443568119","IsPullRequest":true,"CreatedAt":"2019-05-14T03:14:10","Actor":"jkotas","Number":"7418","RawContent":null,"Title":"Opt-in more Windows PInvokes into direct calls","State":"closed","Body":"Fixes intermittent infinited recursion inside lazy PInvoke resolver","Url":"https://github.com/dotnet/corert/pull/7418","RelatedDescription":"Closed or merged PR \"Opt-in more Windows PInvokes into direct calls\" (#7418)"},{"Id":"443634094","IsPullRequest":true,"CreatedAt":"2019-05-14T03:13:57","Actor":"JohnTortugo","Number":"7419","RawContent":null,"Title":"Update xplat-job.yml","State":"closed","Body":"Relates to: https://github.com/dotnet/core-eng/issues/6291\r\n\r\n/cc @MattGal ","Url":"https://github.com/dotnet/corert/pull/7419","RelatedDescription":"Closed or merged PR \"Update xplat-job.yml\" (#7419)"},{"Id":"443662831","IsPullRequest":true,"CreatedAt":"2019-05-14T03:02:47","Actor":"MichalStrehovsky","Number":"7420","RawContent":null,"Title":"Fix ProjectN build breaks","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7420","RelatedDescription":"Closed or merged PR \"Fix ProjectN build breaks\" (#7420)"},{"Id":"443059474","IsPullRequest":true,"CreatedAt":"2019-05-13T17:38:45","Actor":"Suchiman","Number":"7416","RawContent":null,"Title":"Port GC changes from coreclr - 8","State":"closed","Body":"This port continues https://github.com/dotnet/corert/pull/7389\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/1e11b32ca720f886adfa0cc2a6a46829feba78d0):**\r\n- https://github.com/dotnet/coreclr/commit/0ee3b5e64a98dc71aefed2304fe4bcf7f66ca9f5 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/d23a2bc131eae32c473e39fcb3b640af1a95d244 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/dda6b6136e21901842758970d831f31687913a35 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/e7725a6ff986879f8ff2fd9e09ab636545ba7bca (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/3a24095610ecaba62495740bf8319ad467af4997 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/3bd82d1935806a87d668f4ea102de37077996005 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/8b8231291ded137c49632ef808bbbdc9a500507b (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/0372174871c1e27f483c9877c2c5181720be8722 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/df214e67d3cbccb42d2733f4cbe8097a378a731a (skipped)\r\n- https://github.com/dotnet/coreclr/commit/8415a8933844c9d92c435f6ac268612a9563eb3a (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/5e82b75a22e9f1ee379beab45c2ddc6146132aab (gc only port)\r\n\r\n**Points of interest**:\r\nhttps://github.com/dotnet/coreclr/commit/d23a2bc131eae32c473e39fcb3b640af1a95d244 made some changes to volatile on the runtime side that i've only partially applied\r\nI've skipped the patch for `Add CGroup CFS CPU limit support` because cgroups support is missing","Url":"https://github.com/dotnet/corert/pull/7416","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr - 8\" (#7416)"},{"Id":"443513642","IsPullRequest":false,"CreatedAt":"2019-05-13T17:21:02","Actor":"ctaggart","Number":"7417","RawContent":null,"Title":"Please provide a .vsconfig","State":"open","Body":"Please provide a .vsconfig with the minimal required Visual Studio 2019 dependencies needed to build. For an example, see:\r\n\r\nhttps://github.com/microsoft/visualfsharp/blob/master/.vsconfig\r\n\r\nRight now the experience is:\r\n```\r\nPS C:\\Users\\taggac\\github\\corert> .\\build.cmd\r\nChecking pre-requisites...\r\n\r\n**********************************************************************\r\n** Visual Studio 2019 Developer Command Prompt v16.1.0-pre.3.0\r\n** Copyright (c) 2019 Microsoft Corporation\r\n**********************************************************************\r\nCould not find Visual C++ under C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\Tools\\. Visual C++ is a pre-requisite to build this repository.\r\nSee: https://github.com/dotnet/corert/blob/master/Documentation/prerequisites-for-building.md\r\n```\r\n\r\nI'd like to be able to open a solution and have Visual Studio prompt to install all the dependencies via Visual Studio Installer.","Url":"https://github.com/dotnet/corert/issues/7417","RelatedDescription":"Open issue \"Please provide a .vsconfig\" (#7417)"},{"Id":"442915094","IsPullRequest":true,"CreatedAt":"2019-05-11T21:57:05","Actor":"nattress","Number":"7414","RawContent":null,"Title":"Clean publish test output folders before run","State":"closed","Body":"Incremental build was hiding failures in our local enlistments that only CI would catch due to it always starting with a fresh enlistment.","Url":"https://github.com/dotnet/corert/pull/7414","RelatedDescription":"Closed or merged PR \"Clean publish test output folders before run\" (#7414)"},{"Id":"442866699","IsPullRequest":true,"CreatedAt":"2019-05-10T21:13:18","Actor":"trylek","Number":"7413","RawContent":null,"Title":"Revert \"Initial CPAOT support for large version bubble\"","State":"closed","Body":"Reverts dotnet/corert#7403","Url":"https://github.com/dotnet/corert/pull/7413","RelatedDescription":"Closed or merged PR \"Revert \"Initial CPAOT support for large version bubble\"\" (#7413)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"447399445","IsPullRequest":true,"CreatedAt":"2019-05-23T00:37:39","Actor":"dsplaisted","Number":"3260","RawContent":null,"Title":"Switch to hosted Mac pool for CI","State":"open","Body":"DotNetCore-Mac pool is being retired.","Url":"https://github.com/dotnet/sdk/pull/3260","RelatedDescription":"Open PR \"Switch to hosted Mac pool for CI\" (#3260)"},{"Id":"447336615","IsPullRequest":true,"CreatedAt":"2019-05-22T20:49:24","Actor":"dsplaisted","Number":"3259","RawContent":null,"Title":"Support WPF and WindowsForms-specific FrameworkReferences via profiles","State":"open","Body":"This PR supports referencing only Windows Forms or only WPF assets from the WindowsDesktop targeting pack.  See https://github.com/dotnet/cli/issues/10536.\r\n\r\nThis is done by supporting the following additional FrameworkReferences:\r\n\r\n- Microsoft.WindowsDesktop.App.WindowsForms\r\n- Microsoft.WindowsDesktop.App.WPF\r\n\r\nIn the implementation, a KnownFrameworkReference can specify a Profile of the targeting pack via metadata.  https://github.com/dotnet/core-setup/issues/6210 tracks adding this information to the WindowsDesktop FrameworkList.xml.  Until then, this PR hard-codes the assemblies which are in each profile.\r\n\r\nAfter this is merged, the WindowsDesktop SDK should be updated to use the .WindowsForms or .WPF FrameworkReference depending on if the `UseWPF` or `UseWindowsForms` properties are set.  If both of them are set, it should use the base Microsoft.WindomwsDesktop.App FrameworkReference, which will include the integration DLL.\r\n\r\n@nguerrera @vatsan-madhavan","Url":"https://github.com/dotnet/sdk/pull/3259","RelatedDescription":"Open PR \"Support WPF and WindowsForms-specific FrameworkReferences via profiles\" (#3259)"},{"Id":"446888312","IsPullRequest":true,"CreatedAt":"2019-05-22T20:40:34","Actor":"wli3","Number":"3255","RawContent":null,"Title":"Fix generate package on build pack as tool","State":"closed","Body":"NuGet/Home#7801\r\n\r\n(the easiest way to understand that is)since nuget no longer sets NoBuild on GeneratePackageOnBuild, we need to do similar logic to get the previous state.\r\n\r\nfix https://github.com/dotnet/sdk/issues/3253","Url":"https://github.com/dotnet/sdk/pull/3255","RelatedDescription":"Closed or merged PR \"Fix generate package on build pack as tool\" (#3255)"},{"Id":"446882523","IsPullRequest":false,"CreatedAt":"2019-05-22T20:40:34","Actor":"dsplaisted","Number":"3253","RawContent":null,"Title":"Project with PackAsTool and GeneratePackageOnBuild set to true fails to build","State":"closed","Body":"Tests in `GivenThatWeWantToPackAToolProjectWithGeneratePackageOnBuild` are failing with:\r\n\r\n> C:\\git\\dotnet-sdk\\artifacts\\bin\\Debug\\Sdks\\NuGet.Build.Tasks.Pack\\build\\NuGet.Build.Tasks.Pack.targets(337,5): error MSB4006: There is a circular dependency in the target dependency graph involving target \"_WalkEachTargetPerFramework\". [C:\\git\\dotnet-sdk\\artifacts\\tmp\\Debug\\It_builds_suc---81F3C59C\\App\\consoledemo.csproj]\r\n\r\nThis regressed with a recent NuGet insertion.","Url":"https://github.com/dotnet/sdk/issues/3253","RelatedDescription":"Closed issue \"Project with PackAsTool and GeneratePackageOnBuild set to true fails to build\" (#3253)"},{"Id":"447330125","IsPullRequest":true,"CreatedAt":"2019-05-22T20:33:05","Actor":"wli3","Number":"3258","RawContent":null,"Title":"Perf wpf winform hello world","State":"open","Body":"I will clean up the commit after the review","Url":"https://github.com/dotnet/sdk/pull/3258","RelatedDescription":"Open PR \"Perf wpf winform hello world\" (#3258)"},{"Id":"447233563","IsPullRequest":false,"CreatedAt":"2019-05-22T16:28:58","Actor":"sbomer","Number":"3257","RawContent":null,"Title":"Double write during publish","State":"open","Body":"Publishing a self-contained WPF template app writes some files twice because `ResolvedFileToPublish` has the same dll from different runtime packs (for example, Microsoft.Win32.Registry.dll comes from both netcoreapp and the windowsdesktop pack).\r\nThis causes crossgen failures when used together with `PublishReadyToRun=true`.\r\n\r\nLooks very similar to https://github.com/dotnet/sdk/issues/3035 which was addressed in https://github.com/dotnet/sdk/pull/3021, but I'm still seeing this with version `3.0.100-preview6-012031`.\r\n\r\n/cc @fadimounir @nguerrera @peterhuene \r\n\r\nedit: it fails during `PublishReadyToRun=true` only when used together with the linker. Without linking, the duplicates are already crossgen'd, and so they don't hit the failure. In any case, `ResolvedFileToPublish` has duplicates that shouldn't be there, and we end up with `DoubleWrites` of some files.\r\n\r\n<img width=\"565\" alt=\"image\" src=\"https://user-images.githubusercontent.com/787361/58192612-00a04780-7c76-11e9-8ffc-102d4b993fb2.png\">\r\n","Url":"https://github.com/dotnet/sdk/issues/3257","RelatedDescription":"Open issue \"Double write during publish\" (#3257)"},{"Id":"446827153","IsPullRequest":true,"CreatedAt":"2019-05-22T05:25:30","Actor":"dsplaisted","Number":"3252","RawContent":null,"Title":"Update NuGet","State":"closed","Body":"Replacement for #3243, on top of #3250 which should hopefully fix things.","Url":"https://github.com/dotnet/sdk/pull/3252","RelatedDescription":"Closed or merged PR \"Update NuGet\" (#3252)"},{"Id":"446933661","IsPullRequest":false,"CreatedAt":"2019-05-22T05:02:32","Actor":"RayKoopa","Number":"3256","RawContent":null,"Title":"NullableContextOptions has no effect anymore (after upgrading to VS 16.2 Preview 1?)","State":"open","Body":"I'm using 3.0.100-preview5-011568 in VS 16.2.0 Preview 1.0 and the following sample C# console application:\r\n\r\n**project.csproj**\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <LangVersion>8.0</LangVersion>\r\n    <NullableContextOptions>enable</NullableContextOptions>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\n**Program.cs**\r\n```cs\r\nusing System;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            String? x = \"Test\";\r\n            Console.WriteLine(x);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nDespite having set `NullableContextOptions` to `enable` in the project file, I receive the warning **CS8632: The annotation for nullable reference types should only be used in code within a '#nullable' context.** on the `String?` question mark character.\r\n\r\nSimilarly, another project cannot be compiled anymore due to **CS8627: A nullable type parameter must be known to be a value type or non-nullable reference type. Consider adding a 'class', 'struct', or type constraint.** when using `T?` for a generic class type method parameter:\r\n```cs\r\npublic void WriteOptional<T>(in T? value) where T : class, IWritable\r\n```\r\n\r\nWhen adding `#nullabe enable` to the top of the file(s) causing the warning, it is gone. It's like the project element lost its functionality after upgrading to VS 16.2.0? I did not change the SDK preview version and could compile the same sources correctly in 16.1.0.\r\n\r\nI'm not sure if https://github.com/dotnet/sdk/issues/3245 is relevant here.","Url":"https://github.com/dotnet/sdk/issues/3256","RelatedDescription":"Open issue \"NullableContextOptions has no effect anymore (after upgrading to VS 16.2 Preview 1?)\" (#3256)"},{"Id":"446885292","IsPullRequest":false,"CreatedAt":"2019-05-22T00:56:10","Actor":"vatsan-madhavan","Number":"3254","RawContent":null,"Title":"deps.json for ProjectReferences is not emitted correctly","State":"open","Body":"When I create a project with a project reference like this...\r\n\r\n```XML\r\n<ProjectReference Include=\"..\\WindowsBase.csproj\" />\r\n```\r\n\r\n... the `deps.json` file that's generated has an entry like this:\r\n\r\n```json\r\n      \"WindowsBase/1.0.0\": {\r\n        \"runtime\": {\r\n          \"WindowsBase.dll\": {}\r\n        }\r\n      }\r\n```\r\nThe application loads `WindowsBase` from `Microsoft.NetCore.App` instead of loading the one supplied by the referenced project. \r\n\r\n[Repro: XUnitTestProject1.zip](https://github.com/dotnet/sdk/files/3205090/XUnitTestProject1.zip)\r\n\r\n/cc @ericstj \r\n","Url":"https://github.com/dotnet/sdk/issues/3254","RelatedDescription":"Open issue \"deps.json for ProjectReferences is not emitted correctly\" (#3254)"},{"Id":"446345530","IsPullRequest":true,"CreatedAt":"2019-05-21T18:34:59","Actor":"dsplaisted","Number":"3250","RawContent":null,"Title":"Update stage 0","State":"closed","Body":"Should unblock #3243","Url":"https://github.com/dotnet/sdk/pull/3250","RelatedDescription":"Closed or merged PR \"Update stage 0\" (#3250)"},{"Id":"446443251","IsPullRequest":false,"CreatedAt":"2019-05-21T06:45:04","Actor":"davidfowl","Number":"3251","RawContent":null,"Title":"deps.json file has empty compilationOptions section","State":"open","Body":"Likely a result of the migration to the new JSON APIs\r\n\r\n```JSON\r\n{\r\n  \"runtimeTarget\": {\r\n    \"name\": \".NETCoreApp,Version=v3.0\",\r\n    \"signature\": \"\"\r\n  },\r\n  \"compilationOptions\": {},\r\n  \"targets\": {\r\n    \".NETCoreApp,Version=v3.0\": {\r\n      \"ConsoleApp1/1.0.0\": {\r\n        \"runtime\": {\r\n          \"ConsoleApp1.dll\": {}\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"libraries\": {\r\n    \"ConsoleApp1/1.0.0\": {\r\n      \"type\": \"project\",\r\n      \"serviceable\": false,\r\n      \"sha512\": \"\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\ncc @ahsonkhan @nguerrera ","Url":"https://github.com/dotnet/sdk/issues/3251","RelatedDescription":"Open issue \"deps.json file has empty compilationOptions section\" (#3251)"},{"Id":"445519479","IsPullRequest":false,"CreatedAt":"2019-05-20T17:14:41","Actor":"sebastienros","Number":"3245","RawContent":null,"Title":"NullableContextOptions error during build","State":"closed","Body":"Using the latest build of the SDK, since yesterday.\r\n\r\n```\r\nC:\\Users\\Administrator\\AppData\\Local\\Temp\\BenchmarksServer\\xx1da5ap.ru4\\sdk\\3.0.100-preview6-011991\\Sdks\\Microsoft.NET.Sdk.Razor\\build\\netstandard2.0\\Microsoft.NET.Sdk.Razor.Compilation.targets(156,10): error MSB4064: The \"NullableContextOptions\" parameter is not supported by the \"Csc\" task. Verify the parameter exists on the task, and it is a settable public instance property. [C:\\Users\\Administrator\\AppData\\Local\\Temp\\BenchmarksServer\\2hgsxukz.hiy\\benchmarks\\src\\Benchmarks\\Benchmarks.csproj]\r\nC:\\Users\\Administrator\\AppData\\Local\\Temp\\BenchmarksServer\\xx1da5ap.ru4\\sdk\\3.0.100-preview6-011991\\Sdks\\Microsoft.NET.Sdk.Razor\\build\\netstandard2.0\\Microsoft.NET.Sdk.Razor.Compilation.targets(120,5): error MSB4063: The \"Csc\" task could not be initialized with its input parameters.  [C:\\Users\\Administrator\\AppData\\Local\\Temp\\BenchmarksServer\\2hgsxukz.hiy\\benchmarks\\src\\Benchmarks\\Benchmarks.csproj]\r\n```","Url":"https://github.com/dotnet/sdk/issues/3245","RelatedDescription":"Closed issue \"NullableContextOptions error during build\" (#3245)"},{"Id":"446041376","IsPullRequest":false,"CreatedAt":"2019-05-20T10:31:08","Actor":"fubar-coder","Number":"3249","RawContent":null,"Title":"*.dll.config from package reference not copied to output on publish","State":"open","Body":"# Description\r\n\r\nIt seems that the `*.dll.config` files from a package reference aren't copied to the output directory during a `dotnet publish`.\r\n\r\n# Use case\r\n\r\nI stumbled across this problem while consuming my `FubarDev.PamSharp` package, which **requires** having the ´.dll.config` file, because it contains a `dllmap` that is needed to find the correct native library.\r\n\r\n# `dotnet --info`\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  16.04\r\n OS Platform: Linux\r\n RID:         ubuntu.16.04-x64\r\n Base Path:   /home/fubar-coder/dotnet/sdk/3.0.100-preview5-011568/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-preview5-011568 [/home/fubar-coder/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [/home/fubar-coder/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [/home/fubar-coder/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n# System information\r\n\r\nWindows 10 Pro for Workstation 1809 (Build 17763.475)\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3249","RelatedDescription":"Open issue \"*.dll.config from package reference not copied to output on publish\" (#3249)"},{"Id":"444047284","IsPullRequest":true,"CreatedAt":"2019-05-17T23:36:22","Actor":"sbomer","Number":"3231","RawContent":null,"Title":"Flow IsTrimmable from FrameworkReference to resolved assets","State":"closed","Body":"Follow-up to https://github.com/dotnet/core-sdk/pull/1992/files. The next step is to flow the metadata from `RuntimePack` to the resolved files.\r\n\r\nThis flows `IsTrimmable` metadata from `FrameworkReference` and `KnownFrameworkReference` (`FrameworkReference` has priority) to the `RuntimePack` ItemGroup produced by `ResolveFrameworkReferences`. The metadata will ultimately influence the default linker behavior.\r\n\r\n@dsplaisted @nguerrera PTAL.","Url":"https://github.com/dotnet/sdk/pull/3231","RelatedDescription":"Closed or merged PR \"Flow IsTrimmable from FrameworkReference to resolved assets\" (#3231)"},{"Id":"445620306","IsPullRequest":true,"CreatedAt":"2019-05-17T23:25:17","Actor":"wli3","Number":"3248","RawContent":null,"Title":"Remove _WriteAppConfigWithSupportedRuntime Input dependency ","State":"closed","Body":"on ResolveAssemblyReferencesStateFile\r\n\r\nfix https://github.com/dotnet/sdk/issues/3131\r\n\r\nI tried to get a repro in test. However, I cannot pin down a minimal repro to cause rar cache file to be invalid between builds.\r\n\r\ncc @KirillOsenkov","Url":"https://github.com/dotnet/sdk/pull/3248","RelatedDescription":"Closed or merged PR \"Remove _WriteAppConfigWithSupportedRuntime Input dependency \" (#3248)"},{"Id":"445606690","IsPullRequest":true,"CreatedAt":"2019-05-17T22:37:25","Actor":"peterhuene","Number":"3247","RawContent":null,"Title":"Copy runtime pack resource assemblies on self-contained build/publish.","State":"closed","Body":"This commit implements copying resource assemblies for self-contained\r\nbuild/publish from runtime packs.\r\n\r\nCloses #3068.","Url":"https://github.com/dotnet/sdk/pull/3247","RelatedDescription":"Closed or merged PR \"Copy runtime pack resource assemblies on self-contained build/publish.\" (#3247)"},{"Id":"445600954","IsPullRequest":true,"CreatedAt":"2019-05-17T22:09:36","Actor":"dsplaisted","Number":"3246","RawContent":null,"Title":"Skip tests where .NET Core version they use isn't supported on current OS","State":"closed","Body":"Update some tests to skip running if the current operating system doesn't support the right version of .NET Core.\r\n\r\nThis will help run the sdk tests in dotnet/core-sdk, which tests more operating systems than this repo does.","Url":"https://github.com/dotnet/sdk/pull/3246","RelatedDescription":"Closed or merged PR \"Skip tests where .NET Core version they use isn't supported on current OS\" (#3246)"},{"Id":"445498451","IsPullRequest":false,"CreatedAt":"2019-05-17T15:29:08","Actor":"fr0","Number":"3244","RawContent":null,"Title":"How to set version metadata?","State":"open","Body":"1. I want to use the `VersionPrefix` property inside my `csproj` to define my package's semver 2.0 (3-part) version.\r\n2. I want to attach a 4th part and build metadata on the command line.\r\n\r\nIn other words, I want to have the version be, e.g. \"1.2.3.4+f0c432\"\r\n\r\nWhere `1.2.3` is stored in the `csproj`\r\nand `.4` comes from the CI environment\r\nand `+40c432` is the commit hash.\r\n\r\nThe problem I've run into is that using `--version-suffix` automatically makes it a pre-release version, which I don't want.\r\n\r\nEven if I ignore the 4th number (build number), I can't even do this:\r\n\r\n```\r\ndotnet build MyProj  --version-suffix \"+f0c432\"\r\n```\r\n\r\nBecause:\r\n\r\n```\r\n/usr/local/share/dotnet/sdk/2.2.107/NuGet.targets(114,5): error : '1.2.3-+f0c432' is not a valid version string\r\n```","Url":"https://github.com/dotnet/sdk/issues/3244","RelatedDescription":"Open issue \"How to set version metadata?\" (#3244)"},{"Id":"444685384","IsPullRequest":true,"CreatedAt":"2019-05-16T23:10:13","Actor":"sbomer","Number":"3237","RawContent":null,"Title":"Update stage0","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3237","RelatedDescription":"Closed or merged PR \"Update stage0\" (#3237)"},{"Id":"445092425","IsPullRequest":true,"CreatedAt":"2019-05-16T18:12:47","Actor":"zivkan","Number":"3243","RawContent":null,"Title":"Insert NuGet 5.2.0-preview2.6020 into master","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3243","RelatedDescription":"Open PR \"Insert NuGet 5.2.0-preview2.6020 into master\" (#3243)"},{"Id":"445077491","IsPullRequest":true,"CreatedAt":"2019-05-16T17:35:38","Actor":"nugetlurker","Number":"3242","RawContent":null,"Title":"Insert NuGet Build 5.2.0-preview2.6020 into sdk","State":"open","Body":"Insert NuGet Build 5.2.0-preview2.6020 into sdk release/2.1.8xx branch","Url":"https://github.com/dotnet/sdk/pull/3242","RelatedDescription":"Open PR \"Insert NuGet Build 5.2.0-preview2.6020 into sdk\" (#3242)"},{"Id":"445077453","IsPullRequest":true,"CreatedAt":"2019-05-16T17:35:32","Actor":"nugetlurker","Number":"3241","RawContent":null,"Title":"Insert NuGet Build 5.2.0-preview2.6020 into sdk","State":"open","Body":"Insert NuGet Build 5.2.0-preview2.6020 into sdk release/2.2.4xx branch","Url":"https://github.com/dotnet/sdk/pull/3241","RelatedDescription":"Open PR \"Insert NuGet Build 5.2.0-preview2.6020 into sdk\" (#3241)"},{"Id":"444694510","IsPullRequest":true,"CreatedAt":"2019-05-15T23:56:30","Actor":"MSLukeWest","Number":"3240","RawContent":null,"Title":"Setting IsKeyOutput metadata on AppHost file in PublishItemsOutputGroup","State":"open","Body":"Updating the publishing targets to set the IsKeyOutput metadata on the apphost file (exe).  The key output is used when creating shortcuts using Installer Projects.\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3240","RelatedDescription":"Open PR \"Setting IsKeyOutput metadata on AppHost file in PublishItemsOutputGroup\" (#3240)"},{"Id":"444692644","IsPullRequest":true,"CreatedAt":"2019-05-15T23:47:44","Actor":"dotnet-bot","Number":"3239","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.2.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3239","RelatedDescription":"Open PR \"Merge release/2.1.5xx to release/2.2.1xx\" (#3239)"},{"Id":"444692635","IsPullRequest":true,"CreatedAt":"2019-05-15T23:47:41","Actor":"dotnet-bot","Number":"3238","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.1.6xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.1.6xx\ngit reset --hard upstream/release/2.1.6xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.1.6xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3238","RelatedDescription":"Open PR \"Merge release/2.1.5xx to release/2.1.6xx\" (#3238)"},{"Id":"444669751","IsPullRequest":false,"CreatedAt":"2019-05-15T22:16:18","Actor":"shhsu","Number":"3236","RawContent":null,"Title":"Question: why does publish pull binaries from $(IntermediateAssembly) instead of $(OutDir)","State":"open","Body":"Hi dotnet:\r\n\r\nI am wondering why publish pull binaries from $(IntermediateAssembly) instead of $(OutDir)\r\nhttps://github.com/dotnet/sdk/blob/77677cd4cd4d033e2a30e33f2e7dc49d7f3c8095/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Publish.targets#L354\r\n\r\nBackground:\r\nI created a VSTS pipeline that calls msbuild to build/sign/publish my application (publish to file). However, I am finding that a bunch of binaries in my publish directory is not signed.\r\n\r\nAfter some investigations I have found out that all bits in my $(OutDir) are signed, but the files got copied to publish directory are not from $(OutDir), instead they are from `obj\\Release\\` directory. After looking at the target file I finally found the line that indicates this behavior.\r\n\r\nI have yet to find a good around for this issue. I was wondering why is the reason for this behavior and if there is a workaround for this.\r\n\r\nthanks\r\nPeter","Url":"https://github.com/dotnet/sdk/issues/3236","RelatedDescription":"Open issue \"Question: why does publish pull binaries from $(IntermediateAssembly) instead of $(OutDir)\" (#3236)"},{"Id":"444061058","IsPullRequest":true,"CreatedAt":"2019-05-15T21:16:56","Actor":"kouvel","Number":"3232","RawContent":null,"Title":"Make QuickJitForLoops configurable","State":"closed","Body":"- Enabling this option may improve startup time, may be useful in some scenarios\r\n- Enabling this option opens up the possibility that long-running hot loops remain for too long in code that is not optimized. Methods containing such hot loops may be attributed with `AggressiveOptimizationAttribute` to work around the issue on a case-by-case basis.","Url":"https://github.com/dotnet/sdk/pull/3232","RelatedDescription":"Closed or merged PR \"Make QuickJitForLoops configurable\" (#3232)"},{"Id":"444575344","IsPullRequest":true,"CreatedAt":"2019-05-15T18:11:45","Actor":"livarcocc","Number":"3235","RawContent":null,"Title":"Update branding to 2.2.4xx","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3235","RelatedDescription":"Open PR \"Update branding to 2.2.4xx\" (#3235)"},{"Id":"444575055","IsPullRequest":true,"CreatedAt":"2019-05-15T18:11:04","Actor":"livarcocc","Number":"3234","RawContent":null,"Title":"Update branding to 2.1.8xx","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3234","RelatedDescription":"Open PR \"Update branding to 2.1.8xx\" (#3234)"},{"Id":"444400167","IsPullRequest":true,"CreatedAt":"2019-05-15T12:04:41","Actor":"dotnet-maestro[bot]","Number":"3233","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190514.13\r\n- **Date Produced**: 5/15/2019 2:37 AM\r\n- **Commit**: 670f6ee1a619a2a7c84cfdfe2a1c84fbe94e1c6b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19264.13\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19264.13\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190516.2\r\n- **Date Produced**: 5/16/2019 8:24 AM\r\n- **Commit**: 37c11672ee11dc2b3365b95a29e0c012f44032be\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19266.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19266.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190516.4\r\n- **Date Produced**: 5/16/2019 7:11 PM\r\n- **Commit**: 61cc7d4d347300835925ce5245bfc3ecb6b621d7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19266.4\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19266.4\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190517.7\r\n- **Date Produced**: 5/18/2019 4:34 AM\r\n- **Commit**: 55ce2900743cb609e51e2c6487e87e42eb627880\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19267.7\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19267.7\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190518.2\r\n- **Date Produced**: 5/18/2019 3:22 PM\r\n- **Commit**: 6d0514d3da59137630b9add5b5e619bce2631f02\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19268.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19268.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190520.1\r\n- **Date Produced**: 5/20/2019 8:30 AM\r\n- **Commit**: e913fb3b02d4089a91ff91c041c5f6e7c29038b0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19270.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19270.1\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190520.2\r\n- **Date Produced**: 5/20/2019 1:26 PM\r\n- **Commit**: 3b0760f8789d5d4bd146b36bd9051696d7a56bfa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19270.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19270.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190521.7\r\n- **Date Produced**: 5/22/2019 1:45 AM\r\n- **Commit**: 7a6fb6528b2060cd9e3a3d92535f5b6fdc6b2e82\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19271.7\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19271.7\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3233","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#3233)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1131209353829052418","CreatedAt":"2019-05-22T14:45:01+00:00","UserScreenname":"dotnet","Text":"Join @terrajobst in 15 minutes when he'll be adding break and continue statements to his compiler project. https://t.co/guh6xtpdbd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":1,"RawContent":null},{"Id":"1129054452357271553","CreatedAt":"2019-05-16T16:02:12+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the .NET, C#, and F# teams https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":17,"FavoriteCount":3,"RawContent":null},{"Id":"1129053721206304769","CreatedAt":"2019-05-16T15:59:18+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":2,"FavoriteCount":1,"RawContent":null},{"Id":"1128765757175631872","CreatedAt":"2019-05-15T20:55:02+00:00","UserScreenname":"dotnet","Text":"We just blogged about all the performance works we did in .NET Core 3.0 https://t.co/2JGXxF7ejn","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":313,"FavoriteCount":150,"RawContent":null},{"Id":"1128672633665384449","CreatedAt":"2019-05-15T14:45:00+00:00","UserScreenname":"dotnet","Text":"Join @terrajobst in 15 minutes when he's implementing functions in his compiler. https://t.co/SYndeEbdMY","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":5,"RawContent":null},{"Id":"1128343453970993152","CreatedAt":"2019-05-14T16:56:57+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":12,"FavoriteCount":5,"RawContent":null},{"Id":"1128339508414410757","CreatedAt":"2019-05-14T16:41:16+00:00","UserScreenname":"dotnet","Text":"ML .NET  CLI: Learn how to automatically generate an ML .NET  machine learning model and C# related code with this… https://t.co/i8zHrBa1UM","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":126,"FavoriteCount":51,"RawContent":null}]}},"RunOn":"2019-05-23T05:30:34.2100693Z","RunDurationInMilliseconds":9545}