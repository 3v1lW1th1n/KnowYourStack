{"Data":{"Blog":{"FeedItems":[{"Title":"Securing network traffic with TLS 1.2","PublishedOn":"2018-08-07T15:58:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Secure and encrypted network communications are a crucial part of mobile application development. Without some kind of security around the communication layer, it is trivial for a third party to...","Href":"https://blog.xamarin.com/securing-network-traffic-with-tls-1-2/","RawContent":null},{"Title":"Adaptive Mobile Designs with FlexLayout","PublishedOn":"2018-08-03T17:33:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms is fantastic for quickly shipping a single code base to multiple platforms and devices. As soon as you are present on all those different screens, you need to make sure your UI looks as...","Href":"https://blog.xamarin.com/adaptive-mobile-designs-with-flexlayout/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in August!","PublishedOn":"2018-08-01T19:46:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This year&#8217;s .NET Conf is coming to you September 12 &#8211; 14, 2018! Over the course of the three days, you have a wide selection of live sessions that feature speakers from the community and...","Href":"https://blog.xamarin.com/xamarin-dotnet-developer-events-august/","RawContent":null},{"Title":"Guest Post: Visual UI tests on iOS simulator using Xamarin and Appium","PublishedOn":"2018-07-30T19:07:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post from Sophie Tagar, a customer support engineer at Applitools. Previously, Sophie was a software developer at Matrix Israel where, among other things, she did full stack...","Href":"https://blog.xamarin.com/visual-ui-tests-ios-simulator-using-xamarin-appium/","RawContent":null},{"Title":"Announcing Xamarin.Android 9.0 (P) Preview","PublishedOn":"2018-07-27T16:11:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Android 9.0 (P) introduces many features such as Wi-Fi RTT(Round-Trip-Time), Display cutout support, Notification enhancements, Multi-camera support, and much more. We&#8217;re excited to announce...","Href":"https://blog.xamarin.com/xamarin-android-9-0-p-preview/","RawContent":null},{"Title":"Previewing Files Inside Your Xamarin.iOS App","PublishedOn":"2018-07-25T18:21:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If your app interacts with files, such as email attachments or photos, allowing users to preview those files without leaving your app is a great way to enhance the user&#8217;s experience....","Href":"https://blog.xamarin.com/previewing-files-with-xamarin-ios/","RawContent":null},{"Title":"Xamarin.Forms 3.1: Improving the Little Things","PublishedOn":"2018-07-18T19:27:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Earlier this year, we surveyed Xamarin.Forms developers about the kinds of custom controls and extra platform code being written repeatedly that should be considered for support “in the box”. From...","Href":"https://blog.xamarin.com/xamarin-forms-3-1-improvments/","RawContent":null},{"Title":"Export To Application Insights With AppCenter Continuous Export","PublishedOn":"2018-07-10T03:35:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Five-star mobile apps have one special feature: they don’t let go of their users. This can be achieved by understanding your app, the app’s users, and how these users interact with your app. The deep...","Href":"https://blog.xamarin.com/appcenter-continuous-export-application-insights/","RawContent":null},{"Title":"The Xamarin Show: Exploring Awesome Xamarin & Visual Studio Features","PublishedOn":"2018-07-05T18:50:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Each week on The Xamarin Show we explore the latest and greatest in Xamarin development by looking at new features built into Visual Studio, build native cross-platform user interfaces with...","Href":"https://blog.xamarin.com/xamarin-show-ux-xamarinforms-apis-xamarin-essentials/","RawContent":null},{"Title":"Xamarin Podcast: What’s New in Visual Studio 2017, Xamarin.Forms, and the Android designer","PublishedOn":"2018-07-02T19:36:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, Pierce Boggan and James Montemagno discuss the latest &#038; greatest in mobile .NET development, including Xamarin.Forms 3.0 and 3.1, Visual Studio 2017...","Href":"https://blog.xamarin.com/xamarin-podcast-vs2017-xamarinforms-android-designer/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8079802709","Type":"IssuesEvent","CreatedAt":"2018-08-07T19:41:01","Actor":"Petiephant","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2044","RelatedDescription":"Opened issue \"RecyclerView SpanSizeLookup performance issues with a large data set\" (#2044) at xamarin/xamarin-android","RelatedBody":"### Background\r\n\r\n[Xamarin Forum Thread](https://forums.xamarin.com/discussion/129533/recyclerview-spansizelookup-horrible-performance-with-a-large-data-set)\r\n\r\n### Steps to Reproduce\r\n\r\n1. Build and Run - [XamarinCode.zip](https://github.com/xamarin/xamarin-android/files/2267711/XamarinCode.zip) (basic example, please read the comments in the code)\r\n2. Start scrolling through the list\r\n3. Notice the slowness/stuttering/jank\r\n\r\n### Expected Behavior\r\n\r\nYou are able to comfortably scroll smoothly up and down the whole list.\r\n\r\nThe native java version seems to run fine on my device (Nexus 5, v6.0.1) - [JavaCode.zip](https://github.com/xamarin/xamarin-android/files/2267712/JavaCode.zip)\r\nSee here - [JavaScreenRecord.mp4](https://drive.google.com/file/d/1snrFNOSs5qavor-jz4SewKki1wrxvj2D/view?usp=sharing)\r\n\r\n### Actual Behavior\r\n\r\nSlowness/stuttering/jank when scrolling through the list. This is with a basic SpanSizeLookup that returns 1 (my custom implementation is obviously different). However, even using the default GridLayoutManager.DefaultSpanSizeLookup, things run nice and fast/smooth, but with a basic custom version, things are super slow.\r\n\r\nSee here - [XamarinScreenRecord.mp4](https://drive.google.com/file/d/1FvWZIOdrUu_TZM07dEhLudBjCfe2xFzD/view?usp=sharing)\r\n\r\nProfiling this shows it's because of getSpanSize. It's seem to be called (unnecessarily?) thousands upon thousands of times whenever you scroll the list.\r\n\r\n![xamarinprofiler](https://user-images.githubusercontent.com/42078613/43796674-d3a41076-9a7c-11e8-9983-ebb7fdaee220.png)\r\n\r\n### Version Information\r\n\r\n[VisualStudio.txt](https://github.com/xamarin/xamarin-android/files/2267770/VisualStudio.txt)"},{"Id":"8079713951","Type":"IssuesEvent","CreatedAt":"2018-08-07T19:23:04","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2043","RelatedDescription":"Opened issue \"Occasionally encountering strange race condition or timing issue in `ConvertResourcesCases`\" (#2043) at xamarin/xamarin-android","RelatedBody":"We're running in to a seemingly rare bug on one particular environment where the `ConvertResourcesCases` task will fail during various file operations. These appear to have some sort of threading, race, or timing aspect, as the exact error or reproduction is not consistent.\r\n\r\nI've managed to narrow things down _slightly_ on a single test machine where this seems to be happening more frequently. Using the steps below, I can somewhat consistently cause this task to fail when attempting to process items from `lp/*/jl`, all of which correspond to various `Xamarin.Android.Support.*` NuGet references in these templates.\r\n\r\nGiven the results we have seen so far, this appears to be a regression introduced somewhere in xamarin-android/d15-9 + mono/2018-06 + monodevelop/release-7.7\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new Android App -> Max Compatibility project in VS Mac. This should include version 27.0.2 of `Xamarin.Android.Support.Compat`.\r\n2. Click on Build -> Build All. The initial build should succeed).\r\n3. Right click on Packages -> Update. A minor version bump for these packages should be available (e.g. 27.0.2 -> 27.0.2.1).\r\n4. Click on Build -> Build All. This build attempt is failing for me during `ConvertResourcesCases` pretty consistently on a mac mini running Sierra.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n`ConvertResourcesCases` successfully completes on build and subsequent build attempts after changing various references or project options.\r\n\r\n### Actual Behavior\r\n`ConvertResourcesCases` fails intermittently when attempting certain file operations. The \"culprit\" file in question varies from repro to repro, and the exception does not always reflect the state of my intermediate output directory (e.g. FileNotFoundException thrown when the file _does_ exist).\r\n```\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1666,2): error MSB4018: The \"ConvertResourcesCases\" task failed unexpectedly.\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1666,2): error MSB4018: System.IO.FileNotFoundException: Could not find file \"/Users/xamarinqa/agent/_work/r15/a/XQA.VSMac/XQA.VisualStudioMac/TestResults/f6a9104b/TestAndroidEnableAOTEnterprise/Temp/DroidApp/DroidApp/obj/Release/lp/6/jl/res/layout/notification_template_custom_big.xml\"\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1666,2): error MSB4018: File name: '/Users/xamarinqa/agent/_work/r15/a/XQA.VSMac/XQA.VisualStudioMac/TestResults/f6a9104b/TestAndroidEnableAOTEnterprise/Temp/DroidApp/DroidApp/obj/Release/lp/6/jl/res/layout/notification_template_custom_big.xml'\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1666,2): error MSB4018:   at System.IO.FileStream..ctor (System.String path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, System.Int32 bufferSize, System.Boolean anonymous, System.IO.FileOptions options) [0x00259] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-06/external/bockbuild/builds/mono-x64/mcs/class/corlib/System.IO/FileStream.cs:274 \r\n```\r\n```\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1666,2): error MSB4018: The \"ConvertResourcesCases\" task failed unexpectedly.\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1666,2): error MSB4018: System.IO.IOException: Could not create file \"/var/folders/44/n482q3wx171dnj8b6165rync0000gn/T/tmp5964ed16.tmp\" or \"/Users/xamarinqa/Projects/TestFin/TestFin/obj/Debug/lp/6/jl/res/values-en-rIN/values-en-rIN.xml\". File already exists.\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1666,2): error MSB4018:   at System.IO.File.Copy (System.String sourceFileName, System.String destFileName, System.Boolean overwrite) [0x00193] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-06/external/bockbuild/builds/mono-x64/mcs/class/corlib/System.IO/File.cs:111 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1666,2): error MSB4018:   at Xamarin.Android.Tools.Files.CopyIfChanged (System.String source, System.String destination) [0x00027] in <85b0a2338aa04872b3b64fcf0b67c0bd>:0 \r\n```\r\n```\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1666,2): error MSB4018: The \"ConvertResourcesCases\" task failed unexpectedly.\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1666,2): error MSB4018: System.IO.FileNotFoundException: /var/folders/zz/xvp_v21d0_qgnjn2xd4kqsrh0000gn/T/tmp3b73f1d.tmp does not exist\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1666,2): error MSB4018: File name: '/var/folders/zz/xvp_v21d0_qgnjn2xd4kqsrh0000gn/T/tmp3b73f1d.tmp'\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(1666,2): error MSB4018:   at System.IO.File.Copy (System.String sourceFileName, System.String destFileName, System.Boolean overwrite) [0x00193] in /Users/builder/jenkins/workspace/build-package-osx-mono/2018-06/external/bockbuild/builds/mono-x64/mcs/class/corlib/System.IO/File.cs:111 \r\n```\r\n### Version Information\r\nhttps://gist.github.com/pjcollins/2dbe0b3beb7a61ffb84b7f6e8a2e712a\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttps://gist.github.com/pjcollins/f758cbbca74519af957fcaca5f4dc957\r\nhttp://xqa.blob.core.windows.net/gist/log-0ae5db3450514d0d8dfc2f41a17141fc.txt\r\nhttps://gist.github.com/pjcollins/c987b9044fbb556cf68dcbc3c7d22495\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"8079502372","Type":"PullRequestEvent","CreatedAt":"2018-08-07T18:42:11","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2038","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Always set SetLastWriteTimeUtc\" (#2038) at xamarin/xamarin-android","RelatedBody":""},{"Id":"8079203784","Type":"IssuesEvent","CreatedAt":"2018-08-07T17:44:29","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2042","RelatedDescription":"Opened issue \"Nullable Reference Types support\" (#2042) at xamarin/xamarin-android","RelatedBody":"C# has a proposal for \"nullable reference types\": https://github.com/dotnet/csharplang/blob/master/proposals/nullable-reference-types.md\r\n\r\nUnder this proposal, a `string value` parameter could not be `null`, while a `string? value` parameter *could* be null.\r\n\r\nAs It Turns Out™, Android 9 is getting nullable information as well: https://android-developers.googleblog.com/2018/08/android-pie-sdk-is-now-more-kotlin.html?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+blogspot%2FhsDu+%28Android+Developers+Blog%29\r\n\r\nWe should figure out *how* the Kotlin nullable and non-nullable reference type information is stored (`.class` file attributes? XML files? other?) and update `generator` so that we can \"forward\" that information to a future `Mono.Android.dll` version."},{"Id":"8079166864","Type":"PullRequestEvent","CreatedAt":"2018-08-07T17:37:14","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2025","RelatedDescription":"Merged pull request \"Refactor dynamic method names creation\" (#2025) at xamarin/xamarin-android","RelatedBody":"Put the dynamic method name logic in one place. It also removes the\r\nformatted string use and uses `InvariantCulture`.\r\n\r\nIt hopefully improves the performance (simpler string operations,\r\n`InvariantCulture`). The change in performance is so small though, that\r\nI wasn't able to measure it.\r\n\r\nWe use `long` counter, because `ConstructorBuilder` can, in some\r\ncases, create a new constructor per java object instance. This should\r\nbe addressed in the future. After that we can probably get back to\r\n`int` counter.\r\n\r\nAlso associate the created dynamic methods with\r\n`DynamicMethodNameCounter` class instead of `System.Object`"},{"Id":"8076184715","Type":"PullRequestEvent","CreatedAt":"2018-08-07T08:40:57","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1991","RelatedDescription":"Closed pull request \"[Xamarin.Android.Build.Tasks] Set the timestamps on the `resources.cache` files.\" (#1991) at xamarin/xamarin-android","RelatedBody":"We currently do not force the setting of the write and access\r\ntimestamps when saving the resource.caches files. We have\r\nrecently (90e31550) been reviewing and adding this in other\r\nparts of the build system. This is to ensure that when we do\r\nmodify a file it has the latest timestamp.\r\n\r\nThis commit adds support for calling\r\n\r\n\tMonoAndroidHelper.SetLastAccessAndWriteTimeUtc ()\r\n\r\nwhen we save the XDocument cache files."},{"Id":"8074320211","Type":"PullRequestEvent","CreatedAt":"2018-08-06T22:40:41","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2041","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] fix for UseLatest when API level not installed\" (#2041) at xamarin/xamarin-android","RelatedBody":"Cherry-pick from (#2018)\r\n\r\nFixes: https://github.com/xamarin/xamarin-android/issues/2007\r\n\r\nApparently there is a situation we aren't doing the right thing for:\r\n\r\n  - `$(TargetFrameworkVersion)`=v9.0\r\n  - `$(AndroidUseLatestPlatformSdk)`=True\r\n  - API 28 is not installed\r\n\r\nIn this case, we *should* be downgrading `$(TargetFrameworkVersion)`\r\nto `v8.1`.  Instead we get:\r\n\r\n\tResolveSdksTask Outputs:\r\n\t    AndroidApiLevel: 27\r\n\t    AndroidApiLevelName: 27\r\n\t    TargetFrameworkVersion: v9.0\r\n\r\nThis puts us in a weird state, since we would use `.jar` files for\r\ndifferent API levels:\r\n\r\n  - `platforms/android-27/android.jar`\r\n  - `xbuild-frameworks/MonoAndroid/v9.0/mono.android.jar`\r\n\r\nThis in turn causes `proguard` (and likely other things) to fail:\r\n\r\n\tPROGUARD : warning : there were 38 unresolved references to classes or interfaces.\r\n\t    You may need to add missing library jars or update their versions.\r\n\t    If your code works fine without the missing classes, you can suppress\r\n\t    the warnings with '-dontwarn' options.\r\n\t    (http://proguard.sourceforge.net/manual/troubleshooting.html#unresolvedclass)\r\n\r\nThe fix here is somewhat complicated:\r\n\r\n 1. Starting at `maxSupported` API level, check to see if:\r\n 2. An Android API directory corresponding to `maxSupported` exists,\r\n    e.g. `platforms/android-28`, and\r\n 3. A `$(TargetFrameworkVersion)` directory corresponding to (2)\r\n    exists such as `MonoAndroid/v9.0`.\r\n 4. Decrement `maxSupported` until a value which satisfies *both*\r\n    (2) and (3) is found.\r\n\r\nAdd a parameterized test cases verifying that the right thing is\r\nhappening when `$(AndroidUseLatestPlatformSdk)`=True and different\r\nAPI levels are actually installed.\r\n\r\nOther changes:\r\n\r\n  - Refactored a bit to not call `int.TryParse()` when not needed. We\r\n    could just use the `int` value and call `ToString()` in a better\r\n    order.\r\n  - One existing test case had an incorrect failure message; fixed.\r\n\r\nFinally, remove `$(_SupportedApiLevel)`.  This MSBuild property\r\nappears to be vestigial, and was causing confusion but had no real\r\nbenefit, i.e. as `$(_SupportedApiLevel)` is used to generate the\r\n`ANDROID_X` values in `<GetAndroidDefineConstants/>`, what possible\r\nvalue is there in allowing it to be *higher* than\r\n`$(TargetFrameworkVersion)`, which controls which `Mono.Android.dll`\r\nthe source code is compiled against?\r\n\r\nIt appears that we can just remove `$(_SupportedApiLevel)`, and use\r\n`$(_AndroidApiLevel)` in its place.  I also checked private repos,\r\nand could find nothing that is using this property."},{"Id":"8074209199","Type":"PullRequestEvent","CreatedAt":"2018-08-06T22:07:59","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2018","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] fix for UseLatest when API level not installed\" (#2018) at xamarin/xamarin-android","RelatedBody":"Fixes #2007\r\n\r\nApparently there is a situation we aren't doing the right thing for:\r\n- `TargetFrameworkVersion` is set to `v9.0`\r\n- `AndroidUseLatestPlatformSdk`=`True`\r\n- API 28 is not installed\r\n\r\nIn this case, we *should* be downgrading `TargetFrameworkVersion` to `v8.1`. Instead we get:\r\n\r\n    ResolveSdksTask Outputs:\r\n        AndroidApiLevel: 27\r\n        AndroidApiLevelName: 27\r\n        TargetFrameworkVersion: v9.0\r\n\r\nThis puts us in a weird state, since we would use JAR files for\r\ndifferent API levels:\r\n- `platforms/android-27/android.jar`\r\n- `xbuild-frameworks/MonoAndroid/v9.0/mono.android.jar`\r\n\r\nThis causes `proguard` (and likely other things) to fail:\r\n\r\n    PROGUARD : warning : there were 38 unresolved references to classes or interfaces.\r\n        You may need to add missing library jars or update their versions.\r\n        If your code works fine without the missing classes, you can suppress\r\n        the warnings with '-dontwarn' options.\r\n        (http://proguard.sourceforge.net/manual/troubleshooting.html#unresolvedclass)\r\n\r\nThe fix here is somewhat complicated:\r\n- Start at `maxSupported` API level and decrement until...\r\n- An Android API level directory exists\r\n- A `TargetFrameworkVersion` directory exists such as `MonoAndroid/v9.0`\r\n- Use a properly paired API level + `TargetFrameworkVersion` combination\r\n\r\nI also added parameterized test cases verifying the right thing is\r\nhappening when `AndroidUseLatestPlatformSdk` is enabled and different\r\nAPI levels are actually installed.\r\n\r\nOther changes:\r\n- Refactored a bit to not call `int.TryParse` when not needed. We\r\ncould just use the `int` value and call `ToString ()` in a better\r\norder.\r\n- One existing test case had an incorrect failure message, I fixed.\r\n- Removed `$(_SupportedApiLevel)` in favor of `$(_AndroidApiLevel)`,\r\nsince it appeared to be vestigial/not used"},{"Id":"8074209192","Type":"IssuesEvent","CreatedAt":"2018-08-06T22:07:59","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2007","RelatedDescription":"Closed issue \"Android App with Proguard enabled fails to build in Release mode\" (#2007) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create new Android App project\r\n2. Set the configuration to Release\r\n3. Select 'Enable Proguard' checkbox in Android project options\r\n4. Save changes\r\n5. Build solution\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nBuild succeded\r\n\r\n### Actual Behavior\r\nBuild failed with \" \"java\" exited with code 1.\" error\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\nhttp://xqa.blob.core.windows.net/gist/log-41f6c488213b4fde8589d3c1c517b668.txt\r\n\r\nUses XA Version: 9.0.0.18\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\nDiagnostic build output:\r\nhttp://xqa.blob.core.windows.net/gist/log-d2228aeedaf348229901105639ceed28.txt\r\n\r\nIDE log:\r\nhttp://xqa.blob.core.windows.net/gist/TestEnableProguard.Ide.log.180726133733-c6efd278b0904f24be5fc76a22cee454.txt\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->\r\n\r\n> VS bug [#655384](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/655384)"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8080775189","Type":"IssuesEvent","CreatedAt":"2018-08-07T23:29:05","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2834","RelatedDescription":"Closed issue \"[Android] `Layout.Childred.Clear()` causes a System.NullReferenceException\" (#2834) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n`Layout.Childred.Clear()` causes a `System.NullReferenceException`\r\n\r\nException:\r\n\r\nSystem.NullReferenceException: Object reference not set to an instance of an object. occurred\r\n\r\n  at Xamarin.Forms.Platform.Android.VisualElementPackager.RemoveChild (Xamarin.Forms.VisualElement view) [0x00011] in d:\\Development\\3rd\\Xamarin.Forms-release-3.0.0-sr1\\Xamarin.Forms.Platform.Android\\VisualElementPackager.cs:187 \r\n  at Xamarin.Forms.Platform.Android.VisualElementPackager.OnChildRemoved (System.Object sender, Xamarin.Forms.ElementEventArgs e) [0x0003b] in d:\\Development\\3rd\\Xamarin.Forms-release-3.0.0-sr1\\Xamarin.Forms.Platform.Android\\VisualElementPackager.cs:172 \r\n  at (wrapper delegate-invoke) System.EventHandler`1[Xamarin.Forms.ElementEventArgs]:invoke_void_object_TEventArgs (object,Xamarin.Forms.ElementEventArgs)\r\n  at Xamarin.Forms.Element.OnChildRemoved (Xamarin.Forms.Element child) [0x00016] in d:\\Development\\3rd\\Xamarin.Forms-release-3.0.0-sr1\\Xamarin.Forms.Core\\Element.cs:387 \r\n  at Xamarin.Forms.VisualElement.OnChildRemoved (Xamarin.Forms.Element child) [0x00001] in d:\\Development\\3rd\\Xamarin.Forms-release-3.0.0-sr1\\Xamarin.Forms.Core\\VisualElement.cs:629 \r\n  at Xamarin.Forms.Layout`1[T].OnChildRemoved (Xamarin.Forms.Element child) [0x00001] in d:\\Development\\3rd\\Xamarin.Forms-release-3.0.0-sr1\\Xamarin.Forms.Core\\Layout.cs:41 \r\n  at Xamarin.Forms.AbsoluteLayout.OnChildRemoved (Xamarin.Forms.Element child) [0x00014] in d:\\Development\\3rd\\Xamarin.Forms-release-3.0.0-sr1\\Xamarin.Forms.Core\\AbsoluteLayout.cs:82 \r\n  at Xamarin.Forms.Layout.OnInternalRemoved (Xamarin.Forms.View view) [0x00014] in d:\\Development\\3rd\\Xamarin.Forms-release-3.0.0-sr1\\Xamarin.Forms.Core\\Layout.cs:461 \r\n  at Xamarin.Forms.Layout.InternalChildrenOnCollectionChanged (System.Object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x0004e] in d:\\Development\\3rd\\Xamarin.Forms-release-3.0.0-sr1\\Xamarin.Forms.Core\\Layout.cs:425 \r\n  at (wrapper delegate-invoke) <Module>:invoke_void_object_NotifyCollectionChangedEventArgs (object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)\r\n  at System.Collections.ObjectModel.ObservableCollection`1[T].OnCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x0000f] in <6c708cf596db438ebfc6b7e012659eee>:0 \r\n  at System.Collections.ObjectModel.ObservableCollection`1[T].OnCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedAction action, System.Object item, System.Int32 index) [0x00009] in <6c708cf596db438ebfc6b7e012659eee>:0 \r\n  at System.Collections.ObjectModel.ObservableCollection`1[T].RemoveItem (System.Int32 index) [0x0002b] in <6c708cf596db438ebfc6b7e012659eee>:0 \r\n  at System.Collections.ObjectModel.Collection`1[T].Remove (T item) [0x00027] in <896ad1d315ca4ba7b117efb8dacaedcf>:0 \r\n  at Xamarin.Forms.ObservableWrapper`2[TTrack,TRestrict].Clear () [0x00035] in d:\\Development\\3rd\\Xamarin.Forms-release-3.0.0-sr1\\Xamarin.Forms.Core\\ObservableWrapper.cs:45 \r\n  at XFBug.Portable.TestPage.SetView (Xamarin.Forms.View view) [0x00001] in C:\\Development\\temp\\XFBug\\XFBug.Portable\\TestPage.cs:33 \r\n  at XFBug.Portable.TestView.ButtonClicked (System.Object sender, System.EventArgs e) [0x0000d] in C:\\Development\\temp\\XFBug\\XFBug.Portable\\TestView.cs:34 \r\n  at Xamarin.Forms.Button.SendClicked () [0x00024] in d:\\Development\\3rd\\Xamarin.Forms-release-3.0.0-sr1\\Xamarin.Forms.Core\\Button.cs:133 \r\n  at Xamarin.Forms.Platform.Android.AppCompat.ButtonRenderer+ButtonClickListener.OnClick (Android.Views.View v) [0x0000d] in d:\\Development\\3rd\\Xamarin.Forms-release-3.0.0-sr1\\Xamarin.Forms.Platform.Android\\AppCompat\\ButtonRenderer.cs:291 \r\n  at Android.Views.View+IOnClickListenerInvoker.n_OnClick_Landroid_view_View_ (System.IntPtr jnienv, System.IntPtr native__this, System.IntPtr native_v) [0x0000f] in <9ef29c909d7e4606a46b131129da3975>:0 \r\n  at (wrapper dynamic-method) System.Object:0dc720bc-c9f5-4354-8da4-78e44be3951c (intptr,intptr,intptr)\r\n\r\n### Steps to Reproduce\r\n\r\n1.  See attached solution\r\n2.  Start on Android (5.0 API 21)\r\n3.  Click on button \"CLICK IT\" and the exception occurs\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.0.0.482510\r\n- Last known good version: 2.4.0.91020 \r\n- IDE: Visual Studio 2017\r\n- Platform Target Frameworks: \r\n  - Android: 7.1 \r\n- Android Support Library Version: 25.4.0.2\r\n\r\n### Reproduction Link\r\n\r\nMinimal project for reproduction attached\r\n[XFBug.zip](https://github.com/xamarin/Xamarin.Forms/files/2039561/XFBug.zip)\r\n\r\nNetstandard repro\r\n[XFBug.zip](https://github.com/xamarin/Xamarin.Forms/files/2039747/XFBug.zip)\r\n"},{"Id":"8080682298","Type":"IssuesEvent","CreatedAt":"2018-08-07T22:58:58","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3498","RelatedDescription":"Closed issue \"[Xamarin.Forms] QUESTION : How to save ContentPage UI as a PDF and Print.\" (#3498) at xamarin/Xamarin.Forms","RelatedBody":"\r\n### Description\r\nQUESTION : \r\nI want to design a Layout and  Print it on A4 page.\r\nSo, How do I save Content Page as a PDF and Fire it on Printer.\r\n\r\n\r\n### Platforms:\r\nAndroid\r\nUWP\r\nIOS\r\n\r\n"},{"Id":"8080552250","Type":"IssuesEvent","CreatedAt":"2018-08-07T22:20:45","Actor":"activa","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3505","RelatedDescription":"Closed issue \"[UWP] PR #3299 causes NRE (crash) in ScrollViewRenderer\" (#3505) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nUWP apps crash when opening a page with a ScrollView\r\n\r\nCrash is caused by a missing null check in the UpdateContent() method in Xamarin.Forms.Platform.UAP / ScrollViewRenderer.cs. The bug was introduced in PR #3299 \r\n\r\n### Steps to Reproduce\r\n\r\nIn a UWP app, navigate to a page with a ScrollView\r\n\r\n### Expected Behavior\r\n\r\nDoesn't crash\r\n\r\n### Actual Behavior\r\n\r\nCrashes with NRE on line 136 in Xamarin.Forms.Platform.UAP / ScrollViewRenderer.cs\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.1.0.697729\r\n- Last known good version: 3.1.0.637273\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8081045606","Type":"PullRequestEvent","CreatedAt":"2018-08-08T01:06:41","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4587","RelatedDescription":"Merged pull request \"[ImageIO] Add support for Xcode 10 beta 5.\" (#4587) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"8080117600","Type":"PullRequestEvent","CreatedAt":"2018-08-07T20:44:49","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4591","RelatedDescription":"Opened pull request \"Bump version for next preview\" (#4591) at xamarin/xamarin-macios","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1026898128509825024","CreatedAt":"2018-08-07T18:29:27+00:00","UserScreenname":"xamarinhq","Text":"- Authentication   - Encryption   - Integrity\n3 important requirements to securing network communications &amp; absolut… https://t.co/hDPkHLZsLA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":37,"RawContent":null},{"Id":"1025442837813518336","CreatedAt":"2018-08-03T18:06:38+00:00","UserScreenname":"xamarinhq","Text":"Want to use a single code base for multiple platforms and devices? Of course you do. ...just posted to our Xamarin… https://t.co/qJBV4vvEir","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":165,"FavoriteCount":82,"RawContent":null},{"Id":"1024752638599028736","CreatedAt":"2018-08-01T20:24:02+00:00","UserScreenname":"xamarinhq","Text":"This year’s #dotNETConf is coming 9/12-14. Live sessions w/ speakers from the community &amp; it's your chance to learn… https://t.co/Nujb04dGd4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":70,"FavoriteCount":43,"RawContent":null},{"Id":"1024013376295452672","CreatedAt":"2018-07-30T19:26:28+00:00","UserScreenname":"xamarinhq","Text":"Here's everything you need to know to integrate automated visual UI tests into a dev toolchain that includes an… https://t.co/12Ihjj4bSN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":119,"FavoriteCount":56,"RawContent":null},{"Id":"1022882059763830784","CreatedAt":"2018-07-27T16:31:01+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/RGpgfHMoPZ -- Announcing Xamarin .Android support for Android 9.0 (P) now available for both #VS2017 &amp;… https://t.co/9clAy4LHZp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":83,"FavoriteCount":53,"RawContent":null},{"Id":"1022866229143461888","CreatedAt":"2018-07-27T15:28:07+00:00","UserScreenname":"xamarinhq","Text":"Previewing files from inside your Xamarin .iOS app is a great way to enhance user experience. ...and adding this fe… https://t.co/tF7v5at9xo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":30,"RawContent":null},{"Id":"1019670557011243008","CreatedAt":"2018-07-18T19:49:40+00:00","UserScreenname":"xamarinhq","Text":"Xamarin.Forms 3.1 delivers the latest in quality improvements. We're excited to introduce Xamarin.Forms 3.1, now wi… https://t.co/qW6S2P7Hi0","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":260,"FavoriteCount":163,"RawContent":null},{"Id":"1016758939877117952","CreatedAt":"2018-07-10T18:59:56+00:00","UserScreenname":"xamarinhq","Text":"Understanding your app, it's users, &amp; their interactions helps you build a 5-star app. Application Insights w/ AppC… https://t.co/Smw5tVHZ1X","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":43,"FavoriteCount":26,"RawContent":null},{"Id":"1014949294737186816","CreatedAt":"2018-07-05T19:09:03+00:00","UserScreenname":"xamarinhq","Text":"Cool intros to new goodies in &lt;10 minutes! Explore some of the “Snack Pack” episodes that @JamesMontemagno bundled… https://t.co/80gmo35fb6","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":90,"FavoriteCount":43,"RawContent":null},{"Id":"1014903254034141190","CreatedAt":"2018-07-05T16:06:06+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/3RaJk3O0xb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":44,"FavoriteCount":34,"RawContent":null},{"Id":"1014521211970379776","CreatedAt":"2018-07-04T14:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":34,"RawContent":null},{"Id":"1014159326645313537","CreatedAt":"2018-07-03T14:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":25,"RawContent":null},{"Id":"1013873320834445313","CreatedAt":"2018-07-02T19:53:31+00:00","UserScreenname":"xamarinhq","Text":"In today's Xamarin Podcast, @PierceBoggan &amp; @JamesMontemagno talk up latest &amp; greatest in mobile #dotNET dev; Xamar… https://t.co/chy5AhHt86","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":63,"FavoriteCount":43,"RawContent":null},{"Id":"1013805063209455616","CreatedAt":"2018-07-02T15:22:17+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/kdzv9U4084","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":22,"RawContent":null},{"Id":"1013547297437835264","CreatedAt":"2018-07-01T22:18:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/JL1SW3MFro","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":28,"RawContent":null},{"Id":"1012399525338595328","CreatedAt":"2018-06-28T18:17:10+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/3QxhuBcUiC v7.2 introduces two new MSBuild properties to make maintaining Android VersionCode for Andr… https://t.co/j469e1DU24","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":84,"FavoriteCount":58,"RawContent":null},{"Id":"1011343460811583489","CreatedAt":"2018-06-25T20:20:45+00:00","UserScreenname":"xamarinhq","Text":"What’s new in the #XamarinAndroid designer: https://t.co/OOHH6tXhia https://t.co/lCAsZQzwls","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":89,"FavoriteCount":39,"RawContent":null}]}},"RunOn":"2018-08-08T05:31:03.2476844Z","RunDurationInMilliseconds":4985}