{"Data":{"Blog":{"FeedItems":[{"Title":"Introducing Orleans 3.0","PublishedOn":"2019-10-30T19:16:50+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"This is a guest post from the Orleans team. Orleans is a cross-platform framework for building distributed applications with .NET. For more information, see https://github.com/dotnet/orleans.\nWe are...","Href":"https://devblogs.microsoft.com/dotnet/orleans-3-0/","RawContent":null},{"Title":".NET Framework October 2019 Cumulative Updates Windows 10 version 1903 and Windows 10 version 1909","PublishedOn":"2019-10-24T17:33:43+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the October 2019 Cumulative Updates for .NET Framework 3.5 and 4.8 on Windows 10 version 1903 and Windows 10 version 1909\nQuality and Reliability\nThis release contains the...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-october-2019-cumulative-updates-windows-10-version-1903-and-windows-10-version-1909/","RawContent":null},{"Title":"Fall .NET Core Survey","PublishedOn":"2019-10-17T20:24:19+00:00","CommentsCount":24,"FacebookCount":0,"Summary":"It’s been a busy time for .NET Core – we just shipped 3.0, and are currently working on a few updates for v3.1 (due in November.) As we turn our attention to .NET Core 5.0, we want to take a step back...","Href":"https://devblogs.microsoft.com/dotnet/fall-net-core-survey/","RawContent":null},{"Title":".NET Framework October 2019 Preview of Quality Rollup","PublishedOn":"2019-10-15T21:11:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the October 2019 Preview of Quality Rollup and Cumulative Updates for .NET Framework.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/","RawContent":null},{"Title":"Announcing .NET Core 3.1 Preview 1","PublishedOn":"2019-10-15T16:49:48+00:00","CommentsCount":34,"FacebookCount":0,"Summary":"Today, we&#8217;re announcing .NET Core 3.1 Preview 1. .NET Core 3.1 will be a small release focused on key improvements in Blazor and Windows desktop, the two big additions in .NET Core 3.0. It will...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/","RawContent":null},{"Title":".NET Framework October 2019 Security and Quality Rollup","PublishedOn":"2019-10-08T19:10:44+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Today, we are releasing the October 2019 Security and Quality Rollup and Cumulative Updates for .NET Framework.\nSecurity\nNo new security fixes. See September 2019 Security and Quality Rollup for the...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/","RawContent":null},{"Title":"Introducing .NET Core Windows Forms Designer Preview 1","PublishedOn":"2019-09-30T21:00:10+00:00","CommentsCount":76,"FacebookCount":0,"Summary":"Introducing .NET Core Windows Forms Designer Preview 1\nWe just released a GA version of .NET Core 3.0 that includes support for Windows Forms and WPF. And along with that release we&#8217;re happy to...","Href":"https://devblogs.microsoft.com/dotnet/introducing-net-core-windows-forms-designer-preview-1/","RawContent":null},{"Title":".NET Framework September 2019 Preview of Quality Rollup","PublishedOn":"2019-09-26T19:36:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We have released the September 2019 Preview of Quality Rollup and Cumulative Updates for .NET Framework for Windows 10\nQuality and Reliability\nThis release contains the following quality and...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/","RawContent":null},{"Title":"ML.NET and Model Builder at .NET Conf 2019 (Machine Learning for .NET)","PublishedOn":"2019-09-24T19:48:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited today to announce updates to Model Builder and improvements in ML.NET. You can learn more in the “What’s new in ML.NET?.” session at .NET Conf.\nML.NET is an open-source and...","Href":"https://devblogs.microsoft.com/dotnet/ml-net-and-model-builder-at-net-conf-2019-machine-learning-for-net/","RawContent":null},{"Title":"Joining the .NET Foundation Maturity Model Pilot","PublishedOn":"2019-09-23T16:59:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Joining the .NET Foundation Maturity Model Pilot\nThe .NET Foundation is starting a new pilot program to increase quality and user confidence in open source projects, using a new project maturity...","Href":"https://devblogs.microsoft.com/dotnet/joining-the-net-foundation-maturity-model-pilot/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"10537155256","Type":"PullRequestEvent","CreatedAt":"2019-10-01T20:30:21","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Opened pull request \"Add new Cake Maintainer\" (#150) at dotnet/foundation","RelatedBody":""},{"Id":"10530380699","Type":"PullRequestEvent","CreatedAt":"2019-10-01T05:27:58","Actor":"JimBobSquarePants","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Opened pull request \"Add ImageSharp\" (#149) at dotnet/foundation","RelatedBody":""},{"Id":"10123005051","Type":"IssuesEvent","CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Opened issue \"Clarify guidelines in regards to Options and Requirements\" (#148) at dotnet/foundation","RelatedBody":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10748742804","Type":"IssuesEvent","CreatedAt":"2019-10-30T15:14:54","Actor":"jaredpar","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/133","RelatedDescription":"Opened issue \"Repository Consolidation Timeline\" (#133) at dotnet/announcements","RelatedBody":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27549.*\r\n\r\nAs we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setupmoves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM PST on November 13th. We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository."},{"Id":"10738283611","Type":"IssuesEvent","CreatedAt":"2019-10-29T14:32:57","Actor":"mthalman","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Opened issue \"Release of Alpine 3.10 Docker images\" (#132) at dotnet/announcements","RelatedBody":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)"},{"Id":"10647641262","Type":"IssuesEvent","CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Opened issue \".NET Core 3.1.0 Preview 1\" (#131) at dotnet/announcements","RelatedBody":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"10754173731","Type":"IssuesEvent","CreatedAt":"2019-10-31T05:19:47","Actor":"ericjohannsen","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27573","RelatedDescription":"Opened issue \"Register .NET Core type for COM interop\" (#27573) at dotnet/coreclr","RelatedBody":"I built a trivial .NET Core 3 library project to test ComVisibleAttribute. I build this:\r\n``` C#\r\n[Guid(\"a843456f-3657-4a01-a133-fd333a84aa58\")]\r\n[ClassInterface(ClassInterfaceType.None)]\r\n[ComVisible(true)]\r\npublic class Foo\r\n{        \r\n    public string Bar()\r\n    {\r\n        return \"42\";\r\n    }\r\n}\r\n```\r\nThen run `regasm my.dll` and get this error:\r\n\r\nCould not load file or assembly 'System.Runtime, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\n\r\nIs this currently supposed to work? If so, what am I doing wrong?"},{"Id":"10754165203","Type":"PullRequestEvent","CreatedAt":"2019-10-31T05:17:36","Actor":"cshung","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27572","RelatedDescription":"Opened pull request \"Documentation for Native Hash Table\" (#27572) at dotnet/coreclr","RelatedBody":"@dotnet/crossgen-contrib \r\n@jkotas "},{"Id":"10753968807","Type":"PullRequestEvent","CreatedAt":"2019-10-31T04:26:20","Actor":"VSadov","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27571","RelatedDescription":"Opened pull request \"Some follow up changes after the cast caching change\" (#27571) at dotnet/coreclr","RelatedBody":"Items that were discussed in code reviews, but did not fit into the actual change. Mostly about reducing duplicated code."},{"Id":"10753927229","Type":"IssuesEvent","CreatedAt":"2019-10-31T04:15:28","Actor":"mattzink","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27570","RelatedDescription":"Opened issue \"TotalAvailableMemoryBytes reflect COMPlus_GCHeapHardLimit's value\" (#27570) at dotnet/coreclr","RelatedBody":"SDK: 3.0.100\r\nOS: CentOS 7 (x64)\r\n\r\nWe are not seeing the value we configure in the `COMPlus_GCHeapHardLimit` environmental variable being reflected in `GC.GetGCMemoryInfo().TotalAvailableMemoryBytes` as documented [here](https://docs.microsoft.com/en-us/dotnet/api/system.gcmemoryinfo.totalavailablememorybytes?view=netcore-3.0#remarks). We are therefore unsure if this heap limit is actually configured.\r\n\r\nRepro:\r\n```shell\r\n$ dotnet new console\r\n$ sed -i 's/\"Hello World!\"/GC.GetGCMemoryInfo().TotalAvailableMemoryBytes/g' Program.cs\r\n$ dotnet run\r\n8370458624\r\n$ COMPlus_GCHeapHardLimit=100000000 dotnet run\r\n4294967296\r\n$ COMPlus_GCHeapHardLimit=50000000 dotnet run\r\n1342177280\r\n```"},{"Id":"10753747465","Type":"PullRequestEvent","CreatedAt":"2019-10-31T03:31:35","Actor":"trylek","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27565","RelatedDescription":null,"RelatedBody":"As Jeremy discovered, my recent CoreCLR pipeline optimization change\r\nbroke GC stress tests. This change should fix the problem; I have\r\nalso deleted the platform-matrix-managed-test-build script that is\r\nno longer used.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"10753747198","Type":"PullRequestEvent","CreatedAt":"2019-10-31T03:31:33","Actor":"trylek","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27565","RelatedDescription":"Closed pull request \"Fix GC stress runs\" (#27565) at dotnet/coreclr","RelatedBody":"As Jeremy discovered, my recent CoreCLR pipeline optimization change\r\nbroke GC stress tests. This change should fix the problem; I have\r\nalso deleted the platform-matrix-managed-test-build script that is\r\nno longer used.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"10753566772","Type":"IssuesEvent","CreatedAt":"2019-10-31T02:51:03","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27569","RelatedDescription":"Opened issue \"Test failed: JIT\\Performance\\CodeQuality\\Roslyn\\CscBench\\CscBench.cmd\" (#27569) at dotnet/coreclr","RelatedBody":"**Job:**\r\n[coreclr-jitstress #20191029.1 Run Test Pri1 Windows_NT x64 checked](https://dev.azure.com/dnceng/public/_build/results?buildId=406920)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/d9777ae2-7988-4741-8095-c011e8dad327/workitems/JIT/console\r\n\r\n**OS & Arch:**\r\nwindows x64\r\n\r\n**Mode:**\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_TailcallStress=1\r\n\r\n**Note:**\r\nThis failure **repros** on our windows x64 machine.\r\n\r\n**Log:**\r\n```\r\nJIT\\Performance\\CodeQuality\\Roslyn\\CscBench\\CscBench.cmd [FAIL]\r\n      \r\n      Assert failure(PID 2996 [0x00000bb4], Thread: 532 [0x0214]): Consistency check failed: AV in clr at this callstack:\r\n      ------\r\n      CORECLR! JIT_ChkCastClassSpecial + 0x10 (0x00007ffc`3f4da4d0)\r\n      <no module>! <no symbol> + 0x0 (0x00007ffb`e22ace5c)\r\n      <no module>! <no symbol> + 0x0 (0x0000017e`00217cd8)\r\n      <no module>! <no symbol> + 0x0 (0x0000017e`00217ce0)\r\n      <no module>! <no symbol> + 0x0 (0x0000017e`00217ce0)\r\n      <no module>! <no symbol> + 0x0 (0x0000003b`9e5acf40)\r\n      <no module>! <no symbol> + 0x0 (0x0000017e`00217ce0)\r\n      <no module>! <no symbol> + 0x0 (0x0000017e`00217cd8)\r\n      <no module>! <no symbol> + 0x0 (0x0000017e`0018d908)\r\n      CORECLR! JIT_TailCallHelperStub_ReturnAddress + 0x0 (0x00007ffc`3f4da906)\r\n      <no module>! <no symbol> + 0x0 (0x00007ffb`e22acac7)\r\n      <no module>! <no symbol> + 0x0 (0x0000017e`0015f5c0)\r\n      <no module>! <no symbol> + 0x0 (0x0000003b`9e5acf68)\r\n      <no module>! <no symbol> + 0x0 (0x00000000`00000051)\r\n      <no module>! <no symbol> + 0x0 (0x00000000`00000051)\r\n      -----\r\n      .AV on tid=0x214 (532), cxr=0000003B9E5AC740, exr=0000003B9E5ACC30\r\n      FAILED: false\r\n      \r\n      CORECLR! CHECK::Trigger + 0x2C5 (0x00007ffc`3eeecc2d)\r\n      CORECLR! CLRVectoredExceptionHandlerPhase3 + 0x364 (0x00007ffc`3f078994)\r\n      CORECLR! CLRVectoredExceptionHandlerPhase2 + 0x69 (0x00007ffc`3f078415)\r\n      CORECLR! CLRVectoredExceptionHandler + 0x1C6 (0x00007ffc`3f07838e)\r\n      CORECLR! CLRVectoredExceptionHandlerShim + 0x17A (0x00007ffc`3f078bea)\r\n      NTDLL! RtlInitializeCriticalSection + 0x190 (0x00007ffc`6a805e90)\r\n      NTDLL! RtlImageNtHeaderEx + 0x17B (0x00007ffc`6a7dfa1b)\r\n      NTDLL! KiUserExceptionDispatcher + 0x3A (0x00007ffc`6a8496fa)\r\n      CORECLR! JIT_ChkCastClassSpecial + 0x10 (0x00007ffc`3f4da4d0)\r\n      <no module>! <no symbol> + 0x0 (0x00007ffb`e22ace5c)\r\n          File: F:\\workspace\\_work\\1\\s\\src\\vm\\excep.cpp Line: 7537\r\n          Image: C:\\dotnetbuild\\work\\d9777ae2-7988-4741-8095-c011e8dad327\\Payload\\CoreRun.exe\r\n      \r\n      \r\n      Return code:      1\r\n      Raw output file:      C:\\dotnetbuild\\work\\d9777ae2-7988-4741-8095-c011e8dad327\\Work\\3f16047f-6116-4076-ba39-3b570a56115e\\Exec\\JIT\\Performance\\Reports\\JIT.Performance\\CodeQuality\\Roslyn\\CscBench\\CscBench.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n       \"C:\\dotnetbuild\\work\\d9777ae2-7988-4741-8095-c011e8dad327\\Payload\\corerun.exe\" CscBench.dll \r\n      Expected: 100\r\n      Actual: -1073740286\r\n      END EXECUTION - FAILED\r\n      FAILED\r\n      Test Harness Exitcode is : 1\r\n```"},{"Id":"10753466555","Type":"PullRequestEvent","CreatedAt":"2019-10-31T02:29:05","Actor":"echesakovMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27568","RelatedDescription":"Opened pull request \"LeadingSignCount,LeadingZeroCount,PopCount\" (#27568) at dotnet/coreclr","RelatedBody":"https://github.com/dotnet/corefx/issues/26182"},{"Id":"10753297680","Type":"PullRequestEvent","CreatedAt":"2019-10-31T01:51:19","Actor":"benaadams","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27543","RelatedDescription":null,"RelatedBody":"Edit: Ah... my mistake, it isn't cached in the VM layer. How important is detecting changing proc count changes every 30 secs? (as used by `SpinWait`, `SpinLock` and `CancellationTokenSource`)\r\n\r\ne.g. `IsSingleProcessor` is only ever set once and never refreshed\r\n\r\n~Its cached in the vm layer after first access so never changes; so it can be a `static readonly`.~\r\n\r\n~I looked at changing `Enviorment.ProcessorCount` to be `static readonly` backed and then changing all the individual `static readonly` procCount caches to just call it directly.~\r\n\r\n~However, that's a bit more complicated as there are Jit tests that rely on it being non-inlinable due to the p/invoke and it would cause complications for the shared source as Mono's p/invoke its the get property not the method that the get property then calls; so loosing the caches would likely cause regressions there.~\r\n\r\n/cc @jkotas @stephentoub "},{"Id":"10753297597","Type":"PullRequestEvent","CreatedAt":"2019-10-31T01:51:18","Actor":"benaadams","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27543","RelatedDescription":"Closed pull request \"Don't needlessly refresh proc count\" (#27543) at dotnet/coreclr","RelatedBody":"Edit: Ah... my mistake, it isn't cached in the VM layer. How important is detecting changing proc count changes every 30 secs? (as used by `SpinWait`, `SpinLock` and `CancellationTokenSource`)\r\n\r\ne.g. `IsSingleProcessor` is only ever set once and never refreshed\r\n\r\n~Its cached in the vm layer after first access so never changes; so it can be a `static readonly`.~\r\n\r\n~I looked at changing `Enviorment.ProcessorCount` to be `static readonly` backed and then changing all the individual `static readonly` procCount caches to just call it directly.~\r\n\r\n~However, that's a bit more complicated as there are Jit tests that rely on it being non-inlinable due to the p/invoke and it would cause complications for the shared source as Mono's p/invoke its the get property not the method that the get property then calls; so loosing the caches would likely cause regressions there.~\r\n\r\n/cc @jkotas @stephentoub "}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"10753908318","Type":"PullRequestEvent","CreatedAt":"2019-10-31T04:10:27","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13005","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13005) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191030.9\r\n- **Date Produced**: 10/31/2019 2:01 AM\r\n- **Commit**: 11a84e25b49677b52b06768a7cba3619eb7e8cf1\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19530.9\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n"},{"Id":"10753816311","Type":"PullRequestEvent","CreatedAt":"2019-10-31T03:48:04","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/12994","RelatedDescription":"Closed pull request \"[automated] Merge branch 'release/3.0.1xx' => 'release/3.1.1xx'\" (#12994) at dotnet/cli","RelatedBody":"I detected changes in the release/3.0.1xx branch which have not been merged yet to release/3.1.1xx. I'm a robot and am configured to help you automatically keep release/3.1.1xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0.1xx by the following committers:\n\n* @dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0.1xx-to-release/3.1.1xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0.1xx-to-release/3.1.1xx release/3.1.1xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.0.1xx-to-release/3.1.1xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0.1xx-to-release/3.1.1xx release/3.1.1xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.0.1xx-to-release/3.1.1xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n"},{"Id":"10753783386","Type":"PullRequestEvent","CreatedAt":"2019-10-31T03:40:12","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13005","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13005) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191030.9\r\n- **Date Produced**: 10/31/2019 2:01 AM\r\n- **Commit**: 11a84e25b49677b52b06768a7cba3619eb7e8cf1\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19530.9\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n"},{"Id":"10753229462","Type":"PullRequestEvent","CreatedAt":"2019-10-31T01:35:28","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13004","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13004) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191030.7\r\n- **Date Produced**: 10/31/2019 12:16 AM\r\n- **Commit**: fb710543566de826da30550e45bdbc60deb2cee0\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19530.7\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n"},{"Id":"10753102276","Type":"PullRequestEvent","CreatedAt":"2019-10-31T01:05:14","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13004","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13004) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191030.7\r\n- **Date Produced**: 10/31/2019 12:16 AM\r\n- **Commit**: fb710543566de826da30550e45bdbc60deb2cee0\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19530.7\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n"},{"Id":"10753090704","Type":"PullRequestEvent","CreatedAt":"2019-10-31T01:02:27","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13000","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13000) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191030.8\r\n- **Date Produced**: 10/30/2019 11:32 PM\r\n- **Commit**: 55c8dd25c3f337f9e7098ad787534bd04454b113\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19530.8\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n\r\n\r\n"},{"Id":"10752808833","Type":"PullRequestEvent","CreatedAt":"2019-10-30T23:57:50","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13003","RelatedDescription":"Opened pull request \"Remove signature on MAC host for dotnet tools\" (#13003) at dotnet/cli","RelatedBody":"Part of https://github.com/dotnet/sdk/issues/3773\r\n\r\n@swaroop-sridhar"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"10751678457","Type":"PullRequestEvent","CreatedAt":"2019-10-30T20:46:03","Actor":"crummel","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1612","RelatedDescription":"Merged pull request \"Source-build improvements.\" (#1612) at dotnet/standard","RelatedBody":"- Always restore, even in source-build.  This is required so we get NETStandard.Library netstandard2.0 reference bits for inclusion in the NETStandard.Library we are building.\r\n  - Also make this error out in source-build if it fails like it does in the standalone build.\r\n- Sourcelink is now supported in source-build.\r\n\r\nI'm still testing this out in source-build but does it look like what you were thinking of @ericstj?"},{"Id":"10747127936","Type":"PullRequestEvent","CreatedAt":"2019-10-30T12:31:21","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1634","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1634) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191029.15\r\n- **Date Produced**: 10/30/2019 3:37 AM\r\n- **Commit**: 8ee61dd103ff55445f8baf3137bb768ed86370d9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19529.15\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19529.15\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19529.15\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10747048699","Type":"PullRequestEvent","CreatedAt":"2019-10-30T12:21:17","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1634","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1634) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191029.15\r\n- **Date Produced**: 10/30/2019 3:37 AM\r\n- **Commit**: 8ee61dd103ff55445f8baf3137bb768ed86370d9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19529.15\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19529.15\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19529.15\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10737166154","Type":"PullRequestEvent","CreatedAt":"2019-10-29T12:32:35","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1633","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1633) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191028.12\r\n- **Date Produced**: 10/29/2019 2:19 AM\r\n- **Commit**: 15e1ea023d2818b6083a61c7447a720ff3779482\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19528.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19528.12\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19528.12\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10737088185","Type":"PullRequestEvent","CreatedAt":"2019-10-29T12:22:30","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1633","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1633) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191028.12\r\n- **Date Produced**: 10/29/2019 2:19 AM\r\n- **Commit**: 15e1ea023d2818b6083a61c7447a720ff3779482\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19528.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19528.12\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19528.12\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10733905058","Type":"IssuesEvent","CreatedAt":"2019-10-29T03:17:11","Actor":"2300070","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1632","RelatedDescription":"Opened issue \"Is there any problem while the 'TypeBuilder' class processing the generic arguments?\" (#1632) at dotnet/standard","RelatedBody":"I define a class to inherit existen generic type definition, however, the base type has one generic argument, the type I processing has two generic argument, and I want the second generic as the generic argument of base type, so I write the code below, but the strange thing is: if the first generic argument is class type(though it is not used by any place), it works fine, but if I change it to a value type, an exception will thrown('Unable to read memory'), is there any problem while the 'TypeBuilder' class processing the generic arguments?\r\n\r\n\t[TestClass]\r\n\tpublic class GeneralTest\r\n\t{\r\n\t\t[TestMethod]\r\n\t\tpublic void TestDefineGenericType()\r\n\t\t{\r\n\t\t\tAssemblyBuilder assembly = AssemblyBuilder.DefineDynamicAssembly(new AssemblyName(\"GeneralTest\"), AssemblyBuilderAccess.RunAndCollect);\r\n\t\t\tModuleBuilder module = assembly.DefineDynamicModule(\"GeneralTest.dll\");\r\n\r\n\t\t\t//define type\r\n\t\t\tTypeBuilder builder = module.DefineType(\"TestGenericClass\");\r\n\t\t\tGenericTypeParameterBuilder[] arguments = builder.DefineGenericParameters(\"TValue1\", \"TValue2\");\r\n\t\t\t\r\n\t\t\tbuilder.SetParent(typeof(TestClass<>).MakeGenericType(arguments[1]));\r\n\r\n\t\t\t//define constructor that invoke base constructor\r\n\t\t\tConstructorBuilder constructor = builder.DefineConstructor(MethodAttributes.Public, CallingConventions.Standard, new Type[] {arguments[1] });\r\n\t\t\tILGenerator generator = constructor.GetILGenerator();\r\n\t\t\tgenerator.Emit(OpCodes.Ldarg_0);\r\n\t\t\tgenerator.Emit(OpCodes.Ldarg_1);\r\n\t\t\tgenerator.Emit(OpCodes.Call, typeof(TestClass<>).GetConstructors(BindingFlags.Public | BindingFlags.Instance)[0]);\r\n\t\t\tgenerator.Emit(OpCodes.Ret);\r\n\t\t\t\r\n\t\t\tType builtType = builder.CreateType();\r\n\t\t\tType testType;\r\n\t\t\tTestClass<string> test;\r\n\r\n\t\t\t//this test is okay.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(object), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\tAssert.AreEqual(string.Empty, test.Value);//OK\r\n\r\n\t\t\t//change the first generic argument to value type, exception will be thrown.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(int), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\t//Assert.AreEqual(string.Empty, test.Value);//ERROR WHILE READ THE FIELD OF 'test'\r\n\r\n\t\t\t\r\n\t\t\t//change the first generic argument to class type back, exception disapear.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(string), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\tAssert.AreEqual(string.Empty, test.Value);//OK\r\n\t\t}\r\n\r\n\t\tpublic class TestClass<TValue>\r\n\t\t{\r\n\t\t\tpublic readonly TValue Value;\r\n\r\n\t\t\tpublic Type ValueType => typeof(TValue);\r\n\r\n\t\t\tpublic TestClass(TValue value)\r\n\t\t\t{\r\n\t\t\t\tthis.Value = value;\r\n\t\t\t}\r\n\t\t}\r\n\t}"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"10754107528","Type":"IssuesEvent","CreatedAt":"2019-10-31T05:02:58","Actor":"davidfowl","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/42255","RelatedDescription":"Opened issue \"API Proposal: Uf8Parser overloads for ReadOnlySequence<byte>\" (#42255) at dotnet/corefx","RelatedBody":"These text parsers are very convenient when parsing text based protocols (like HTTP/1.1 and RESP). It would be great to have overloads of the existing APIs that support `ReadOnlySequence<byte>`. I end up writing code like this:\r\n\r\n```C#\r\nprivate static bool TryParse(in ReadOnlySequence<byte> bytes, out int value, out int bytesConsumed)\r\n{\r\n    if (bytes.IsSingleSegment)\r\n    {\r\n        if (!Utf8Parser.TryParse(bytes.FirstSpan, out value, out bytesConsumed))\r\n        {\r\n            return false;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        Span<byte> textSpan= stackalloc byte[128];\r\n        bytes.CopyTo(textSpan);\r\n\r\n        if (!Utf8Parser.TryParse(textSpan, out value, out bytesConsumed))\r\n        {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n```\r\n\r\nI would be great if this was built into the existing parser.\r\n\r\ncc @ahsonkhan\r\n"},{"Id":"10753971913","Type":"PullRequestEvent","CreatedAt":"2019-10-31T04:27:11","Actor":"safern","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42249","RelatedDescription":"Merged pull request \"Update analyzer versions\" (#42249) at dotnet/corefx","RelatedBody":"cc: @safern"},{"Id":"10753964888","Type":"PullRequestEvent","CreatedAt":"2019-10-31T04:25:19","Actor":"layomia","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/42144","RelatedDescription":"Closed pull request \"Handle wrong type error when deserializing array\" (#42144) at dotnet/corefx","RelatedBody":"In ReadCore, when it finds a StartArray token, but the type\r\ndeclared is an object, a NRE was being thrown. It should\r\nreturn an error explaining the wrong type was found.\r\n\r\nFixes: #42143 \r\n\r\nWhen I ran the System.Text.Json tests from the master branch locally, 47 failed, so I'm not 100% confident that my change didn't break any tests (still 47 failing locally, just not sure they're the same ones)"},{"Id":"10753959202","Type":"PullRequestEvent","CreatedAt":"2019-10-31T04:23:49","Actor":"layomia","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42254","RelatedDescription":"Opened pull request \"Guard against null refs when attempting to deserialize mismatched JSON into collections\" (#42254) at dotnet/corefx","RelatedBody":"Addresses https://github.com/dotnet/corefx/issues/42143 for 5.0.\r\n\r\nAlso guards against null refs when trying to deserialize dictionaries with custom (not supported) interfaces and objects without parameterless ctors. We now throw `NotSupportedException`."},{"Id":"10753787387","Type":"IssuesEvent","CreatedAt":"2019-10-31T03:41:10","Actor":"AriNuer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/42253","RelatedDescription":"Opened issue \"Test failed: System.Net.Security.Tests.CertificateValidationRemoteServer.CertificateValidationRemoteServer_EndToEnd_Ok\" (#42253) at dotnet/corefx","RelatedBody":"**Job:**\r\n[corefx-ci #20191030.51](https://dnceng.visualstudio.com/public/_build/results?buildId=408780)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/d4f54233-a11c-405b-a82a-6800e4f4a5f0/workitems/System.Net.Security.Tests/console\r\nhttps://helix.dot.net/api/2019-06-17/jobs/54c01015-d8e1-48e4-8de9-e300331111d1/workitems/System.Net.Security.Tests/console\r\n\r\n**Failed tests:**\r\nSystem.Net.Security.Tests.CertificateValidationRemoteServer.CertificateValidationRemoteServer_EndToEnd_Ok\r\n\r\n**Log:**\r\n```\r\nSystem.Net.Security.Tests.CertificateValidationRemoteServer.CertificateValidationRemoteServer_EndToEnd_Ok [FAIL]\r\n      System.IO.IOException : Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n      ---- System.Net.Sockets.SocketException : An existing connection was forcibly closed by the remote host.\r\n      Stack Trace:\r\n        /_/src/System.Net.Sockets/src/System/Net/Sockets/Socket.Tasks.cs(1110,0): at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)\r\n        /_/src/System.Net.Sockets/src/System/Net/Sockets/Socket.Tasks.cs(1076,0): at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.GetResult(Int16 token)\r\n        /_/src/System.Net.Security/src/System/Net/FixedSizeReader.cs(57,0): at System.Net.FixedSizeReader.ReadPacketAsync(Stream transport, AsyncProtocolRequest request)\r\n        /_/src/System.Net.Security/src/System/Net/Security/SslStream.Implementation.cs(82,0): at System.Net.Security.SslStream.ThrowIfExceptional()\r\n        /_/src/System.Net.Security/src/System/Net/Security/SslStream.Implementation.cs(472,0): at System.Net.Security.SslStream.InternalEndProcessAuthentication(LazyAsyncResult lazyResult)\r\n        /_/src/System.Net.Security/src/System/Net/Security/SslStream.Implementation.cs(442,0): at System.Net.Security.SslStream.EndProcessAuthentication(IAsyncResult result)\r\n        /_/src/System.Net.Security/src/System/Net/Security/SslStream.cs(237,0): at System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult asyncResult)\r\n        /_/src/System.Net.Security/src/System/Net/Security/SslStream.cs(377,0): at System.Net.Security.SslStream.<>c.<AuthenticateAsClientAsync>b__62_1(IAsyncResult iar)\r\n        /_/src/System.Private.CoreLib/shared/System/Threading/Tasks/FutureFactory.cs(514,0): at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n        /_/src/System.Net.Security/tests/FunctionalTests/CertificateValidationRemoteServer.cs(27,0): at System.Net.Security.Tests.CertificateValidationRemoteServer.CertificateValidationRemoteServer_EndToEnd_Ok()\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n        ----- Inner Stack Trace -----\r\n        \r\n  Finished:    System.Net.Security.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Net.Security.Tests  Total: 4355, Errors: 0, Failed: 1, Skipped: 26, Time: 13.972s\r\n----- end Thu 10/31/2019  1:33:23.06 ----- exit code 1\r\n```"},{"Id":"10753698744","Type":"IssuesEvent","CreatedAt":"2019-10-31T03:20:14","Actor":"davidfowl","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/42252","RelatedDescription":"Opened issue \"API proposal: TryReadTo(out ReadOnlySpan<T> sequence, ReadOnlySpan<T> delimiter)\" (#42252) at dotnet/corefx","RelatedBody":"Today there's no overload of TryReadTo that returns (via out parameter) a `ReadOnlySpan<T>` and allows passing a `ReadOnlySpan<T>` delimeter.\r\n\r\n```C#\r\npublic bool TryReadTo(out ReadOnlySpan<T> sequence, ReadOnlySpan<T> delimiter, bool advancePastDelimiter = true);\r\n```\r\n\r\n@JeremyKuhne do you recall why we left this out?"},{"Id":"10753487584","Type":"IssuesEvent","CreatedAt":"2019-10-31T02:33:43","Actor":"GrabYourPitchforks","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/42251","RelatedDescription":"Opened issue \"Add [CallerMustBeUnsafe] attribute to denote APIs which should be called in an unsafe block\" (#42251) at dotnet/corefx","RelatedBody":"Per https://github.com/dotnet/roslyn-analyzers/issues/972, there's an outstanding feature for a Roslyn analyzer which would require a caller to use an `unsafe` block to make an API call that's pointer-equivalent dangerous but which doesn't take pointers.\r\n\r\nFor example:\r\n\r\n```cs\r\npublic static Span<T> ToMutableSpan(ReadOnlySpan<T> span)\r\n{\r\n    // When the Roslyn analyzer is active, the following code will produce a warning\r\n    // unless it is wrapped within an \"unsafe\" block.\r\n\r\n    return MemoryMarshal.CreateSpan(ref Unsafe.AsRef(in MemoryMarshal.GetReference(span)), span.Length);\r\n}\r\n```\r\n\r\nWhether that feature exists as a standalone analyzer or whether it gets moved into Roslyn proper (see https://github.com/dotnet/roslyn/issues/8663), we still need to define the attribute in corefx and apply it to the appropriate methods.\r\n\r\n### API proposal\r\n\r\n```cs\r\nnamespace System.Runtime.CompilerServices\r\n{\r\n    [AttributeUsage(AttributeTargets.Field | AttributeTargets.Method | AttributeTargets.Property, AllowMultiple = false, Inherited = true)]\r\n    public sealed class CallerMustBeUnsafeAttribute : Attribute\r\n    {\r\n    }\r\n}\r\n```\r\n\r\nIn this proposal I'm not applying `AttributeTargets.Class` or `AttributeTargets.Struct` because I don't want constructs like `Type \r\nt = typeof(SomeType)` to require an `unsafe` block. Technically `AttributeTargets.Property` isn't needed because the property getter / setter can be annotated (same with events), but allowing it on properties seems like a decent convenience.\r\n\r\nThe prime candidates to annotate are most methods on the `MemoryMarshal` type, some constructor-bypassing logic in `FormatterServices`, and any \"fast\" object factories which allow bypassing normal constructor validation."},{"Id":"10753399214","Type":"IssuesEvent","CreatedAt":"2019-10-31T02:14:08","Actor":"ericjohannsen","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/42250","RelatedDescription":"Opened issue \"Marshaling struct as callback on Ubuntu\" (#42250) at dotnet/corefx","RelatedBody":"I'm experimenting with pinvoke calls on Ubuntu. For the most part, everything works as expected, but I can't understand why this code seems to populate the `struct stat` with incorrect values. Even the first member of the struct `st_dev` has a value that doesn't seem plausible.\r\n\r\n``` C#\r\n[DllImport(\"libc\")]\r\nprivate static extern int ftw(string dirpath, DirClbk cl, int maxFileDescriptorsToUse);\r\n\r\n[StructLayout(LayoutKind.Sequential)]\r\nstruct timespec\r\n{\r\n    long tv_sec;                 /* seconds */\r\n    long tv_nsec;                /* nanoseconds */\r\n};\r\n\r\n[StructLayout(LayoutKind.Sequential)]\r\nunsafe struct stat\r\n{\r\n    public ulong st_dev;             /* Device.  */\r\n    public ulong st_ino;             /* File serial number.  */\r\n    public ulong st_nlink;         /* Link count.  */\r\n    public uint st_mode;           /* File mode.  */\r\n    public uint st_uid;            /* User ID of the file's owner. */\r\n    public uint st_gid;            /* Group ID of the file's group.*/\r\n    int __pad0;\r\n    public ulong st_rdev;           /* Device number, if device.  */\r\n    public uint st_size;            /* Size of file, in bytes.  */\r\n    public ulong st_blksize;     /* Optimal block size for I/O.  */\r\n    public ulong st_blocks;      /* Number 512-byte blocks allocated.  */\r\n                                      standard-compliant sources special.  */\r\n    public timespec st_atim;            /* Time of last access.  */\r\n    public timespec st_mtim;            /* Time of last modification.  */\r\n    public timespec st_ctim;            /* Time of last status change.  */\r\n    fixed ulong __glibc_reserved[3];\r\n};\r\n\r\nprivate delegate int DirClbk(string fName, stat stat, int typeFlag);\r\n\r\nprivate static int DirEntryCallback(string fName, stat stat, int typeFlag)\r\n{\r\n    Console.WriteLine($\"{fName} dev {stat.st_dev}: {stat.st_blksize} block size {stat.st_size} bytes\");\r\n    return 0;\r\n}\r\n\r\n// Calling code:\r\nftw(\"/tmp/ftwtest\", DirEntryCallback, 0);\r\n// The expected size is based on gcc-compiled c code (see below)\r\nConsole.WriteLine($\"Struct size expected 144, have: {Marshal.SizeOf(typeof(stat))}\");\r\n```\r\n\r\nI created `struct timespec` and `struct stat` by looking at the C headers installed on my Ubuntu 18.04 VM. I used\r\nthis small program to determine how large gcc thinks each type is:\r\n\r\n``` C\r\n#include <stdio.h>\r\n#include <time.h>\r\n#include <sys/stat.h>\r\n#include <sys/types.h>\r\n\r\nint main()\r\n{\r\n  printf (\"Native type size check\\n\");\r\n  printf (\"stat %lu\\n\", sizeof(struct stat));\r\n  printf (\"dev_t %lu\\n\", sizeof(dev_t));\r\n  printf (\"ino_t %lu\\n\", sizeof(ino_t));\r\n  printf (\"mode_t %lu\\n\", sizeof(mode_t));\r\n  printf (\"nlink_t %lu\\n\", sizeof(nlink_t));\r\n  printf (\"uid_t %lu\\n\", sizeof(uid_t));\r\n  printf (\"gid_t %lu\\n\", sizeof(gid_t));\r\n  printf (\"blksize_t %lu\\n\", sizeof(blksize_t));\r\n  printf (\"blkcnt_t %lu\\n\", sizeof(blkcnt_t));\r\n}\r\n```\r\nThe size as indicated by the C program and the C# program match (144 bytes for `struct stat`.\r\n\r\nIs there something wrong in my code that would cause the struct in the callback to be improperly populated? Is there a better approach to discovering the correct struct layout on the target system?\r\n"},{"Id":"10753343897","Type":"PullRequestEvent","CreatedAt":"2019-10-31T02:01:47","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42249","RelatedDescription":"Opened pull request \"Update analyzer versions\" (#42249) at dotnet/corefx","RelatedBody":"cc: @safern"},{"Id":"10753325655","Type":"PullRequestEvent","CreatedAt":"2019-10-31T01:57:51","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42241","RelatedDescription":"Merged pull request \"Fix inefficient string manipulations in RegularExpressions tests\" (#42241) at dotnet/corefx","RelatedBody":""},{"Id":"10753311040","Type":"IssuesEvent","CreatedAt":"2019-10-31T01:54:29","Actor":"msftbot[bot]","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/42246","RelatedDescription":"Closed issue \"Message_ShouldFormatCountOfRootCausesUsingTheCurrentCulture failed on UAP\" (#42246) at dotnet/corefx","RelatedBody":"```\r\nUnhandled exception. Xunit.Sdk.TrueException: Assert.True() Failure\r\nExpected: True\r\nActual:   False\r\n   at Xunit.Assert.True(Nullable`1 condition, String userMessage) in C:\\Dev\\xunit\\xunit\\src\\xunit.assert\\Asserts\\BooleanAsserts.cs:line 96\r\n   at Xunit.Assert.True(Boolean condition) in C:\\Dev\\xunit\\xunit\\src\\xunit.assert\\Asserts\\BooleanAsserts.cs:line 63\r\n   at System.ComponentModel.Composition.CompositionExceptionTests.AssertMessage(CompositionException exception, Int32 rootCauseCount, CultureInfo culture) in /_/src/System.ComponentModel.Composition/tests/System/ComponentModel/Composition/CompositionExceptionTests.cs:line 420\r\n   at System.ComponentModel.Composition.CompositionExceptionTests.<Message_ShouldFormatCountOfRootCausesUsingTheCurrentCulture>b__31_0() in /_/src/System.ComponentModel.Composition/tests/System/ComponentModel/Composition/CompositionExceptionTests.cs:line 383\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Xunit.ConsoleClient.RemoteExecutor.Execute(String[] args)\r\n   at Xunit.ConsoleClient.ConsoleRunner.EntryPoint(String[] args)\r\n   at Xunit.ConsoleClient.Program.Main(String[] args)\r\n    System.ComponentModel.Composition.CompositionExceptionTests.Message_ShouldFormatCountOfRootCausesUsingTheCurrentCulture [FAIL]\r\n      Microsoft.DotNet.RemoteExecutor.RemoteExecutionException : Remote process failed with an unhandled exception.\r\n      Stack Trace:\r\n        \r\n        Child exception:\r\n          Xunit.Sdk.TrueException: Assert.True() Failure\r\n        Expected: True\r\n        Actual:   False\r\n        /_/src/System.ComponentModel.Composition/tests/System/ComponentModel/Composition/CompositionExceptionTests.cs(420,0): at System.ComponentModel.Composition.CompositionExceptionTests.AssertMessage(CompositionException exception, Int32 rootCauseCount, CultureInfo culture)\r\n        /_/src/System.ComponentModel.Composition/tests/System/ComponentModel/Composition/CompositionExceptionTests.cs(383,0): at System.ComponentModel.Composition.CompositionExceptionTests.<Message_ShouldFormatCountOfRootCausesUsingTheCurrentCulture>b__31_0()\r\n        \r\n        Child process:\r\n          System.ComponentModel.Composition.Tests, Version=4.0.1.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51 System.ComponentModel.Composition.CompositionExceptionTests Int32 <Message_ShouldFormatCountOfRootCausesUsingTheCurrentCulture>b__31_0()\r\n        ```\r\n        "},{"Id":"10753311065","Type":"PullRequestEvent","CreatedAt":"2019-10-31T01:54:29","Actor":"msftbot[bot]","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42247","RelatedDescription":"Merged pull request \"Improve test failure msg for some MEF tests\" (#42247) at dotnet/corefx","RelatedBody":"Closes https://github.com/dotnet/corefx/issues/42246"},{"Id":"10753170302","Type":"PullRequestEvent","CreatedAt":"2019-10-31T01:21:42","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/42244","RelatedDescription":"Closed pull request \"CI TEST: Check typical Helix machines memory utilization\" (#42244) at dotnet/corefx","RelatedBody":"Investigating https://github.com/dotnet/coreclr/issues/27305"},{"Id":"10753025305","Type":"IssuesEvent","CreatedAt":"2019-10-31T00:46:50","Actor":"carlossanlop","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/41614","RelatedDescription":"Closed issue \"API Proposal: Add file and directory creation methods that take an ACL\" (#41614) at dotnet/corefx","RelatedBody":"### Summary\r\n\r\n.NET ACL (Access Control List) support is Windows specific (`FileSecurity` and `DirectorySecurity`). We keep support in `System.IO.FileSystem.AccessControl` and do not have references to the ACL types in base `System.IO` types in .NET Core (e.g. `File`, `DirectoryInfo`, `FileStream`). We have extension methods in `System.IO.FileSystemAclExtensions` to get and set ACLs instead. We do not, however, have methods that let you create files and directories with a specific ACL set.\r\n\r\nThis presents a few problems:\r\n\r\n- Potential security hole as files/directories can be accessed between creation and modification\r\n- Porting difficulties as there isn't a 1-1 API replacement\r\n- Stability issues with background processes (file filters) can prevent modifying ACLs right after creation (typically surfaces as a security exception)\r\n\r\nWe need to add helper methods that prevent these problems. Adding back API isn't feasible as `FileStream` lives in CoreLib and would require pulling down a rather large closure (above and beyond putting Windows specific API in front of Unix/cross-plat developers). Having these as extension methods also facilitates writing .NET Standard libraries.\r\n\r\n### Proposal\r\n\r\n``` C#\r\nusing System.Security.AccessControl;\r\n\r\nnamespace System.IO\r\n{\r\n    public static class FileSystemAclExtensions\r\n    {\r\n        // Add\r\n        public static FileStream Create(\r\n            this FileInfo fileInfo,\r\n            FileMode mode,\r\n            FileSystemRights rights,\r\n            FileShare share,\r\n            int bufferSize,\r\n            FileOptions options,\r\n            FileSecurity fileSecurity);\r\n\r\n        public static void Create(\r\n            this DirectoryInfo directoryInfo,\r\n            DirectorySecurity directorySecurity);\r\n\r\n        public static FileStream CreateFile(\r\n            this FileSecurity fileSecurity,\r\n            string path,\r\n            FileMode mode,\r\n            FileSystemRights rights,\r\n            FileShare share,\r\n            int bufferSize,\r\n            FileOptions options);\r\n\r\n        public static DirectoryInfo CreateDirectory(\r\n            this DirectorySecurity directorySecurity\r\n            string path);\r\n\r\n        // Existing\r\n        public static DirectorySecurity GetAccessControl(this DirectoryInfo directoryInfo);\r\n        public static DirectorySecurity GetAccessControl(this DirectoryInfo directoryInfo, AccessControlSections includeSections);\r\n        public static FileSecurity GetAccessControl(this FileInfo fileInfo);\r\n        public static FileSecurity GetAccessControl(this FileInfo fileInfo, AccessControlSections includeSections);\r\n        public static FileSecurity GetAccessControl(this FileStream fileStream);\r\n        public static void SetAccessControl(this DirectoryInfo directoryInfo, DirectorySecurity directorySecurity);\r\n        public static void SetAccessControl(this FileInfo fileInfo, FileSecurity fileSecurity);\r\n        public static void SetAccessControl(this FileStream fileStream, FileSecurity fileSecurity);\r\n}\r\n```\r\n\r\n### Details\r\n\r\nHeuristics would follow .NET Framework as closely as possible. Directory creation is the most important of the two as you can prevent malicious file access if the directory is locked from the start.\r\n\r\nFor directory creation we would likely include the same sources that `System.IO.FileSystem` uses as the directory creation helper there already sets a \"default\" security object and would just need to have an overload added (which would allow creation heuristics to match properly, including error states).\r\n\r\nFile creation is a bit more complicated as the logic may take a bit more refactoring, but we should strive to include the same sources as well.\r\n\r\nMarking as 3.1 as internal partners are hitting this in porting efforts.\r\n\r\n### Related Issues\r\n\r\n#31488\r\n\r\nCC: @danmosemsft, @ericstj, @terrajobst"},{"Id":"10753018965","Type":"PullRequestEvent","CreatedAt":"2019-10-31T00:45:25","Actor":"dotnet-maestro[bot]","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/42248","RelatedDescription":"Opened pull request \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42248) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20191030.3\r\n- **Date Produced**: 10/30/2019 9:59 PM\r\n- **Commit**: 93584136cf938d5f65e98e3bb7f0580526ae0716\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.0-preview3.19530.3\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.0-preview3.19530.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.0-preview3.19530.3\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"10753590042","Type":"IssuesEvent","CreatedAt":"2019-10-31T02:56:03","Actor":"gundermanc","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/39601","RelatedDescription":"Opened issue \"Crash from closed textview in visual tree in dialog page\" (#39601) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nVisual Studio 2019 16.4 Preview 2\r\n\r\n**Steps to Reproduce**:\r\n\r\nIntermittent repro that's received a fair bit of feedback internally.\r\n\r\n1. Tools > Options > C# > Code Style (perhaps via Ctrl+Q).\r\n2. Switch to another pane and back several times\r\n3. Close tools options\r\n4. Re-launch to the same page\r\n\r\n**Expected Behavior**:\r\n\r\nPage opens.\r\n\r\n**Actual Behavior**:\r\n\r\nVS intermittently crashes with an ObjectDisposedException in an Editor margin from the embedded textviewhost.\r\n\r\nThe problem seems to be in the way that [AbstractOptionPreviewViewModel](http://sourceroslyn.io/#Microsoft.VisualStudio.LanguageServices.Implementation/Options/AbstractOptionPreviewViewModel.cs,9a39115621aed465) provides the textviewhost to the view.\r\n\r\nWhen the dialog page closes, a code path calls Dispose on the ViewModel, closing and clearing the textviewhost.\r\n\r\nMy theory is that this happens after the UI has been dismissed (at least part of the time) leading to no databinding update for the text view host's binding in the UIElementDialogPage, keeping the view in the visual tree. UIElementDialogPages appear to stick around for the entire VS session, so, the next launch of the dialog, the old textview is in the visual tree, and if the initial layout triggers a SizeChanged event, causes a crash.\r\n\r\n**Root cause:**\r\n\r\nThe exception stems from a recent change in Editor, which listens to the SizeChanged event on a Disposable object.\r\n\r\nI'm making changes on our side to make this scenario less likely to throw, but from a local repro, it seems that Roslyn is intermittently keeping around a closed view when dialog page closes, which is at best a leak, and at worst, a potential reliability issue."},{"Id":"10753513983","Type":"IssuesEvent","CreatedAt":"2019-10-31T02:39:32","Actor":"jhudsoncedaron","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/39600","RelatedDescription":"Opened issue \"IDE0019 suggests pattern matching but the generated pattern matching changes the meaning of the code\" (#39600) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n\r\nC# 8.0\r\n\r\n**Steps to Reproduce**:\r\n\r\nApologies if this doesn't quite reproduce here. The origin file is some 3000 lines and the project is probably in the millions.\r\n\r\n    void ProcessRow(IDataReader reader, ISet<int> questionIds, IDictionary<int, string> visibleExpressions, IDictionary<int, string> enabledExpressions, IDictionary<int, string> completeExpressions)\r\n    {\r\n            int i = 0;\r\n            var questionId = reader.GetInt32(i++);\r\n            var dataLevelId = reader[i++] as byte?;\r\n            var visibleExpression = reader[i++] as string;\r\n            var enabledExpression = reader[i++] as string;\r\n            var completeExpression = reader[i++] as string;\r\n\r\n            if (questionIds.Contains(questionId))\r\n            {\r\n                if (visibleExpression != null)\r\n                   visibleExpressions[questionId] = visibleExpression;\r\n                if (enabledExpression != null)\r\n                   enabledExpressions[questionId] = enabledExpression;\r\n                if (completeExpression != null)\r\n                   completeExpressions[questionId] = completeExpression;\r\n            }\r\n    }\r\n\r\nFor some reason it wants to use pattern matching but can't understand that `i` has a different value by that time and the code replacement is non-working code.\r\n\r\nWe use this indexing idiom here because this loop runs thousands of times per web request and it's very nearly as resilient to schema changes as string indexers and just as easy to read as string indexers and as fast as numeric literal indexers into the data reader. The real code has 18 columns here.\r\n\r\n**Expected Behavior**:\r\n\r\nNo ... under var as the fix can't be applied here.\r\n\r\n**Actual Behavior**:\r\n\r\nAttached screen grab.\r\n![ide0019insanity](https://user-images.githubusercontent.com/17086870/67914096-63164180-fb4c-11e9-9ea4-ff8ead5a103a.png)\r\n"},{"Id":"10753196596","Type":"IssuesEvent","CreatedAt":"2019-10-31T01:27:46","Actor":"davkean","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/39599","RelatedDescription":"Opened issue \"MisplacedUsingDirectivesDiagnosticAnalyzer ' threw an exception of type 'System.ArgumentOutOfRangeException' with message 'Index was out of range. \" (#39599) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nVersion 16.5.0 Preview 1.0 [29429.152.master]\r\n\r\n**Steps to Reproduce**:\r\n\r\n``` C#\r\nnamespace Microsoft.VisualStudio.ProjectSystem.VS.Implementation.Package\r\n{\r\n    using System;\r\n    using System.Collections.Immutable;\r\n    using System.ComponentModel.Composition;\r\n    using System.Diagnostics.CodeAnalysis;\r\n    using System.Diagnostics.Contracts;\r\n    using System.Threading;\r\n    using Microsoft.VisualStudio.Shell.Interop;\r\n```\r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\tDetail Description\r\nWarning\tAD0001\tAnalyzer 'Microsoft.CodeAnalysis.CSharp.MisplacedUsingDirectives.MisplacedUsingDirectivesDiagnosticAnalyzer' threw an exception of type 'System.ArgumentOutOfRangeException' with message 'Index was out of range. Must be non-negative and less than the size of the collection.\r\nParameter name: index'.\tMicrosoft.VisualStudio.ProjectSystem.VS.Implementation\t\t1\tActive\tAnalyzer 'Microsoft.CodeAnalysis.CSharp.MisplacedUsingDirectives.MisplacedUsingDirectivesDiagnosticAnalyzer' threw the following exception:\r\n'Exception occurred with following context:\r\nCompilation: Microsoft.VisualStudio.ProjectSystem.VS.Implementation\r\nSyntaxTree: C:\\CPS\\src\\Microsoft.VisualStudio.ProjectSystem.VS.Implementation\\VsProjectTypeValuesCacheService.cs\r\nSyntaxNode: namespace Microsoft.VisualStudio ... [NamespaceDeclarationSyntax]@[314..24814) (6,0)-(495,1)\r\n\r\nSystem.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\r\nParameter name: index\r\n   at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)\r\n   at Microsoft.CodeAnalysis.AnalyzerConfigSet.SequenceEqualComparer.Equals(List`1 x, List`1 y)\r\n   at Microsoft.CodeAnalysis.ConcurrentCache`2.TryAdd(TKey key, TValue value)\r\n   at Microsoft.CodeAnalysis.AnalyzerConfigSet.GetOptionsForSourcePath(String sourcePath)\r\n   at Microsoft.CodeAnalysis.ProjectState.WorkspaceAnalyzerConfigOptionsProvider.GetOptions(SyntaxTree tree)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver.GetFilteredDiagnostic(Diagnostic diagnostic, Compilation compilation, AnalyzerOptions analyzerOptions)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver.<>c__DisplayClass117_0.<GetDiagnosticSink>b__0(Diagnostic diagnostic, DiagnosticAnalyzer analyzer, Boolean isSyntaxDiagnostic)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerExecutor.AnalyzerDiagnosticReporter.AddDiagnostic(Diagnostic diagnostic)\r\n   at Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.ReportDiagnostic(Diagnostic diagnostic)\r\n   at Microsoft.CodeAnalysis.CSharp.MisplacedUsingDirectives.MisplacedUsingDirectivesDiagnosticAnalyzer.ReportDiagnostics(SyntaxNodeAnalysisContext context, DiagnosticDescriptor descriptor, IEnumerable`1 usingDirectives, CodeStyleOption`1 option)\r\n   at Microsoft.CodeAnalysis.CSharp.MisplacedUsingDirectives.MisplacedUsingDirectivesDiagnosticAnalyzer.AnalyzeNamespaceNode(SyntaxNodeAnalysisContext context)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerExecutor.<>c__55`1.<ExecuteSyntaxNodeAction>b__55_0(ValueTuple`2 data)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerExecutor.ExecuteAndCatchIfThrows_NoLock[TArg](DiagnosticAnalyzer analyzer, Action`1 analyze, TArg argument, Nullable`1 info)\r\n-----\r\n'.\r\n\r\n```"},{"Id":"10752973254","Type":"PullRequestEvent","CreatedAt":"2019-10-31T00:34:33","Actor":"JoeRobich","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39587","RelatedDescription":"Merged pull request \"Run integration tests with .NET Core SDK shipped with VS\" (#39587) at dotnet/roslyn","RelatedBody":"Integration tests were being run with the dotnet SDK from the build environment. This broke when VS updated to creating new .NET Core projects against a TFM not supported by the version of the SDK we were building against.\r\n\r\nThis change allows the .NET Core SDK that shipped with VS to be found when running integration tests. Which is likely the desired behavior.\r\n\r\nFixes #39588"},{"Id":"10752848904","Type":"PullRequestEvent","CreatedAt":"2019-10-31T00:05:53","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39598","RelatedDescription":"Opened pull request \"Merge release/dev16.4 to release/dev16.4-vs-deps\" (#39598) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.4 into release/dev16.4-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-to-release/dev16.4-vs-deps\ngit reset --hard upstream/release/dev16.4-vs-deps\ngit merge upstream/release/dev16.4\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-to-release/dev16.4-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"10753890256","Type":"PullRequestEvent","CreatedAt":"2019-10-31T04:05:52","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7854","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7854) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"10753878850","Type":"PullRequestEvent","CreatedAt":"2019-10-31T04:03:04","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7853","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7853) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @echesakovMSFT"},{"Id":"10748724538","Type":"PullRequestEvent","CreatedAt":"2019-10-30T15:13:13","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7853","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7853) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @echesakovMSFT"},{"Id":"10748706334","Type":"PullRequestEvent","CreatedAt":"2019-10-30T15:11:25","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7851","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7851) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @AaronRobinsonMSFT @carlossanlop"},{"Id":"10748048115","Type":"IssuesEvent","CreatedAt":"2019-10-30T14:11:05","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7852","RelatedDescription":"Opened issue \"AF: InstantiatedMethod.SetCachedCanonValue\" (#7852) at dotnet/corert","RelatedBody":"```\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\n  Assertion Failed\r\n  \r\n     at Internal.TypeSystem.InstantiatedMethod.SetCachedCanonValue(CanonicalFormKind kind, InstantiatedMethod value) in F:\\workspace.2\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\Canon\\InstantiatedMethod.Canon.cs:line 77\r\n     at Internal.TypeSystem.InstantiatedMethod.GetCanonMethodTarget(CanonicalFormKind kind) in F:\\workspace.2\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\Canon\\InstantiatedMethod.Canon.cs:line 50\r\n     at Internal.JitInterface.CorInfoImpl.getCallInfo(CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult) in F:\\workspace.2\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\JitInterface\\CorInfoImpl.RyuJit.cs:line 1193\r\n     at Internal.JitInterface.CorInfoImpl._getCallInfo(IntPtr thisHandle, IntPtr* ppException, CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult) in F:\\workspace.2\\_work\\1\\s\\src\\JitInterface\\src\\CorInfoBase.cs:line 2348\r\n     at Internal.JitInterface.CorInfoImpl.JitCompileMethod(IntPtr& exception, IntPtr jit, IntPtr thisHandle, IntPtr callbacks, CORINFO_METHOD_INFO& info, UInt32 flags, IntPtr& nativeEntry, UInt32& codeSize)\r\n     at Internal.JitInterface.CorInfoImpl.JitCompileMethod(IntPtr& exception, IntPtr jit, IntPtr thisHandle, IntPtr callbacks, CORINFO_METHOD_INFO& info, UInt32 flags, IntPtr& nativeEntry, UInt32& codeSize)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL) in F:\\workspace.2\\_work\\1\\s\\src\\JitInterface\\src\\CorInfoImpl.cs:line 168\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL) in F:\\workspace.2\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\JitInterface\\CorInfoImpl.RyuJit.cs:line 56\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode) in F:\\workspace.2\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\Compiler\\RyuJitCompilation.cs:line 139\r\n     at ILCompiler.RyuJitCompilation.<CompileMultiThreaded>b__8_0(Object m) in F:\\workspace.2\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\Compiler\\RyuJitCompilation.cs:line 101\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  Assertion Failed\r\n```"},{"Id":"10742955128","Type":"PullRequestEvent","CreatedAt":"2019-10-30T00:15:42","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7851","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7851) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"10742916022","Type":"PullRequestEvent","CreatedAt":"2019-10-30T00:06:55","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7850","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7850) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @danmosemsft @jkotas @stephentoub @elinor-fung @noahfalk"},{"Id":"10741399922","Type":"PullRequestEvent","CreatedAt":"2019-10-29T20:09:48","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7850","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7850) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"10730735555","Type":"PullRequestEvent","CreatedAt":"2019-10-28T18:00:32","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7848","RelatedDescription":"Merged pull request \"Port changes from CoreCLR\" (#7848) at dotnet/corert","RelatedBody":""},{"Id":"10730348015","Type":"PullRequestEvent","CreatedAt":"2019-10-28T17:14:46","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7849","RelatedDescription":"Merged pull request \"Fix building portable thread pool on Windows\" (#7849) at dotnet/corert","RelatedBody":""},{"Id":"10729151295","Type":"PullRequestEvent","CreatedAt":"2019-10-28T15:08:00","Actor":"filipnavara","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7849","RelatedDescription":"Opened pull request \"Fix building portable thread pool on Windows\" (#7849) at dotnet/corert","RelatedBody":""}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"10752776502","Type":"PullRequestEvent","CreatedAt":"2019-10-30T23:50:45","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3834","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3834) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191030.5\r\n- **Date Produced**: 10/30/2019 9:20 PM\r\n- **Commit**: 4950751278293d59898be799c0115e0ad895747e\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19530.5\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n"},{"Id":"10752408863","Type":"PullRequestEvent","CreatedAt":"2019-10-30T22:35:11","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3834","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3834) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191030.5\r\n- **Date Produced**: 10/30/2019 9:20 PM\r\n- **Commit**: 4950751278293d59898be799c0115e0ad895747e\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19530.5\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n"},{"Id":"10752005021","Type":"PullRequestEvent","CreatedAt":"2019-10-30T21:30:49","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3830","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3830) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191030.4\r\n- **Date Produced**: 10/30/2019 6:59 PM\r\n- **Commit**: ce871036d2f45c3268a9463cc5405958c4f5b3f7\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19530.4\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n"},{"Id":"10751971336","Type":"PullRequestEvent","CreatedAt":"2019-10-30T21:25:57","Actor":"dotnet-maestro-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3833","RelatedDescription":"Opened pull request \"[automated] Merge branch 'release/3.1.1xx' => 'master'\" (#3833) at dotnet/sdk","RelatedBody":"I detected changes in the release/3.1.1xx branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* @wli3\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout master\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-master master\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n"},{"Id":"10751956187","Type":"PullRequestEvent","CreatedAt":"2019-10-30T21:23:43","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3796","RelatedDescription":"Merged pull request \"Update microsoft.dot net.helix.sdk\" (#3796) at dotnet/sdk","RelatedBody":""},{"Id":"10751877613","Type":"PullRequestEvent","CreatedAt":"2019-10-30T21:12:21","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3832","RelatedDescription":"Opened pull request \"port 3.1 version\" (#3832) at dotnet/sdk","RelatedBody":"Part of https://github.com/dotnet/sdk/issues/3773\r\n\r\n@swaroop-sridhar"},{"Id":"10751732014","Type":"PullRequestEvent","CreatedAt":"2019-10-30T20:52:52","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3831","RelatedDescription":"Opened pull request \"Use default arcade symbol publishing logic\" (#3831) at dotnet/sdk","RelatedBody":"#3584 was supposed to fix symbol publishing, but didn't work because we were copying the portable PDB files to the SymStore directory.  They need to be converted to desktop PDBs in order to be published.  The default Arcade logic handles this, so just revert to that."},{"Id":"10751477536","Type":"PullRequestEvent","CreatedAt":"2019-10-30T20:20:12","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3830","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3830) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191030.4\r\n- **Date Produced**: 10/30/2019 6:59 PM\r\n- **Commit**: ce871036d2f45c3268a9463cc5405958c4f5b3f7\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19530.4\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n"},{"Id":"10750963776","Type":"PullRequestEvent","CreatedAt":"2019-10-30T19:13:11","Actor":"Logerfo","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3829","RelatedDescription":"Opened pull request \"fix broken link\" (#3829) at dotnet/sdk","RelatedBody":"the dot might be considered as part of the link for some parsers (like github file view)"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"501128777","IsPullRequest":true,"CreatedAt":"2019-10-01T20:30:20","Actor":"gep13","Number":"150","RawContent":null,"Title":"Add new Cake Maintainer","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Open PR \"Add new Cake Maintainer\" (#150)"},{"Id":"500670461","IsPullRequest":true,"CreatedAt":"2019-10-01T05:27:58","Actor":"JimBobSquarePants","Number":"149","RawContent":null,"Title":"Add ImageSharp","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Open PR \"Add ImageSharp\" (#149)"},{"Id":"475315730","IsPullRequest":false,"CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Number":"148","RawContent":null,"Title":"Clarify guidelines in regards to Options and Requirements","State":"open","Body":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?","Url":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Open issue \"Clarify guidelines in regards to Options and Requirements\" (#148)"},{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-06-13T10:49:30","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Open PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"515172359","IsPullRequest":false,"CreatedAt":"2019-10-31T05:19:46","Actor":"ericjohannsen","Number":"27573","RawContent":null,"Title":"Register .NET Core type for COM interop","State":"open","Body":"I built a trivial .NET Core 3 library project to test ComVisibleAttribute:\r\n``` C#\r\n[Guid(\"a843456f-3657-4a01-a133-fd333a84aa58\")]\r\n[ClassInterface(ClassInterfaceType.None)]\r\n[ComVisible(true)]\r\npublic class Foo\r\n{        \r\n    public string Bar()\r\n    {\r\n        return \"42\";\r\n    }\r\n}\r\n```\r\nThen run `regasm my.dll` and get this error:\r\n\r\nCould not load file or assembly 'System.Runtime, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\n\r\nIs this currently supposed to work? If so, what am I doing wrong?","Url":"https://github.com/dotnet/coreclr/issues/27573","RelatedDescription":"Open issue \"Register .NET Core type for COM interop\" (#27573)"},{"Id":"515171632","IsPullRequest":true,"CreatedAt":"2019-10-31T05:17:36","Actor":"cshung","Number":"27572","RawContent":null,"Title":"Documentation for Native Hash Table","State":"open","Body":"@dotnet/crossgen-contrib \r\n@jkotas ","Url":"https://github.com/dotnet/coreclr/pull/27572","RelatedDescription":"Open PR \"Documentation for Native Hash Table\" (#27572)"},{"Id":"515154152","IsPullRequest":true,"CreatedAt":"2019-10-31T04:26:20","Actor":"VSadov","Number":"27571","RawContent":null,"Title":"Some follow up changes after the cast caching change","State":"open","Body":"Items that were discussed in code reviews, but did not fit into the actual change. Mostly about reducing duplicated code.","Url":"https://github.com/dotnet/coreclr/pull/27571","RelatedDescription":"Open PR \"Some follow up changes after the cast caching change\" (#27571)"},{"Id":"515150597","IsPullRequest":false,"CreatedAt":"2019-10-31T04:15:26","Actor":"mattzink","Number":"27570","RawContent":null,"Title":"TotalAvailableMemoryBytes does not reflect COMPlus_GCHeapHardLimit's value","State":"open","Body":"SDK: 3.0.100\r\nOS: CentOS 7 (x64)\r\n\r\nWe are not seeing the value we configure in the `COMPlus_GCHeapHardLimit` environmental variable being reflected in `GC.GetGCMemoryInfo().TotalAvailableMemoryBytes` as documented [here](https://docs.microsoft.com/en-us/dotnet/api/system.gcmemoryinfo.totalavailablememorybytes?view=netcore-3.0#remarks). We are therefore unsure if this heap limit is actually configured.\r\n\r\nRepro:\r\n```shell\r\n$ dotnet new console\r\n$ sed -i 's/\"Hello World!\"/GC.GetGCMemoryInfo().TotalAvailableMemoryBytes/g' Program.cs\r\n$ dotnet run\r\n8370458624\r\n$ COMPlus_GCHeapHardLimit=100000000 dotnet run\r\n4294967296\r\n$ COMPlus_GCHeapHardLimit=50000000 dotnet run\r\n1342177280\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27570","RelatedDescription":"Open issue \"TotalAvailableMemoryBytes does not reflect COMPlus_GCHeapHardLimit's value\" (#27570)"},{"Id":"515120262","IsPullRequest":false,"CreatedAt":"2019-10-31T02:51:02","Actor":"VincentBu","Number":"27569","RawContent":null,"Title":"Test failed: JIT\\Performance\\CodeQuality\\Roslyn\\CscBench\\CscBench.cmd","State":"open","Body":"**Job:**\r\n[coreclr-jitstress #20191029.1 Run Test Pri1 Windows_NT x64 checked](https://dev.azure.com/dnceng/public/_build/results?buildId=406920)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/d9777ae2-7988-4741-8095-c011e8dad327/workitems/JIT/console\r\n\r\n**OS & Arch:**\r\nwindows x64\r\n\r\n**Mode:**\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_TailcallStress=1\r\n\r\n**Note:**\r\nThis failure **repros** on our windows x64 machine.\r\n\r\n**Log:**\r\n```\r\nJIT\\Performance\\CodeQuality\\Roslyn\\CscBench\\CscBench.cmd [FAIL]\r\n      \r\n      Assert failure(PID 2996 [0x00000bb4], Thread: 532 [0x0214]): Consistency check failed: AV in clr at this callstack:\r\n      ------\r\n      CORECLR! JIT_ChkCastClassSpecial + 0x10 (0x00007ffc`3f4da4d0)\r\n      <no module>! <no symbol> + 0x0 (0x00007ffb`e22ace5c)\r\n      <no module>! <no symbol> + 0x0 (0x0000017e`00217cd8)\r\n      <no module>! <no symbol> + 0x0 (0x0000017e`00217ce0)\r\n      <no module>! <no symbol> + 0x0 (0x0000017e`00217ce0)\r\n      <no module>! <no symbol> + 0x0 (0x0000003b`9e5acf40)\r\n      <no module>! <no symbol> + 0x0 (0x0000017e`00217ce0)\r\n      <no module>! <no symbol> + 0x0 (0x0000017e`00217cd8)\r\n      <no module>! <no symbol> + 0x0 (0x0000017e`0018d908)\r\n      CORECLR! JIT_TailCallHelperStub_ReturnAddress + 0x0 (0x00007ffc`3f4da906)\r\n      <no module>! <no symbol> + 0x0 (0x00007ffb`e22acac7)\r\n      <no module>! <no symbol> + 0x0 (0x0000017e`0015f5c0)\r\n      <no module>! <no symbol> + 0x0 (0x0000003b`9e5acf68)\r\n      <no module>! <no symbol> + 0x0 (0x00000000`00000051)\r\n      <no module>! <no symbol> + 0x0 (0x00000000`00000051)\r\n      -----\r\n      .AV on tid=0x214 (532), cxr=0000003B9E5AC740, exr=0000003B9E5ACC30\r\n      FAILED: false\r\n      \r\n      CORECLR! CHECK::Trigger + 0x2C5 (0x00007ffc`3eeecc2d)\r\n      CORECLR! CLRVectoredExceptionHandlerPhase3 + 0x364 (0x00007ffc`3f078994)\r\n      CORECLR! CLRVectoredExceptionHandlerPhase2 + 0x69 (0x00007ffc`3f078415)\r\n      CORECLR! CLRVectoredExceptionHandler + 0x1C6 (0x00007ffc`3f07838e)\r\n      CORECLR! CLRVectoredExceptionHandlerShim + 0x17A (0x00007ffc`3f078bea)\r\n      NTDLL! RtlInitializeCriticalSection + 0x190 (0x00007ffc`6a805e90)\r\n      NTDLL! RtlImageNtHeaderEx + 0x17B (0x00007ffc`6a7dfa1b)\r\n      NTDLL! KiUserExceptionDispatcher + 0x3A (0x00007ffc`6a8496fa)\r\n      CORECLR! JIT_ChkCastClassSpecial + 0x10 (0x00007ffc`3f4da4d0)\r\n      <no module>! <no symbol> + 0x0 (0x00007ffb`e22ace5c)\r\n          File: F:\\workspace\\_work\\1\\s\\src\\vm\\excep.cpp Line: 7537\r\n          Image: C:\\dotnetbuild\\work\\d9777ae2-7988-4741-8095-c011e8dad327\\Payload\\CoreRun.exe\r\n      \r\n      \r\n      Return code:      1\r\n      Raw output file:      C:\\dotnetbuild\\work\\d9777ae2-7988-4741-8095-c011e8dad327\\Work\\3f16047f-6116-4076-ba39-3b570a56115e\\Exec\\JIT\\Performance\\Reports\\JIT.Performance\\CodeQuality\\Roslyn\\CscBench\\CscBench.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n       \"C:\\dotnetbuild\\work\\d9777ae2-7988-4741-8095-c011e8dad327\\Payload\\corerun.exe\" CscBench.dll \r\n      Expected: 100\r\n      Actual: -1073740286\r\n      END EXECUTION - FAILED\r\n      FAILED\r\n      Test Harness Exitcode is : 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27569","RelatedDescription":"Open issue \"Test failed: JIT\\Performance\\CodeQuality\\Roslyn\\CscBench\\CscBench.cmd\" (#27569)"},{"Id":"515111908","IsPullRequest":true,"CreatedAt":"2019-10-31T02:29:05","Actor":"echesakovMSFT","Number":"27568","RawContent":null,"Title":"LeadingSignCount,LeadingZeroCount,PopCount","State":"open","Body":"https://github.com/dotnet/corefx/issues/26182","Url":"https://github.com/dotnet/coreclr/pull/27568","RelatedDescription":"Open PR \"LeadingSignCount,LeadingZeroCount,PopCount\" (#27568)"},{"Id":"515083428","IsPullRequest":true,"CreatedAt":"2019-10-31T01:11:34","Actor":"josalem","Number":"27567","RawContent":null,"Title":"[test] Improve diagnostics for failures in IPC/EventPipe tests","State":"open","Body":"* Add ProxyStream for diagnosing issues with EventPipeEventSource StreamReading\r\n* Harden IpcTraceTest.cs against errors where the reader throws an exception before we await the task\r\n\r\n---\r\n\r\nThis should prevent the timeout mentioned in #26241.  Also adds a `Stream` proxy that will allow us to dump the contents of the stream in the event that a failure does occur.  \r\n\r\nI believe I have narrowed down the issue to an exception happening inside `EventPipeEventSource` that causes the reader thread to die before we `.Wait()` on it, so we deadlock on the `StopTracing()` call because that won't return until writing has stopped.  Since the reader thread has died, the kernel buffer for the OS transport (Named Pipes on Windows; Sockets on Linux) has filled up and the runtime's event flushing thread is blocked on a call to `EventPipeFile::Write()`, therefore `StopTracing` can't return and we are deadlocked.\r\n\r\nThe additional `using` statements are meant to harden against this case by ensuring that the OS level structs for the `Stream` are cleaned up when an exception inside a `Task` is thrown.  This should close the EventPipe connection once the exception has been thrown and prevent the writer thread from being blocked, allowing the `StopTracing` call to complete.  This means we will now hit whatever exception has been causing the reader thread to die at the `.Wait()` call.  In this case, I have observed the culprit to be an `ArgumentException` thrown from System.IO.PipeStream.Read from inside `EventPipeEventSource`. \r\n\r\nThe proxied `Read` call on `ProxyStream` checks for the case when this is happening and dumps the whole stream to a `.nettrace` file in order to have a file that should ostensibly reproduce the issue in `EventPipeEventSource` when streamed through it later.\r\n\r\nCC - @tommcdon ","Url":"https://github.com/dotnet/coreclr/pull/27567","RelatedDescription":"Open PR \"[test] Improve diagnostics for failures in IPC/EventPipe tests\" (#27567)"},{"Id":"515081163","IsPullRequest":true,"CreatedAt":"2019-10-31T01:05:00","Actor":"NickCraver","Number":"27566","RawContent":null,"Title":"GC Documentation: Update knobs doc to clarify usage","State":"open","Body":"The current docs are a bit confusing between global and per-heap. This clarifies that and aligns the GC bits between `clrconfigvalues.h` and `clr-configuration-knobs.md` (intended to be generated, but not actually matching at the moment).\r\n\r\nIn doing this and running the generation, I noticed there's a large gap between current code and what-would-be-generated documentation. Here's that current diff:\r\n```diff\r\ndiff --git a/Documentation/project-docs/clr-configuration-knobs.md b/Documentation/project-docs/clr-configuration-knobs.md\r\nindex 6b5f9846a1..880666982e 100644\r\n--- a/Documentation/project-docs/clr-configuration-knobs.md\r\n+++ b/Documentation/project-docs/clr-configuration-knobs.md\r\n@@ -17,7 +17,7 @@ Name | Description | Type\r\n \r\n ## Environment/Registry Configuration Knobs\r\n \r\n-This table was machine-generated using `clr-configuration-knobs.csx` script from repository commit [0ae3d02](https://github.com/dotnet/coreclr/commit/0ae3d020f82c3f8650b7e5eeaf9f1030f7e7e785) on 4/25/2019. It might be out of date. To generate latest documentation run `dotnet-script clr-configuration-knobs.csx` from this file directory.\r\n+This table was machine-generated using `clr-configuration-knobs.csx` script from repository commit [41546b0](https://github.com/dotnet/coreclr/commit/41546b05e31c0ba72537ec6445176086964717bb) on 10/31/2019. It might be out of date. To generate latest documentation run `dotnet-script clr-configuration-knobs.csx` from this file directory.\r\n \r\n When using these configurations from environment variables, the variables need to have the `COMPlus_` prefix in their names. e.g. To set DumpJittedMethods to 1, add the environment variable `COMPlus_DumpJittedMethods=1`.\r\n \r\n@@ -25,46 +25,43 @@ See also [Setting configuration variables](../building/viewing-jit-dumps.md#sett\r\n \r\n #### Tables\r\n 1. [AppDomain Configuration Knobs](#appdomain-configuration-knobs)\r\n-2. [ARM Configuration Knobs](#arm-configuration-knobs)\r\n-3. [Assembly Loader Configuration Knobs](#assembly-loader-configuration-knobs)\r\n-4. [Conditional breakpoints Configuration Knobs](#conditional-breakpoints-configuration-knobs)\r\n-5. [Debugger Configuration Knobs](#debugger-configuration-knobs)\r\n-6. [Diagnostics (internal general-purpose) Configuration Knobs](#diagnostics-internal-general-purpose-configuration-knobs)\r\n-7. [Entry point slot backpatch Configuration Knobs](#entry-point-slot-backpatch-configuration-knobs)\r\n-8. [Exception Handling Configuration Knobs](#exception-handling-configuration-knobs)\r\n-9. [Garbage collector Configuration Knobs](#garbage-collector-configuration-knobs)\r\n-10. [GDBJIT Configuration Knobs](#gdbjit-configuration-knobs)\r\n-11. [IBC Configuration Knobs](#ibc-configuration-knobs)\r\n-12. [Interop Configuration Knobs](#interop-configuration-knobs)\r\n-13. [Interpreter Configuration Knobs](#interpreter-configuration-knobs)\r\n-14. [JIT Configuration Knobs](#jit-configuration-knobs)\r\n-15. [JIT Hardware Intrinsics Configuration Knobs](#jit-hardware-intrinsics-configuration-knobs)\r\n-16. [Jit Pitching Configuration Knobs](#jit-pitching-configuration-knobs)\r\n-17. [Loader Configuration Knobs](#loader-configuration-knobs)\r\n-18. [Loader heap Configuration Knobs](#loader-heap-configuration-knobs)\r\n-19. [Log Configuration Knobs](#log-configuration-knobs)\r\n-20. [MetaData Configuration Knobs](#metadata-configuration-knobs)\r\n-21. [Native Binder Configuration Knobs](#native-binder-configuration-knobs)\r\n-22. [NGEN Configuration Knobs](#ngen-configuration-knobs)\r\n-23. [Performance Configuration Knobs](#performance-configuration-knobs)\r\n-24. [Profiling API / ETW Configuration Knobs](#profiling-api--etw-configuration-knobs)\r\n-25. [Spinning heuristics Configuration Knobs](#spinning-heuristics-configuration-knobs)\r\n-26. [Stress Configuration Knobs](#stress-configuration-knobs)\r\n-27. [Thread (miscellaneous) Configuration Knobs](#thread-miscellaneous-configuration-knobs)\r\n-28. [Thread Suspend Configuration Knobs](#thread-suspend-configuration-knobs)\r\n-29. [Threadpool Configuration Knobs](#threadpool-configuration-knobs)\r\n-30. [Tiered Compilation Configuration Knobs](#tiered-compilation-configuration-knobs)\r\n-31. [TypeLoader Configuration Knobs](#typeloader-configuration-knobs)\r\n-32. [Uncategorized Configuration Knobs](#uncategorized-configuration-knobs)\r\n-33. [Virtual call stubs Configuration Knobs](#virtual-call-stubs-configuration-knobs)\r\n-34. [Watson Configuration Knobs](#watson-configuration-knobs)\r\n-35. [Zap Configuration Knobs](#zap-configuration-knobs)\r\n+2. [Assembly Loader Configuration Knobs](#assembly-loader-configuration-knobs)\r\n+3. [Conditional breakpoints Configuration Knobs](#conditional-breakpoints-configuration-knobs)\r\n+4. [Debugger Configuration Knobs](#debugger-configuration-knobs)\r\n+5. [Diagnostics (internal general-purpose) Configuration Knobs](#diagnostics-internal-general-purpose-configuration-knobs)\r\n+6. [Entry point slot backpatch Configuration Knobs](#entry-point-slot-backpatch-configuration-knobs)\r\n+7. [Exception Handling Configuration Knobs](#exception-handling-configuration-knobs)\r\n+8. [Garbage collector Configuration Knobs](#garbage-collector-configuration-knobs)\r\n+9. [GDBJIT Configuration Knobs](#gdbjit-configuration-knobs)\r\n+10. [IBC Configuration Knobs](#ibc-configuration-knobs)\r\n+11. [Interop Configuration Knobs](#interop-configuration-knobs)\r\n+12. [Interpreter Configuration Knobs](#interpreter-configuration-knobs)\r\n+13. [JIT Configuration Knobs](#jit-configuration-knobs)\r\n+14. [JIT Hardware Intrinsics Configuration Knobs](#jit-hardware-intrinsics-configuration-knobs)\r\n+15. [Jit Pitching Configuration Knobs](#jit-pitching-configuration-knobs)\r\n+16. [Loader Configuration Knobs](#loader-configuration-knobs)\r\n+17. [Loader heap Configuration Knobs](#loader-heap-configuration-knobs)\r\n+18. [Log Configuration Knobs](#log-configuration-knobs)\r\n+19. [MetaData Configuration Knobs](#metadata-configuration-knobs)\r\n+20. [Native Binder Configuration Knobs](#native-binder-configuration-knobs)\r\n+21. [NGEN Configuration Knobs](#ngen-configuration-knobs)\r\n+22. [Profiling API / ETW Configuration Knobs](#profiling-api--etw-configuration-knobs)\r\n+23. [Spinning heuristics Configuration Knobs](#spinning-heuristics-configuration-knobs)\r\n+24. [Stress Configuration Knobs](#stress-configuration-knobs)\r\n+25. [Thread (miscellaneous) Configuration Knobs](#thread-miscellaneous-configuration-knobs)\r\n+26. [Thread Suspend Configuration Knobs](#thread-suspend-configuration-knobs)\r\n+27. [Threadpool Configuration Knobs](#threadpool-configuration-knobs)\r\n+28. [Tiered Compilation Configuration Knobs](#tiered-compilation-configuration-knobs)\r\n+29. [TypeLoader Configuration Knobs](#typeloader-configuration-knobs)\r\n+30. [Uncategorized Configuration Knobs](#uncategorized-configuration-knobs)\r\n+31. [Virtual call stubs Configuration Knobs](#virtual-call-stubs-configuration-knobs)\r\n+32. [Watson Configuration Knobs](#watson-configuration-knobs)\r\n+33. [Zap Configuration Knobs](#zap-configuration-knobs)\r\n \r\n #### AppDomain Configuration Knobs\r\n \r\n Name | Description | Type | Class | Default Value | Flags\r\n -----|-------------|------|-------|---------------|-------\r\n-`AddRejitNops` | Control for the profiler rejit feature infrastructure | `DWORD` | `UNSUPPORTED` | |\r\n `ADDumpSB` | Not used | `DWORD` | `INTERNAL` | `0` |\r\n `ADForceSB` | Forces sync block creation for all objects | `DWORD` | `INTERNAL` | `0` |\r\n `ADLogMemory` | Superseded by test hooks | `DWORD` | `INTERNAL` | `0` |\r\n@@ -167,7 +164,7 @@ Name | Description | Type | Class | Default Value | Flags\r\n `DebuggerBreakPoint` | Allows counting various debug events | `STRING` | `INTERNAL` | | REGUTIL_default\r\n `Debugging_RequiredVersion` | The lowest ICorDebug version we should attempt to emulate, or 0 for default policy.  Use 2 for CLRv2, 4 for CLRv4, etc. | `DWORD` | `UNSUPPORTED` | `0` |\r\n `DebugVerify` | Control for tracing in peverify | `STRING` | `INTERNAL` | | REGUTIL_default\r\n-`EnableDiagnostics` | Allows the debugger and profiler diagnostics to be disabled | `DWORD` | `EXTERNAL` | `1` | REGUTIL_default\r\n+`EnableDiagnostics` | Allows the debugger, profiler, and EventPipe diagnostics to be disabled | `DWORD` | `EXTERNAL` | `1` | REGUTIL_default\r\n `EncApplyChanges` | Allows breaking when ApplyEditAndContinue is called | `DWORD` | `INTERNAL` | `0` |\r\n `EnCBreakOnRemapComplete` | Allows breaking after N RemapCompletes | `DWORD` | `INTERNAL` | `0` | REGUTIL_default\r\n `EnCBreakOnRemapOpportunity` | Allows breaking after N RemapOpportunities | `DWORD` | `INTERNAL` | `0` | REGUTIL_default\r\n@@ -192,7 +189,6 @@ Name | Description | Type | Class | Default Value | Flags\r\n `InjectFault` |  | `DWORD` | `INTERNAL` | `0` | REGUTIL_default\r\n `SuppressChecks` |  | `DWORD` | `INTERNAL` | |\r\n `SuppressLockViolationsOnReentryFromOS` | 64 bit OOM tests re-enter the CLR via RtlVirtualUnwind.  This indicates whether to suppress resulting locking violations. | `DWORD` | `INTERNAL` | `0` |\r\n-`TestHooks` | Used by tests to get test an insight on various CLR workings | `STRING` | `INTERNAL` | |\r\n \r\n #### Entry point slot backpatch Configuration Knobs\r\n \r\n@@ -293,13 +289,17 @@ Name | Description | Type | Class | Default Value | Flags\r\n `EnableRCWCleanupOnSTAShutdown` | Performs RCW cleanup when STA shutdown is detected using IInitializeSpy in classic processes. | `DWORD` | `INTERNAL` | `0` |\r\n `EventPipeCircularMB` | The EventPipe circular buffer size in megabytes. | `DWORD` | `INTERNAL` | `1024` |\r\n `EventPipeConfig` | Configuration for EventPipe. | `STRING` | `INTERNAL` | |\r\n+`EventPipeNetTraceFormat` | Enable/disable using the newer nettrace file format. | `DWORD` | `INTERNAL` | `1` |\r\n `EventPipeOutputPath` | The full path excluding file name for the trace file that will be written when COMPlus_EnableEventPipe=1 | `STRING` | `INTERNAL` | |\r\n+`EventPipeProcNumbers` | Enable/disable capturing processor numbers in EventPipe event headers | `DWORD` | `INTERNAL` | `0` |\r\n `EventPipeRundown` | Enable/disable eventpipe rundown. | `DWORD` | `INTERNAL` | `1` |\r\n `ExposeExceptionsInCOM` |  | `DWORD` | `INTERNAL` | |\r\n `InteropLogArguments` | Log all pinned arguments passed to an interop call | `DWORD` | `EXTERNAL` | `0` |\r\n `InteropValidatePinnedObjects` | After returning from a managed-to-unmanaged interop call, validate GC heap around objects pinned by IL stubs. | `DWORD` | `UNSUPPORTED` | `0` |\r\n `LocalWinMDPath` | Additional path to probe for WinMD files in if a WinRT type is not resolved using the standard paths. | `STRING` | `INTERNAL` | |\r\n `LogCCWRefCountChange` | Outputs debug information and calls LogCCWRefCountChange_BREAKPOINT when AddRef or Release is called on a CCW. | `STRING` | `UNSUPPORTED` | |\r\n+`LTTng` | If COMPlus_LTTng is set to 0, this will prevent the LTTng library from being loaded at runtime | `DWORD` | `UNSUPORTED` | `1` |\r\n+`LTTngConfig` | Configuration for LTTng. | `STRING` | `INTERNAL` | |\r\n `PInvokeInline` |  | `STRING` | `EXTERNAL` | | REGUTIL_default\r\n \r\n #### Interpreter Configuration Knobs\r\n@@ -423,6 +423,7 @@ Name | Description | Type | Class | Default Value | Flags\r\n `JitHashHalt` | Same as JitHalt, but for a method hash | `DWORD` | | `-1` |\r\n `JitHeartbeat` |  | `DWORD` | `INTERNAL` | `0` |\r\n `JitHelperLogging` |  | `DWORD` | `INTERNAL` | `0` |\r\n+`JitHostMaxSlabCache` | Sets jit host max slab cache size, 16MB default | `DWORD` | `EXTERNAL` | `0x1000000` |\r\n `JitImportBreak` |  | `SSV` | | |\r\n `JitInclude` |  | `SSV` | | |\r\n `JitInlineAdditionalMultiplier` |  | `DWORD` | | `0` |\r\n@@ -533,33 +534,34 @@ Name | Description | Type | Class | Default Value | Flags\r\n `TailCallMax` |  | `STRING` | `INTERNAL` | | REGUTIL_default\r\n `TailCallOpt` |  | `STRING` | `EXTERNAL` | | REGUTIL_default\r\n `TailcallStress` |  | `DWORD` | | `0` |\r\n+`TrackDynamicMethodDebugInfo` | Specifies whether debug info should be generated and tracked for dynamic methods | `DWORD` | `UNSUPPORTED` | `0` | REGUTIL_default\r\n \r\n #### JIT Hardware Intrinsics Configuration Knobs\r\n \r\n Name | Description | Type | Class | Default Value | Flags\r\n -----|-------------|------|-------|---------------|-------\r\n `EnableAES` | Enable AES | `DWORD` | | `1` |\r\n-`EnableArm64Aes` |  | `DWORD` | `      ` | `1` |\r\n-`EnableArm64Atomics` |  | `DWORD` | `  ` | `1` |\r\n-`EnableArm64Crc32` |  | `DWORD` | `    ` | `1` |\r\n-`EnableArm64Dcpop` |  | `DWORD` | `    ` | `1` |\r\n-`EnableArm64Dp` |  | `DWORD` | `       ` | `1` |\r\n-`EnableArm64Fcma` |  | `DWORD` | `     ` | `1` |\r\n-`EnableArm64Fp` |  | `DWORD` | `       ` | `1` |\r\n-`EnableArm64Fp16` |  | `DWORD` | `     ` | `1` |\r\n-`EnableArm64Jscvt` |  | `DWORD` | `    ` | `1` |\r\n-`EnableArm64Lrcpc` |  | `DWORD` | `    ` | `1` |\r\n-`EnableArm64Pmull` |  | `DWORD` | `    ` | `1` |\r\n-`EnableArm64Sha1` |  | `DWORD` | `     ` | `1` |\r\n-`EnableArm64Sha256` |  | `DWORD` | `   ` | `1` |\r\n-`EnableArm64Sha3` |  | `DWORD` | `     ` | `1` |\r\n-`EnableArm64Sha512` |  | `DWORD` | `   ` | `1` |\r\n-`EnableArm64Simd` |  | `DWORD` | `     ` | `1` |\r\n-`EnableArm64Simd_fp16` |  | `DWORD` | | `1` |\r\n-`EnableArm64Simd_v81` |  | `DWORD` | ` ` | `1` |\r\n-`EnableArm64Sm3` |  | `DWORD` | `      ` | `1` |\r\n-`EnableArm64Sm4` |  | `DWORD` | `      ` | `1` |\r\n-`EnableArm64Sve` |  | `DWORD` | `      ` | `1` |\r\n+`EnableArm64AdvSimd` |  | `DWORD` | | `1` |\r\n+`EnableArm64AdvSimd_Fp16` |  | `DWORD` | | `1` |\r\n+`EnableArm64AdvSimd_v81` |  | `DWORD` | | `1` |\r\n+`EnableArm64Aes` |  | `DWORD` | | `1` |\r\n+`EnableArm64Atomics` |  | `DWORD` | | `1` |\r\n+`EnableArm64Crc32` |  | `DWORD` | | `1` |\r\n+`EnableArm64Dcpop` |  | `DWORD` | | `1` |\r\n+`EnableArm64Dp` |  | `DWORD` | | `1` |\r\n+`EnableArm64Fcma` |  | `DWORD` | | `1` |\r\n+`EnableArm64Fp` |  | `DWORD` | | `1` |\r\n+`EnableArm64Fp16` |  | `DWORD` | | `1` |\r\n+`EnableArm64Jscvt` |  | `DWORD` | | `1` |\r\n+`EnableArm64Lrcpc` |  | `DWORD` | | `1` |\r\n+`EnableArm64Pmull` |  | `DWORD` | | `1` |\r\n+`EnableArm64Sha1` |  | `DWORD` | | `1` |\r\n+`EnableArm64Sha256` |  | `DWORD` | | `1` |\r\n+`EnableArm64Sha3` |  | `DWORD` | | `1` |\r\n+`EnableArm64Sha512` |  | `DWORD` | | `1` |\r\n+`EnableArm64Sm3` |  | `DWORD` | | `1` |\r\n+`EnableArm64Sm4` |  | `DWORD` | | `1` |\r\n+`EnableArm64Sve` |  | `DWORD` | | `1` |\r\n `EnableAVX` | Enable AVX | `DWORD` | | `1` |\r\n `EnableAVX2` | Enable AVX2 | `DWORD` | | `1` |\r\n `EnableBMI1` | Enable BMI1 | `DWORD` | | `1` |\r\n@@ -684,17 +686,10 @@ Name | Description | Type | Class | Default Value | Flags\r\n `partialNGenStress` |  | `DWORD` | `INTERNAL` | `0` | REGUTIL_default\r\n `ZapDoNothing` |  | `DWORD` | `INTERNAL` | `0` | REGUTIL_default\r\n \r\n-#### Performance Configuration Knobs\r\n-\r\n-Name | Description | Type | Class | Default Value | Flags\r\n------|-------------|------|-------|---------------|-------\r\n-`performanceScenario` | Activates a set of workload-specific default values for performance settings | `STRING` | `EXTERNAL` | |\r\n-\r\n #### Profiling API / ETW Configuration Knobs\r\n \r\n Name | Description | Type | Class | Default Value | Flags\r\n -----|-------------|------|-------|---------------|-------\r\n-`AttachThreadAlwaysOn` | Forces profapi attach thread to be created on startup, instead of on-demand. | `DWORD` | `EXTERNAL` | |\r\n `COR_ENABLE_PROFILING` | Flag to indicate whether profiling should be enabled for the currently running process. | `DWORD` | `EXTERNAL` | `0` | DontPrependCOMPlus_ \\| IgnoreConfigFiles\r\n `COR_PROFILER` | Specifies GUID of profiler to load into currently running process | `STRING` | `EXTERNAL` | | DontPrependCOMPlus_\r\n `COR_PROFILER_PATH` | Specifies the path to the DLL of profiler to load into currently running process | `STRING` | `EXTERNAL` | | DontPrependCOMPlus_\r\n@@ -706,21 +701,20 @@ Name | Description | Type | Class | Default Value | Flags\r\n `CORECLR_PROFILER_PATH_32` | CoreCLR only: Specifies the path to the DLL of profiler to load into currently running 32 process | `STRING` | `EXTERNAL` | | DontPrependCOMPlus_\r\n `CORECLR_PROFILER_PATH_64` | CoreCLR only: Specifies the path to the DLL of profiler to load into currently running 64 process | `STRING` | `EXTERNAL` | | DontPrependCOMPlus_\r\n `ETW_ObjectAllocationEventsPerTypePerSec` | Desired number of GCSampledObjectAllocation ETW events to be logged per type per second.  If 0, then the default built in to the implementation for the enabled event (e.g., High, Low), will be used. | `STRING` | `UNSUPPORTED` | | REGUTIL_default\r\n-`ETWEnabled` | This flag is used on OSes < Vista to enable/disable ETW. It is disabled by default | `DWORD` | `EXTERNAL` | `0` | REGUTIL_default\r\n-`MsBetweenAttachCheck` |  | `DWORD` | `EXTERNAL` | `500` |\r\n+`NativeImagePerfMapFormat` | Specifies the format of native image perfmap files generated by crossgen.  Valid options are RVA or OFFSET. | `STRING` | `EXTERNAL` | |\r\n `PerfMapEnabled` | This flag is used on Linux to enable writing /tmp/perf-$pid.map. It is disabled by default | `DWORD` | `EXTERNAL` | `0` | REGUTIL_default\r\n-`PerfMapJitDumpPath` | Specifies a path to write the perf jitdump file. Defaults to GetTempPathA() | `STRING` | `EXTERNAL` | | REGUTIL_default\r\n `PerfMapIgnoreSignal` | When perf map is enabled, this option will configure the specified signal to be accepted and ignored as a marker in the perf logs.  It is disabled by default | `DWORD` | `EXTERNAL` | `0` | REGUTIL_default\r\n-`ProfAPI_AttachProfilerMinTimeoutInMs` | Timeout in ms for the minimum time out value of AttachProfiler | `DWORD` | `EXTERNAL` | `10*1000` |\r\n+`PerfMapJitDumpPath` | Specifies a path to write the perf jitdump file. Defaults to GetTempPathA() | `STRING` | `EXTERNAL` | | REGUTIL_default\r\n+`PerfMapShowOptimizationTiers` | Shows optimization tiers in the perf map for methods, as part of the symbol name. Useful for seeing separate stack frames for different optimization tiers of each method. | `DWORD` | `EXTERNAL` | `1` |\r\n `ProfAPI_DetachMaxSleepMs` | The maximum time, in milliseconds, the CLR will wait before checking whether a profiler that is in the process of detaching is ready to be unloaded. | `DWORD` | `EXTERNAL` | `0` |\r\n `ProfAPI_DetachMinSleepMs` | The minimum time, in milliseconds, the CLR will wait before checking whether a profiler that is in the process of detaching is ready to be unloaded. | `DWORD` | `EXTERNAL` | `0` |\r\n `ProfAPI_EnableRejitDiagnostics` | Enable extra dumping to stdout of rejit structures | `DWORD` | `INTERNAL` | `0` |\r\n+`ProfApi_InliningTracking` | Enables the runtime's tracking of inlining for profiler ReJIT. | `DWORD` | `EXTERNAL` | `1` |\r\n `ProfAPI_ProfilerCompatibilitySetting` | Specifies the profiler loading policy (the default is not to load a V2 profiler in V4) | `STRING` | `EXTERNAL` | | REGUTIL_default \\| TrimWhiteSpaceFromStringValue\r\n `ProfApi_RejitOnAttach` | Enables the ability for profilers to rejit methods on attach. | `DWORD` | `EXTERNAL` | `1` |\r\n `ProfAPI_TestOnlyEnableICorProfilerInfo` | Test-only flag to allow attaching profiler tests to call ICorProfilerInfo interface, which would otherwise be disallowed for attaching profilers | `DWORD` | `INTERNAL` | `0` |\r\n `ProfAPI_ValidateNGENInstrumentation` | This flag enables additional validations when using the IMetaDataEmit APIs for NGEN'ed images to ensure only supported edits are made. | `DWORD` | `UNSUPPORTED` | `0` |\r\n `ProfAPIFault` | Test-only bitmask to inject various types of faults in the profapi code | `DWORD` | `INTERNAL` | `0` |\r\n-`ProfAPIMaxWaitForTriggerMs` | Timeout in ms for profilee to wait for each blocking operation performed by trigger app. | `DWORD` | `EXTERNAL` | `5*60*1000` |\r\n `StartupDelayMS` |  | `STRING` | `EXTERNAL` | |\r\n `TestOnlyAllowedEventMask` | Test-only bitmask to allow profiler tests to override CLR enforcement of COR_PRF_ALLOWABLE_AFTER_ATTACH and COR_PRF_MONITOR_IMMUTABLE | `DWORD` | `INTERNAL` | `0` |\r\n `TestOnlyEnableObjectAllocatedHook` | Test-only flag that forces CLR to initialize on startup as if ObjectAllocated callback were requested, to enable post-attach ObjectAllocated functionality. | `DWORD` | `INTERNAL` | `0` |\r\n@@ -802,7 +796,7 @@ Name | Description | Type | Class | Default Value | Flags\r\n `TC_CallCountingDelayMs` | A perpetual delay in milliseconds that is applied call counting in tier 0 and jitting at higher tiers, while there is startup-like activity. | `DWORD` | `INTERNAL` | `100` |\r\n `TC_CallCountThreshold` | Number of times a method must be called in tier 0 after which it is promoted to the next tier. | `DWORD` | `INTERNAL` | `30` |\r\n `TC_DelaySingleProcMultiplier` | Multiplier for TC_CallCountingDelayMs that is applied on a single-processor machine or when the process is affinitized to a single processor. | `DWORD` | `INTERNAL` | `10` |\r\n-`TC_QuickJit` | For methods that would be jitted, enable using quick JIT when appropriate. | `DWORD` | `EXTERNAL` | `0` |\r\n+`TC_QuickJit` | For methods that would be jitted, enable using quick JIT when appropriate. | `DWORD` | `EXTERNAL` | `1` |\r\n `TC_QuickJitForLoops` | When quick JIT is enabled, quick JIT may also be used for methods that contain loops. | `DWORD` | `UNSUPPORTED` | `0` |\r\n `TieredCompilation` | Enables tiered compilation | `DWORD` | `EXTERNAL` | `1` |\r\n \r\n@@ -905,7 +899,6 @@ Name | Description | Type | Class | Default Value | Flags\r\n \r\n Name | Description | Type | Class | Default Value | Flags\r\n -----|-------------|------|-------|---------------|-------\r\n-`DebugAssertOnMissedCOWPage` |  | `DWORD` | `INTERNAL` | `1` |\r\n `EnableEventLog` | Enable/disable use of EnableEventLogging mechanism  | `DWORD` | `EXTERNAL` | `0` |\r\n `EventNameFilter` |  | `STRING` | `INTERNAL` | |\r\n `EventSourceFilter` |  | `STRING` | `INTERNAL` | |\r\n@@ -916,7 +909,6 @@ Name | Description | Type | Class | Default Value | Flags\r\n `ZapBBInstrDir` |  | `STRING` | `EXTERNAL` | |\r\n `ZapDisable` |  | `DWORD` | `EXTERNAL` | `0` |\r\n `ZapExclude` |  | `STRING` | `INTERNAL` | | REGUTIL_default\r\n-`ZapLazyCOWPagesEnabled` |  | `DWORD` | `INTERNAL` | `1` |\r\n `ZapOnly` |  | `STRING` | `INTERNAL` | | REGUTIL_default\r\n `ZapRequire` |  | `DWORD` | `EXTERNAL` | |\r\n `ZapRequireExcludeList` |  | `STRING` | `EXTERNAL` | |\r\n```\r\nI bet this is a combination of editing the file directly (things would get lost) and not editing the file at all (new additions in the diff). I think it requires a bit of digging on if the removed items should actually be removed vs. were not added in the script-friendly way to `clrconfigvalues.h`.\r\n\r\nIn the TOC, note that `[ARM Configuration Knobs](#arm-configuration-knobs)` actually doesn't exist...it's a dead link today. Anyway, just discovery while doing this - is cleanup wanted there or is the generation model intended to be abandoned?\r\n\r\ncc @Maoni0 @richlander ","Url":"https://github.com/dotnet/coreclr/pull/27566","RelatedDescription":"Open PR \"GC Documentation: Update knobs doc to clarify usage\" (#27566)"},{"Id":"515077970","IsPullRequest":true,"CreatedAt":"2019-10-31T00:57:03","Actor":"trylek","Number":"27565","RawContent":null,"Title":"Fix GC stress runs","State":"open","Body":"As Jeremy discovered, my recent CoreCLR pipeline optimization change\r\nbroke GC stress tests. This change should fix the problem; I have\r\nalso deleted the platform-matrix-managed-test-build script that is\r\nno longer used.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/coreclr/pull/27565","RelatedDescription":"Open PR \"Fix GC stress runs\" (#27565)"},{"Id":"515065504","IsPullRequest":false,"CreatedAt":"2019-10-31T00:20:39","Actor":"cshung","Number":"27564","RawContent":null,"Title":"Avoid continue parsing the signature in case of missing reference assembly","State":"open","Body":"In general, when the reference assembly is not available, continue parsing the signature is impossible. There are cases in the code where we are swallowing the exception and continue, and we should fix them.\r\n\r\nA canonical example is this one:\r\nhttps://github.com/dotnet/coreclr/blob/21d651bb4613ca480cd97793fe5d854af36b765c/src/tools/r2rdump/R2RReader.cs#L476-L486\r\n\r\nThe decoding at line 479 failed due to missing reference assembly (for example, a generic instantiation that references an assembly missed from the reference assembly set) and then exception is swallowed within it, and then on line 486, we are continuing to interpret the bytes that are supposed to be belonging to the signature as something else, causing downstream failure.\r\n\r\nThere is probably more than one place we are doing this, this needs to stop.","Url":"https://github.com/dotnet/coreclr/issues/27564","RelatedDescription":"Open issue \"Avoid continue parsing the signature in case of missing reference assembly\" (#27564)"},{"Id":"515062394","IsPullRequest":true,"CreatedAt":"2019-10-31T00:12:03","Actor":"Dotnet-GitSync-Bot","Number":"27563","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"open","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/coreclr/pull/27563","RelatedDescription":"Open PR \"Mirror changes from dotnet/corefx\" (#27563)"},{"Id":"514846805","IsPullRequest":true,"CreatedAt":"2019-10-30T23:12:48","Actor":"mikem8361","Number":"27553","RawContent":null,"Title":"[release/3.1] Fix minidumps not loading in VS issue","State":"closed","Body":"Fix a function that was ifdef'ed needed for the metadata locator callbacks to work.\r\n\r\nFix some not properly DAC'ized code in the type desc and server GC code. Caused an exception during dump generation.\r\n\r\nIssue: https://github.com/dotnet/coreclr/issues/26907","Url":"https://github.com/dotnet/coreclr/pull/27553","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix minidumps not loading in VS issue\" (#27553)"},{"Id":"515020984","IsPullRequest":true,"CreatedAt":"2019-10-30T22:24:06","Actor":"jkoritzinsky","Number":"27562","RawContent":null,"Title":"Fix GC holes in array marshallers in the field scenario","State":"open","Body":"Correctly protect references to objects in manually-managed code called by the array IL marshalers in the field scenarios. Unlike the non-field scenarios where the \"managed home\" address is a local variable on the stack, the \"managed home\" address for field scenarios is a byref into the managed object. If the managed object is a layout-class, it can be relocated/collected.\r\n\r\nAlso, use RuntimeHelpers.GetRawData to simplify layout class marshalling and reduce weird IL patterns in the marshalers when there are C# methods with better readability that we can reuse.\r\n\r\nFixes #27496 \r\nFixes #27491 \r\nFixes dotnet/corefx#42201","Url":"https://github.com/dotnet/coreclr/pull/27562","RelatedDescription":"Open PR \"Fix GC holes in array marshallers in the field scenario\" (#27562)"},{"Id":"514974356","IsPullRequest":true,"CreatedAt":"2019-10-30T20:50:52","Actor":"briansull","Number":"27561","RawContent":null,"Title":"Fix #27326 - Don't decrement curOffsRegs when it is 0","State":"open","Body":"Fixes issue #27326","Url":"https://github.com/dotnet/coreclr/pull/27561","RelatedDescription":"Open PR \"Fix #27326 - Don't decrement curOffsRegs when it is 0\" (#27561)"},{"Id":"514968136","IsPullRequest":false,"CreatedAt":"2019-10-30T20:40:19","Actor":"ComradeSlice","Number":"27560","RawContent":null,"Title":"FreeBSD mscordac.exports","State":"open","Body":"When building on FreeBSD I get:\r\n\r\n```\r\nmake[2]: make[2]: don't know how to make src/dlls/mscordac/mscordac.exports. Stop\r\n\r\nmake[2]: stopped in /usr/home/james.shuriff/src/coreclr/bin/obj/FreeBSD.x64.Debug\r\n--- src/dlls/mscordac/CMakeFiles/mscordaccore_exports.dir/all ---\r\n*** [src/dlls/mscordac/CMakeFiles/mscordaccore_exports.dir/all] Error code 2\r\n```\r\n\r\nI've also had various other build issues I was able to fix with -Wno-implicit-function-declaration for libunwind and adding an explicit -L/usr/local/lib to the genLttngProvider.py linker arguments but I'm stumped on this one. Building on x86_64 FreeBSD 12.0-RELEASE with the release/2.2 branch.","Url":"https://github.com/dotnet/coreclr/issues/27560","RelatedDescription":"Open issue \"FreeBSD mscordac.exports\" (#27560)"},{"Id":"514935342","IsPullRequest":false,"CreatedAt":"2019-10-30T19:43:54","Actor":"4creators","Number":"27559","RawContent":null,"Title":"build.cmd -skippgorestore -nopgooptimize results in error: Unable to locate restored PGO package. Maybe the platform-specific package naming changed? ","State":"open","Body":"Title exactly describes the problem. Below the output of build.cmd on Windows:\r\n\r\n```cmd\r\nE:\\src\\ms\\dotnet\\coreclr>build -x64 -Checked -skiptests -skipmscorlib -skipbuildpackages -skipmanagedtools -skiprestoreoptdata\r\nBUILD: Starting Build at 20:16:56.51\r\nBUILD: Detected Visual Studio 16.0 developer command prompt environment\r\nBUILD: Commencing CoreCLR product build\r\nBUILD: Checking prerequisites\r\nBUILD: Number of processor cores 4\r\ndotnet-install: Downloading link: https://dotnetcli.azureedge.net/dotnet/Sdk/3.0.100-preview7-012821/dotnet-sdk-3.0.100-preview7-012821-win-x64.zip\r\ndotnet-install: Extracting zip from https://dotnetcli.azureedge.net/dotnet/Sdk/3.0.100-preview7-012821/dotnet-sdk-3.0.100-preview7-012821-win-x64.zip\r\ndotnet-install: Adding to current process PATH: \"E:\\src\\ms\\dotnet\\coreclr\\.dotnet\\\". Note: This change will not be visible if PowerShell was run as a child process.\r\ndotnet-install: Installation finished\r\n  Restore completed in 1.16 sec for E:\\src\\ms\\dotnet\\coreclr\\eng\\empty.csproj.\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:03.06\r\nE:\\src\\ms\\dotnet\\coreclr\\src\\.nuget\\optdata\\optdata.csproj(42,5): error : Unable to locate restored PGO package. Maybe the platform-specific package naming changed?\r\n\r\nBuild FAILED.\r\n\r\nE:\\src\\ms\\dotnet\\coreclr\\src\\.nuget\\optdata\\optdata.csproj(42,5): error : Unable to locate restored PGO package. Maybe the platform-specific package naming changed?\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:00.34\r\nBuild failed.\r\nFailed to get PGO data package path.\r\n```\r\n\r\nExpected no error due to -nopgooptimize option which so far allowed for builds without PGO data.","Url":"https://github.com/dotnet/coreclr/issues/27559","RelatedDescription":"Open issue \"build.cmd -skippgorestore -nopgooptimize results in error: Unable to locate restored PGO package. Maybe the platform-specific package naming changed? \" (#27559)"},{"Id":"514930241","IsPullRequest":true,"CreatedAt":"2019-10-30T19:34:39","Actor":"elinor-fung","Number":"27558","RawContent":null,"Title":"Populate properties of AssemblyLoadStart/Stop events","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27558","RelatedDescription":"Open PR \"Populate properties of AssemblyLoadStart/Stop events\" (#27558)"},{"Id":"514928687","IsPullRequest":false,"CreatedAt":"2019-10-30T19:31:48","Actor":"sandreenko","Number":"27557","RawContent":null,"Title":"Remove duplicates/unused code from src\\jit\\jitstd.","State":"open","Body":"[`jitstd`](https://github.com/dotnet/coreclr/tree/master/src/jit/jitstd) has methods that also exist in `std` namespace that is declared in [`src\\inc\\clr_std\\utility`.](https://github.com/dotnet/coreclr/tree/master/src/inc/clr_std)\r\n\r\nFor example `swap`, `pair`, `forward` etc.\r\nAlso, it has many methods that are unused, for example `utility::set_union`, `utility::set_difference` etc.\r\n\r\nSo the task is:\r\n\r\n- [ ] delete the duplicates, replace existing uses of `jitstd::swap/pair/*` with `std::swap/pair/*` resolving including errors along the way;\r\n- [ ] delete unused function and files after the first step (`pair.h`, `functional.h` etc).\r\n\r\nThat is a follow up from #27492.\r\n\r\nKeep that issue as a \"good first issue\" in case we have another hackathon or smth.\r\n","Url":"https://github.com/dotnet/coreclr/issues/27557","RelatedDescription":"Open issue \"Remove duplicates/unused code from src\\jit\\jitstd.\" (#27557)"},{"Id":"514881232","IsPullRequest":false,"CreatedAt":"2019-10-30T18:14:53","Actor":"kouvel","Number":"27556","RawContent":null,"Title":"Ambiguity in what `Environment.ProcessorCount` returns","State":"open","Body":"We seem to also have ambiguity about what `Environment.ProcessorCount` returns. According to the [docs](https://docs.microsoft.com/en-us/dotnet/api/system.environment.processorcount?view=netcore-3.0), it should return \"the number of processors on the current machine\".\r\n\r\n- On Windows without NUMA, it returns [`SYSTEM_INFO::dwNumberOfProcessors`](https://github.com/dotnet/coreclr/blob/db8fc1b420be60f6a2afb153dd9e645ec231ec82/src/classlibnative/bcltype/system.cpp#L350). This sounds correct. I assume that this number cannot change during the process lifetime.\r\n- On Windows with NUMA, it returns [`CPUGroupInfo::GetNumActiveProcessors`](https://github.com/dotnet/coreclr/blob/db8fc1b420be60f6a2afb153dd9e645ec231ec82/src/classlibnative/bcltype/system.cpp#L341). Can this number change during the process lifetime?\r\n- On Unix, with `HAVE_SCHED_GETAFFINITY`, it returns the process affinity at the process start: https://github.com/dotnet/coreclr/blob/6ce179a17061abbbe9f904f878943a28c8041a62/src/pal/src/misc/sysinfo.cpp#L161\r\n- On Unix ARM and ARM64, it returns `_SC_NPROCESSORS_CONF`. This sounds correct.\r\n- On Unix on other platforms, it returns `_SC_NPROCESSORS_ONLN` at the process start. That does not sound right.\r\n\r\ncc @janvorli @kouvel\r\n\r\n_Originally posted by @jkotas in https://github.com/dotnet/coreclr/pull/27543#issuecomment-547887677_","Url":"https://github.com/dotnet/coreclr/issues/27556","RelatedDescription":"Open issue \"Ambiguity in what `Environment.ProcessorCount` returns\" (#27556)"},{"Id":"514871536","IsPullRequest":true,"CreatedAt":"2019-10-30T17:59:09","Actor":"MichalStrehovsky","Number":"27555","RawContent":null,"Title":"Pass zero length array as null","State":"open","Body":"Turns out zero length arrays are passed as a pointer to the non-existing element only when the array is passed by reference. They are passed as null otherwise.","Url":"https://github.com/dotnet/coreclr/pull/27555","RelatedDescription":"Open PR \"Pass zero length array as null\" (#27555)"},{"Id":"514813062","IsPullRequest":true,"CreatedAt":"2019-10-30T17:52:38","Actor":"wtgodbe","Number":"27552","RawContent":null,"Title":"Rebrand to preview3","State":"closed","Body":"CC @jeffschwMSFT @mmitche @Anipik ","Url":"https://github.com/dotnet/coreclr/pull/27552","RelatedDescription":"Closed or merged PR \"Rebrand to preview3\" (#27552)"},{"Id":"514851541","IsPullRequest":true,"CreatedAt":"2019-10-30T17:28:06","Actor":"jkotas","Number":"27554","RawContent":null,"Title":"Implement GC.KeepAlive JIT intrinsic","State":"open","Body":"Fixes #27541","Url":"https://github.com/dotnet/coreclr/pull/27554","RelatedDescription":"Open PR \"Implement GC.KeepAlive JIT intrinsic\" (#27554)"},{"Id":"514795773","IsPullRequest":false,"CreatedAt":"2019-10-30T16:08:47","Actor":"tannergooding","Number":"27551","RawContent":null,"Title":"impAssignStructPtr incorrectly optimizes assignment when dst and src are different struct types","State":"open","Body":"As from https://github.com/dotnet/coreclr/pull/27481, on ARM32 the `Vector256<T> AsVector256<T>(Vector<T>)` method is not behaving as expected when TieredCompilation is disabled:\r\n* [JitDump_AsVector256_TC=1.txt](https://github.com/dotnet/coreclr/files/3785975/JitDump_AsVector256_TC.1.txt) -- Doesn't repro\r\n* [JitDump_AsVector256_TC=0.txt](https://github.com/dotnet/coreclr/files/3785976/JitDump_AsVector256_TC.0.txt) -- Does repro\r\n\r\nNamely, the JIT is detecting a struct initializer to have no side-effects and is therefore removing it:\r\n```\r\nremoving stmt with no side effects\r\n\r\nRemoving statement STMT00005 (IL 0x019...  ???)\r\nN003 (  5,  4) [000015] IA------R----             *  ASG       struct (init)\r\nN002 (  3,  2) [000012] D------N-----             +--*  LCL_VAR   struct V02 loc0         \r\nN001 (  1,  1) [000014] -------------             \\--*  CNS_INT   int    0\r\n in BB03 as useless:\r\n```\r\n\r\nThis appears to have been root caused to https://github.com/dotnet/coreclr/blob/80867d1b5753ea5625b63aecccab1084c84e62af/src/jit/importer.cpp#L1185-L1195 where it is failing because both `destNode` and `src` are TYP_STRUCT, but their handles differ.","Url":"https://github.com/dotnet/coreclr/issues/27551","RelatedDescription":"Open issue \"impAssignStructPtr incorrectly optimizes assignment when dst and src are different struct types\" (#27551)"},{"Id":"514768456","IsPullRequest":false,"CreatedAt":"2019-10-30T15:34:04","Actor":"Logerfo","Number":"27550","RawContent":null,"Title":"Publish single file without deps.json","State":"open","Body":"I have a custom workflow that uses a project only in the building phase, which means that this projects DLL file is not needed during the execution. However, the DLL appears in the `.deps.json` file, which causes the application to crash during the initialization phase.\r\nThe `.deps.json` file is optional, which means that the application will execute normally even if the file does not exist and, in my case, **only** if the file does not exist.\r\nFor that matter, I chose to not dig into the reason why the file contains the unused DLL. Instead, I chose to automatically delete the file with a post-build task:\r\n```csproj\r\n<Target Name=\"PostBuild\" BeforeTargets=\"PostBuildEvent\">\r\n  <Exec Command=\"del $(TargetDir)$(TargetName).deps.json\" />\r\n</Target>\r\n```\r\nNow I need to publish my application as a single file executable, but:\r\n1) If I keep the file (remove the task), the application never opens. Windows event log says that the problem is the not found DLL;\r\n2) If I delete the file (keep the task), the publish will fail:\r\n    > MSB4018: The \"GenerateBundle\" task failed unexpectedly. System.IO.FileNotFoundException: Could not find file: '...deps.json'.\r\n\r\nWhy isn't the file optional at publishing phase as well? I think there should be at least an opt-in configuration for the optionality.","Url":"https://github.com/dotnet/coreclr/issues/27550","RelatedDescription":"Open issue \"Publish single file without deps.json\" (#27550)"},{"Id":"514751221","IsPullRequest":false,"CreatedAt":"2019-10-30T15:12:09","Actor":"jaredpar","Number":"27549","RawContent":null,"Title":"Announcement: Repository Consolidation Timeline","State":"open","Body":"As we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setup moves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM on November 13th PST (1AM November 14th UTC). We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository.","Url":"https://github.com/dotnet/coreclr/issues/27549","RelatedDescription":"Open issue \"Announcement: Repository Consolidation Timeline\" (#27549)"},{"Id":"514745485","IsPullRequest":false,"CreatedAt":"2019-10-30T15:05:09","Actor":"northtyphoon","Number":"27548","RawContent":null,"Title":"collectdump failed in container","State":"open","Body":"I run an aspnetcore app in docker container (hosted in AKS). I want to collect the memory dump to investigate an issue. I terminal to the container and run the following command from shell, it failed as access denied.\r\n\r\n```\r\n/usr/share/dotnet/shared/Microsoft.NETCore.App/2.2.7/createdump 1\r\nopen (/proc/1/mem) FAILED 13 (Permission denied)\r\n```\r\nAny suggestion? ","Url":"https://github.com/dotnet/coreclr/issues/27548","RelatedDescription":"Open issue \"collectdump failed in container\" (#27548)"},{"Id":"514721664","IsPullRequest":false,"CreatedAt":"2019-10-30T14:34:48","Actor":"karmeli87","Number":"27547","RawContent":null,"Title":"Hang under Linux Ubuntu 18 and dotnet core 2.2.6 - PAL VirtualAlloc lock contention","State":"open","Body":"An application hanged on AWS r5.2xlarge which have 8 cores and 64GB of RAM.\r\n\r\nIt has more than 1k threads and most of them are awaiting at `__pthread_cond_wait`\r\nHowever there is the finalization thread at `__pthread_cond_timedwait` (not sure if it idle or not)\r\n```\r\nThread  19\r\nTEB information is not available so a stack size of 0xFFFF is assumed\r\nCurrent frame: libpthread.so.0!__pthread_cond_timedwait + 0x289\r\nChild-SP         RetAddr          Caller, Callee\r\n00007FB0824379D0 00007fb085f8cbd5 libcoreclr.so!CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*) + 0x125, calling libcoreclr.so!pthread_cond_timedwait\r\n00007FB082437A30 00007fb085f8c7f4 libcoreclr.so!CorUnix::CPalSynchronizationManager::BlockThread(CorUnix::CPalThread*, unsigned int, bool, bool, CorUnix::ThreadWakeupReason*, unsigned int*) + 0x184, calling libcoreclr.so!CorUnix::CPalSynchronizationManager::ThreadNativeWait(CorUnix::_ThreadNativeWaitData*, unsigned int, CorUnix::ThreadWakeupReason*, unsigned int*)\r\n00007FB082437A90 00007fb085f911c4 libcoreclr.so!CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 0x714\r\n00007FB082437C20 00007fb085f91541 libcoreclr.so!WaitForMultipleObjectsEx + 0x51, calling libcoreclr.so!CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int)\r\n00007FB082437C60 00007fb085c5f025 libcoreclr.so!FinalizerThread::WaitForFinalizerEvent(CLREvent*) + 0x95, calling libcoreclr.so!WaitForMultipleObjectsEx\r\n00007FB082437CA0 00007fb085c5f155 libcoreclr.so!FinalizerThread::FinalizerThreadWorker(void*) + 0x75, calling libcoreclr.so!FinalizerThread::WaitForFinalizerEvent(CLREvent*)\r\n00007FB082437CE0 00007fb085bf97df libcoreclr.so!ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 0x1af\r\n00007FB082437D00 00007fb085f87d38 libcoreclr.so!LeaveCriticalSection + 0x18, calling libcoreclr.so!pthread_getspecific\r\n00007FB082437D10 00007fb085b73da4 libcoreclr.so!CExecutionEngine::GetTlsData() + 0x14, calling libcoreclr.so!__tls_get_addr\r\n00007FB082437E00 00007fb085bfa00e libcoreclr.so!ManagedThreadBase::FinalizerBase(void (*)(void*)) + 0x5e, calling libcoreclr.so!ManagedThreadBase_DispatchOuter(ManagedThreadCallState*)\r\n00007FB082437E50 00007fb085c5f54c libcoreclr.so!FinalizerThread::FinalizerThreadStart(void*) + 0xcc, calling libcoreclr.so!ManagedThreadBase::FinalizerBase(void (*)(void*))\r\n00007FB082437E70 00007fb085c65ff1 libcoreclr.so!EEHeapFreeInProcessHeap(unsigned int, void*) + 0x31, calling libcoreclr.so!HeapFree\r\n00007FB082437E90 00007fb085b4b27d libcoreclr.so!operator delete(void*) + 0x1d\r\n00007FB082437ED0 00007fb085f97525 libcoreclr.so!CorUnix::CPalThread::ThreadEntry(void*) + 0x135\r\n00007FB082437EF0 00007fb08755e6db libpthread.so.0!start_thread + 0xdb\r\n00007FB082437FB0 00007fb08694888f libc.so.6!__GI___clone + 0x3f [/build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97]\r\n---------------------------------------------\r\n```\r\n\r\nand few that are blocked at `__lll_lock_wait` which presumably related to the GC and handling 'CriticalSection'\r\n```\r\nThread  27\r\nTEB information is not available so a stack size of 0xFFFF is assumed\r\nCurrent frame: libpthread.so.0!__lll_lock_wait + 0x1d\r\nChild-SP         RetAddr          Caller, Callee\r\n00007FAB29FFAA50 00007fb087562f02 libpthread.so.0!__pthread_mutex_cond_lock + 0x42, calling libpthread.so.0!__lll_lock_wait\r\n00007FAB29FFAA60 00007fb085f79cd9 libcoreclr.so!CorUnix::CPalObjectBase::ReleaseReference(CorUnix::CPalThread*) + 0x39\r\n00007FAB29FFAA90 00007fb085f912dd libcoreclr.so!CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 0x82d\r\n00007FAB29FFAAE0 00007fb0875648bf libpthread.so.0!__pthread_cond_wait + 0x10f, calling libpthread.so.0!__pthread_mutex_cond_lock\r\n00007FAB29FFABB0 00007fb085f87bf2 libcoreclr.so!CorUnix::InternalEnterCriticalSection(CorUnix::CPalThread*, _CRITICAL_SECTION*) + 0x1f2, calling libcoreclr.so!pthread_cond_wait\r\n00007FAB29FFAC10 00007fb085f729ec libcoreclr.so!VirtualAlloc + 0x15c, calling libcoreclr.so!CorUnix::InternalEnterCriticalSection(CorUnix::CPalThread*, _CRITICAL_SECTION*)\r\n00007FAB29FFAC60 00007fb085b4ba37 libcoreclr.so!ClrVirtualAlloc(void*, unsigned long, unsigned int, unsigned int) + 0x87\r\n00007FAB29FFACB0 00007fb085db5793 libcoreclr.so!GCToOSInterface::VirtualReset(void*, unsigned long, bool) + 0x13, calling libcoreclr.so!ClrVirtualAlloc(void*, unsigned long, unsigned int, unsigned int)\r\n00007FAB29FFACC0 00007fb085deab61 libcoreclr.so!SVR::gc_heap::make_unused_array(unsigned char*, unsigned long, int, int) + 0x61, calling libcoreclr.so!GCToOSInterface::VirtualReset(void*, unsigned long, bool)\r\n00007FAB29FFAD20 00007fb085e0bd1c libcoreclr.so!SVR::gc_heap::thread_gap(unsigned char*, unsigned long, SVR::generation*) + 0x6c, calling libcoreclr.so!SVR::gc_heap::make_unused_array(unsigned char*, unsigned long, int, int)\r\n00007FAB29FFAD50 00007fb085dfa35f libcoreclr.so!SVR::gc_heap::background_sweep() + 0x84f, calling libcoreclr.so!SVR::gc_heap::thread_gap(unsigned char*, unsigned long, SVR::generation*)\r\n00007FAB29FFADE0 00007fb085df78d3 libcoreclr.so!SVR::gc_heap::gc1() + 0x1c3, calling libcoreclr.so!SVR::gc_heap::background_sweep()\r\n00007FAB29FFAE10 00007fb085f88559 libcoreclr.so!ResetEvent + 0xb9\r\n00007FAB29FFAE50 00007fb085e10dfc libcoreclr.so!SVR::gc_heap::bgc_thread_function() + 0xcc, calling libcoreclr.so!SVR::gc_heap::gc1()\r\n00007FAB29FFAE90 00007fb085e59752 libcoreclr.so!(anonymous namespace)::CreateSuspendableThread(void (*)(void*), void*, char const*)::$_0::__invoke(void*) + 0xd2\r\n00007FAB29FFAED0 00007fb085f97525 libcoreclr.so!CorUnix::CPalThread::ThreadEntry(void*) + 0x135\r\n00007FAB29FFAEF0 00007fb08755e6db libpthread.so.0!start_thread + 0xdb\r\n00007FAB29FFAFB0 00007fb08694888f libc.so.6!__GI___clone + 0x3f [/build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97]\r\n---------------------------------------------\r\nThread  28\r\nTEB information is not available so a stack size of 0xFFFF is assumed\r\nCurrent frame: libpthread.so.0!__lll_lock_wait + 0x1d\r\nChild-SP         RetAddr          Caller, Callee\r\n00007FAB297F9A50 00007fb087562f02 libpthread.so.0!__pthread_mutex_cond_lock + 0x42, calling libpthread.so.0!__lll_lock_wait\r\n00007FAB297F9A60 00007fb085f79cd9 libcoreclr.so!CorUnix::CPalObjectBase::ReleaseReference(CorUnix::CPalThread*) + 0x39\r\n00007FAB297F9A90 00007fb085f912dd libcoreclr.so!CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 0x82d\r\n00007FAB297F9AE0 00007fb0875648bf libpthread.so.0!__pthread_cond_wait + 0x10f, calling libpthread.so.0!__pthread_mutex_cond_lock\r\n00007FAB297F9BB0 00007fb085f87bf2 libcoreclr.so!CorUnix::InternalEnterCriticalSection(CorUnix::CPalThread*, _CRITICAL_SECTION*) + 0x1f2, calling libcoreclr.so!pthread_cond_wait\r\n00007FAB297F9C10 00007fb085f729ec libcoreclr.so!VirtualAlloc + 0x15c, calling libcoreclr.so!CorUnix::InternalEnterCriticalSection(CorUnix::CPalThread*, _CRITICAL_SECTION*)\r\n00007FAB297F9C20 00007fb085f91469 libcoreclr.so!WaitForSingleObjectEx + 0x59, calling libcoreclr.so!CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int)\r\n00007FAB297F9C60 00007fb085b4ba37 libcoreclr.so!ClrVirtualAlloc(void*, unsigned long, unsigned int, unsigned int) + 0x87\r\n00007FAB297F9CB0 00007fb085db5793 libcoreclr.so!GCToOSInterface::VirtualReset(void*, unsigned long, bool) + 0x13, calling libcoreclr.so!ClrVirtualAlloc(void*, unsigned long, unsigned int, unsigned int)\r\n00007FAB297F9CC0 00007fb085deab61 libcoreclr.so!SVR::gc_heap::make_unused_array(unsigned char*, unsigned long, int, int) + 0x61, calling libcoreclr.so!GCToOSInterface::VirtualReset(void*, unsigned long, bool)\r\n00007FAB297F9D20 00007fb085e0bd1c libcoreclr.so!SVR::gc_heap::thread_gap(unsigned char*, unsigned long, SVR::generation*) + 0x6c, calling libcoreclr.so!SVR::gc_heap::make_unused_array(unsigned char*, unsigned long, int, int)\r\n00007FAB297F9D50 00007fb085dfa35f libcoreclr.so!SVR::gc_heap::background_sweep() + 0x84f, calling libcoreclr.so!SVR::gc_heap::thread_gap(unsigned char*, unsigned long, SVR::generation*)\r\n00007FAB297F9DE0 00007fb085df78d3 libcoreclr.so!SVR::gc_heap::gc1() + 0x1c3, calling libcoreclr.so!SVR::gc_heap::background_sweep()\r\n00007FAB297F9E10 00007fb085f88559 libcoreclr.so!ResetEvent + 0xb9\r\n00007FAB297F9E50 00007fb085e10dfc libcoreclr.so!SVR::gc_heap::bgc_thread_function() + 0xcc, calling libcoreclr.so!SVR::gc_heap::gc1()\r\n00007FAB297F9E90 00007fb085e59752 libcoreclr.so!(anonymous namespace)::CreateSuspendableThread(void (*)(void*), void*, char const*)::$_0::__invoke(void*) + 0xd2\r\n00007FAB297F9ED0 00007fb085f97525 libcoreclr.so!CorUnix::CPalThread::ThreadEntry(void*) + 0x135\r\n00007FAB297F9EF0 00007fb08755e6db libpthread.so.0!start_thread + 0xdb\r\n00007FAB297F9FB0 00007fb08694888f libc.so.6!__GI___clone + 0x3f [/build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97]\r\n---------------------------------------------\r\nThread  29\r\nTEB information is not available so a stack size of 0xFFFF is assumed\r\nCurrent frame: libpthread.so.0!__lll_lock_wait + 0x1d\r\nChild-SP         RetAddr          Caller, Callee\r\n00007FAB28FF8B60 00007fb087561023 libpthread.so.0!__GI___pthread_mutex_lock + 0x83, calling libpthread.so.0!__lll_lock_wait\r\n00007FAB28FF8BB0 00007fb085f87c13 libcoreclr.so!CorUnix::InternalEnterCriticalSection(CorUnix::CPalThread*, _CRITICAL_SECTION*) + 0x213, calling libcoreclr.so!pthread_mutex_unlock\r\n00007FAB28FF8BF0 00007fb085f87e39 libcoreclr.so!CorUnix::InternalLeaveCriticalSection(CorUnix::CPalThread*, _CRITICAL_SECTION*) + 0x69, calling libcoreclr.so!pthread_mutex_lock\r\n00007FAB28FF8C10 00007fb085f72af2 libcoreclr.so!VirtualAlloc + 0x262, calling libcoreclr.so!CorUnix::InternalLeaveCriticalSection(CorUnix::CPalThread*, _CRITICAL_SECTION*)\r\n00007FAB28FF8C60 00007fb085b4ba37 libcoreclr.so!ClrVirtualAlloc(void*, unsigned long, unsigned int, unsigned int) + 0x87\r\n00007FAB28FF8CB0 00007fb085db5793 libcoreclr.so!GCToOSInterface::VirtualReset(void*, unsigned long, bool) + 0x13, calling libcoreclr.so!ClrVirtualAlloc(void*, unsigned long, unsigned int, unsigned int)\r\n00007FAB28FF8CC0 00007fb085deab61 libcoreclr.so!SVR::gc_heap::make_unused_array(unsigned char*, unsigned long, int, int) + 0x61, calling libcoreclr.so!GCToOSInterface::VirtualReset(void*, unsigned long, bool)\r\n00007FAB28FF8D20 00007fb085e0bd1c libcoreclr.so!SVR::gc_heap::thread_gap(unsigned char*, unsigned long, SVR::generation*) + 0x6c, calling libcoreclr.so!SVR::gc_heap::make_unused_array(unsigned char*, unsigned long, int, int)\r\n00007FAB28FF8D50 00007fb085dfa35f libcoreclr.so!SVR::gc_heap::background_sweep() + 0x84f, calling libcoreclr.so!SVR::gc_heap::thread_gap(unsigned char*, unsigned long, SVR::generation*)\r\n00007FAB28FF8DE0 00007fb085df78d3 libcoreclr.so!SVR::gc_heap::gc1() + 0x1c3, calling libcoreclr.so!SVR::gc_heap::background_sweep()\r\n00007FAB28FF8E10 00007fb085f88559 libcoreclr.so!ResetEvent + 0xb9\r\n00007FAB28FF8E50 00007fb085e10dfc libcoreclr.so!SVR::gc_heap::bgc_thread_function() + 0xcc, calling libcoreclr.so!SVR::gc_heap::gc1()\r\n00007FAB28FF8E90 00007fb085e59752 libcoreclr.so!(anonymous namespace)::CreateSuspendableThread(void (*)(void*), void*, char const*)::$_0::__invoke(void*) + 0xd2\r\n00007FAB28FF8ED0 00007fb085f97525 libcoreclr.so!CorUnix::CPalThread::ThreadEntry(void*) + 0x135\r\n00007FAB28FF8EF0 00007fb08755e6db libpthread.so.0!start_thread + 0xdb\r\n00007FAB28FF8FB0 00007fb08694888f libc.so.6!__GI___clone + 0x3f [/build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97]\r\n---------------------------------------------\r\nThread  30\r\nTEB information is not available so a stack size of 0xFFFF is assumed\r\nCurrent frame: libpthread.so.0!__lll_lock_wait + 0x1d\r\nChild-SP         RetAddr          Caller, Callee\r\n00007FAAF7FFEB60 00007fb087561023 libpthread.so.0!__GI___pthread_mutex_lock + 0x83, calling libpthread.so.0!__lll_lock_wait\r\n00007FAAF7FFEB88 00007fb0875627df libpthread.so.0!__GI___pthread_mutex_unlock + 0x3f, calling libpthread.so.0!__lll_unlock_wake\r\n00007FAAF7FFEBF0 00007fb085f87e39 libcoreclr.so!CorUnix::InternalLeaveCriticalSection(CorUnix::CPalThread*, _CRITICAL_SECTION*) + 0x69, calling libcoreclr.so!pthread_mutex_lock\r\n00007FAAF7FFEC10 00007fb085f72af2 libcoreclr.so!VirtualAlloc + 0x262, calling libcoreclr.so!CorUnix::InternalLeaveCriticalSection(CorUnix::CPalThread*, _CRITICAL_SECTION*)\r\n00007FAAF7FFEC20 00007fb085f91469 libcoreclr.so!WaitForSingleObjectEx + 0x59, calling libcoreclr.so!CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int)\r\n00007FAAF7FFEC60 00007fb085b4ba37 libcoreclr.so!ClrVirtualAlloc(void*, unsigned long, unsigned int, unsigned int) + 0x87\r\n00007FAAF7FFECB0 00007fb085db5793 libcoreclr.so!GCToOSInterface::VirtualReset(void*, unsigned long, bool) + 0x13, calling libcoreclr.so!ClrVirtualAlloc(void*, unsigned long, unsigned int, unsigned int)\r\n00007FAAF7FFECC0 00007fb085deab61 libcoreclr.so!SVR::gc_heap::make_unused_array(unsigned char*, unsigned long, int, int) + 0x61, calling libcoreclr.so!GCToOSInterface::VirtualReset(void*, unsigned long, bool)\r\n00007FAAF7FFED20 00007fb085e0bd1c libcoreclr.so!SVR::gc_heap::thread_gap(unsigned char*, unsigned long, SVR::generation*) + 0x6c, calling libcoreclr.so!SVR::gc_heap::make_unused_array(unsigned char*, unsigned long, int, int)\r\n00007FAAF7FFED50 00007fb085dfa35f libcoreclr.so!SVR::gc_heap::background_sweep() + 0x84f, calling libcoreclr.so!SVR::gc_heap::thread_gap(unsigned char*, unsigned long, SVR::generation*)\r\n00007FAAF7FFEDE0 00007fb085df78d3 libcoreclr.so!SVR::gc_heap::gc1() + 0x1c3, calling libcoreclr.so!SVR::gc_heap::background_sweep()\r\n00007FAAF7FFEE10 00007fb085f88559 libcoreclr.so!ResetEvent + 0xb9\r\n00007FAAF7FFEE50 00007fb085e10dfc libcoreclr.so!SVR::gc_heap::bgc_thread_function() + 0xcc, calling libcoreclr.so!SVR::gc_heap::gc1()\r\n00007FAAF7FFEE90 00007fb085e59752 libcoreclr.so!(anonymous namespace)::CreateSuspendableThread(void (*)(void*), void*, char const*)::$_0::__invoke(void*) + 0xd2\r\n00007FAAF7FFEED0 00007fb085f97525 libcoreclr.so!CorUnix::CPalThread::ThreadEntry(void*) + 0x135\r\n00007FAAF7FFEEF0 00007fb08755e6db libpthread.so.0!start_thread + 0xdb\r\n00007FAAF7FFEFB0 00007fb08694888f libc.so.6!__GI___clone + 0x3f [/build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97]\r\n00007FAAF8000648 00007f8ca24d7ed0 00007f8ca24d7ed0, calling 00007f8ca24dfe71\r\n00007FAAF8000650 00007f8ca24d7ed0 00007f8ca24d7ed0, calling 00007f8ca24dfe71\r\n---------------------------------------------\r\nThread  31\r\nTEB information is not available so a stack size of 0xFFFF is assumed\r\nCurrent frame: libpthread.so.0!__lll_lock_wait + 0x1d\r\nChild-SP         RetAddr          Caller, Callee\r\n00007FAAF77FDA50 00007fb087562f02 libpthread.so.0!__pthread_mutex_cond_lock + 0x42, calling libpthread.so.0!__lll_lock_wait\r\n00007FAAF77FDA70 00007fb085de083f libcoreclr.so!CheckPromoted(Object**, unsigned long*, unsigned long, unsigned long) + 0x1f\r\n00007FAAF77FDA90 00007fb085de0793 libcoreclr.so!ClearDependentHandle(Object**, unsigned long*, unsigned long, unsigned long) + 0x23\r\n00007FAAF77FDAB0 00007fb085e5dff5 libcoreclr.so!BlockScanBlocksWithUserData(TableSegment*, unsigned int, unsigned int, ScanCallbackInfo*) + 0x95\r\n00007FAAF77FDAE0 00007fb0875648bf libpthread.so.0!__pthread_cond_wait + 0x10f, calling libpthread.so.0!__pthread_mutex_cond_lock\r\n00007FAAF77FDBB0 00007fb085f87bf2 libcoreclr.so!CorUnix::InternalEnterCriticalSection(CorUnix::CPalThread*, _CRITICAL_SECTION*) + 0x1f2, calling libcoreclr.so!pthread_cond_wait\r\n00007FAAF77FDC10 00007fb085f729ec libcoreclr.so!VirtualAlloc + 0x15c, calling libcoreclr.so!CorUnix::InternalEnterCriticalSection(CorUnix::CPalThread*, _CRITICAL_SECTION*)\r\n00007FAAF77FDC60 00007fb085b4ba37 libcoreclr.so!ClrVirtualAlloc(void*, unsigned long, unsigned int, unsigned int) + 0x87\r\n00007FAAF77FDCB0 00007fb085db5793 libcoreclr.so!GCToOSInterface::VirtualReset(void*, unsigned long, bool) + 0x13, calling libcoreclr.so!ClrVirtualAlloc(void*, unsigned long, unsigned int, unsigned int)\r\n00007FAAF77FDCC0 00007fb085deab61 libcoreclr.so!SVR::gc_heap::make_unused_array(unsigned char*, unsigned long, int, int) + 0x61, calling libcoreclr.so!GCToOSInterface::VirtualReset(void*, unsigned long, bool)\r\n00007FAAF77FDD20 00007fb085e0bd1c libcoreclr.so!SVR::gc_heap::thread_gap(unsigned char*, unsigned long, SVR::generation*) + 0x6c, calling libcoreclr.so!SVR::gc_heap::make_unused_array(unsigned char*, unsigned long, int, int)\r\n00007FAAF77FDD50 00007fb085dfa35f libcoreclr.so!SVR::gc_heap::background_sweep() + 0x84f, calling libcoreclr.so!SVR::gc_heap::thread_gap(unsigned char*, unsigned long, SVR::generation*)\r\n00007FAAF77FDDE0 00007fb085df78d3 libcoreclr.so!SVR::gc_heap::gc1() + 0x1c3, calling libcoreclr.so!SVR::gc_heap::background_sweep()\r\n00007FAAF77FDE10 00007fb085f88559 libcoreclr.so!ResetEvent + 0xb9\r\n00007FAAF77FDE50 00007fb085e10dfc libcoreclr.so!SVR::gc_heap::bgc_thread_function() + 0xcc, calling libcoreclr.so!SVR::gc_heap::gc1()\r\n00007FAAF77FDE90 00007fb085e59752 libcoreclr.so!(anonymous namespace)::CreateSuspendableThread(void (*)(void*), void*, char const*)::$_0::__invoke(void*) + 0xd2\r\n00007FAAF77FDED0 00007fb085f97525 libcoreclr.so!CorUnix::CPalThread::ThreadEntry(void*) + 0x135\r\n00007FAAF77FDEF0 00007fb08755e6db libpthread.so.0!start_thread + 0xdb\r\n00007FAAF77FDFB0 00007fb08694888f libc.so.6!__GI___clone + 0x3f [/build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97]\r\n---------------------------------------------\r\nThread  32\r\nTEB information is not available so a stack size of 0xFFFF is assumed\r\nCurrent frame: libpthread.so.0!__lll_lock_wait + 0x1d\r\nChild-SP         RetAddr          Caller, Callee\r\n00007FAAF6FFCB60 00007fb087561023 libpthread.so.0!__GI___pthread_mutex_lock + 0x83, calling libpthread.so.0!__lll_lock_wait\r\n00007FAAF6FFCB88 00007faaf6ffcc10 00007faaf6ffcc10, calling 00007faaf7004bb2\r\n00007FAAF6FFCBB0 00007fb085f87c13 libcoreclr.so!CorUnix::InternalEnterCriticalSection(CorUnix::CPalThread*, _CRITICAL_SECTION*) + 0x213, calling libcoreclr.so!pthread_mutex_unlock\r\n00007FAAF6FFCBF0 00007fb085f87e39 libcoreclr.so!CorUnix::InternalLeaveCriticalSection(CorUnix::CPalThread*, _CRITICAL_SECTION*) + 0x69, calling libcoreclr.so!pthread_mutex_lock\r\n00007FAAF6FFCC00 00007fa2e8ed4000 00007fa2e8ed4000, calling 00007fa2e8edbfa2\r\n00007FAAF6FFCC10 00007fb085f72af2 libcoreclr.so!VirtualAlloc + 0x262, calling libcoreclr.so!CorUnix::InternalLeaveCriticalSection(CorUnix::CPalThread*, _CRITICAL_SECTION*)\r\n00007FAAF6FFCC20 00007fb085f91469 libcoreclr.so!WaitForSingleObjectEx + 0x59, calling libcoreclr.so!CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int)\r\n00007FAAF6FFCC30 00007fa2e8ed4000 00007fa2e8ed4000, calling 00007fa2e8edbfa2\r\n00007FAAF6FFCC60 00007fb085b4ba37 libcoreclr.so!ClrVirtualAlloc(void*, unsigned long, unsigned int, unsigned int) + 0x87\r\n00007FAAF6FFCCB0 00007fb085db5793 libcoreclr.so!GCToOSInterface::VirtualReset(void*, unsigned long, bool) + 0x13, calling libcoreclr.so!ClrVirtualAlloc(void*, unsigned long, unsigned int, unsigned int)\r\n00007FAAF6FFCCC0 00007fb085deab61 libcoreclr.so!SVR::gc_heap::make_unused_array(unsigned char*, unsigned long, int, int) + 0x61, calling libcoreclr.so!GCToOSInterface::VirtualReset(void*, unsigned long, bool)\r\n00007FAAF6FFCD18 00007faaf6ffcd50 00007faaf6ffcd50, calling 00007faaf7004cf2\r\n00007FAAF6FFCD20 00007fb085e0bd1c libcoreclr.so!SVR::gc_heap::thread_gap(unsigned char*, unsigned long, SVR::generation*) + 0x6c, calling libcoreclr.so!SVR::gc_heap::make_unused_array(unsigned char*, unsigned long, int, int)\r\n00007FAAF6FFCD50 00007fb085dfa35f libcoreclr.so!SVR::gc_heap::background_sweep() + 0x84f, calling libcoreclr.so!SVR::gc_heap::thread_gap(unsigned char*, unsigned long, SVR::generation*)\r\n00007FAAF6FFCDE0 00007fb085df78d3 libcoreclr.so!SVR::gc_heap::gc1() + 0x1c3, calling libcoreclr.so!SVR::gc_heap::background_sweep()\r\n00007FAAF6FFCE10 00007fb085f88559 libcoreclr.so!ResetEvent + 0xb9\r\n00007FAAF6FFCE50 00007fb085e10dfc libcoreclr.so!SVR::gc_heap::bgc_thread_function() + 0xcc, calling libcoreclr.so!SVR::gc_heap::gc1()\r\n00007FAAF6FFCE90 00007fb085e59752 libcoreclr.so!(anonymous namespace)::CreateSuspendableThread(void (*)(void*), void*, char const*)::$_0::__invoke(void*) + 0xd2\r\n00007FAAF6FFCED0 00007fb085f97525 libcoreclr.so!CorUnix::CPalThread::ThreadEntry(void*) + 0x135\r\n00007FAAF6FFCEF0 00007fb08755e6db libpthread.so.0!start_thread + 0xdb\r\n00007FAAF6FFCFB0 00007fb08694888f libc.so.6!__GI___clone + 0x3f [/build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97]\r\n---------------------------------------------\r\nThread  33\r\nTEB information is not available so a stack size of 0xFFFF is assumed\r\nCurrent frame: libpthread.so.0!__lll_lock_wait + 0x1d\r\nChild-SP         RetAddr          Caller, Callee\r\n00007FAAF67FBA50 00007fb087562f02 libpthread.so.0!__pthread_mutex_cond_lock + 0x42, calling libpthread.so.0!__lll_lock_wait\r\n00007FAAF67FBA60 00007fb085f79cd9 libcoreclr.so!CorUnix::CPalObjectBase::ReleaseReference(CorUnix::CPalThread*) + 0x39\r\n00007FAAF67FBA90 00007fb085f912dd libcoreclr.so!CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int) + 0x82d\r\n00007FAAF67FBAE0 00007fb0875648bf libpthread.so.0!__pthread_cond_wait + 0x10f, calling libpthread.so.0!__pthread_mutex_cond_lock\r\n00007FAAF67FBBB0 00007fb085f87bf2 libcoreclr.so!CorUnix::InternalEnterCriticalSection(CorUnix::CPalThread*, _CRITICAL_SECTION*) + 0x1f2, calling libcoreclr.so!pthread_cond_wait\r\n00007FAAF67FBC10 00007fb085f729ec libcoreclr.so!VirtualAlloc + 0x15c, calling libcoreclr.so!CorUnix::InternalEnterCriticalSection(CorUnix::CPalThread*, _CRITICAL_SECTION*)\r\n00007FAAF67FBC20 00007fb085f91469 libcoreclr.so!WaitForSingleObjectEx + 0x59, calling libcoreclr.so!CorUnix::InternalWaitForMultipleObjectsEx(CorUnix::CPalThread*, unsigned int, void* const*, int, unsigned int, int, int)\r\n00007FAAF67FBC60 00007fb085b4ba37 libcoreclr.so!ClrVirtualAlloc(void*, unsigned long, unsigned int, unsigned int) + 0x87\r\n00007FAAF67FBCB0 00007fb085db5793 libcoreclr.so!GCToOSInterface::VirtualReset(void*, unsigned long, bool) + 0x13, calling libcoreclr.so!ClrVirtualAlloc(void*, unsigned long, unsigned int, unsigned int)\r\n00007FAAF67FBCC0 00007fb085deab61 libcoreclr.so!SVR::gc_heap::make_unused_array(unsigned char*, unsigned long, int, int) + 0x61, calling libcoreclr.so!GCToOSInterface::VirtualReset(void*, unsigned long, bool)\r\n00007FAAF67FBD20 00007fb085e0bd1c libcoreclr.so!SVR::gc_heap::thread_gap(unsigned char*, unsigned long, SVR::generation*) + 0x6c, calling libcoreclr.so!SVR::gc_heap::make_unused_array(unsigned char*, unsigned long, int, int)\r\n00007FAAF67FBD50 00007fb085dfa35f libcoreclr.so!SVR::gc_heap::background_sweep() + 0x84f, calling libcoreclr.so!SVR::gc_heap::thread_gap(unsigned char*, unsigned long, SVR::generation*)\r\n00007FAAF67FBDE0 00007fb085df78d3 libcoreclr.so!SVR::gc_heap::gc1() + 0x1c3, calling libcoreclr.so!SVR::gc_heap::background_sweep()\r\n00007FAAF67FBE10 00007fb085f88559 libcoreclr.so!ResetEvent + 0xb9\r\n00007FAAF67FBE50 00007fb085e10dfc libcoreclr.so!SVR::gc_heap::bgc_thread_function() + 0xcc, calling libcoreclr.so!SVR::gc_heap::gc1()\r\n00007FAAF67FBE90 00007fb085e59752 libcoreclr.so!(anonymous namespace)::CreateSuspendableThread(void (*)(void*), void*, char const*)::$_0::__invoke(void*) + 0xd2\r\n00007FAAF67FBED0 00007fb085f97525 libcoreclr.so!CorUnix::CPalThread::ThreadEntry(void*) + 0x135\r\n00007FAAF67FBEF0 00007fb08755e6db libpthread.so.0!start_thread + 0xdb\r\n00007FAAF67FBFB0 00007fb08694888f libc.so.6!__GI___clone + 0x3f [/build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:97]\r\n---------------------------------------------\r\n```\r\n\r\nThis is not something reproducible and we had to restart the machine, so all I have right now is the full `eestack`.  ","Url":"https://github.com/dotnet/coreclr/issues/27547","RelatedDescription":"Open issue \"Hang under Linux Ubuntu 18 and dotnet core 2.2.6 - PAL VirtualAlloc lock contention\" (#27547)"},{"Id":"514624295","IsPullRequest":false,"CreatedAt":"2019-10-30T12:19:52","Actor":"liiri","Number":"27546","RawContent":null,"Title":"How to debug program terminating with uncaught exception of type PAL_SEHException","State":"open","Body":"I'm testing how my dotnet core application behaves on no internet connection. The program always crashes with\r\n\r\n```\r\nlibc++abi.dylib: terminating with uncaught exception of type PAL_SEHException\r\n```\r\nI tried to find what command is triggering it but could not find it by manual trial and error.\r\n\r\nI know it has something to do with the network connection since I don't get this crash when network is stable. I'm seeing fine responses from my external API calls (failing with WebException).\r\n\r\nHow can I debug this?\r\n\r\nI'm using dotnet core `3.0.100` and `OSX 10.14.5`","Url":"https://github.com/dotnet/coreclr/issues/27546","RelatedDescription":"Open issue \"How to debug program terminating with uncaught exception of type PAL_SEHException\" (#27546)"},{"Id":"514557552","IsPullRequest":false,"CreatedAt":"2019-10-30T10:36:46","Actor":"adamsitnik","Number":"27545","RawContent":null,"Title":"Some System.Math methods are slower on Linux","State":"open","Body":"I know that @tannergooding is aware of this problem, the goal of this issue is to track this difference.\r\n\r\n```log\r\n  Operating System: Ubuntu 18.04.3 LTS\r\n  Kernel: Linux 4.15.0-66-generic\r\n  Architecture: x86-64\r\n```\r\n\r\n\r\n| Slower                             | Lin/Win | Win Median (ns) | Lin Median (ns) | Modality|\r\n| ---------------------------------- | -------:| ---------------:| ---------------:| --------:|\r\n| System.MathBenchmarks.Double.Log10 |    2.65 |        33007.81 |        87377.67 |         |\r\n| System.MathBenchmarks.Double.Tan   |    2.38 |        35724.84 |        84962.04 |         |\r\n| System.MathBenchmarks.Double.Tanh  |    2.36 |        30740.39 |        72599.71 |         |\r\n| System.MathBenchmarks.Double.Log   |    2.27 |        30167.45 |        68601.42 |         |\r\n| System.MathBenchmarks.Single.Tanh  |    2.09 |        30841.95 |        64380.41 |         |\r\n| System.MathBenchmarks.Double.Exp   |    1.98 |        30664.80 |        60690.88 |         |\r\n| System.MathBenchmarks.Double.Cos   |    1.73 |        34771.40 |        60302.41 |         |\r\n| System.MathBenchmarks.Double.Atan  |    1.71 |        36068.64 |        61519.15 |         |\r\n| System.MathBenchmarks.Single.Tan   |    1.70 |        28023.28 |        47518.78 |         |\r\n| System.MathBenchmarks.Double.Sin   |    1.64 |        30243.80 |        49700.56 |         |\r\n| System.MathBenchmarks.Single.Sinh  |    1.41 |        51766.23 |        72770.61 |         |\r\n| System.MathBenchmarks.Double.Atan2 |    1.35 |        83593.96 |       112919.34 |         |\r\n| System.MathBenchmarks.Double.Pow   |    1.33 |       150783.62 |       200252.56 |         |\r\n| System.MathBenchmarks.Single.Log10 |    1.33 |        27941.41 |        37070.20 |         |\r\n| System.MathBenchmarks.Single.Atan2 |    1.24 |        55150.96 |        68594.50 |         |\r\n| System.MathBenchmarks.Single.Exp   |    1.21 |        25007.72 |        30219.17 |         |\r\n| System.MathBenchmarks.Single.ILogB |    1.18 |        25150.55 |        29565.47 |         |\r\n| System.MathBenchmarks.Single.Atan  |    1.15 |        28287.01 |        32637.26 |         |\r\n| System.MathBenchmarks.Double.ILogB |    1.09 |        26461.51 |        28958.54 |         |\r\n| System.MathBenchmarks.Double.Sinh  |    1.09 |        61913.71 |        67701.47 |         |\r\n\r\n| Faster                              | base/diff | Win Median (ns) | Lin Median (ns) | Modality|\r\n| ----------------------------------- | ---------:| ---------------:| ---------------:| --------:|\r\n| System.MathBenchmarks.Single.ScaleB |      8.27 |       218656.86 |        26429.65 |         |\r\n| System.MathBenchmarks.Double.ScaleB |      6.70 |       187523.74 |        27982.89 |         |\r\n| System.MathBenchmarks.Single.Log2   |      4.95 |       112273.57 |        22676.69 |         |\r\n| System.MathBenchmarks.Double.Cbrt   |      3.21 |       225640.63 |        70400.98 |         |\r\n| System.MathBenchmarks.Single.Cbrt   |      2.75 |       174730.42 |        63505.97 |         |\r\n| System.MathBenchmarks.Single.Acosh  |      1.68 |        88747.63 |        52749.32 |         |\r\n| System.MathBenchmarks.Double.Asinh  |      1.51 |       126682.20 |        84071.64 |         |\r\n| System.MathBenchmarks.Single.Sin    |      1.43 |        30199.89 |        21081.45 |         |\r\n| System.MathBenchmarks.Single.Cos    |      1.37 |        30516.63 |        22221.49 |         |\r\n| System.MathBenchmarks.Single.Asin   |      1.35 |        36137.70 |        26684.82 |         |\r\n| System.MathBenchmarks.Single.Asinh  |      1.31 |       108885.46 |        83032.52 |         |\r\n| System.MathBenchmarks.Double.Asin   |      1.22 |        55290.31 |        45233.87 |         |\r\n| System.MathBenchmarks.Single.Cosh   |      1.18 |        47673.41 |        40552.20 |         |\r\n| System.MathBenchmarks.Single.Acos   |      1.13 |        34760.29 |        30737.36 |         |\r\n| System.MathBenchmarks.Single.Log    |      1.11 |        26502.90 |        23915.95 |         |\r\n| System.MathBenchmarks.Double.Atanh  |      1.09 |        75313.10 |        68834.58 |         |\r\n| System.MathBenchmarks.Single.Atanh  |      1.07 |        68894.80 |        64466.47 |         |\r\n\r\n\r\nThe [benchmarks](https://github.com/dotnet/performance/tree/19733ffe853bc3384cf94c6e250bb8d661938e86/src/benchmarks/micro/coreclr/Math/Functions):\r\n\r\n```cmd\r\ngit clone https://github.com/dotnet/performance.git\r\npython3 ./performance/scripts/benchmarks_ci.py -f netcoreapp5.0 --filter 'System.MathBenchmarks*'\r\n```\r\n\r\nRecommended profiler is [VTune](https://github.com/dotnet/performance/blob/master/docs/profiling-workflow-corefx.md#VTune).\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/27545","RelatedDescription":"Open issue \"Some System.Math methods are slower on Linux\" (#27545)"},{"Id":"514486601","IsPullRequest":false,"CreatedAt":"2019-10-30T08:40:41","Actor":"juliusfriedman","Number":"27544","RawContent":null,"Title":"Cannot build on openSUSE Tumbleweed","State":"open","Body":"libttng nor it's devel counterpart is not easily found.. please advise ","Url":"https://github.com/dotnet/coreclr/issues/27544","RelatedDescription":"Open issue \"Cannot build on openSUSE Tumbleweed\" (#27544)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"515138069","IsPullRequest":true,"CreatedAt":"2019-10-31T04:10:27","Actor":"dotnet-maestro[bot]","Number":"13005","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191030.9\r\n- **Date Produced**: 10/31/2019 2:01 AM\r\n- **Commit**: 11a84e25b49677b52b06768a7cba3619eb7e8cf1\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19530.9\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13005","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13005)"},{"Id":"514208619","IsPullRequest":true,"CreatedAt":"2019-10-31T03:48:02","Actor":"dotnet-maestro-bot","Number":"12994","RawContent":null,"Title":"[automated] Merge branch 'release/3.0.1xx' => 'release/3.1.1xx'","State":"closed","Body":"I detected changes in the release/3.0.1xx branch which have not been merged yet to release/3.1.1xx. I'm a robot and am configured to help you automatically keep release/3.1.1xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0.1xx by the following committers:\n\n* @dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0.1xx-to-release/3.1.1xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0.1xx-to-release/3.1.1xx release/3.1.1xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.0.1xx-to-release/3.1.1xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0.1xx-to-release/3.1.1xx release/3.1.1xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.0.1xx-to-release/3.1.1xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.0.1xx-to-release/3.1.1xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/12994","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0.1xx' => 'release/3.1.1xx'\" (#12994)"},{"Id":"515081226","IsPullRequest":true,"CreatedAt":"2019-10-31T01:35:28","Actor":"dotnet-maestro[bot]","Number":"13004","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191030.7\r\n- **Date Produced**: 10/31/2019 12:16 AM\r\n- **Commit**: fb710543566de826da30550e45bdbc60deb2cee0\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19530.7\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13004","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13004)"},{"Id":"514954030","IsPullRequest":true,"CreatedAt":"2019-10-31T01:02:27","Actor":"dotnet-maestro[bot]","Number":"13000","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191030.8\r\n- **Date Produced**: 10/30/2019 11:32 PM\r\n- **Commit**: 55c8dd25c3f337f9e7098ad787534bd04454b113\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19530.8\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13000","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13000)"},{"Id":"515056603","IsPullRequest":true,"CreatedAt":"2019-10-30T23:57:49","Actor":"wli3","Number":"13003","RawContent":null,"Title":"Remove signature on MAC host for dotnet tools","State":"open","Body":"Part of https://github.com/dotnet/sdk/issues/3773\r\n\r\n@swaroop-sridhar","Url":"https://github.com/dotnet/cli/pull/13003","RelatedDescription":"Open PR \"Remove signature on MAC host for dotnet tools\" (#13003)"},{"Id":"515027110","IsPullRequest":true,"CreatedAt":"2019-10-30T23:25:48","Actor":"dotnet-maestro[bot]","Number":"13002","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191030.6\r\n- **Date Produced**: 10/30/2019 9:55 PM\r\n- **Commit**: 958de2e07848f1a1ea808ba7999432b1e257d77e\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19530.6\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13002","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13002)"},{"Id":"515027000","IsPullRequest":true,"CreatedAt":"2019-10-30T22:35:13","Actor":"dotnet-maestro[bot]","Number":"13001","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191030.5\r\n- **Date Produced**: 10/30/2019 9:20 PM\r\n- **Commit**: 4950751278293d59898be799c0115e0ad895747e\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview3.19530.5\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19530.5\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview3.19530.5\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview3.19530.5\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview3.19530.5\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview3.19530.5\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview3.19530.2 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13001","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13001)"},{"Id":"514354126","IsPullRequest":true,"CreatedAt":"2019-10-30T21:00:37","Actor":"dotnet-maestro[bot]","Number":"12996","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191030.4\r\n- **Date Produced**: 10/30/2019 6:59 PM\r\n- **Commit**: ce871036d2f45c3268a9463cc5405958c4f5b3f7\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview3.19530.4\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19530.4\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview3.19530.4\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview3.19530.4\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview3.19530.4\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview3.19530.4\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12996","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12996)"},{"Id":"514849640","IsPullRequest":true,"CreatedAt":"2019-10-30T18:00:35","Actor":"dotnet-maestro[bot]","Number":"12999","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191030.3\r\n- **Date Produced**: 10/30/2019 4:40 PM\r\n- **Commit**: 8e3075d3915a55f90b2c9e35d975e476964cd014\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19530.3\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12999","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12999)"},{"Id":"514583177","IsPullRequest":true,"CreatedAt":"2019-10-30T12:10:40","Actor":"dotnet-maestro[bot]","Number":"12998","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191030.1\r\n- **Date Produced**: 10/30/2019 10:32 AM\r\n- **Commit**: 6a09111e0fc54a895f6975af796c8133fdd47fd6\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19530.1\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12998","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12998)"},{"Id":"514410126","IsPullRequest":true,"CreatedAt":"2019-10-30T06:00:27","Actor":"dotnet-maestro[bot]","Number":"12997","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191029.5\r\n- **Date Produced**: 10/30/2019 4:44 AM\r\n- **Commit**: 2aa52a135c1a1fc0d6cebbc333af20571f5057e9\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19529.5\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12997","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12997)"},{"Id":"514331983","IsPullRequest":true,"CreatedAt":"2019-10-30T01:55:29","Actor":"dotnet-maestro[bot]","Number":"12995","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191029.4\r\n- **Date Produced**: 10/30/2019 12:31 AM\r\n- **Commit**: c0f6cf7488d21f13d9e96b0e87e77851be0e350d\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19529.4\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12995","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12995)"},{"Id":"514088711","IsPullRequest":true,"CreatedAt":"2019-10-29T20:36:54","Actor":"dotnet-maestro[bot]","Number":"12992","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191029.1\r\n- **Date Produced**: 10/29/2019 4:57 PM\r\n- **Commit**: 5c9dd04241f307f1aa6b3643d5e07ea89a1dad4a\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.101-servicing.19529.1\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12992","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#12992)"},{"Id":"513870495","IsPullRequest":true,"CreatedAt":"2019-10-29T20:08:07","Actor":"dotnet-bot","Number":"12991","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/12991","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#12991)"},{"Id":"514126953","IsPullRequest":true,"CreatedAt":"2019-10-29T18:55:32","Actor":"dotnet-maestro[bot]","Number":"12993","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191028.7\r\n- **Date Produced**: 10/29/2019 5:33 PM\r\n- **Commit**: 2c6456d4634df947e3cafd5e7dee02289dc12697\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.1-servicing.19528.7\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12993","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#12993)"},{"Id":"513732709","IsPullRequest":true,"CreatedAt":"2019-10-29T07:40:28","Actor":"dotnet-maestro[bot]","Number":"12990","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191028.8\r\n- **Date Produced**: 10/29/2019 6:20 AM\r\n- **Commit**: 471e4710a818849eaf22c5977281d10fd6758616\r\n- **Branch**: refs/heads/release/3.1-preview2\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview2.19528.8\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12990","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12990)"},{"Id":"513655119","IsPullRequest":true,"CreatedAt":"2019-10-29T02:55:30","Actor":"dotnet-maestro[bot]","Number":"12989","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191028.5\r\n- **Date Produced**: 10/29/2019 1:48 AM\r\n- **Commit**: 2163fbce7a27c22ca133f7bce59781aac7ba6044\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.101-servicing.19528.5\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12989","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#12989)"},{"Id":"512994628","IsPullRequest":true,"CreatedAt":"2019-10-29T00:58:17","Actor":"dotnet-maestro[bot]","Number":"12988","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191028.2\r\n- **Date Produced**: 10/28/2019 8:47 PM\r\n- **Commit**: 334812443d8bb11afa51a7efd2f8de83e321e6e1\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19528.2\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12988","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12988)"},{"Id":"512815421","IsPullRequest":true,"CreatedAt":"2019-10-26T10:15:26","Actor":"dotnet-maestro[bot]","Number":"12987","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191025.8\r\n- **Date Produced**: 10/26/2019 9:01 AM\r\n- **Commit**: 7ef5dd3af4868fcd69778c922b48e1f429fb0aa6\r\n- **Branch**: refs/heads/release/3.1-preview2\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview2.19525.8\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12987","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12987)"},{"Id":"512758072","IsPullRequest":true,"CreatedAt":"2019-10-26T04:17:19","Actor":"dotnet-maestro[bot]","Number":"12985","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191025.7\r\n- **Date Produced**: 10/26/2019 2:56 AM\r\n- **Commit**: e48fd678f261a8e0aeb7a4a968b353f922f42a69\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19525.7\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12985","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12985)"},{"Id":"512759931","IsPullRequest":true,"CreatedAt":"2019-10-26T01:28:42","Actor":"dotnet-maestro[bot]","Number":"12986","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191025.6\r\n- **Date Produced**: 10/25/2019 10:26 PM\r\n- **Commit**: 5672978d912db81b4b677fddff264907a47ec9a8\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19525.6\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19525.6\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19525.6\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19525.6\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19525.6\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19525.6\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview2.19523.17 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12986","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12986)"},{"Id":"512740188","IsPullRequest":true,"CreatedAt":"2019-10-25T22:45:35","Actor":"dotnet-maestro[bot]","Number":"12984","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191025.4\r\n- **Date Produced**: 10/25/2019 9:38 PM\r\n- **Commit**: 5d0fe6572a2f7a11fe5eabdee4800002e111e726\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19525.4\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12984","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#12984)"},{"Id":"512104952","IsPullRequest":true,"CreatedAt":"2019-10-25T21:59:05","Actor":"mmitche","Number":"12976","RawContent":null,"Title":"Switch to label.N form for pre-release label","State":"closed","Body":"In order to facilitate better preview sorting, switch to label.N form for the pre-release label.\r\n","Url":"https://github.com/dotnet/cli/pull/12976","RelatedDescription":"Closed or merged PR \"Switch to label.N form for pre-release label\" (#12976)"},{"Id":"512720351","IsPullRequest":true,"CreatedAt":"2019-10-25T21:57:52","Actor":"wli3","Number":"12983","RawContent":null,"Title":"Port to release/3.1.1xx - Fix eventProperties.Add mutate _commonProperties","State":"closed","Body":"port of this https://github.com/dotnet/cli/pull/12899","Url":"https://github.com/dotnet/cli/pull/12983","RelatedDescription":"Closed or merged PR \"Port to release/3.1.1xx - Fix eventProperties.Add mutate _commonProperties\" (#12983)"},{"Id":"512678822","IsPullRequest":false,"CreatedAt":"2019-10-25T19:20:03","Actor":"klausenbusk","Number":"12982","RawContent":null,"Title":"dotnet build sometimes exit with a success exit code on build failure","State":"open","Body":"## Steps to reproduce\r\nWe are using `dotnet build -warnaserror` and [StyleCop](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/) as part of you CI which run in Docker. I haven't been able to reproduce the problem locally outside docker.\r\n\r\nI did observe that the error order is different in the last run, which strengthens my belief that is is some kind of race condition (I'm wondering if this is already fixed with https://github.com/dotnet/cli/pull/10921?).\r\n```\r\n$ docker run --workdir /workspace --rm --entrypoint \"dotnet\" -v $PWD:\"/workspace\" mcr.microsoft.com/dotnet/core/sdk:2.2-alpine new mvc -n foobar\r\n$ cd foobar\r\n$ docker run --workdir /workspace --rm --entrypoint \"dotnet\" -v $PWD:\"/workspace\" mcr.microsoft.com/dotnet/core/sdk:2.2-alpine add package StyleCop.Analyzers\r\n$ docker run --workdir /workspace --rm --entrypoint \"dotnet\" -v $PWD:\"/workspace\" mcr.microsoft.com/dotnet/core/sdk:2.2-alpine build -warnaserror; echo $?\r\nMicrosoft (R) Build Engine version 16.2.32702+c4012a063 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 2.03 sec for /workspace/foobar.csproj.\r\nControllers/HomeController.cs(9,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(3,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nProgram.cs(11,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(13,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1210: Using directives should be ordered alphabetically by the namespaces. [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(48,17): error SA1515: Single-line comment should be preceded by blank line [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(10,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(11,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(33,1): error SA1507: Code should not contain multiple blank lines in a row [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(9,60): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(20,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(15,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nStartup.cs(19,13): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,82): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nCSC : error SA0001: XML comment analysis is disabled due to project configuration [/workspace/foobar.csproj]\r\n  foobar -> /workspace/bin/Debug/netcoreapp2.2/foobar.dll\r\n  foobar -> /workspace/bin/Debug/netcoreapp2.2/foobar.Views.dll\r\n\r\nBuild FAILED.\r\n\r\nControllers/HomeController.cs(9,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(3,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nProgram.cs(11,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(13,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1210: Using directives should be ordered alphabetically by the namespaces. [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(48,17): error SA1515: Single-line comment should be preceded by blank line [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(10,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(11,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(33,1): error SA1507: Code should not contain multiple blank lines in a row [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(9,60): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(20,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(15,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nStartup.cs(19,13): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,82): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nCSC : error SA0001: XML comment analysis is disabled due to project configuration [/workspace/foobar.csproj]\r\n    0 Warning(s)\r\n    46 Error(s)\r\n\r\nTime Elapsed 00:00:06.37\r\n1\r\n$ docker run --workdir /workspace --rm --entrypoint \"dotnet\" -v $PWD:\"/workspace\" mcr.microsoft.com/dotnet/core/sdk:2.2-alpine build -warnaserror; echo $?\r\nMicrosoft (R) Build Engine version 16.2.32702+c4012a063 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 2.07 sec for /workspace/foobar.csproj.\r\nControllers/HomeController.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(9,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nProgram.cs(11,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(3,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1210: Using directives should be ordered alphabetically by the namespaces. [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(13,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(10,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(11,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(33,1): error SA1507: Code should not contain multiple blank lines in a row [/workspace/foobar.csproj]\r\nStartup.cs(48,17): error SA1515: Single-line comment should be preceded by blank line [/workspace/foobar.csproj]\r\nStartup.cs(19,13): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(15,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(20,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(9,60): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,82): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nCSC : error SA0001: XML comment analysis is disabled due to project configuration [/workspace/foobar.csproj]\r\n  foobar -> /workspace/bin/Debug/netcoreapp2.2/foobar.dll\r\n  foobar -> /workspace/bin/Debug/netcoreapp2.2/foobar.Views.dll\r\n\r\nBuild FAILED.\r\n\r\nControllers/HomeController.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(9,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nProgram.cs(11,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(3,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1210: Using directives should be ordered alphabetically by the namespaces. [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(13,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(10,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(11,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(33,1): error SA1507: Code should not contain multiple blank lines in a row [/workspace/foobar.csproj]\r\nStartup.cs(48,17): error SA1515: Single-line comment should be preceded by blank line [/workspace/foobar.csproj]\r\nStartup.cs(19,13): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(15,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(20,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(9,60): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,82): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nCSC : error SA0001: XML comment analysis is disabled due to project configuration [/workspace/foobar.csproj]\r\n    0 Warning(s)\r\n    46 Error(s)\r\n\r\nTime Elapsed 00:00:05.91\r\n1\r\n$ docker run --workdir /workspace --rm --entrypoint \"dotnet\" -v $PWD:\"/workspace\" mcr.microsoft.com/dotnet/core/sdk:2.2-alpine build -warnaserror; echo $?\r\nMicrosoft (R) Build Engine version 16.2.32702+c4012a063 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 2.84 sec for /workspace/foobar.csproj.\r\nControllers/HomeController.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(9,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(3,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nProgram.cs(11,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1210: Using directives should be ordered alphabetically by the namespaces. [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(13,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(10,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(11,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(48,17): error SA1515: Single-line comment should be preceded by blank line [/workspace/foobar.csproj]\r\nStartup.cs(33,1): error SA1507: Code should not contain multiple blank lines in a row [/workspace/foobar.csproj]\r\nStartup.cs(19,13): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(9,60): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(15,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(20,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,82): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nCSC : error SA0001: XML comment analysis is disabled due to project configuration [/workspace/foobar.csproj]\r\n  foobar -> /workspace/bin/Debug/netcoreapp2.2/foobar.dll\r\n  foobar -> /workspace/bin/Debug/netcoreapp2.2/foobar.Views.dll\r\n\r\nBuild FAILED.\r\n\r\nControllers/HomeController.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(9,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(3,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nProgram.cs(11,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1210: Using directives should be ordered alphabetically by the namespaces. [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(13,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(10,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(11,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(48,17): error SA1515: Single-line comment should be preceded by blank line [/workspace/foobar.csproj]\r\nStartup.cs(33,1): error SA1507: Code should not contain multiple blank lines in a row [/workspace/foobar.csproj]\r\nStartup.cs(19,13): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(9,60): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(15,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(20,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,82): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nCSC : error SA0001: XML comment analysis is disabled due to project configuration [/workspace/foobar.csproj]\r\n    0 Warning(s)\r\n    46 Error(s)\r\n\r\nTime Elapsed 00:00:07.02\r\n1\r\n$ docker run --workdir /workspace --rm --entrypoint \"dotnet\" -v $PWD:\"/workspace\" mcr.microsoft.com/dotnet/core/sdk:2.2-alpine build -warnaserror; echo $?\r\nMicrosoft (R) Build Engine version 16.2.32702+c4012a063 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 2.62 sec for /workspace/foobar.csproj.\r\nControllers/HomeController.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1210: Using directives should be ordered alphabetically by the namespaces. [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(9,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nProgram.cs(11,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(3,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(13,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(10,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(11,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(33,1): error SA1507: Code should not contain multiple blank lines in a row [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(48,17): error SA1515: Single-line comment should be preceded by blank line [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(9,60): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nStartup.cs(19,13): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(20,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(15,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,82): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nCSC : error SA0001: XML comment analysis is disabled due to project configuration [/workspace/foobar.csproj]\r\n  foobar -> /workspace/bin/Debug/netcoreapp2.2/foobar.dll\r\n  foobar -> /workspace/bin/Debug/netcoreapp2.2/foobar.Views.dll\r\n\r\nBuild FAILED.\r\n\r\nControllers/HomeController.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1210: Using directives should be ordered alphabetically by the namespaces. [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(9,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nProgram.cs(11,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(3,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(13,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(10,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(11,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(33,1): error SA1507: Code should not contain multiple blank lines in a row [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(48,17): error SA1515: Single-line comment should be preceded by blank line [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(9,60): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nStartup.cs(19,13): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(20,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(15,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,82): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nCSC : error SA0001: XML comment analysis is disabled due to project configuration [/workspace/foobar.csproj]\r\n    0 Warning(s)\r\n    46 Error(s)\r\n\r\nTime Elapsed 00:00:06.51\r\n1\r\n$ docker run --workdir /workspace --rm --entrypoint \"dotnet\" -v $PWD:\"/workspace\" mcr.microsoft.com/dotnet/core/sdk:2.2-alpine build -warnaserror; echo $?\r\nMicrosoft (R) Build Engine version 16.2.32702+c4012a063 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 2.77 sec for /workspace/foobar.csproj.\r\nControllers/HomeController.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(9,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(3,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nProgram.cs(11,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1210: Using directives should be ordered alphabetically by the namespaces. [/workspace/foobar.csproj]\r\nStartup.cs(13,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(10,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(11,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(48,17): error SA1515: Single-line comment should be preceded by blank line [/workspace/foobar.csproj]\r\nStartup.cs(33,1): error SA1507: Code should not contain multiple blank lines in a row [/workspace/foobar.csproj]\r\nStartup.cs(19,13): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(15,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(20,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(9,60): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,82): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nCSC : error SA0001: XML comment analysis is disabled due to project configuration [/workspace/foobar.csproj]\r\n  foobar -> /workspace/bin/Debug/netcoreapp2.2/foobar.dll\r\n  foobar -> /workspace/bin/Debug/netcoreapp2.2/foobar.Views.dll\r\n\r\nBuild FAILED.\r\n\r\nControllers/HomeController.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(9,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(3,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nProgram.cs(11,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(6,1): error SA1210: Using directives should be ordered alphabetically by the namespaces. [/workspace/foobar.csproj]\r\nStartup.cs(13,11): error SA1300: Element 'foobar' should begin with an uppercase letter [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nProgram.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(2,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(3,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(4,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(5,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(6,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(7,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(8,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(9,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(10,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(11,1): error SA1200: Using directive should appear within a namespace declaration [/workspace/foobar.csproj]\r\nStartup.cs(1,1): error SA1633: The file header is missing or not located at the top of the file. [/workspace/foobar.csproj]\r\nStartup.cs(48,17): error SA1515: Single-line comment should be preceded by blank line [/workspace/foobar.csproj]\r\nStartup.cs(33,1): error SA1507: Code should not contain multiple blank lines in a row [/workspace/foobar.csproj]\r\nStartup.cs(19,13): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(15,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(20,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nModels/ErrorViewModel.cs(9,60): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,20): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nControllers/HomeController.cs(26,82): error SA1101: Prefix local calls with this [/workspace/foobar.csproj]\r\nCSC : error SA0001: XML comment analysis is disabled due to project configuration [/workspace/foobar.csproj]\r\n    0 Warning(s)\r\n    46 Error(s)\r\n\r\nTime Elapsed 00:00:06.66\r\n0\r\n```\r\n\r\n## Expected  behavior\r\n`dotnet build` should always return with a non-zero exit code on build failure.\r\n\r\n## Actual behavior\r\nSometimes `dotnet build` exit with a success exit code on build failure.\r\n\r\n## Environment data\r\n```\r\n$ docker run --entrypoint \"dotnet\" mcr.microsoft.com/dotnet/core/sdk:2.2-alpine --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.402\r\n Commit:    c7f2f96116\r\n\r\nRuntime Environment:\r\n OS Name:     alpine\r\n OS Version:  3.9\r\n OS Platform: Linux\r\n RID:         alpine.3.9-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.2.402/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.7\r\n  Commit:  b1e29ae826\r\n\r\n.NET Core SDKs installed:\r\n  2.2.402 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12982","RelatedDescription":"Open issue \"dotnet build sometimes exit with a success exit code on build failure\" (#12982)"},{"Id":"512619530","IsPullRequest":false,"CreatedAt":"2019-10-25T16:56:49","Actor":"huoyaoyuan","Number":"12981","RawContent":null,"Title":"How to consume native dependencies via ProjectReference?","State":"open","Body":"Opening at this repository because requiring something like #1841.\r\n\r\n## Steps to reproduce\r\nWe are publishing some native dependencies via csproj:\r\n```xml\r\n  <ItemGroup>\r\n    <NativeLibs Include=\"$(MSBuildThisFileDirectory)runtimes\\**\\*.dll*\" />\r\n    <NativeLibs Include=\"$(MSBuildThisFileDirectory)runtimes\\**\\*.so\" />\r\n    <NativeLibs Include=\"$(MSBuildThisFileDirectory)runtimes\\**\\*.a\" />\r\n    <NativeLibs Include=\"$(MSBuildThisFileDirectory)runtimes\\**\\*.dylib\" />\r\n    <None Include=\"@(NativeLibs)\">\r\n      <Pack>true</Pack>\r\n      <PackageCopyToOutput>true</PackageCopyToOutput>\r\n      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n    </None>\r\n    <None Include=\"_._\">\r\n      <Pack>true</Pack>\r\n      <PackagePath>lib/netstandard2.0</PackagePath>\r\n    </None>\r\n  </ItemGroup>\r\n```\r\nThe native libraries are correctly packaged into `runtimes\\win-x64\\native\\*.dll` and other rids.\r\nA test application sits in the same repository, using `ProjectReference` to consume the library.\r\nThe test application's `.deps.json` is missing entry for native dependencies, causing them failed to load at runtime.\r\nHowever, if I put the `nupkg` into local source and consume it via `PackageReference`, it's getting native libraries in `.deps.json`.\r\n\r\nAre we packaging it in the wrong way? What's the standard packaging to consume by source?\r\nI cannot find a popular library consuming native packages via project reference. Looked `SQLitePCLRaw.lib.e_sqlite3` and `runtime.native.System.Data.SqlClient.sni`, their tests are consuming them via `PackageReference`.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK（反映任何 global.json）:                                                                                   Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\n运行时环境:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12981","RelatedDescription":"Open issue \"How to consume native dependencies via ProjectReference?\" (#12981)"},{"Id":"512467959","IsPullRequest":false,"CreatedAt":"2019-10-25T11:40:11","Actor":"verdie-g","Number":"12980","RawContent":null,"Title":"Invalid option '7.3' for /langversion when using .NET Core 2.X","State":"open","Body":"## Steps to reproduce\r\n1. Create a new project targetting .NET Core 2.X\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n2. Use a C# 7.1 feature\r\n```csharp\r\nnamespace Test\r\n{\r\n    class Program\r\n    {\r\n        public static void Main()\r\n        {\r\n            int n = default;\r\n        }\r\n    }\r\n}\r\n```\r\n3. Use a SDK 2.X by creating a global.json file\r\n```json\r\n{\r\n  \"sdk\": {\r\n    \"version\": \"2.1.102\"\r\n  }\r\n}\r\n```\r\n4. Build the project\r\n`dotnet build Test`\r\n\r\n## Expected  behavior\r\nAccording to the page [C# language versioning](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/configure-language-version), .NET Core 2.X should be using C# 7.3 by default. So the above should build correctly.\r\n\r\nTested with SDK 2.1.102, 2.1.202, 2.1.507, 2.1.508.\r\n\r\nFrom 2.1.801 and later the build suceeds.\r\n\r\n## Actual behavior\r\n`Program.cs(7,21): error CS8107: Feature 'default literal' is not available in C# 7.0. Please use language version 7.1 or greater.`\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Command Line Tools (2.1.102)\r\n\r\nProduct Information:\r\n Version:            2.1.102\r\n Commit SHA-1 hash:  8d409357db\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.102\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  2.1.102 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.508 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.107 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview7-012821 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview7.19365.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview7-27912-14 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview7-27912-14 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12980","RelatedDescription":"Open issue \"Invalid option '7.3' for /langversion when using .NET Core 2.X\" (#12980)"},{"Id":"512149448","IsPullRequest":false,"CreatedAt":"2019-10-25T06:01:59","Actor":"maurei","Number":"12977","RawContent":null,"Title":"dotnet build -o /some-folder fails: Access to the path /some-folder\" is denied","State":"closed","Body":"## Steps to reproduce\r\n1. Create a boilerplate .net core 3 app, eg console app (I used Visual Studio Mac 8.3.4)\r\n2. run ` dotnet build -o /test`\r\n\r\n## Expected  behavior\r\nA working build\r\n\r\n## Actual behavior\r\n```\r\n  Restore completed in 55.54 ms for /Users/moeys/Code/test/test/test.csproj.\r\n/usr/local/share/dotnet/sdk/3.0.100/Microsoft.Common.CurrentVersion.targets(1124,5): warning MSB3191: Unable to create directory \"/test/\". Access to the path '/test/' is denied. [/Users/moeys/Code/test/test/test.csproj]\r\n/usr/local/share/dotnet/sdk/3.0.100/Microsoft.Common.CurrentVersion.targets(4563,5): error MSB3021: Unable to copy file \"/Users/moeys/Code/test/test/appsettings.json\" to \"/test/appsettings.json\". Access to the path '/test' is denied. [/Users/moeys/Code/test/test/test.csproj]\r\n/usr/local/share/dotnet/sdk/3.0.100/Microsoft.Common.CurrentVersion.targets(4563,5): error MSB3021: Unable to copy file \"/Users/moeys/Code/test/test/Properties/launchSettings.json\" to \"/test/Properties/launchSettings.json\". Access to the path '/test/Properties' is denied. [/Users/moeys/Code/test/test/test.csproj]\r\n/usr/local/share/dotnet/sdk/3.0.100/Microsoft.Common.CurrentVersion.targets(4563,5): error MSB3021: Unable to copy file \"/Users/moeys/Code/test/test/obj/Debug/netcoreapp3.0/test\" to \"/test/test\". Access to the path '/test' is denied. [/Users/moeys/Code/test/test/test.csproj]\r\n/usr/local/share/dotnet/sdk/3.0.100/Microsoft.Common.CurrentVersion.targets(4563,5): error MSB3021: Unable to copy file \"/Users/moeys/Code/test/test/appsettings.Development.json\" to \"/test/appsettings.Development.json\". Access to the path '/test' is denied. [/Users/moeys/Code/test/test/test.csproj]\r\n\r\nBuild FAILED.\r\n\r\n/usr/local/share/dotnet/sdk/3.0.100/Microsoft.Common.CurrentVersion.targets(1124,5): warning MSB3191: Unable to create directory \"/test/\". Access to the path '/test/' is denied. [/Users/moeys/Code/test/test/test.csproj]\r\n/usr/local/share/dotnet/sdk/3.0.100/Microsoft.Common.CurrentVersion.targets(4563,5): error MSB3021: Unable to copy file \"/Users/moeys/Code/test/test/appsettings.json\" to \"/test/appsettings.json\". Access to the path '/test' is denied. [/Users/moeys/Code/test/test/test.csproj]\r\n/usr/local/share/dotnet/sdk/3.0.100/Microsoft.Common.CurrentVersion.targets(4563,5): error MSB3021: Unable to copy file \"/Users/moeys/Code/test/test/Properties/launchSettings.json\" to \"/test/Properties/launchSettings.json\". Access to the path '/test/Properties' is denied. [/Users/moeys/Code/test/test/test.csproj]\r\n/usr/local/share/dotnet/sdk/3.0.100/Microsoft.Common.CurrentVersion.targets(4563,5): error MSB3021: Unable to copy file \"/Users/moeys/Code/test/test/obj/Debug/netcoreapp3.0/test\" to \"/test/test\". Access to the path '/test' is denied. [/Users/moeys/Code/test/test/test.csproj]\r\n/usr/local/share/dotnet/sdk/3.0.100/Microsoft.Common.CurrentVersion.targets(4563,5): error MSB3021: Unable to copy file \"/Users/moeys/Code/test/test/appsettings.Development.json\" to \"/test/appsettings.Development.json\". Access to the path '/test' is denied. [/Users/moeys/Code/test/test/test.csproj]\r\n    1 Warning(s)\r\n    4 Error(s)\r\n\r\nTime Elapsed 00:00:01.04\r\n```\r\n\r\n## Environment data\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  2.1.700 [/usr/local/share/dotnet/sdk]\r\n  2.2.301 [/usr/local/share/dotnet/sdk]\r\n  3.0.100 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12977","RelatedDescription":"Closed issue \"dotnet build -o /some-folder fails: Access to the path /some-folder\" is denied\" (#12977)"},{"Id":"512271623","IsPullRequest":true,"CreatedAt":"2019-10-25T03:10:29","Actor":"dotnet-maestro[bot]","Number":"12978","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191024.9\r\n- **Date Produced**: 10/25/2019 1:43 AM\r\n- **Commit**: 2f1029e3b0b783ad0f4b878f7356928106c10726\r\n- **Branch**: refs/heads/release/3.1-preview2\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview2.19524.9\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12978","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12978)"},{"Id":"512272045","IsPullRequest":false,"CreatedAt":"2019-10-25T02:42:10","Actor":"khteh","Number":"12979","RawContent":null,"Title":"Razor build server (process 27970) failed to shut down: The shutdown command failed: The application to execute does not exist","State":"open","Body":"## Steps to reproduce\r\n`$ dotnet build-server shutdown` error:\r\n```\r\nRazor build server (process 27970) failed to shut down: The shutdown command failed: The application to execute does not exist: '/usr/share/dotnet/sdk/NuGetFallbackFolder/microsoft.aspnetcore.razor.design/2.2.0/tools/rzc.dll'\r\n```\r\nWhy does it look for 2.2.0 when I am using 3.0?\r\n## Expected  behavior\r\nShutdown properly without error\r\n\r\n## Actual behavior\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n$ dn --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  19.04\r\n OS Platform: Linux\r\n RID:         ubuntu.19.04-x64\r\n Base Path:   /usr/share/dotnet-3.0.100/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [/usr/share/dotnet-3.0.100/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet-3.0.100/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet-3.0.100/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12979","RelatedDescription":"Open issue \"Razor build server (process 27970) failed to shut down: The shutdown command failed: The application to execute does not exist\" (#12979)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"507439996","IsPullRequest":true,"CreatedAt":"2019-10-30T20:46:03","Actor":"crummel","Number":"1612","RawContent":null,"Title":"Source-build improvements.","State":"closed","Body":"- Always restore, even in source-build.  This is required so we get NETStandard.Library netstandard2.0 reference bits for inclusion in the NETStandard.Library we are building.\r\n  - Also make this error out in source-build if it fails like it does in the standalone build.\r\n- Sourcelink is now supported in source-build.\r\n\r\nI'm still testing this out in source-build but does it look like what you were thinking of @ericstj?","Url":"https://github.com/dotnet/standard/pull/1612","RelatedDescription":"Closed or merged PR \"Source-build improvements.\" (#1612)"},{"Id":"514625134","IsPullRequest":true,"CreatedAt":"2019-10-30T12:31:21","Actor":"dotnet-maestro[bot]","Number":"1634","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191029.15\r\n- **Date Produced**: 10/30/2019 3:37 AM\r\n- **Commit**: 8ee61dd103ff55445f8baf3137bb768ed86370d9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19529.15\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19529.15\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19529.15\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1634","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1634)"},{"Id":"513879230","IsPullRequest":true,"CreatedAt":"2019-10-29T12:32:35","Actor":"dotnet-maestro[bot]","Number":"1633","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191028.12\r\n- **Date Produced**: 10/29/2019 2:19 AM\r\n- **Commit**: 15e1ea023d2818b6083a61c7447a720ff3779482\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19528.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19528.12\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19528.12\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1633","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1633)"},{"Id":"513668220","IsPullRequest":false,"CreatedAt":"2019-10-29T03:17:07","Actor":"2300070","Number":"1632","RawContent":null,"Title":"A bug while the 'TypeBuilder' class processing the value type generic argument for generic definition.","State":"open","Body":"I define a class to inherit existen generic type definition, however, the base type has one generic argument, the type I processing has two generic argument, and I want the second generic as the generic argument of base type, so I write the code below, but the strange thing is: if the first generic argument is class type(though it is not used by any place), it works fine, but if I change it to a value type, an exception will thrown('Unable to read memory'), is there any problem while the 'TypeBuilder' class processing the generic arguments?\r\n\r\n\t[TestClass]\r\n\tpublic class GeneralTest\r\n\t{\r\n\t\t[TestMethod]\r\n\t\tpublic void TestDefineGenericType()\r\n\t\t{\r\n\t\t\tAssemblyBuilder assembly = AssemblyBuilder.DefineDynamicAssembly(new AssemblyName(\"GeneralTest\"), AssemblyBuilderAccess.RunAndCollect);\r\n\t\t\tModuleBuilder module = assembly.DefineDynamicModule(\"GeneralTest.dll\");\r\n\r\n\t\t\t//define type\r\n\t\t\tTypeBuilder builder = module.DefineType(\"TestGenericClass\");\r\n\t\t\tGenericTypeParameterBuilder[] arguments = builder.DefineGenericParameters(\"TValue1\", \"TValue2\");\r\n\t\t\t\r\n\t\t\tbuilder.SetParent(typeof(TestClass<>).MakeGenericType(arguments[1]));\r\n\r\n\t\t\t//define constructor that invoke base constructor\r\n\t\t\tConstructorBuilder constructor = builder.DefineConstructor(MethodAttributes.Public, CallingConventions.Standard, new Type[] {arguments[1] });\r\n\t\t\tILGenerator generator = constructor.GetILGenerator();\r\n\t\t\tgenerator.Emit(OpCodes.Ldarg_0);\r\n\t\t\tgenerator.Emit(OpCodes.Ldarg_1);\r\n\t\t\tgenerator.Emit(OpCodes.Call, typeof(TestClass<>).GetConstructors(BindingFlags.Public | BindingFlags.Instance)[0]);\r\n\t\t\tgenerator.Emit(OpCodes.Ret);\r\n\t\t\t\r\n\t\t\tType builtType = builder.CreateType();\r\n\t\t\tType testType;\r\n\t\t\tTestClass<string> test;\r\n\r\n\t\t\t//this test is okay.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(object), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\tAssert.AreEqual(string.Empty, test.Value);//OK\r\n\r\n\t\t\t//change the first generic argument to value type, exception will be thrown.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(int), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\t//Assert.AreEqual(string.Empty, test.Value);//ERROR WHILE READ THE FIELD OF 'test'\r\n\r\n\t\t\t\r\n\t\t\t//change the first generic argument to class type back, exception disapear.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(string), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\tAssert.AreEqual(string.Empty, test.Value);//OK\r\n\t\t}\r\n\r\n\t\tpublic class TestClass<TValue>\r\n\t\t{\r\n\t\t\tpublic readonly TValue Value;\r\n\r\n\t\t\tpublic Type ValueType => typeof(TValue);\r\n\r\n\t\t\tpublic TestClass(TValue value)\r\n\t\t\t{\r\n\t\t\t\tthis.Value = value;\r\n\t\t\t}\r\n\t\t}\r\n\t}","Url":"https://github.com/dotnet/standard/issues/1632","RelatedDescription":"Open issue \"A bug while the 'TypeBuilder' class processing the value type generic argument for generic definition.\" (#1632)"},{"Id":"513270667","IsPullRequest":true,"CreatedAt":"2019-10-28T12:31:05","Actor":"dotnet-maestro[bot]","Number":"1631","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191027.5\r\n- **Date Produced**: 10/28/2019 8:28 AM\r\n- **Commit**: 17c14aa2b50cfb5920d03ea8835c9a4932b5359c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19527.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19527.5\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19527.5\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1631","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1631)"},{"Id":"512958771","IsPullRequest":true,"CreatedAt":"2019-10-27T12:45:49","Actor":"dotnet-maestro[bot]","Number":"1630","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191026.6\r\n- **Date Produced**: 10/27/2019 2:42 AM\r\n- **Commit**: 0d0336cc9c3a04d7e23af38698b215a2955e965f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19526.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19526.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19526.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1630","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1630)"},{"Id":"512829066","IsPullRequest":true,"CreatedAt":"2019-10-26T12:30:59","Actor":"dotnet-maestro[bot]","Number":"1629","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191025.6\r\n- **Date Produced**: 10/26/2019 7:24 AM\r\n- **Commit**: 8245ee1e8f6063ccc7a3a60cafe821d29e85b02f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19525.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19525.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19525.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1629","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1629)"},{"Id":"512485574","IsPullRequest":true,"CreatedAt":"2019-10-25T12:31:13","Actor":"dotnet-maestro[bot]","Number":"1628","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191024.14\r\n- **Date Produced**: 10/25/2019 4:12 AM\r\n- **Commit**: 0954a975f972546314bd3ac4eb6e0a6380a85701\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19524.14\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19524.14\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19524.14\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1628","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1628)"},{"Id":"512430892","IsPullRequest":false,"CreatedAt":"2019-10-25T10:18:18","Actor":"lockeduan","Number":"1627","RawContent":null,"Title":"standard 2.1 DbParameter.DbType can never set to DbType.Time","State":"open","Body":"i'm trying to set parameter DbType to Time, but the result is that it wrongly set to DateTime instead\r\n\r\n```\r\ndbParameter.DbType = DbType.Time;\r\n```","Url":"https://github.com/dotnet/standard/issues/1627","RelatedDescription":"Open issue \"standard 2.1 DbParameter.DbType can never set to DbType.Time\" (#1627)"},{"Id":"511908253","IsPullRequest":true,"CreatedAt":"2019-10-24T12:36:46","Actor":"dotnet-maestro[bot]","Number":"1626","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191023.8\r\n- **Date Produced**: 10/23/2019 8:34 PM\r\n- **Commit**: be22fd85b2ceb377de87e6bda006f819569fec3a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19523.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19523.8\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19523.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1626","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1626)"},{"Id":"511790862","IsPullRequest":false,"CreatedAt":"2019-10-24T08:32:00","Actor":"jrahma","Number":"1625","RawContent":null,"Title":"Easier way to upload Images using PostAsync","State":"open","Body":"Hi,\r\n\r\nIt will be great if you provide an easier way to directly uplaod images using PosyAsync without having to use MediaTypeHeaderValue\r\n\r\nFor example:\r\n\r\n```\r\nvar content = new FormUrlEncodedContent(new[]\r\n{\r\n    new KeyValuePair<string, string>(\"channel\", TextBoxNewChannelName.Text),\r\n    new KeyValuePair<string, ImageStream>(\"logo\", channel_logo),\r\n});\r\n\r\n```","Url":"https://github.com/dotnet/standard/issues/1625","RelatedDescription":"Open issue \"Easier way to upload Images using PostAsync\" (#1625)"},{"Id":"511593656","IsPullRequest":false,"CreatedAt":"2019-10-23T21:58:36","Actor":"devon94","Number":"1624","RawContent":null,"Title":"Cannot serialize System.Globalization.NumberFormatInfo into binary stream","State":"open","Body":"Hey there,\r\n\r\nI was trying to serialize NumberFormatInfo into a binary stream using the following code:\r\n\r\n`\r\n\r\n            var locale = user?.Locale;\r\n            var cultureInfo = new System.Globalization.CultureInfo(locale);\r\n\r\n            using (var ms = new MemoryStream())\r\n            {\r\n                new BinaryFormatter().Serialize(ms, cultureInfo.NumberFormat);\r\n                return ms.ToArray();\r\n            }\r\n`\r\n\r\nIt worked when we were using mscorlib 4.0.0 but not after migrating to dotnet standard. It looks like it used to have the Serialization attribute in for that class but in dotnet standard those attributes seems to be missing. \r\n\r\nWas it intentional to make the NumberFormatInfo not serializable? Thanks!","Url":"https://github.com/dotnet/standard/issues/1624","RelatedDescription":"Open issue \"Cannot serialize System.Globalization.NumberFormatInfo into binary stream\" (#1624)"},{"Id":"511285257","IsPullRequest":true,"CreatedAt":"2019-10-23T12:30:19","Actor":"dotnet-maestro[bot]","Number":"1623","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191023.1\r\n- **Date Produced**: 10/23/2019 8:47 AM\r\n- **Commit**: b8cb521e83456bd81dc314c0625d6236d7955bd9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19523.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19523.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19523.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1623","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1623)"},{"Id":"510619350","IsPullRequest":true,"CreatedAt":"2019-10-22T12:32:26","Actor":"dotnet-maestro[bot]","Number":"1621","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191021.4\r\n- **Date Produced**: 10/21/2019 11:38 PM\r\n- **Commit**: 46299619e290936c495264162ede68354ced5b18\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19521.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19521.4\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19521.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1621","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1621)"},{"Id":"510968850","IsPullRequest":false,"CreatedAt":"2019-10-21T21:11:58","Actor":"TomasMorton","Number":"1622","RawContent":null,"Title":"Targeting netstandard2.1 conflicts with System.Data.DataSetExtensions","State":"open","Body":"I'm trying to upgrade my solution to DotNet Core 3.  I have references to Entity Framework, which has forced an upgrade to netstandard 2.1.\r\n\r\nHowever, my classes that were using the DataTableExtensions are now unable to compile due to the following error:\r\n`[CS0121] The call is ambiguous between the following methods or properties: 'System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)' and 'System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)'`\r\nand also\r\n`[CS0433] The type 'TypedTableBase<T>' exists in both 'System.Data.DataSetExtensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089' and 'netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'`\r\n\r\nI have removed all Nuget packages for System.Data.DataSetExtensions, but I probably have a transitive dependency somewhere in the graph.\r\n\r\nThis problem seems to be the same as the previous one in https://github.com/dotnet/corefx/issues/37738.\r\n\r\nI would appreciate any workarounds to get my solution compiling as soon as possible.","Url":"https://github.com/dotnet/standard/issues/1622","RelatedDescription":"Open issue \"Targeting netstandard2.1 conflicts with System.Data.DataSetExtensions\" (#1622)"},{"Id":"509922429","IsPullRequest":true,"CreatedAt":"2019-10-21T12:23:01","Actor":"dotnet-maestro[bot]","Number":"1620","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191020.7\r\n- **Date Produced**: 10/21/2019 6:09 AM\r\n- **Commit**: 03453d9aae8e5d18e571699c5d2229b1ab5f4b9d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19520.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19520.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19520.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1620","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1620)"},{"Id":"509586833","IsPullRequest":true,"CreatedAt":"2019-10-20T12:22:06","Actor":"dotnet-maestro[bot]","Number":"1619","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191019.7\r\n- **Date Produced**: 10/20/2019 2:47 AM\r\n- **Commit**: 03dd803990dfb8f05db8d0ec1bc34268386c1d5b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19519.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19519.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19519.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1619","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1619)"},{"Id":"509442622","IsPullRequest":true,"CreatedAt":"2019-10-19T12:29:32","Actor":"dotnet-maestro[bot]","Number":"1618","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191018.10\r\n- **Date Produced**: 10/19/2019 7:13 AM\r\n- **Commit**: 5590d3896f012c1c9b7774774456331a36ba1d57\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19518.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19518.10\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19518.10\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1618","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1618)"},{"Id":"509155885","IsPullRequest":false,"CreatedAt":"2019-10-18T15:46:13","Actor":"0blu","Number":"1617","RawContent":null,"Title":"Why do I need special permission when using HttpListener?","State":"closed","Body":"Hey,\r\n\r\nthis issue is a little bit dot net bashing because some interfaces are design with assumptions that are too specific for most users, HttpListener is one of them.\r\n\r\nFirst of all, I already read about the [HTTP namespace system](https://docs.microsoft.com/en-us/windows/win32/http/routing-incoming-requests).\r\n\r\n`HttpListener` allows simple and high level creation of HTTP servers, but what if I want to create a HTTP server that can listen on all hosts, without requiring admin permissions or running arbitrary `netsh` commands?\r\n\r\nIf I would run this code as an unprivileged user the result would be an access exception.\r\n``` c#\r\nHttpListener listener = new HttpListener();\r\nlistener.Prefixes.Add(\"http://*:1234/\");\r\nlistener.Start();\r\n```\r\n\r\nHowever running the following code proves that an unprivileged user could potentially write his own HTTP server, that allows access from all interfaces.\r\n``` c#\r\nTcpListener server = new TcpListener(IPAddress.Any, 1234);\r\nserver.Start();\r\n```\r\n\r\nI wonder why there is no way to take all the benefits of the `HttpListener` and skipping the namespacing system. Other languages have such features.\r\n\r\nIs there any chance to request an API addition that allows such things?\r\nFor example allowing the constructor of `HttpListener` to take an `TcpListener`-Instance.\r\n","Url":"https://github.com/dotnet/standard/issues/1617","RelatedDescription":"Closed issue \"Why do I need special permission when using HttpListener?\" (#1617)"},{"Id":"509045354","IsPullRequest":true,"CreatedAt":"2019-10-18T12:30:25","Actor":"dotnet-maestro[bot]","Number":"1616","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191018.1\r\n- **Date Produced**: 10/18/2019 8:58 AM\r\n- **Commit**: 2b92fc0930b941cd0d9146971745cd717689434c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19518.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19518.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19518.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1616","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1616)"},{"Id":"508423360","IsPullRequest":true,"CreatedAt":"2019-10-17T23:53:53","Actor":"akoeplinger","Number":"1614","RawContent":null,"Title":"Update Xamarin APIs to latest Dev16.4 builds","State":"closed","Body":"- Xamarin.Android 10.1.0.1\r\n- Xamarin.iOS 13.8.1.1\r\n- Xamarin.Mac 6.8.1.1\r\n\r\nThis also uses a new GenAPI version so the diff is a little messy because of the enum value to name changes in attributes.\r\n\r\nI also had to introduce a System.Core.stubs.csproj to break a build cycle because System.dll references System.Security.Cryptography.ECDsa from System.Core.dll now.","Url":"https://github.com/dotnet/standard/pull/1614","RelatedDescription":"Closed or merged PR \"Update Xamarin APIs to latest Dev16.4 builds\" (#1614)"},{"Id":"508433927","IsPullRequest":true,"CreatedAt":"2019-10-17T12:24:28","Actor":"dotnet-maestro[bot]","Number":"1615","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191016.16\r\n- **Date Produced**: 10/17/2019 4:25 AM\r\n- **Commit**: b9186cfa3566ee24e5f16e45c542a3078e128dc6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19516.16\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19516.16\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19516.16\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1615","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1615)"},{"Id":"507816713","IsPullRequest":true,"CreatedAt":"2019-10-16T12:33:03","Actor":"dotnet-maestro[bot]","Number":"1613","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191015.14\r\n- **Date Produced**: 10/16/2019 5:58 AM\r\n- **Commit**: b50bd0a1d3f0326fc717706cb5c5950ab41cf437\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19515.14\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19515.14\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19515.14\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1613","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1613)"},{"Id":"507207673","IsPullRequest":true,"CreatedAt":"2019-10-15T12:30:27","Actor":"dotnet-maestro[bot]","Number":"1611","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191014.7\r\n- **Date Produced**: 10/15/2019 8:46 AM\r\n- **Commit**: 3d16a2bd46d452ceb341887dc9c9dde26545110b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19514.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19514.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19514.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1611","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1611)"},{"Id":"507198335","IsPullRequest":true,"CreatedAt":"2019-10-15T12:01:34","Actor":"dotnet-maestro[bot]","Number":"1610","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191029.9\r\n- **Date Produced**: 10/30/2019 12:01 AM\r\n- **Commit**: ff023241f6484abaf827c4287c59fddd9ad6c382\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19529.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19529.9\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19529.9\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19529.9\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19529.9\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19529.9\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1610","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#1610)"},{"Id":"506615487","IsPullRequest":true,"CreatedAt":"2019-10-14T12:25:04","Actor":"dotnet-maestro[bot]","Number":"1609","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191013.1\r\n- **Date Produced**: 10/13/2019 1:26 PM\r\n- **Commit**: 437d9bc76489ff18bd9ce04f287e07591f6bc38c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19513.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19513.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19513.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1609","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1609)"},{"Id":"506317458","IsPullRequest":true,"CreatedAt":"2019-10-13T12:25:39","Actor":"dotnet-maestro[bot]","Number":"1608","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191012.1\r\n- **Date Produced**: 10/12/2019 1:32 PM\r\n- **Commit**: 8d21b79b924d29088dbde46d42737a657d466b5e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19512.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19512.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19512.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1608","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1608)"},{"Id":"506180021","IsPullRequest":true,"CreatedAt":"2019-10-12T12:30:20","Actor":"dotnet-maestro[bot]","Number":"1607","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191011.6\r\n- **Date Produced**: 10/12/2019 12:05 AM\r\n- **Commit**: 57ae5430e0e6cbf16b5c7b7def4fc95015b2b722\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19511.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19511.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19511.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1607","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1607)"},{"Id":"506178147","IsPullRequest":true,"CreatedAt":"2019-10-12T12:16:34","Actor":"dotnet-maestro[bot]","Number":"1606","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191011.1\r\n- **Date Produced**: 10/11/2019 12:51 PM\r\n- **Commit**: 64a027b8d8b3a8e8e214bb00da02148335e3bd92\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19511.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1606","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1606)"},{"Id":"505819610","IsPullRequest":true,"CreatedAt":"2019-10-11T12:31:35","Actor":"dotnet-maestro[bot]","Number":"1605","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191010.15\r\n- **Date Produced**: 10/11/2019 6:45 AM\r\n- **Commit**: 901c370c2379ad0885bcc5a1921c4164104586aa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19510.15\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19510.15\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19510.15\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1605","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1605)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"515166571","IsPullRequest":false,"CreatedAt":"2019-10-31T05:02:58","Actor":"davidfowl","Number":"42255","RawContent":null,"Title":"API Proposal: Utf8Parser overloads for ReadOnlySequence<byte>","State":"open","Body":"These text parsers are very convenient when parsing text based protocols (like HTTP/1.1 and RESP). It would be great to have overloads of the existing APIs that support `ReadOnlySequence<byte>`. I end up writing code like this:\r\n\r\n```C#\r\nprivate static bool TryParse(in ReadOnlySequence<byte> bytes, out int value, out int bytesConsumed)\r\n{\r\n    if (bytes.IsSingleSegment)\r\n    {\r\n        if (!Utf8Parser.TryParse(bytes.FirstSpan, out value, out bytesConsumed))\r\n        {\r\n            return false;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        Span<byte> textSpan= stackalloc byte[128];\r\n        bytes.CopyTo(textSpan);\r\n\r\n        if (!Utf8Parser.TryParse(textSpan, out value, out bytesConsumed))\r\n        {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n```\r\n\r\nI would be great if this was built into the existing parser.\r\n\r\n```C#\r\npublic partial static class Utf8Parser\r\n{\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out bool value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out byte value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out DateTime value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out DateTimeOffset value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out decimal value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out double value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out Guid value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out short value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out int value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out long value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out sbyte value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out float value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out TimeSpan value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out ushort value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out uint value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n    public static bool TryParse(in ReadOnlySequence<byte> source, out ulong value, out SequencePosition bytesConsumed, char standardFormat = '\\0');\r\n}\r\n\r\n```\r\n\r\ncc @ahsonkhan @GrabYourPitchforks \r\n","Url":"https://github.com/dotnet/corefx/issues/42255","RelatedDescription":"Open issue \"API Proposal: Utf8Parser overloads for ReadOnlySequence<byte>\" (#42255)"},{"Id":"515101449","IsPullRequest":true,"CreatedAt":"2019-10-31T04:27:11","Actor":"stephentoub","Number":"42249","RawContent":null,"Title":"Update analyzer versions","State":"closed","Body":"cc: @safern","Url":"https://github.com/dotnet/corefx/pull/42249","RelatedDescription":"Closed or merged PR \"Update analyzer versions\" (#42249)"},{"Id":"515153293","IsPullRequest":true,"CreatedAt":"2019-10-31T04:23:44","Actor":"layomia","Number":"42254","RawContent":null,"Title":"Guard against null refs when attempting to deserialize mismatched JSON into collections","State":"open","Body":"Addresses https://github.com/dotnet/corefx/issues/42143 for 5.0.\r\n\r\nAlso guards against null refs when trying to deserialize dictionaries with custom (not supported) interfaces and objects without parameterless ctors. We now throw `NotSupportedException`.","Url":"https://github.com/dotnet/corefx/pull/42254","RelatedDescription":"Open PR \"Guard against null refs when attempting to deserialize mismatched JSON into collections\" (#42254)"},{"Id":"515138418","IsPullRequest":false,"CreatedAt":"2019-10-31T03:41:10","Actor":"AriNuer","Number":"42253","RawContent":null,"Title":"Test failed: System.Net.Security.Tests.CertificateValidationRemoteServer.CertificateValidationRemoteServer_EndToEnd_Ok","State":"open","Body":"**Job:**\r\n[corefx-ci #20191030.51](https://dnceng.visualstudio.com/public/_build/results?buildId=408780)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/d4f54233-a11c-405b-a82a-6800e4f4a5f0/workitems/System.Net.Security.Tests/console\r\nhttps://helix.dot.net/api/2019-06-17/jobs/54c01015-d8e1-48e4-8de9-e300331111d1/workitems/System.Net.Security.Tests/console\r\n\r\n**Failed tests:**\r\nSystem.Net.Security.Tests.CertificateValidationRemoteServer.CertificateValidationRemoteServer_EndToEnd_Ok\r\n\r\n**Log:**\r\n```\r\nSystem.Net.Security.Tests.CertificateValidationRemoteServer.CertificateValidationRemoteServer_EndToEnd_Ok [FAIL]\r\n      System.IO.IOException : Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..\r\n      ---- System.Net.Sockets.SocketException : An existing connection was forcibly closed by the remote host.\r\n      Stack Trace:\r\n        /_/src/System.Net.Sockets/src/System/Net/Sockets/Socket.Tasks.cs(1110,0): at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)\r\n        /_/src/System.Net.Sockets/src/System/Net/Sockets/Socket.Tasks.cs(1076,0): at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.GetResult(Int16 token)\r\n        /_/src/System.Net.Security/src/System/Net/FixedSizeReader.cs(57,0): at System.Net.FixedSizeReader.ReadPacketAsync(Stream transport, AsyncProtocolRequest request)\r\n        /_/src/System.Net.Security/src/System/Net/Security/SslStream.Implementation.cs(82,0): at System.Net.Security.SslStream.ThrowIfExceptional()\r\n        /_/src/System.Net.Security/src/System/Net/Security/SslStream.Implementation.cs(472,0): at System.Net.Security.SslStream.InternalEndProcessAuthentication(LazyAsyncResult lazyResult)\r\n        /_/src/System.Net.Security/src/System/Net/Security/SslStream.Implementation.cs(442,0): at System.Net.Security.SslStream.EndProcessAuthentication(IAsyncResult result)\r\n        /_/src/System.Net.Security/src/System/Net/Security/SslStream.cs(237,0): at System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult asyncResult)\r\n        /_/src/System.Net.Security/src/System/Net/Security/SslStream.cs(377,0): at System.Net.Security.SslStream.<>c.<AuthenticateAsClientAsync>b__62_1(IAsyncResult iar)\r\n        /_/src/System.Private.CoreLib/shared/System/Threading/Tasks/FutureFactory.cs(514,0): at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n        /_/src/System.Net.Security/tests/FunctionalTests/CertificateValidationRemoteServer.cs(27,0): at System.Net.Security.Tests.CertificateValidationRemoteServer.CertificateValidationRemoteServer_EndToEnd_Ok()\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n        ----- Inner Stack Trace -----\r\n        \r\n  Finished:    System.Net.Security.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Net.Security.Tests  Total: 4355, Errors: 0, Failed: 1, Skipped: 26, Time: 13.972s\r\n----- end Thu 10/31/2019  1:33:23.06 ----- exit code 1\r\n```","Url":"https://github.com/dotnet/corefx/issues/42253","RelatedDescription":"Open issue \"Test failed: System.Net.Security.Tests.CertificateValidationRemoteServer.CertificateValidationRemoteServer_EndToEnd_Ok\" (#42253)"},{"Id":"515131057","IsPullRequest":false,"CreatedAt":"2019-10-31T03:20:14","Actor":"davidfowl","Number":"42252","RawContent":null,"Title":"API proposal: TryReadTo(out ReadOnlySpan<T> sequence, ReadOnlySpan<T> delimiter)","State":"open","Body":"Today there's no overload of TryReadTo that returns (via out parameter) a `ReadOnlySpan<T>` and allows passing a `ReadOnlySpan<T>` delimeter.\r\n\r\n```C#\r\npublic bool TryReadTo(out ReadOnlySpan<T> sequence, ReadOnlySpan<T> delimiter, bool advancePastDelimiter = true);\r\n```\r\n\r\n@JeremyKuhne do you recall why we left this out?","Url":"https://github.com/dotnet/corefx/issues/42252","RelatedDescription":"Open issue \"API proposal: TryReadTo(out ReadOnlySpan<T> sequence, ReadOnlySpan<T> delimiter)\" (#42252)"},{"Id":"515113692","IsPullRequest":false,"CreatedAt":"2019-10-31T02:33:43","Actor":"GrabYourPitchforks","Number":"42251","RawContent":null,"Title":"Add [CallerMustBeUnsafe] attribute to denote APIs which should be called in an unsafe block","State":"open","Body":"Per https://github.com/dotnet/roslyn-analyzers/issues/972, there's an outstanding feature for a Roslyn analyzer which would require a caller to use an `unsafe` block to make an API call that's pointer-equivalent dangerous but which doesn't take pointers.\r\n\r\nFor example:\r\n\r\n```cs\r\npublic static Span<T> ToMutableSpan(ReadOnlySpan<T> span)\r\n{\r\n    // When the Roslyn analyzer is active, the following code will produce a warning\r\n    // unless it is wrapped within an \"unsafe\" block.\r\n\r\n    return MemoryMarshal.CreateSpan(ref Unsafe.AsRef(in MemoryMarshal.GetReference(span)), span.Length);\r\n}\r\n```\r\n\r\nWhether that feature exists as a standalone analyzer or whether it gets moved into Roslyn proper (see https://github.com/dotnet/roslyn/issues/8663), we still need to define the attribute in corefx and apply it to the appropriate methods.\r\n\r\n### API proposal\r\n\r\n```cs\r\nnamespace System.Runtime.CompilerServices\r\n{\r\n    [AttributeUsage(AttributeTargets.Field | AttributeTargets.Method | AttributeTargets.Property, AllowMultiple = false, Inherited = true)]\r\n    public sealed class CallerMustBeUnsafeAttribute : Attribute\r\n    {\r\n    }\r\n}\r\n```\r\n\r\nIn this proposal I'm not applying `AttributeTargets.Class` or `AttributeTargets.Struct` because I don't want constructs like `Type \r\nt = typeof(SomeType)` to require an `unsafe` block. Technically `AttributeTargets.Property` isn't needed because the property getter / setter can be annotated (same with events), but allowing it on properties seems like a decent convenience.\r\n\r\nThe prime candidates to annotate are most methods on the `MemoryMarshal` type, some constructor-bypassing logic in `FormatterServices`, and any \"fast\" object factories which allow bypassing normal constructor validation.\r\n\r\nEdit: I suppose since we've said that we see `ArrayPool<T>` as a `malloc` equivalent and since it now returns uninitialized memory we should annotate its methods as well, but due to how widely used that type is that risks opening a huge can of worms.","Url":"https://github.com/dotnet/corefx/issues/42251","RelatedDescription":"Open issue \"Add [CallerMustBeUnsafe] attribute to denote APIs which should be called in an unsafe block\" (#42251)"},{"Id":"515106135","IsPullRequest":false,"CreatedAt":"2019-10-31T02:14:07","Actor":"ericjohannsen","Number":"42250","RawContent":null,"Title":"Marshaling struct as callback on Ubuntu","State":"open","Body":"I'm experimenting with pinvoke calls on Ubuntu. For the most part, everything works as expected, but I can't understand why this code seems to populate the `struct stat` with incorrect values. Even the first member of the struct `st_dev` has a value that doesn't seem plausible.\r\n\r\n``` C#\r\n[DllImport(\"libc\")]\r\nprivate static extern int ftw(string dirpath, DirClbk cl, int maxFileDescriptorsToUse);\r\n\r\n[StructLayout(LayoutKind.Sequential)]\r\nstruct timespec\r\n{\r\n    long tv_sec;                 /* seconds */\r\n    long tv_nsec;                /* nanoseconds */\r\n};\r\n\r\n[StructLayout(LayoutKind.Sequential)]\r\nunsafe struct stat\r\n{\r\n    public ulong st_dev;             /* Device.  */\r\n    public ulong st_ino;             /* File serial number.  */\r\n    public ulong st_nlink;         /* Link count.  */\r\n    public uint st_mode;           /* File mode.  */\r\n    public uint st_uid;            /* User ID of the file's owner. */\r\n    public uint st_gid;            /* Group ID of the file's group.*/\r\n    int __pad0;\r\n    public ulong st_rdev;           /* Device number, if device.  */\r\n    public uint st_size;            /* Size of file, in bytes.  */\r\n    public ulong st_blksize;     /* Optimal block size for I/O.  */\r\n    public ulong st_blocks;      /* Number 512-byte blocks allocated.  */\r\n                                      standard-compliant sources special.  */\r\n    public timespec st_atim;            /* Time of last access.  */\r\n    public timespec st_mtim;            /* Time of last modification.  */\r\n    public timespec st_ctim;            /* Time of last status change.  */\r\n    fixed ulong __glibc_reserved[3];\r\n};\r\n\r\nprivate delegate int DirClbk(string fName, stat stat, int typeFlag);\r\n\r\nprivate static int DirEntryCallback(string fName, stat stat, int typeFlag)\r\n{\r\n    Console.WriteLine($\"{fName} dev {stat.st_dev}: {stat.st_blksize} block size {stat.st_size} bytes\");\r\n    return 0;\r\n}\r\n\r\n// Calling code:\r\nftw(\"/tmp/ftwtest\", DirEntryCallback, 0);\r\n// The expected size is based on gcc-compiled c code (see below)\r\nConsole.WriteLine($\"Struct size expected 144, have: {Marshal.SizeOf(typeof(stat))}\");\r\n```\r\n\r\nI created `struct timespec` and `struct stat` by looking at the C headers installed on my Ubuntu 18.04 VM. I used\r\nthis small program to determine how large gcc thinks each type is:\r\n\r\n``` C\r\n#include <stdio.h>\r\n#include <time.h>\r\n#include <sys/stat.h>\r\n#include <sys/types.h>\r\n\r\nint main()\r\n{\r\n  printf (\"Native type size check\\n\");\r\n  printf (\"stat %lu\\n\", sizeof(struct stat));\r\n  printf (\"dev_t %lu\\n\", sizeof(dev_t));\r\n  printf (\"ino_t %lu\\n\", sizeof(ino_t));\r\n  printf (\"mode_t %lu\\n\", sizeof(mode_t));\r\n  printf (\"nlink_t %lu\\n\", sizeof(nlink_t));\r\n  printf (\"uid_t %lu\\n\", sizeof(uid_t));\r\n  printf (\"gid_t %lu\\n\", sizeof(gid_t));\r\n  printf (\"blksize_t %lu\\n\", sizeof(blksize_t));\r\n  printf (\"blkcnt_t %lu\\n\", sizeof(blkcnt_t));\r\n}\r\n```\r\nThe size as indicated by the C program and the C# program match (144 bytes for `struct stat`.)\r\n\r\nIs there something wrong in my code that would cause the struct in the callback to be improperly populated? Is there a better approach to discovering the correct struct layout on the target system?\r\n","Url":"https://github.com/dotnet/corefx/issues/42250","RelatedDescription":"Open issue \"Marshaling struct as callback on Ubuntu\" (#42250)"},{"Id":"515022376","IsPullRequest":true,"CreatedAt":"2019-10-31T01:57:48","Actor":"jkotas","Number":"42241","RawContent":null,"Title":"Fix inefficient string manipulations in RegularExpressions tests","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42241","RelatedDescription":"Closed or merged PR \"Fix inefficient string manipulations in RegularExpressions tests\" (#42241)"},{"Id":"515068383","IsPullRequest":true,"CreatedAt":"2019-10-31T01:54:29","Actor":"danmosemsft","Number":"42247","RawContent":null,"Title":"Improve test failure msg for some MEF tests","State":"closed","Body":"Closes https://github.com/dotnet/corefx/issues/42246","Url":"https://github.com/dotnet/corefx/pull/42247","RelatedDescription":"Closed or merged PR \"Improve test failure msg for some MEF tests\" (#42247)"},{"Id":"515063999","IsPullRequest":false,"CreatedAt":"2019-10-31T01:54:28","Actor":"danmosemsft","Number":"42246","RawContent":null,"Title":"Message_ShouldFormatCountOfRootCausesUsingTheCurrentCulture failed on UAP","State":"closed","Body":"```\r\nUnhandled exception. Xunit.Sdk.TrueException: Assert.True() Failure\r\nExpected: True\r\nActual:   False\r\n   at Xunit.Assert.True(Nullable`1 condition, String userMessage) in C:\\Dev\\xunit\\xunit\\src\\xunit.assert\\Asserts\\BooleanAsserts.cs:line 96\r\n   at Xunit.Assert.True(Boolean condition) in C:\\Dev\\xunit\\xunit\\src\\xunit.assert\\Asserts\\BooleanAsserts.cs:line 63\r\n   at System.ComponentModel.Composition.CompositionExceptionTests.AssertMessage(CompositionException exception, Int32 rootCauseCount, CultureInfo culture) in /_/src/System.ComponentModel.Composition/tests/System/ComponentModel/Composition/CompositionExceptionTests.cs:line 420\r\n   at System.ComponentModel.Composition.CompositionExceptionTests.<Message_ShouldFormatCountOfRootCausesUsingTheCurrentCulture>b__31_0() in /_/src/System.ComponentModel.Composition/tests/System/ComponentModel/Composition/CompositionExceptionTests.cs:line 383\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Xunit.ConsoleClient.RemoteExecutor.Execute(String[] args)\r\n   at Xunit.ConsoleClient.ConsoleRunner.EntryPoint(String[] args)\r\n   at Xunit.ConsoleClient.Program.Main(String[] args)\r\n    System.ComponentModel.Composition.CompositionExceptionTests.Message_ShouldFormatCountOfRootCausesUsingTheCurrentCulture [FAIL]\r\n      Microsoft.DotNet.RemoteExecutor.RemoteExecutionException : Remote process failed with an unhandled exception.\r\n      Stack Trace:\r\n        \r\n        Child exception:\r\n          Xunit.Sdk.TrueException: Assert.True() Failure\r\n        Expected: True\r\n        Actual:   False\r\n        /_/src/System.ComponentModel.Composition/tests/System/ComponentModel/Composition/CompositionExceptionTests.cs(420,0): at System.ComponentModel.Composition.CompositionExceptionTests.AssertMessage(CompositionException exception, Int32 rootCauseCount, CultureInfo culture)\r\n        /_/src/System.ComponentModel.Composition/tests/System/ComponentModel/Composition/CompositionExceptionTests.cs(383,0): at System.ComponentModel.Composition.CompositionExceptionTests.<Message_ShouldFormatCountOfRootCausesUsingTheCurrentCulture>b__31_0()\r\n        \r\n        Child process:\r\n          System.ComponentModel.Composition.Tests, Version=4.0.1.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51 System.ComponentModel.Composition.CompositionExceptionTests Int32 <Message_ShouldFormatCountOfRootCausesUsingTheCurrentCulture>b__31_0()\r\n        ```\r\n        ","Url":"https://github.com/dotnet/corefx/issues/42246","RelatedDescription":"Closed issue \"Message_ShouldFormatCountOfRootCausesUsingTheCurrentCulture failed on UAP\" (#42246)"},{"Id":"515042529","IsPullRequest":true,"CreatedAt":"2019-10-31T01:21:40","Actor":"jkotas","Number":"42244","RawContent":null,"Title":"CI TEST: Check typical Helix machines memory utilization","State":"closed","Body":"Investigating https://github.com/dotnet/coreclr/issues/27305","Url":"https://github.com/dotnet/corefx/pull/42244","RelatedDescription":"Closed or merged PR \"CI TEST: Check typical Helix machines memory utilization\" (#42244)"},{"Id":"515073945","IsPullRequest":true,"CreatedAt":"2019-10-31T00:45:24","Actor":"dotnet-maestro[bot]","Number":"42248","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20191030.3\r\n- **Date Produced**: 10/30/2019 9:59 PM\r\n- **Commit**: 93584136cf938d5f65e98e3bb7f0580526ae0716\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.0-preview3.19530.3\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.0-preview3.19530.3\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.0-preview3.19530.3\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42248","RelatedDescription":"Open PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42248)"},{"Id":"514889485","IsPullRequest":true,"CreatedAt":"2019-10-30T23:59:23","Actor":"stephentoub","Number":"42230","RawContent":null,"Title":"Delete PlatformHelper class","State":"closed","Body":"Depends on https://github.com/dotnet/coreclr/pull/27543\r\ncc: @jkotas, @benaadams ","Url":"https://github.com/dotnet/corefx/pull/42230","RelatedDescription":"Closed or merged PR \"Delete PlatformHelper class\" (#42230)"},{"Id":"515031263","IsPullRequest":true,"CreatedAt":"2019-10-30T23:56:05","Actor":"steveharter","Number":"42243","RawContent":null,"Title":"[release/3.1] Fix deserialize issue with a large Stream containing a BOM (#42206)","State":"closed","Body":"Fixes #42145\r\nOriginal PR merged in 5.0: #42206\r\n\r\n### Description\r\nUnder these conditions, deserializing either fails with a `JsonException` or will deserialize incorrectly:\r\n- A `Stream`-based deserialize method is used.\r\n- The stream starts with the 3-byte UTF8 BOM (byte order mark).\r\n- The stream contents are larger than the configured buffer size (default is 16K; configured by setting `JsonSerializerOptions.DefaultBufferSize`).\r\n\r\nThe issue results in 3 extra bytes (the BOM bytes) being added and 3 missing bytes (the end of the first buffer) when the first buffer is exhausted. The end result is a either a silent failure (incorrect deserialization results that contain the wrong bytes) or a `JsonException` (due to those wrong bytes causing the JSON to become invalid).\r\n\r\n### Customer impact\r\nBefore this change, when the conditions above occur, JSON is unable to be properly deserialized with no viable workarounds other than to remove the 3-byte UTF8 BOM from the Stream or increase the size of the default buffer.\r\n\r\nThis is a community-reported issue.\r\n\r\n### Regression\r\nNo.\r\n\r\n### Risk\r\nLow. One line of code changed to add the 3-byte offset for when the BOM is first encountered.\r\n\r\n### Testing\r\nTest added which reproduces the community-report issue (before the fix).","Url":"https://github.com/dotnet/corefx/pull/42243","RelatedDescription":"Closed or merged PR \"[release/3.1] Fix deserialize issue with a large Stream containing a BOM (#42206)\" (#42243)"},{"Id":"514997112","IsPullRequest":true,"CreatedAt":"2019-10-30T23:52:13","Actor":"dotnet-maestro[bot]","Number":"42239","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20191030.2\r\n- **Date Produced**: 10/30/2019 6:40 PM\r\n- **Commit**: d336d32e608e6c18ec4d089524ea1920e44f6737\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.0-preview3.19530.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.0-preview3.19530.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.0-preview3.19530.2\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42239","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42239)"},{"Id":"514859821","IsPullRequest":true,"CreatedAt":"2019-10-30T23:48:39","Actor":"carlossanlop","Number":"42228","RawContent":null,"Title":"[release/3.1] Add file creation method that takes an ACL","State":"closed","Body":"Approved API Proposal: #41614\r\nOriginal PR merged in 5.0: #42099\r\nRelated change for directory creation method that takes an ACL: #41834 [merged and ported to 3.1 Prev2]\r\n\r\n### Description\r\nWe have extension methods in `System.IO.FileSystem.AclExtensions` that let the user get and set ACLs for existing files, but we do not have methods that create files with predefined ACLs.\r\n.NET ACL (Access Control List) support is Windows specific. This change will reside inside the `System.IO.FileSystem.AccessControl` assembly.\r\n\r\n### Customer impact\r\nBefore this change, customers had to create a file or filestream, then set its ACLs. This presents a few problems:\r\n\r\n- Potential security hole as files can be accessed between creation and modification.\r\n- Porting difficulties as there isn't a 1-1 API replacement\r\n- Stability issues with background processes (file filters) can prevent modifying ACLs right after creation (typically surfaces as a security exception).\r\n\r\nThis change addresses those problems by adding a new extension method that allows creating a file and ensuring the provided ACLs are set during creation.\r\n\r\n### Regression\r\nThis change will not cause a regression.\r\n\r\n### Risk\r\n\r\nMedium-Low:\r\n- Customers will only be able to test this change directly in 3.1 GA.\r\n- ACL changes are risky because if they are set incorrectly by our APIs, we cannot fix them via servicing, since the ACLs will already have been written to filesystems everywhere.\r\n- This change did almost no changes to existing codepaths, so the risk is contained inside the new code only.\r\n\r\n### Testing\r\nAdded unit tests that verify the ACLs were correctly set and the expected exceptions are thrown.\r\n","Url":"https://github.com/dotnet/corefx/pull/42228","RelatedDescription":"Closed or merged PR \"[release/3.1] Add file creation method that takes an ACL\" (#42228)"},{"Id":"515051896","IsPullRequest":false,"CreatedAt":"2019-10-30T23:45:31","Actor":"GrabYourPitchforks","Number":"42245","RawContent":null,"Title":"Base64.EncodeToUtf8 sometimes returns NeedMoreData when it should return Done","State":"open","Body":"As @gfoidl reports in https://github.com/dotnet/corefx/issues/42236#issuecomment-548148179:\r\n\r\n```c#\r\nusing System;\r\nusing System.Buffers.Text;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Span<byte> input = stackalloc byte[3] { 0x1, 0x2, 0x3 };\r\n            Span<byte> output = stackalloc byte[4];\r\n\r\n            var status = Base64.EncodeToUtf8(input, output, out int read, out int written, isFinalBlock: false);\r\n            Console.WriteLine(status);  // outputs \"NeedMoreData\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThis sample outputs `NeedsMoreData` but it should instead output `Done`.","Url":"https://github.com/dotnet/corefx/issues/42245","RelatedDescription":"Open issue \"Base64.EncodeToUtf8 sometimes returns NeedMoreData when it should return Done\" (#42245)"},{"Id":"515027289","IsPullRequest":true,"CreatedAt":"2019-10-30T23:01:17","Actor":"wfurt","Number":"42242","RawContent":null,"Title":"Move CertificateValidationRemoteServer_EndToEnd_Ok to outerloop","State":"closed","Body":"This test depends on external server and it is possibly unreliable.\r\nWe don't know what this suddenly start failing but this change will prevent normal PRs from hitting this.  \r\n\r\ncontributes to  #42231\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42242","RelatedDescription":"Closed or merged PR \"Move CertificateValidationRemoteServer_EndToEnd_Ok to outerloop\" (#42242)"},{"Id":"515008930","IsPullRequest":true,"CreatedAt":"2019-10-30T21:59:52","Actor":"gfoidl","Number":"42240","RawContent":null,"Title":"Fix for Base64 EncodeToUtf8 / DecodeFromUtf8 with empty input and isFinalBlock: false","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/42236\r\n\r\nAdded test for this case, as there wasn't one + fixed it.","Url":"https://github.com/dotnet/corefx/pull/42240","RelatedDescription":"Open PR \"Fix for Base64 EncodeToUtf8 / DecodeFromUtf8 with empty input and isFinalBlock: false\" (#42240)"},{"Id":"514991967","IsPullRequest":false,"CreatedAt":"2019-10-30T21:25:03","Actor":"mikernet","Number":"42238","RawContent":null,"Title":"Add ConcurrentDictionary.Comparer property","State":"open","Body":"It would be useful to expose this as a getter property. I believe all other BCL collections that accept comparers expose them as properties (i.e. `Dictionary<,>.Comparer`, `HashSet<>.Comparer`).","Url":"https://github.com/dotnet/corefx/issues/42238","RelatedDescription":"Open issue \"Add ConcurrentDictionary.Comparer property\" (#42238)"},{"Id":"514987222","IsPullRequest":false,"CreatedAt":"2019-10-30T21:15:28","Actor":"mikepenaMS","Number":"42237","RawContent":null,"Title":"When using ReadAsync on Stream returned from HttpContent.ReadAsStreamAsync and the internet drops, it sometimes doesn't return","State":"open","Body":"Hello,\r\n\r\nWe are trying to read in a file in chunks and we noticed that if the internet drops out for large files that ReadAsync doesn't return, the thread just seems to exit and no exception is thrown. I made a small repro of the issue below. \r\n\r\n```\r\nprivate async Task ReadLargeFileInChunks()\r\n{\r\n    HttpClient client = new HttpClient() { Timeout = new TimeSpan(0, 0, 30) };\r\n    string requestUri = @\"http://www.effigis.com/wp-content/uploads/2015/02/Airbus_Pleiades_50cm_8bit_RGB_Yogyakarta.jpg\";\r\n    HttpResponseMessage response = await client.GetAsync(requestUri, HttpCompletionOption.ResponseHeadersRead);\r\n    response.EnsureSuccessStatusCode();\r\n\r\n    int totalData = (int)response.Content.Headers.ContentLength.GetValueOrDefault(-1);\r\n\r\n    if (totalData > 0)\r\n    {\r\n        Debug.WriteLine($\"About to ReadAsStreamAsync\");\r\n        Stream source = await response.Content.ReadAsStreamAsync();\r\n\r\n        bool debuggerBreakHappened = false;\r\n        long totalRead = 0;\r\n\r\n        Debug.WriteLine($\"About to While Loop Read Async: {totalData}\");\r\n        while (true)\r\n        {\r\n            if (totalRead > 977215 && !debuggerBreakHappened)\r\n            {\r\n                // Disable internet connection when this hits\r\n                Debugger.Break();\r\n                debuggerBreakHappened = true;\r\n            }\r\n\r\n            var buffer = new byte[1024 * 1024]; // 1MB\r\n            int bytesRead = 0;\r\n            Debug.WriteLine($\"About to ReadAsync read so far: {totalRead}\");\r\n            if ((bytesRead = await source.ReadAsync(buffer, 0, buffer.Length)) <= 0)\r\n            {\r\n                Debug.WriteLine(\"Nothing left to read\");\r\n                break;\r\n            }\r\n\r\n            totalRead += bytesRead;\r\n            Debug.WriteLine($\"ReadAsync Completed read so far: {totalRead}\");\r\n            Debug.WriteLine($\"Total Read Progress: {((float)totalRead / totalData) * 100}\");\r\n        }\r\n        Debug.WriteLine($\"ReadAsStreamAsync Completed\");\r\n    }\r\n    else\r\n    {\r\n        throw new NotSupportedException();\r\n    }\r\n\r\n}\r\n```","Url":"https://github.com/dotnet/corefx/issues/42237","RelatedDescription":"Open issue \"When using ReadAsync on Stream returned from HttpContent.ReadAsStreamAsync and the internet drops, it sometimes doesn't return\" (#42237)"},{"Id":"514970411","IsPullRequest":false,"CreatedAt":"2019-10-30T20:43:50","Actor":"coenm","Number":"42236","RawContent":null,"Title":"Base64.EncodeToUtf8 behavior changed between netcore2.1 and netcore3.0","State":"open","Body":"\r\n\r\nThe following call\r\n\r\n```csharp\r\nvar status = System.Buffers.Text.Base64.EncodeToUtf8(Span<byte>.Empty, new byte[42], out _, out _, isFinalBlock:false);\r\n```\r\n\r\nreturns `OperationStatus.NeedMoreData` running netcore2.1 and `OperationStatus.Done` in netcore3.0\r\n\r\nIs this intentionally? Is this a bug? Should this be documented?\r\n\r\n\r\nExample can be found at:\r\n\r\n```bash\r\ngit clone https://github.com/coenm/Base64Issue.git\r\n\r\ndotnet test Base64Difference/Base64Difference.csproj\r\n```\r\nThe test will pass in netcore2.1 and fail in netcore3.0\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/42236","RelatedDescription":"Open issue \"Base64.EncodeToUtf8 behavior changed between netcore2.1 and netcore3.0\" (#42236)"},{"Id":"514944938","IsPullRequest":true,"CreatedAt":"2019-10-30T19:59:04","Actor":"ericstj","Number":"42235","RawContent":null,"Title":"Fix System.Composition.* public key","State":"open","Body":"Release port of https://github.com/dotnet/corefx/pull/42232.\r\n\r\nFixes #41913\r\n\r\n## Description\r\nSystem.Composition.* shipped in 3.0 with the wrong public key for live built assemblies.  Redistributed assemblies still had correct key.\r\n\r\n## Customer Impact\r\nWhen upgrading the package from 1.2.0 to 1.3.0 customer sees FileLoadException on desktop, or compile error if types are exposed in public surface.  Same issue occurs using only latest when a netstandard1.1 project is consumed by netstandard2.0 compatible project.\r\n\r\n## Regression?\r\nYes, previous release.\r\n\r\n## Risk\r\nLow risk to build.  Fix will cause same symptom as original bug, but is necessary for consistency and compatibility with past releases.\r\n","Url":"https://github.com/dotnet/corefx/pull/42235","RelatedDescription":"Open PR \"Fix System.Composition.* public key\" (#42235)"},{"Id":"514921774","IsPullRequest":false,"CreatedAt":"2019-10-30T19:19:04","Actor":"lobster2012-user","Number":"42234","RawContent":null,"Title":"StreamReader: Read + ReadAsync = bug ???","State":"open","Body":"At work (net core 3.0) I ran into an unpleasant bug. I received packets on the socket, having only 5 messages in it, I could read only 4. I found that I mistakenly used blocking and non-blocking calls, and only this combination led to an error.\r\nAt home reproduced the situation (net core 2.2)\r\n\r\nI created wrappers, I saw that StreamReader after reading enough bytes is still waiting, if you call read after readasync\r\n\r\n```ReadAsyncTest(5000,56568,False) ``` It gives an error periodically.\r\n\r\n![изображение](https://user-images.githubusercontent.com/9452368/67894952-a8e20280-fb6a-11e9-8d81-772435ccc2c2.png)\r\n\r\n\r\n```csharp\r\n\r\nusing Newtonsoft.Json;\r\nusing NUnit.Framework;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.IO;\r\nusing System.Threading.Tasks;\r\nusing Newtonsoft.Json.Linq;\r\nusing System.Net.Sockets;\r\n\r\nnamespace Tests\r\n{\r\n    public partial class Tests\r\n    {\r\n        static byte[] ToBytes(string s)\r\n        {\r\n            return System.Text.Encoding.UTF8.GetBytes(s);\r\n        }\r\n        static string ToString(object o)\r\n        {\r\n            return JsonConvert.SerializeObject(o);\r\n        }\r\n        static object Create(char fill, Int32 count)\r\n        {\r\n            return new\r\n            {\r\n                Prop = new string(fill, count)\r\n            };\r\n        }\r\n        static string CreateString(char fill, Int32 msgSize)\r\n        {\r\n            return ToString(Create(fill, msgSize));\r\n        }\r\n\r\n        static string CreateString(char fill, Int32 msgSize, Int32 count)\r\n        {\r\n            string s = \"\";\r\n            for (var i = 0; i < count; ++i)\r\n            {\r\n                s += ToString(Create((char)(fill + i), msgSize));\r\n            }\r\n            return s;\r\n        }\r\n\r\n\r\n        [TestCase(0, 56565, true)]\r\n        [TestCase(5000, 56566, true)]\r\n        [TestCase(0, 56567, false)]\r\n        [TestCase(5000, 56568, false)]\r\n        public async Task ReadAsyncTest(Int32 lastMessageDelay, Int32 port, bool useReadFromAsync)\r\n        {\r\n            var buffers = new List<(Int32 timeout, byte[] data)>();\r\n\r\n            var msg1 = CreateString('1', 400, 1);\r\n            buffers.Add((0, ToBytes(msg1)));\r\n\r\n            var msg2 = CreateString('2', 400, 3);\r\n            buffers.Add((0, ToBytes(msg2)));\r\n\r\n            var msg3 = CreateString('5', 400, 1);\r\n            buffers.Add((0, ToBytes(msg3)));\r\n\r\n            var msg4 = CreateString('8', 400, 1);\r\n            buffers.Add((lastMessageDelay, ToBytes(msg4)));\r\n\r\n\r\n\r\n            var listener = new TcpListener(System.Net.IPAddress.Loopback, port);\r\n            listener.Start();\r\n\r\n            var _ = listener.AcceptTcpClientAsync().ContinueWith(async task =>\r\n            {\r\n                var server = task.Result;\r\n                using (var stream = server.GetStream())\r\n                {\r\n                    foreach (var buf in buffers)\r\n                    {\r\n                        await Task.Delay(buf.timeout)/*.ConfigureAwait(false)*/;\r\n                        await stream.WriteAsync(buf.data, 0, buf.data.Length)/*.ConfigureAwait(false)*/;\r\n                        await stream.FlushAsync()/*.ConfigureAwait(false)*/;\r\n                        Console.WriteLine($\"{DateTime.Now.ToString(\"HH:mm:ss\")} written\");\r\n                    }\r\n                    await Task.Delay(-1).ConfigureAwait(false);\r\n                }\r\n            }, TaskContinuationOptions.LongRunning);\r\n\r\n            using (var cts = new System.Threading.CancellationTokenSource())\r\n            {\r\n                //await Task.Factory.StartNew(async () =>\r\n                {\r\n                    using (var socket = new TcpClient())\r\n                    {\r\n                        await socket.ConnectAsync(\"127.0.0.1\", port)/*.ConfigureAwait(false)*/;\r\n                        using (var stream = socket.GetStream())\r\n                        {\r\n                            cts.CancelAfter(2000);\r\n                            cts.Token.Register(() => stream.Close());\r\n                            using (var textReader = new StreamReader(stream))\r\n                            {\r\n                                using (var jsonReader = new JsonTextReader(textReader)\r\n                                {\r\n                                    SupportMultipleContent = true,\r\n                                })\r\n                                {\r\n                                    var count = 0;\r\n                                    while (await jsonReader.ReadAsync(cts.Token)/*.ConfigureAwait(false)*/)\r\n                                    {\r\n                                        JToken token;\r\n                                        if (useReadFromAsync)\r\n                                        {\r\n                                            token = await JToken.ReadFromAsync(jsonReader, cts.Token)/*.ConfigureAwait(false)*/;\r\n                                        }\r\n                                        else\r\n                                        {\r\n                                            token = JToken.ReadFrom(jsonReader);//, cts.Token);\r\n                                        }\r\n                                        Console.WriteLine($\"{DateTime.Now.ToString(\"HH:mm:ss\")} read\");\r\n                                        Console.WriteLine(token);\r\n                                        cts.Token.ThrowIfCancellationRequested();\r\n                                        ++count;\r\n                                        if (count == 5)\r\n                                            break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                //, cts.Token, TaskCreationOptions.LongRunning, TaskScheduler.Default);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n```","Url":"https://github.com/dotnet/corefx/issues/42234","RelatedDescription":"Open issue \"StreamReader: Read + ReadAsync = bug ???\" (#42234)"},{"Id":"514919180","IsPullRequest":true,"CreatedAt":"2019-10-30T19:14:44","Actor":"brunom","Number":"42233","RawContent":null,"Title":"Avoid disk fragmentation when unziping files","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/pull/42233","RelatedDescription":"Open PR \"Avoid disk fragmentation when unziping files\" (#42233)"},{"Id":"514918635","IsPullRequest":true,"CreatedAt":"2019-10-30T19:13:48","Actor":"ericstj","Number":"42232","RawContent":null,"Title":"Fix System.Composition.* public key","State":"open","Body":"Issue https://github.com/dotnet/corefx/issues/41913\r\n\r\nFixes regression from https://github.com/dotnet/corefx/commit/cf52405ee7aacaf2a5ee7ce04153320f243d951c#diff-7385611035c749a335f16a7b108e7166L3-R4\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42232","RelatedDescription":"Open PR \"Fix System.Composition.* public key\" (#42232)"},{"Id":"514845372","IsPullRequest":true,"CreatedAt":"2019-10-30T19:05:46","Actor":"eiriktsarpalis","Number":"42227","RawContent":null,"Title":"Fix System.Net.WebUtility.HtmlDecode issue","State":"closed","Body":"Fixes #42219\r\n\r\nThe .NET Core implementation of `System.Net.WebUtility.HtmlDecode()` diverges slightly from the behaviour in full framework. Based on [this comment](https://github.com/dotnet/corefx/blob/a66a2b40508dbf32fcd2247f012572b93f638dc5/src/System.Runtime.Extensions/src/System/Net/WebUtility.cs#L263-L265) it is most likely an unintentional regression. Fix is a verbatim application of @VinceGitHub's proposal.","Url":"https://github.com/dotnet/corefx/pull/42227","RelatedDescription":"Closed or merged PR \"Fix System.Net.WebUtility.HtmlDecode issue\" (#42227)"},{"Id":"514893568","IsPullRequest":false,"CreatedAt":"2019-10-30T18:34:10","Actor":"stephentoub","Number":"42231","RawContent":null,"Title":"CertificateValidationRemoteServer_EndToEnd_Ok test failing on all PRs on Windows","State":"open","Body":"cc: @wfurt, @davidsh","Url":"https://github.com/dotnet/corefx/issues/42231","RelatedDescription":"Open issue \"CertificateValidationRemoteServer_EndToEnd_Ok test failing on all PRs on Windows\" (#42231)"},{"Id":"514860277","IsPullRequest":true,"CreatedAt":"2019-10-30T17:41:35","Actor":"alnikola","Number":"42229","RawContent":null,"Title":"HttpResponseHeaders validates trailing headers by names","State":"open","Body":"HttpResponseMessage.TrailingHeaders property is set to a new special instance of HttpResponseHeaders configured to validate trailing headers based on their names instead of types. When a header is being added via an explicit Add call, it checks the header name against prohibited trailing header list and throws an exception if it is found. In contrast, when a header arrives on the wire and is being added with TryAddWithoutValidation call, no extra check is performed because HttpConnection validates trailing headers in this scenario.\r\nFixes #41262 ","Url":"https://github.com/dotnet/corefx/pull/42229","RelatedDescription":"Open PR \"HttpResponseHeaders validates trailing headers by names\" (#42229)"},{"Id":"514829679","IsPullRequest":true,"CreatedAt":"2019-10-30T16:55:51","Actor":"bartonjs","Number":"42226","RawContent":null,"Title":"Use a custom PFX reader/writer on Unix OSes","State":"open","Body":"This change moves PFX import and export primarily into managed code to work around inconsistencies across the operating systems.\r\n\r\nCurrent issues:\r\n* Linux\r\n  * Reading\r\n    * PKCS12_parse doesn't support multiple cert-with-keys.\r\n    * PKCS12_parse doesn't support reading a PFX with no MAC.\r\n    * OpenSSL 1.0 had a weird bug where an ECDSA cert inexplicably didn't match to its key.\r\n  * Writing\r\n    * PKCS12_create doesn't support multiple cert-with-keys.\r\n    * PKCS12_create doesn't support writing empty collections.\r\n* macOS\r\n  * Reading\r\n    * Either SecItemImport does not understand the NULL (vs Empty) password, or we called it wrong... cannot load a PFX which is MACd with the NULL password.\r\n    * SecItemImport can only support \"normalized\" PFXes, where \"normalized\" means \"how Windows XP would have written it\":\r\n      * PFX\r\n        * SafeContents0 (no encryption) (won't load keys from an encrypted SafeContents, IIRC)\r\n          * ShroudedKey0 (won't load keys from KeyBag (unencrypted), only ShroudedKeyBag (encrypted))\r\n          * ...\r\n          * ShroudedKeyN\r\n        * SafeContents1 (encrypted) (won't load certs from an unencrypted SafeContents, IIRC)\r\n          * Cert0\r\n          * ...\r\n          * CertM\r\n       * MAC\r\n         * AlgId: HMAC-SHA-1 (IIRC this was a requirement, but it's also the only allowed algorithm on Win7 or Win8.1...)\r\n  * Writing\r\n    * SecItemExport fails to create a PFX with only public keys (or, at least, with non-keychain-based certificates).\r\n    * SecItemExport fails to create a PFX where some elements are in different keychains than others (including \"some elements are not in a keychain\").\r\n\r\n\r\nThis change moves the necessary ASN types from the Pkcs12 library into Common so they're shared between Pkcs12Info/Pkcs12Builder and X509Certificates, then uses a managed loader and managed writer.\r\n\r\nQuirks:\r\n* SecItemImport(PKCS8) doesn't support marking keys as non-exportable, so non-exportable keyloads on macOS read a PFX, write a normalized PFX in memory, then call SecItemImport(PKCS12).\r\n  * Because one of the failure modes of SecItemImport(PKCS12) is that it returns certs without private keys associated, it's not possible to call SecItemImport first and fall back to the managed loader.\r\n* Windows and Linux both will happily return the wrong private key with a cert if the PFX says to do so, but on macOS the SecIdentityRef creation fails and the cert comes back with no private key.\r\n  * This isn't a very realistic situation outside of our tests, so it's not something worth doing heroics for right now.  The easiest answer is to make HasPrivateKey be true but the GetPrivateKey methods throw... but that's still different than the other platforms, and would be very weird with SslStream.\r\n\r\n\r\nAs part of this change the X509Certificates SafePasswordHandle is now always UTF-16, because that's the encoding required for the PKCS12 KDF, so some platform-split code got to go away.  Some helper routines for CFString were added to make the transition back to macOS P/Invokes easier from the SafePasswordHandle.\r\n\r\nFixes #40539.\r\nFixes #2743.\r\nFixes #2745.\r\nFixes #2746.\r\nFixes #11046.\r\nFixes #16705.\r\nFixes #24225.\r\nFixes #24226.\r\nFixes #26397.\r\nFixes #30946.\r\nFixes #31746.\r\nFixes #37599.\r\n(And maybe others)\r\n","Url":"https://github.com/dotnet/corefx/pull/42226","RelatedDescription":"Open PR \"Use a custom PFX reader/writer on Unix OSes\" (#42226)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"515122164","IsPullRequest":false,"CreatedAt":"2019-10-31T02:56:00","Actor":"gundermanc","Number":"39601","RawContent":null,"Title":"Crash from closed textview in visual tree in dialog page","State":"open","Body":"**Version Used**: \r\nVisual Studio 2019 16.4 Preview 2\r\n\r\n**Steps to Reproduce**:\r\n\r\nIntermittent repro that's received a fair bit of feedback internally.\r\n\r\n1. Tools > Options > C# > Code Style (perhaps via Ctrl+Q).\r\n2. Switch to another pane and back several times\r\n3. Close tools options\r\n4. Re-launch to the same page\r\n\r\n**Expected Behavior**:\r\n\r\nPage opens.\r\n\r\n**Actual Behavior**:\r\n\r\nVS intermittently crashes with an ObjectDisposedException in an Editor margin from the embedded textviewhost.\r\n\r\nThe problem seems to be in the way that [AbstractOptionPreviewViewModel](http://sourceroslyn.io/#Microsoft.VisualStudio.LanguageServices.Implementation/Options/AbstractOptionPreviewViewModel.cs,9a39115621aed465) provides the textviewhost to the view.\r\n\r\nWhen the dialog page closes, a code path calls Dispose on the ViewModel, closing and clearing the textviewhost.\r\n\r\nMy theory is that this happens after the UI has been dismissed (at least part of the time) leading to no databinding update for the text view host's binding in the UIElementDialogPage, keeping the view in the visual tree. UIElementDialogPages appear to stick around for the entire VS session, so, the next launch of the dialog, the old textview is in the visual tree, and if the initial layout triggers a SizeChanged event, causes a crash.\r\n\r\n**Root cause:**\r\n\r\nThe exception stems from a recent change in Editor, which listens to the SizeChanged event on a Disposable object.\r\n\r\nI'm making changes on our side to make this scenario less likely to throw, but from a local repro, it seems that Roslyn is intermittently keeping around a closed view when dialog page closes, which is at best a leak, and at worst, a potential reliability issue.","Url":"https://github.com/dotnet/roslyn/issues/39601","RelatedDescription":"Open issue \"Crash from closed textview in visual tree in dialog page\" (#39601)"},{"Id":"515115959","IsPullRequest":false,"CreatedAt":"2019-10-31T02:39:30","Actor":"jhudsoncedaron","Number":"39600","RawContent":null,"Title":"IDE0019 suggests pattern matching but the generated pattern matching changes the meaning of the code","State":"open","Body":"**Version Used**: \r\n\r\nC# 8.0\r\n\r\n**Steps to Reproduce**:\r\n\r\nApologies if this doesn't quite reproduce here. The origin file is some 3000 lines and the project is probably in the millions.\r\n\r\n    void ProcessRow(IDataReader reader, ISet<int> questionIds, IDictionary<int, string> visibleExpressions, IDictionary<int, string> enabledExpressions, IDictionary<int, string> completeExpressions)\r\n    {\r\n            int i = 0;\r\n            var questionId = reader.GetInt32(i++);\r\n            var dataLevelId = reader[i++] as byte?;\r\n            var visibleExpression = reader[i++] as string;\r\n            var enabledExpression = reader[i++] as string;\r\n            var completeExpression = reader[i++] as string;\r\n\r\n            if (questionIds.Contains(questionId))\r\n            {\r\n                if (visibleExpression != null)\r\n                   visibleExpressions[questionId] = visibleExpression;\r\n                if (enabledExpression != null)\r\n                   enabledExpressions[questionId] = enabledExpression;\r\n                if (completeExpression != null)\r\n                   completeExpressions[questionId] = completeExpression;\r\n            }\r\n    }\r\n\r\nFor some reason it wants to use pattern matching but can't understand that `i` has a different value by that time and the code replacement is non-working code.\r\n\r\nWe use this indexing idiom here because this loop runs thousands of times per web request and it's very nearly as resilient to schema changes as string indexers and just as easy to read as string indexers and as fast as numeric literal indexers into the data reader. The real code has 18 columns here.\r\n\r\n**Expected Behavior**:\r\n\r\nNo ... under var as the fix can't be applied here.\r\n\r\n**Actual Behavior**:\r\n\r\nAttached screen grab.\r\n![ide0019insanity](https://user-images.githubusercontent.com/17086870/67914096-63164180-fb4c-11e9-9ea4-ff8ead5a103a.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/39600","RelatedDescription":"Open issue \"IDE0019 suggests pattern matching but the generated pattern matching changes the meaning of the code\" (#39600)"},{"Id":"515089129","IsPullRequest":false,"CreatedAt":"2019-10-31T01:27:45","Actor":"davkean","Number":"39599","RawContent":null,"Title":"MisplacedUsingDirectivesDiagnosticAnalyzer ' threw an exception of type 'System.ArgumentOutOfRangeException' with message 'Index was out of range. ","State":"open","Body":"**Version Used**: \r\nVersion 16.5.0 Preview 1.0 [29429.152.master]\r\n\r\n**Steps to Reproduce**:\r\n\r\n``` C#\r\nnamespace Microsoft.VisualStudio.ProjectSystem.VS.Implementation.Package\r\n{\r\n    using System;\r\n    using System.Collections.Immutable;\r\n    using System.ComponentModel.Composition;\r\n    using System.Diagnostics.CodeAnalysis;\r\n    using System.Diagnostics.Contracts;\r\n    using System.Threading;\r\n    using Microsoft.VisualStudio.Shell.Interop;\r\n```\r\n\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\tDetail Description\r\nWarning\tAD0001\tAnalyzer 'Microsoft.CodeAnalysis.CSharp.MisplacedUsingDirectives.MisplacedUsingDirectivesDiagnosticAnalyzer' threw an exception of type 'System.ArgumentOutOfRangeException' with message 'Index was out of range. Must be non-negative and less than the size of the collection.\r\nParameter name: index'.\tMicrosoft.VisualStudio.ProjectSystem.VS.Implementation\t\t1\tActive\tAnalyzer 'Microsoft.CodeAnalysis.CSharp.MisplacedUsingDirectives.MisplacedUsingDirectivesDiagnosticAnalyzer' threw the following exception:\r\n'Exception occurred with following context:\r\nCompilation: Microsoft.VisualStudio.ProjectSystem.VS.Implementation\r\nSyntaxTree: C:\\CPS\\src\\Microsoft.VisualStudio.ProjectSystem.VS.Implementation\\VsProjectTypeValuesCacheService.cs\r\nSyntaxNode: namespace Microsoft.VisualStudio ... [NamespaceDeclarationSyntax]@[314..24814) (6,0)-(495,1)\r\n\r\nSystem.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\r\nParameter name: index\r\n   at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)\r\n   at Microsoft.CodeAnalysis.AnalyzerConfigSet.SequenceEqualComparer.Equals(List`1 x, List`1 y)\r\n   at Microsoft.CodeAnalysis.ConcurrentCache`2.TryAdd(TKey key, TValue value)\r\n   at Microsoft.CodeAnalysis.AnalyzerConfigSet.GetOptionsForSourcePath(String sourcePath)\r\n   at Microsoft.CodeAnalysis.ProjectState.WorkspaceAnalyzerConfigOptionsProvider.GetOptions(SyntaxTree tree)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver.GetFilteredDiagnostic(Diagnostic diagnostic, Compilation compilation, AnalyzerOptions analyzerOptions)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver.<>c__DisplayClass117_0.<GetDiagnosticSink>b__0(Diagnostic diagnostic, DiagnosticAnalyzer analyzer, Boolean isSyntaxDiagnostic)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerExecutor.AnalyzerDiagnosticReporter.AddDiagnostic(Diagnostic diagnostic)\r\n   at Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.ReportDiagnostic(Diagnostic diagnostic)\r\n   at Microsoft.CodeAnalysis.CSharp.MisplacedUsingDirectives.MisplacedUsingDirectivesDiagnosticAnalyzer.ReportDiagnostics(SyntaxNodeAnalysisContext context, DiagnosticDescriptor descriptor, IEnumerable`1 usingDirectives, CodeStyleOption`1 option)\r\n   at Microsoft.CodeAnalysis.CSharp.MisplacedUsingDirectives.MisplacedUsingDirectivesDiagnosticAnalyzer.AnalyzeNamespaceNode(SyntaxNodeAnalysisContext context)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerExecutor.<>c__55`1.<ExecuteSyntaxNodeAction>b__55_0(ValueTuple`2 data)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerExecutor.ExecuteAndCatchIfThrows_NoLock[TArg](DiagnosticAnalyzer analyzer, Action`1 analyze, TArg argument, Nullable`1 info)\r\n-----\r\n'.\r\n\r\n```","Url":"https://github.com/dotnet/roslyn/issues/39599","RelatedDescription":"Open issue \"MisplacedUsingDirectivesDiagnosticAnalyzer ' threw an exception of type 'System.ArgumentOutOfRangeException' with message 'Index was out of range. \" (#39599)"},{"Id":"514779039","IsPullRequest":true,"CreatedAt":"2019-10-31T00:34:32","Actor":"JoeRobich","Number":"39587","RawContent":null,"Title":"Run integration tests with .NET Core SDK shipped with VS","State":"closed","Body":"Integration tests were being run with the dotnet SDK from the build environment. This broke when VS updated to creating new .NET Core projects against a TFM not supported by the version of the SDK we were building against.\r\n\r\nThis change allows the .NET Core SDK that shipped with VS to be found when running integration tests. Which is likely the desired behavior.\r\n\r\nFixes #39588","Url":"https://github.com/dotnet/roslyn/pull/39587","RelatedDescription":"Closed or merged PR \"Run integration tests with .NET Core SDK shipped with VS\" (#39587)"},{"Id":"515059960","IsPullRequest":true,"CreatedAt":"2019-10-31T00:05:52","Actor":"dotnet-bot","Number":"39598","RawContent":null,"Title":"Merge release/dev16.4 to release/dev16.4-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.4 into release/dev16.4-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-to-release/dev16.4-vs-deps\ngit reset --hard upstream/release/dev16.4-vs-deps\ngit merge upstream/release/dev16.4\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-to-release/dev16.4-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39598","RelatedDescription":"Open PR \"Merge release/dev16.4 to release/dev16.4-vs-deps\" (#39598)"},{"Id":"515059323","IsPullRequest":true,"CreatedAt":"2019-10-31T00:04:24","Actor":"dotnet-bot","Number":"39597","RawContent":null,"Title":"Merge release/dev16.4 to master","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.4 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/dev16.4\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-to-master --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39597","RelatedDescription":"Open PR \"Merge release/dev16.4 to master\" (#39597)"},{"Id":"515053688","IsPullRequest":true,"CreatedAt":"2019-10-30T23:50:17","Actor":"mavasani","Number":"39596","RawContent":null,"Title":"Hook up \"Run Code Analysis\" commands in Visual Studio to execute Rosl…","State":"open","Body":"…yn analyzers.\r\n\r\nFixes #38051: Users can now use this command to force complete all the analyzers on a project/solution (includes NuGet based + VSIX based analyzers, including IDE code style analyzers).\r\n\r\nComplements #39544: Users can now potentially disable continuous analyzer execution  during live analysis and instead execute them on demand with these commands.\r\n\r\nFew things to note:\r\n1. This change hooks up new \"Run Code Analysis on ProjectName\" menu commands for CPS based managed projects. These commands are already hooked up for csproj based legacy projects in StanCore, but that should eventually go away.\r\n2. This change only hooks up these new commands for top level Build and Analyze menus. Adding these to \"Analyzer and Code Cleanup\" context menus for project/solution in solution explorer is much trickier as the command groups are defined in StanCore. I will do so in a separate PR.\r\n3. This change also exposes a \"RunAnalyzers\" API for StanCore, so we can trigger analyzer execution when user executes run code analysis on solution/csproj based project. There is a VS side [PR](https://devdiv.visualstudio.com/DevDiv/_git/VS/pullrequest/211392) that will consume this functionality to make the experience uniform across all \"Run Code Analysis\" commands.","Url":"https://github.com/dotnet/roslyn/pull/39596","RelatedDescription":"Open PR \"Hook up \"Run Code Analysis\" commands in Visual Studio to execute Rosl…\" (#39596)"},{"Id":"515041015","IsPullRequest":true,"CreatedAt":"2019-10-30T23:11:18","Actor":"gafter","Number":"39595","RawContent":null,"Title":"Evaluate tuple elements in a switch control expression in the order written","State":"open","Body":"Fixes #39564","Url":"https://github.com/dotnet/roslyn/pull/39595","RelatedDescription":"Open PR \"Evaluate tuple elements in a switch control expression in the order written\" (#39595)"},{"Id":"515040983","IsPullRequest":true,"CreatedAt":"2019-10-30T23:11:11","Actor":"mavasani","Number":"39594","RawContent":null,"Title":"Don't MEF import core Roslyn language service type in SolutionExplore…","State":"open","Body":"…rShim\r\n\r\nMy recent [change](https://github.com/dotnet/roslyn/pull/37795/commits/03c9021af53e648c74a496a1a5e53a2dc616540c#diff-f7b9587085c9a364f8b4727f4599ebc5R76) caused an RPS regression where creating a new C++ project, which leads to us loading the Roslyn SolutionExplorerShim, now also loads Roslyn language service and all underlying Roslyn assemblies. This change avoids MEF importing the Roslyn type in AnalyzerCommandHandler constructor and instead gets it lazily.\r\n\r\nIn future, we should add an analyzer to prevent SolutionExplorerShim from MEF importing any core Roslyn services.\r\n\r\n**Verified that Roslyn language services are no longer loaded on creating a C++ project.**","Url":"https://github.com/dotnet/roslyn/pull/39594","RelatedDescription":"Open PR \"Don't MEF import core Roslyn language service type in SolutionExplore…\" (#39594)"},{"Id":"515039447","IsPullRequest":true,"CreatedAt":"2019-10-30T23:05:54","Actor":"JoeRobich","Number":"39593","RawContent":null,"Title":"Run integration tests with .NET Core SDK shipped with VS (#2)","State":"open","Body":"Integration tests were being run with the dotnet SDK from the\r\nbuild environment. This broke when VS updated to creating new\r\n.NET Core projects against a TFM not supported by the version\r\nof the SDK we were building against.\r\n\r\nThis change allows the .NET Core SDK that shipped with VS to\r\nbe found when running integration tests. Which is likely the\r\ndesired behavior.\r\n\r\nFixes #39588","Url":"https://github.com/dotnet/roslyn/pull/39593","RelatedDescription":"Open PR \"Run integration tests with .NET Core SDK shipped with VS (#2)\" (#39593)"},{"Id":"514990935","IsPullRequest":true,"CreatedAt":"2019-10-30T23:03:03","Actor":"KristianJakubik","Number":"39590","RawContent":null,"Title":"Support nullability codefix for ternary expression","State":"closed","Body":"Fixes:  #39420","Url":"https://github.com/dotnet/roslyn/pull/39590","RelatedDescription":"Closed or merged PR \"Support nullability codefix for ternary expression\" (#39590)"},{"Id":"515029635","IsPullRequest":false,"CreatedAt":"2019-10-30T22:44:24","Actor":"jbevain","Number":"39591","RawContent":null,"Title":"Automatic indentation issue with tabs","State":"closed","Body":"**Version Used**: \r\nVisualStudio.16.Release/16.3.7+29424.173\r\nMicrosoft .NET Framework Version 4.8.03752\r\nC# Tools   3.3.1-beta3-19461-02+2fd12c210e22f7d6245805c60340f6a34af6875b\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create C# project,\r\n2. Set C# editor to use the superior and one true setting, `Keep tabs`,\r\n3. Input following code:\r\n\r\n```csharp\r\nnamespace CSProjConsole\r\n{\r\n\tclass Program\r\n\t{\r\n\t\tstatic void Main(string[] args)\r\n\t\t{\r\n\t\t\tswitch (args.Length)\r\n\t\t\t{|CARET|}\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\nAs in:\r\n\r\n![image](https://user-images.githubusercontent.com/79284/67904524-d491c800-fb2b-11e9-8f3d-c3d97c9ce487.png)\r\n\r\n4. Press enter\r\n\r\n**Expected Behavior**:\r\n\r\n![image](https://user-images.githubusercontent.com/79284/67904321-3b62b180-fb2b-11e9-84fd-e9ba55e9ae1a.png)\r\n\r\n**Actual Behavior**:\r\n\r\n![image](https://user-images.githubusercontent.com/79284/67904295-2ab23b80-fb2b-11e9-85dd-91fdfa460818.png)\r\n\r\nThere are 3 spaces in front of the `}`, which are the number of tabs that should have been inserted.\r\n\r\n**Notice that this doesn't happen if you choose the inferior setting \"Insert spaces\"**","Url":"https://github.com/dotnet/roslyn/issues/39591","RelatedDescription":"Closed issue \"Automatic indentation issue with tabs\" (#39591)"},{"Id":"515031151","IsPullRequest":false,"CreatedAt":"2019-10-30T22:43:04","Actor":"AlekseyTs","Number":"39592","RawContent":null,"Title":"Incorrect Overrides completion in VB","State":"open","Body":"**Version Used**: \r\nMicrosoft Visual Studio Enterprise 2019 Int Preview\r\nVersion 16.5.0 Preview 1.0 [29427.7.master]\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Add the following API to Compilation class in  src\\Compilers\\Core\\Portable\\Compilation\\Compilation.cs\r\n\r\n```\r\n        public abstract ImmutableArray<MetadataReference> Test();\r\n```\r\n\r\n2. Go to VisualBasicCompilation class in src\\Compilers\\VisualBasic\\Portable\\Compilation\\VisualBasicCompilation.vb \r\n3. Type ```Overrides```, press space and select Test from the list of methods available to override. \r\n\r\n**Expected Behavior**:\r\n```\r\n        Overrides Function Test() As ImmutableArray(Of MetadataReference)\r\n            Throw New System.NotImplementedException()\r\n        End Function\r\n```\r\n\r\n**Actual Behavior**:\r\n```\r\n        Overrides Test()\r\n```\r\n\r\nThe following entry in the log is likely related:\r\n```\r\n  <entry>\r\n    <record>968</record>\r\n    <time>2019/10/30 22:32:45.547</time>\r\n    <type>Error</type>\r\n    <source>Editor or Editor Extension</source>\r\n    <description>System.InvalidCastException: Unable to cast object of type &apos;Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax&apos; to type &apos;Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax&apos;.&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitCrefSignaturePart(CrefSignaturePartSyntax node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignaturePartSyntax.Accept[TResult](VisualBasicSyntaxVisitor`1 visitor)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.Visit(SyntaxNode node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitListElement[TNode](TNode node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitList[TNode](SeparatedSyntaxList`1 list)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitCrefSignature(CrefSignatureSyntax node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignatureSyntax.Accept[TResult](VisualBasicSyntaxVisitor`1 visitor)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.Visit(SyntaxNode node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitCrefReference(CrefReferenceSyntax node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax.Accept[TResult](VisualBasicSyntaxVisitor`1 visitor)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.Visit(SyntaxNode node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitXmlCrefAttribute(XmlCrefAttributeSyntax node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.Accept[TResult](VisualBasicSyntaxVisitor`1 visitor)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.Visit(SyntaxNode node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitListElement[TNode](TNode node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitList[TNode](SyntaxList`1 list)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitXmlEmptyElement(XmlEmptyElementSyntax node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmptyElementSyntax.Accept[TResult](VisualBasicSyntaxVisitor`1 visitor)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.Visit(SyntaxNode node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitListElement[TNode](TNode node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitList[TNode](SyntaxList`1 list)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitXmlElement(XmlElementSyntax node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax.Accept[TResult](VisualBasicSyntaxVisitor`1 visitor)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.Visit(SyntaxNode node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitListElement[TNode](TNode node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitList[TNode](SyntaxList`1 list)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitDocumentationCommentTrivia(DocumentationCommentTriviaSyntax node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.Syntax.DocumentationCommentTriviaSyntax.Accept[TResult](VisualBasicSyntaxVisitor`1 visitor)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.Visit(SyntaxNode node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitTrivia(SyntaxTrivia trivia)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitListElement(SyntaxTrivia element)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitList(SyntaxTriviaList list)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitToken(SyntaxToken token)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitListElement(SyntaxToken token)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitList(SyntaxTokenList list)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitMethodStatement(MethodStatementSyntax node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.Accept[TResult](VisualBasicSyntaxVisitor`1 visitor)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.Visit(SyntaxNode node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitMethodBlock(MethodBlockSyntax node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockSyntax.Accept[TResult](VisualBasicSyntaxVisitor`1 visitor)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.Visit(SyntaxNode node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitListElement[TNode](TNode node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitList[TNode](SyntaxList`1 list)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitClassBlock(ClassBlockSyntax node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax.Accept[TResult](VisualBasicSyntaxVisitor`1 visitor)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.Visit(SyntaxNode node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitListElement[TNode](TNode node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitList[TNode](SyntaxList`1 list)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitNamespaceBlock(NamespaceBlockSyntax node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceBlockSyntax.Accept[TResult](VisualBasicSyntaxVisitor`1 visitor)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.Visit(SyntaxNode node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitListElement[TNode](TNode node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitList[TNode](SyntaxList`1 list)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitCompilationUnit(CompilationUnitSyntax node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.Syntax.CompilationUnitSyntax.Accept[TResult](VisualBasicSyntaxVisitor`1 visitor)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.Visit(SyntaxNode node)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.VisualBasic.Editing.VisualBasicImportAdder.MakeSafeToAddNamespaces(SyntaxNode root, IEnumerable`1 namespaceMembers, IEnumerable`1 extensionMethods, SemanticModel model, Workspace workspace, CancellationToken cancellationToken)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.Editing.ImportAdderService.MakeSafeToAddNamespaces(SyntaxNode root, IEnumerable`1 namespaceSymbols, SemanticModel model, Workspace workspace, CancellationToken cancellationToken)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.Editing.ImportAdderService.&lt;AddImportsAsync&gt;d__1.MoveNext()&#x000D;&#x000A;--- End of stack trace from previous location where exception was thrown ---&#x000D;&#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&#x000D;&#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.Editing.ImportAdder.&lt;AddImportsFromSymbolAnnotationAsync&gt;d__8.MoveNext()&#x000D;&#x000A;--- End of stack trace from previous location where exception was thrown ---&#x000D;&#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&#x000D;&#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.CodeGeneration.AbstractCodeGenerationService.&lt;GetEditAsync&gt;d__39.MoveNext()&#x000D;&#x000A;--- End of stack trace from previous location where exception was thrown ---&#x000D;&#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&#x000D;&#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.Completion.Providers.AbstractMemberInsertingCompletionProvider.&lt;GenerateMemberAndUsingsAsync&gt;d__9.MoveNext()&#x000D;&#x000A;--- End of stack trace from previous location where exception was thrown ---&#x000D;&#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&#x000D;&#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.Completion.Providers.AbstractMemberInsertingCompletionProvider.&lt;DetermineNewDocumentAsync&gt;d__8.MoveNext()&#x000D;&#x000A;--- End of stack trace from previous location where exception was thrown ---&#x000D;&#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&#x000D;&#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.Completion.Providers.AbstractMemberInsertingCompletionProvider.&lt;GetChangeAsync&gt;d__7.MoveNext()&#x000D;&#x000A;--- End of stack trace from previous location where exception was thrown ---&#x000D;&#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)&#x000D;&#x000A;   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.Completion.CompletionServiceWithProviders.&lt;GetChangeAsync&gt;d__38.MoveNext()&#x000D;&#x000A;--- End of stack trace from previous location where exception was thrown ---&#x000D;&#x000A;   at Roslyn.Utilities.TaskExtensions.WaitAndGetResult_CanCallOnBackground[T](Task`1 task, CancellationToken cancellationToken)&#x000D;&#x000A;   at Roslyn.Utilities.TaskExtensions.WaitAndGetResult[T](Task`1 task, CancellationToken cancellationToken)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.Editor.Implementation.IntelliSense.AsyncCompletion.CommitManager.Commit(Document document, CompletionService completionService, ITextView view, ITextBuffer subjectBuffer, CompletionItem roslynItem, TextSpan completionListSpan, Nullable`1 commitCharacter, ITextSnapshot triggerSnapshot, CompletionRules rules, String filterText, CancellationToken cancellationToken)&#x000D;&#x000A;   at Microsoft.CodeAnalysis.Editor.Implementation.IntelliSense.AsyncCompletion.CommitManager.TryCommit(IAsyncCompletionSession session, ITextBuffer subjectBuffer, CompletionItem item, Char typeChar, CancellationToken cancellationToken)&#x000D;&#x000A;   at Microsoft.VisualStudio.Language.Intellisense.AsyncCompletion.Implementation.AsyncCompletionSession.&lt;&gt;c__DisplayClass78_1.&lt;CommitItem&gt;b__0()&#x000D;&#x000A;   at Microsoft.VisualStudio.Text.Utilities.GuardedOperations.CallExtensionPoint[T](Object errorSource, Func`1 call, T valueOnThrow, Predicate`1 exceptionToIgnore, Predicate`1 exceptionToHandle)&#x000D;&#x000A;--- End of stack trace from previous location where exception was thrown ---&#x000D;&#x000A;   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)</description>\r\n  </entry>\r\n```","Url":"https://github.com/dotnet/roslyn/issues/39592","RelatedDescription":"Open issue \"Incorrect Overrides completion in VB\" (#39592)"},{"Id":"514900541","IsPullRequest":true,"CreatedAt":"2019-10-30T18:44:34","Actor":"cston","Number":"39589","RawContent":null,"Title":"Do not report ErrorCode.WRN_ExpressionMayIntroduceNullT","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/39589","RelatedDescription":"Open PR \"Do not report ErrorCode.WRN_ExpressionMayIntroduceNullT\" (#39589)"},{"Id":"514791777","IsPullRequest":false,"CreatedAt":"2019-10-30T16:03:42","Actor":"JoeRobich","Number":"39588","RawContent":null,"Title":"Integration test failures with netcoreapp31 ","State":"open","Body":"Integration tests are failing for .NET Core workspace tests. As reported in https://github.com/dotnet/roslyn/pull/39444#issuecomment-547615317\r\n\r\n```\r\nThe current .NET SDK does not support targeting .NET Core 3.1. Either target .NET Core 3.0 or lower, or use a version of the .NET SDK that supports .NET Core 3.1. Project:TestProj File:Microsoft.NET.TargetFrameworkInference.targets Line:127 Column:5\r\n```\r\n\r\nThis seems to be caused by the VS build on the integration VMs defaulting to a netcoreapp31 TFM for new projects which is unsupported by the .NET Core SDK in our build environment.","Url":"https://github.com/dotnet/roslyn/issues/39588","RelatedDescription":"Open issue \"Integration test failures with netcoreapp31 \" (#39588)"},{"Id":"514661034","IsPullRequest":false,"CreatedAt":"2019-10-30T13:16:34","Actor":"boulix3","Number":"39586","RawContent":null,"Title":"CS8600 after linq Where to filter non null values.","State":"open","Body":"Hello,\r\n\r\n**Version Used**: \r\nVisual studio 2019 16.4.0 Preview 2.0\r\n\r\nProject file : \r\n- LangVersion : 8.0\r\n- Nullable : enable\r\n- TargetFramework : netcoreapp3.1\r\n\r\n**Steps to Reproduce**:\r\n\r\n```csharp\r\n            var nonNullNames = items.Where(x => x.Name != null);\r\n            string name = nonNullNames.First().Name;\r\n```\r\n**Expected Behavior**:\r\nThere should be no warning.\r\n\r\n**Actual Behavior**:\r\nCS8600 Converting null literal or possible null value to non-nullable type.","Url":"https://github.com/dotnet/roslyn/issues/39586","RelatedDescription":"Open issue \"CS8600 after linq Where to filter non null values.\" (#39586)"},{"Id":"514650938","IsPullRequest":false,"CreatedAt":"2019-10-30T13:01:18","Actor":"WrongBit","Number":"39585","RawContent":null,"Title":"Go To Definition for XAML elements is wrong","State":"open","Body":"When you create some XAML element (say button), **definition** of this button is XAML tag <Button> in *.xaml file. Therefore if I stay in C# code on button's name and select \"Go To Definition\", I should be moved to XAML file above this <Button> element.\r\nCurrently VS moves me to useless autogenerated *.g.cs file. Why?","Url":"https://github.com/dotnet/roslyn/issues/39585","RelatedDescription":"Open issue \"Go To Definition for XAML elements is wrong\" (#39585)"},{"Id":"514644375","IsPullRequest":true,"CreatedAt":"2019-10-30T12:51:49","Actor":"YairHalberstadt","Number":"39584","RawContent":null,"Title":"Fix Host Object Access in Interactive","State":"open","Body":"Fixes #39565\r\nFixes #39581\r\n\r\nNote that instead of reporting `error CS8422: A static local function cannot contain a reference to 'this' or 'base'.` we instead report `error CS0120: An object reference is required for the non-static field, method, or property`\r\n\r\nGiven that this is an extremely edge scenario in scripting I think that's not too much of an issue?\r\n\r\nAlso fixing #39581 is a breaking change. I highly doubt it's one anyone's hit, but insofar as that's true, maybe there's no point fixing it?","Url":"https://github.com/dotnet/roslyn/pull/39584","RelatedDescription":"Open PR \"Fix Host Object Access in Interactive\" (#39584)"},{"Id":"514614408","IsPullRequest":true,"CreatedAt":"2019-10-30T12:04:15","Actor":"dotnet-bot","Number":"39582","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39582","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#39582)"},{"Id":"514539824","IsPullRequest":false,"CreatedAt":"2019-10-30T10:10:13","Actor":"YairHalberstadt","Number":"39581","RawContent":null,"Title":"C# Interactive static local can invoke instance method on global","State":"open","Body":"**Version Used**: VS 16.4 preview 2, Microsoft.CodeAnalysis.Scripting.CSharp v 3.3.1\r\n\r\n**Steps to Reproduce**:\r\n\r\nRun the following:\r\n```csharp\r\nusing Microsoft.CodeAnalysis.CSharp.Scripting;\r\nusing Microsoft.CodeAnalysis.Scripting;\r\n\r\npublic class ExecutionContext\r\n{\r\n\tpublic bool TryGetValue(out object obj)\r\n\t{\r\n\t\tobj = new object();\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nclass Program\r\n{\r\n\tstatic async System.Threading.Tasks.Task Main(string[] args)\r\n\t{\r\n\t\tvar options = ScriptOptions.Default\r\n\t\t\t.AddReferences(typeof(ExecutionContext).Assembly);\r\n\r\n\t\tvar code = @\"\r\n\t\t\tbool M()\r\n\t\t\t{\r\n\t\t\t\treturn Inner();\r\n\t\t\t\tstatic bool Inner()\r\n\t\t\t\t{\r\n\t\t\t\t\tif(TryGetValue(out var result)){\r\n\t\t\t\t\t    _ = result;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn M();\r\n            \";\r\n\r\n\t\tawait CSharpScript.RunAsync<bool>(code, globalsType: typeof(ExecutionContext), options: options, globals: new ExecutionContext());\r\n\t}\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nerror CS8422: A static local function cannot contain a reference to 'this' or 'base'.\r\n\r\nNote that you do get `error CS0120: An object reference is required for the non-static field, method, or property 'ExecutionContext.TryGetValue(out object)'` when you run the following:\r\n\r\n```csharp\r\nusing Microsoft.CodeAnalysis.CSharp.Scripting;\r\nusing Microsoft.CodeAnalysis.Scripting;\r\n\r\npublic class ExecutionContext\r\n{\r\n\tpublic bool TryGetValue(out object obj)\r\n\t{\r\n\t\tobj = new object();\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nclass Program\r\n{\r\n\tstatic async System.Threading.Tasks.Task Main(string[] args)\r\n\t{\r\n\t\tvar options = ScriptOptions.Default\r\n\t\t\t.AddReferences(typeof(ExecutionContext).Assembly);\r\n\r\n\t\tvar code = @\"\r\n\t\t\tstatic bool M()\r\n\t\t\t{\r\n\t\t\t\tif(TryGetValue(out var result)){\r\n\t\t\t\t    _ = result;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn M();\r\n            \";\r\n\r\n\t\tawait CSharpScript.RunAsync<bool>(code, globalsType: typeof(ExecutionContext), options: options, globals: new ExecutionContext());\r\n\t}\r\n}\r\n```\r\n\r\n**Actual Behavior**:\r\n\r\nNo error","Url":"https://github.com/dotnet/roslyn/issues/39581","RelatedDescription":"Open issue \"C# Interactive static local can invoke instance method on global\" (#39581)"},{"Id":"514521440","IsPullRequest":false,"CreatedAt":"2019-10-30T09:41:22","Actor":"sfuller","Number":"39580","RawContent":null,"Title":"Warning is not issued for uninitialized non-nullable reference type fields in structs","State":"open","Body":"**Version Used**: \r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\n**Steps to Reproduce**:\r\nCompile the following code:\r\n```cs\r\n#nullable enable\r\n\r\npublic struct Foo\r\n{\r\n    public string Value;\r\n    \r\n    public int DoStuff()\r\n    {\r\n        return Value.Length;\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nA CS8618 or similar warning is issued due to `Value` possibly not being initialized.\r\nExample: `warning CS8618: Non-nullable field 'Value' is uninitialized. Consider declaring the field as nullable.`\r\n\r\n**Actual Behavior**:\r\nNo warnings are issued.\r\n\r\n**Note**\r\nWhen `Foo` is changed from a struct to a class, the warning is reported.\r\nI was able to reproduce this with sharp lab: [link](https://sharplab.io/#v2:D4AQTAjAsAULDEA7ArgG1QQwEaoKYAJdFs9ZYQBmfAZwBcAnZAY1vwDEB7D2Ab1nwH5KQiAAZ8ANQypkuANz9BigcICWiVgBEOAZVrIAZgYAUASmX4+MQTaEB2SdNkA6ADJEA5rQAWC64IBfWACgA===)\r\n","Url":"https://github.com/dotnet/roslyn/issues/39580","RelatedDescription":"Open issue \"Warning is not issued for uninitialized non-nullable reference type fields in structs\" (#39580)"},{"Id":"514642666","IsPullRequest":false,"CreatedAt":"2019-10-30T06:07:08","Actor":"Daniel15","Number":"39583","RawContent":null,"Title":"Yielding in catch blocks not supported in async iterators","State":"open","Body":"Imagine something like:\r\n```cs\r\npublic async IAsyncEnumerable<string> DoStuff()\r\n{\r\n\tawait foreach (var reply in CallSomeApi())\r\n\t{\r\n\t\tyield return \"Message: \" + reply;\r\n\t}\r\n}\r\n```\r\n\r\nWhere `CallSomeApi` is actually some streaming API that provides an `IAsyncEnumerable` (for example, `.ResponseStream.ReadAllAsync()` on a gRPC streaming response).\r\n\r\nSay `CallSomeApi` can throw exceptions, for example:\r\n```cs\r\nprivate static async IAsyncEnumerable<string> CallSomeApi()\r\n{\r\n\tyield return \"foo\";\r\n\tawait Task.Delay(100);\r\n\tthrow new Exception(\"Something bad happened\");\r\n}\r\n```\r\n\r\nHow am I supposed to handle exceptions thrown by CallSomeApi?\r\n\r\nMy initial naive thought was something like this:\r\n```cs\r\npublic async IAsyncEnumerable<string> DoStuff(\r\n\t[EnumeratorCancellation] CancellationToken cancellationToken\r\n)\r\n{\r\n\ttry\r\n\t{\r\n\t\tawait foreach (var reply in CallSomeApi().WithCancellation(cancellationToken))\r\n\t\t{\r\n\t\t\tyield return reply;\r\n\t\t}\r\n\t}\r\n\tcatch (Exception ex)\r\n\t{\r\n\t\tyield return \"Error: \" + ex.Message;\r\n\t}\r\n}\r\n```\r\n\r\nBut this throws [CS1626](https://docs.microsoft.com/en-us/dotnet/csharp/misc/cs1626):\r\n```\r\nError\tCS1626\tCannot yield a value in the body of a try block with a catch clause\r\n```","Url":"https://github.com/dotnet/roslyn/issues/39583","RelatedDescription":"Open issue \"Yielding in catch blocks not supported in async iterators\" (#39583)"},{"Id":"514373951","IsPullRequest":false,"CreatedAt":"2019-10-30T03:31:42","Actor":"yyjdelete","Number":"39579","RawContent":null,"Title":"IntelliSense don't suggest return-types for local function with modifiers","State":"open","Body":"**Version Used**: \r\nVS 16.4.0Preview2\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Remove the return type of local function, and typing it again;\r\n```cs\r\n        public static void Method()\r\n        {\r\n            static void XXX() { }\r\n            async Task YYY() { }\r\n        }\r\n```\r\n\r\n**Expected Behavior**:\r\nType will be suggest for the place after modifiers.\r\n\r\n**Actual Behavior**:\r\nNo intellisense is shown after `static`;\r\nOnly `void` and another `async` is shown after `async`;\r\n![image](https://user-images.githubusercontent.com/1819074/67825916-da74b280-fb05-11e9-9006-2f328c77c988.png)\r\n\r\nOnly another `async` is shown after `static async`;\r\n","Url":"https://github.com/dotnet/roslyn/issues/39579","RelatedDescription":"Open issue \"IntelliSense don't suggest return-types for local function with modifiers\" (#39579)"},{"Id":"514262222","IsPullRequest":true,"CreatedAt":"2019-10-30T00:43:13","Actor":"dibarbet","Number":"39575","RawContent":null,"Title":"Fix multiple diagnostics showing up when configuring unnecessary pare…","State":"closed","Body":"…ntheses severity with editor config","Url":"https://github.com/dotnet/roslyn/pull/39575","RelatedDescription":"Closed or merged PR \"Fix multiple diagnostics showing up when configuring unnecessary pare…\" (#39575)"},{"Id":"514298858","IsPullRequest":false,"CreatedAt":"2019-10-30T00:16:07","Actor":"CyrusNajmabadi","Number":"39578","RawContent":null,"Title":"IsNodeUnderselected crash","State":"closed","Body":"This is probably a dupe.  but i thought we already fixed this.  I'm still getting this in Preview 2 though:\r\n\r\n```\r\nSystem.ArgumentOutOfRangeException : Specified argument was out of the range of valid values.\r\nParameter name: position\r\n   at Microsoft.CodeAnalysis.SyntaxNode.FindTokenCore(Int32 position,Boolean findInsideTrivia)\r\n   at Microsoft.CodeAnalysis.CodeRefactoringHelpers.IsNodeUnderselected(SyntaxNode node,TextSpan selection)\r\n   at async Microsoft.CodeAnalysis.IntroduceVariable.AbstractIntroduceVariableService`6.State.TryInitializeAsync[TService,TExpressionSyntax,TTypeSyntax,TTypeDeclarationSyntax,TQueryExpressionSyntax,TNameSyntax](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.IntroduceVariable.AbstractIntroduceVariableService`6.State.GenerateAsync[TService,TExpressionSyntax,TTypeSyntax,TTypeDeclarationSyntax,TQueryExpressionSyntax,TNameSyntax](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.IntroduceVariable.AbstractIntroduceVariableService`6.IntroduceVariableAsync[TService,TExpressionSyntax,TTypeSyntax,TTypeDeclarationSyntax,TQueryExpressionSyntax,TNameSyntax](<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.IntroduceVariable.IntroduceVariableCodeRefactoringProvider.ComputeRefactoringsAsync(<Unknown Parameters>)\r\n   at async Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringService.GetRefactoringFromProviderAsync(<Unknown Parameters>)\r\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n```\r\n\r\nIf htis is a dupe, feel free to close.  However, if this was expected to be fixed by now, i hope this helps!","Url":"https://github.com/dotnet/roslyn/issues/39578","RelatedDescription":"Closed issue \"IsNodeUnderselected crash\" (#39578)"},{"Id":"514275925","IsPullRequest":false,"CreatedAt":"2019-10-29T22:49:20","Actor":"prosser","Number":"39577","RawContent":null,"Title":"Live Unit Testing fails with 'FatalError - System.ArgumentException: Syntax tree already present'","State":"open","Body":"**Version Used**: 16.3.7\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Load solution with SDK-style project targeting net462. Ours also has included .props and .targets, including those injected by .nupkg with custom build tasks.\r\n2. Start LUT\r\n\r\n**Expected Behavior**:\r\nLUT starts as expected\r\n\r\n**Actual Behavior**:\r\nError and LUT does not start.\r\n\r\n[15:43:05.756 Error] - FatalError - System.ArgumentException: Syntax tree already present\r\nParameter name: trees[136]\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AddSyntaxTrees(IEnumerable`1 trees)\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonAddSyntaxTrees(IEnumerable`1 trees)\r\n   at Microsoft.CodeAnalysis.LiveUnitTesting.BuildManagement.CompilationComparer.GetUpdatedCompilation(Compilation compilation, CommandLineArguments arguments, Logger logger, BuildDifference& differences)\r\n   at Microsoft.CodeAnalysis.LiveUnitTesting.BuildManagement.EmitHelper.<EmitAsync>d__5.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.LiveUnitTesting.BuildManagement.BuildService.<EmitSingleProjectAsync>d__57.MoveNext()\r\n[15:43:05.761 Info] Build completed with failures. Errors were logged under '<redacted>\\v16\\lut\\0\\diag\\'.\r\n[15:43:21.477 Info] Live Unit Testing stopped.","Url":"https://github.com/dotnet/roslyn/issues/39577","RelatedDescription":"Open issue \"Live Unit Testing fails with 'FatalError - System.ArgumentException: Syntax tree already present'\" (#39577)"},{"Id":"514269813","IsPullRequest":true,"CreatedAt":"2019-10-29T22:35:57","Actor":"333fred","Number":"39576","RawContent":null,"Title":"Introduce IUsingDeclarationOperation","State":"open","Body":"Remove VariableDeclarationKind, and replace with a new IUsingDeclarationOperation node as a parent to IVariableDeclarationGroupOperation.\r\n\r\nI chose to make IUsingDeclarationOperation be the always-implicit node, leaving IVariableDeclarationGroupOperation to be implicit or explicit depending on whether the variable was implicitly declared. As far as I could find, we don't have a direct precedent, but I had 2 reasons for this:\r\n\r\n1. If a using is trying to filter variables, they may look for groups that weren't implicitly declared. This might lead to false negatives on this group.\r\n2. The closest precedent I see is implicit conversions, where the IConversionOperation on top is implicit. This isn't a direct comparison, but it feels similar enough to my mind to serve as additionally justification.\r\n\r\nI don't feel too strongly about either of these assertions though, so if there's a good reason for doing it the other way I'm not seeing please let me know.\r\n\r\nFixes https://github.com/dotnet/roslyn/issues/39572. \r\n\r\ncc @mavasani @jasonmalinowski.\r\n\r\n@agocke, this will need QB approval. We're trying to remove an API before it ships for the first time in 16.4.","Url":"https://github.com/dotnet/roslyn/pull/39576","RelatedDescription":"Open PR \"Introduce IUsingDeclarationOperation\" (#39576)"},{"Id":"514254499","IsPullRequest":true,"CreatedAt":"2019-10-29T22:04:07","Actor":"genlu","Number":"39574","RawContent":null,"Title":"Remove experiment for \"sorting completion list by matching\"","State":"open","Body":"We have been running the experiment of \"sorting completion list by matching\" (#38499) internally for a couple months now, thing seems to be working well. So I'm removing the experiment which would enable this new behavior for everybody. \r\n\r\n@vatsalyaagrawal @ivanbasov @jinujoseph Please let me know if you have any concerns","Url":"https://github.com/dotnet/roslyn/pull/39574","RelatedDescription":"Open PR \"Remove experiment for \"sorting completion list by matching\"\" (#39574)"},{"Id":"514231152","IsPullRequest":true,"CreatedAt":"2019-10-29T21:19:16","Actor":"dustincoleman","Number":"39573","RawContent":null,"Title":"Do not return favorites in expansions of null values.","State":"open","Body":"Fix for https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1010026. This bug causes a tremendous number of non-fatal watsons in concord when hit.","Url":"https://github.com/dotnet/roslyn/pull/39573","RelatedDescription":"Open PR \"Do not return favorites in expansions of null values.\" (#39573)"},{"Id":"514224689","IsPullRequest":false,"CreatedAt":"2019-10-29T21:07:30","Actor":"333fred","Number":"39572","RawContent":null,"Title":"Replace VariableDeclarationKind with IUsingDeclarationOperation parent node","State":"open","Body":"On review, we found issues with the `VariableDeclarationKind` enum. First, `Default` is inconsistent with other names we use in Operation-specific Kind enums, such as `CaseKind.Default`, where `Default` is a real thing with meaning. Second, whatever word we choose for `Default` should be able to encapsulate all other types of declarations, including patterns, foreach, using statements, etc. The appropriate API here would be to have a separate kind for each of these types, which isn't something that we feel that we want to do. Currently, you look to the parent node of the `IVariableDeclarationGroupOperation` to find the context you're declaring in, and we feel that should be maintained for using declarations as well. Therefore, we will replace this Kind enum with an `IUsingDeclarationOperation` node, which will be the parent of the `IVariableDeclarationGroupOperation`. If further feedback warrants, we can consider adding extension methods on `IVariableDeclarationGroupOperation` nodes to expose this info on those nodes as well.\r\n\r\ncc @chsienki @AlekseyTs @gafter @KathleenDollard @DustinCampbell @agocke ","Url":"https://github.com/dotnet/roslyn/issues/39572","RelatedDescription":"Open issue \"Replace VariableDeclarationKind with IUsingDeclarationOperation parent node\" (#39572)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"515147260","IsPullRequest":true,"CreatedAt":"2019-10-31T04:05:52","Actor":"Dotnet-GitSync-Bot","Number":"7854","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"open","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @echesakovMSFT @stephentoub","Url":"https://github.com/dotnet/corert/pull/7854","RelatedDescription":"Open PR \"Mirror changes from dotnet/coreclr,corefx\" (#7854)"},{"Id":"514751933","IsPullRequest":true,"CreatedAt":"2019-10-31T04:03:03","Actor":"Dotnet-GitSync-Bot","Number":"7853","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @echesakovMSFT","Url":"https://github.com/dotnet/corert/pull/7853","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7853)"},{"Id":"514311437","IsPullRequest":true,"CreatedAt":"2019-10-30T15:11:24","Actor":"Dotnet-GitSync-Bot","Number":"7851","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @AaronRobinsonMSFT @carlossanlop","Url":"https://github.com/dotnet/corert/pull/7851","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7851)"},{"Id":"514701238","IsPullRequest":false,"CreatedAt":"2019-10-30T14:11:01","Actor":"jkotas","Number":"7852","RawContent":null,"Title":"AF: InstantiatedMethod.SetCachedCanonValue","State":"open","Body":"```\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\n  Assertion Failed\r\n  \r\n     at Internal.TypeSystem.InstantiatedMethod.SetCachedCanonValue(CanonicalFormKind kind, InstantiatedMethod value) in F:\\workspace.2\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\Canon\\InstantiatedMethod.Canon.cs:line 77\r\n     at Internal.TypeSystem.InstantiatedMethod.GetCanonMethodTarget(CanonicalFormKind kind) in F:\\workspace.2\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\Canon\\InstantiatedMethod.Canon.cs:line 50\r\n     at Internal.JitInterface.CorInfoImpl.getCallInfo(CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult) in F:\\workspace.2\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\JitInterface\\CorInfoImpl.RyuJit.cs:line 1193\r\n     at Internal.JitInterface.CorInfoImpl._getCallInfo(IntPtr thisHandle, IntPtr* ppException, CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult) in F:\\workspace.2\\_work\\1\\s\\src\\JitInterface\\src\\CorInfoBase.cs:line 2348\r\n     at Internal.JitInterface.CorInfoImpl.JitCompileMethod(IntPtr& exception, IntPtr jit, IntPtr thisHandle, IntPtr callbacks, CORINFO_METHOD_INFO& info, UInt32 flags, IntPtr& nativeEntry, UInt32& codeSize)\r\n     at Internal.JitInterface.CorInfoImpl.JitCompileMethod(IntPtr& exception, IntPtr jit, IntPtr thisHandle, IntPtr callbacks, CORINFO_METHOD_INFO& info, UInt32 flags, IntPtr& nativeEntry, UInt32& codeSize)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL) in F:\\workspace.2\\_work\\1\\s\\src\\JitInterface\\src\\CorInfoImpl.cs:line 168\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL) in F:\\workspace.2\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\JitInterface\\CorInfoImpl.RyuJit.cs:line 56\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode) in F:\\workspace.2\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\Compiler\\RyuJitCompilation.cs:line 139\r\n     at ILCompiler.RyuJitCompilation.<CompileMultiThreaded>b__8_0(Object m) in F:\\workspace.2\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\Compiler\\RyuJitCompilation.cs:line 101\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  Assertion Failed\r\n```","Url":"https://github.com/dotnet/corert/issues/7852","RelatedDescription":"Open issue \"AF: InstantiatedMethod.SetCachedCanonValue\" (#7852)"},{"Id":"514191229","IsPullRequest":true,"CreatedAt":"2019-10-30T00:06:55","Actor":"Dotnet-GitSync-Bot","Number":"7850","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @danmosemsft @jkotas @stephentoub @elinor-fung @noahfalk","Url":"https://github.com/dotnet/corert/pull/7850","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7850)"},{"Id":"513004068","IsPullRequest":true,"CreatedAt":"2019-10-28T18:00:32","Actor":"MichalStrehovsky","Number":"7848","RawContent":null,"Title":"Port changes from CoreCLR","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7848","RelatedDescription":"Closed or merged PR \"Port changes from CoreCLR\" (#7848)"},{"Id":"513365041","IsPullRequest":true,"CreatedAt":"2019-10-28T17:14:45","Actor":"filipnavara","Number":"7849","RawContent":null,"Title":"Fix building portable thread pool on Windows","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7849","RelatedDescription":"Closed or merged PR \"Fix building portable thread pool on Windows\" (#7849)"},{"Id":"512879532","IsPullRequest":true,"CreatedAt":"2019-10-27T04:20:21","Actor":"MichalStrehovsky","Number":"7846","RawContent":null,"Title":"Fix thread safety issue in StructMarshallingThunk","State":"closed","Body":"The marshalling code generators are not thread safe. We should not cache them.\r\n\r\nHopefully fixes #7829.","Url":"https://github.com/dotnet/corert/pull/7846","RelatedDescription":"Closed or merged PR \"Fix thread safety issue in StructMarshallingThunk\" (#7846)"},{"Id":"509508420","IsPullRequest":false,"CreatedAt":"2019-10-27T04:20:21","Actor":"jkotas","Number":"7829","RawContent":null,"Title":"Compilation crashes with System.IndexOutOfRangeException","State":"closed","Body":"```\r\n  Unhandled Exception: System.IndexOutOfRangeException: Index was outside the bounds of the array.\r\n     at Internal.IL.Stubs.ILStubMethodIL.GetObject(Int32 token) in F:\\workspace\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\IL\\Stubs\\ILEmitter.cs:line 550\r\n     at Internal.IL.ILStackHelper.ComputeMaxStack(MethodIL methodIL) in F:\\workspace\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\IL\\ILStackHelper.cs:line 290\r\n     at Internal.IL.Stubs.ILStubMethodIL.get_MaxStack() in F:\\workspace\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\IL\\Stubs\\ILEmitter.cs:line 527\r\n     at Internal.JitInterface.CorInfoImpl.Get_CORINFO_METHOD_INFO(MethodDesc method, MethodIL methodIL, CORINFO_METHOD_INFO* methodInfo) in F:\\workspace\\_work\\1\\s\\src\\JitInterface\\src\\CorInfoImpl.cs:line 413\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL) in F:\\workspace\\_work\\1\\s\\src\\JitInterface\\src\\CorInfoImpl.cs:line 154\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode) in F:\\workspace\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\Compiler\\RyuJitCompilation.cs:line 139\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```","Url":"https://github.com/dotnet/corert/issues/7829","RelatedDescription":"Closed issue \"Compilation crashes with System.IndexOutOfRangeException\" (#7829)"},{"Id":"512885160","IsPullRequest":true,"CreatedAt":"2019-10-26T22:46:14","Actor":"Dotnet-GitSync-Bot","Number":"7847","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @dotnet-maestro[bot]","Url":"https://github.com/dotnet/corert/pull/7847","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7847)"},{"Id":"512800635","IsPullRequest":true,"CreatedAt":"2019-10-26T17:45:27","Actor":"KodrAus","Number":"7843","RawContent":null,"Title":"Only set dependency package versions if they're empty","State":"closed","Body":"Hi! :wave:\r\n\r\nThis may not be a change you're interested in taking, but lately I've been playing with using local builds of various pieces of the .NET toolchain and have been having trouble finding a reasonable way to pull in my own build of `objwriter` based on a build of LLVM I've done previously.\r\n\r\nBy making these package versions conditionally set it becomes possible to specify them as environment variables when building `corert` without having to touch any of the other build scripts.","Url":"https://github.com/dotnet/corert/pull/7843","RelatedDescription":"Closed or merged PR \"Only set dependency package versions if they're empty\" (#7843)"},{"Id":"512839586","IsPullRequest":true,"CreatedAt":"2019-10-26T16:38:16","Actor":"Dotnet-GitSync-Bot","Number":"7845","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @benaadams","Url":"https://github.com/dotnet/corert/pull/7845","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7845)"},{"Id":"512828238","IsPullRequest":true,"CreatedAt":"2019-10-26T14:03:27","Actor":"Dotnet-GitSync-Bot","Number":"7844","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7844","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7844)"},{"Id":"512692626","IsPullRequest":true,"CreatedAt":"2019-10-26T12:10:19","Actor":"Dotnet-GitSync-Bot","Number":"7842","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @VSadov @stephentoub","Url":"https://github.com/dotnet/corert/pull/7842","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7842)"},{"Id":"512298382","IsPullRequest":true,"CreatedAt":"2019-10-25T06:32:29","Actor":"jkotas","Number":"7841","RawContent":null,"Title":"Port AllocateUninitializedArray changes","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7841","RelatedDescription":"Closed or merged PR \"Port AllocateUninitializedArray changes\" (#7841)"},{"Id":"512183999","IsPullRequest":true,"CreatedAt":"2019-10-24T22:42:39","Actor":"Dotnet-GitSync-Bot","Number":"7840","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @echesakovMSFT @tannergooding @adamsitnik @VSadov","Url":"https://github.com/dotnet/corert/pull/7840","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7840)"},{"Id":"511641265","IsPullRequest":true,"CreatedAt":"2019-10-24T21:08:56","Actor":"Dotnet-GitSync-Bot","Number":"7839","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7839","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7839)"},{"Id":"511517701","IsPullRequest":true,"CreatedAt":"2019-10-23T23:09:44","Actor":"Dotnet-GitSync-Bot","Number":"7838","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding @AaronRobinsonMSFT @marek-safar @tmds","Url":"https://github.com/dotnet/corert/pull/7838","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7838)"},{"Id":"510975732","IsPullRequest":true,"CreatedAt":"2019-10-23T16:07:26","Actor":"Dotnet-GitSync-Bot","Number":"7837","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7837","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7837)"},{"Id":"510948047","IsPullRequest":true,"CreatedAt":"2019-10-22T22:07:19","Actor":"Dotnet-GitSync-Bot","Number":"7836","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @AaronRobinsonMSFT","Url":"https://github.com/dotnet/corert/pull/7836","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7836)"},{"Id":"510804057","IsPullRequest":true,"CreatedAt":"2019-10-22T18:41:16","Actor":"Dotnet-GitSync-Bot","Number":"7834","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @adamsitnik @jkotas @filipnavara @tannergooding","Url":"https://github.com/dotnet/corert/pull/7834","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7834)"},{"Id":"510815389","IsPullRequest":false,"CreatedAt":"2019-10-22T17:57:39","Actor":"tiandian","Number":"7835","RawContent":null,"Title":"Is it possible to provide a tool to scan a c# project(and .net dll) to list all codes that are not compatible with corert?","State":"open","Body":"For my asp.net core c# project, it's a bit complicated, and it references some third party dlls, after spend some time, i fixing some problems, now it can build with corert, but when run, it will error.\r\n\r\nI don't know how many potential problems in my project are incompatible with corert.\r\n\r\nSo if you can provide a tool to scan my c# project, and list all codes that incompatible with corert, then i can modify all these codes before release it, otherwise, even if it can run now, there will still be potential errors.\r\n\r\nIf after fix all my c# project's incompatible problem, it still run error, then i know it must be some third party dlls are incompatible with corert, then i can disassembly the dll one by one to c# codes and scan it to find which one incompatible with corert, then submit a request to the dll's owner to compatible with corert. \r\n\r\nThanks.","Url":"https://github.com/dotnet/corert/issues/7835","RelatedDescription":"Open issue \"Is it possible to provide a tool to scan a c# project(and .net dll) to list all codes that are not compatible with corert?\" (#7835)"},{"Id":"509929616","IsPullRequest":false,"CreatedAt":"2019-10-22T05:20:51","Actor":"DardoTheMaster","Number":"7832","RawContent":null,"Title":"Unable to compile on Ubuntu 18.04 (WSL)","State":"closed","Body":"Hello, i'm just trying out to build a shared library from a dotnet project.\r\nUnfortunately i'm getting this error and i'm unable to build the underlined project.\r\n\r\n```\r\n$ dotnet publish /p:NativeLib=Shared -r linux-x64\r\nMicrosoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj : warning NU1603: NativeLibrary depends on Microsoft.DotNet.ILCompiler (>= 1.0.0-alpha-27527-01) but Microsoft.DotNet.ILCompiler 1.0.0-alpha-27527-01 was not found. An approximate best match of Microsoft.DotNet.ILCompiler 1.0.0-alpha-27606-05 was resolved.\r\n  Restore completed in 63.25 ms for /mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj.\r\n/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj : warning NU1603: NativeLibrary depends on Microsoft.DotNet.ILCompiler (>= 1.0.0-alpha-27527-01) but Microsoft.DotNet.ILCompiler 1.0.0-alpha-27527-01 was not found. An approximate best match of Microsoft.DotNet.ILCompiler 1.0.0-alpha-27606-05 was resolved.\r\n  NativeLibrary -> /mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/bin/Debug/netcoreapp3.0/linux-x64/NativeLibrary.dll\r\n  /usr/bin/clang-6.0\r\n  Generating native code\r\nclang : warning : argument unused during compilation: '-exported_symbols_list obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.exports' [-Wunused-command-line-argument] [/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj]\r\n  /usr/bin/ld: obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.o: relocation R_X86_64_PC32 against symbol `System_Console_System_Text_StringOrCharArray____GetFieldHelper' can not be used when making a shared object; recompile with -fPIC\r\n  /usr/bin/ld: final link failed: Bad value\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj]\r\n/home/dardo/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/build/Microsoft.NETCore.Native.targets(337,5): error MSB3073: The command \"clang-6.0 \"obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.o\" -o \"bin/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.so\" -exported_symbols_list \"obj/Debug/netcoreapp3.0/linux-x64/native/NativeLibrary.exports\" /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libbootstrapperdll.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libRuntime.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libSystem.Private.CoreLib.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/sdk/libSystem.Private.TypeLoader.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Globalization.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.IO.Compression.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Net.Security.Native.a /home/dardo/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27606-05/framework/System.Security.Cryptography.Native.OpenSsl.a -g -Wl,-rpath,'$ORIGIN' -Wl,--as-needed -pthread -lstdc++ -ldl -lm -lz -lgssapi_krb5 -lrt -shared\" exited with code 1. [/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary/NativeLibrary.csproj]\r\ndardo@LAPTOP-TQ8D057I:/mnt/c/Users/Dardo/OneDrive/Progetti/DotNet/CoreRTDemo/NativeLibrary$\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7832","RelatedDescription":"Closed issue \"Unable to compile on Ubuntu 18.04 (WSL)\" (#7832)"},{"Id":"510326059","IsPullRequest":true,"CreatedAt":"2019-10-22T02:26:35","Actor":"Dotnet-GitSync-Bot","Number":"7833","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @eriawan @danmosemsft @AaronRobinsonMSFT @stephentoub @GrabYourPitchforks @delmyers @benaadams @tannergooding","Url":"https://github.com/dotnet/corert/pull/7833","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7833)"},{"Id":"509511071","IsPullRequest":true,"CreatedAt":"2019-10-20T14:04:45","Actor":"MichalStrehovsky","Number":"7830","RawContent":null,"Title":"Add AppContext switch to not throw for Type.Name","State":"closed","Body":"Makes simple WinForms apps work in reflection-free mode without crashing.\r\n\r\nhttps://github.com/dotnet/winforms/blob/5df2ebfe70f2eaa2733c7f21e7e9e20f0be7e766/src/System.Windows.Forms/src/System/Windows/Forms/Control.cs#L4013","Url":"https://github.com/dotnet/corert/pull/7830","RelatedDescription":"Closed or merged PR \"Add AppContext switch to not throw for Type.Name\" (#7830)"},{"Id":"509511141","IsPullRequest":true,"CreatedAt":"2019-10-20T14:04:12","Actor":"MichalStrehovsky","Number":"7831","RawContent":null,"Title":"Scan for Marshal.SizeOf in reflection-disabled mode","State":"closed","Body":"I tacked scanning for `Marshal.SizeOf(typeof(SomeType))` on the reflection method body scanner. It felt a bit dirty, but it worked and we no longer had to worry about not having interop marshalling data for these types at runtime if we saw the pattern at compile time.\r\n\r\nBut we would like to scan for this even in the reflection disabled mode, which makes this whole business a bit messier.\r\n\r\nWe'll probably want to plug this into the RyuJIT scanner at some point, but we'll need to think about scanning some more (whether scanning is just an optimization, or whether scanning is needed for correctness, how/whether would RyuJIT report parameters, etc.).","Url":"https://github.com/dotnet/corert/pull/7831","RelatedDescription":"Closed or merged PR \"Scan for Marshal.SizeOf in reflection-disabled mode\" (#7831)"},{"Id":"509445042","IsPullRequest":true,"CreatedAt":"2019-10-20T02:03:38","Actor":"filipnavara","Number":"7828","RawContent":null,"Title":"Move portable thread pool to shared partition","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7828","RelatedDescription":"Closed or merged PR \"Move portable thread pool to shared partition\" (#7828)"},{"Id":"508346108","IsPullRequest":true,"CreatedAt":"2019-10-17T18:57:35","Actor":"filipnavara","Number":"7825","RawContent":null,"Title":"Clean up portable thread pool for nullability and comment warnings","State":"closed","Body":"Also, use `EventWaitHandle.Set` instead of `WaitSubsystem.SetEvent`/`Interop.Kernel32.SetEvent` to make it easier to port.","Url":"https://github.com/dotnet/corert/pull/7825","RelatedDescription":"Closed or merged PR \"Clean up portable thread pool for nullability and comment warnings\" (#7825)"},{"Id":"508509256","IsPullRequest":false,"CreatedAt":"2019-10-17T14:18:24","Actor":"Const-me","Number":"7827","RawContent":null,"Title":"ARM32 Debug Info","State":"open","Body":"Unless ILC debug output is disabled in .csproj, CoreRT’s ilc program fails to compile stuff.\r\n\r\n[This assert fails.](https://github.com/dotnet/corert/blob/master/src/Native/ObjWriter/debugInfo/dwarf/dwarfGen.cpp#L436)\r\n\r\nI’ve added a bit more info and found out it’s VLT_FPSTK.\r\n\r\nUsing Debian 9.5, tried dotnet-sdk-2.1.802 and dotnet-sdk-2.2.402, same result.\r\n\r\nSteps to reproduce:\r\n\r\n`dotnet new console`\r\n\r\nPatch project file as [described there](https://github.com/dotnet/corert/blob/master/Documentation/how-to-build-and-run-ilcompiler-in-console-shell-prompt.md#compiling-source-to-native-code-using-the-ilcompiler-you-built) and also add `<DisableUnsupportedError>true</DisableUnsupportedError>`\r\n\r\nRun `dotnet publish --configuration Release --runtime linux-arm`\r\n\r\nNative stack at the time of failed assert. Stops at first managed frame ‘coz gdb can’t debug .NET, at least not by default.\r\n\r\n```\r\n#6  0xa352510c in EmitVarLocation(llvm::MCObjectStreamer*, ICorDebugInfo::NativeVarInfo const&, bool)\r\n#7  0xa3525ab2 in VarInfo::DumpLocsIfNeeded(llvm::MCObjectStreamer*, llvm::MCSection*, llvm::MCExpr const*)\r\n#8  0xa35260be in SubprogramInfo::DumpDebugLoc(llvm::MCObjectStreamer*, llvm::MCSection*)\r\n#9  0xa3525e3c in SubprogramInfo::Dump(UserDefinedDwarfTypesBuilder*, llvm::MCObjectStreamer*, llvm::MCSection*, llvm::MCSection*, llvm::MCSection*)\r\n#10 0xa3526b36 in DwarfGen::Finish()\r\n#11 0xa3501804 in ObjectWriter::EmitDebugModuleInfo()\r\n#12 0xa34fd5f0 in EmitDebugModuleInfo\r\ngdb can’t debug .net so the stack trace stops there.\r\n#13 0xa7bbe1ac in ?? ()\r\nBacktrace stopped: previous frame identical to this frame (corrupt stack?)\r\n```\r\n\r\nStrangely enough, comments in ObjectWriter.EmitObject method, there\r\nhttps://github.com/dotnet/corert/blob/8153381fb8f3cf0ef627011fe2fe87fb4a857540/src/ILCompiler.Compiler/src/Compiler/DependencyAnalysis/ObjectWriter.cs#L1044\r\nand a few other things\r\nhttps://github.com/dotnet/corert/blob/8153381fb8f3cf0ef627011fe2fe87fb4a857540/src/ILCompiler.Compiler/src/Compiler/DependencyAnalysis/ObjectWriter.cs#L1094-L1095\r\nsuggest that code was running on ARM32 at some point.\r\n\r\nIs something wrong on my side? If it’s just not supported, how easy it is to support?","Url":"https://github.com/dotnet/corert/issues/7827","RelatedDescription":"Open issue \"ARM32 Debug Info\" (#7827)"},{"Id":"508505637","IsPullRequest":false,"CreatedAt":"2019-10-17T14:13:06","Actor":"Const-me","Number":"7826","RawContent":null,"Title":"ARM32 crash at startup due to misalignment","State":"open","Body":"Here’s output from gdb:\r\n```\r\nThread 1 \"MyApp\" received signal SIGBUS, Bus error.\r\nRhpLockCmpXchg64 () at /home/linaro/corert/src/Native/Runtime/arm/Interlocked.S:47\r\n47                cmp          r6, r4\r\n(gdb) bt\r\n#0  RhpLockCmpXchg64 () at /home/linaro/corert/src/Native/Runtime/arm/Interlocked.S:47\r\n#1  0x0049c5ee in S_P_CoreLib_System_IO_UnmanagedMemoryStream__get_PositionPointer ()\r\n```\r\ngdb probably has off by 1 bug, I think it’s the [previous instruction](https://github.com/dotnet/corert/blob/master/src/Native/Runtime/arm/Interlocked.S#L46) which crashed the app.\r\n\r\nThe failing line of C# code is probably this https://github.com/dotnet/corefx/blob/master/src/Common/src/CoreLib/System/IO/UnmanagedMemoryStream.cs#L329 but I’m not 100% sure, as there’s no debug information in the binary due to another CoreRT ARM32 bug.\r\n\r\nI wasn’t able to make minimal repro, when I wrote a class with a long field, Interlocked.Read(ref long) returned the value without crashing. Probably clang optimizes away.\r\n\r\nAny idea how to fix or workaround?","Url":"https://github.com/dotnet/corert/issues/7826","RelatedDescription":"Open issue \"ARM32 crash at startup due to misalignment\" (#7826)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"515026974","IsPullRequest":true,"CreatedAt":"2019-10-30T23:50:44","Actor":"dotnet-maestro[bot]","Number":"3834","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191030.5\r\n- **Date Produced**: 10/30/2019 9:20 PM\r\n- **Commit**: 4950751278293d59898be799c0115e0ad895747e\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19530.5\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3834","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3834)"},{"Id":"515042011","IsPullRequest":false,"CreatedAt":"2019-10-30T23:15:02","Actor":"thomaslevesque","Number":"3835","RawContent":null,"Title":"dotnet new hangs for several seconds after it completes","State":"open","Body":"Whenever I use `dotnet new`, it seems to hang for several seconds after it completes.\r\nFor instance, if I do `dotnet new sln`, it prints _\"The template \"Solution file\" was created successfully.\"_ almost immediately, but doesn't return until several seconds later (sometimes up to 10 seconds). The same happens with other templates, I just picked this one because it's a very simple one.\r\n\r\nUsing .NET Core SDK 3.0.100\r\n\r\nUsing `--diagnostic` doesn't give any more detail, it just prints _\"Telemetry is: Enabled\"_","Url":"https://github.com/dotnet/sdk/issues/3835","RelatedDescription":"Open issue \"dotnet new hangs for several seconds after it completes\" (#3835)"},{"Id":"514956656","IsPullRequest":true,"CreatedAt":"2019-10-30T21:30:48","Actor":"dotnet-maestro[bot]","Number":"3830","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191030.4\r\n- **Date Produced**: 10/30/2019 6:59 PM\r\n- **Commit**: ce871036d2f45c3268a9463cc5405958c4f5b3f7\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19530.4\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3830","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3830)"},{"Id":"514992403","IsPullRequest":true,"CreatedAt":"2019-10-30T21:25:56","Actor":"dotnet-maestro-bot","Number":"3833","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'master'","State":"open","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* @wli3\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout master\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-master master\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/sdk/pull/3833","RelatedDescription":"Open PR \"[automated] Merge branch 'release/3.1.1xx' => 'master'\" (#3833)"},{"Id":"514985381","IsPullRequest":true,"CreatedAt":"2019-10-30T21:12:21","Actor":"wli3","Number":"3832","RawContent":null,"Title":"port remove signature on MAC host","State":"open","Body":"Part of https://github.com/dotnet/sdk/issues/3773\r\n\r\n@swaroop-sridhar","Url":"https://github.com/dotnet/sdk/pull/3832","RelatedDescription":"Open PR \"port remove signature on MAC host\" (#3832)"},{"Id":"514975464","IsPullRequest":true,"CreatedAt":"2019-10-30T20:52:51","Actor":"dsplaisted","Number":"3831","RawContent":null,"Title":"Use default arcade symbol publishing logic","State":"open","Body":"#3584 was supposed to fix symbol publishing, but didn't work because we were copying the portable PDB files to the SymStore directory.  They need to be converted to desktop PDBs in order to be published.  The default Arcade logic handles this, so just revert to that.","Url":"https://github.com/dotnet/sdk/pull/3831","RelatedDescription":"Open PR \"Use default arcade symbol publishing logic\" (#3831)"},{"Id":"514918269","IsPullRequest":true,"CreatedAt":"2019-10-30T19:13:11","Actor":"Logerfo","Number":"3829","RawContent":null,"Title":"fix broken link","State":"open","Body":"the dot might be considered as part of the link for some parsers (like github file view)","Url":"https://github.com/dotnet/sdk/pull/3829","RelatedDescription":"Open PR \"fix broken link\" (#3829)"},{"Id":"514310953","IsPullRequest":true,"CreatedAt":"2019-10-30T15:23:46","Actor":"dotnet-maestro-bot","Number":"3821","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'master'","State":"closed","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* @nguerrera\n* @dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout master\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-master master\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/sdk/pull/3821","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.1.1xx' => 'master'\" (#3821)"},{"Id":"514693755","IsPullRequest":false,"CreatedAt":"2019-10-30T14:01:28","Actor":"adamralph","Number":"3828","RawContent":null,"Title":"CLI option to suppress welcome message","State":"open","Body":"The \"Welcome to .NET Core 3.0!... \" spiel adds considerable noise to CI logs.\r\n\r\nWhile we can work around this by creating a file named `\"%HOME%/.dotnet/$(dotnet --version).dotnetFirstUseSentinel\"`, this is hacky and adds noise to bulid configs.\r\n\r\nIt would be better to have a CLI option to suppress the message, e.g.\r\n\r\n`dotnet build --no-welcome`\r\n\r\nor\r\n\r\n`dotnet build --skip-first-time-experience`\r\n\r\netc.","Url":"https://github.com/dotnet/sdk/issues/3828","RelatedDescription":"Open issue \"CLI option to suppress welcome message\" (#3828)"},{"Id":"514666510","IsPullRequest":false,"CreatedAt":"2019-10-30T13:24:28","Actor":"mthalman","Number":"3827","RawContent":null,"Title":"dotnet-install script warning about libunwind dependency on 3.0","State":"open","Body":"## Repro\r\n\r\nRun a `docker build` with this Dockerfile:\r\n\r\n```Dockerfile\r\nFROM ubuntu:disco\r\n\r\nRUN apt-get update \\\r\n    && apt-get install -y --no-install-recommends \\\r\n        curl \\\r\n        ca-certificates \\\r\n        \\\r\n        # .NET Core dependencies\r\n        libc6 \\\r\n        libgcc1 \\\r\n        libgssapi-krb5-2 \\\r\n        libicu63 \\\r\n        libssl1.1 \\\r\n        libstdc++6 \\\r\n        zlib1g \\\r\n    && rm -rf /var/lib/apt/lists/*\r\n\r\nRUN curl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin -Channel Current -Version 3.0.100\r\n```\r\n\r\n### Expected\r\nExpected no warnings because https://docs.microsoft.com/en-us/dotnet/core/linux-prerequisites?tabs=netcore30#supported-linux-versions says that libunwind is only a dependency for versions earlier than 2.1.\r\n\r\n### Actual\r\n`dotnet_install: Warning: Unable to locate libunwind. Probable prerequisite missing; install libunwind.`","Url":"https://github.com/dotnet/sdk/issues/3827","RelatedDescription":"Open issue \"dotnet-install script warning about libunwind dependency on 3.0\" (#3827)"},{"Id":"514613112","IsPullRequest":true,"CreatedAt":"2019-10-30T13:22:48","Actor":"dotnet-maestro[bot]","Number":"3826","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191029.9\r\n- **Date Produced**: 10/30/2019 12:01 AM\r\n- **Commit**: ff023241f6484abaf827c4287c59fddd9ad6c382\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19529.9\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19529.9\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3826","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3826)"},{"Id":"514462171","IsPullRequest":true,"CreatedAt":"2019-10-30T10:06:22","Actor":"dotnet-maestro[bot]","Number":"3824","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191029.3\r\n- **Date Produced**: 10/30/2019 6:27 AM\r\n- **Commit**: fed3d3e9e7417f8f20ed56edfe7a41b3164b0756\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19529.3\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3824","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3824)"},{"Id":"514496806","IsPullRequest":false,"CreatedAt":"2019-10-30T08:58:54","Actor":"Jepson109","Number":"3825","RawContent":null,"Title":".NET Core SDK 3.0.100 does not have 2.2.8 or 2.1.14 patch.","State":"open","Body":"Use [16.3.7](https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fvsdrop.corp.microsoft.com%2Ffile%2Fv1%2FProducts%2FDevDiv%2FVS%2F25bf803db756771ac937046faacdbec8278347ff%2F4c2b3062-352a-8f22-0b64-8a1bb9b21401%253bchannels%2Finternal%2FRelease%2Fbootstrappers%2Ffixed%2FEnterprise%2Fvs_Enterprise.exe&data=02%7C01%7Cv-pejian%40microsoft.com%7C564144298f6a4146a3ad08d75d1647d4%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637080222644789581&sdata=MJNpQBnniMAGpWiPZfl4dkFjjNpTTh9QaKZ0mQ7BMMo%3D&reserved=0) [29429.51.d16.3] (SDK 3.0.100 with 2.2.8 and 2.1.14  runtime inserted)\r\n\r\n**Repro Steps**:\r\n1.\tdotnet new global.json\r\n2.\tedit global.json, check the SDK version is \"3.0.100\"\r\n3.\tmkdir test\r\n4.\tcd test\r\n5.\tdotnet new console\r\n6.\tedit test.csproj and set TargetFramework from netcoreapp3.0 to netcoreapp2.2\r\n7.\tdotnet publish -r win10-x64\r\n8.\tcheck the contents of bin\\Debug\\netcoreapp2.2\\win10-x64\\publish, search for “Microsoft.NETCore.App/” \r\n\r\n**Expected**: That version is 2.2.8.\r\n\r\n**Actual**: The version is **2.2.7**.\r\n\r\nNote: Using SDK 3.0.100, retarget app to netcoreapp2.1 and look for the version for “Microsoft.NETCore.App” is 2.1.13, not 2.1.14.\r\n\r\n**dotnet --info**:\r\n.NET Core SDK (reflecting any global.json):\r\nVersion:   3.0.100\r\nCommit:    04339c3a26\r\n\r\nRuntime Environment:\r\nOS Name:     Windows\r\nOS Version:  10.0.17763\r\nOS Platform: Windows\r\nRID:         win10-x64\r\nBase Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3825","RelatedDescription":"Open issue \".NET Core SDK 3.0.100 does not have 2.2.8 or 2.1.14 patch.\" (#3825)"},{"Id":"514354123","IsPullRequest":true,"CreatedAt":"2019-10-30T04:15:58","Actor":"dotnet-maestro[bot]","Number":"3822","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191029.2\r\n- **Date Produced**: 10/30/2019 1:05 AM\r\n- **Commit**: c85c3ca6c392c62fc0a14d903d7927edc6fe5bf9\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19529.2\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3822","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3822)"},{"Id":"513870552","IsPullRequest":true,"CreatedAt":"2019-10-30T00:08:34","Actor":"dotnet-bot","Number":"3819","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3819","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#3819)"},{"Id":"514101309","IsPullRequest":true,"CreatedAt":"2019-10-29T19:30:37","Actor":"sfoslund","Number":"3820","RawContent":null,"Title":"Override MSBuild run target in SDK","State":"closed","Body":"Override MSBuild run target in SDK so behavior mirrors ``dotnet run``. Addressing #2283.","Url":"https://github.com/dotnet/sdk/pull/3820","RelatedDescription":"Closed or merged PR \"Override MSBuild run target in SDK\" (#3820)"},{"Id":"513869207","IsPullRequest":true,"CreatedAt":"2019-10-29T18:55:22","Actor":"dotnet-maestro[bot]","Number":"3818","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191028.5\r\n- **Date Produced**: 10/28/2019 11:43 PM\r\n- **Commit**: 96e8fc12aa98264c4e1980252e962b908eaae956\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19528.5\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19528.5\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3818","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3818)"},{"Id":"513514869","IsPullRequest":false,"CreatedAt":"2019-10-29T17:43:06","Actor":"kmjungersen","Number":"3811","RawContent":null,"Title":"`$ dotnet run` won't serve https with .Net Core 3.0 on OS X","State":"closed","Body":"## Symptoms:\r\nI have a .Net Core 3.0 app that I'm unable to load in a browser **ONLY when running it using the Mac OS X CLI**, like so:\r\n\r\n```\r\n$ dotnet new webapp\r\n$ dotnet run\r\nwatch : Started\r\ninfo: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[0]\r\n      User profile is available. Using '/Users/<user>/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Now listening on: https://localhost:5001\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Now listening on: http://localhost:5000\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Application started. Press Ctrl+C to shut down.\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Hosting environment: Development\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Content root path: /Users/<user>/Sandbox/coreapp3test\r\n```\r\n\r\nSo everything looks good at this point, except when opening the URL in a browser I receive:\r\n\r\n```\r\nThis site cannot be reached\r\n\r\nlocalhost unexpectedly closed the connection.\r\n```\r\n## Core Issue:\r\n\r\nThis has something to do with HTTPS protocol.  Navigating to `http://localhost:5000` does render an https redirect.  So the server is actually listening...\r\n\r\n```\r\ninfo: Microsoft.AspNetCore.Hosting.Diagnostics[1]\r\n      Request starting HTTP/1.1 GET http://localhost:5000/\r\ninfo: Microsoft.AspNetCore.Hosting.Diagnostics[2]\r\n      Request finished in 9.6705ms 307\r\n```\r\n\r\n**Furthermore,** removing the `app.UseHttpsRedirection();` from the `Configure` method of `startup.cs` and then navigating to `http://localhost:5000` renders the page correctly, while `https://localhost:5001` still fails\r\n\r\n## Notes:\r\n\r\n* **I can run the app in VS Code**, so the runtime must be installed correctly\r\n* **.NET Core 2.2 apps work fine with the CLI** - I can run them from the CLI without issue. So it appears isolated to 3.0\r\n* **The Windows CLI appears to work without issue**\r\n* I've also tried the following, without success:\r\n  * Removing `bin/` and `obj/` and restoring / building again\r\n  * Re-installing the SDK - same result\r\n  * Disabling firewall (in case that was blocking the connection)\r\n  * Generating multiple web project types (e.g. angular, mvc, etc.) to see if it was related to the template\r\n\r\n\r\n\r\n## System Info:\r\n\r\n```\r\n$ dotnet --info\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/dotnet/sdk/issues/3811","RelatedDescription":"Closed issue \"`$ dotnet run` won't serve https with .Net Core 3.0 on OS X\" (#3811)"},{"Id":"513746824","IsPullRequest":false,"CreatedAt":"2019-10-29T17:34:57","Actor":"jtillman","Number":"3816","RawContent":null,"Title":"Manage and Build multiple projects without Visual Studio File (SLN)","State":"closed","Body":"I propose that we provide a builtin way to run dotnet cli commands on multiple projects without having to share Visual Studio (Sln) files across users.\r\n\r\nIssues: The solution file (.sln) is controlled and managed by Visual Studio IDE. It's format isn't DRY and editable by hand. All users do not use or desire to use Visual Studio to develop dotnet applications. You currently have to use the dotnet cli to update it. \r\n\r\nProposals:\r\n- `dotnet cli` commands which take solution files. `dotnet pack **/*.csproj'\r\n- Add `dotnet projects` command which internally creates a solution file on the fly to execute the desired commands in the background. \r\nThis would be a convention-based command which discovers all .csproj in the directory recursively. This is my favorite because it has automatic project discovery just like new SDK projects discover all `.cs` files.\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3816","RelatedDescription":"Closed issue \"Manage and Build multiple projects without Visual Studio File (SLN)\" (#3816)"},{"Id":"513627219","IsPullRequest":true,"CreatedAt":"2019-10-29T16:08:19","Actor":"nguerrera","Number":"3813","RawContent":null,"Title":"Reduce nuget feeds","State":"closed","Body":"We have too many nuget feeds and in some cases this can drastically slow things down.\r\n\r\nAlso, the nuget.config for the tests is being deployed via tools to core-sdk where for some reason, we seem to be even more sensitive to the number of feeds.","Url":"https://github.com/dotnet/sdk/pull/3813","RelatedDescription":"Closed or merged PR \"Reduce nuget feeds\" (#3813)"},{"Id":"513789039","IsPullRequest":false,"CreatedAt":"2019-10-29T09:22:41","Actor":"xthsr","Number":"3817","RawContent":null,"Title":"dotnet tool update - error: Sequence contains more than one matching element","State":"open","Body":"Trying to run:\r\ndotnet tool update --global <name of internal Nuget hosted in Azure DevOps artifacts>\r\n\r\nWorks perfectly running locally, but when run on our build servers (self hosted pool) in Azure DevOps, we sometimes get this error:\r\n```\r\nSequence contains more than one matching element\r\nat System.Linq.ThrowHelper.ThrowMoreThanOneMatchException()\r\nat System.Linq.Enumerable.SingleOrDefault[TSource](IEnumerable`1 source, Func`2 predicate)\r\nat Microsoft.DotNet.ToolPackage.ToolPackageInstance.FindLibraryInLockFile(LockFile lockFile, PackageId id)\r\n```\r\n\r\nSame error when using:\r\ndotnet tool install\r\n\r\nAny idea what is causing this exception? - can't debug and the error message is really not that helpful.\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3817","RelatedDescription":"Open issue \"dotnet tool update - error: Sequence contains more than one matching element\" (#3817)"},{"Id":"513670311","IsPullRequest":false,"CreatedAt":"2019-10-29T03:24:26","Actor":"skanvk15","Number":"3815","RawContent":null,"Title":"Creating new xunit project from command line fails","State":"open","Body":"Creating a new xunit project using dotnet command line fails:\r\n\r\nReport steps from command line:\r\n\r\n```\r\nPS D:\\temp> dotnet new xunit\r\nCouldn't find an installed template that matches the input, searching online for one that does...\r\nMatches from template source: NuGet\r\n-----------------------------------\r\nTemplate name \"xUnit Test Class\" (xunit-class) from author \"The Sharp Ninja\" in pack GatewayProgrammingSchool.xUnit.CSharp\r\n    To use this template, run the following command and try again:\r\n        dotnet new -i GatewayProgrammingSchool.xUnit.CSharp::1.0.2\r\n```\r\n\r\nI have the following dotnet version installed\r\n3.1.100-preview1-014459","Url":"https://github.com/dotnet/sdk/issues/3815","RelatedDescription":"Open issue \"Creating new xunit project from command line fails\" (#3815)"},{"Id":"513625817","IsPullRequest":true,"CreatedAt":"2019-10-29T00:20:54","Actor":"swaroop-sridhar","Number":"3812","RawContent":null,"Title":"Generate RID graph in self-contained builds","State":"open","Body":"In order to support loading components (plugins) with RID-specific assets, the `AssemblyDependencyResolver` requires the RID fallback graph.\r\n\r\nThe component itself should not carry the RID fallback graph with it (it would need to have the graph of all the RIDs there are and it would need to be updated with every addition).\r\n\r\nFor framework dependent apps, the RID fallback graph comes from the core framework Microsoft.NETCore.App, so there is no need to write it into the app.\r\n\r\nIf self-contained apps, the (applicable subset of) RID fallback graph needs to be written to the deps.json manifest.\r\n\r\nFixes #3361","Url":"https://github.com/dotnet/sdk/pull/3812","RelatedDescription":"Open PR \"Generate RID graph in self-contained builds\" (#3812)"},{"Id":"512989389","IsPullRequest":true,"CreatedAt":"2019-10-28T19:50:17","Actor":"wli3","Number":"3807","RawContent":null,"Title":"Revert node reuse","State":"closed","Body":"Disabling it does make Helix perf leg work. Now testing how much perf hit we get\r\nhttps://dev.azure.com/dnceng/internal/_build/results?buildId=402589","Url":"https://github.com/dotnet/sdk/pull/3807","RelatedDescription":"Closed or merged PR \"Revert node reuse\" (#3807)"},{"Id":"512980879","IsPullRequest":false,"CreatedAt":"2019-10-28T17:29:49","Actor":"bigworld12","Number":"3806","RawContent":null,"Title":"error when using dotnet tool install","State":"closed","Body":"I get this error when running `dotnet tool install -g dotnet-ef`\r\ndotnet version : 3.1.100-preview1-014459\r\n```\r\nFailed to install tool package 'dotnet-ef': Could not find a part of the path 'C:\\Users\\UserName\\.dotnet\\tools\\.store\\.stage\\32ksqkap.ndq\\dotnet-ef'.\r\nTool 'dotnet-ef' failed to install. This failure may have been caused by:\r\n\r\n* You are attempting to install a preview release and did not use the --version option to specify the version.\r\n* A package by this name was found, but it was not a .NET Core tool.\r\n* The required NuGet feed cannot be accessed, perhaps because of an Internet connection problem.\r\n* You mistyped the name of the tool.\r\n\r\nFor more reasons, including package naming enforcement, visit https://aka.ms/failure-installing-tool\r\n```\r\nNote : this works perfectly in 3.0.100","Url":"https://github.com/dotnet/sdk/issues/3806","RelatedDescription":"Closed issue \"error when using dotnet tool install\" (#3806)"},{"Id":"513412032","IsPullRequest":true,"CreatedAt":"2019-10-28T17:28:15","Actor":"sfoslund","Number":"3810","RawContent":null,"Title":"Defining InternalsVisibleTo attribute in proj files","State":"closed","Body":"Adding tests and target to allow defining the InternalsVisibleTo attribute in .proj files. Addressing #3299.","Url":"https://github.com/dotnet/sdk/pull/3810","RelatedDescription":"Closed or merged PR \"Defining InternalsVisibleTo attribute in proj files\" (#3810)"},{"Id":"513332273","IsPullRequest":false,"CreatedAt":"2019-10-28T14:16:02","Actor":"xavierdecoster","Number":"3809","RawContent":null,"Title":"Support command forwarding for dotnet list package --vulnerable","State":"open","Body":"Tracking issue for adding support for `dotnet list package --vulnerable` to the CLI (to be forwarded to NuGet xplat CLI commands).\r\n\r\n[NuGet CLI spec](https://github.com/NuGet/Home/wiki/dotnet-list-package---vulnerable)","Url":"https://github.com/dotnet/sdk/issues/3809","RelatedDescription":"Open issue \"Support command forwarding for dotnet list package --vulnerable\" (#3809)"},{"Id":"512956752","IsPullRequest":true,"CreatedAt":"2019-10-28T13:41:37","Actor":"dotnet-maestro[bot]","Number":"3805","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191027.3\r\n- **Date Produced**: 10/27/2019 7:01 PM\r\n- **Commit**: 5ce0aaed2f8df9cd2fe0221a426c021efe37f655\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19527.3\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19527.3\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3805","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3805)"},{"Id":"512997013","IsPullRequest":false,"CreatedAt":"2019-10-27T17:36:39","Actor":"wli3","Number":"3808","RawContent":null,"Title":"dotnet tools discovery","State":"open","Body":"A CLI experience to search dotnet tools","Url":"https://github.com/dotnet/sdk/issues/3808","RelatedDescription":"Open issue \"dotnet tools discovery\" (#3808)"},{"Id":"513644086","IsPullRequest":false,"CreatedAt":"2019-10-13T21:18:57","Actor":"cezarypiatek","Number":"3814","RawContent":null,"Title":"Cannot load plugins with external dependencies in plugin interface","State":"open","Body":"I'm having trouble with loading plugin that contains an external dependency in the plugin interface. Let's say that PluginBase project depends on System.Collections.Immutable package and my plugin interface looks as follows:\n\n```csharp\npublic interface ICommand\n    {\n        string Name { get; }\n        string Description { get; }\n        int Execute(ImmutableArray&lt;string&gt; input);\n    }\n```\nWhen I try to load my plugin type I'm getting the following exeception:\n\n```\nSystem.Reflection.ReflectionTypeLoadException: 'Unable to load one or more of the requested types.\nMethod 'Execute' in type 'PluginArchitectureDemo.SamplePlugins' from assembly 'PluginArchitectureDemo.SamplePlugins, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null' does not have an implementation.\n```\n\nHere is a repository with a solution that reproduces that problem https://github.com/cezarypiatek/PluginArchitectureDemo - just run PluginArchitectureDemo with a path to PluginArchitectureDemo.SamplePlugins.dll as the parameter.\n\n\n---\n#### Document Details\n\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\n\n* ID: 06023407-704f-0ace-e89a-eedd9f95a007\n* Version Independent ID: f25a6e1a-cb10-867b-0522-a377bf9d016b\n* Content: [Create a .NET Core application with plugins - .NET Core](https://docs.microsoft.com/en-us/dotnet/core/tutorials/creating-app-with-plugin-support#feedback)\n* Content Source: [docs/core/tutorials/creating-app-with-plugin-support.md](https://github.com/dotnet/docs/blob/master/docs/core/tutorials/creating-app-with-plugin-support.md)\n* Product: **dotnet-core**\n* GitHub Login: @jkoritzinsky\n* Microsoft Alias: **jekoritz**","Url":"https://github.com/dotnet/sdk/issues/3814","RelatedDescription":"Open issue \"Cannot load plugins with external dependencies in plugin interface\" (#3814)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"514753283","IsPullRequest":false,"CreatedAt":"2019-10-30T15:14:43","Actor":"jaredpar","Number":"133","RawContent":null,"Title":"Repository Consolidation Timeline","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27549.*\r\n\r\nAs we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setupmoves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM PST on November 13th. We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository.","Url":"https://github.com/dotnet/announcements/issues/133","RelatedDescription":"Open issue \"Repository Consolidation Timeline\" (#133)"},{"Id":"513963125","IsPullRequest":false,"CreatedAt":"2019-10-29T14:32:55","Actor":"mthalman","Number":"132","RawContent":null,"Title":"Release of Alpine 3.10 Docker images","State":"open","Body":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)","Url":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Open issue \"Release of Alpine 3.10 Docker images\" (#132)"},{"Id":"508132491","IsPullRequest":false,"CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Number":"131","RawContent":null,"Title":".NET Core 3.1.0 Preview 1","State":"open","Body":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 1\" (#131)"},{"Id":"506832844","IsPullRequest":false,"CreatedAt":"2019-10-14T19:26:10","Actor":"terrajobst","Number":"130","RawContent":null,"Title":".NET Core 3.0 concludes the .NET Framework API porting project","State":"open","Body":"We started in .NET Core 1.0 with a very minimal API set that only included \\~18K of the .NET Framework APIs. With [.NET Standard 2.0](https://devblogs.microsoft.com/dotnet/announcing-net-standard-2-0/), we tried to make it much more viable to share code between .NET Framework, .NET Core, and Xamarin which resulted in approximately 38K .NET Frameworks APIs being available in .NET Core 2.0. We also built the [Windows Compatibility Pack](https://devblogs.microsoft.com/dotnet/announcing-the-windows-compatibility-pack-for-net-core/) which made another 21K .NET Framework APIs available to .NET Core, resulting in almost 60K additional APIs. And in .NET Core 3.0 we added WPF and WinForms, which increased the number of .NET Framework APIs ported to .NET Core to over 120k, which is more than half of all .NET Framework APIs.\r\n\r\nIt’s also worth pointing out that we added about 62K APIs to .NET Core that don’t exist in .NET Framework. If we compare their total number of APIs, .NET Core has about 80% of the API surface of .NET Framework.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://user-images.githubusercontent.com/5169960/66777114-f8db7c80-ee7c-11e9-9161-acfe1c491586.png\" width=\"600\" align=\"center\">\r\n</p>\r\n\r\nWe announced that the [future of .NET](https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/) will be based on .NET Core. And at Build 2019, [Scott Hunter stated](https://www.youtube.com/watch?v=ZlO1utbB2GQ&t=54m20s) that AppDomains, remoting, Web Forms, WCF server, and Windows Workflow won’t be ported to .NET Core.\r\n\r\nWith .NET Core 3.0, we’re at the point where we’ve ported all technologies that are required for modern workloads, be that desktop apps, mobile apps, console apps, web sites, or cloud services. That’s not to say that we don’t have any gaps or opportunities for new technologies, but we generally believe we won’t be finding them in the .NET Framework code base anymore. Moving forward, we’re focusing our resources on incorporating new technologies.\r\n\r\nSimultaneously, we’re looking into releasing more of the [.NET Framework code base under the MIT license](https://github.com/microsoft/referencesource) on GitHub to allow the community to create OSS projects for technologies we’re not intending to bring to .NET Core. For example, there already are community projects for [CoreWF](https://github.com/UiPath/corewf) and [CoreWCF](https://github.com/CoreWCF/CoreWCF).\r\n\r\nWe’d like to thank everyone who filed issues with requests for APIs being ported. Those issues allowed us to prioritize and close the gaps that prevented people from porting to .NET Core.\r\n\r\nBut since we generally no longer plan to bring existing technologies from .NET Framework to .NET Core we’ll be closing all issues that are [labeled with port-to-core](https://github.com/dotnet/corefx/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3Aport-to-core).\r\n\r\n### Discussion\r\n\r\nTo discuss this issue, please comment on the corresponding issue at https://github.com/dotnet/corefx/issues/41769.","Url":"https://github.com/dotnet/announcements/issues/130","RelatedDescription":"Open issue \".NET Core 3.0 concludes the .NET Framework API porting project\" (#130)"},{"Id":"505445666","IsPullRequest":false,"CreatedAt":"2019-10-10T18:45:56","Actor":"TaraOverfield","Number":"129","RawContent":null,"Title":"October 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework October 2019 Cumulative Update for Windows 10 version 1903 and version 1909](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-cumulative-updates-windows-10-version-1903-and-windows-10-version-1909/)\r\n* [.NET Framework October 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/)\r\n* [.NET Framework October 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/129","RelatedDescription":"Open issue \"October 2019 .NET Updates\" (#129)"},{"Id":"505328689","IsPullRequest":false,"CreatedAt":"2019-10-10T15:19:53","Actor":"carloreggiani","Number":"128","RawContent":null,"Title":"Docker Stop return status Exited \"(3221225786)\"","State":"closed","Body":"Hi\r\nI'm investigating a issue regarding official MCR images on a Win2019 server with Docker EE engine 19.03.2.\r\n\r\nThe images that I'm unsing are:\r\nmcr.microsoft.com/windows/servercore:1809\r\nmcr.microsoft.com/dotnet/framework/aspnet:4.8\r\n\r\nStopping containers based on these images (\"docker stop\" command) I'm getting: \r\n\"Exited (3221225786)\"\r\n\r\nOn linux a stop command normally return: \"Exited (137)\"\r\n\r\nIs it a normal behaviour? What's means 3221225786?\r\n\r\nThanks for any support\r\n\r\nCarlo","Url":"https://github.com/dotnet/announcements/issues/128","RelatedDescription":"Closed issue \"Docker Stop return status Exited \"(3221225786)\"\" (#128)"},{"Id":"504325600","IsPullRequest":false,"CreatedAt":"2019-10-08T23:14:11","Actor":"terrajobst","Number":"127","RawContent":null,"Title":"Consolidated repo names","State":"open","Body":"[ann]: https://github.com/dotnet/announcements/issues/119\r\n\r\nAs we announced earlier, we're [planning on consolidating][ann] some of the repositories in the dotnet org. While this is still work in progress, we'd like to give you an update on where we are.\r\n\r\nSo far, we've identified the following repos:\r\n\r\n* dotnet/**runtime**\r\n\t- Will contain [coreclr](https://github.com/dotnet/coreclr), [corefx](https://github.com/dotnet/corefx), [core-setup](https://github.com/dotnet/core-setup), [aspnet/Extensions](https://github.com/aspnet/Extensions), and some of [mono/mono](https://github.com/mono/mono)\r\n* [dotnet/**sdk**](https://github.com/dotnet/sdk)\r\n\t- Will contain [toolset](https://github.com/dotnet/toolset), [sdk](https://github.com/dotnet/sdk), [cli](https://github.com/dotnet/cli)\r\n* dotnet/**installer**\r\n\t- Renamed from [core-sdk](https://github.com/dotnet/core-sdk)\r\n* dotnet/**aspnetcore**\r\n\t- Moved from [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) and will also contain [aspnet/AspNetCore-Tooling](https://github.com/aspnet/AspNetCore-Tooling)\r\n* dotnet/**efcore**\r\n\t- Moved from [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore)\r\n* [dotnet/**winforms**](https://github.com/dotnet/winforms)\r\n\t- Unchanged, but listed for clarity \r\n* [dotnet/**wpf**](https://github.com/dotnet/wpf)\r\n\t- Unchanged, but listed for clarity\r\n\r\n### Name changes\r\n\r\nYou might notice that we changed our mind on naming from our [earlier announcement][ann]. Based on your feedback, we decided to go with **dotnet/runtime** instead of **dotnet/platform** and **dotnet/sdk** instead of **dotnet/cli**.\r\n\r\nSeveral people pointed out that the previous names weren't relatable to how we talk about the product, for example on download pages. So, we decided to match the product distributions as the primary design point for the new names. We generally refer to the bits you need to run your app as *the runtime* and the bits you need to build apps as *the SDK*. This also matches the naming chosen by other platforms.\r\n\r\n### New repos can't be used for .NET Core 3.x or earlier\r\n\r\nThe consolidated repositories are going to be about .NET 5 and going forward. It will not be possible to build .NET Core 3.1 or earlier from these repositories. As such, only the master branch from each of the repositories will be brought forward. There will be no porting of the individual release branches in the source repositories.\r\n\r\n### Personal names and email addresses\r\n\r\nSince we're planning on rebasing the history in the merged repositories, we can map your name and email address to new values as well. We primarily do this to support our friends in the LGBTQ+ community who have changed their names to reflect their identities. However, anybody is welcome to use this to change their email and name.\r\n\r\nWhatever your reason might be: we value your contributions and we hope this small gesture makes your life a little bit better. So if you changed your name/email – or simply prefer us to use different values – please [submit a request](mailto:dotnet@microsoft.com&subject=.NET%20repo%20consolidation%3A%20request%20for%20name%20change&body=Hey%2C%20%0A%0AI%E2%80%99d%20like%20to%20change%20my%20email%2Fdisplay%20name%20in%20the%20consolidated%20repo%20from%20%0A%0A%20%20%20%20%20%20%20%20My%20Old%20Name%20%3Cold.me%40example.org%3E%20%0A%0Ato%20%0A%0A%20%20%20%20%20%20%20%20My%20New%20Name%20%3Cnew.me%40example.org%3E%20%0A%0AThanks%21%20%0A).\r\n\r\n### More is coming\r\n\r\nWe'll share more updates in the upcoming months. Please let us know of any concerns that we haven't addressed yet!\r\n\r\n### Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27096.","Url":"https://github.com/dotnet/announcements/issues/127","RelatedDescription":"Open issue \"Consolidated repo names\" (#127)"},{"Id":"504304108","IsPullRequest":false,"CreatedAt":"2019-10-08T22:06:07","Actor":"MichaelSimons","Number":"126","RawContent":null,"Title":"4.7.x .NET Framework SDK Docker images no longer published","State":"open","Body":"# 4.7.x .NET Framework SDK Docker images no longer published\r\n\r\nThe [4.7.x .NET Framework SDK Docker images](https://hub.docker.com/_/microsoft-dotnet-framework-sdk) will no longer be published after Oct. 8, 2019.  The 4.8 image tags should be used as a replacement.\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [microsoft/dotnet-framework-docker#428](https://github.com/microsoft/dotnet-framework-docker/issues/428)\r\n\r\n## Details\r\n\r\nAny references to the following SDK tags should be updated to reference `4.8` instead:\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2019`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2019`\r\n\r\nIf you haven't migrated to using images from [MCR](https://github.com/dotnet/announcements/issues/101) and are still using the .NET Framework repos on Docker Hub, you will need to update your tag references to MCR.  This is because the 4.8 images only exist on MCR.  These are the following Docker Hub tags that are affected and should be updated to reference the [4.8 tags at the MCR location](https://hub.docker.com/_/microsoft-dotnet-framework-sdk):\r\n* `microsoft/dotnet-framework:4.7.1-sdk`\r\n* `microsoft/dotnet-framework:4.7.1-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-1803`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2019`","Url":"https://github.com/dotnet/announcements/issues/126","RelatedDescription":"Open issue \"4.7.x .NET Framework SDK Docker images no longer published\" (#126)"},{"Id":"502102886","IsPullRequest":false,"CreatedAt":"2019-10-03T14:30:16","Actor":"MichaelSimons","Number":"125","RawContent":null,"Title":"Alpine Docker images no longer include the tzdata package in 3.0","State":"open","Body":"# Alpine Docker images no longer include the tzdata package in 3.0\r\nBeginning with the 3.0 release, the `tzdata` package has been removed from all Alpine Docker images.\r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\ndotnet/dotnet-docker#1366\r\n\r\n## Details\r\n* https://github.com/dotnet/dotnet-docker/pull/1312\r\n\r\n\r\nThis package was removed because it wasn't required for the main set of scenarios and to have consistency between the runtime-deps images across all Linux distros.  This package is still installed in the 2.x images for Alpine so this will be something to be aware of when migrating from 2.x to 3.0.\r\n\r\n\r\nYou may be impacted by this if you use any of the Alpine images and your code has a dependency on the `tzdata` package, such as using the `System.TimeZoneInfo` API.  In that case, you'll need to update your Dockerfile to explicitly install the package:\r\n```\r\nRUN apk add --no-cache tzdata\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/125","RelatedDescription":"Open issue \"Alpine Docker images no longer include the tzdata package in 3.0\" (#125)"},{"Id":"497868605","IsPullRequest":false,"CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Number":"124","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.0","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n","Url":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.0\" (#124)"},{"Id":"494223006","IsPullRequest":false,"CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Number":"123","RawContent":null,"Title":".NET Core 3.0 RC 1","State":"open","Body":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Open issue \".NET Core 3.0 RC 1\" (#123)"},{"Id":"491801748","IsPullRequest":false,"CreatedAt":"2019-09-10T17:23:20","Actor":"leecow","Number":"122","RawContent":null,"Title":"September 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework September 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-security-and-quality-rollup/)\r\n* [.NET Framework September 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Open issue \"September 2019 .NET Updates\" (#122)"},{"Id":"491794046","IsPullRequest":false,"CreatedAt":"2019-09-10T17:04:46","Actor":"blowdart","Number":"121","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core","State":"open","Body":"# Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Announcement\r\n\r\nThe original announcement for this issue can be found at https://github.com/dotnet/announcements/issues/121\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on .NET Core 2.1.0-2.1.12, or .NET Core 2.2.0-2.2.6\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you have a version of .NET Core less than 2.1.13 or less than 2.2.7, you're vulnerable.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nPaul Ryman of VMware Sydney Engineering Team\r\n\r\n### External Links\r\n\r\n[CVE-2019-1301](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1301)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\nV1.1 (September 10, 2019): Fix version numbers\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-09-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/121","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\" (#121)"},{"Id":"489344106","IsPullRequest":false,"CreatedAt":"2019-09-04T19:14:05","Actor":"leecow","Number":"120","RawContent":null,"Title":".NET Core 3.0 Preview 9","State":"open","Body":".NET Core Preview 9 released today. https://github.com/dotnet/core/issues/3304 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-9/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-9/)\r\n\r\nPlease report any issues you find with 3.0.0 Preview 9, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/120","RelatedDescription":"Open issue \".NET Core 3.0 Preview 9\" (#120)"},{"Id":"480859726","IsPullRequest":false,"CreatedAt":"2019-08-14T19:54:26","Actor":"stephentoub","Number":"119","RawContent":null,"Title":"Consolidating .NET GitHub repos","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.*\r\n\r\nOver the next few months, we plan to consolidate several of the foundational repositories of .NET Core, including dotnet/coreclr and dotnet/corefx.\r\n\r\n.NET’s repository structure on GitHub was initially created in a fairly fine-grained manner, with the aim of enabling runtime agility and increased developer productivity.  However, this separation has led to a variety of complications for contributors and maintainers alike.  For example:\r\n- **Confusion about where issues should be opened.**  It’s not always clear in which repo an issue should be reported, complicated by the fact that some implementations actually span repositories (e.g. a type might be exposed through a reference assembly and have its tests in corefx but actually be implemented in System.Private.CoreLib in coreclr).\r\n- **Difficulty sharing source.**  System.Private.CoreLib is intricately connected to the rest of the runtime, and thus has lived with the runtime code.  That, however, means that although corefx has been intended as the place to share as much core library code as possible across any underlying runtime, we’ve needed to keep a significant body of code in System.Private.CoreLib, which then has meant it’s needed to be “mirrored” to each runtime repo (coreclr, corert, mono) that needs to consume it as source; similarly, corefx has similarly required access to much of that source, for example to use the same interop DllImports that are employed elsewhere in the runtimes.  The automatic mirror that shares this source needs to be maintained, and even when it has been, it’s often led to lag.  It’s also complicated developer processes, where to validate a change in one repo generally requires manually mirroring the code to other local repos in order to validate the change and ensure merging into one repo won’t break the others.\r\n- **PRs spanning multiple repos.**  Because the runtime, CoreLib, and the core libraries are all intricately linked, changing runtime behaviors, adding new APIs, or changing various build processes (e.g. improving static analysis) often requires multiple PRs carefully staged across time and multiple repos.  For example, to add a new method to a type like Dictionary<>, a developer must first make the source changes in her local coreclr repo and the test and reference assembly changes in her local corefx repo.  When satisfied with the fix, the developer must submit a PR to coreclr as well as a PR to corefx, the latter of which will fail.  Eventually the coreclr PR will be merged, and the changes will mirror to the other runtimes that also require the update.  Eventually those mirror PRs will be merged, and builds will be created containing the fix for each runtime.  At some point later those builds will be consumed into the corefx repo, after which point the original corefx PR can be re-validated and eventually merged.  That’s the best case; things get more complicated in situations where there are bidirectional dependencies.\r\n- **Building an installable runtime.** Self-hosting a custom built .NET requires intricate knowledge of how all the repos work and interact.  A developer can’t just clone a single repo, make a desired change, and easily produce an installer.\r\n- **Consistency.**  One goal we had for more fine-grained repos was to enable isolation and independence for teams working within each repo’s confines, but this has led to non-trivial duplication of effort on things like build systems and CI, and then the resulting lack of consistency as each system ends up diverging from the others.\r\n\r\nThe issues go beyond the runtime.  For example, the ASP.NET maintainers and community did a great job in the past year or so consolidating from ~55 repos down to ~5 repos, but that’s still more repos than is desirable, leading to similar issues as cited above for the runtime.  On top of that, these ASP.NET repositories are in the aspnet GitHub org, which adds an additional set of issues, for example:\r\n- **Complications moving issues between repos.**  If a developer opens an issue in aspnet/aspnetcore and it’s determined that the cause of the issue is actually in dotnet/corefx, there is no GitHub mechanism to enable easily moving that issue across the aspnet to dotnet organizational boundary.\r\n- **Permissions.** Each organization’s permissions end up needing to be managed and maintained separately.\r\n\r\nThe issues extend into tooling as well.  For example, we currently have multiple repositories that all logically make up the dotnet CLI, but actually creating a working installer spans multiple repos.\r\n\r\n### Plan\r\n\r\nTo address these issues, we’re planning to make some changes to our repository structure:\r\n- **dotnet/platform.**  We plan to combine dotnet/coreclr, dotnet/corefx, dotnet/corert, dotnet/core-setup, and the relevant portions of mono/mono into a new dotnet/platform repo.  Everything needed to build and produce the Microsoft.NETCore.App shared framework will be in this repo.  We will no longer suffer from the complications of source mirroring.  Features like changing runtime behavior or adding an API will no longer require a complicated dance across multiple repos.  Etc.\r\n- **dotnet/aspnetcore.**  We plan to move the existing aspnet/aspnetcore repository into the dotnet organization.  Along with that, we aim to combine a variety of the other aspnet repositories into aspnetcore, such as aspnet/blazor.  Whether repos like entityframeworkcore remain separate or combined remains an open question.  A goal is that, just as dotnet/platform will be responsible for the creation of Microsoft.NETCore.App, dotnet/aspnetcore will be responsible for the creation of Microsoft.AspNETCore.App.\r\n- **dotnet/cli.**  We plan to combine dotnet/toolset and dotnet/sdk into the dotnet/cli repo.\r\n\r\n### FAQ\r\n\r\n#### Why are we merging repos?\r\n\r\nWe believe we can significantly improve several aspects of .NET on GitHub by combining repos, benefiting both maintainers and contributors.  These improvements will manifest in a variety of ways, such as in better issue management, much easier models of contribution, and easier and faster ways to build and install the resulting bits.\r\n\r\n####  What will happen to the aspnet org?\r\n\r\nThe aspnet org as a separate entity is legacy and artificial.  In time we hope to absorb it into the dotnet org and sunset the aspnet org.\r\n\r\n#### Will the coreclr and corefx repos go away?\r\n\r\nWith the help of GitHub, we plan to migrate all issues from these repos to the new dotnet/platform repo, and then lock down creation of additional issues, such that the repos will no longer be used for issue management.  We will also inhibit the creation of PRs to the master branch, which will effectively become an archive for read-only review of history.  In this sense, these repos will be archived, and no active development will happen with them.  However, we plan to continue servicing previous .NET Core releases out of these repos, so the various release branches (e.g. release/2.1, release/3.0, etc.) will continue to see (limited) activity.\r\n\r\n#### Will the mono repo go away?\r\n\r\nNo. mono/mono contains the source for the full mono stack and will continue to live on happily.  We will simply be moving the managed source associated with System.Private.CoreLib and copying the relatively small amount of source that makes up the native mono runtime to dotnet/platform.  We may choose to then use some mirroring technology to keep the runtime copy in sync (this will, however, not suffer from the same mirroring issues we currently experience, as we would not be mirroring between two components required to build the same binaries), or we may choose to let them diverge and manually sync only those changes deemed relevant to both implementations.\r\n\r\n#### Will the corert repo go away?\r\n\r\nYes.  We plan to retire/archive the corert repo.  Some of the technology in the corert repo will be migrated to the master branch of dotnet/platform, where it will be productized as part of .NET.  Other portions of the corert repo will be migrated to feature branches of dotnet/platform, where the experimentation can continue.  In this way, we will use feature branches to continue experimenting with the corert technology, while making it easier to share portions with its shipping counterpart and also graduate functionality into master if/when it’s ready.\r\n\r\n#### Does this mean there will be a single repo for all of .NET?\r\n\r\nNo.  We will be reducing the number of repos that contribute to .NET, but currently we do not believe that going all the way down to one is the right answer.\r\n\r\n#### Doesn’t this mean that issue and PR tracking will now be overwhelming?\r\n\r\nIt is already the case that the vast majority of issues in a given repo are not relevant to any individual developer, and with several thousand open issues in each repo and on the order of a hundred open PRs in each, we already need systems (e.g. labels) to successfully manage issues and PRs.  As such, we don’t believe the merging will have a significant impact on this aspect of developer productivity.  If it turns out to have an unexpectedly large negative impact, we will work with the community to find ways to mitigate the problem.  However, there are already a multitude of successful open source projects on GitHub with at least an order of magnitude more issues.\r\n\r\n#### What will happen to existing issues?\r\n\r\nWith the help of GitHub functionality, we plan to migrate all issues from old repos (e.g. dotnet/coreclr, dotnet/corefx) to the new repos (e.g. dotnet/platform).  We may also use this as a forcing function to revisit stale issues and either close those that are no longer relevant or reinvigorate those that are demanding of more immediate attention.\r\n\r\n#### What about git history?\r\n\r\nIn general, we plan to keep history, such that history from each constituent repo will be a part of the new repo.  However, we have made some mistakes in the past (e.g. large binaries, multitudes of automated PRs for flowing bits and source between repos, etc.), and we plan to rewrite history to correct those mistakes wherever possible and impactful.  Some rough calculations suggest this could end up significantly reducing the size of the repos as well as the time it takes to clone, which should not only help developers approaching the project but also CI.  This will end up meaning that SHAs may be different in the new repo than they were in the old repo; as previously mentioned, however, any references to the old SHAs in the old repos will continue to work, as those repos will remain accessible.\r\n\r\n#### Will I still show up in the contributor list due to previous contributions?\r\n\r\nYes.  We plan to merge all such history.\r\n\r\n#### Will this break debugging with SourceLink?\r\n\r\nNo.  The existing repos will continue to be accessible, and commit SHAs there will remain unchanged.\r\n\r\n#### Might plans change?\r\n\r\nSure.  Part of the goal of posting this announcement is to hear from you, hear about additional benefits you're excited about, and hear about additional concerns we may not have considered.  We will include such ideas in our planning and course correct as necessary.\r\n\r\n## Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.\r\n","Url":"https://github.com/dotnet/announcements/issues/119","RelatedDescription":"Open issue \"Consolidating .NET GitHub repos\" (#119)"},{"Id":"470434872","IsPullRequest":false,"CreatedAt":"2019-07-19T16:54:02","Actor":"richlander","Number":"118","RawContent":null,"Title":".NET Core master branches have switched to \"5.0\"","State":"open","Body":"# .NET Core master branches have switched to \"5.0\"\r\n\r\nVarious .NET Core repos have switched their `master` branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. This is very similar to how we approached 2.x and 3.0 projects. As context, `master` branches produced 3.0 builds for the entire period of the 2.2 project.\r\n\r\nAt present, this change is only relevant if you contribute to .NET Core repositories. Otherwise, we recommend that you wait for the 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/core #3059](https://github.com/dotnet/core/issues/3059)\r\n\r\n## Details\r\n\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n- [dotnet/coreclr](https://github.com/dotnet/coreclr)\r\n- [dotnet/corefx](https://github.com/dotnet/corefx)\r\n- [dotnet/core-setup](https://github.com/dotnet/core-setup)\r\n\r\nYou can see that [5.0 .NET Core Runtime builds](https://github.com/dotnet/core-setup#daily-builds) are now being built and published at dotnet/core-setup.\r\n\r\nIn large part, we switched `master` to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 released has progressed, we've had to increase scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nNotably, [dotnet/core-sdk](https://github.com/dotnet/core-sdk) is not yet producing 5.0 builds. We expect that the dotnet/core-sdk master branch will continue as a 3.0 branch for 2-3 months while we finish up the .NET Core 3.0 project.\r\n\r\nAt present, there is no developer experience for 5.0. We are waiting on the dotnet/core-sdk repo to switch to 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. We'll update this issue when a 5.0 SDK comes available.","Url":"https://github.com/dotnet/announcements/issues/118","RelatedDescription":"Open issue \".NET Core master branches have switched to \"5.0\"\" (#118)"},{"Id":"465501070","IsPullRequest":false,"CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Number":"117","RawContent":null,"Title":"System.Text.Json usability study results","State":"open","Body":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies 😊\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304.","Url":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Open issue \"System.Text.Json usability study results\" (#117)"},{"Id":"465034831","IsPullRequest":false,"CreatedAt":"2019-07-08T03:13:38","Actor":"leecow","Number":"116","RawContent":null,"Title":"Updates to releases.json (.NET Core release metadata)","State":"open","Body":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, MSBuild, NuGet, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is an example of the new array based on the upcoming July update.\r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n    \"sdk\": {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": []\r\n    },\r\n    \"sdks\": [\r\n        {\r\n            \"version\": \"2.2.301\",\r\n            \"version-display\": \"2.2.301\",\r\n            \"runtime-version\": \"2.2.6\",\r\n            \"vs-version\": \"16.1.3\",\r\n            \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n            \"csharp-version\": \"7.3\",\r\n            \"fsharp-version\": \"4.5\",\r\n            \"vb-version\": null,\r\n            \"files\": []\r\n        },\r\n        {\r\n          \"version\": \"2.2.205\",\r\n          \"version-display\": \"2.2.205\",\r\n          \"runtime-version\": \"2.2.6\",\r\n          \"vs-version\": \"16.0.5\",\r\n          \"vs-support\": \"Visual Studio 2019 (v16.0)\",\r\n          \"csharp-version\": \"7.3\",\r\n          \"fsharp-version\": \"4.5\",\r\n          \"vb-version\": null,\r\n          \"files\": []\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the community which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility compromises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Open issue \"Updates to releases.json (.NET Core release metadata)\" (#116)"},{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1189639377346891777","CreatedAt":"2019-10-30T20:25:04+00:00","UserScreenname":"dotnet","Text":"PSA: Timeline for .NET Core Repository Consolidation https://t.co/O7KGEEbX2q","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":32,"FavoriteCount":16,"RawContent":null},{"Id":"1189638838492123137","CreatedAt":"2019-10-30T20:22:56+00:00","UserScreenname":"dotnet","Text":"Introducing Orleans 3.0 https://t.co/qgGUHW3w7m","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":116,"FavoriteCount":44,"RawContent":null},{"Id":"1189628658782265344","CreatedAt":"2019-10-30T19:42:29+00:00","UserScreenname":"dotnet","Text":"Find out what it takes to build with #dotNET for #ApacheSpark in just a few short video #tutorials! \n\nCheck 'em out… https://t.co/z0XjfksX8U","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":18,"FavoriteCount":7,"RawContent":null},{"Id":"1189245263258542080","CreatedAt":"2019-10-29T18:19:00+00:00","UserScreenname":"dotnet","Text":"Watch these #dotNET video tutorials for an introduction to #VisualStudio and #GetStarted in just 5 mins! Check it o… https://t.co/lYkmdY8uyR","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":18,"FavoriteCount":5,"RawContent":null},{"Id":"1189226825098190856","CreatedAt":"2019-10-29T17:05:44+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnK9Pxg","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":11,"FavoriteCount":6,"RawContent":null},{"Id":"1188904996751982592","CreatedAt":"2019-10-28T19:46:54+00:00","UserScreenname":"dotnet","Text":"Explore the world of #EntityFramework and #dotNET through these quick and easy 101 video #tutorials!… https://t.co/xEeBCG4KFk","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":54,"FavoriteCount":20,"RawContent":null},{"Id":"1187781254680403968","CreatedAt":"2019-10-25T17:21:33+00:00","UserScreenname":"dotnet","Text":"Discover what you can do with #Docker and #dotNET in just a few short video #tutorials! https://t.co/OUzFnxoat0 https://t.co/mX3ch9GLcs","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":63,"FavoriteCount":32,"RawContent":null},{"Id":"1187431317467729922","CreatedAt":"2019-10-24T18:11:02+00:00","UserScreenname":"dotnet","Text":"Create your first #WinForms or #WPF app with #dotNETCore in just a few minutes! Watch here: https://t.co/rTbIhRmAJD https://t.co/kkC5Pb5r2g","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":52,"FavoriteCount":21,"RawContent":null},{"Id":"1187041856305160192","CreatedAt":"2019-10-23T16:23:27+00:00","UserScreenname":"dotnet","Text":"Learn how to #GetStarted with #ASPNETCore in a few short video #tutorials!\" https://t.co/0jmYLkKUqn https://t.co/4BmZJZPlDX","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":28,"FavoriteCount":14,"RawContent":null},{"Id":"1186774324377575425","CreatedAt":"2019-10-22T22:40:22+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":12,"FavoriteCount":8,"RawContent":null},{"Id":"1186380026763194368","CreatedAt":"2019-10-21T20:33:34+00:00","UserScreenname":"dotnet","Text":"Get started with #dotNET using these quick and fun 101 video #tutorials! https://t.co/QgXucetiFt https://t.co/FSFMHGIl7y","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":59,"FavoriteCount":22,"RawContent":null}]}},"RunOn":"2019-10-31T05:30:37.058661Z","RunDurationInMilliseconds":15239}