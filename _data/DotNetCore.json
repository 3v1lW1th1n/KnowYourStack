{"Data":{"Blog":{"FeedItems":[{"Title":"Fall .NET Core Survey","PublishedOn":"2019-10-17T20:24:19+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"It’s been a busy time for .NET Core – we just shipped 3.0, and are currently working on a few updates for v3.1 (due in November.) As we turn our attention to .NET Core 5.0, we want to take a step back...","Href":"https://devblogs.microsoft.com/dotnet/fall-net-core-survey/","RawContent":null},{"Title":".NET Framework October 2019 Preview of Quality Rollup","PublishedOn":"2019-10-15T21:11:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the October 2019 Preview of Quality Rollup and Cumulative Updates for .NET Framework.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/","RawContent":null},{"Title":"Announcing .NET Core 3.1 Preview 1","PublishedOn":"2019-10-15T16:49:48+00:00","CommentsCount":26,"FacebookCount":0,"Summary":"Today, we&#8217;re announcing .NET Core 3.1 Preview 1. .NET Core 3.1 will be a small release focused on key improvements in Blazor and Windows desktop, the two big additions in .NET Core 3.0. It will...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/","RawContent":null},{"Title":".NET Framework October 2019 Security and Quality Rollup","PublishedOn":"2019-10-08T19:10:44+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Today, we are releasing the October 2019 Security and Quality Rollup and Cumulative Updates for .NET Framework.\nSecurity\nNo new security fixes. See September 2019 Security and Quality Rollup for the...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/","RawContent":null},{"Title":"Introducing .NET Core Windows Forms Designer Preview 1","PublishedOn":"2019-09-30T21:00:10+00:00","CommentsCount":76,"FacebookCount":0,"Summary":"Introducing .NET Core Windows Forms Designer Preview 1\nWe just released a GA version of .NET Core 3.0 that includes support for Windows Forms and WPF. And along with that release we&#8217;re happy to...","Href":"https://devblogs.microsoft.com/dotnet/introducing-net-core-windows-forms-designer-preview-1/","RawContent":null},{"Title":".NET Framework September 2019 Preview of Quality Rollup","PublishedOn":"2019-09-26T19:36:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We have released the September 2019 Preview of Quality Rollup and Cumulative Updates for .NET Framework for Windows 10\nQuality and Reliability\nThis release contains the following quality and...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/","RawContent":null},{"Title":"ML.NET and Model Builder at .NET Conf 2019 (Machine Learning for .NET)","PublishedOn":"2019-09-24T19:48:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited today to announce updates to Model Builder and improvements in ML.NET. You can learn more in the “What’s new in ML.NET?.” session at .NET Conf.\nML.NET is an open-source and...","Href":"https://devblogs.microsoft.com/dotnet/ml-net-and-model-builder-at-net-conf-2019-machine-learning-for-net/","RawContent":null},{"Title":"Joining the .NET Foundation Maturity Model Pilot","PublishedOn":"2019-09-23T16:59:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Joining the .NET Foundation Maturity Model Pilot\nThe .NET Foundation is starting a new pilot program to increase quality and user confidence in open source projects, using a new project maturity...","Href":"https://devblogs.microsoft.com/dotnet/joining-the-net-foundation-maturity-model-pilot/","RawContent":null},{"Title":"Announcing Entity Framework Core 3.0 and Entity Framework 6.3 General Availability","PublishedOn":"2019-09-23T16:20:13+00:00","CommentsCount":46,"FacebookCount":0,"Summary":"We are extremely excited to announce the general availability of EF Core 3.0and EF 6.3 on nuget.org.\nThe final versions of .NET Core 3.0 and ASP.NET Core 3.0 are also available now.\nHow to get EF Core...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ef-core-3-0-and-ef-6-3-general-availability/","RawContent":null},{"Title":"Announcing F# 4.7","PublishedOn":"2019-09-23T16:06:23+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"We’re excited to announce general availability of F# 4.7 in conjunction with the .NET Core 3.0 release! In this post, I’ll show you how to get started, explain everything in F# 4.7 and give you a...","Href":"https://devblogs.microsoft.com/dotnet/announcing-f-4-7/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"10537155256","Type":"PullRequestEvent","CreatedAt":"2019-10-01T20:30:21","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Opened pull request \"Add new Cake Maintainer\" (#150) at dotnet/foundation","RelatedBody":""},{"Id":"10530380699","Type":"PullRequestEvent","CreatedAt":"2019-10-01T05:27:58","Actor":"JimBobSquarePants","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Opened pull request \"Add ImageSharp\" (#149) at dotnet/foundation","RelatedBody":""},{"Id":"10123005051","Type":"IssuesEvent","CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Opened issue \"Clarify guidelines in regards to Options and Requirements\" (#148) at dotnet/foundation","RelatedBody":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10647641262","Type":"IssuesEvent","CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Opened issue \".NET Core 3.1.0 Preview 1\" (#131) at dotnet/announcements","RelatedBody":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"10672919560","Type":"PullRequestEvent","CreatedAt":"2019-10-21T05:22:30","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27323","RelatedDescription":"Merged pull request \"Fix multicharacter constant issues\" (#27323) at dotnet/coreclr","RelatedBody":"@am11 @jkotas @janvorli "},{"Id":"10672845741","Type":"PullRequestEvent","CreatedAt":"2019-10-21T05:02:25","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27313","RelatedDescription":"Merged pull request \"Replace gtAllocObj. with AsAllocObj()->\" (#27313) at dotnet/coreclr","RelatedBody":"@sandreenko "},{"Id":"10672609281","Type":"PullRequestEvent","CreatedAt":"2019-10-21T03:51:32","Actor":"danmosemsft","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27333","RelatedDescription":"Opened pull request \"Clarify inner exception and aggregate exception ToString()\" (#27333) at dotnet/coreclr","RelatedBody":"Continuation of the part of https://github.com/dotnet/coreclr/pull/25045 that was deferred from 3.0.\r\n\r\n* [test program](https://gist.github.com/danmosemsft/e2263748f12a4edf81ef297dbd200c16) - the SSL case is real\r\n* [original output](https://gist.github.com/danmosemsft/421d37130f3a2ae36206fa1c8ca5b062)\r\n* [simple indent/arrows](https://gist.github.com/danmosemsft/ae41c57a564ad5bae7699c59c3874d5f)\r\n* [boxes](https://gist.github.com/danmosemsft/70281235ea0f07dce17245d1b3597a2f)\r\n* [compact boxes](https://gist.github.com/danmosemsft/2ffd883ec3d553427d2fc057be8efa16)  (this PR)\r\n\r\nIt's easiest to open in separate tabs and switch between. I think the boxes make it considerably easier to match up which exception goes with which stack, and which exception is nested inside which other exception. Thoughts? Other suggestions?\r\n\r\nNote that the non-aggregate non-nested exception case (top example) is not affected.\r\n\r\nBTW also made some minor fixes to pretty some exceptions I noticed as I was doing this\r\n* aae660d (one bad IL message was missing path)\r\n* 7b57069 (non absolute path message was missing path)\r\n* 54336a7 (2 blank lines caused by runtime passing empty string for fusion log: I assume fusion log is not relevant anymore)\r\n* Only append the file name if it's not already in the exception message. It looks like the runtime pretty much always puts it in the message if it's available, in which case text line `File name: 'c:\\some\\file'` is an unnecessary line."},{"Id":"10672583205","Type":"IssuesEvent","CreatedAt":"2019-10-21T03:44:01","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27174","RelatedDescription":"Reopened issue \"Test failed: CoreMangLib\\system\\span\\SlowTailCallArgs\\SlowTailCallArgs.cmd\" (#27174) at dotnet/coreclr","RelatedBody":"**Job:**\r\n[coreclr-jitstress #20191012.1 Run Test Pri1 Windows_NT x86 checked](https://dev.azure.com/dnceng/public/_build/results?buildId=386564&view=logs)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/58e2e07f-0e2c-4512-aeff-e27f677bf2b7/workitems/PayloadGroup0/console\r\n\r\n**OS & Arch:**\r\nwindows x86\r\n\r\n**Mode:**\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_JitStress=2\r\n\r\n**Note:**\r\nThis failure **doesn't repro** on our windows x64 machine.\r\n\r\n**Log:**\r\n```\r\nCoreMangLib\\system\\span\\SlowTailCallArgs\\SlowTailCallArgs.cmd [FAIL]\r\n      \r\n      Return code:      1\r\n      Raw output file:      C:\\dotnetbuild\\work\\58e2e07f-0e2c-4512-aeff-e27f677bf2b7\\Work\\a232c5b9-f36d-4560-bde3-8fa50ad02132\\Exec\\CoreMangLib\\system\\Reports\\CoreMangLib.system\\span\\SlowTailCallArgs\\SlowTailCallArgs.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n       \"C:\\dotnetbuild\\work\\58e2e07f-0e2c-4512-aeff-e27f677bf2b7\\Payload\\corerun.exe\" SlowTailCallArgs.dll \r\n          SpanTest: pass\r\n          ByRefLikeTest: fail\r\n      Expected: 100\r\n      Actual: 1\r\n      END EXECUTION - FAILED\r\n      FAILED\r\n      Test Harness Exitcode is : 1\r\n```"},{"Id":"10672430910","Type":"IssuesEvent","CreatedAt":"2019-10-21T03:01:42","Actor":"AriNuer","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27332","RelatedDescription":"Opened issue \"Test failure : System.Numerics.Tests.ComplexTests.Pow\" (#27332) at dotnet/coreclr","RelatedBody":"**Job:**\r\n[coreclr-corefx-jitstressregs:20191020.1](https://dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_build/results?buildId=394941)\r\n\r\n**Details:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/f0c1a15f-48eb-40e9-a2b1-a9a6077cda59/workitems/System.Runtime.Numerics.Tests/console\r\n\r\n**OS & Arch:**\r\nWindows x64\r\n\r\n**Note:**\r\n\r\n- There are no `MicrosoftPrivateCoreFxNETCoreAppVersion` in eng\\Versions.props in coreclr repo, but `MicrosoftPrivateCoreFxNETCoreAppPackageVersion`\r\n- This failure **doesn't repro** on our windows x64 machine with `MicrosoftPrivateCoreFxNETCoreAppPackageVersion`.\r\n\r\n**Log:**\r\n```\r\n===========================================================================================================\r\n\r\nC:\\dotnetbuild\\work\\f0c1a15f-48eb-40e9-a2b1-a9a6077cda59\\Work\\646a12f5-c82f-47bb-aee2-b5f8851693eb\\Exec>\"C:\\dotnetbuild\\work\\f0c1a15f-48eb-40e9-a2b1-a9a6077cda59\\Payload\\dotnet.exe\" exec --runtimeconfig System.Runtime.Numerics.Tests.runtimeconfig.json xunit.console.dll System.Runtime.Numerics.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=nonnetcoreapptests -notrait category=nonwindowstests -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing @C:\\dotnetbuild\\work\\f0c1a15f-48eb-40e9-a2b1-a9a6077cda59\\Payload\\CoreFX.issues.rsp \r\n  Discovering: System.Runtime.Numerics.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Runtime.Numerics.Tests (found 219 of 225 test cases)\r\n  Starting:    System.Runtime.Numerics.Tests (parallel test collections = on, max threads = 2)\r\n    System.Numerics.Tests.ComplexTests.Pow(real: 1.7976931348623157E+308, imaginary: 0) [FAIL]\r\n      Failure at line 1303. Expected real: 0. Actual real: 1.7976931348623157E+308\r\n      Expected: True\r\n      Actual:   False\r\n      Stack Trace:\r\n        /_/src/System.Runtime.Numerics/tests/ComplexTests.cs(1951,0): at System.Numerics.Tests.ComplexTests.VerifyRealImaginaryProperties(Complex complex, Double real, Double imaginary, Int32 lineNumber)\r\n        /_/src/System.Runtime.Numerics/tests/ComplexTests.cs(1304,0): at System.Numerics.Tests.ComplexTests.VerifyPow_Complex_Complex(Double realValue, Double imaginaryValue, Double realPower, Double imaginaryPower)\r\n        /_/src/System.Runtime.Numerics/tests/ComplexTests.cs(1275,0): at System.Numerics.Tests.ComplexTests.Pow_Complex_Complex(Double real, Double imaginary)\r\n    System.Numerics.Tests.ComplexTests.Pow(real: -1.7976931348623157E+308, imaginary: 0) [FAIL]\r\n      Failure at line 1303. Expected real: 0. Actual real: -1.7976931348623157E+308\r\n      Expected: True\r\n      Actual:   False\r\n      Stack Trace:\r\n        /_/src/System.Runtime.Numerics/tests/ComplexTests.cs(1951,0): at System.Numerics.Tests.ComplexTests.VerifyRealImaginaryProperties(Complex complex, Double real, Double imaginary, Int32 lineNumber)\r\n        /_/src/System.Runtime.Numerics/tests/ComplexTests.cs(1304,0): at System.Numerics.Tests.ComplexTests.VerifyPow_Complex_Complex(Double realValue, Double imaginaryValue, Double realPower, Double imaginaryPower)\r\n        /_/src/System.Runtime.Numerics/tests/ComplexTests.cs(1275,0): at System.Numerics.Tests.ComplexTests.Pow_Complex_Complex(Double real, Double imaginary)\r\n    System.Numerics.Tests.ComplexTests.Pow(real: 1, imaginary: 0) [FAIL]\r\n      Failure at line 1303. Expected real: 0. Actual real: 1\r\n      Expected: True\r\n      Actual:   False\r\n      Stack Trace:\r\n        /_/src/System.Runtime.Numerics/tests/ComplexTests.cs(1951,0): at System.Numerics.Tests.ComplexTests.VerifyRealImaginaryProperties(Complex complex, Double real, Double imaginary, Int32 lineNumber)\r\n        /_/src/System.Runtime.Numerics/tests/ComplexTests.cs(1304,0): at System.Numerics.Tests.ComplexTests.VerifyPow_Complex_Complex(Double realValue, Double imaginaryValue, Double realPower, Double imaginaryPower)\r\n        /_/src/System.Runtime.Numerics/tests/ComplexTests.cs(1275,0): at System.Numerics.Tests.ComplexTests.Pow_Complex_Complex(Double real, Double imaginary)\r\n    System.Numerics.Tests.ComplexTests.Pow(real: -1, imaginary: 0) [FAIL]\r\n      Failure at line 1303. Expected real: 0. Actual real: -1\r\n      Expected: True\r\n      Actual:   False\r\n      Stack Trace:\r\n        /_/src/System.Runtime.Numerics/tests/ComplexTests.cs(1951,0): at System.Numerics.Tests.ComplexTests.VerifyRealImaginaryProperties(Complex complex, Double real, Double imaginary, Int32 lineNumber)\r\n        /_/src/System.Runtime.Numerics/tests/ComplexTests.cs(1304,0): at System.Numerics.Tests.ComplexTests.VerifyPow_Complex_Complex(Double realValue, Double imaginaryValue, Double realPower, Double imaginaryPower)\r\n        /_/src/System.Runtime.Numerics/tests/ComplexTests.cs(1275,0): at System.Numerics.Tests.ComplexTests.Pow_Complex_Complex(Double real, Double imaginary)\r\n  Finished:    System.Runtime.Numerics.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Runtime.Numerics.Tests  Total: 2086, Errors: 0, Failed: 4, Skipped: 0, Time: 105.001s\r\n----- end Sun 10/20/2019 12:21:42.12 ----- exit code 1 ----------------------------------------------------------\r\n```\r\n"},{"Id":"10672398273","Type":"IssuesEvent","CreatedAt":"2019-10-21T02:52:47","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27331","RelatedDescription":"Opened issue \"Test failed: JIT/opt/ObjectStackAllocation/ObjectStackAllocationTests/ObjectStackAllocationTests.sh\" (#27331) at dotnet/coreclr","RelatedBody":"**Job:**\r\n[coreclr-jitstress #20191019.1](https://dev.azure.com/dnceng/public/_build/results?buildId=394826)\r\n\r\n**Detail:**\r\nlinux x64:\r\nhttps://helix.dot.net/api/2019-06-17/jobs/bf1f0311-43d8-43c3-a6f9-51269ad69f80/workitems/JIT/console\r\nOSX x64:\r\nhttps://helix.dot.net/api/2019-06-17/jobs/8159f61d-9813-48f6-b447-f50cdd09a276/workitems/JIT/console\r\n\r\n**OS & Arch:**\r\nlinux x64\r\nosx x64\r\n\r\n**Mode:**\r\nlinux x64:\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_DbgEnableMiniDump=1\r\nCOMPlus_DbgMiniDumpName=$HELIX_DUMP_FOLDER/coredump.%d.dmp\r\nCOMPlus_JitStress=2\r\n\r\nosx x64:\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_DbgEnableMiniDump=1\r\nCOMPlus_DbgMiniDumpName=$HELIX_DUMP_FOLDER/coredump.%d.dmp\r\nCOMPlus_JitStress=1\r\n\r\n**Note:**\r\nThis failure **repros** on our osx x64 machine.\r\nThere is no 'Tests_Linux_x64_checked_jitstress' in artfacts.\r\n\r\n**Log:**\r\n```\r\nJIT/opt/ObjectStackAllocation/ObjectStackAllocationTests/ObjectStackAllocationTests.sh [FAIL]\r\n      \r\n      Return code:      1\r\n      Raw output file:      /home/helixbot/work/bf1f0311-43d8-43c3-a6f9-51269ad69f80/Work/7509fbd3-e1bb-4605-8f58-fc3ab6c77874/Exec/JIT/opt/Reports/JIT.opt/ObjectStackAllocation/ObjectStackAllocationTests/ObjectStackAllocationTests.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n      /home/helixbot/work/bf1f0311-43d8-43c3-a6f9-51269ad69f80/Payload/corerun ObjectStackAllocationTests.dll ''\r\n      SUCCESS (AllocateSimpleClassAndAddFields)\r\n      FAILURE (AllocateSimpleClassesAndEQCompareThem): unexpected allocation of 48 bytes\r\n      SUCCESS (AllocateSimpleClassesAndNECompareThem)\r\n      SUCCESS (AllocateSimpleClassAndGetField)\r\n      SUCCESS (AllocateClassWithNestedStructAndGetField)\r\n      SUCCESS (AllocateClassWithNestedStructAndAddFields)\r\n      SUCCESS (AllocateSimpleClassWithGCFieldAndAddFields)\r\n      SUCCESS (AllocateSimpleClassAndAssignRefToAField)\r\n      SUCCESS (TestMixOfReportingAndWriteBarriers)\r\n      SUCCESS (AllocateSimpleClassAndCheckTypeNoHelper)\r\n      SUCCESS (AllocateSimpleClassAndCheckTypeHelper)\r\n      SUCCESS (AllocateSimpleClassAndCast)\r\n      SUCCESS (BoxSimpleStructAndAddFields)\r\n      Expected: 100\r\n      Actual: 255\r\n      END EXECUTION - FAILED\r\n      Test Harness Exitcode is : 1\r\n```"},{"Id":"10672370345","Type":"PullRequestEvent","CreatedAt":"2019-10-21T02:45:05","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27208","RelatedDescription":"Merged pull request \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#27208) at dotnet/coreclr","RelatedBody":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @brianrob\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n"},{"Id":"10672369894","Type":"PullRequestEvent","CreatedAt":"2019-10-21T02:44:57","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27316","RelatedDescription":"Merged pull request \"Replace gtPhysReg. with AsPhysReg()->\" (#27316) at dotnet/coreclr","RelatedBody":"@sandreenko "},{"Id":"10672368559","Type":"PullRequestEvent","CreatedAt":"2019-10-21T02:44:35","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27315","RelatedDescription":"Merged pull request \"Replace gtArrIndex. with AsArrIndex()->\" (#27315) at dotnet/coreclr","RelatedBody":"@sandreenko "}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"10671908810","Type":"PullRequestEvent","CreatedAt":"2019-10-21T00:10:24","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12949","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/core-setup\" (#12949) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191020.3\r\n- **Date Produced**: 10/20/2019 10:30 PM\r\n- **Commit**: 32228f2ae5e68394197859608c8c6afb94276481\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 5.0.0-alpha1.19520.3\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19520.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19520.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19520.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19520.3\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 5.0.0-alpha1.19520.3\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"},{"Id":"10671842943","Type":"PullRequestEvent","CreatedAt":"2019-10-20T23:40:10","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12949","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/core-setup\" (#12949) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191020.3\r\n- **Date Produced**: 10/20/2019 10:30 PM\r\n- **Commit**: 32228f2ae5e68394197859608c8c6afb94276481\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 5.0.0-alpha1.19520.3\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19520.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19520.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19520.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19520.3\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 5.0.0-alpha1.19520.3\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"},{"Id":"10671027244","Type":"PullRequestEvent","CreatedAt":"2019-10-20T17:58:35","Actor":"dsplaisted","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12948","RelatedDescription":"Opened pull request \"Delete code and update readme for repo merge\" (#12948) at dotnet/cli","RelatedBody":"The CLI repo [has been merged](https://github.com/dotnet/toolset/pull/2940) into the toolset repo.  So this PR removes the code from the master branch of the CLI repo, and updates the README and issue template to point to the dotnet/sdk repo."},{"Id":"10670879874","Type":"IssuesEvent","CreatedAt":"2019-10-20T16:56:43","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/12943","RelatedDescription":"Closed issue \"dotnet restore parallel adaptive\" (#12943) at dotnet/cli","RelatedBody":"## Description\r\n\r\nrestoring in tethering mode using phone line may cause failure due to timeout issue; a workaround is to use `--disable-parallel` but I think that a better approach should to use a sort of *adaptive parallel mode* so that restore will start in parallel and auto disable until all packages in queue where timeout occurred downloaded then switch back in parallel mode.\r\n\r\n## Steps to reproduce\r\n\r\n```sh\r\ngit clone https://github.com/devel0/repros.git\r\ngit checkout 9a5a81d0fe20d5e68cf0161ac9c64e93eae8e81a\r\ncd repros/netcore/dotnet-restore-01\r\ndocker build .\r\n```\r\n\r\nresults can be viewed with follow\r\n\r\n```sh\r\nless results.log.gz\r\n```\r\n\r\nnote: may need to set a bandwidth limiter to your network\r\n\r\n## Expected  behavior\r\n\r\nrestore without error\r\n\r\n## Actual behavior\r\n\r\nrestore fails due timeout in docker\r\n\r\n```\r\n         Failed to download package 'System.Text.Encodings.Web.4.4.0' from 'https://api.nuget.org/v3-flatcontainer/system.text.encodings.web/4.4.0/system.text.encodings.web.4.4.0.nupkg'.\r\n         The download of 'https://api.nuget.org/v3-flatcontainer/system.text.encodings.web/4.4.0/system.text.encodings.web.4.4.0.nupkg' timed out because no data was received for 60000ms.\r\n           Exception of type 'System.TimeoutException' was thrown.\r\n```\r\n\r\n## Environment data\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     debian\r\n OS Version:  10\r\n OS Platform: Linux\r\n RID:         debian.10-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n"},{"Id":"10670848624","Type":"PullRequestEvent","CreatedAt":"2019-10-20T16:43:29","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12947","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/core-setup\" (#12947) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191020.1\r\n- **Date Produced**: 10/20/2019 3:01 PM\r\n- **Commit**: 07c1aa65a954ed0bb7a3804485422c577eac7167\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 5.0.0-alpha1.19520.1\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19520.1\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19520.1\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19520.1\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19520.1\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 5.0.0-alpha1.19520.1\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n"},{"Id":"10669701264","Type":"PullRequestEvent","CreatedAt":"2019-10-20T08:05:12","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/12947","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/core-setup\" (#12947) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191019.8\r\n- **Date Produced**: 10/20/2019 6:59 AM\r\n- **Commit**: 878b814996cb808a525ae43b1f77559b8e2135dd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 5.0.0-alpha1.19519.8\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19519.8\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19519.8\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19519.8\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19519.8\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 5.0.0-alpha1.19519.8\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"},{"Id":"10669377990","Type":"PullRequestEvent","CreatedAt":"2019-10-20T04:45:24","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12946","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12946) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191019.2\r\n- **Date Produced**: 10/20/2019 3:24 AM\r\n- **Commit**: 0de57914279da79eb7166588f67609c851e46179\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview2.19519.2\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n"},{"Id":"10669340342","Type":"PullRequestEvent","CreatedAt":"2019-10-20T04:20:24","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/12945","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/core-setup\" (#12945) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191019.7\r\n- **Date Produced**: 10/20/2019 2:40 AM\r\n- **Commit**: 821e656fa75e04a2161c828446321f4a1ea99be7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 5.0.0-alpha1.19519.7\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19519.7\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19519.7\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19519.7\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19519.7\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 5.0.0-alpha1.19519.7\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"10670217318","Type":"PullRequestEvent","CreatedAt":"2019-10-20T12:22:06","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1619","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1619) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191019.7\r\n- **Date Produced**: 10/20/2019 2:47 AM\r\n- **Commit**: 03dd803990dfb8f05db8d0ec1bc34268386c1d5b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19519.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19519.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19519.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10670195878","Type":"PullRequestEvent","CreatedAt":"2019-10-20T12:12:01","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1619","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1619) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191019.7\r\n- **Date Produced**: 10/20/2019 2:47 AM\r\n- **Commit**: 03dd803990dfb8f05db8d0ec1bc34268386c1d5b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19519.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19519.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19519.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10667443815","Type":"PullRequestEvent","CreatedAt":"2019-10-19T12:29:33","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1618","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1618) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191018.10\r\n- **Date Produced**: 10/19/2019 7:13 AM\r\n- **Commit**: 5590d3896f012c1c9b7774774456331a36ba1d57\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19518.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19518.10\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19518.10\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10667422101","Type":"PullRequestEvent","CreatedAt":"2019-10-19T12:19:28","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1618","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1618) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191018.10\r\n- **Date Produced**: 10/19/2019 7:13 AM\r\n- **Commit**: 5590d3896f012c1c9b7774774456331a36ba1d57\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19518.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19518.10\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19518.10\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10663136645","Type":"IssuesEvent","CreatedAt":"2019-10-18T15:46:13","Actor":"0blu","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1617","RelatedDescription":"Closed issue \"Why do I need special permission when using HttpListener?\" (#1617) at dotnet/standard","RelatedBody":"Hey,\r\n\r\nthis issue is a little bit dot net bashing because some interfaces are design with assumptions that are too specific for most users, HttpListener is one of them.\r\n\r\nFirst of all, I already read about the [HTTP namespace system](https://docs.microsoft.com/en-us/windows/win32/http/routing-incoming-requests).\r\n\r\n`HttpListener` allows simple and high level creation of HTTP servers, but what if I want to create a HTTP server that can listen on all hosts, without requiring admin permissions or running arbitrary `netsh` commands?\r\n\r\nIf I would run this code as an unprivileged user the result would be an access exception.\r\n``` c#\r\nHttpListener listener = new HttpListener();\r\nlistener.Prefixes.Add(\"http://*:1234/\");\r\nlistener.Start();\r\n```\r\n\r\nHowever running the following code proves that an unprivileged user could potentially write his own HTTP server, that allows access from all interfaces.\r\n``` c#\r\nTcpListener server = new TcpListener(IPAddress.Any, 1234);\r\nserver.Start();\r\n```\r\n\r\nI wonder why there is no way to take all the benefits of the `HttpListener` and skipping the namespacing system. Other languages have such features.\r\n\r\nIs there any chance to request an API addition that allows such things?\r\nFor example allowing the constructor of `HttpListener` to take an `TcpListener`-Instance.\r\n"},{"Id":"10661500205","Type":"PullRequestEvent","CreatedAt":"2019-10-18T12:30:30","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1616","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1616) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191018.1\r\n- **Date Produced**: 10/18/2019 8:58 AM\r\n- **Commit**: 2b92fc0930b941cd0d9146971745cd717689434c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19518.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19518.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19518.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"10672818026","Type":"IssuesEvent","CreatedAt":"2019-10-21T04:54:24","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/41427","RelatedDescription":"Reopened issue \"System.Text.Json fails on deserializing into sub-subclasses of system collections\" (#41427) at dotnet/corefx","RelatedBody":"When trying to deserialize into a class that has a class being a valid deserialization target for a collection higher in the class inheritance graph than its direct parent, the deserialization fails.\r\n\r\nExample code:\r\n```cs\r\nnamespace JsonProblem {\r\n\r\nusing System.Collections.Generic;\r\nusing System.Text.Json;\r\n\r\nclass ListString : List<string> {\r\n}\r\n\r\nclass MyList<T> : List<T> {\r\n}\r\n\r\nclass MyMyList<T> : MyList<T> {\r\n}\r\n\r\nclass MyListString : MyList<string> {\r\n}\r\n\r\nclass Program {\r\n    const string JSON = \"[\\\"test\\\"]\";\r\n\r\n    static void Main( string[] args ) {\r\n        JsonSerializer.Deserialize( JSON, typeof(string[]) ); // works\r\n        JsonSerializer.Deserialize( JSON, typeof(List<string>) ); // works\r\n        JsonSerializer.Deserialize( JSON, typeof(ListString) ); // also works\r\n        JsonSerializer.Deserialize( JSON, typeof(MyList<string>) ); // works\r\n        JsonSerializer.Deserialize( JSON, typeof(MyMyList<string>) ); // doesn't work\r\n        JsonSerializer.Deserialize( JSON, typeof(MyListString) ); // doesn't work\r\n    }\r\n}\r\n\r\n}\r\n```\r\n\r\nAll the above classes worked OK in Json.NET - IMVHO, the deserializer should handle them, which it doesn't."},{"Id":"10672606395","Type":"PullRequestEvent","CreatedAt":"2019-10-21T03:50:39","Actor":"davidfowl","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/40874","RelatedDescription":"Merged pull request \"StreamPipeWriter: don't flush when the writer is completed with an exception.\" (#40874) at dotnet/corefx","RelatedBody":"This provides a way to discard buffered data without pushing it to the inner Stream.\r\n\r\nFixes https://github.com/dotnet/corefx/issues/40812\r\n\r\nCC @davidfowl"},{"Id":"10672606382","Type":"IssuesEvent","CreatedAt":"2019-10-21T03:50:39","Actor":"davidfowl","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/40812","RelatedDescription":"Closed issue \"StreamPipeWriter shouldn't flush when Completed with Exception\" (#40812) at dotnet/corefx","RelatedBody":"StreamPipeWriter is flushing when it is Completed with an Exception.\r\nI'd expected it to abort pending write operations instead of trying to flush them. Otherwise the writer has no way of aborting pending writes.\r\n\r\nhttps://github.com/dotnet/corefx/blob/aea8a56edf54228029b0f9ddf369e4d4f82f4446/src/System.IO.Pipelines/src/System/IO/Pipelines/StreamPipeWriter.cs#L204-L221\r\n\r\nCC @davidfowl "},{"Id":"10672605140","Type":"PullRequestEvent","CreatedAt":"2019-10-21T03:50:18","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/41933","RelatedDescription":"Opened pull request \"Optimize FindFirstCharToEncode for JavaScriptEncoder.Default and Relaxed using Sse2 intrinsics.\" (#41933) at dotnet/corefx","RelatedBody":"Follow-up to https://github.com/dotnet/corefx/pull/41845 to optimize the built-in `JavascriptEncoder` using a similar approach.\r\n\r\n+ added some tests to improve code coverage\r\n\r\ncc @GrabYourPitchforks, @gfoidl, @tarekgh, @tannergooding, @ViktorHofer "},{"Id":"10672388791","Type":"PullRequestEvent","CreatedAt":"2019-10-21T02:50:09","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/41499","RelatedDescription":"Merged pull request \"Add tests to improving TimeSpan precision\" (#41499) at dotnet/corefx","RelatedBody":"Fixes [dotnet/corefx#41380](https://github.com/dotnet/corefx/issues/41380)\r\n\r\nRelated coreclr PR [dotnet/coreclr#26992](https://github.com/dotnet/coreclr/pull/26992)"},{"Id":"10672375853","Type":"PullRequestEvent","CreatedAt":"2019-10-21T02:46:39","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/41838","RelatedDescription":"Closed pull request \"Add pipe creation extension methods that take an ACL\" (#41838) at dotnet/corefx","RelatedBody":"Fixes https://github.com/dotnet/corefx/issues/41657"},{"Id":"10672375318","Type":"PullRequestEvent","CreatedAt":"2019-10-21T02:46:29","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/41871","RelatedDescription":"Closed pull request \"Add Mutex, Semaphore, and EventWaitHandle creation extension methods that take an ACL\" (#41871) at dotnet/corefx","RelatedBody":"Fixes https://github.com/dotnet/corefx/issues/41662\r\n\r\n@JeremyKuhne "}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"10672761744","Type":"IssuesEvent","CreatedAt":"2019-10-21T04:37:50","Actor":"vsfeedback","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/39408","RelatedDescription":"Opened issue \"Suggested LINQ refactoring is not correct\" (#39408) at dotnet/roslyn","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/740980/suggested-linq-refactoring-is-not-correct.html)._\n\n---\nIn WPF project\nIDE Suggest to convert LINQ in follow code, but converted result is compile error\n\n(WrapPanelMain is an instance of WrapPanel)\n            foreach (var item in WrapPanelMain.Children)\n            {\n            }\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 9/20/2019, 01:31 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 10/17/2019, 04:54 PM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n#### Ivan Basov [MSFT] on 10/18/2019, 11:55 AM: \n\n<p>Thank you for your feedback!</p>\n<p>I tried Convert To Linq with the following code:<br>\nvoid Do(Panel panel, bool mode)<br>\n{<br>\nforeach(var item in panel.Children)<br>\n{<br>\nCheckBox ch = item as CheckBox;<br>\nif (ch != null) ch.IsChecked = mode;<br>\n}<br>\n}</p>\n<p>The converted foreach looks like the following one:<br>\nforeach (var ch in from item in panel.Children<br>\nlet ch = item as CheckBox<br>\nwhere ch != null<br>\nselect ch)<br>\n{<br>\nch.IsChecked = mode;<br>\n}<br>\nwhich seems to be correct and he build succeeded. Could you please let us know what code is generated in you case?</p>\n\n#### Akira Kawamata on 10/19/2019, 00:34 AM: \n\n<p>In Visual Studio 16.3.5...</p><p>private void checkAllCommon(bool mode)<br>{<br>    foreach (var item in WrapPanelMain.Children)<br>    {<br>        CheckBox ch = item as CheckBox;<br>        if (ch != null) ch.IsChecked = mode;<br>    }<br>}</p><p> converted to...</p><p>private void checkAllCommon(bool mode)<br>{<br>    foreach (var ch in from item in WrapPanelMain.Children<br>                       let ch = item as CheckBox<br>                       where ch != null<br>                       select ch)<br>    {<br>        ch.IsChecked = mode;<br>    }<br>}</p><p> Error Message is...</p><p>エラー CS1934 ソース型 'UIElementCollection' のクエリ パターンの実装が見つかりませんでした。'Select' が見つかりません。範囲変数 'item'  の型を明示的に指定してください。 WpfApp3 C:\\xdelme\\WpfApp3\\WpfApp3\\MainWindow.xaml.cs 29 アクティブ</p>\n\n\n---\n### Original Solutions\n(no solutions)"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"10670449661","Type":"PullRequestEvent","CreatedAt":"2019-10-20T14:04:45","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7830","RelatedDescription":"Merged pull request \"Add AppContext switch to not throw for Type.Name\" (#7830) at dotnet/corert","RelatedBody":"Makes simple WinForms apps work in reflection-free mode without crashing.\r\n\r\nhttps://github.com/dotnet/winforms/blob/5df2ebfe70f2eaa2733c7f21e7e9e20f0be7e766/src/System.Windows.Forms/src/System/Windows/Forms/Control.cs#L4013"},{"Id":"10670448300","Type":"PullRequestEvent","CreatedAt":"2019-10-20T14:04:12","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7831","RelatedDescription":"Merged pull request \"Scan for Marshal.SizeOf in reflection-disabled mode\" (#7831) at dotnet/corert","RelatedBody":"I tacked scanning for `Marshal.SizeOf(typeof(SomeType))` on the reflection method body scanner. It felt a bit dirty, but it worked and we no longer had to worry about not having interop marshalling data for these types at runtime if we saw the pattern at compile time.\r\n\r\nBut we would like to scan for this even in the reflection disabled mode, which makes this whole business a bit messier.\r\n\r\nWe'll probably want to plug this into the RyuJIT scanner at some point, but we'll need to think about scanning some more (whether scanning is just an optimization, or whether scanning is needed for correctness, how/whether would RyuJIT report parameters, etc.)."},{"Id":"10669127322","Type":"PullRequestEvent","CreatedAt":"2019-10-20T02:03:38","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7828","RelatedDescription":"Merged pull request \"Move portable thread pool to shared partition\" (#7828) at dotnet/corert","RelatedBody":""},{"Id":"10668657728","Type":"PullRequestEvent","CreatedAt":"2019-10-19T21:20:21","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7831","RelatedDescription":"Opened pull request \"Scan for Marshal.SizeOf in reflection-disabled mode\" (#7831) at dotnet/corert","RelatedBody":"I tacked scanning for `Marshal.SizeOf(typeof(SomeType))` on the reflection method body scanner. It felt a bit dirty, but it worked and we no longer had to worry about not having interop marshalling data for these types at runtime if we saw the pattern at compile time.\r\n\r\nBut we would like to scan for this even in the reflection disabled mode, which makes this whole business a bit messier.\r\n\r\nWe'll probably want to plug this into the RyuJIT scanner at some point, but we'll need to think about scanning some more (whether scanning is just an optimization, or whether scanning is needed for correctness, how/whether would RyuJIT report parameters, etc.)."},{"Id":"10668656183","Type":"PullRequestEvent","CreatedAt":"2019-10-19T21:19:34","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7830","RelatedDescription":"Opened pull request \"Add AppContext switch to not throw for Type.Name\" (#7830) at dotnet/corert","RelatedBody":"Makes simple WinForms apps work in reflection-free mode without crashing.\r\n\r\nhttps://github.com/dotnet/winforms/blob/5df2ebfe70f2eaa2733c7f21e7e9e20f0be7e766/src/System.Windows.Forms/src/System/Windows/Forms/Control.cs#L4013"},{"Id":"10668601575","Type":"IssuesEvent","CreatedAt":"2019-10-19T20:52:49","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7829","RelatedDescription":"Opened issue \"Compilation crashes with System.IndexOutOfRangeException\" (#7829) at dotnet/corert","RelatedBody":"```\r\n  Unhandled Exception: System.IndexOutOfRangeException: Index was outside the bounds of the array.\r\n     at Internal.IL.Stubs.ILStubMethodIL.GetObject(Int32 token) in F:\\workspace\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\IL\\Stubs\\ILEmitter.cs:line 550\r\n     at Internal.IL.ILStackHelper.ComputeMaxStack(MethodIL methodIL) in F:\\workspace\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\IL\\ILStackHelper.cs:line 290\r\n     at Internal.IL.Stubs.ILStubMethodIL.get_MaxStack() in F:\\workspace\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\IL\\Stubs\\ILEmitter.cs:line 527\r\n     at Internal.JitInterface.CorInfoImpl.Get_CORINFO_METHOD_INFO(MethodDesc method, MethodIL methodIL, CORINFO_METHOD_INFO* methodInfo) in F:\\workspace\\_work\\1\\s\\src\\JitInterface\\src\\CorInfoImpl.cs:line 413\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL) in F:\\workspace\\_work\\1\\s\\src\\JitInterface\\src\\CorInfoImpl.cs:line 154\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode) in F:\\workspace\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\Compiler\\RyuJitCompilation.cs:line 139\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```"},{"Id":"10667464866","Type":"PullRequestEvent","CreatedAt":"2019-10-19T12:39:21","Actor":"filipnavara","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7828","RelatedDescription":"Opened pull request \"Move portable thread pool to shared partition\" (#7828) at dotnet/corert","RelatedBody":""},{"Id":"10661764033","Type":"IssuesEvent","CreatedAt":"2019-10-18T13:05:25","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7408","RelatedDescription":"Closed issue \"UWP .net Native Internal Compiler Error.\" (#7408) at dotnet/corert","RelatedBody":"Sorry if this is the wrong place for .net native and UWP compile errors.\r\n\r\nI have a UWP app, and we have been using debug mode during develop. We are trying to build in release mode with .net native toolchain (this is quite important for us to get the high performance.)\r\n\r\nHowever we get an internal compiler error:\r\n```\r\n8>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\MSBuild\\Microsoft\\VisualStudio\\v16.0\\AppxPackage\\Microsoft.AppXPackage.Targets(3164,5): warning : APPX4001: Build property AppxBundlePlatforms is not explicitly set and is calculated based on currently building architecture. Use 'Create App Package' wizard or edit project file to set it.\r\n8>  Processing application code\r\n8>  Computing application closure and generating interop code\r\n8>    Loading 121 modules...\r\n8>    Generating code...\r\n8>    Interop code generated.\r\n8>  Generating serialization code\r\n8>  Compiling interop code\r\n8>  Generating System.Reflection.DispatchProxy proxy code.\r\n8>  Cleaning up unreferenced code\r\n8>  Generating native code\r\n8>C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\microsoft.net.native.compiler\\2.2.3\\tools\\Microsoft.NetNative.targets(801,5): error : ILT0005: 'C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\runtime.win10-x64.microsoft.net.native.compiler\\2.2.3\\tools\\x64\\ilc\\Tools\\nutc_driver.exe @\"C:\\dev\\repos\\ILMD\\ILMD.App\\ILMD.App\\ILMD.App.UWP\\obj\\x64\\Release\\ilc\\intermediate\\MDIL\\ILMD.App.UWP.rsp\"' returned exit code 1\r\n========== Build: 7 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\r\n```\r\n\r\n\r\nI ran using msbuild and versbose and nutc_driver.exe gives internal compiler error but no more useful information.\r\n\r\n   I would be willing to send my source code for testing privately.\r\n\r\nThanks in advance\r\n\r\n"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"10670876562","Type":"IssuesEvent","CreatedAt":"2019-10-20T16:55:20","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/3762","RelatedDescription":"Closed issue \"The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized\" (#3762) at dotnet/sdk","RelatedBody":"_From @DataTables on Thursday, October 17, 2019 10:16:11 AM_\r\n\r\n### Describe the bug\r\n\r\nWhen adding .NET Core 3.0 to a multi-targeted project I'm getting the error:\r\n\r\n> error NETSDK1073: The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized\r\n\r\nI've followed the [porting guide here](https://docs.microsoft.com/en-us/aspnet/core/migration/22-to-30?view=aspnetcore-2.2&tabs=visual-studio) but have been unable to resolve the issue. It looks like this also also been raised in [other issues](https://github.com/aspnet/AspNetCore/issues/4490), but the indications there are that this was an issue during the previews and should now be resolved.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1) Clone into [this repo](https://github.com/DataTables/Editor-NET) which is the one I'm trying to add .NET Core 3.0 build support to.\r\n2) Update the DataTables-Editor-Server.csproj file to target .NET Core 3.0:\r\n\r\n```\r\n<TargetFrameworks>netcoreapp2.1;netcoreapp3.0;net45;net46;net47</TargetFrameworks>\r\n```\r\n\r\nand add:\r\n\r\n```\r\n  <ItemGroup Condition=\"'$(TargetFramework)' == 'netcoreapp3.0'\">\r\n    <FrameworkReference Include=\"Microsoft.AspNetCore.App\" />\r\n    <PackageReference Include=\"Microsoft.CSharp\">\r\n      <Version>4.6.0</Version>\r\n    </PackageReference>\r\n  </ItemGroup>\r\n```\r\n\r\n3) Run `msbuild DataTables.sln` - observe errors for .NET Core 3.0 build.\r\n\r\nThe [documentation here](https://docs.microsoft.com/en-gb/dotnet/core/tools/csproj#implicit-package-references) notes that `Microsoft.AspNetCore.App\"` is implicit and doesn't need to be included, but the migration guide says it should if the SDK is `Microsoft.NET.Sdk` which I've been using.\r\n\r\n### Expected behavior\r\ndll targeting .NET Core 3.0 will be build along with the others.\r\n\r\n### Additional context\r\n\r\n```\r\n$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     fedora\r\n OS Version:  27\r\n OS Platform: Linux\r\n RID:         fedora.27-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  95a0a61858\r\n\r\n.NET Core SDKs installed:\r\n  2.1.505 [/usr/share/dotnet/sdk]\r\n  3.0.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nInstallation for .NET Core (and Framework via mono) build in Fedora was:\r\n\r\n```\r\nsudo rpm --import https://packages.microsoft.com/keys/microsoft.asc\r\nwget -q https://packages.microsoft.com/config/fedora/27/prod.repo\r\nsudo mv prod.repo /etc/yum.repos.d/microsoft-prod.repo\r\nsudo chown root:root /etc/yum.repos.d/microsoft-prod.repo\r\n\r\nsudo dnf install -y aspnetcore-runtime-2.1\r\nsudo dnf install -y dotnet-sdk-2.1-2.1.505\r\n\r\nsudo dnf install -y aspnetcore-runtime-3.0\r\nsudo dnf install -y dotnet-sdk-3.0\r\n\r\n# .NET Framework via Mono\r\nsudo rpm --import \"https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF\"\r\nsudo curl https://download.mono-project.com/repo/centos7-stable.repo | sudo tee /etc/yum.repos.d/mono-centos7-stable.repo\r\nsudo dnf install -y mono-devel mono-complete xsp msbuild\r\n```\r\n\r\n\r\n_Copied from original issue: aspnet/AspNetCore#15107_"},{"Id":"10667391228","Type":"PullRequestEvent","CreatedAt":"2019-10-19T12:04:58","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3767","RelatedDescription":"Opened pull request \"Merge release/3.0.1xx to release/3.1.1xx\" (#3767) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10666093277","Type":"PullRequestEvent","CreatedAt":"2019-10-19T00:38:49","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3755","RelatedDescription":"Merged pull request \"Merge release/3.0.1xx to release/3.1.1xx\" (#3755) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10666081398","Type":"PullRequestEvent","CreatedAt":"2019-10-19T00:33:49","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/3759","RelatedDescription":"Closed pull request \"Add TFM check for `Publish-Trimmed-ReadyToRun-SingleFile`\" (#3759) at dotnet/sdk","RelatedBody":"Trying to publish a `.net core 2.1` app as a single file fails with the `PlaceHolderNotFoundInAppHostException` generated by the `HostWriter`.\r\n\r\nPublishing apps as a single file is only supported in `.net core 3` and higher.\r\nSo, this change adds a version check in the SDK.\r\n\r\nSimilarly, the check is also added for the `PublishReadyToRun` and `PublishTrimmed` options.\r\n\r\nFixes https://github.com/dotnet/sdk/issues/3728"},{"Id":"10666077518","Type":"PullRequestEvent","CreatedAt":"2019-10-19T00:32:13","Actor":"swaroop-sridhar","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3766","RelatedDescription":"Opened pull request \"Add TFM check for `Publish-Trimmed-ReadyToRun-SingleFile`\" (#3766) at dotnet/sdk","RelatedBody":"The options `PublishSingleFile`, `PublishReadyToRun`, and `PublishTrimmed` are only supported when targetting netcoreapp3.0 or later.\r\n\r\nTrying to publish to a different target (say `.netcoreapp2.1`) today:\r\n* `PublishSingleFile` fails with the `PlaceHolderNotFoundInAppHostException` generated by the `HostWriter`.\r\n* `PublishReadyToRun` and `PublishTrimmed` silently fail to turn on, but the `publish` itself suceeds.\r\n\r\nThis change adds an explicit TFM check to generate error/warnings for non-conforming targets.\r\n\r\n`PublishSingleFile`, `PublishReadyToRun`, and `PublishTrimmed` require the following conditions to be true:\r\n* `TargetFramework` is `netcoreapp`\r\n* `TargetFrameworkVersion` is at least `3.0`\r\n* The app is an executable (`OutputType=exe`)\r\n\r\nIf any of the conditions fail:\r\n* `PublishSingleFile` fails with an appropriate error\r\n* `PublishReadyToRun` and `PublishTrimmed` issue warnings, but publish itself succeeds.\r\n  This is because:\r\n    * The restriction against `classlibs` / `netstandard` frameworks may be relaxed in future releases\r\n    * The version check should ideally be a failure, but they are warnings for maximum compatibility with `3.0` release.\r\n\r\nFixes https://github.com/dotnet/sdk/issues/3728"},{"Id":"10665121495","Type":"PullRequestEvent","CreatedAt":"2019-10-18T20:42:11","Actor":"sfoslund","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3723","RelatedDescription":"Merged pull request \"Confirm DisableImplicitNamespaceImports solves inferred type variable name issue\" (#3723) at dotnet/sdk","RelatedBody":"Add test for #3615 to ensure the DisableImplicitNamespaceImports property solves inferred type variable name issue"},{"Id":"10664204299","Type":"IssuesEvent","CreatedAt":"2019-10-18T18:18:04","Actor":"pinkfloydx33","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/3765","RelatedDescription":"Opened issue \"PublishSingleFile=true does not include Content files\" (#3765) at dotnet/sdk","RelatedBody":"I am working with a (non-web) .NET Core 3.0 console application and I am trying to use `PublishSingleFile=true`. While the single-file aspect does indeed work (I get one executable file), my application always crashes due to missing appsettings.json files. I've tried setting the files to Content/None, Copy Always/Newest. I also tried adding `<CopyToPublishDirectory>true</CopyToPublishDirectory>` and yet nothing seems to work.\r\n\r\nIf I create a brand new fresh _Web_-SDK project, the single file publish works and the content files are dropped right next to the published executable. I tried comparing the starter web project to my console application and I don't see a difference.  \r\n\r\nThe easiest reproduction I have is to create a blank console application project, add a text file to the project (as content or `none`) and then publish with the PublishSingleFile=true. The output does not contain the content files. \r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <RuntimeIdentifier>win-x64</RuntimeIdentifier>\r\n    <PublishSingleFile>true</PublishSingleFile>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Content Include=\"MyContentFile.txt\">\r\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory>\r\n      <CopyToPublishDirectory>Always</CopyToPublishDirectory>\r\n    </Content>\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIs this supposed to work for non-Web projects?\r\n\r\n> .NET Core SDK (reflecting any global.json):\r\n>  Version:   3.0.100\r\n>  Commit:    04339c3a26\r\n> \r\n> Runtime Environment:\r\n>  OS Name:     Windows\r\n>  OS Version:  10.0.18362\r\n>  OS Platform: Windows\r\n>  RID:         win10-x64\r\n>  Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n> \r\n> Host (useful for support):\r\n>   Version: 3.0.0\r\n>   Commit:  95a0a61858\r\n> \r\n> .NET Core SDKs installed:\r\n>   3.0.100-rc1-014190 [C:\\Program Files\\dotnet\\sdk]\r\n>   3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n> \r\n> .NET Core runtimes installed:\r\n>   Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n>   Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n>   Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"501128777","IsPullRequest":true,"CreatedAt":"2019-10-01T20:30:20","Actor":"gep13","Number":"150","RawContent":null,"Title":"Add new Cake Maintainer","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Open PR \"Add new Cake Maintainer\" (#150)"},{"Id":"500670461","IsPullRequest":true,"CreatedAt":"2019-10-01T05:27:58","Actor":"JimBobSquarePants","Number":"149","RawContent":null,"Title":"Add ImageSharp","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Open PR \"Add ImageSharp\" (#149)"},{"Id":"475315730","IsPullRequest":false,"CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Number":"148","RawContent":null,"Title":"Clarify guidelines in regards to Options and Requirements","State":"open","Body":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?","Url":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Open issue \"Clarify guidelines in regards to Options and Requirements\" (#148)"},{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-06-13T10:49:30","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Open PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"509556444","IsPullRequest":true,"CreatedAt":"2019-10-21T05:22:30","Actor":"franksinankaya","Number":"27323","RawContent":null,"Title":"Fix multicharacter constant issues","State":"closed","Body":"@am11 @jkotas @janvorli ","Url":"https://github.com/dotnet/coreclr/pull/27323","RelatedDescription":"Closed or merged PR \"Fix multicharacter constant issues\" (#27323)"},{"Id":"509553339","IsPullRequest":true,"CreatedAt":"2019-10-21T05:02:25","Actor":"franksinankaya","Number":"27313","RawContent":null,"Title":"Replace gtAllocObj. with AsAllocObj()->","State":"closed","Body":"@sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/27313","RelatedDescription":"Closed or merged PR \"Replace gtAllocObj. with AsAllocObj()->\" (#27313)"},{"Id":"509715729","IsPullRequest":true,"CreatedAt":"2019-10-21T03:51:30","Actor":"danmosemsft","Number":"27333","RawContent":null,"Title":"Clarify inner exception and aggregate exception ToString()","State":"open","Body":"Continuation of the part of https://github.com/dotnet/coreclr/pull/25045 that was deferred from 3.0.\r\n\r\nUsing this [test program](https://gist.github.com/danmosemsft/e2263748f12a4edf81ef297dbd200c16) - the SSL case is real, albeit the stacks are not --\r\n\r\n* [original output](https://gist.github.com/danmosemsft/421d37130f3a2ae36206fa1c8ca5b062)\r\n* [simple indent/arrows](https://gist.github.com/danmosemsft/ae41c57a564ad5bae7699c59c3874d5f)\r\n* [boxes](https://gist.github.com/danmosemsft/70281235ea0f07dce17245d1b3597a2f)\r\n* [compact boxes](https://gist.github.com/danmosemsft/2ffd883ec3d553427d2fc057be8efa16)  (this PR)\r\n\r\nIt's easiest to open in separate tabs and switch between. I think the boxes make it considerably easier to match up which exception goes with which stack, and which exception is nested inside which other exception. Thoughts? Other suggestions?\r\n\r\nNote that the non-aggregate non-nested exception case (top example) is not affected.\r\n\r\nBTW also made some minor fixes to pretty some exceptions I noticed as I was doing this\r\n* aae660d (one bad IL message was missing path)\r\n* 7b57069 (non absolute path message was missing path)\r\n* 54336a7 (2 blank lines caused by runtime passing empty string for fusion log: I assume fusion log is not relevant anymore)\r\n* Only append the file name if it's not already in the exception message. It looks like the runtime pretty much always puts it in the message if it's available, in which case text line `File name: 'c:\\some\\file'` is an unnecessary line.","Url":"https://github.com/dotnet/coreclr/pull/27333","RelatedDescription":"Open PR \"Clarify inner exception and aggregate exception ToString()\" (#27333)"},{"Id":"509704539","IsPullRequest":false,"CreatedAt":"2019-10-21T03:01:41","Actor":"AriNuer","Number":"27332","RawContent":null,"Title":"Test failure : System.Numerics.Tests.ComplexTests.Pow","State":"open","Body":"**Job:**\r\n[coreclr-corefx-jitstressregs:20191020.1](https://dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_build/results?buildId=394941)\r\n\r\n**Details:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/f0c1a15f-48eb-40e9-a2b1-a9a6077cda59/workitems/System.Runtime.Numerics.Tests/console\r\n\r\n**OS & Arch:**\r\nWindows x64\r\n\r\n**Note:**\r\n\r\n- There are no `MicrosoftPrivateCoreFxNETCoreAppVersion` in eng\\Versions.props in coreclr repo, but `MicrosoftPrivateCoreFxNETCoreAppPackageVersion`\r\n- This failure **doesn't repro** on our windows x64 machine with `MicrosoftPrivateCoreFxNETCoreAppPackageVersion`.\r\n\r\n**Log:**\r\n```\r\n===========================================================================================================\r\n\r\nC:\\dotnetbuild\\work\\f0c1a15f-48eb-40e9-a2b1-a9a6077cda59\\Work\\646a12f5-c82f-47bb-aee2-b5f8851693eb\\Exec>\"C:\\dotnetbuild\\work\\f0c1a15f-48eb-40e9-a2b1-a9a6077cda59\\Payload\\dotnet.exe\" exec --runtimeconfig System.Runtime.Numerics.Tests.runtimeconfig.json xunit.console.dll System.Runtime.Numerics.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=nonnetcoreapptests -notrait category=nonwindowstests -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing @C:\\dotnetbuild\\work\\f0c1a15f-48eb-40e9-a2b1-a9a6077cda59\\Payload\\CoreFX.issues.rsp \r\n  Discovering: System.Runtime.Numerics.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Runtime.Numerics.Tests (found 219 of 225 test cases)\r\n  Starting:    System.Runtime.Numerics.Tests (parallel test collections = on, max threads = 2)\r\n    System.Numerics.Tests.ComplexTests.Pow(real: 1.7976931348623157E+308, imaginary: 0) [FAIL]\r\n      Failure at line 1303. Expected real: 0. Actual real: 1.7976931348623157E+308\r\n      Expected: True\r\n      Actual:   False\r\n      Stack Trace:\r\n        /_/src/System.Runtime.Numerics/tests/ComplexTests.cs(1951,0): at System.Numerics.Tests.ComplexTests.VerifyRealImaginaryProperties(Complex complex, Double real, Double imaginary, Int32 lineNumber)\r\n        /_/src/System.Runtime.Numerics/tests/ComplexTests.cs(1304,0): at System.Numerics.Tests.ComplexTests.VerifyPow_Complex_Complex(Double realValue, Double imaginaryValue, Double realPower, Double imaginaryPower)\r\n        /_/src/System.Runtime.Numerics/tests/ComplexTests.cs(1275,0): at System.Numerics.Tests.ComplexTests.Pow_Complex_Complex(Double real, Double imaginary)\r\n    System.Numerics.Tests.ComplexTests.Pow(real: -1.7976931348623157E+308, imaginary: 0) [FAIL]\r\n      Failure at line 1303. Expected real: 0. Actual real: -1.7976931348623157E+308\r\n      Expected: True\r\n      Actual:   False\r\n      Stack Trace:\r\n        /_/src/System.Runtime.Numerics/tests/ComplexTests.cs(1951,0): at System.Numerics.Tests.ComplexTests.VerifyRealImaginaryProperties(Complex complex, Double real, Double imaginary, Int32 lineNumber)\r\n        /_/src/System.Runtime.Numerics/tests/ComplexTests.cs(1304,0): at System.Numerics.Tests.ComplexTests.VerifyPow_Complex_Complex(Double realValue, Double imaginaryValue, Double realPower, Double imaginaryPower)\r\n        /_/src/System.Runtime.Numerics/tests/ComplexTests.cs(1275,0): at System.Numerics.Tests.ComplexTests.Pow_Complex_Complex(Double real, Double imaginary)\r\n    System.Numerics.Tests.ComplexTests.Pow(real: 1, imaginary: 0) [FAIL]\r\n      Failure at line 1303. Expected real: 0. Actual real: 1\r\n      Expected: True\r\n      Actual:   False\r\n      Stack Trace:\r\n        /_/src/System.Runtime.Numerics/tests/ComplexTests.cs(1951,0): at System.Numerics.Tests.ComplexTests.VerifyRealImaginaryProperties(Complex complex, Double real, Double imaginary, Int32 lineNumber)\r\n        /_/src/System.Runtime.Numerics/tests/ComplexTests.cs(1304,0): at System.Numerics.Tests.ComplexTests.VerifyPow_Complex_Complex(Double realValue, Double imaginaryValue, Double realPower, Double imaginaryPower)\r\n        /_/src/System.Runtime.Numerics/tests/ComplexTests.cs(1275,0): at System.Numerics.Tests.ComplexTests.Pow_Complex_Complex(Double real, Double imaginary)\r\n    System.Numerics.Tests.ComplexTests.Pow(real: -1, imaginary: 0) [FAIL]\r\n      Failure at line 1303. Expected real: 0. Actual real: -1\r\n      Expected: True\r\n      Actual:   False\r\n      Stack Trace:\r\n        /_/src/System.Runtime.Numerics/tests/ComplexTests.cs(1951,0): at System.Numerics.Tests.ComplexTests.VerifyRealImaginaryProperties(Complex complex, Double real, Double imaginary, Int32 lineNumber)\r\n        /_/src/System.Runtime.Numerics/tests/ComplexTests.cs(1304,0): at System.Numerics.Tests.ComplexTests.VerifyPow_Complex_Complex(Double realValue, Double imaginaryValue, Double realPower, Double imaginaryPower)\r\n        /_/src/System.Runtime.Numerics/tests/ComplexTests.cs(1275,0): at System.Numerics.Tests.ComplexTests.Pow_Complex_Complex(Double real, Double imaginary)\r\n  Finished:    System.Runtime.Numerics.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Runtime.Numerics.Tests  Total: 2086, Errors: 0, Failed: 4, Skipped: 0, Time: 105.001s\r\n----- end Sun 10/20/2019 12:21:42.12 ----- exit code 1 ----------------------------------------------------------\r\n```\r\n","Url":"https://github.com/dotnet/coreclr/issues/27332","RelatedDescription":"Open issue \"Test failure : System.Numerics.Tests.ComplexTests.Pow\" (#27332)"},{"Id":"509702615","IsPullRequest":false,"CreatedAt":"2019-10-21T02:52:46","Actor":"VincentBu","Number":"27331","RawContent":null,"Title":"Test failed: JIT/opt/ObjectStackAllocation/ObjectStackAllocationTests/ObjectStackAllocationTests.sh","State":"open","Body":"**Job:**\r\n[coreclr-jitstress #20191019.1](https://dev.azure.com/dnceng/public/_build/results?buildId=394826)\r\n\r\n**Detail:**\r\nlinux x64:\r\nhttps://helix.dot.net/api/2019-06-17/jobs/bf1f0311-43d8-43c3-a6f9-51269ad69f80/workitems/JIT/console\r\nOSX x64:\r\nhttps://helix.dot.net/api/2019-06-17/jobs/8159f61d-9813-48f6-b447-f50cdd09a276/workitems/JIT/console\r\n\r\n**OS & Arch:**\r\nlinux x64\r\nosx x64\r\n\r\n**Mode:**\r\nlinux x64:\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_DbgEnableMiniDump=1\r\nCOMPlus_DbgMiniDumpName=$HELIX_DUMP_FOLDER/coredump.%d.dmp\r\nCOMPlus_JitStress=2\r\n\r\nosx x64:\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_DbgEnableMiniDump=1\r\nCOMPlus_DbgMiniDumpName=$HELIX_DUMP_FOLDER/coredump.%d.dmp\r\nCOMPlus_JitStress=1\r\n\r\n**Note:**\r\nThis failure **repros** on our osx x64 machine.\r\nThere is no 'Tests_Linux_x64_checked_jitstress' in artfacts.\r\n\r\n**Log:**\r\n```\r\nJIT/opt/ObjectStackAllocation/ObjectStackAllocationTests/ObjectStackAllocationTests.sh [FAIL]\r\n      \r\n      Return code:      1\r\n      Raw output file:      /home/helixbot/work/bf1f0311-43d8-43c3-a6f9-51269ad69f80/Work/7509fbd3-e1bb-4605-8f58-fc3ab6c77874/Exec/JIT/opt/Reports/JIT.opt/ObjectStackAllocation/ObjectStackAllocationTests/ObjectStackAllocationTests.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n      /home/helixbot/work/bf1f0311-43d8-43c3-a6f9-51269ad69f80/Payload/corerun ObjectStackAllocationTests.dll ''\r\n      SUCCESS (AllocateSimpleClassAndAddFields)\r\n      FAILURE (AllocateSimpleClassesAndEQCompareThem): unexpected allocation of 48 bytes\r\n      SUCCESS (AllocateSimpleClassesAndNECompareThem)\r\n      SUCCESS (AllocateSimpleClassAndGetField)\r\n      SUCCESS (AllocateClassWithNestedStructAndGetField)\r\n      SUCCESS (AllocateClassWithNestedStructAndAddFields)\r\n      SUCCESS (AllocateSimpleClassWithGCFieldAndAddFields)\r\n      SUCCESS (AllocateSimpleClassAndAssignRefToAField)\r\n      SUCCESS (TestMixOfReportingAndWriteBarriers)\r\n      SUCCESS (AllocateSimpleClassAndCheckTypeNoHelper)\r\n      SUCCESS (AllocateSimpleClassAndCheckTypeHelper)\r\n      SUCCESS (AllocateSimpleClassAndCast)\r\n      SUCCESS (BoxSimpleStructAndAddFields)\r\n      Expected: 100\r\n      Actual: 255\r\n      END EXECUTION - FAILED\r\n      Test Harness Exitcode is : 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27331","RelatedDescription":"Open issue \"Test failed: JIT/opt/ObjectStackAllocation/ObjectStackAllocationTests/ObjectStackAllocationTests.sh\" (#27331)"},{"Id":"509553710","IsPullRequest":true,"CreatedAt":"2019-10-21T02:44:57","Actor":"franksinankaya","Number":"27316","RawContent":null,"Title":"Replace gtPhysReg. with AsPhysReg()->","State":"closed","Body":"@sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/27316","RelatedDescription":"Closed or merged PR \"Replace gtPhysReg. with AsPhysReg()->\" (#27316)"},{"Id":"509553629","IsPullRequest":true,"CreatedAt":"2019-10-21T02:44:34","Actor":"franksinankaya","Number":"27315","RawContent":null,"Title":"Replace gtArrIndex. with AsArrIndex()->","State":"closed","Body":"@sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/27315","RelatedDescription":"Closed or merged PR \"Replace gtArrIndex. with AsArrIndex()->\" (#27315)"},{"Id":"509699801","IsPullRequest":true,"CreatedAt":"2019-10-21T02:40:22","Actor":"franksinankaya","Number":"27330","RawContent":null,"Title":"Forgotten gtIntCon replacement for AsIntCon()->","State":"open","Body":"@sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/27330","RelatedDescription":"Open PR \"Forgotten gtIntCon replacement for AsIntCon()->\" (#27330)"},{"Id":"509699461","IsPullRequest":true,"CreatedAt":"2019-10-21T02:39:00","Actor":"franksinankaya","Number":"27329","RawContent":null,"Title":"Replace gtILOffset, with AsILOffset()->","State":"open","Body":"@sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/27329","RelatedDescription":"Open PR \"Replace gtILOffset, with AsILOffset()->\" (#27329)"},{"Id":"509694419","IsPullRequest":false,"CreatedAt":"2019-10-21T02:17:14","Actor":"VincentBu","Number":"27328","RawContent":null,"Title":"Test failed: baseservices/threading/monitor/enter/monitorenter/monitorenter.sh","State":"open","Body":"**Job:**\r\n[coreclr-gcstress0x3-gcstress0xc #20191020.1 Run Test Pri1 Linux x64 checked](https://dev.azure.com/dnceng/public/_build/results?buildId=394950)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/6a648879-0b35-4e2d-b166-8f80500e43ce/workitems/baseservices.threading/console\r\n\r\n**OS & Arch:**\r\nlinux x64\r\n\r\n**Mode:**\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_DbgEnableMiniDump=1\r\nCOMPlus_DbgMiniDumpName=$HELIX_DUMP_FOLDER/coredump.%d.dmp\r\nCOMPlus_GCStress=0x3\r\n\r\n**Note:**\r\nThis failure **doesn't repro** on our linux x64 machine.\r\n\r\n**Log:**\r\n```\r\nbaseservices/threading/monitor/enter/monitorenter/monitorenter.sh [FAIL]\r\n      \r\n      Return code:      1\r\n      Raw output file:      /home/helixbot/work/6a648879-0b35-4e2d-b166-8f80500e43ce/Work/123a70b3-3805-4250-a9e5-bb695725a0bd/Exec/baseservices/threading/Reports/baseservices.threading/monitor/enter/monitorenter/monitorenter.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n      /home/helixbot/work/6a648879-0b35-4e2d-b166-8f80500e43ce/Payload/corerun monitorenter.dll ''\r\n      null object tests\r\n      tookLock == true tests\r\n      timeout < -1\r\n      timeout > int.Max\r\n      --- no contention ---\r\n      Positive tests, no SyncBlk\r\n      Positive tests, with HashCode\r\n      Positive tests, with SyncBlk\r\n      --- a little contention ---\r\n      Positive tests, no SyncBlk\r\n      Positive tests, with HashCode\r\n      Positive tests, with SyncBlk\r\n      --- lots of contention ---\r\n      Positive tests, no SyncBlk\r\n      Positive tests, with HashCode\r\n      Positive tests, with SyncBlk\r\n      *** High thread ID tests ***\r\n      Assertion failed\r\n      --- no contention ---\r\n      Positive tests, no SyncBlk\r\n      Positive tests, with HashCode\r\n      Positive tests, with SyncBlk\r\n      --- a little contention ---\r\n      Positive tests, no SyncBlk\r\n      Positive tests, with HashCode\r\n      Positive tests, with SyncBlk\r\n      --- lots of contention ---\r\n      Positive tests, no SyncBlk\r\n      Positive tests, with HashCode\r\n      Positive tests, with SyncBlk\r\n      Failed!\r\n      Expected: 100\r\n      Actual: 101\r\n      END EXECUTION - FAILED\r\n      Test Harness Exitcode is : 1\r\n```\r\n","Url":"https://github.com/dotnet/coreclr/issues/27328","RelatedDescription":"Open issue \"Test failed: baseservices/threading/monitor/enter/monitorenter/monitorenter.sh\" (#27328)"},{"Id":"509690888","IsPullRequest":false,"CreatedAt":"2019-10-21T01:58:57","Actor":"VincentBu","Number":"27327","RawContent":null,"Title":"Test failed: JIT\\Directed\\nullabletypes\\castclassvaluetype_r\\castclassvaluetype_r.cmd","State":"open","Body":"**Job:**\r\n[coreclr-gcstress-extra #20191019.1 Run Test Pri1 Windows_NT x64 checked](https://dev.azure.com/dnceng/public/_build/results?buildId=394681)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/f7827757-cd02-43c2-beb5-b5ce6a3f7138/workitems/JIT.Directed/console\r\n\r\n**OS & Arch:**\r\nwindows x64\r\nlinux x64\r\n\r\n**Mode:**\r\nwindows x64:\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_GCStress=0xC\r\nCOMPlus_JitStress=2\r\nCOMPlus_ReadyToRun=0\r\nCOMPlus_ZapDisable=1\r\n\r\nlinux x64:\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_DbgEnableMiniDump=1\r\nCOMPlus_DbgMiniDumpName=$HELIX_DUMP_FOLDER/coredump.%d.dmp\r\nCOMPlus_GCStress=0xC\r\nCOMPlus_JitStress=2\r\nCOMPlus_ReadyToRun=0\r\nCOMPlus_ZapDisable=1\r\n\r\n**Note:**\r\nThis failure **repros** on our windows x64 machine, but **doesn't repro** on our linux x64 machine. Here is the console output:\r\n```\r\nExternal disassembler is not available.\r\ncoreclr_initialize failed - status: 0x80004005\r\nExpected: 100\r\nActual: 255\r\nEND EXECUTION - FAILED\r\n```\r\n\r\n**Log:**\r\n```\r\nJIT/Directed/nullabletypes/castclassvaluetype_r/castclassvaluetype_r.sh [FAIL]\r\n      \r\n      Assert failure(PID 6654 [0x000019fe], Thread: 6654 [0x19fe]): SanityCheck()\r\n          File: /__w/15/s/src/vm/methodtable.cpp Line: 9893\r\n          Image: /home/helixbot/work/52262295-16d3-445e-a07a-d92358c4b32c/Payload/corerun\r\n      \r\n      /home/helixbot/work/52262295-16d3-445e-a07a-d92358c4b32c/Work/dc1d531c-ec65-44b0-95f9-adcbd86cf33f/Exec/JIT/Directed/nullabletypes/castclassvaluetype_r/castclassvaluetype_r.sh: line 252:  6654 Aborted                 $LAUNCHER $ExePath \"${CLRTestExecutionArguments[@]}\"\r\n      \r\n      Return code:      1\r\n      Raw output file:      /home/helixbot/work/52262295-16d3-445e-a07a-d92358c4b32c/Work/dc1d531c-ec65-44b0-95f9-adcbd86cf33f/Exec/JIT/Directed/Reports/JIT.Directed/nullabletypes/castclassvaluetype_r/castclassvaluetype_r.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n      /home/helixbot/work/52262295-16d3-445e-a07a-d92358c4b32c/Payload/corerun castclassvaluetype_r.dll ''\r\n      --- char? s = Helper.Create(default(char)) ---\r\n      --- char? s = null ---\r\n      --- char u = Helper.Create(default(char)) ---\r\n      --- bool? s = Helper.Create(default(bool)) ---\r\n      --- bool? s = null ---\r\n      --- bool u = Helper.Create(default(bool)) ---\r\n      --- byte? s = Helper.Create(default(byte)) ---\r\n      --- byte? s = null ---\r\n      --- byte u = Helper.Create(default(byte)) ---\r\n      --- sbyte? s = Helper.Create(default(sbyte)) ---\r\n      --- sbyte? s = null ---\r\n      --- sbyte u = Helper.Create(default(sbyte)) ---\r\n      --- short? s = Helper.Create(default(short)) ---\r\n      --- short? s = null ---\r\n      --- short u = Helper.Create(default(short)) ---\r\n      --- ushort? s = Helper.Create(default(ushort)) ---\r\n      --- ushort? s = null ---\r\n      --- ushort u = Helper.Create(default(ushort)) ---\r\n      --- int? s = Helper.Create(default(int)) ---\r\n      --- int? s = null ---\r\n      --- int u = Helper.Create(default(int)) ---\r\n      --- uint? s = Helper.Create(default(uint)) ---\r\n      --- uint? s = null ---\r\n      --- uint u = Helper.Create(default(uint)) ---\r\n      --- long? s = Helper.Create(default(long)) ---\r\n      --- long? s = null ---\r\n      --- long u = Helper.Create(default(long)) ---\r\n      --- ulong? s = Helper.Create(default(ulong)) ---\r\n      --- ulong? s = null ---\r\n      --- ulong u = Helper.Create(default(ulong)) ---\r\n      --- float? s = Helper.Create(default(float)) ---\r\n      --- float? s = null ---\r\n      --- float u = Helper.Create(default(float)) ---\r\n      --- double? s = Helper.Create(default(double)) ---\r\n      --- double? s = null ---\r\n      --- double u = Helper.Create(default(double)) ---\r\n      --- decimal? s = Helper.Create(default(decimal)) ---\r\n      --- decimal? s = null ---\r\n      --- decimal u = Helper.Create(default(decimal)) ---\r\n      --- IntPtr? s = Helper.Create(default(IntPtr)) ---\r\n      --- IntPtr? s = null ---\r\n      --- IntPtr u = Helper.Create(default(IntPtr)) ---\r\n      --- UIntPtr? s = Helper.Create(default(UIntPtr)) ---\r\n      --- UIntPtr? s = null ---\r\n      --- UIntPtr u = Helper.Create(default(UIntPtr)) ---\r\n      --- Guid? s = Helper.Create(default(Guid)) ---\r\n      --- Guid? s = null ---\r\n      --- Guid u = Helper.Create(default(Guid)) ---\r\n      --- GCHandle? s = Helper.Create(default(GCHandle)) ---\r\n      --- GCHandle? s = null ---\r\n      --- GCHandle u = Helper.Create(default(GCHandle)) ---\r\n      --- ByteE? s = Helper.Create(default(ByteE)) ---\r\n      --- ByteE? s = null ---\r\n      --- ByteE u = Helper.Create(default(ByteE)) ---\r\n      --- IntE? s = Helper.Create(default(IntE)) ---\r\n      --- IntE? s = null ---\r\n      --- IntE u = Helper.Create(default(IntE)) ---\r\n      --- LongE? s = Helper.Create(default(LongE)) ---\r\n      --- LongE? s = null ---\r\n      --- LongE u = Helper.Create(default(LongE)) ---\r\n      --- EmptyStruct? s = Helper.Create(default(EmptyStruct)) ---\r\n      --- EmptyStruct? s = null ---\r\n      --- EmptyStruct u = Helper.Create(default(EmptyStruct)) ---\r\n      --- NotEmptyStruct? s = Helper.Create(default(NotEmptyStruct)) ---\r\n      --- NotEmptyStruct? s = null ---\r\n      --- NotEmptyStruct u = Helper.Create(default(NotEmptyStruct)) ---\r\n      --- NotEmptyStructQ? s = Helper.Create(default(NotEmptyStructQ)) ---\r\n      --- NotEmptyStructQ? s = null ---\r\n      --- NotEmptyStructQ u = Helper.Create(default(NotEmptyStructQ)) ---\r\n      Writing minidump with heap to file /home/helixbot/dotnetbuild/dumps/coredump.6654.dmp\r\n      Written 60358656 bytes (14736 pages) to core file\r\n      Expected: 100\r\n      Actual: 134\r\n      END EXECUTION - FAILED\r\n      Test Harness Exitcode is : 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27327","RelatedDescription":"Open issue \"Test failed: JIT\\Directed\\nullabletypes\\castclassvaluetype_r\\castclassvaluetype_r.cmd\" (#27327)"},{"Id":"509554017","IsPullRequest":true,"CreatedAt":"2019-10-21T01:40:06","Actor":"franksinankaya","Number":"27320","RawContent":null,"Title":"Replace gtRuntimeLookup. with AsRuntimeLookup()->","State":"closed","Body":"@sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/27320","RelatedDescription":"Closed or merged PR \"Replace gtRuntimeLookup. with AsRuntimeLookup()->\" (#27320)"},{"Id":"509553066","IsPullRequest":true,"CreatedAt":"2019-10-21T01:39:55","Actor":"franksinankaya","Number":"27310","RawContent":null,"Title":"Replace gtDynBlk. with AsDynBlk()->","State":"closed","Body":"@sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/27310","RelatedDescription":"Closed or merged PR \"Replace gtDynBlk. with AsDynBlk()->\" (#27310)"},{"Id":"509553551","IsPullRequest":true,"CreatedAt":"2019-10-21T01:39:44","Actor":"franksinankaya","Number":"27314","RawContent":null,"Title":"Replace gtBlk. with AsBlk()->","State":"closed","Body":"@sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/27314","RelatedDescription":"Closed or merged PR \"Replace gtBlk. with AsBlk()->\" (#27314)"},{"Id":"509684352","IsPullRequest":false,"CreatedAt":"2019-10-21T01:22:49","Actor":"VincentBu","Number":"27326","RawContent":null,"Title":"JIT\\Directed\\coverage\\importer\\Desktop\\volatilstind_il_r\\volatilstind_il_r.cmd","State":"open","Body":"**Job:**\r\n[coreclr-gcstress-extra #20191019.1 Run Test Pri1 Windows_NT x86 checked](https://dev.azure.com/dnceng/public/_build/results?buildId=394681)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/12c2b282-2ae4-4d4c-b9bf-7fd5ce3589a5/workitems/JIT.Directed/console\r\n\r\n**OS & Arch:**\r\nwindows x86\r\n\r\n**Mode:**\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_GCStress=0xC\r\nCOMPlus_JitStress=2\r\nCOMPlus_ReadyToRun=0\r\nCOMPlus_ZapDisable=1\r\n\r\n**Note:**\r\nThis failure **repros** on our windows x64 machine.\r\n\r\n**Log:**\r\n```\r\nJIT\\Directed\\coverage\\importer\\Desktop\\volatilstind_il_r\\volatilstind_il_r.cmd [FAIL]\r\n      \r\n      Assert failure(PID 3472 [0x00000d90], Thread: 6740 [0x1a54]): curOffsRegs <= curOffsArgs\r\n      \r\n      CORECLR! scanArgRegTableI + 0x119 (0x71e875e9)\r\n      CORECLR! EECodeManager::EnumGcRefs + 0x340 (0x71e81240)\r\n      CORECLR! GcStackCrawlCallBack + 0x150 (0x7204d5a0)\r\n      CORECLR! Thread::MakeStackwalkerCallback + 0x3A (0x71caf541)\r\n      CORECLR! Thread::StackWalkFramesEx + 0x16E (0x71cb0b6a)\r\n      CORECLR! Thread::StackWalkFrames + 0x159 (0x71cb097c)\r\n      CORECLR! ScanStackRoots + 0x18C (0x7215bc24)\r\n      CORECLR! GCToEEInterface::GcScanRoots + 0x104 (0x7215afa3)\r\n      CORECLR! WKS::gc_heap::mark_phase + 0x1B1 (0x72112386)\r\n      CORECLR! WKS::gc_heap::gc1 + 0x18A (0x7210c9ba)\r\n          File: f:\\workspace.7\\_work\\1\\s\\src\\vm\\eetwain.cpp Line: 2445\r\n          Image: C:\\dotnetbuild\\work\\12c2b282-2ae4-4d4c-b9bf-7fd5ce3589a5\\Payload\\CoreRun.exe\r\n      \r\n      \r\n      Return code:      1\r\n      Raw output file:      C:\\dotnetbuild\\work\\12c2b282-2ae4-4d4c-b9bf-7fd5ce3589a5\\Work\\ffeac124-90e6-4d7c-b0ab-b0d533cd8dcc\\Exec\\JIT\\Directed\\Reports\\JIT.Directed\\coverage\\importer\\Desktop\\volatilstind_il_r\\volatilstind_il_r.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n       \"C:\\dotnetbuild\\work\\12c2b282-2ae4-4d4c-b9bf-7fd5ce3589a5\\Payload\\corerun.exe\" volatilstind_il_r.dll \r\n      Expected: 100\r\n      Actual: -1073740286\r\n      END EXECUTION - FAILED\r\n      FAILED\r\n      Test Harness Exitcode is : 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27326","RelatedDescription":"Open issue \"JIT\\Directed\\coverage\\importer\\Desktop\\volatilstind_il_r\\volatilstind_il_r.cmd\" (#27326)"},{"Id":"509553870","IsPullRequest":true,"CreatedAt":"2019-10-21T00:58:03","Actor":"franksinankaya","Number":"27318","RawContent":null,"Title":"Replace gtObj. with AsObj()->","State":"closed","Body":"@sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/27318","RelatedDescription":"Closed or merged PR \"Replace gtObj. with AsObj()->\" (#27318)"},{"Id":"509675597","IsPullRequest":true,"CreatedAt":"2019-10-21T00:26:25","Actor":"EgorBo","Number":"27325","RawContent":null,"Title":"JIT: Improve constant folding for bitwise OR","State":"open","Body":"This PR re-uses GT_ADD constant folding logic for GT_OR in morph.cpp.\r\nExample:\r\n```csharp\r\nint Test1(int x) => x | 5 | 3;\r\n\r\nint Test2(int x, int y) => (x | 5) | (y | 3);\r\n```\r\nWas:\r\n```asm\r\n; Test1(int,int):int:this\r\n       mov      eax, edx\r\n       or       eax, 5\r\n       or       eax, 3\r\n       ret      \r\n; Total bytes of code: 9\r\n\r\n\r\n; Test2(int,int):int:this\r\n       or       edx, 5\r\n       mov      eax, edx\r\n       or       eax, r8d\r\n       or       eax, 3\r\n       ret      \r\n; Total bytes of code: 12\r\n```\r\nNow:\r\n```asm\r\n; Test1(int,int):int:this\r\n       mov      eax, edx\r\n       or       eax, 7\r\n       ret      \r\n; Total bytes of code: 6\r\n\r\n\r\n; Test2(int,int):int:this\r\n       mov      eax, edx\r\n       or       eax, r8d\r\n       or       eax, 7\r\n       ret      \r\n; Total bytes of code: 9\r\n```\r\n\r\nJit-diff:\r\n```\r\nFound 8 files with textual diffs.\r\n\r\nSummary:\r\n(Lower is better)\r\n\r\nTotal bytes of diff: -148 (-0.00% of base)\r\n    diff is an improvement.\r\n\r\nTop file improvements by size (bytes):\r\n         -59 : Microsoft.CodeAnalysis.VisualBasic.dasm (-0.00% of base)\r\n         -54 : Microsoft.CodeAnalysis.CSharp.dasm (-0.00% of base)\r\n         -16 : System.Memory.dasm (-0.00% of base)\r\n          -7 : System.Private.Uri.dasm (-0.01% of base)\r\n          -5 : System.Private.Xml.dasm (-0.00% of base)\r\n          -4 : System.Net.Security.dasm (-0.00% of base)\r\n          -3 : System.Data.Common.dasm (-0.00% of base)\r\n\r\n7 total files with size differences (7 improved, 0 regressed), 122 unchanged.\r\n\r\nTop method improvements by size (bytes):\r\n         -28 (-6.81% of base) : Microsoft.CodeAnalysis.VisualBasic.dasm - Microsoft.CodeAnalysis.VisualBasic.Symbols.SourceEventSymbol:BindEventAccessor(ref,ref):ref:this\r\n         -14 (-0.89% of base) : Microsoft.CodeAnalysis.CSharp.dasm - Microsoft.CodeAnalysis.CSharp.MemberSemanticModel:GetEnclosingBinder(ref,int):ref:this\r\n          -8 (-0.82% of base) : Microsoft.CodeAnalysis.VisualBasic.dasm - ConversionEasyOut:ClassifyPredefinedConversion(ref,ref):struct\r\n          -7 (-1.42% of base) : Microsoft.CodeAnalysis.CSharp.dasm - Microsoft.CodeAnalysis.CSharp.Binder:BindTypeOf(ref,ref):ref:this\r\n          -7 (-0.30% of base) : Microsoft.CodeAnalysis.VisualBasic.dasm - Microsoft.CodeAnalysis.VisualBasic.Symbols.SourceMethodSymbol:CreateDeclareMethod(ref,ref,ref,ref):ref\r\n          -7 (-9.86% of base) : System.Private.Uri.dasm - BuiltInUriParser:.ctor(ref,int,int):this\r\n          -6 (-0.16% of base) : Microsoft.CodeAnalysis.CSharp.dasm - Microsoft.CodeAnalysis.CSharp.OverloadResolution:GetEnumOperation(int,ref,ref,ref,ref):this\r\n          -6 (-7.89% of base) : Microsoft.CodeAnalysis.CSharp.dasm - Microsoft.CodeAnalysis.CSharp.TypeofBinder:.ctor(ref,ref):this\r\n          -6 (-2.03% of base) : Microsoft.CodeAnalysis.CSharp.dasm - Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel:GetSpeculativeBinder(int,ref,int):ref:this\r\n          -6 (-0.23% of base) : Microsoft.CodeAnalysis.VisualBasic.dasm - Microsoft.CodeAnalysis.VisualBasic.Symbols.SourcePropertySymbol:Create(ref,ref,ref,ref,ref):ref\r\n          -6 (-1.23% of base) : System.Memory.dasm - System.Buffers.Text.Base64:EncodeToUtf8InPlace(struct,int,byref):int\r\n          -5 (-0.40% of base) : System.Memory.dasm - System.Buffers.Text.Base64:EncodeToUtf8(struct,struct,byref,byref,bool):int\r\n          -5 (-12.20% of base) : System.Memory.dasm - System.Buffers.Text.Base64:EncodeAndPadTwo(long,byref):int\r\n          -5 (-0.32% of base) : System.Private.Xml.dasm - System.Xml.Serialization.XmlSerializationILGen:GenerateSerializerContract(ref,ref,ref,ref,ref,ref,ref,ref):this\r\n          -4 (-0.43% of base) : Microsoft.CodeAnalysis.VisualBasic.dasm - MemberLookup:LookupInModules(ref,ref,ref,int,int,ref,byref)\r\n\r\nTop method improvements by size (percentage):\r\n          -5 (-12.20% of base) : System.Memory.dasm - System.Buffers.Text.Base64:EncodeAndPadTwo(long,byref):int\r\n          -7 (-9.86% of base) : System.Private.Uri.dasm - BuiltInUriParser:.ctor(ref,int,int):this\r\n          -6 (-7.89% of base) : Microsoft.CodeAnalysis.CSharp.dasm - Microsoft.CodeAnalysis.CSharp.TypeofBinder:.ctor(ref,ref):this\r\n          -3 (-7.69% of base) : Microsoft.CodeAnalysis.CSharp.dasm - Microsoft.CodeAnalysis.CSharp.WithTypeParametersBinder:CanConsiderTypeParameters(int):bool:this\r\n          -3 (-7.69% of base) : Microsoft.CodeAnalysis.CSharp.dasm - Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol:AddImpliedModifiers(int,bool,int):int\r\n         -28 (-6.81% of base) : Microsoft.CodeAnalysis.VisualBasic.dasm - Microsoft.CodeAnalysis.VisualBasic.Symbols.SourceEventSymbol:BindEventAccessor(ref,ref):ref:this\r\n          -4 (-2.40% of base) : System.Net.Security.dasm - System.Net.Security.SecureChannel:GetAlertMessageFromChain(ref):int\r\n          -6 (-2.03% of base) : Microsoft.CodeAnalysis.CSharp.dasm - Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel:GetSpeculativeBinder(int,ref,int):ref:this\r\n          -3 (-2.01% of base) : Microsoft.CodeAnalysis.VisualBasic.dasm - Microsoft.CodeAnalysis.VisualBasic.Symbols.SourceMethodSymbol:GetPInvokeAttributes(ref):ushort\r\n          -3 (-1.48% of base) : Microsoft.CodeAnalysis.CSharp.dasm - Microsoft.CodeAnalysis.CSharp.Symbols.SourceEventSymbol:MakeModifiers(struct,bool,ref,ref,byref):int:this\r\n          -3 (-1.42% of base) : Microsoft.CodeAnalysis.CSharp.dasm - Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertySymbol:MakeModifiers(struct,bool,bool,ref,ref,byref):int:this\r\n          -7 (-1.42% of base) : Microsoft.CodeAnalysis.CSharp.dasm - Microsoft.CodeAnalysis.CSharp.Binder:BindTypeOf(ref,ref):ref:this\r\n          -3 (-1.33% of base) : Microsoft.CodeAnalysis.VisualBasic.dasm - Microsoft.CodeAnalysis.VisualBasic.Symbols.Metadata.PE.PEMethodSymbol:IsParameterlessConstructor():bool:this\r\n          -6 (-1.23% of base) : System.Memory.dasm - System.Buffers.Text.Base64:EncodeToUtf8InPlace(struct,int,byref):int\r\n         -14 (-0.89% of base) : Microsoft.CodeAnalysis.CSharp.dasm - Microsoft.CodeAnalysis.CSharp.MemberSemanticModel:GetEnclosingBinder(ref,int):ref:this\r\n\r\n24 total methods with size differences (24 improved, 0 regressed), 250171 unchanged.\r\n```","Url":"https://github.com/dotnet/coreclr/pull/27325","RelatedDescription":"Open PR \"JIT: Improve constant folding for bitwise OR\" (#27325)"},{"Id":"509553237","IsPullRequest":true,"CreatedAt":"2019-10-21T00:05:33","Actor":"franksinankaya","Number":"27312","RawContent":null,"Title":"Replace gtVal. with AsVal()->","State":"closed","Body":"@sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/27312","RelatedDescription":"Closed or merged PR \"Replace gtVal. with AsVal()->\" (#27312)"},{"Id":"509553145","IsPullRequest":true,"CreatedAt":"2019-10-21T00:04:30","Actor":"franksinankaya","Number":"27311","RawContent":null,"Title":"Replace gtStrCon. with AsStrCon()->","State":"closed","Body":"@sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/27311","RelatedDescription":"Closed or merged PR \"Replace gtStrCon. with AsStrCon()->\" (#27311)"},{"Id":"509552803","IsPullRequest":true,"CreatedAt":"2019-10-21T00:01:29","Actor":"franksinankaya","Number":"27309","RawContent":null,"Title":"Replace gtBoundsChk. with AsBoundsChk()->","State":"closed","Body":"@sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/27309","RelatedDescription":"Closed or merged PR \"Replace gtBoundsChk. with AsBoundsChk()->\" (#27309)"},{"Id":"509553953","IsPullRequest":true,"CreatedAt":"2019-10-20T23:57:58","Actor":"franksinankaya","Number":"27319","RawContent":null,"Title":"Replace gtHWIntrinsic. with AsHWIntrinsic()->","State":"closed","Body":"@sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/27319","RelatedDescription":"Closed or merged PR \"Replace gtHWIntrinsic. with AsHWIntrinsic()->\" (#27319)"},{"Id":"509555372","IsPullRequest":true,"CreatedAt":"2019-10-20T18:21:02","Actor":"am11","Number":"27322","RawContent":null,"Title":"Avoid unintended cached var in CMake's find_program","State":"closed","Body":"* Use unique name of variable passed to `find program`:\r\n  `EXEC_LOCATION` is a cached variable as per `find_program` documentation; what is not too obvious in documentation is  that even if it is wrapped in a function, the next function call will blindly skip the introspection (ignoring the fact that we have different values in the `NAMES` list). Consequently, all tools were (incorrectly) getting the value `/usr/bin/llvm-ar` in case of clang or `/usr/bin/ar` in gcc's case.\r\n  * To debug, I used:\r\n    ```sh\r\n    message(FATAL_ERROR \"\\n>>>  AR: ${CMAKE_AR}\\nLINK: ${CMAKE_LINKER}\\nOBJDUMP: ${CMAKE_OBJDUMP}\\nRANLIB: ${CMAKE_RANLIB}   <<<\")`\r\n    ```\r\n    at the end of both clang and gcc case.\r\n* Fix environment variable override knob for gcc: `exec` -> `${exec}`.\r\n* Fix help message in find-gcc.sh.\r\n\r\nFollowup on https://github.com/dotnet/coreclr/pull/27077.\r\n\r\nThe other option is to `unset(EXEC_LOCATION CACHE)` at the start of function, which seems less intuitive.\r\n\r\n/cc @jkoritzinsky","Url":"https://github.com/dotnet/coreclr/pull/27322","RelatedDescription":"Closed or merged PR \"Avoid unintended cached var in CMake's find_program\" (#27322)"},{"Id":"509607652","IsPullRequest":true,"CreatedAt":"2019-10-20T15:09:39","Actor":"ANahr","Number":"27324","RawContent":null,"Title":"Merge pull request #1 from dotnet/master","State":"closed","Body":"Update from base","Url":"https://github.com/dotnet/coreclr/pull/27324","RelatedDescription":"Closed or merged PR \"Merge pull request #1 from dotnet/master\" (#27324)"},{"Id":"509552541","IsPullRequest":true,"CreatedAt":"2019-10-20T13:24:14","Actor":"chipitsine","Number":"27308","RawContent":null,"Title":"src/pal/src/cruntime/wchar.cpp: remove redundant condition","State":"closed","Body":"found by cppcheck\r\n\r\n\"while (*string)\" already checks \"string\" against NULL\r\n\r\n[src/pal/src/cruntime/wchar.cpp:641] -> [src/pal/src/cruntime/wchar.cpp:639]: (warning) Either the condition 'string?string:W16_NULLSTRING' is redundant or there is possible null pointer dereference: string.\r\n[src/pal/src/cruntime/wchar.cpp:712] -> [src/pal/src/cruntime/wchar.cpp:710]: (warning) Either the condition 'string?string:W16_NULLSTRING' is redundant or there is possible null pointer dereference: string.","Url":"https://github.com/dotnet/coreclr/pull/27308","RelatedDescription":"Closed or merged PR \"src/pal/src/cruntime/wchar.cpp: remove redundant condition\" (#27308)"},{"Id":"509554091","IsPullRequest":true,"CreatedAt":"2019-10-20T06:41:29","Actor":"franksinankaya","Number":"27321","RawContent":null,"Title":"Replace gtPhiArg. with AsPhiArg()->","State":"closed","Body":"@sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/27321","RelatedDescription":"Closed or merged PR \"Replace gtPhiArg. with AsPhiArg()->\" (#27321)"},{"Id":"509553775","IsPullRequest":true,"CreatedAt":"2019-10-20T06:36:50","Actor":"franksinankaya","Number":"27317","RawContent":null,"Title":"Replace gtFptrVal. with AsFptrVal()->","State":"open","Body":"@sandreenko ","Url":"https://github.com/dotnet/coreclr/pull/27317","RelatedDescription":"Open PR \"Replace gtFptrVal. with AsFptrVal()->\" (#27317)"},{"Id":"509503345","IsPullRequest":true,"CreatedAt":"2019-10-20T02:10:15","Actor":"janvorli","Number":"27306","RawContent":null,"Title":"Mark GetTypeFromHandle as intrinsic","State":"closed","Body":"This change marks GetTypeFromHandle as intrinsic and add related\r\nmissing case CorInfoHelpFunc.CORINFO_HELP_TYPEHANDLE_TO_RUNTIMETYPE_MAYBENULL\r\nto GetHelperFtnUncached.\r\n\r\nThis enables crossgen2 to eliminate call to GetTypeFromHandle the same way as the old crossgen\r\ndoes.","Url":"https://github.com/dotnet/coreclr/pull/27306","RelatedDescription":"Closed or merged PR \"Mark GetTypeFromHandle as intrinsic\" (#27306)"},{"Id":"509532429","IsPullRequest":true,"CreatedAt":"2019-10-20T01:48:45","Actor":"jkotas","Number":"27307","RawContent":null,"Title":"Cleanup memory copy helpers","State":"open","Body":"- Merge RuntimeImports that has just a few FCalls into Buffer.\r\n- Delete assembly implementation of memcpy for ARM. The implementation was outdated and it was used only on Windows ARM and only for fraction of memcpy callsites.\r\n- Delete unnecessary PInvoke into SysStringLen. We have a managed equivalent on System.Runtime.InteropServices.Marshal.\r\n- Delete large amount of redundant code between SecureString.Windows.cs and SecureString.Unix.cs, and switch SecureString to use Spans\r\n- Fold null check into IsWin32Atom","Url":"https://github.com/dotnet/coreclr/pull/27307","RelatedDescription":"Open PR \"Cleanup memory copy helpers\" (#27307)"},{"Id":"509475321","IsPullRequest":true,"CreatedAt":"2019-10-19T16:20:41","Actor":"YohDeadfall","Number":"27304","RawContent":null,"Title":"Removed unused strings from resources","State":"open","Body":"Searched in all code files in `src` directory, but haven't found any for removed resources.","Url":"https://github.com/dotnet/coreclr/pull/27304","RelatedDescription":"Open PR \"Removed unused strings from resources\" (#27304)"},{"Id":"509479407","IsPullRequest":false,"CreatedAt":"2019-10-18T21:16:49","Actor":"ahsonkhan","Number":"27305","RawContent":null,"Title":"System.Text.RegularExpressions.Tests.RegexCacheTests.Ctor_Cache_Promote_entries fails with Timeout","State":"open","Body":"From https://github.com/dotnet/corefx/pull/41753\r\n\r\nSystem.Text.RegularExpressions.Tests.RegexCacheTests.Ctor_Cache_Promote_entries\r\nnetcoreapp-Windows_NT-Debug-x64-(Windows.Nano.1809.Amd64.Open)\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=393033&view=ms.vss-test-web.build-test-results-tab&runId=12213282&resultId=145033&paneView=debug\r\n\r\nhttps://helix.dot.net/api/2019-06-17/jobs/421e5238-fb5c-4d4f-8d24-a8e79abd46eb/workitems/System.Text.RegularExpressions.Tests/console\r\n```text\r\n===========================================================================================================\r\n\r\nC:\\helix\\work\\workitem>\"C:\\helix\\work\\correlation\\dotnet.exe\" exec --runtimeconfig System.Text.RegularExpressions.Tests.runtimeconfig.json xunit.console.dll System.Text.RegularExpressions.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=nonnetcoreapptests -notrait category=nonwindowstests -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing  \r\n  Discovering: System.Text.RegularExpressions.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Text.RegularExpressions.Tests (found 135 test cases)\r\n  Starting:    System.Text.RegularExpressions.Tests (parallel test collections = on, max threads = 2)\r\n    System.Text.RegularExpressions.Tests.RegexCacheTests.Ctor_Cache_Promote_entries [FAIL]\r\n      Timed out at 10/18/2019 11:24:33 AM after 60000ms waiting for remote process.\r\n      Wrote mini dump to: C:\\helix\\work\\workitem\\uploads\\4708.wrrjax4w.c3b.dmp\r\n      \tProcess ID: 4708\r\n      \tHandle: 912\r\n      \r\n      Stack Trace:\r\n        /_/src/Microsoft.DotNet.RemoteExecutor/src/RemoteInvokeHandle.cs(152,0): at Microsoft.DotNet.RemoteExecutor.RemoteInvokeHandle.Dispose(Boolean disposing)\r\n        /_/src/Microsoft.DotNet.RemoteExecutor/src/RemoteInvokeHandle.cs(55,0): at Microsoft.DotNet.RemoteExecutor.RemoteInvokeHandle.Dispose()\r\n        /_/src/System.Text.RegularExpressions/tests/Regex.Cache.Tests.cs(71,0): at System.Text.RegularExpressions.Tests.RegexCacheTests.Ctor_Cache_Promote_entries()\r\n  Finished:    System.Text.RegularExpressions.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Text.RegularExpressions.Tests  Total: 1454, Errors: 0, Failed: 1, Skipped: 0, Time: 118.055s\r\n----- end Fri 10/18/2019 11:25:06.32 ----- exit code 1 ----------------------------------------------------------\r\n```\r\n\r\nSystem.Text.RegularExpressions.Tests.RegexCacheTests.Ctor_Cache_Uses_dictionary_linked_list_switch_does_not_throw\r\nnetcoreapp-Linux-Debug-x64-RedHat.7.Amd64.Open\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=393033&view=ms.vss-test-web.build-test-results-tab&runId=12213340&paneView=debug\r\n\r\nhttps://helix.dot.net/api/2019-06-17/jobs/82ca2546-9df2-4b32-ab1f-d00835fcbe01/workitems/System.Text.RegularExpressions.Tests/console\r\n\r\n```text\r\n===========================================================================================================\r\n~/work/82ca2546-9df2-4b32-ab1f-d00835fcbe01/Work/93c6bbb0-68cc-493d-8eb4-85722fafeac6/Exec ~/work/82ca2546-9df2-4b32-ab1f-d00835fcbe01/Work/93c6bbb0-68cc-493d-8eb4-85722fafeac6/Exec\r\n  Discovering: System.Text.RegularExpressions.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Text.RegularExpressions.Tests (found 135 test cases)\r\n  Starting:    System.Text.RegularExpressions.Tests (parallel test collections = on, max threads = 2)\r\n    System.Text.RegularExpressions.Tests.RegexCacheTests.Ctor_Cache_Uses_dictionary_linked_list_switch_does_not_throw [FAIL]\r\n      Timed out at 10/18/2019 11:07:51 AM after 60000ms waiting for remote process.\r\n      \tProcess ID: 2283\r\n      \tHandle: 892\r\n      \r\n      Stack Trace:\r\n        /_/src/Microsoft.DotNet.RemoteExecutor/src/RemoteInvokeHandle.cs(152,0): at Microsoft.DotNet.RemoteExecutor.RemoteInvokeHandle.Dispose(Boolean disposing)\r\n        /_/src/Microsoft.DotNet.RemoteExecutor/src/RemoteInvokeHandle.cs(55,0): at Microsoft.DotNet.RemoteExecutor.RemoteInvokeHandle.Dispose()\r\n        /_/src/System.Text.RegularExpressions/tests/Regex.Cache.Tests.cs(106,0): at System.Text.RegularExpressions.Tests.RegexCacheTests.Ctor_Cache_Uses_dictionary_linked_list_switch_does_not_throw()\r\n  Finished:    System.Text.RegularExpressions.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Text.RegularExpressions.Tests  Total: 1454, Errors: 0, Failed: 1, Skipped: 0, Time: 77.472s\r\n~/work/82ca2546-9df2-4b32-ab1f-d00835fcbe01/Work/93c6bbb0-68cc-493d-8eb4-85722fafeac6/Exec\r\n----- end Fri Oct 18 11:07:57 UTC 2019 ----- exit code 1 ----------------------------------------------------------\r\n```\r\n\r\ncc @ViktorHofer ","Url":"https://github.com/dotnet/coreclr/issues/27305","RelatedDescription":"Open issue \"System.Text.RegularExpressions.Tests.RegexCacheTests.Ctor_Cache_Promote_entries fails with Timeout\" (#27305)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"509669957","IsPullRequest":true,"CreatedAt":"2019-10-21T00:10:23","Actor":"dotnet-maestro[bot]","Number":"12949","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191020.3\r\n- **Date Produced**: 10/20/2019 10:30 PM\r\n- **Commit**: 32228f2ae5e68394197859608c8c6afb94276481\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 5.0.0-alpha1.19520.3\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19520.3\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19520.3\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19520.3\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19520.3\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 5.0.0-alpha1.19520.3\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12949","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12949)"},{"Id":"509628488","IsPullRequest":true,"CreatedAt":"2019-10-20T17:58:34","Actor":"dsplaisted","Number":"12948","RawContent":null,"Title":"Delete code and update readme for repo merge","State":"open","Body":"The CLI repo [has been merged](https://github.com/dotnet/toolset/pull/2940) into the toolset repo.  So this PR removes the code from the master branch of the CLI repo, and updates the README and issue template to point to the dotnet/sdk repo.","Url":"https://github.com/dotnet/cli/pull/12948","RelatedDescription":"Open PR \"Delete code and update readme for repo merge\" (#12948)"},{"Id":"509498603","IsPullRequest":false,"CreatedAt":"2019-10-20T16:56:42","Actor":"devel0","Number":"12943","RawContent":null,"Title":"dotnet restore parallel adaptive","State":"closed","Body":"## Description\r\n\r\nrestoring in tethering mode using phone line may cause failure due to timeout issue; a workaround is to use `--disable-parallel` but I think that a better approach should to use a sort of *adaptive parallel mode* so that restore will start in parallel and auto disable until all packages in queue where timeout occurred downloaded then switch back in parallel mode.\r\n\r\n## Steps to reproduce\r\n\r\n```sh\r\ngit clone https://github.com/devel0/repros.git\r\ngit checkout 9a5a81d0fe20d5e68cf0161ac9c64e93eae8e81a\r\ncd repros/netcore/dotnet-restore-01\r\ndocker build .\r\n```\r\n\r\nresults can be viewed with follow\r\n\r\n```sh\r\nless results.log.gz\r\n```\r\n\r\nnote: may need to set a bandwidth limiter to your network\r\n\r\n## Expected  behavior\r\n\r\nrestore without error\r\n\r\n## Actual behavior\r\n\r\nrestore fails due timeout in docker\r\n\r\n```\r\n         Failed to download package 'System.Text.Encodings.Web.4.4.0' from 'https://api.nuget.org/v3-flatcontainer/system.text.encodings.web/4.4.0/system.text.encodings.web.4.4.0.nupkg'.\r\n         The download of 'https://api.nuget.org/v3-flatcontainer/system.text.encodings.web/4.4.0/system.text.encodings.web.4.4.0.nupkg' timed out because no data was received for 60000ms.\r\n           Exception of type 'System.TimeoutException' was thrown.\r\n```\r\n\r\n## Environment data\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     debian\r\n OS Version:  10\r\n OS Platform: Linux\r\n RID:         debian.10-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12943","RelatedDescription":"Closed issue \"dotnet restore parallel adaptive\" (#12943)"},{"Id":"509561137","IsPullRequest":true,"CreatedAt":"2019-10-20T16:43:28","Actor":"dotnet-maestro[bot]","Number":"12947","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191020.1\r\n- **Date Produced**: 10/20/2019 3:01 PM\r\n- **Commit**: 07c1aa65a954ed0bb7a3804485422c577eac7167\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 5.0.0-alpha1.19520.1\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19520.1\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19520.1\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19520.1\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19520.1\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 5.0.0-alpha1.19520.1\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12947","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12947)"},{"Id":"509543324","IsPullRequest":true,"CreatedAt":"2019-10-20T04:45:24","Actor":"dotnet-maestro[bot]","Number":"12946","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191019.2\r\n- **Date Produced**: 10/20/2019 3:24 AM\r\n- **Commit**: 0de57914279da79eb7166588f67609c851e46179\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview2.19519.2\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12946","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12946)"},{"Id":"509541311","IsPullRequest":true,"CreatedAt":"2019-10-20T04:20:23","Actor":"dotnet-maestro[bot]","Number":"12945","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191019.7\r\n- **Date Produced**: 10/20/2019 2:40 AM\r\n- **Commit**: 821e656fa75e04a2161c828446321f4a1ea99be7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 5.0.0-alpha1.19519.7\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19519.7\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19519.7\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19519.7\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19519.7\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 5.0.0-alpha1.19519.7\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12945","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12945)"},{"Id":"509519893","IsPullRequest":true,"CreatedAt":"2019-10-19T23:40:27","Actor":"dotnet-maestro[bot]","Number":"12944","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191019.5\r\n- **Date Produced**: 10/19/2019 9:52 PM\r\n- **Commit**: 2b26a74b8fc8025f3b4a372483cb7d4477de0de2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 5.0.0-alpha1.19519.5\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19519.5\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19519.5\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19519.5\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19519.5\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 5.0.0-alpha1.19519.5\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12944","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12944)"},{"Id":"509495967","IsPullRequest":true,"CreatedAt":"2019-10-19T22:55:50","Actor":"cinta631","Number":"12942","RawContent":null,"Title":"Update dependencies from https://github.com/aspnet/AspNetCore build 2…","State":"closed","Body":"…0191019.1\r\n\r\n- Microsoft.AspNetCore.DeveloperCertificates.XPlat - 5.0.0-alpha1.19519.1\r\n\r\n- If this PR should not run tests add text \"skip[REMOVE_THIS]ci[REMOVE_THIS]please\" (remove the marked text, no quotes).\r\n- Add description for changes you are making.\r\n- If there is an issue related to this PR, add the reference.\r\n","Url":"https://github.com/dotnet/cli/pull/12942","RelatedDescription":"Closed or merged PR \"Update dependencies from https://github.com/aspnet/AspNetCore build 2…\" (#12942)"},{"Id":"509480865","IsPullRequest":true,"CreatedAt":"2019-10-19T21:11:49","Actor":"dotnet-maestro[bot]","Number":"12940","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191019.4\r\n- **Date Produced**: 10/19/2019 7:35 PM\r\n- **Commit**: d51ccfc121e31cc9bbf0c3ef538915a75b25458a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 5.0.0-alpha1.19519.4\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19519.4\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19519.4\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19519.4\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19519.4\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 5.0.0-alpha1.19519.4\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12940","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12940)"},{"Id":"509486689","IsPullRequest":false,"CreatedAt":"2019-10-19T17:51:05","Actor":"leo-labs","Number":"12941","RawContent":null,"Title":"dotnet sln remove has exit code 0 despite project not found","State":"open","Body":"## Steps to reproduce\r\n\r\nRemove a non existent project from a solution, e.g. `dotnet sln <SLN_FILE> remove foo`\r\n\r\n## Expected  behavior\r\n\r\nreturn a nonzero exit code, similar as `dotnet sln <SLN_FILE> add foo`\r\n\r\n## Actual behavior\r\n\r\nthe command returns an exit code of `0`\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  2.2.105 [/usr/local/share/dotnet/sdk]\r\n  2.2.402 [/usr/local/share/dotnet/sdk]\r\n  3.0.100 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/12941","RelatedDescription":"Open issue \"dotnet sln remove has exit code 0 despite project not found\" (#12941)"},{"Id":"509478914","IsPullRequest":true,"CreatedAt":"2019-10-19T16:50:10","Actor":"dotnet-maestro[bot]","Number":"12939","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191019.1\r\n- **Date Produced**: 10/19/2019 4:04 PM\r\n- **Commit**: 0c5e370b7c2352bed7ac862b1ef5c6186362a512\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 5.0.0-alpha1.19519.1\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12939","RelatedDescription":"Open PR \"[master] Update dependencies from aspnet/AspNetCore\" (#12939)"},{"Id":"509465322","IsPullRequest":true,"CreatedAt":"2019-10-19T15:35:24","Actor":"dotnet-maestro[bot]","Number":"12938","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191019.2\r\n- **Date Produced**: 10/19/2019 1:59 PM\r\n- **Commit**: 9269887c1b11fd472ef769ca29f59a17569846c4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 5.0.0-alpha1.19519.2\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19519.2\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19519.2\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19519.2\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19519.2\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 5.0.0-alpha1.19519.2\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12938","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12938)"},{"Id":"509443921","IsPullRequest":true,"CreatedAt":"2019-10-19T13:05:27","Actor":"dotnet-maestro[bot]","Number":"12937","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191019.1\r\n- **Date Produced**: 10/19/2019 11:21 AM\r\n- **Commit**: 51f6dbc700810bfd769758c4d196a337465d79a6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 5.0.0-alpha1.19519.1\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19519.1\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19519.1\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19519.1\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19519.1\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 5.0.0-alpha1.19519.1\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12937","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12937)"},{"Id":"509440746","IsPullRequest":true,"CreatedAt":"2019-10-19T12:33:11","Actor":"dotnet-maestro[bot]","Number":"12935","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191001.2\r\n- **Date Produced**: 10/1/2019 1:57 PM\r\n- **Commit**: 419501cb5731805c7e49bae276a2938e7c1844de\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 5.0.100-alpha1.19501.2\r\n\r\n[marker]: <> (End:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12935","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#12935)"},{"Id":"509440728","IsPullRequest":true,"CreatedAt":"2019-10-19T12:33:01","Actor":"dotnet-maestro[bot]","Number":"12934","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191018.2\r\n- **Date Produced**: 10/18/2019 9:12 PM\r\n- **Commit**: f59f1ebe9b293ad523d3bfa4e5cffc663708ef11\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19518.2\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12934","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#12934)"},{"Id":"509441352","IsPullRequest":true,"CreatedAt":"2019-10-19T12:08:03","Actor":"dotnet-maestro[bot]","Number":"12936","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20191016.1\r\n- **Date Produced**: 10/16/2019 12:56 PM\r\n- **Commit**: 6f180514b4aefc006d50c07c947da61e0ac2ed4c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 5.0.0-alpha1.19516.1\r\n\r\n[marker]: <> (End:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12936","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/templating\" (#12936)"},{"Id":"509414716","IsPullRequest":true,"CreatedAt":"2019-10-19T08:45:24","Actor":"dotnet-maestro[bot]","Number":"12932","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191018.8\r\n- **Date Produced**: 10/19/2019 7:28 AM\r\n- **Commit**: a1fea2015777954c282a226339824874fe42c569\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview2.19518.8\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12932","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12932)"},{"Id":"509417292","IsPullRequest":false,"CreatedAt":"2019-10-19T08:35:31","Actor":"thomaslevesque","Number":"12933","RawContent":null,"Title":"How to make a package with an empty TFM with dotnet pack?","State":"open","Body":"I'm trying to build a package with multiple target frameworks, with has an empty TFM folder for netstandard2.1 (because the functionality provided by the package is not necessary in netstandard2.1, so I don't want restore to pick netstandard2.0).\r\n\r\nI know I could do it easily with a nuspec file, but I'd really prefer to be able to use just a csproj and dotnet pack.\r\n\r\nMy first attempt was to set `IncludeBuildOutput` to false when `TargetFramework` is netstandard2.1, but apparently that property is evaluated globally, rather than per-TFM.\r\n\r\nIn the end, the only way I found to make it work is this, which is a bit ugly:\r\n\r\n```xml\r\n  <Target Name=\"RemoveNetStd21Files\" AfterTargets=\"_WalkEachTargetPerFramework\">\r\n    <ItemGroup>\r\n      <_BuildOutputInPackage Remove=\"$(MSBuildThisFileDirectory)$(IntermediateOutputPath)netstandard2.1/$(AssemblyName).*\" Pack=\"false\" />\r\n    </ItemGroup>\r\n  </Target>\r\n```\r\nIt's ugly because it's verbose, and more importantly, it depends on \"private\" MSBuild targets and properties, which could change anytime.\r\n\r\nIs there a clean way to exclude the output of a given TFM in the output package?\r\n","Url":"https://github.com/dotnet/cli/issues/12933","RelatedDescription":"Open issue \"How to make a package with an empty TFM with dotnet pack?\" (#12933)"},{"Id":"509403494","IsPullRequest":true,"CreatedAt":"2019-10-19T07:00:26","Actor":"dotnet-maestro[bot]","Number":"12931","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191018.11\r\n- **Date Produced**: 10/19/2019 5:16 AM\r\n- **Commit**: 4de60f765b2d98b67f59390f40d7ee4c72a2daca\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 5.0.0-alpha1.19518.11\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19518.11\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19518.11\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19518.11\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19518.11\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 5.0.0-alpha1.19518.11\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12931","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12931)"},{"Id":"509399848","IsPullRequest":true,"CreatedAt":"2019-10-19T06:20:27","Actor":"dotnet-maestro[bot]","Number":"12930","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191018.6\r\n- **Date Produced**: 10/19/2019 4:56 AM\r\n- **Commit**: 3d3d5f699e0b7efb59b7133bde92eac1f1799318\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview2.19518.6\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12930","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12930)"},{"Id":"509389014","IsPullRequest":true,"CreatedAt":"2019-10-19T04:30:26","Actor":"dotnet-maestro[bot]","Number":"12929","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191018.10\r\n- **Date Produced**: 10/19/2019 2:50 AM\r\n- **Commit**: 63a98493a9ea4bae1b31ac673fb900f7cdb2dffb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 5.0.0-alpha1.19518.10\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19518.10\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19518.10\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19518.10\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19518.10\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 5.0.0-alpha1.19518.10\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12929","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12929)"},{"Id":"509379701","IsPullRequest":true,"CreatedAt":"2019-10-19T03:00:24","Actor":"dotnet-maestro[bot]","Number":"12928","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191018.4\r\n- **Date Produced**: 10/19/2019 1:41 AM\r\n- **Commit**: 65585c13f17de7222763a0b6282b4e83c15eb188\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview2.19518.4\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12928","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12928)"},{"Id":"509376478","IsPullRequest":true,"CreatedAt":"2019-10-19T02:50:29","Actor":"dotnet-maestro[bot]","Number":"12927","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191018.9\r\n- **Date Produced**: 10/19/2019 12:55 AM\r\n- **Commit**: d08c057d0651ffedf663fe0687d6d0c5ca103861\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 5.0.0-alpha1.19518.9\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19518.9\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19518.9\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19518.9\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19518.9\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 5.0.0-alpha1.19518.9\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12927","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12927)"},{"Id":"509366646","IsPullRequest":true,"CreatedAt":"2019-10-19T01:20:25","Actor":"dotnet-maestro[bot]","Number":"12926","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191018.8\r\n- **Date Produced**: 10/18/2019 11:38 PM\r\n- **Commit**: 3a78795f4d10a6a23af378116cabf429efefea88\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19518.8\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19518.8\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19518.8\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19518.8\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19518.8\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19518.8\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview2.19518.6 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12926","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12926)"},{"Id":"509356968","IsPullRequest":true,"CreatedAt":"2019-10-19T00:25:42","Actor":"dotnet-maestro[bot]","Number":"12924","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191018.3\r\n- **Date Produced**: 10/18/2019 10:52 PM\r\n- **Commit**: 19718f6011b9d0124e805af61584fda934a6f982\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview2.19518.3\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12924","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12924)"},{"Id":"509356917","IsPullRequest":true,"CreatedAt":"2019-10-19T00:25:27","Actor":"dotnet-maestro[bot]","Number":"12923","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191018.7\r\n- **Date Produced**: 10/18/2019 10:43 PM\r\n- **Commit**: 013f1ce4a76505bf85fee721bc325db1a2fd4784\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 5.0.0-alpha1.19518.7\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha1.19518.7\r\n  - **Microsoft.Extensions.DependencyModel** -> 5.0.0-alpha1.19518.7\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 5.0.0-alpha1.19518.7\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 5.0.0-alpha1.19518.7\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 5.0.0-alpha1.19518.7\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12923","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#12923)"},{"Id":"509359657","IsPullRequest":true,"CreatedAt":"2019-10-19T00:05:09","Actor":"dotnet-bot","Number":"12925","RawContent":null,"Title":"Merge release/3.1.1xx to master","State":"open","Body":"\nThis is an automatically generated pull request from release/3.1.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.1.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.1.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.1.1xx-to-master --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/12925","RelatedDescription":"Open PR \"Merge release/3.1.1xx to master\" (#12925)"},{"Id":"509313708","IsPullRequest":true,"CreatedAt":"2019-10-18T22:50:51","Actor":"dotnet-maestro[bot]","Number":"12922","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191018.2\r\n- **Date Produced**: 10/18/2019 8:19 PM\r\n- **Commit**: c298c94fe1113b64474a3d5fcdef487f02c74991\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview2.19518.2\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12922","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12922)"},{"Id":"508918572","IsPullRequest":true,"CreatedAt":"2019-10-18T08:35:31","Actor":"dotnet-maestro[bot]","Number":"12921","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191017.21\r\n- **Date Produced**: 10/18/2019 7:14 AM\r\n- **Commit**: 5440cd319d3144db070dee28e72386e3a432bc0c\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview2.19517.21\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12921","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#12921)"},{"Id":"508909133","IsPullRequest":true,"CreatedAt":"2019-10-18T08:15:32","Actor":"dotnet-maestro[bot]","Number":"12920","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191017.10\r\n- **Date Produced**: 10/18/2019 6:27 AM\r\n- **Commit**: 3daa0867abd7693bc654d9b02cdfe957428b36f1\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview2.19517.10\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19517.10\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview2.19517.10\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview2.19517.10\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview2.19517.10\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview2.19517.10\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/12920","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#12920)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"509586833","IsPullRequest":true,"CreatedAt":"2019-10-20T12:22:06","Actor":"dotnet-maestro[bot]","Number":"1619","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191019.7\r\n- **Date Produced**: 10/20/2019 2:47 AM\r\n- **Commit**: 03dd803990dfb8f05db8d0ec1bc34268386c1d5b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19519.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19519.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19519.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1619","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1619)"},{"Id":"509442622","IsPullRequest":true,"CreatedAt":"2019-10-19T12:29:32","Actor":"dotnet-maestro[bot]","Number":"1618","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191018.10\r\n- **Date Produced**: 10/19/2019 7:13 AM\r\n- **Commit**: 5590d3896f012c1c9b7774774456331a36ba1d57\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19518.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19518.10\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19518.10\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1618","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1618)"},{"Id":"509155885","IsPullRequest":false,"CreatedAt":"2019-10-18T15:46:13","Actor":"0blu","Number":"1617","RawContent":null,"Title":"Why do I need special permission when using HttpListener?","State":"closed","Body":"Hey,\r\n\r\nthis issue is a little bit dot net bashing because some interfaces are design with assumptions that are too specific for most users, HttpListener is one of them.\r\n\r\nFirst of all, I already read about the [HTTP namespace system](https://docs.microsoft.com/en-us/windows/win32/http/routing-incoming-requests).\r\n\r\n`HttpListener` allows simple and high level creation of HTTP servers, but what if I want to create a HTTP server that can listen on all hosts, without requiring admin permissions or running arbitrary `netsh` commands?\r\n\r\nIf I would run this code as an unprivileged user the result would be an access exception.\r\n``` c#\r\nHttpListener listener = new HttpListener();\r\nlistener.Prefixes.Add(\"http://*:1234/\");\r\nlistener.Start();\r\n```\r\n\r\nHowever running the following code proves that an unprivileged user could potentially write his own HTTP server, that allows access from all interfaces.\r\n``` c#\r\nTcpListener server = new TcpListener(IPAddress.Any, 1234);\r\nserver.Start();\r\n```\r\n\r\nI wonder why there is no way to take all the benefits of the `HttpListener` and skipping the namespacing system. Other languages have such features.\r\n\r\nIs there any chance to request an API addition that allows such things?\r\nFor example allowing the constructor of `HttpListener` to take an `TcpListener`-Instance.\r\n","Url":"https://github.com/dotnet/standard/issues/1617","RelatedDescription":"Closed issue \"Why do I need special permission when using HttpListener?\" (#1617)"},{"Id":"509045354","IsPullRequest":true,"CreatedAt":"2019-10-18T12:30:25","Actor":"dotnet-maestro[bot]","Number":"1616","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191018.1\r\n- **Date Produced**: 10/18/2019 8:58 AM\r\n- **Commit**: 2b92fc0930b941cd0d9146971745cd717689434c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19518.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19518.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19518.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1616","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1616)"},{"Id":"508423360","IsPullRequest":true,"CreatedAt":"2019-10-17T23:53:53","Actor":"akoeplinger","Number":"1614","RawContent":null,"Title":"Update Xamarin APIs to latest Dev16.4 builds","State":"closed","Body":"- Xamarin.Android 10.1.0.1\r\n- Xamarin.iOS 13.8.1.1\r\n- Xamarin.Mac 6.8.1.1\r\n\r\nThis also uses a new GenAPI version so the diff is a little messy because of the enum value to name changes in attributes.\r\n\r\nI also had to introduce a System.Core.stubs.csproj to break a build cycle because System.dll references System.Security.Cryptography.ECDsa from System.Core.dll now.","Url":"https://github.com/dotnet/standard/pull/1614","RelatedDescription":"Closed or merged PR \"Update Xamarin APIs to latest Dev16.4 builds\" (#1614)"},{"Id":"508433927","IsPullRequest":true,"CreatedAt":"2019-10-17T12:24:28","Actor":"dotnet-maestro[bot]","Number":"1615","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191016.16\r\n- **Date Produced**: 10/17/2019 4:25 AM\r\n- **Commit**: b9186cfa3566ee24e5f16e45c542a3078e128dc6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19516.16\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19516.16\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19516.16\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1615","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1615)"},{"Id":"507816713","IsPullRequest":true,"CreatedAt":"2019-10-16T12:33:03","Actor":"dotnet-maestro[bot]","Number":"1613","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191015.14\r\n- **Date Produced**: 10/16/2019 5:58 AM\r\n- **Commit**: b50bd0a1d3f0326fc717706cb5c5950ab41cf437\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19515.14\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19515.14\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19515.14\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1613","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1613)"},{"Id":"507439996","IsPullRequest":true,"CreatedAt":"2019-10-15T19:33:30","Actor":"crummel","Number":"1612","RawContent":null,"Title":"Source-build improvements.","State":"open","Body":"- Always restore, even in source-build.  This is required so we get NETStandard.Library netstandard2.0 reference bits for inclusion in the NETStandard.Library we are building.\r\n  - Also make this error out in source-build if it fails like it does in the standalone build.\r\n- Sourcelink is now supported in source-build.\r\n\r\nI'm still testing this out in source-build but does it look like what you were thinking of @ericstj?","Url":"https://github.com/dotnet/standard/pull/1612","RelatedDescription":"Open PR \"Source-build improvements.\" (#1612)"},{"Id":"507207673","IsPullRequest":true,"CreatedAt":"2019-10-15T12:30:27","Actor":"dotnet-maestro[bot]","Number":"1611","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191014.7\r\n- **Date Produced**: 10/15/2019 8:46 AM\r\n- **Commit**: 3d16a2bd46d452ceb341887dc9c9dde26545110b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19514.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19514.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19514.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1611","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1611)"},{"Id":"507198335","IsPullRequest":true,"CreatedAt":"2019-10-15T12:01:34","Actor":"dotnet-maestro[bot]","Number":"1610","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191018.2\r\n- **Date Produced**: 10/18/2019 9:12 PM\r\n- **Commit**: f59f1ebe9b293ad523d3bfa4e5cffc663708ef11\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19518.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19518.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19518.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19518.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19518.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19518.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1610","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#1610)"},{"Id":"506615487","IsPullRequest":true,"CreatedAt":"2019-10-14T12:25:04","Actor":"dotnet-maestro[bot]","Number":"1609","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191013.1\r\n- **Date Produced**: 10/13/2019 1:26 PM\r\n- **Commit**: 437d9bc76489ff18bd9ce04f287e07591f6bc38c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19513.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19513.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19513.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1609","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1609)"},{"Id":"506317458","IsPullRequest":true,"CreatedAt":"2019-10-13T12:25:39","Actor":"dotnet-maestro[bot]","Number":"1608","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191012.1\r\n- **Date Produced**: 10/12/2019 1:32 PM\r\n- **Commit**: 8d21b79b924d29088dbde46d42737a657d466b5e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19512.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19512.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19512.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1608","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1608)"},{"Id":"506180021","IsPullRequest":true,"CreatedAt":"2019-10-12T12:30:20","Actor":"dotnet-maestro[bot]","Number":"1607","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191011.6\r\n- **Date Produced**: 10/12/2019 12:05 AM\r\n- **Commit**: 57ae5430e0e6cbf16b5c7b7def4fc95015b2b722\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19511.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19511.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19511.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1607","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1607)"},{"Id":"506178147","IsPullRequest":true,"CreatedAt":"2019-10-12T12:16:34","Actor":"dotnet-maestro[bot]","Number":"1606","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191011.1\r\n- **Date Produced**: 10/11/2019 12:51 PM\r\n- **Commit**: 64a027b8d8b3a8e8e214bb00da02148335e3bd92\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19511.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19511.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1606","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1606)"},{"Id":"505819610","IsPullRequest":true,"CreatedAt":"2019-10-11T12:31:35","Actor":"dotnet-maestro[bot]","Number":"1605","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191010.15\r\n- **Date Produced**: 10/11/2019 6:45 AM\r\n- **Commit**: 901c370c2379ad0885bcc5a1921c4164104586aa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19510.15\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19510.15\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19510.15\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1605","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1605)"},{"Id":"505811013","IsPullRequest":true,"CreatedAt":"2019-10-11T12:11:39","Actor":"dotnet-maestro[bot]","Number":"1604","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191010.4\r\n- **Date Produced**: 10/10/2019 5:59 PM\r\n- **Commit**: 8cd48078f550fbcbd4f684b897b14db207397b52\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19510.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19510.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1604","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1604)"},{"Id":"505304835","IsPullRequest":false,"CreatedAt":"2019-10-10T14:21:00","Actor":"Sumeetkumawat","Number":"1603","RawContent":null,"Title":"Issue while Referencing iOS native library to .net standard library","State":"open","Body":"I have three projects in my solution. I have added .net standard library say 'A'. I have some code there. Then i added ios library 'B' and added project reference of 'A' here.\r\nNow I have another .net standard library 'C' and here I would like to add reference of 'A' & 'B' projects not dll's. Reference of 'A' is added successfully but while adding reference of 'B', I \r\nsee 'Incompatible Target Framework' message.\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1603","RelatedDescription":"Open issue \"Issue while Referencing iOS native library to .net standard library\" (#1603)"},{"Id":"505235113","IsPullRequest":true,"CreatedAt":"2019-10-10T12:33:39","Actor":"dotnet-maestro[bot]","Number":"1602","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191009.26\r\n- **Date Produced**: 10/10/2019 3:16 AM\r\n- **Commit**: 30280e07adc3c1f0776ef9531b47a769e2b45420\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19509.26\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19509.26\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19509.26\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1602","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1602)"},{"Id":"505224197","IsPullRequest":true,"CreatedAt":"2019-10-10T12:11:42","Actor":"dotnet-maestro[bot]","Number":"1601","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191009.5\r\n- **Date Produced**: 10/9/2019 10:22 PM\r\n- **Commit**: 1acb4c3ce4c6497388752adad31825ae7cdb7e2a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19509.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19509.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19509.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19509.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19509.5\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19509.5\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1601","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1601)"},{"Id":"505206761","IsPullRequest":false,"CreatedAt":"2019-10-10T11:24:37","Actor":"manijak","Number":"1600","RawContent":null,"Title":"The state of X509Certificate management with netstandard, xamarin, win & macOS","State":"open","Body":"First, my apologies if this is the wrong channel to post this. I've been digging and trying to understand for weeks where the issue/limitation is to our problem, figured this would be the most suitable place to ask. We are not sure if this is a limitation with the frameworks, or the platform, or due to our limited knowledge, or a combination of all. But things are very confusing right now, and we just need proper guidance on what direction to take.\r\n\r\nEDIT: Would appreciate if @bartonjs or @filipnavara could pitch in 👍 \r\n\r\n### **Background** 💡 \r\nWe are creating a small, cross-platform (win & macos), desktop application that will act as a websocket server running only on localhost (https). This application is a bridge between our web applications and the local machine hardware (e.g. printers). In order to provide a secure connection, `SslStream` requires a `X509Certificate2` class with a `PrivateKey`.\r\n\r\nThe idea is to let the app itself generate a self-signed certificate with private key and use that to start the secure websocket service. After the certificate has been generated for the first time, we store it in the local certificate store and reuse it when the app restarts. \r\n\r\n### **Project structure & frameworks** 📦 \r\nThis is how our solution is defined. `SharedProject` is a shared lib referenced by both `AppWin` & `AppMac`. The Win & Mac projects are startup-projects for their respective platform. \r\n```\r\nOurApp.sln\r\n  |---- SharedProject (netstandard2.1)\r\n        Creates & runs the websocket service, generates certificate (win), communicates with local hardware, ect\r\n\r\n  |---- AppWin (netcore3.0)\r\n        Startup project for Windows platform. Contains platform-specific code, if any.\r\n\r\n  |---- AppMac (Xamarin.Mac)\r\n        Startup project for macOS platform. Contains platform-specific code (generates certificate).\r\n```\r\n\r\n### **How it runs** 🏃 \r\nIn our `SharedProject` we have a class taking care of certificate generation and storing. The idea was that both the Win & Mac platforms could use this to manage the certificates. It uses the `X509Certificate2` & `CertificateRequest` provided by the framework. Plus the `X509Store` to save and retrieve the certificate.\r\n\r\n**Windows** ✔️ \r\nOn Windows there are no issues. With minimum amount of code we are able to generate a self-signed certificate with private-key, store it, and run the service with it. Also re-using the certificate when the app restarts by retrieving the certificate works very well. The `X509Store` returns the certificate with the _private key_, and we can easily use it with our `SslStream`. \r\n\r\n**macOS** ❌ \r\nThings are not so clear here... We could not use the above mentioned shared class to manage certificates (that works just fine on Windows):\r\n* First issue was that we got a `PlatformNotSupportedException` when the application was trying to use the `CertificateRequest`. \r\n* Second \"issue\" was that the `X509Store` did not store or retrieve certificates from the macOS keychain, but instead it uses some local mono certificate-store that the browsers do not see (at least in our tests). And it only stored the certificate (.cer) not the private-key that was included in the `X509Certificate2` object. Plus it seemed difficult to \"Trust\" the stored certificate.\r\n\r\nSo we created a separate class to take care of certificate management for macOS inside the `AppMac (Xamarin.Mac)` project. By using `BouncyCastle` we generated an identical self-signed certificate with private-key and used that to run our secure websocket service:\r\n\r\n* When launching our Secure Websocket service on macOS, the certificate used here is automatically added to the local macOS login keychain. For us this is great, since we could not use `X509Store` to add it there in the first place.\r\n* The only way we could retrieve the certificate from the keychain was to use the `SecKeyChain` class and query for it. Thankfully the `SecCertificate` object has a `ToX509Certificate2()` function. But that still left us without the `PrivateKey` that is needed by `SslStream`. \r\n* We also tried using `SecKeyChain.FindIdentity` to retrieve both, but even tho it is easy to convert `SecCertificate` to `X509Certificate2`, there seems to be no way to convert a `SecKey` to something useful like `RSA` or `RSACryptoServiceProvider` or something that can be embedded to the `X509Certificate2`\r\n\r\n### What to do? 😭 \r\nWe are pretty much stuck when it comes to the macOS platform. There seems to be no way for us to retrieve our own X509Certificate2 with the private-key embedded. Not sure if this is because we are using Xamarin.Mac & netstandard2.1, perhaps things are easier on netcore3? But still, Xamarin & mono have been around for a long time, there should be a way for us to do this today. Must be something we are missing here and would appreciate if someone could guide us. ","Url":"https://github.com/dotnet/standard/issues/1600","RelatedDescription":"Open issue \"The state of X509Certificate management with netstandard, xamarin, win & macOS\" (#1600)"},{"Id":"504399207","IsPullRequest":false,"CreatedAt":"2019-10-09T12:43:05","Actor":"2300070","Number":"1598","RawContent":null,"Title":"FiledInfo.SetValue Not Working For Static ReadOnly Fileds.","State":"closed","Body":"    private class TestReadOnly\r\n    {\r\n        public static readonly int Field;\r\n    }\r\n    [TestMethod]\r\n    public void TestReadOnlyField()\r\n    {\r\n        FieldInfo field = typeof(TestReadOnly).GetField(nameof(TestReadOnly.Field));\r\n\r\n        Console.WriteLine(field.GetValue(null));\r\n\r\n        field.SetValue(null, 0xFF);\r\n\r\n        Console.WriteLine(field.GetValue(null));\r\n\r\n        Console.WriteLine(TestReadOnly.Field);\r\n    }\r\n\r\nOutput:\r\n\r\n0\r\n255\r\n255\r\n0\r\n","Url":"https://github.com/dotnet/standard/issues/1598","RelatedDescription":"Closed issue \"FiledInfo.SetValue Not Working For Static ReadOnly Fileds.\" (#1598)"},{"Id":"504610278","IsPullRequest":true,"CreatedAt":"2019-10-09T12:21:49","Actor":"dotnet-maestro[bot]","Number":"1599","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191009.1\r\n- **Date Produced**: 10/9/2019 9:11 AM\r\n- **Commit**: a7ee8cdccce7d2607d58f9b93ce319209a238f7a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19509.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19509.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19509.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1599","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1599)"},{"Id":"504006427","IsPullRequest":true,"CreatedAt":"2019-10-08T12:28:23","Actor":"dotnet-maestro[bot]","Number":"1597","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191008.1\r\n- **Date Produced**: 10/8/2019 8:59 AM\r\n- **Commit**: c1092870c306b8da256e455cec0814486255d0c1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19508.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19508.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19508.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1597","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1597)"},{"Id":"503415647","IsPullRequest":true,"CreatedAt":"2019-10-07T12:29:27","Actor":"dotnet-maestro[bot]","Number":"1596","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191006.4\r\n- **Date Produced**: 10/7/2019 1:07 AM\r\n- **Commit**: 38aa9151607cb63bb569beb42880057ba2cd3da0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19506.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19506.4\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19506.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1596","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1596)"},{"Id":"503407217","IsPullRequest":true,"CreatedAt":"2019-10-07T12:11:40","Actor":"dotnet-maestro[bot]","Number":"1595","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191006.1\r\n- **Date Produced**: 10/6/2019 12:59 PM\r\n- **Commit**: 7acc732c615d2c2326cd347c8c1841a300a632cb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19506.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19506.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19506.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19506.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19506.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19506.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1595","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1595)"},{"Id":"503093090","IsPullRequest":true,"CreatedAt":"2019-10-06T12:23:42","Actor":"dotnet-maestro[bot]","Number":"1594","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191005.5\r\n- **Date Produced**: 10/6/2019 3:54 AM\r\n- **Commit**: 6de42378223c6cb138d28f812c440092718c7a19\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19505.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19505.5\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19505.5\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1594","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1594)"},{"Id":"503091277","IsPullRequest":true,"CreatedAt":"2019-10-06T12:11:40","Actor":"dotnet-maestro[bot]","Number":"1593","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191005.1\r\n- **Date Produced**: 10/5/2019 12:53 PM\r\n- **Commit**: 13e1dbd86223eaa797655bf14070ea28ce6461e3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19505.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19505.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19505.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19505.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19505.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19505.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1593","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1593)"},{"Id":"502956371","IsPullRequest":true,"CreatedAt":"2019-10-05T12:29:24","Actor":"dotnet-maestro[bot]","Number":"1592","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191004.9\r\n- **Date Produced**: 10/5/2019 3:05 AM\r\n- **Commit**: 99ea2b5aebf7361a5baa638c978cb6214fca5217\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19504.9\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19504.9\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19504.9\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1592","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1592)"},{"Id":"502954708","IsPullRequest":true,"CreatedAt":"2019-10-05T12:06:58","Actor":"dotnet-maestro[bot]","Number":"1591","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191004.2\r\n- **Date Produced**: 10/5/2019 1:24 AM\r\n- **Commit**: 380eaaf663b425943754a15b29e814df0bb1b078\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19504.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19504.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19504.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19504.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19504.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19504.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1591","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1591)"},{"Id":"502952894","IsPullRequest":false,"CreatedAt":"2019-10-05T11:42:25","Actor":"axanth","Number":"1590","RawContent":null,"Title":"Any specific date about support of Universal Windows Platform in .net Standard 2.1?","State":"open","Body":"","Url":"https://github.com/dotnet/standard/issues/1590","RelatedDescription":"Open issue \"Any specific date about support of Universal Windows Platform in .net Standard 2.1?\" (#1590)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"509715487","IsPullRequest":true,"CreatedAt":"2019-10-21T03:50:16","Actor":"ahsonkhan","Number":"41933","RawContent":null,"Title":"Optimize FindFirstCharToEncode for JavaScriptEncoder.Default and Relaxed using Sse2 intrinsics.","State":"open","Body":"Follow-up to https://github.com/dotnet/corefx/pull/41845 to optimize the built-in `JavascriptEncoder` using a similar approach.\r\n\r\nAlso added some tests to improve code coverage.\r\n\r\n\r\nBefore | UTF-16 |   |   | After | UTF-16 |   |\r\n-- | -- | -- | -- | -- | -- | --\r\nLength | Default | Relaxed | Custom | Default (~2x faster) | Relaxed ~3x faster) | Custom (no change)\r\n1 | 2.531 | 2.736 | 2.586 | 2.753 | 3.83 | 2.756\r\n2 | 4.146 | 3.763 | 4.012 | 3.496 | 5.258 | 4.201\r\n4 | 5.697 | 5.745 | 5.67 | 5.348 | 7.529 | 6.169\r\n7 | 9.8 | 9.248 | 9.039 | 8.63 | 11.259 | 9.537\r\n8 | 11.246 | 10.174 | 10.116 | 5.441 | 4.669 | 10.739\r\n15 | 17.388 | 17.512 | 17.642 | 12.317 | 13.319 | 18.483\r\n16 | 18.525 | 18.863 | 18.426 | 10.64 | 7.239 | 19.815\r\n17 | 20.163 | 20.248 | 20.894 | 9.957 | 7.985 | 20.444\r\n31 | 34.005 | 36.049 | 34.9 | 18.882 | 17.326 | 36.976\r\n32 | 35.269 | 35.933 | 35.721 | 17.035 | 12.132 | 38.042\r\n33 | 38.382 | 37.008 | 37.821 | 20.135 | 12.784 | 39.129\r\n47 | 50.6 | 52.1 | 52.296 | 29.299 | 22.86 | 55.173\r\n100 | 113.403 | 116.974 | 117.619 | 50.235 | 34.452 | 123.2\r\n1000 | 1019.124 | 1024.995 | 1093.341 | 516.325 | 297.291 | 1140.077\r\n\r\n- Relaxed got ~30% slower for strings < 8 characters.\r\n\r\nBefore | UTF-8 |   |   | After | UTF-8 |   |\r\n-- | -- | -- | -- | -- | -- | --\r\nLength | Default | Relaxed | Custom | Default (no change) | Relaxed (2-5x faster) | Custom (slowed down *)\r\n1 | 3.257 | 4.555 | 4.975 | 3.4 | 8.432 | 4.721\r\n2 | 4.99 | 7.13 | 5.432 | 4.568 | 10.271 | 8.695\r\n4 | 5.876 | 11.315 | 7.456 | 6.044 | 16.43 | 13.165\r\n7 | 9.37 | 18.817 | 8.757 | 9.07 | 25.745 | 22.744\r\n8 | 9.426 | 20.512 | 9.18 | 9.834 | 29.651 | 24.698\r\n15 | 15.524 | 35.613 | 13.253 | 15.888 | 51.929 | 44.444\r\n16 | 5.957 | 37.73 | 8.418 | 6.612 | 6.077 | 46.938\r\n17 | 6.939 | 39.323 | 9.281 | 7.071 | 8.957 | 49.841\r\n31 | 18.613 | 75.374 | 18.117 | 19.328 | 53.309 | 94.353\r\n32 | 9.628 | 76.378 | 10.372 | 10.338 | 8.202 | 96.62\r\n33 | 10.187 | 79.99 | 11.552 | 10.747 | 10.627 | 100.107\r\n47 | 21.866 | 110.154 | 20.371 | 23.909 | 59.806 | 139.935\r\n100 | 26.666 | 223.707 | 21.33 | 28.56 | 30.04 | 291.516\r\n1000 | 226.178 | 2169.379 | 128.611 | 245.932 | 174.883 | 2845.378\r\n\r\n- Relaxed got ~40% slower for utf-8 bytes < 16 bytes.\r\n\r\n`*` There was no source change - ASCII caching issue?\r\n\r\n## Next Steps:\r\n1) Evaluate if we can get rid of the special-casing in `S.T.Json`\r\n\r\ncc @GrabYourPitchforks, @gfoidl, @tarekgh, @tannergooding, @ViktorHofer, @steveharter  ","Url":"https://github.com/dotnet/corefx/pull/41933","RelatedDescription":"Open PR \"Optimize FindFirstCharToEncode for JavaScriptEncoder.Default and Relaxed using Sse2 intrinsics.\" (#41933)"},{"Id":"509517796","IsPullRequest":true,"CreatedAt":"2019-10-21T01:28:14","Actor":"bert2","Number":"41920","RawContent":null,"Title":"Add `Replace()` methods to `ImmutableList` builder","State":"closed","Body":"`ImmutableList<T>.Builder` is missing the `Replace()` methods `ImmutableList<T>` has. This PR adds them.\r\n\r\nThe implementation is very similar to [`ImmutableList<T>.Replace()`](https://github.com/dotnet/corefx/blob/5e4bf872154c17a1407997a38cc013fb12d5d1af/src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList_1.cs#L397), so there is some duplication. The test cases naturally also kind of duplicate the [tests for `ImmutableList<T>.Replace()`](https://github.com/dotnet/corefx/blob/5e4bf872154c17a1407997a38cc013fb12d5d1af/src/System.Collections.Immutable/tests/ImmutableListTest.cs#L527).","Url":"https://github.com/dotnet/corefx/pull/41920","RelatedDescription":"Closed or merged PR \"Add `Replace()` methods to `ImmutableList` builder\" (#41920)"},{"Id":"509665891","IsPullRequest":false,"CreatedAt":"2019-10-20T23:00:56","Actor":"FeodorFitsner","Number":"41932","RawContent":null,"Title":"System.Diagnostics.PerformanceCounter leaks memory","State":"open","Body":"Our .NET Core app uses `System.Diagnostics.PerformanceCounter` class to poll Hyper-V VM's statistics.\r\nThe typical usage pattern is shown below. Counters are being polled in a loop every second until cancelled. The code is shown for 1 counter, but there are 10 counters polled in the same loop.\r\n\r\nEverything was fine in .NET Core 2.2 until the app was migrated to 3.0 RTM and the code below started leaking \"unmanaged\" memory.\r\n`<ServerGarbageCollection>false</ServerGarbageCollection>` is set during the publishing.\r\n\r\n```csharp\r\nprivate async Task PollPerformanceCounters(CancellationToken cancellationToken)\r\n{\r\n\tvar _workerName = \"vm-1\";\r\n\tPerformanceCounter nicBytesReceivedCounter = null;\r\n\t\r\n\t// here are 10 more counters like above\r\n\t// ...\r\n\r\n\ttry\r\n\t{\r\n\t\tvar nicCategoryName = \"Hyper-V Virtual Network Adapter\";\r\n\t\tvar nicInstanceName = PerformanceCounterCategory.GetCategories()\r\n\t\t\t.Single(category => category.CategoryName == nicCategoryName)\r\n\t\t\t.GetInstanceNames().FirstOrDefault(i => i.StartsWith(_workerName));\r\n\r\n\t\tnicBytesReceivedCounter = new PerformanceCounter(nicCategoryName, \"Bytes received/sec\", nicInstanceName);\r\n\r\n\t\twhile (!cancellationToken.IsCancellationRequested)\r\n\t\t{\r\n\t\t\t// query NIC performance counters\r\n\t\t\tvar bytesReceivedSec = Convert.ToInt32(nicBytesReceivedCounter.NextValue());\r\n\r\n\t\t\t// Save counter in the database\r\n\t\t\tSaveMetadata();\r\n\r\n\t\t\tawait Task.Delay(1000);\r\n\t\t}\r\n\t}\r\n\tfinally\r\n\t{\r\n\t\t// dispose counters\r\n\t\tif (nicBytesReceivedCounter != null)\r\n\t\t{\r\n\t\t\tnicBytesReceivedCounter.Dispose();\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\nAre we doing something wrong here (like wrong pattern or something is not called additionally to free resources) or there is a regression/bug in .NET 3.0?","Url":"https://github.com/dotnet/corefx/issues/41932","RelatedDescription":"Open issue \"System.Diagnostics.PerformanceCounter leaks memory\" (#41932)"},{"Id":"509343538","IsPullRequest":true,"CreatedAt":"2019-10-20T22:55:47","Actor":"carlossanlop","Number":"41909","RawContent":null,"Title":"Add file creation method that takes an ACL","State":"closed","Body":"Fixes https://github.com/dotnet/corefx/issues/41614\r\n\r\nAs soon as [the PR for directory creation ](https://github.com/dotnet/corefx/pull/41834) is merged, I'll rebase this branch to reduce the number of edited files in this PR.\r\n\r\n@JeremyKuhne","Url":"https://github.com/dotnet/corefx/pull/41909","RelatedDescription":"Closed or merged PR \"Add file creation method that takes an ACL\" (#41909)"},{"Id":"509665038","IsPullRequest":false,"CreatedAt":"2019-10-20T22:52:41","Actor":"ViktorHofer","Number":"41931","RawContent":null,"Title":"System.Net.Sockets.Tests.DualModeAcceptAsync.AcceptAsyncV4BoundToSpecificV6_CantConnect test failed in CI","State":"open","Body":"https://dnceng.visualstudio.com/public/_build/results?buildId=393221&view=ms.vss-test-web.build-test-results-tab&runId=12222448&resultId=177679&paneView=debug\r\n\r\nConfiguration: `netcoreapp-Windows_NT-Release-x86-Windows.10.Amd64.Client19H1.Open`\r\n\r\n```\r\nAssert.Throws() Failure\\r\\nExpected: typeof(System.Net.Sockets.SocketException)\\r\\nActual: typeof(System.TimeoutException): Timed out while waiting for either of client and server connections...\\r\\n---- System.TimeoutException : Timed out while waiting for either of client and server connections...\r\n at System.Net.Sockets.Tests.DualModeAcceptAsync.DualModeConnect_AcceptAsync_Helper(IPAddress listenOn, IPAddress connectTo) in /_/src/System.Net.Sockets/tests/FunctionalTests/DualModeSocketTest.cs:line 973\r\n   at System.Net.Sockets.Tests.DualModeAcceptAsync.<AcceptAsyncV4BoundToSpecificV6_CantConnect>b__5_0() in /_/src/System.Net.Sockets/tests/FunctionalTests/DualModeSocketTest.cs:line 924\r\n----- Inner Stack Trace -----\r\n   at System.Net.Sockets.Tests.DualModeAcceptAsync.DualModeConnect_AcceptAsync_Helper(IPAddress listenOn, IPAddress connectTo) in /_/src/System.Net.Sockets/tests/FunctionalTests/DualModeSocketTest.cs:line 973\r\n   at System.Net.Sockets.Tests.DualModeAcceptAsync.<AcceptAsyncV4BoundToSpecificV6_CantConnect>b__5_0() in /_/src/System.Net.Sockets/tests/FunctionalTests/DualModeSocketTest.cs:line 924\r\n```\r\n\r\ncc @davidsh, @wfurt, @scalablecory, @eiriktsarpalis, @karelz","Url":"https://github.com/dotnet/corefx/issues/41931","RelatedDescription":"Open issue \"System.Net.Sockets.Tests.DualModeAcceptAsync.AcceptAsyncV4BoundToSpecificV6_CantConnect test failed in CI\" (#41931)"},{"Id":"509664420","IsPullRequest":false,"CreatedAt":"2019-10-20T22:46:46","Actor":"ViktorHofer","Number":"41930","RawContent":null,"Title":"SignIdentifiedContent crypo test crashes on netfx","State":"open","Body":"https://dnceng.visualstudio.com/public/_build/results?buildId=394693&view=ms.vss-test-web.build-test-results-tab&runId=12294416&resultId=115071&paneView=attachments\r\n\r\nConfiguration: `netfx-Windows_NT-Release-x86-Windows.10.Amd64.ClientRS5.Open`\r\n\r\nDump is available: https://helix.dot.net/api/2019-06-17/jobs/a385f258-a76d-4267-80d7-e4ff3bb7fb3f/workitems/System.Security.Cryptography.Pkcs.Tests/files/xunit.console.exe.4384.dmp\r\n\r\n```\r\nUnhandled Exception: System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.\r\n   at System.Security.Cryptography.X509Certificates.X509Utils._LoadCertFromBlob(Byte[] rawData, IntPtr password, UInt32 dwFlags, Boolean persistKeySet, SafeCertContextHandle& pCertCtx)\r\n   at System.Security.Cryptography.X509Certificates.X509Utils.LoadCertFromBlob(Byte[] rawData, IntPtr password, UInt32 dwFlags, Boolean persistKeySet, SafeCertContextHandle pCertCtx)\r\n   at System.Security.Cryptography.X509Certificates.X509Certificate.LoadCertificateFromBlob(Byte[] rawData, Object password, X509KeyStorageFlags keyStorageFlags)\r\n   at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags)\r\n   at Test.Cryptography.CertLoader.TryGetCertificateWithPrivateKey(Boolean exportable) in /_/src/System.Security.Cryptography.Pkcs/tests/CertLoader.cs:line 86\r\n   at System.Security.Cryptography.Pkcs.Tests.SignedCmsTests.SignIdentifiedContent(String oidValue, String contentHex, Boolean netfxProblem) in /_/src/System.Security.Cryptography.Pkcs/tests/SignedCms/SignedCmsTests.cs:line 1291\r\n```\r\n\r\ncc @bartonjs","Url":"https://github.com/dotnet/corefx/issues/41930","RelatedDescription":"Open issue \"SignIdentifiedContent crypo test crashes on netfx\" (#41930)"},{"Id":"509642723","IsPullRequest":false,"CreatedAt":"2019-10-20T20:09:30","Actor":"rstm-sf","Number":"41929","RawContent":null,"Title":"Why CodePagesEncodingProvider.Instance.GetEncoding(\"utf-8\") return null?","State":"closed","Body":"Hello!\r\n\r\nWhy `CodePagesEncodingProvider.Instance.GetEncoding(\"utf-8\")` return `null`? Is this considered normal behavior?\r\n\r\nBut if write this, then everything is fine\r\n```c#\r\nEncoding.RegisterProvider(CodePagesEncodingProvider.Instance);\r\nvar test = Encoding.GetEncoding(\"utf-8\");\r\n```\r\n\r\nbecause there is a `null` check\r\n\r\nhttps://github.com/dotnet/corefx/blob/ac99a1b7168bd32046a954c3f06012c0fa909bed/src/Common/src/CoreLib/System/Text/Encoding.cs#L267-L275\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/41929","RelatedDescription":"Closed issue \"Why CodePagesEncodingProvider.Instance.GetEncoding(\"utf-8\") return null?\" (#41929)"},{"Id":"509634859","IsPullRequest":false,"CreatedAt":"2019-10-20T18:46:00","Actor":"joshudson","Number":"41928","RawContent":null,"Title":"System.IO.Directory.Move claims to throw when the target already exists; however it does not do so reliably.","State":"open","Body":"> Starting with .NET Core 3.0, the Move method throws an IOException in all platforms when the destDirName already exists. In .NET Core 2.2 and previous versions, the exception was only thrown on Windows, and other platforms could either fail or overwrite the destDirName. See C++ rename.\r\n\r\nUnfortunately, the fix was made by inserting a call to `FileExists()`, which is broken. Even if `FileExists()` worked, this is subject to a TOCTOU bug. As a consequence, rename targets can be randomly overwritten.\r\n\r\nThis can be actually fixed in Linux by using the `renameat2()` system call; however I could find no solution for OSX.\r\n\r\nThis problem can also occur on Windows when talking to set-top NAS boxes. Two computers may be required to reproduce.","Url":"https://github.com/dotnet/corefx/issues/41928","RelatedDescription":"Open issue \"System.IO.Directory.Move claims to throw when the target already exists; however it does not do so reliably.\" (#41928)"},{"Id":"509586650","IsPullRequest":true,"CreatedAt":"2019-10-20T14:46:00","Actor":"dotnet-maestro[bot]","Number":"41926","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20191019.1\r\n- **Date Produced**: 10/19/2019 1:35 PM\r\n- **Commit**: 605124c975c78a0aeb875c70f359737747bf55a8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 5.0.0-alpha1.19519.1\r\n  - **Microsoft.NETCore.ILAsm** -> 5.0.0-alpha1.19519.1\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 5.0.0-alpha1.19519.1\r\n\r\n[marker]: <> (End:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/41926","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/coreclr\" (#41926)"},{"Id":"509591817","IsPullRequest":true,"CreatedAt":"2019-10-20T14:33:59","Actor":"dotnet-maestro[bot]","Number":"41927","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx dotnet/standard","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191019.7\r\n- **Date Produced**: 10/20/2019 2:47 AM\r\n- **Commit**: 03dd803990dfb8f05db8d0ec1bc34268386c1d5b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.native.System.IO.Ports** -> 5.0.0-alpha1.19519.7\r\n  - **Microsoft.NETCore.Platforms** -> 5.0.0-alpha1.19519.7\r\n\r\n[marker]: <> (End:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n\r\n[marker]: <> (Begin:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20191019.1\r\n- **Date Produced**: 10/19/2019 1:01 PM\r\n- **Commit**: 2434ba2ae2aa4766018338320f87747560b60784\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.2.0-prerelease.19519.1\r\n\r\n[marker]: <> (End:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/41927","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx dotnet/standard\" (#41927)"},{"Id":"509530108","IsPullRequest":true,"CreatedAt":"2019-10-20T13:56:54","Actor":"jkotas","Number":"41924","RawContent":null,"Title":"Update argument names for CoreLib change","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/41924","RelatedDescription":"Closed or merged PR \"Update argument names for CoreLib change\" (#41924)"},{"Id":"509586268","IsPullRequest":true,"CreatedAt":"2019-10-20T12:56:56","Actor":"dotnet-maestro[bot]","Number":"41925","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191019.8\r\n- **Date Produced**: 10/20/2019 6:59 AM\r\n- **Commit**: 878b814996cb808a525ae43b1f77559b8e2135dd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19519.8\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 5.0.0-alpha1.19519.8\r\n  - **Microsoft.NETCore.DotNetHost** -> 5.0.0-alpha1.19519.8\r\n\r\n[marker]: <> (End:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/41925","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#41925)"},{"Id":"509476600","IsPullRequest":false,"CreatedAt":"2019-10-20T03:46:09","Actor":"yruson","Number":"41916","RawContent":null,"Title":"System.Text.Json - JsonSerializer.SerializeAsync?","State":"closed","Body":"I create test console app,(use net core3.0), and code as below:\r\n\r\n`using System;\r\nusing System.IO;\r\nusing System.Text.Json;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace TestConsoleApp1\r\n{\r\n    class Program\r\n    {\r\n        async static Task Main(string[] args)\r\n        {\r\n            var obj = new { Name = \"Test\", Age = 18 };\r\n\r\n            string json = string.Empty;\r\n            using (var stream = new MemoryStream())\r\n            {\r\n                await JsonSerializer.SerializeAsync(stream, obj);\r\n                stream.Position = 0;\r\n                using var reader = new StreamReader(stream);\r\n                json = await reader.ReadToEndAsync();\r\n            }\r\n\r\n            Console.WriteLine(json);    //output {\"Name\":\"Test\",\"Age\":18}, is ok\r\n            Console.WriteLine(await GetJson(obj));  //output {}, why?\r\n\r\n            Console.ReadLine();\r\n        }\r\n\r\n        private static async Task<string> GetJson(object obj)\r\n        {\r\n            string json = string.Empty;\r\n            using (var stream = new MemoryStream())\r\n            {\r\n                await JsonSerializer.SerializeAsync(stream, obj);\r\n                stream.Position = 0;\r\n                using var reader = new StreamReader(stream);\r\n                json = await reader.ReadToEndAsync();\r\n            }\r\n            return json;\r\n        }\r\n    }\r\n}\r\n`\r\n\r\noutput\r\n{\"Name\":\"Test\",\"Age\":18}\r\n{}\r\n\r\nthe same code, but to output different results, why?","Url":"https://github.com/dotnet/corefx/issues/41916","RelatedDescription":"Closed issue \"System.Text.Json - JsonSerializer.SerializeAsync?\" (#41916)"},{"Id":"509529291","IsPullRequest":false,"CreatedAt":"2019-10-20T02:14:59","Actor":"zaimoni","Number":"41922","RawContent":null,"Title":"Sudden failure to roundtrip using binary serialization","State":"closed","Body":"The following revision of the game Rogue Survivor Revived , https://bitbucket.org/zaimoni/roguesurvivor-revived/commits/6408564940e8cb079db23e6c8f79085a22c84fae , was able to load its own savefiles when built with Visual Studio 16.3.4, but does not do so with Visual Studio 16.3.5.  I'm not clear on where to report this.  I chose here as it looks like a reversion of https://github.com/dotnet/coreclr/pull/21193 which fixes https://github.com/dotnet/corefx/issues/33655 .  [The Actor class has a readonly struct as a member; that would be expected to fail if this fix were reverted.]\r\n\r\nThe new exception stopping loading the savefile when building with 16.3.5, that is not thrown when building with 16.3.4, is:\r\nSystem.ArgumentException: 'Field in TypedReferences cannot be static or init only.'\r\n\r\nwhich is thrown from BinaryFormatter::Deserialize as follows:\r\n\r\n    public static _T_ BinaryDeserialize<_T_>(this string filepath)\r\n    {\r\n#if DEBUG\r\nif (string.IsNullOrEmpty(filepath)) throw new ArgumentNullException(nameof(filepath));\r\n#endif\r\nusing (Stream stream = filepath.CreateStream(false)) {\r\nreturn (T)(new BinaryFormatter()).Deserialize(stream);\r\n}\r\n}","Url":"https://github.com/dotnet/corefx/issues/41922","RelatedDescription":"Closed issue \"Sudden failure to roundtrip using binary serialization\" (#41922)"},{"Id":"509529398","IsPullRequest":false,"CreatedAt":"2019-10-20T01:08:41","Actor":"scobbyy2k3","Number":"41923","RawContent":null,"Title":"Power Bi connection to postgres","State":"open","Body":"i got this error message while attempting to pull data from postgres to power bi. How do i solve it?\r\n\r\nDetails: \"An error happened while reading data from the provider: 'Could not load file or assembly 'System.Runtime.CompilerServices.Unsafe, Version=4.0.4.1, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.'\"","Url":"https://github.com/dotnet/corefx/issues/41923","RelatedDescription":"Open issue \"Power Bi connection to postgres\" (#41923)"},{"Id":"509509688","IsPullRequest":true,"CreatedAt":"2019-10-20T01:01:34","Actor":"VSadov","Number":"41918","RawContent":null,"Title":"A few more test scenarios for casting of nullables and open generic arrays.","State":"closed","Body":"- nullables have different rules for object/type/reflection casting. Since castability depends on who is asking, there is some fragility and need for test coverage. \r\n\r\n- internal representation of open `T[]` arrays may reuse methodtable from `object[]` assuming that instances will not be created anyways. Type analysis must be careful to not use method tables as type info or identity for these.","Url":"https://github.com/dotnet/corefx/pull/41918","RelatedDescription":"Closed or merged PR \"A few more test scenarios for casting of nullables and open generic arrays.\" (#41918)"},{"Id":"509523502","IsPullRequest":false,"CreatedAt":"2019-10-19T23:48:42","Actor":"cubesnyc","Number":"41921","RawContent":null,"Title":"HttpClient does not add referer header to redirects when allowautoredirect is true","State":"open","Body":"According to \r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.net.httpwebrequest.referer?view=netframework-4.8 \r\n\"If the AllowAutoRedirect property is true, the Referer property is set automatically when the request is redirected to another site.\"\r\n\r\nHowever, this behavior does not happen. \r\n\r\nQuick reproducible code: \r\n            var request = HttpWebRequest.CreateHttp( \"https://httpstat.us/302\" );\r\n            request.AllowAutoRedirect = true;\r\n            await request.GetResponseAsync();","Url":"https://github.com/dotnet/corefx/issues/41921","RelatedDescription":"Open issue \"HttpClient does not add referer header to redirects when allowautoredirect is true\" (#41921)"},{"Id":"509494038","IsPullRequest":false,"CreatedAt":"2019-10-19T22:07:30","Actor":"bert2","Number":"41917","RawContent":null,"Title":"Strange `MembersMustExist` error when adding `Replace()` method to `ImmutableList` builder","State":"closed","Body":"I noticed that the [`ImmutableList<T>.Builder`](https://github.com/dotnet/corefx/blob/master/src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList_1.Builder.cs) class is missing the method `Replace()` [that `ImmutableList<T>` has](https://github.com/dotnet/corefx/blob/5e4bf872154c17a1407997a38cc013fb12d5d1af/src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList_1.cs#L397).\r\n\r\nSo, I created a fork and [added it along with tests](https://github.com/bert2/corefx/commit/98b52e37eab65cf1e67f6c18b74f3268bfc444ba) re-using the [test cases](https://github.com/dotnet/corefx/blob/5e4bf872154c17a1407997a38cc013fb12d5d1af/src/System.Collections.Immutable/tests/ImmutableListTest.cs#L527) for `ImmutableList<T>.Replace()`.\r\n\r\nHowever, trying to build with...\r\n```\r\nPS> .\\build.cmd -build System.Collections.Immutable\r\n```\r\n...shows me this error:\r\n>C:\\Users\\bert\\.nuget\\packages\\microsoft.dotnet.apicompat\\5.0.0-beta.19518.2\\build\\Microsoft.DotNet.ApiCompat.targets(143,5): error : MembersMustExist : Member 'System.Collections.Immutable.ImmutableList<T>.Builder.Replace(T, T)' does not exist in the reference but it does exist in the implementation. [D:\\DEV\\corefx\\src\\System.Collections.Immutable\\src\\System.Collections.Immutable.csproj]\r\nC:\\Users\\bert\\.nuget\\packages\\microsoft.dotnet.apicompat\\5.0.0-beta.19518.2\\build\\Microsoft.DotNet.ApiCompat.targets(143,5): error : MembersMustExist : Member 'System.Collections.Immutable.ImmutableList<T>.Builder.Replace(T, T, System.Collections.Generic.IEqualityComparer<T>)' does not exist in the reference but it does exist in the implementation. [D:\\DEV\\corefx\\src\\System.Collections.Immutable\\src\\System.Collections.Immutable.csproj]\r\nC:\\Users\\bert\\.nuget\\packages\\microsoft.dotnet.apicompat\\5.0.0-beta.19518.2\\build\\Microsoft.DotNet.ApiCompat.targets(157,5): error : MatchingRefApiCompat failed - The reference assembly doesn't match all the APIs in the implementation for 'D:\\DEV\\corefx\\artifacts\\bin\\System.Collections.Immutable\\netcoreapp-Debug\\System.Collections.Immutable.dll'. To address either fix errors in the reference assembly (referenced as implementation in compat errors for this reverse compat check), add the issues to the baseline file 'D:\\DEV\\corefx\\src\\System.Collections.Immutable\\src\\MatchingRefApiCompatBaseline.txt' or disable this check by setting RunMatchingRefApiCompat=false in this project. [D:\\DEV\\corefx\\src\\System.Collections.Immutable\\src\\System.Collections.Immutable.csproj]\r\n\r\nI'm not quite sure what this error is telling me or how I'm supposed to fix it. Can anyone assist, please?\r\n\r\nThe build succeeds when I remove the `<Exec Command=\"$(_ApiCompatCommand) ...` tag from `Microsoft.DotNet.ApiCompat.targets`. By that I was able to verify that my test cases are green using:\r\n```\r\nPS> .\\build.cmd -buildtests -test System.Collections.Immutable\r\n```\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/41917","RelatedDescription":"Closed issue \"Strange `MembersMustExist` error when adding `Replace()` method to `ImmutableList` builder\" (#41917)"},{"Id":"509510909","IsPullRequest":true,"CreatedAt":"2019-10-19T21:17:50","Actor":"danmosemsft","Number":"41919","RawContent":null,"Title":"Fix XSLT tests to deterministically pick newer xsltc.exe","State":"open","Body":"My machine had several:\r\n```\r\nC:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.7.2 Tools\\xsltc.exe\r\nC:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.8 Tools\\xsltc.exe\r\nC:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\bin\\x64\\xsltc.exe\r\nC:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\bin\\xsltc.exe\r\n```\r\nIt picked the 4th one above. It should pick the 2nd one in order to produce results matching the expected baseline.","Url":"https://github.com/dotnet/corefx/pull/41919","RelatedDescription":"Open PR \"Fix XSLT tests to deterministically pick newer xsltc.exe\" (#41919)"},{"Id":"509465640","IsPullRequest":false,"CreatedAt":"2019-10-19T15:07:29","Actor":"GreatFireWall","Number":"41915","RawContent":null,"Title":"How can I new a MultiSegment ReadOnlySequence manually for unit test purpose ?","State":"open","Body":"I just want to test/debug my code correctness for processing a MultiSegment ReadOnlySequence.","Url":"https://github.com/dotnet/corefx/issues/41915","RelatedDescription":"Open issue \"How can I new a MultiSegment ReadOnlySequence manually for unit test purpose ?\" (#41915)"},{"Id":"509440537","IsPullRequest":true,"CreatedAt":"2019-10-19T14:17:02","Actor":"dotnet-maestro[bot]","Number":"41914","RawContent":null,"Title":"[master] Update dependencies from 4 repositories","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c297d885-0692-40f8-6b97-08d61f281b4c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191018.2\r\n- **Date Produced**: 10/18/2019 9:12 PM\r\n- **Commit**: f59f1ebe9b293ad523d3bfa4e5cffc663708ef11\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.19518.2\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19518.2\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 5.0.0-beta.19518.2\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19518.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19518.2\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 5.0.0-beta.19518.2\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 5.0.0-beta.19518.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19518.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19518.2\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 5.0.0-beta.19518.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19518.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19518.2\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.19518.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19518.2\r\n\r\n[marker]: <> (End:c297d885-0692-40f8-6b97-08d61f281b4c)\r\n\r\n[marker]: <> (Begin:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191018.11\r\n- **Date Produced**: 10/19/2019 5:16 AM\r\n- **Commit**: 4de60f765b2d98b67f59390f40d7ee4c72a2daca\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19518.11\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 5.0.0-alpha1.19518.11\r\n  - **Microsoft.NETCore.DotNetHost** -> 5.0.0-alpha1.19518.11\r\n\r\n[marker]: <> (End:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n\r\n[marker]: <> (Begin:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191018.10\r\n- **Date Produced**: 10/19/2019 7:13 AM\r\n- **Commit**: 5590d3896f012c1c9b7774774456331a36ba1d57\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.native.System.IO.Ports** -> 5.0.0-alpha1.19518.10\r\n  - **Microsoft.NETCore.Platforms** -> 5.0.0-alpha1.19518.10\r\n\r\n[marker]: <> (End:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n\r\n[marker]: <> (Begin:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20191018.1\r\n- **Date Produced**: 10/18/2019 12:44 PM\r\n- **Commit**: 75deb0e823d1f1958de359e5320dff710288468d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.2.0-prerelease.19518.1\r\n\r\n[marker]: <> (End:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/41914","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from 4 repositories\" (#41914)"},{"Id":"509431294","IsPullRequest":true,"CreatedAt":"2019-10-19T12:09:47","Actor":"ViktorHofer","Number":"41912","RawContent":null,"Title":"Prepare license and other files for the repo consolidation","State":"closed","Body":"- The /*.md filter isn't working in AzDO, therefore we are listening the excluded files manually. \r\n- Renaming CODE_OF_CONDUCT.md to CODE-OF-CONDUCT.TXT to be consistent with THIRD-PARTY-NOTICES.TXT\r\n- Rename LICENSE.TXT to LICENSE so that GH picks it up correctly and to align it with core-setup.","Url":"https://github.com/dotnet/corefx/pull/41912","RelatedDescription":"Closed or merged PR \"Prepare license and other files for the repo consolidation\" (#41912)"},{"Id":"509324433","IsPullRequest":true,"CreatedAt":"2019-10-19T11:30:52","Actor":"joperezr","Number":"41906","RawContent":null,"Title":"Adding single statement if formatting rule to coding-style","State":"closed","Body":"cc: @stephentoub @carlossanlop \r\n\r\nThis came up in a recent PR and I just wanted to make it more clear in our Coding guidelines.","Url":"https://github.com/dotnet/corefx/pull/41906","RelatedDescription":"Closed or merged PR \"Adding single statement if formatting rule to coding-style\" (#41906)"},{"Id":"509436142","IsPullRequest":false,"CreatedAt":"2019-10-19T11:20:24","Actor":"tom-englert","Number":"41913","RawContent":null,"Title":"System.Composition.AttributedModel is released with mixed assembly versions.","State":"open","Body":"Starting with v1.3.0, the NuGet package of System.Composition.AttributedModel contains mixed versions!\r\nFor netstandard1.0 and portable it contains version 1.0.33, but for netstandard2.0 it is 1.0.34.\r\n\r\nThis leads to the conflict that if you reference two assemblies, one build for net4x and one build for netstandard2x, and all using System.Composition 1.3.0, you get a runtime error that System.Composition.AttributedModel 1.0.33 could not be loaded, because 1.0.34 is in the bin folder,\r\nbut the net4x assembly has a reference to the 1.0.33 assembly.\r\n\r\nHow to reproduce:\r\n- Get https://github.com/tom-englert/TomsToolbox\r\n- Upgrade System.Composition to 1.3.0\r\n- Build\r\n- Run tests\r\nNow one test fails with an exception that System.Composition.AttributedModel 1.0.33 could not be loaded\r\n\r\nMight be related to #41393","Url":"https://github.com/dotnet/corefx/issues/41913","RelatedDescription":"Open issue \"System.Composition.AttributedModel is released with mixed assembly versions.\" (#41913)"},{"Id":"509356165","IsPullRequest":true,"CreatedAt":"2019-10-19T05:37:17","Actor":"GrabYourPitchforks","Number":"41910","RawContent":null,"Title":"Add UTF8Encoding compat tests","State":"closed","Body":"Complementary unit tests for https://github.com/dotnet/coreclr/pull/27268. These tests ensure we haven't regressed the type's behavior in the face of users subclassing it in unanticipated ways.","Url":"https://github.com/dotnet/corefx/pull/41910","RelatedDescription":"Closed or merged PR \"Add UTF8Encoding compat tests\" (#41910)"},{"Id":"509361950","IsPullRequest":false,"CreatedAt":"2019-10-19T00:18:21","Actor":"danmosemsft","Number":"41911","RawContent":null,"Title":"End of Stream in PostAsyncExpect100Continue_NonSuccessResponse_RequestBodyNotSent test","State":"open","Body":"System.Net.Http.Functional.Tests.SocketsHttpHandlerTest_Http2.PostAsyncExpect100Continue_NonSuccessResponse_RequestBodyNotSent\r\n```\r\nSystem.IO.IOException : End of stream\r\n\r\nStack trace\r\n   at System.Net.Test.Common.Http2LoopbackConnection.ReadBodyAsync() in /_/src/Common/tests/System/Net/Http/Http2LoopbackConnection.cs:line 488\r\n   at System.Net.Http.Functional.Tests.HttpClientHandlerTest_Http2.<>c__DisplayClass67_0.<<PostAsyncExpect100Continue_NonSuccessResponse_RequestBodyNotSent>b__1>d.MoveNext() in /_/src/System.Net.Http/tests/FunctionalTests/HttpClientHandlerTest.Http2.cs:line 1931\r\n--- End of stack trace from previous location ---\r\n   at System.Threading.Tasks.TaskTimeoutExtensions.WhenAllOrAnyFailed(Task[] tasks) in /_/src/Common/tests/System/Threading/Tasks/TaskTimeoutExtensions.cs:line 83\r\n   at System.Threading.Tasks.TaskTimeoutExtensions.WhenAllOrAnyFailed(Task[] tasks) in /_/src/Common/tests/System/Threading/Tasks/TaskTimeoutExtensions.cs:line 111\r\n   at System.Threading.Tasks.TaskTimeoutExtensions.WhenAllOrAnyFailed(Task[] tasks, Int32 millisecondsTimeout) in /_/src/Common/tests/System/Threading/Tasks/TaskTimeoutExtensions.cs:line 71\r\n   at System.Net.Test.Common.Http2LoopbackServer.CreateClientAndServerAsync(Func`2 clientFunc, Func`2 serverFunc, Int32 timeout) in /_/src/Common/tests/System/Net/Http/Http2LoopbackServer.cs:line 186\r\n   at System.Net.Http.Functional.Tests.HttpClientHandlerTest_Http2.PostAsyncExpect100Continue_NonSuccessResponse_RequestBodyNotSent() in /_/src/System.Net.Http/tests/FunctionalTests/HttpClientHandlerTest.Http2.cs:line 1899\r\n--- End of stack trace from previous location ---\r\n```\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=393660&view=ms.vss-test-web.build-test-results-tab&runId=12233140&resultId=157765&paneView=debug\r\n\r\nnetcoreapp-Linux-Debug-x64-(Alpine.310.Amd64.Open)ubuntu.1604.amd64.Open","Url":"https://github.com/dotnet/corefx/issues/41911","RelatedDescription":"Open issue \"End of Stream in PostAsyncExpect100Continue_NonSuccessResponse_RequestBodyNotSent test\" (#41911)"},{"Id":"509338557","IsPullRequest":true,"CreatedAt":"2019-10-18T23:40:21","Actor":"jkoritzinsky","Number":"41908","RawContent":null,"Title":"WIP: Update CoreFx to CMake 3.14.","State":"closed","Body":"Update CoreFx build images to have CMake 3.14 and update the build to require CMake 3.14 so we have a consistent toolset for the consolidated repository.","Url":"https://github.com/dotnet/corefx/pull/41908","RelatedDescription":"Closed or merged PR \"WIP: Update CoreFx to CMake 3.14.\" (#41908)"},{"Id":"509332168","IsPullRequest":false,"CreatedAt":"2019-10-18T22:09:30","Actor":"carlossanlop","Number":"41907","RawContent":null,"Title":"FileSystemAclExtensions methods should null check the \"this\" argument","State":"open","Body":"These methods should null check the `this` argument:\r\n\r\nhttps://github.com/dotnet/corefx/blob/226f57b4f2bf91822604aa73338070c601d7a0fe/src/System.IO.FileSystem.AccessControl/src/System/IO/FileSystemAclExtensions.cs\r\n\r\ncc @JeremyKuhne @stephentoub","Url":"https://github.com/dotnet/corefx/issues/41907","RelatedDescription":"Open issue \"FileSystemAclExtensions methods should null check the \"this\" argument\" (#41907)"},{"Id":"509297324","IsPullRequest":true,"CreatedAt":"2019-10-18T20:33:16","Actor":"buyaa-n","Number":"41904","RawContent":null,"Title":"Annotate System.Reflection.DispatchProxy for nullable","State":"open","Body":"Contributes to: #40623","Url":"https://github.com/dotnet/corefx/pull/41904","RelatedDescription":"Open PR \"Annotate System.Reflection.DispatchProxy for nullable\" (#41904)"},{"Id":"509266351","IsPullRequest":true,"CreatedAt":"2019-10-18T19:20:09","Actor":"steveharter","Number":"41903","RawContent":null,"Title":"Support IDictionary<string,TValue> without IDictionaryEnumerator","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/41329. I was unable to verify against the linked repro because `SqlMapper.DapperRow` and `.DapperTable` are not public members.\r\n\r\nOriginally this was going to also have a perf fix that removes boxing of the dictionary enumerator as well, but I decided to just have the raw fix that enables `IDictionary<TKey, TValue>`-derived dictionaries to work properly.\r\n\r\nThis may have some conflicts with https://github.com/dotnet/corefx/pull/41482\r\n\r\nThis is expected to be ported to 3.1.","Url":"https://github.com/dotnet/corefx/pull/41903","RelatedDescription":"Open PR \"Support IDictionary<string,TValue> without IDictionaryEnumerator\" (#41903)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"509725417","IsPullRequest":false,"CreatedAt":"2019-10-21T04:37:50","Actor":"vsfeedback","Number":"39408","RawContent":null,"Title":"Suggested LINQ refactoring is not correct","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/740980/suggested-linq-refactoring-is-not-correct.html)._\n\n---\nIn WPF project\nIDE Suggest to convert LINQ in follow code, but converted result is compile error\n\n(WrapPanelMain is an instance of WrapPanel)\n            foreach (var item in WrapPanelMain.Children)\n            {\n            }\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 9/20/2019, 01:31 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 10/17/2019, 04:54 PM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n#### Ivan Basov [MSFT] on 10/18/2019, 11:55 AM: \n\n<p>Thank you for your feedback!</p>\n<p>I tried Convert To Linq with the following code:<br>\nvoid Do(Panel panel, bool mode)<br>\n{<br>\nforeach(var item in panel.Children)<br>\n{<br>\nCheckBox ch = item as CheckBox;<br>\nif (ch != null) ch.IsChecked = mode;<br>\n}<br>\n}</p>\n<p>The converted foreach looks like the following one:<br>\nforeach (var ch in from item in panel.Children<br>\nlet ch = item as CheckBox<br>\nwhere ch != null<br>\nselect ch)<br>\n{<br>\nch.IsChecked = mode;<br>\n}<br>\nwhich seems to be correct and he build succeeded. Could you please let us know what code is generated in you case?</p>\n\n#### Akira Kawamata on 10/19/2019, 00:34 AM: \n\n<p>In Visual Studio 16.3.5...</p><p>private void checkAllCommon(bool mode)<br>{<br>    foreach (var item in WrapPanelMain.Children)<br>    {<br>        CheckBox ch = item as CheckBox;<br>        if (ch != null) ch.IsChecked = mode;<br>    }<br>}</p><p> converted to...</p><p>private void checkAllCommon(bool mode)<br>{<br>    foreach (var ch in from item in WrapPanelMain.Children<br>                       let ch = item as CheckBox<br>                       where ch != null<br>                       select ch)<br>    {<br>        ch.IsChecked = mode;<br>    }<br>}</p><p> Error Message is...</p><p>エラー CS1934 ソース型 'UIElementCollection' のクエリ パターンの実装が見つかりませんでした。'Select' が見つかりません。範囲変数 'item'  の型を明示的に指定してください。 WpfApp3 C:\\xdelme\\WpfApp3\\WpfApp3\\MainWindow.xaml.cs 29 アクティブ</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39408","RelatedDescription":"Open issue \"Suggested LINQ refactoring is not correct\" (#39408)"},{"Id":"509582016","IsPullRequest":true,"CreatedAt":"2019-10-20T11:30:44","Actor":"NextTurn","Number":"39407","RawContent":null,"Title":"WIP Move new modifier after static","State":"open","Body":"To fit the default preferred order (IDE0036).\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/67158828-ca273f80-f36f-11e9-9d1d-c3eb6feef7a1.png)\r\n![image](https://user-images.githubusercontent.com/45985406/67158831-d7dcc500-f36f-11e9-99cb-015db5e03054.png)","Url":"https://github.com/dotnet/roslyn/pull/39407","RelatedDescription":"Open PR \"WIP Move new modifier after static\" (#39407)"},{"Id":"509575619","IsPullRequest":false,"CreatedAt":"2019-10-20T10:30:45","Actor":"NextTurn","Number":"39406","RawContent":null,"Title":"CS8321/IDE0051 false negative on recursive functions","State":"open","Body":"**Version Used**: Visual Studio 2019 Version 16.4\r\n\r\n**Steps to Reproduce**:\r\n\r\n```cs\r\nclass Program\r\n{\r\n    public static void Main()\r\n    {\r\n        int i;\r\n        void Local(int _) => Local(i);\r\n\r\n        static void StaticLocal() => StaticLocal();\r\n    }\r\n\r\n    private void Method() => this.Method();\r\n\r\n    private static void StaticMethod() => StaticMethod();\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nCS8321 is reported on `Local` and `StaticLocal`.\r\nIDE0051 is reported on `Method` and `StaticMethod`.\r\n\r\n**Actual Behavior**:\r\n\r\nCS8321 is not reported on `Local` and `StaticLocal`.\r\nIDE0051 is not reported on `Method` and `StaticMethod`.","Url":"https://github.com/dotnet/roslyn/issues/39406","RelatedDescription":"Open issue \"CS8321/IDE0051 false negative on recursive functions\" (#39406)"},{"Id":"509535046","IsPullRequest":false,"CreatedAt":"2019-10-20T02:23:16","Actor":"RikkiGibson","Number":"39405","RawContent":null,"Title":"ChangedText.WithChanges crashes when new deletion larger than old","State":"open","Body":"Do we also need to handle the case where the new deletion is larger than the old? It looks like the following fails with or without this PR:\r\n```C#\r\nvar original = SourceText.From(\"01234\");\r\nvar change1 = original.WithChanges(new TextChange(new TextSpan(1, 3), \"aa\"));\r\nvar change2 = change1.WithChanges(new TextChange(new TextSpan(1, 3), \"bb\"));\r\n\r\nvar changes = change2.GetTextChanges(original);\r\nAssert.Equal(\"0aa4\", change1.ToString());\r\nAssert.Equal(\"0bb\", change2.ToString());\r\n```\r\nWe can log a bug for this case and handle it separately.\r\n\r\n_Originally posted by @cston in https://github.com/dotnet/roslyn/pull/39258_\r\n\r\n/cc @ashmind","Url":"https://github.com/dotnet/roslyn/issues/39405","RelatedDescription":"Open issue \"ChangedText.WithChanges crashes when new deletion larger than old\" (#39405)"},{"Id":"509524649","IsPullRequest":false,"CreatedAt":"2019-10-20T00:03:47","Actor":"sandyarmstrong","Number":"39404","RawContent":null,"Title":"Adding readonly modifier via quick fix deletes preceding blank line","State":"open","Body":"**Version Used**: 3.4.0-beta1 (and 3.3.0)\r\n\r\n**Steps to Reproduce**:\r\n\r\n```csharp\r\n        const string c1 = \"hi\";\r\n        const string c2 = \"world\";\r\n\r\n        int x = 5;\r\n```\r\n\r\n1. Hover over `x`.\r\n2. Lightbulb will appear. Click it.\r\n3. Select \"Add readonly modifier\"\r\n\r\n**Expected Behavior**:\r\n\r\n```csharp\r\n        const string c1 = \"hi\";\r\n        const string c2 = \"world\";\r\n\r\n        readonly int x = 5;\r\n```\r\n\r\n**Actual Behavior**:\r\n\r\n```csharp\r\n        const string c1 = \"hi\";\r\n        const string c2 = \"world\";\r\n        readonly int x = 5;\r\n```\r\n\r\nI'm curious if this is related to https://github.com/dotnet/roslyn/issues/36759 (which appears to be fixed via https://github.com/dotnet/roslyn/pull/36994).\r\n\r\n_Originally reported via https://developercommunity.visualstudio.com/content/problem/703857/adding-readonly-modifer-via-altenter-delets-blank.html_\r\n","Url":"https://github.com/dotnet/roslyn/issues/39404","RelatedDescription":"Open issue \"Adding readonly modifier via quick fix deletes preceding blank line\" (#39404)"},{"Id":"509440900","IsPullRequest":true,"CreatedAt":"2019-10-19T12:03:59","Actor":"dotnet-bot","Number":"39403","RawContent":null,"Title":"Merge master to features/static-lambdas","State":"open","Body":"\nThis is an automatically generated pull request from master into features/static-lambdas.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/static-lambdas\ngit reset --hard upstream/features/static-lambdas\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/static-lambdas --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39403","RelatedDescription":"Open PR \"Merge master to features/static-lambdas\" (#39403)"},{"Id":"509440660","IsPullRequest":true,"CreatedAt":"2019-10-19T12:02:15","Actor":"dotnet-bot","Number":"39402","RawContent":null,"Title":"Merge master to release/dev16.5-preview1","State":"open","Body":"\nThis is an automatically generated pull request from master into release/dev16.5-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-release/dev16.5-preview1\ngit reset --hard upstream/release/dev16.5-preview1\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-release/dev16.5-preview1 --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39402","RelatedDescription":"Open PR \"Merge master to release/dev16.5-preview1\" (#39402)"},{"Id":"509359138","IsPullRequest":true,"CreatedAt":"2019-10-19T02:33:02","Actor":"dotnet-bot","Number":"39398","RawContent":null,"Title":"Merge master to release/dev16.5-preview1","State":"closed","Body":"\nThis is an automatically generated pull request from master into release/dev16.5-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-release/dev16.5-preview1\ngit reset --hard upstream/release/dev16.5-preview1\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-release/dev16.5-preview1 --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39398","RelatedDescription":"Closed or merged PR \"Merge master to release/dev16.5-preview1\" (#39398)"},{"Id":"509359466","IsPullRequest":true,"CreatedAt":"2019-10-19T02:32:51","Actor":"dotnet-bot","Number":"39400","RawContent":null,"Title":"Merge master to features/static-lambdas","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/static-lambdas.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/static-lambdas\ngit reset --hard upstream/features/static-lambdas\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/static-lambdas --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39400","RelatedDescription":"Closed or merged PR \"Merge master to features/static-lambdas\" (#39400)"},{"Id":"509236264","IsPullRequest":true,"CreatedAt":"2019-10-19T00:20:35","Actor":"tmat","Number":"39389","RawContent":null,"Title":"ProjectExternalErrorReporter: Avoid subscribing to solution build events multiple times and leaking the object","State":"closed","Body":"Fixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1002916","Url":"https://github.com/dotnet/roslyn/pull/39389","RelatedDescription":"Closed or merged PR \"ProjectExternalErrorReporter: Avoid subscribing to solution build events multiple times and leaking the object\" (#39389)"},{"Id":"509360741","IsPullRequest":true,"CreatedAt":"2019-10-19T00:11:23","Actor":"ivanbasov","Number":"39401","RawContent":null,"Title":"Completion: support local language identifiers and en-us keywords","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/29938\r\n\r\nTests borrowed from https://github.com/dotnet/roslyn/pull/30391\r\nIdea of implementation is suggested by @jasonmalinowski ","Url":"https://github.com/dotnet/roslyn/pull/39401","RelatedDescription":"Open PR \"Completion: support local language identifiers and en-us keywords\" (#39401)"},{"Id":"509359449","IsPullRequest":true,"CreatedAt":"2019-10-19T00:04:03","Actor":"dotnet-bot","Number":"39399","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"open","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39399","RelatedDescription":"Open PR \"Merge master to features/local-function-attributes\" (#39399)"},{"Id":"509352717","IsPullRequest":true,"CreatedAt":"2019-10-18T23:29:13","Actor":"tmat","Number":"39397","RawContent":null,"Title":"Clean up help link","State":"open","Body":"Removes ProjectType parameter from Bing help link query.\r\nAdds `Language` property to `DiagnosticData` so that it doesn't need to be calculated from `ProjectId` and `Workspace` later.\r\n\r\nFixes perf issue tracked by: https://github.com/dotnet/roslyn/issues/26717\r\nFixes: https://github.com/dotnet/roslyn/issues/37722\r\n\r\nRecommended to review each commit separately.","Url":"https://github.com/dotnet/roslyn/pull/39397","RelatedDescription":"Open PR \"Clean up help link\" (#39397)"},{"Id":"509323567","IsPullRequest":true,"CreatedAt":"2019-10-18T21:42:27","Actor":"tiesmaster","Number":"39396","RawContent":null,"Title":"Fix brace code style for switch expressions (fix for #36913)","State":"open","Body":"This fixes #36913 where `switch` expressions don't honor the user setting `NewLinesForBracesInControlBlocks`.\r\n\r\n/cc @sharwell @CyrusNajmabadi ","Url":"https://github.com/dotnet/roslyn/pull/39396","RelatedDescription":"Open PR \"Fix brace code style for switch expressions (fix for #36913)\" (#39396)"},{"Id":"509322800","IsPullRequest":true,"CreatedAt":"2019-10-18T21:40:20","Actor":"mavasani","Number":"39395","RawContent":null,"Title":"Performance fix in analyzer driver for CFG based analyzers","State":"open","Body":"We expose public APIs on IOperation related analysis contexts to allow flow based analyzers to fetch ControlFlowGraph for the operation block. Additionally, the analyzer driver caches the CFGs for operation block (when first requested by some flow based analyzer) to allow sharing CFGs between flow based analyzers. However, we were holding onto these for the entire lifetime of the compilation. This change fixes that by removing the CFG entry once a particular operation block has been fully analyzed.\r\n\r\nFixes VSFeedback issue [#998181](https://dev.azure.com/devdiv/DevDiv/_workitems/edit/998181)\r\n\r\nVerified no performance regression in benchmarks:\r\n\r\n1. Before this commit:\r\n```\r\n|                      Method | UnrollFactor |        Mean |    Error |   StdDev |      Median |         Min |         Max |       Gen 0 |      Gen 1 |     Gen 2 |  Allocated |\r\n|---------------------------- |------------- |------------:|---------:|---------:|------------:|------------:|------------:|------------:|-----------:|----------:|-----------:|\r\n|       CompileMethodsAndEmit |           16 |  4,950.5 ms | 26.68 ms | 24.96 ms |  4,942.9 ms |  4,912.7 ms |  4,996.9 ms |  83000.0000 | 24000.0000 |         - |  506.23 MB |\r\n|           SerializeMetadata |           16 |    294.6 ms |  2.77 ms |  2.72 ms |    294.0 ms |    289.5 ms |    298.8 ms |   3000.0000 |  1000.0000 |         - |   33.21 MB |\r\n|              GetDiagnostics |            1 |  3,661.5 ms | 15.32 ms | 12.79 ms |  3,659.7 ms |  3,642.0 ms |  3,679.7 ms |  78000.0000 | 21000.0000 |         - |  389.27 MB |\r\n| GetDiagnosticsWithAnalyzers |            1 | 13,329.6 ms | 78.06 ms | 73.02 ms | 13,296.6 ms | 13,219.2 ms | 13,459.5 ms | 232000.0000 | 63000.0000 | 2000.0000 | 1399.55 MB |\r\n```\r\n\r\n2. After this commit:\r\n```\r\n|                      Method | UnrollFactor |        Mean |    Error |   StdDev |      Median |         Min |         Max |       Gen 0 |      Gen 1 |     Gen 2 |  Allocated |\r\n|---------------------------- |------------- |------------:|---------:|---------:|------------:|------------:|------------:|------------:|-----------:|----------:|-----------:|\r\n|       CompileMethodsAndEmit |           16 |  4,957.1 ms | 45.94 ms | 40.72 ms |  4,945.3 ms |  4,911.2 ms |  5,061.0 ms |  83000.0000 | 22000.0000 |         - |  506.41 MB |\r\n|           SerializeMetadata |           16 |    289.0 ms |  3.66 ms | 10.02 ms |    287.8 ms |    273.5 ms |    318.1 ms |   3000.0000 |          - |         - |   33.21 MB |\r\n|              GetDiagnostics |            1 |  3,659.9 ms | 14.19 ms | 12.57 ms |  3,656.7 ms |  3,644.3 ms |  3,686.5 ms |  78000.0000 | 21000.0000 |         - |  389.26 MB |\r\n| GetDiagnosticsWithAnalyzers |            1 | 13,408.3 ms | 75.15 ms | 58.67 ms | 13,411.2 ms | 13,295.4 ms | 13,498.3 ms | 234000.0000 | 63000.0000 | 3000.0000 | 1409.24 MB |\r\n```","Url":"https://github.com/dotnet/roslyn/pull/39395","RelatedDescription":"Open PR \"Performance fix in analyzer driver for CFG based analyzers\" (#39395)"},{"Id":"509036565","IsPullRequest":true,"CreatedAt":"2019-10-18T20:36:32","Actor":"dotnet-bot","Number":"39384","RawContent":null,"Title":"Merge master to release/dev16.5-preview1","State":"closed","Body":"\nThis is an automatically generated pull request from master into release/dev16.5-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-release/dev16.5-preview1\ngit reset --hard upstream/release/dev16.5-preview1\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-release/dev16.5-preview1 --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39384","RelatedDescription":"Closed or merged PR \"Merge master to release/dev16.5-preview1\" (#39384)"},{"Id":"509281333","IsPullRequest":true,"CreatedAt":"2019-10-18T19:56:38","Actor":"mavasani","Number":"39394","RawContent":null,"Title":"Re-use semantic model when attempting to compute suppress message att…","State":"open","Body":"…ribute based suppressions\r\n\r\nCurrent implementation always creates a new semantic model for decoding local suppress message attributes (applied to each symbol). This change attempts to re-use the cached semantic models held by the analyzer driver to avoid rebinding cost.\r\n\r\nFixes VSFeedback issue [#973445](https://dev.azure.com/devdiv/DevDiv/_workitems/edit/973445)\r\n\r\nVerified no regression in perf benchmarks:\r\n\r\nBefore this change:\r\n```\r\n|                      Method | UnrollFactor |        Mean |     Error |    StdDev |      Median |         Min |         Max |       Gen 0 |      Gen 1 |     Gen 2 |  Allocated |\r\n|---------------------------- |------------- |------------:|----------:|----------:|------------:|------------:|------------:|------------:|-----------:|----------:|-----------:|\r\n|       CompileMethodsAndEmit |           16 |  4,857.7 ms |  10.11 ms |   7.89 ms |  4,859.1 ms |  4,841.8 ms |  4,868.6 ms |  83000.0000 | 24000.0000 |         - |  505.41 MB |\r\n|           SerializeMetadata |           16 |    280.2 ms |   2.79 ms |   4.09 ms |    280.1 ms |    273.4 ms |    289.3 ms |   3000.0000 |  1000.0000 |         - |    33.2 MB |\r\n|              GetDiagnostics |            1 |  3,580.0 ms |   6.14 ms |   5.13 ms |  3,580.2 ms |  3,572.5 ms |  3,592.2 ms |  78000.0000 | 22000.0000 |         - |  388.35 MB |\r\n| GetDiagnosticsWithAnalyzers |            1 | 13,022.7 ms | 128.31 ms | 157.58 ms | 12,990.0 ms | 12,846.8 ms | 13,534.0 ms | 254000.0000 | 68000.0000 | 3000.0000 | 1523.64 MB |\r\n```\r\n\r\nAfter this change:\r\n```\r\n|                      Method | UnrollFactor |        Mean |    Error |   StdDev |      Median |         Min |         Max |       Gen 0 |      Gen 1 |     Gen 2 |  Allocated |\r\n|---------------------------- |------------- |------------:|---------:|---------:|------------:|------------:|------------:|------------:|-----------:|----------:|-----------:|\r\n|       CompileMethodsAndEmit |           16 |  4,864.4 ms | 33.31 ms | 31.15 ms |  4,850.4 ms |  4,836.0 ms |  4,928.2 ms |  83000.0000 | 22000.0000 |         - |   505.5 MB |\r\n|           SerializeMetadata |           16 |    284.4 ms |  2.31 ms |  2.05 ms |    284.7 ms |    279.9 ms |    286.9 ms |   3000.0000 |          - |         - |   33.21 MB |\r\n|              GetDiagnostics |            1 |  3,603.0 ms | 17.84 ms | 14.90 ms |  3,601.8 ms |  3,586.8 ms |  3,640.6 ms |  77000.0000 | 18000.0000 |         - |  388.32 MB |\r\n| GetDiagnosticsWithAnalyzers |            1 | 13,003.7 ms | 68.14 ms | 63.74 ms | 13,002.5 ms | 12,857.8 ms | 13,124.9 ms | 255000.0000 | 68000.0000 | 3000.0000 | 1524.79 MB |\r\n```","Url":"https://github.com/dotnet/roslyn/pull/39394","RelatedDescription":"Open PR \"Re-use semantic model when attempting to compute suppress message att…\" (#39394)"},{"Id":"509037318","IsPullRequest":true,"CreatedAt":"2019-10-18T19:50:03","Actor":"dotnet-bot","Number":"39386","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39386","RelatedDescription":"Closed or merged PR \"Merge master to features/local-function-attributes\" (#39386)"},{"Id":"509037363","IsPullRequest":true,"CreatedAt":"2019-10-18T19:49:56","Actor":"dotnet-bot","Number":"39387","RawContent":null,"Title":"Merge master to features/static-lambdas","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/static-lambdas.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/static-lambdas\ngit reset --hard upstream/features/static-lambdas\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/static-lambdas --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39387","RelatedDescription":"Closed or merged PR \"Merge master to features/static-lambdas\" (#39387)"},{"Id":"509271829","IsPullRequest":true,"CreatedAt":"2019-10-18T19:32:26","Actor":"allisonchou","Number":"39393","RawContent":null,"Title":"Fix switch expression conversion creates broken code due to unspecific var return","State":"open","Body":"Fixes #38771 and fixes #39363 \r\n\r\nAlso changed the result of an existing test that seems to result in a compiler error.","Url":"https://github.com/dotnet/roslyn/pull/39393","RelatedDescription":"Open PR \"Fix switch expression conversion creates broken code due to unspecific var return\" (#39393)"},{"Id":"509271280","IsPullRequest":true,"CreatedAt":"2019-10-18T19:31:12","Actor":"RikkiGibson","Number":"39392","RawContent":null,"Title":"Extern local functions","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/39392","RelatedDescription":"Open PR \"Extern local functions\" (#39392)"},{"Id":"509250271","IsPullRequest":false,"CreatedAt":"2019-10-18T18:41:40","Actor":"vsfeedback","Number":"39391","RawContent":null,"Title":"C# Intellisense: Disable most recently used members","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/741677/c-intellisense-disable-most-recently-used-members.html)._\n\n---\nI'd like to be able to disable this feature: https://docs.microsoft.com/en-us/visualstudio/ide/visual-csharp-intellisense?view=vs-2019#most-recently-used-members\n\nIf I have a type **DateTime** and a variable **dateTime** and I've _most recently_ typed **DateTime**, then typing **datet.. ** doesn't autocomplete to **dateTime** but **DateTime**.\n\nWhich ends up happening a lot eg:\n\n&gt;var dateTime = DateTime.Now;\n&gt;dateT [TAB] =&gt; DateTime.\n\nIt's also mentioned here: https://stackoverflow.com/questions/43922535/autocomplete-case-issue\n\nPLEASE let me turn this off. :)\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 9/22/2019, 07:52 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 10/17/2019, 04:56 PM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39391","RelatedDescription":"Open issue \"C# Intellisense: Disable most recently used members\" (#39391)"},{"Id":"509242366","IsPullRequest":false,"CreatedAt":"2019-10-18T18:24:18","Actor":"scalablecory","Number":"39390","RawContent":null,"Title":"Bad IL format from Memory Stream","State":"open","Body":"_From @lpeixotoo on Friday, October 18, 2019 12:51:39 AM_\r\n\r\n# Bad IL format from Memory Stream\r\n\r\nHello guys,\r\n\r\nI'm trying to run a basic compilation sample by \r\n\r\n- Compiling a source code;\r\n- Emiting it into a memory stream;\r\n- Loading and Invoking;\r\n\r\nusing a docker environment with:\r\n\r\n- NET Core SDK (reflecting any global.json):\r\n  Version:   3.0.100\r\n Commit:    04339c3a26\r\n- Runtime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100/\r\n\r\n# General\r\n\r\nI've based myself in this [article](https://joshvarty.com/2016/01/16/learn-roslyn-now-part-16-the-emit-api/).\r\n\r\nA reproducible repository can be found [here](https://github.com/lpeixotoo/assembly-core).\r\n\r\n## Sample Code\r\n\r\nFor a quick follow up, here's my code\r\n\r\n```c#\r\nusing System;\r\nusing System.IO;                           \r\nusing System.Reflection;                   \r\nusing Microsoft.CodeAnalysis;              \r\nusing Microsoft.CodeAnalysis.CSharp;       \r\nusing Xunit;\r\n\r\nnamespace DotNetLib                        \r\n{                                          \r\n    public  class Lib                \r\n    {                                      \r\n                                           \r\n        [Fact]                                   \r\n        public int Compile()\r\n        {                                  \r\n\r\n           var tree = CSharpSyntaxTree.ParseText(@\"\r\n           using System;\r\n           public class MyClass\r\n           {\r\n               public static void Main()\r\n               {\r\n                   Console.WriteLine(\"\"Hello World!\"\");\r\n               }\r\n           }\");\r\n           \r\n           var mscorlib = MetadataReference.CreateFromFile(typeof(object).Assembly.Location);\r\n           var compilation = CSharpCompilation.Create(\"MyCompilation\",\r\n               syntaxTrees: new[] { tree }, references: new[] { mscorlib });\r\n           \r\n           //Emit to stream\r\n           var ms = new MemoryStream();\r\n           var emitResult = compilation.Emit(ms);\r\n\r\n           //Load into currently running assembly. Normally we'd probably\r\n           //want to do this in an AppDomain\r\n           var ourAssembly = Assembly.Load(ms.GetBuffer());\r\n           var type = ourAssembly.GetType(\"MyClass\");\r\n           \r\n           //Invokes our main method and writes \"Hello World\" :)\r\n           type.InvokeMember(\"Main\", BindingFlags.Default | BindingFlags.InvokeMethod, null, null, null);\r\n \t       return 0;                          \r\n        }\r\n    }                                      \r\n}\r\n\r\n```\r\n\r\nAm i doing something wrong?\r\n\r\n\r\n\r\n\r\n_Copied from original issue: dotnet/core#3654_","Url":"https://github.com/dotnet/roslyn/issues/39390","RelatedDescription":"Open issue \"Bad IL format from Memory Stream\" (#39390)"},{"Id":"509200262","IsPullRequest":false,"CreatedAt":"2019-10-18T16:56:50","Actor":"vsfeedback","Number":"39388","RawContent":null,"Title":"Lots of code refactoring providers crashes when entering [ before a function argument.","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/778350/lots-of-code-refactoring-providers-crashes-when-en.html)._\n\n---\nThe following refactoring providers crashes when I try to type a `[` before a function argument with almost the same stacktrace:\n\n- **ReplacePropertyWithMethodsCodeRefactoringProvider**\n- **ReplaceMethodWithPropertyCodeRefactoringProvider**\n- **CSharpIntroduceUsingStatementCodeRefactoringProvider**\n- **CSharpConvertAnonymousTypeToClassCodeRefactoringProvider**\n- **CSharpInitializeMemberFromParameterCodeRefactoringProvider**\n- **CSharpAddParameterCheckCodeRefactoringProvider**\n\nStacktrace (I just put one as an example since all are the same down to `at async Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringContextExtensions.TryGetRelevantNodeAsync[TSyntaxNode](&lt;Unknown Parameters&gt;)`:\n\n```\nSystem.ArgumentOutOfRangeException : Specified argument was out of the range of valid values.\nParameter name: position\n   at Microsoft.CodeAnalysis.SyntaxNode.FindTokenCore(Int32 position,Boolean findInsideTrivia)\n   at Microsoft.CodeAnalysis.Shared.Extensions.SyntaxNodeExtensions.GetInitialToken(SyntaxNode root,Int32 position,Boolean includeSkipped,Boolean includeDirectives,Boolean includeDocumentationComments)\n   at Microsoft.CodeAnalysis.Shared.Extensions.SyntaxNodeExtensions.FindTokenOnRightOfPosition(SyntaxNode root,Int32 position,Boolean includeSkipped,Boolean includeDirectives,Boolean includeDocumentationComments)\n   at Microsoft.CodeAnalysis.LanguageServices.AbstractSyntaxFactsService.GetStartOfNodeExcludingAttributes(SyntaxNode node)\n   at Microsoft.CodeAnalysis.LanguageServices.AbstractSyntaxFactsService.IsOnHeader[THoleSyntax](Int32 position,SyntaxNode ownerOfHeader,SyntaxNodeOrToken lastTokenOrNodeOfHeader,ImmutableArray`1 holes)\n   at Microsoft.CodeAnalysis.LanguageServices.AbstractSyntaxFactsService.IsOnHeader(Int32 position,SyntaxNode ownerOfHeader,SyntaxNodeOrToken lastTokenOrNodeOfHeader)\n   at Microsoft.CodeAnalysis.CSharp.CSharpSyntaxFactsService.IsOnParameterHeader(SyntaxNode root,Int32 position,SyntaxNode&amp; parameter)\n   at Microsoft.CodeAnalysis.CodeRefactorings.AbstractRefactoringHelpersService`2. &lt;ExtractNodesInHeader&gt;d__7.MoveNext()\n   at System.Linq.Enumerable. &lt;OfTypeIterator&gt;d__95`1.MoveNext()\n   at System.Linq.Enumerable.WhereEnumerableIterator`1.MoveNext()\n   at Microsoft.CodeAnalysis.CodeRefactorings.AbstractRefactoringHelpersService`2.AddNonHiddenCorrectTypeNodes[TSyntaxNode](IEnumerable`1 nodes,ArrayBuilder`1 resultBuilder,CancellationToken cancellationToken)\n   at async Microsoft.CodeAnalysis.CodeRefactorings.AbstractRefactoringHelpersService`2.GetRelevantNodesAsync[TExpressionSyntax,TArgumentSyntax,TSyntaxNode](&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringContextExtensions.GetRelevantNodesAsync[TSyntaxNode](&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringContextExtensions.TryGetRelevantNodeAsync[TSyntaxNode](&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.ReplacePropertyWithMethods.AbstractReplacePropertyWithMethodsService`5.GetPropertyDeclarationAsync[TIdentifierNameSyntax,TExpressionSyntax,TCrefSyntax,TStatementSyntax,TPropertySyntax]( &lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.ReplacePropertyWithMethods.ReplacePropertyWithMethodsCodeRefactoringProvider.ComputeRefactoringsAsync(&lt;Unknown Parameters&gt;)\n   at async Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringService.GetRefactoringFromProviderAsync(&lt;Unknown Parameters&gt;)\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\n```\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 10/15/2019, 11:25 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 10/18/2019, 09:43 AM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39388","RelatedDescription":"Open issue \"Lots of code refactoring providers crashes when entering [ before a function argument.\" (#39388)"},{"Id":"509037260","IsPullRequest":true,"CreatedAt":"2019-10-18T12:03:48","Actor":"dotnet-bot","Number":"39385","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39385","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#39385)"},{"Id":"508986990","IsPullRequest":false,"CreatedAt":"2019-10-18T10:13:43","Actor":"GreatFireWall","Number":"39383","RawContent":null,"Title":"How to use Span<T> in Interactive Window ?","State":"open","Body":"**Version Used**: \r\n`VS2017 15.9.17`\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Project install NuGet package `System.Memory`\r\n2. Initialize interactive with project\r\n3. Type `new byte[] { 1, 2, 3 }.AsSpan().ToArray()` then Enter\r\n\r\n**Expected Behavior**:\r\nOuput an array\r\n\r\n**Actual Behavior**:\r\n\r\n无法加载引用程序集来执行。\r\n  + Span<T>..ctor(T[])\r\n  + System.MemoryExtensions.AsSpan<T>(T[])\r\n\r\n![image](https://user-images.githubusercontent.com/4510984/67086252-e5107d00-f1d2-11e9-9367-6a8f6a62c632.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/39383","RelatedDescription":"Open issue \"How to use Span<T> in Interactive Window ?\" (#39383)"},{"Id":"508781346","IsPullRequest":true,"CreatedAt":"2019-10-18T07:57:17","Actor":"dotnet-bot","Number":"39379","RawContent":null,"Title":"Merge master to features/static-lambdas","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/static-lambdas.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/static-lambdas\ngit reset --hard upstream/features/static-lambdas\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/static-lambdas --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39379","RelatedDescription":"Closed or merged PR \"Merge master to features/static-lambdas\" (#39379)"},{"Id":"508849230","IsPullRequest":false,"CreatedAt":"2019-10-18T04:35:26","Actor":"davkean","Number":"39382","RawContent":null,"Title":"Undoing \"Move type\" in a SDK-style project does not remove the added class","State":"open","Body":"**Version Used**: \r\n\r\n**Steps to Reproduce**:\r\n\r\n1.  Create a  new  C# Console App (.NET Core) with the following in Program.cs:\r\n```\r\nusing System;\r\n\r\nnamespace ConsoleApp101\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello World!\");\r\n        }\r\n    }\r\n\r\n    class Bar\r\n    {\r\n    }\r\n\r\n}\r\n\r\n``` \r\n3. CTRL+. on `Bar` and choose Move type to \"Bar.cs\"\r\n4. CTRL+Z to undo\r\n\r\n**Expected Behavior**:\r\nFor the newly added file to removed\r\n\r\n**Actual Behavior**:\r\nActual, the newly added file is not removed. \r\n\r\nIn .NET Framework legacy based projects, it is.\r\n\r\n//cc @ryzngard ","Url":"https://github.com/dotnet/roslyn/issues/39382","RelatedDescription":"Open issue \"Undoing \"Move type\" in a SDK-style project does not remove the added class\" (#39382)"},{"Id":"508847267","IsPullRequest":false,"CreatedAt":"2019-10-18T04:27:31","Actor":"davkean","Number":"39381","RawContent":null,"Title":"Variable suggestions show duplicated filter buttons on completion window","State":"open","Body":"Not sure I understand what these filters do, the have the same tooltip:\r\n\r\n![image](https://user-images.githubusercontent.com/1103906/67065886-bc30bd80-f1bb-11e9-8cec-1daabb8b1022.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/39381","RelatedDescription":"Open issue \"Variable suggestions show duplicated filter buttons on completion window\" (#39381)"},{"Id":"508810851","IsPullRequest":false,"CreatedAt":"2019-10-18T02:02:26","Actor":"davkean","Number":"39380","RawContent":null,"Title":"Configure/Suppress code fixes are duplicated if the same issue exists on the same line","State":"open","Body":"When you have the same issue on the same line, Configure/Suppress code fixes get duplicated for each issue. These 6 menus items should be collapsed into 3 menu items:\r\n\r\n![image](https://user-images.githubusercontent.com/1103906/67060090-4ae70f80-f1a7-11e9-8e78-824841759fc6.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/39380","RelatedDescription":"Open issue \"Configure/Suppress code fixes are duplicated if the same issue exists on the same line\" (#39380)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"509511071","IsPullRequest":true,"CreatedAt":"2019-10-20T14:04:45","Actor":"MichalStrehovsky","Number":"7830","RawContent":null,"Title":"Add AppContext switch to not throw for Type.Name","State":"closed","Body":"Makes simple WinForms apps work in reflection-free mode without crashing.\r\n\r\nhttps://github.com/dotnet/winforms/blob/5df2ebfe70f2eaa2733c7f21e7e9e20f0be7e766/src/System.Windows.Forms/src/System/Windows/Forms/Control.cs#L4013","Url":"https://github.com/dotnet/corert/pull/7830","RelatedDescription":"Closed or merged PR \"Add AppContext switch to not throw for Type.Name\" (#7830)"},{"Id":"509511141","IsPullRequest":true,"CreatedAt":"2019-10-20T14:04:12","Actor":"MichalStrehovsky","Number":"7831","RawContent":null,"Title":"Scan for Marshal.SizeOf in reflection-disabled mode","State":"closed","Body":"I tacked scanning for `Marshal.SizeOf(typeof(SomeType))` on the reflection method body scanner. It felt a bit dirty, but it worked and we no longer had to worry about not having interop marshalling data for these types at runtime if we saw the pattern at compile time.\r\n\r\nBut we would like to scan for this even in the reflection disabled mode, which makes this whole business a bit messier.\r\n\r\nWe'll probably want to plug this into the RyuJIT scanner at some point, but we'll need to think about scanning some more (whether scanning is just an optimization, or whether scanning is needed for correctness, how/whether would RyuJIT report parameters, etc.).","Url":"https://github.com/dotnet/corert/pull/7831","RelatedDescription":"Closed or merged PR \"Scan for Marshal.SizeOf in reflection-disabled mode\" (#7831)"},{"Id":"509445042","IsPullRequest":true,"CreatedAt":"2019-10-20T02:03:38","Actor":"filipnavara","Number":"7828","RawContent":null,"Title":"Move portable thread pool to shared partition","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7828","RelatedDescription":"Closed or merged PR \"Move portable thread pool to shared partition\" (#7828)"},{"Id":"509508420","IsPullRequest":false,"CreatedAt":"2019-10-19T20:52:49","Actor":"jkotas","Number":"7829","RawContent":null,"Title":"Compilation crashes with System.IndexOutOfRangeException","State":"open","Body":"```\r\n  Unhandled Exception: System.IndexOutOfRangeException: Index was outside the bounds of the array.\r\n     at Internal.IL.Stubs.ILStubMethodIL.GetObject(Int32 token) in F:\\workspace\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\IL\\Stubs\\ILEmitter.cs:line 550\r\n     at Internal.IL.ILStackHelper.ComputeMaxStack(MethodIL methodIL) in F:\\workspace\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\IL\\ILStackHelper.cs:line 290\r\n     at Internal.IL.Stubs.ILStubMethodIL.get_MaxStack() in F:\\workspace\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\IL\\Stubs\\ILEmitter.cs:line 527\r\n     at Internal.JitInterface.CorInfoImpl.Get_CORINFO_METHOD_INFO(MethodDesc method, MethodIL methodIL, CORINFO_METHOD_INFO* methodInfo) in F:\\workspace\\_work\\1\\s\\src\\JitInterface\\src\\CorInfoImpl.cs:line 413\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL) in F:\\workspace\\_work\\1\\s\\src\\JitInterface\\src\\CorInfoImpl.cs:line 154\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode) in F:\\workspace\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\Compiler\\RyuJitCompilation.cs:line 139\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```","Url":"https://github.com/dotnet/corert/issues/7829","RelatedDescription":"Open issue \"Compilation crashes with System.IndexOutOfRangeException\" (#7829)"},{"Id":"508346108","IsPullRequest":true,"CreatedAt":"2019-10-17T18:57:35","Actor":"filipnavara","Number":"7825","RawContent":null,"Title":"Clean up portable thread pool for nullability and comment warnings","State":"closed","Body":"Also, use `EventWaitHandle.Set` instead of `WaitSubsystem.SetEvent`/`Interop.Kernel32.SetEvent` to make it easier to port.","Url":"https://github.com/dotnet/corert/pull/7825","RelatedDescription":"Closed or merged PR \"Clean up portable thread pool for nullability and comment warnings\" (#7825)"},{"Id":"508509256","IsPullRequest":false,"CreatedAt":"2019-10-17T14:18:24","Actor":"Const-me","Number":"7827","RawContent":null,"Title":"ARM32 Debug Info","State":"open","Body":"Unless ILC debug output is disabled in .csproj, CoreRT’s ilc program fails to compile stuff.\r\n\r\n[This assert fails.](https://github.com/dotnet/corert/blob/master/src/Native/ObjWriter/debugInfo/dwarf/dwarfGen.cpp#L436)\r\n\r\nI’ve added a bit more info and found out it’s VLT_FPSTK.\r\n\r\nUsing Debian 9.5, tried dotnet-sdk-2.1.802 and dotnet-sdk-2.2.402, same result.\r\n\r\nSteps to reproduce:\r\n\r\n`dotnet new console`\r\n\r\nPatch project file as [described there](https://github.com/dotnet/corert/blob/master/Documentation/how-to-build-and-run-ilcompiler-in-console-shell-prompt.md#compiling-source-to-native-code-using-the-ilcompiler-you-built) and also add `<DisableUnsupportedError>true</DisableUnsupportedError>`\r\n\r\nRun `dotnet publish --configuration Release --runtime linux-arm`\r\n\r\nNative stack at the time of failed assert. Stops at first managed frame ‘coz gdb can’t debug .NET, at least not by default.\r\n\r\n```\r\n#6  0xa352510c in EmitVarLocation(llvm::MCObjectStreamer*, ICorDebugInfo::NativeVarInfo const&, bool)\r\n#7  0xa3525ab2 in VarInfo::DumpLocsIfNeeded(llvm::MCObjectStreamer*, llvm::MCSection*, llvm::MCExpr const*)\r\n#8  0xa35260be in SubprogramInfo::DumpDebugLoc(llvm::MCObjectStreamer*, llvm::MCSection*)\r\n#9  0xa3525e3c in SubprogramInfo::Dump(UserDefinedDwarfTypesBuilder*, llvm::MCObjectStreamer*, llvm::MCSection*, llvm::MCSection*, llvm::MCSection*)\r\n#10 0xa3526b36 in DwarfGen::Finish()\r\n#11 0xa3501804 in ObjectWriter::EmitDebugModuleInfo()\r\n#12 0xa34fd5f0 in EmitDebugModuleInfo\r\ngdb can’t debug .net so the stack trace stops there.\r\n#13 0xa7bbe1ac in ?? ()\r\nBacktrace stopped: previous frame identical to this frame (corrupt stack?)\r\n```\r\n\r\nStrangely enough, comments in ObjectWriter.EmitObject method, there\r\nhttps://github.com/dotnet/corert/blob/8153381fb8f3cf0ef627011fe2fe87fb4a857540/src/ILCompiler.Compiler/src/Compiler/DependencyAnalysis/ObjectWriter.cs#L1044\r\nand a few other things\r\nhttps://github.com/dotnet/corert/blob/8153381fb8f3cf0ef627011fe2fe87fb4a857540/src/ILCompiler.Compiler/src/Compiler/DependencyAnalysis/ObjectWriter.cs#L1094-L1095\r\nsuggest that code was running on ARM32 at some point.\r\n\r\nIs something wrong on my side? If it’s just not supported, how easy it is to support?","Url":"https://github.com/dotnet/corert/issues/7827","RelatedDescription":"Open issue \"ARM32 Debug Info\" (#7827)"},{"Id":"508505637","IsPullRequest":false,"CreatedAt":"2019-10-17T14:13:06","Actor":"Const-me","Number":"7826","RawContent":null,"Title":"ARM32 crash at startup due to misalignment","State":"open","Body":"Here’s output from gdb:\r\n```\r\nThread 1 \"MyApp\" received signal SIGBUS, Bus error.\r\nRhpLockCmpXchg64 () at /home/linaro/corert/src/Native/Runtime/arm/Interlocked.S:47\r\n47                cmp          r6, r4\r\n(gdb) bt\r\n#0  RhpLockCmpXchg64 () at /home/linaro/corert/src/Native/Runtime/arm/Interlocked.S:47\r\n#1  0x0049c5ee in S_P_CoreLib_System_IO_UnmanagedMemoryStream__get_PositionPointer ()\r\n```\r\ngdb probably has off by 1 bug, I think it’s the [previous instruction](https://github.com/dotnet/corert/blob/master/src/Native/Runtime/arm/Interlocked.S#L46) which crashed the app.\r\n\r\nThe failing line of C# code is probably this https://github.com/dotnet/corefx/blob/master/src/Common/src/CoreLib/System/IO/UnmanagedMemoryStream.cs#L329 but I’m not 100% sure, as there’s no debug information in the binary due to another CoreRT ARM32 bug.\r\n\r\nI wasn’t able to make minimal repro, when I wrote a class with a long field, Interlocked.Read(ref long) returned the value without crashing. Probably clang optimizes away.\r\n\r\nAny idea how to fix or workaround?","Url":"https://github.com/dotnet/corert/issues/7826","RelatedDescription":"Open issue \"ARM32 crash at startup due to misalignment\" (#7826)"},{"Id":"506685516","IsPullRequest":false,"CreatedAt":"2019-10-14T20:24:48","Actor":"imback82","Number":"7824","RawContent":null,"Title":"Debugger.Launch() on macOS","State":"closed","Body":"Is `Debugger.Launch()` supported on macOS? I tested on macOS 10.15 with .NET Core 3.0.100 and it doesn't appear to work.\r\n\r\nIf it is not supported, is there a plan to support?\r\n\r\nThanks!\r\n\r\ncc: @rapoth\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7824","RelatedDescription":"Closed issue \"Debugger.Launch() on macOS\" (#7824)"},{"Id":"506047436","IsPullRequest":true,"CreatedAt":"2019-10-12T15:06:11","Actor":"Dotnet-GitSync-Bot","Number":"7823","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @EgorBo","Url":"https://github.com/dotnet/corert/pull/7823","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7823)"},{"Id":"505621245","IsPullRequest":true,"CreatedAt":"2019-10-11T08:45:30","Actor":"Dotnet-GitSync-Bot","Number":"7822","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7822","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7822)"},{"Id":"504527034","IsPullRequest":true,"CreatedAt":"2019-10-09T12:42:07","Actor":"MichalStrehovsky","Number":"7821","RawContent":null,"Title":"Delete unused method","State":"closed","Body":"Supplements #7819.","Url":"https://github.com/dotnet/corert/pull/7821","RelatedDescription":"Closed or merged PR \"Delete unused method\" (#7821)"},{"Id":"504357120","IsPullRequest":true,"CreatedAt":"2019-10-09T09:28:10","Actor":"Dotnet-GitSync-Bot","Number":"7820","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @EgorBo","Url":"https://github.com/dotnet/corert/pull/7820","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7820)"},{"Id":"504158790","IsPullRequest":true,"CreatedAt":"2019-10-09T09:27:34","Actor":"am11","Number":"7818","RawContent":null,"Title":"Fix exit code of build-native.sh","State":"closed","Body":"I noticed it in the docker container, that the failed build was successfully committing the container (false positive).","Url":"https://github.com/dotnet/corert/pull/7818","RelatedDescription":"Closed or merged PR \"Fix exit code of build-native.sh\" (#7818)"},{"Id":"504330608","IsPullRequest":true,"CreatedAt":"2019-10-09T01:16:45","Actor":"Dotnet-GitSync-Bot","Number":"7819","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @CoffeeFlux","Url":"https://github.com/dotnet/corert/pull/7819","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7819)"},{"Id":"503784732","IsPullRequest":false,"CreatedAt":"2019-10-08T02:17:07","Actor":"ZacharyJia","Number":"7817","RawContent":null,"Title":"Call generated dll from cpp crash","State":"open","Body":"I use a dll generated by corert in a cpp program, but it crashed when any statement runs.\r\nI'm using the `.net core 3.0` and the ilcompiler version is `1.0.0-alpha-28207-01`\r\n\r\nThe call stack is:\r\n```\r\ngenet.net.exe!S_P_CoreLib_System_Threading_LockHolder__Hold()\r\ngenet.net.exe!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner_Cctor__GetCctor()\r\ngenet.net.exe!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__EnsureClassConstructorRun()\r\ngenet.net.exe!S_P_CoreLib_System_Runtime_CompilerServices_ClassConstructorRunner__CheckStaticClassConstructionReturnGCStaticBase()\r\ngenet.net.exe!S_P_CoreLib_System_Text_Encoding__get_UTF8()\r\ngenet.net.exe!S_P_CoreLib_Internal_Runtime_CompilerHelpers_InteropHelpers__GetModuleName()genet.net.exe!S_P_CoreLib_Internal_Runtime_CompilerHelpers_InteropHelpers__FixupModuleCell()\r\ngenet.net.exe!S_P_CoreLib_Internal_Runtime_CompilerHelpers_InteropHelpers__ResolvePInvokeSlow()\r\ngenet.net.exe!S_P_CoreLib_Internal_Runtime_CompilerHelpers_InteropHelpers__ResolvePInvoke()\r\ngenet.net.exe!genet_net_genet_net_Program__LoadLibrary()\r\ngenet.net.exe!genet_net_genet_net_Program__show()\r\ndlldemo-cpp.exe!main()  line 17\tC++\r\n```\r\n\r\nThe crash message is:\r\n```\r\n0x00007FF9C9416408 (genet.net.exe)处(位于 dlldemo-cpp.exe 中)引发的异常: 0xC0000005: 读取位置 0x0000000000000000 时发生访问冲突。\r\n```","Url":"https://github.com/dotnet/corert/issues/7817","RelatedDescription":"Open issue \"Call generated dll from cpp crash\" (#7817)"},{"Id":"503304688","IsPullRequest":false,"CreatedAt":"2019-10-07T08:30:51","Actor":"yunekit","Number":"7816","RawContent":null,"Title":"sched_yield infinite loop","State":"open","Body":"The sched_yield()==0 infinite loop occurred during the running of the application, causing the process to block and fail to work.","Url":"https://github.com/dotnet/corert/issues/7816","RelatedDescription":"Open issue \"sched_yield infinite loop\" (#7816)"},{"Id":"503145779","IsPullRequest":true,"CreatedAt":"2019-10-06T21:09:25","Actor":"Dotnet-GitSync-Bot","Number":"7815","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7815","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7815)"},{"Id":"503134823","IsPullRequest":true,"CreatedAt":"2019-10-06T19:30:50","Actor":"MichalStrehovsky","Number":"7814","RawContent":null,"Title":"Add support for multithreaded compilation to ILC","State":"closed","Body":"Improves native compilation throughput by about 33%.\r\n\r\nValidated that the output with multithreading enabled (the new default) is byte-by-byte identical with the output produced by `--singlethreaded` (new command line option to ILC that disables multithreading).\r\n\r\nWe still can do a lot more in terms of compilation throughput (virtual method resolution is really slow and runs in one of the single threaded phases, and the object writing phase is pretty slow too and is fully single threaded too).\r\n\r\nContributes to #3925 (what's left is the extra-credit stuff).","Url":"https://github.com/dotnet/corert/pull/7814","RelatedDescription":"Closed or merged PR \"Add support for multithreaded compilation to ILC\" (#7814)"},{"Id":"502963591","IsPullRequest":true,"CreatedAt":"2019-10-06T04:53:29","Actor":"MichalStrehovsky","Number":"7811","RawContent":null,"Title":"Port fixes from CoreCLR","State":"closed","Body":"Skipping dotnet/coreclr#26792 and dotnet/coreclr#26793.","Url":"https://github.com/dotnet/corert/pull/7811","RelatedDescription":"Closed or merged PR \"Port fixes from CoreCLR\" (#7811)"},{"Id":"502974204","IsPullRequest":true,"CreatedAt":"2019-10-05T16:06:41","Actor":"MichalStrehovsky","Number":"7812","RawContent":null,"Title":"Remove global state tracking in DynamicInvokeTemplateDataNode","State":"closed","Body":"DynamicInvokeTemplateDataNode populated _methodToTemplateIndex in `GetIdForMethod` which is pretty bad from multithreading perspective (non-concurrent dictionary + ID that depends on ordering).\r\n\r\nI've moved this tracking into a separate node so that this is more explicit and properly sortable.","Url":"https://github.com/dotnet/corert/pull/7812","RelatedDescription":"Closed or merged PR \"Remove global state tracking in DynamicInvokeTemplateDataNode\" (#7812)"},{"Id":"502974267","IsPullRequest":true,"CreatedAt":"2019-10-05T16:04:50","Actor":"MichalStrehovsky","Number":"7813","RawContent":null,"Title":"Cache helpers used in IL scanner","State":"closed","Body":"We have a cache for these in CorInfoImpl (when compiling), but there's no cache in the scanner. This means we're re-resolving various named helpers in CoreLib. It's a bit of a waste of CPU time. Noticed this when running the compiler under a profiler.","Url":"https://github.com/dotnet/corert/pull/7813","RelatedDescription":"Closed or merged PR \"Cache helpers used in IL scanner\" (#7813)"},{"Id":"502935521","IsPullRequest":true,"CreatedAt":"2019-10-05T12:47:51","Actor":"MichalStrehovsky","Number":"7810","RawContent":null,"Title":"Update ObjWriter","State":"closed","Body":"Picks up #7802.","Url":"https://github.com/dotnet/corert/pull/7810","RelatedDescription":"Closed or merged PR \"Update ObjWriter\" (#7810)"},{"Id":"502780858","IsPullRequest":true,"CreatedAt":"2019-10-05T06:01:27","Actor":"Dotnet-GitSync-Bot","Number":"7809","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @idlerboris @stephentoub","Url":"https://github.com/dotnet/corert/pull/7809","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7809)"},{"Id":"502527358","IsPullRequest":false,"CreatedAt":"2019-10-04T12:27:49","Actor":"kstreichergb","Number":"7808","RawContent":null,"Title":"dotnet.exe hangs during shutdown","State":"closed","Body":"A hosted application using `BackgroundService` is hanging infinetly on shutdown, in particular when the console application is killed with ctrl+z.\r\n\r\nThe \"finish\" log in the finally in Main will be seen, but the dotnet.exe process keeps running\r\n\r\n```\r\npublic class BaseBackgroundService: BackgroundService{\r\n  private readonly IHostLifetime _hostLifetime;\r\n  private readonly IHostApplicationLifetime _iHostApplicationLifetime;\r\n  \r\n  public BaseBackgroundService(IHostLifetime hostLifetime,\r\n\t\t                             IHostApplicationLifetime iHostApplicationLifetime){\r\n    _hostLifetime = hostLifetime;\r\n    _iHostApplicationLifetime = iHostApplicationLifetime;\r\n }\r\n\r\n  protected override async Task ExecuteAsync(CancellationToken ct)\r\n  {\r\n  try{\r\n        await DoSomething();\r\n  }catch(OperationCanceledException ex)\r\n{\r\n /** ... Reached on CTRL+Z .... **/\r\n}\r\nfinally{\r\n       _iHostApplicationLifetime.StopApplication();\r\n        await _hostLifetime.StopAsync(ct); // clean exit\r\n  \tConsole.WriteLine(\"Completes as expected\");    \r\n  }\r\n/*...*/\r\n}\r\n\r\n```\r\n\tProgram.cs \r\n\tpublic static async Task Main(string[] args){\r\n\ttry\r\n\t{\r\n\t\tIHostBuilder hostBuilder = CreateHostBuilder(args);\r\n\r\n\t\tusing (IHost host = hostBuilder.UseConsoleLifetime().Build())\r\n\t\t{\r\n\t\t\tawait host.RunAsync();\r\n\t\t}\r\n\t}\r\n\t}finally{\r\n\t\tConsole.WriteLine(\"Finished - will be seen. Therefore main exits, but dotnet.exe keeps running\");\r\n\t}\r\n\t}\r\n```\r\n\r\nThe hosted BackgroundService will finish (OperationCanceledException) but the host.RunAsync() will never finish.\r\n\r\nUsing visual and break all\r\n\r\n![image](https://user-images.githubusercontent.com/50991928/66196903-9ecb0200-e699-11e9-812f-d3773be75aa4.png)\r\n\r\nAnd repeating it shows the Task ID changes, but the structure remains the same\r\n\r\n![image](https://user-images.githubusercontent.com/50991928/66197013-cf12a080-e699-11e9-8529-6ee9df7266ee.png)","Url":"https://github.com/dotnet/corert/issues/7808","RelatedDescription":"Closed issue \"dotnet.exe hangs during shutdown\" (#7808)"},{"Id":"501662946","IsPullRequest":false,"CreatedAt":"2019-10-02T18:48:52","Actor":"RalfKornmannEnvision","Number":"7807","RawContent":null,"Title":"GC thread suspension","State":"open","Body":"Maybe I just got something wrong here and I am looking at the wrong place.\r\n\r\nMy somewhat bigger test code finally runs stable for hours on my ARM64 system without trashing the heap or consuming all the physical memory. But so far it was only a single thread console application. For my use case I would need some threads.\r\n\r\nAs expected the GC need to suspend all managed threads to do a collection. For Windows there is some hijack code but the function for unix only contains a todo. I assume the reason for this is that the necessary os functions are missing. My target system has the same issue as I cannot suspend and resume threads there. As .net core should have the same issue on other posix systems I checked there and noticed that the jit engine has an option to inject gc probes. I assume that this is the only way to get the GC working in a multi thread environment were hijacking is not possible. Or did I missed something?\r\n\r\nIn the case I am right a short check showed me that the ilcompiler doesn't support the flags and callbacks for this yet?\r\n\r\nDo I need to add this to get the GC working with multiple threads or have I looked at the wrong place?\r\n\r\nIf this the right place does it make any sense to aim for the inline version of the gc probe or can this never work with corert and the call variant is the only solution? I already checked the code and noticed that even if the inline variant can work the call needs still be implemented as it is used in more complicated cases.","Url":"https://github.com/dotnet/corert/issues/7807","RelatedDescription":"Open issue \"GC thread suspension\" (#7807)"},{"Id":"501011867","IsPullRequest":true,"CreatedAt":"2019-10-01T18:56:37","Actor":"Dotnet-GitSync-Bot","Number":"7806","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7806","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7806)"},{"Id":"500653866","IsPullRequest":true,"CreatedAt":"2019-10-01T15:25:51","Actor":"Dotnet-GitSync-Bot","Number":"7805","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @adamsitnik","Url":"https://github.com/dotnet/corert/pull/7805","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7805)"},{"Id":"500408911","IsPullRequest":true,"CreatedAt":"2019-10-01T04:22:31","Actor":"Dotnet-GitSync-Bot","Number":"7804","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding @Youssef1313 @safern","Url":"https://github.com/dotnet/corert/pull/7804","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7804)"},{"Id":"499907137","IsPullRequest":true,"CreatedAt":"2019-09-29T14:16:14","Actor":"MichalStrehovsky","Number":"7803","RawContent":null,"Title":"Delete ReadyToRun portions of the compiler and test tree","State":"closed","Body":"The development of the ReadyToRun compiler moved to the CoreCLR repo. Keeping the sources here is just making it harder to keep the repos in sync.\r\n\r\nDeleting the testing speeds up the CI considerably.","Url":"https://github.com/dotnet/corert/pull/7803","RelatedDescription":"Closed or merged PR \"Delete ReadyToRun portions of the compiler and test tree\" (#7803)"},{"Id":"499773007","IsPullRequest":true,"CreatedAt":"2019-09-29T11:58:37","Actor":"MichalStrehovsky","Number":"7802","RawContent":null,"Title":"Fix Windows debug information for classes","State":"closed","Body":"Fixes a longstanding issue where we were emitting erroneous vfptr debug entries and incorrectly mangling class names. One could only inspect things as they were statically typed in the source (so if a variable was typed as `object` in the sources, you wouldn't see any fields in the native debugger, no matter what was assigned to it).\r\n\r\nIt wasn't too terrible, so I sort of just lived with it, but this should work.\r\n\r\nWith this, casting to base classes in the debugger works.\r\n\r\n## Before\r\n\r\n![before](https://user-images.githubusercontent.com/13110571/65817093-98550a00-e203-11e9-88ce-efd8109ae303.gif)\r\n\r\n\r\n## After\r\n\r\n![after](https://user-images.githubusercontent.com/13110571/65817095-9d19be00-e203-11e9-9ec7-73ffe4587b62.gif)\r\n","Url":"https://github.com/dotnet/corert/pull/7802","RelatedDescription":"Closed or merged PR \"Fix Windows debug information for classes\" (#7802)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"508725481","IsPullRequest":false,"CreatedAt":"2019-10-20T16:55:20","Actor":"pranavkm","Number":"3762","RawContent":null,"Title":"The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized","State":"closed","Body":"_From @DataTables on Thursday, October 17, 2019 10:16:11 AM_\r\n\r\n### Describe the bug\r\n\r\nWhen adding .NET Core 3.0 to a multi-targeted project I'm getting the error:\r\n\r\n> error NETSDK1073: The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized\r\n\r\nI've followed the [porting guide here](https://docs.microsoft.com/en-us/aspnet/core/migration/22-to-30?view=aspnetcore-2.2&tabs=visual-studio) but have been unable to resolve the issue. It looks like this also also been raised in [other issues](https://github.com/aspnet/AspNetCore/issues/4490), but the indications there are that this was an issue during the previews and should now be resolved.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1) Clone into [this repo](https://github.com/DataTables/Editor-NET) which is the one I'm trying to add .NET Core 3.0 build support to.\r\n2) Update the DataTables-Editor-Server.csproj file to target .NET Core 3.0:\r\n\r\n```\r\n<TargetFrameworks>netcoreapp2.1;netcoreapp3.0;net45;net46;net47</TargetFrameworks>\r\n```\r\n\r\nand add:\r\n\r\n```\r\n  <ItemGroup Condition=\"'$(TargetFramework)' == 'netcoreapp3.0'\">\r\n    <FrameworkReference Include=\"Microsoft.AspNetCore.App\" />\r\n    <PackageReference Include=\"Microsoft.CSharp\">\r\n      <Version>4.6.0</Version>\r\n    </PackageReference>\r\n  </ItemGroup>\r\n```\r\n\r\n3) Run `msbuild DataTables.sln` - observe errors for .NET Core 3.0 build.\r\n\r\nThe [documentation here](https://docs.microsoft.com/en-gb/dotnet/core/tools/csproj#implicit-package-references) notes that `Microsoft.AspNetCore.App\"` is implicit and doesn't need to be included, but the migration guide says it should if the SDK is `Microsoft.NET.Sdk` which I've been using.\r\n\r\n### Expected behavior\r\ndll targeting .NET Core 3.0 will be build along with the others.\r\n\r\n### Additional context\r\n\r\n```\r\n$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     fedora\r\n OS Version:  27\r\n OS Platform: Linux\r\n RID:         fedora.27-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  95a0a61858\r\n\r\n.NET Core SDKs installed:\r\n  2.1.505 [/usr/share/dotnet/sdk]\r\n  3.0.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nInstallation for .NET Core (and Framework via mono) build in Fedora was:\r\n\r\n```\r\nsudo rpm --import https://packages.microsoft.com/keys/microsoft.asc\r\nwget -q https://packages.microsoft.com/config/fedora/27/prod.repo\r\nsudo mv prod.repo /etc/yum.repos.d/microsoft-prod.repo\r\nsudo chown root:root /etc/yum.repos.d/microsoft-prod.repo\r\n\r\nsudo dnf install -y aspnetcore-runtime-2.1\r\nsudo dnf install -y dotnet-sdk-2.1-2.1.505\r\n\r\nsudo dnf install -y aspnetcore-runtime-3.0\r\nsudo dnf install -y dotnet-sdk-3.0\r\n\r\n# .NET Framework via Mono\r\nsudo rpm --import \"https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF\"\r\nsudo curl https://download.mono-project.com/repo/centos7-stable.repo | sudo tee /etc/yum.repos.d/mono-centos7-stable.repo\r\nsudo dnf install -y mono-devel mono-complete xsp msbuild\r\n```\r\n\r\n\r\n_Copied from original issue: aspnet/AspNetCore#15107_","Url":"https://github.com/dotnet/sdk/issues/3762","RelatedDescription":"Closed issue \"The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized\" (#3762)"},{"Id":"509441010","IsPullRequest":true,"CreatedAt":"2019-10-19T12:04:57","Actor":"dotnet-bot","Number":"3767","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3767","RelatedDescription":"Open PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#3767)"},{"Id":"507542154","IsPullRequest":true,"CreatedAt":"2019-10-19T00:38:48","Actor":"dotnet-bot","Number":"3755","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3755","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#3755)"},{"Id":"508065740","IsPullRequest":true,"CreatedAt":"2019-10-19T00:33:49","Actor":"swaroop-sridhar","Number":"3759","RawContent":null,"Title":"Add TFM check for `Publish-Trimmed-ReadyToRun-SingleFile`","State":"closed","Body":"Trying to publish a `.net core 2.1` app as a single file fails with the `PlaceHolderNotFoundInAppHostException` generated by the `HostWriter`.\r\n\r\nPublishing apps as a single file is only supported in `.net core 3` and higher.\r\nSo, this change adds a version check in the SDK.\r\n\r\nSimilarly, the check is also added for the `PublishReadyToRun` and `PublishTrimmed` options.\r\n\r\nFixes https://github.com/dotnet/sdk/issues/3728","Url":"https://github.com/dotnet/sdk/pull/3759","RelatedDescription":"Closed or merged PR \"Add TFM check for `Publish-Trimmed-ReadyToRun-SingleFile`\" (#3759)"},{"Id":"509364106","IsPullRequest":true,"CreatedAt":"2019-10-19T00:32:13","Actor":"swaroop-sridhar","Number":"3766","RawContent":null,"Title":"Add TFM check for `Publish-Trimmed-ReadyToRun-SingleFile`","State":"open","Body":"The options `PublishSingleFile`, `PublishReadyToRun`, and `PublishTrimmed` are only supported when targetting netcoreapp3.0 or later.\r\n\r\nTrying to publish to a different target (say `.netcoreapp2.1`) today:\r\n* `PublishSingleFile` fails with the `PlaceHolderNotFoundInAppHostException` generated by the `HostWriter`.\r\n* `PublishReadyToRun` and `PublishTrimmed` silently fail to turn on, but the `publish` itself suceeds.\r\n\r\nThis change adds an explicit TFM check to generate error/warnings for non-conforming targets.\r\n\r\n`PublishSingleFile`, `PublishReadyToRun`, and `PublishTrimmed` require the following conditions to be true:\r\n* `TargetFramework` is `netcoreapp`\r\n* `TargetFrameworkVersion` is at least `3.0`\r\n* The app is an executable (`OutputType=exe`)\r\n\r\nIf any of the conditions fail:\r\n* `PublishSingleFile` fails with an appropriate error\r\n* `PublishReadyToRun` and `PublishTrimmed` issue warnings, but publish itself succeeds.\r\n  This is because:\r\n    * The restriction against `classlibs` / `netstandard` frameworks may be relaxed in future releases\r\n    * The version check should ideally be a failure, but they are warnings for maximum compatibility with `3.0` release.\r\n\r\nFixes https://github.com/dotnet/sdk/issues/3728","Url":"https://github.com/dotnet/sdk/pull/3766","RelatedDescription":"Open PR \"Add TFM check for `Publish-Trimmed-ReadyToRun-SingleFile`\" (#3766)"},{"Id":"509239619","IsPullRequest":false,"CreatedAt":"2019-10-18T18:18:04","Actor":"pinkfloydx33","Number":"3765","RawContent":null,"Title":"PublishSingleFile=true does not include Content files","State":"open","Body":"I am working with a (non-web) .NET Core 3.0 console application and I am trying to use `PublishSingleFile=true`. While the single-file aspect does indeed work (I get one executable file), my application always crashes due to missing appsettings.json files. I've tried setting the files to Content/None, Copy Always/Newest. I also tried adding `<CopyToPublishDirectory>true</CopyToPublishDirectory>` and yet nothing seems to work.\r\n\r\nIf I create a brand new fresh _Web_-SDK project, the single file publish works and the content files are dropped right next to the published executable. I tried comparing the starter web project to my console application and I don't see a difference.  \r\n\r\nThe easiest reproduction I have is to create a blank console application project, add a text file to the project (as content or `none`) and then publish with the PublishSingleFile=true. The output does not contain the content files. \r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <RuntimeIdentifier>win-x64</RuntimeIdentifier>\r\n    <PublishSingleFile>true</PublishSingleFile>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Content Include=\"MyContentFile.txt\">\r\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory>\r\n      <CopyToPublishDirectory>Always</CopyToPublishDirectory>\r\n    </Content>\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIs this supposed to work for non-Web projects?\r\n\r\n> .NET Core SDK (reflecting any global.json):\r\n>  Version:   3.0.100\r\n>  Commit:    04339c3a26\r\n> \r\n> Runtime Environment:\r\n>  OS Name:     Windows\r\n>  OS Version:  10.0.18362\r\n>  OS Platform: Windows\r\n>  RID:         win10-x64\r\n>  Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n> \r\n> Host (useful for support):\r\n>   Version: 3.0.0\r\n>   Commit:  95a0a61858\r\n> \r\n> .NET Core SDKs installed:\r\n>   3.0.100-rc1-014190 [C:\\Program Files\\dotnet\\sdk]\r\n>   3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n> \r\n> .NET Core runtimes installed:\r\n>   Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n>   Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n>   Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]","Url":"https://github.com/dotnet/sdk/issues/3765","RelatedDescription":"Open issue \"PublishSingleFile=true does not include Content files\" (#3765)"},{"Id":"507479665","IsPullRequest":true,"CreatedAt":"2019-10-18T00:03:29","Actor":"vijayrkn","Number":"3752","RawContent":null,"Title":"Set the default publish profile only if the profile is not imported by NetSdk","State":"closed","Body":"Issue:\r\nWhen an SDK based WebJobs project is published without a profile, publish fails with missing Profile named 'FileSystem'.\r\n\r\nThis is because the default filesyste profile is shipped in WebSdk but is set in NetSdk.\r\n\r\nFix: Is to not default the publish profile to 'FileSystem' in NetSdk since NetSdk does not ship this default profile.\r\n\r\nImpact:\r\nThis breaks the Sdk based WebJobs publish scenarios.\r\n\r\nThere are 2 parts to this fix:\r\n\r\nRemoving the default publish profile from Netsdk\r\nIf the profile is not imported by NetSdk, setting the default publish profile in WebSdk & importing the default profile. This is the websdk part of the fix - aspnet/websdk#1006","Url":"https://github.com/dotnet/sdk/pull/3752","RelatedDescription":"Closed or merged PR \"Set the default publish profile only if the profile is not imported by NetSdk\" (#3752)"},{"Id":"508759665","IsPullRequest":true,"CreatedAt":"2019-10-17T22:50:12","Actor":"dotnet-maestro[bot]","Number":"3764","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191018.8\r\n- **Date Produced**: 10/18/2019 11:38 PM\r\n- **Commit**: 3a78795f4d10a6a23af378116cabf429efefea88\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19518.8\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3764","RelatedDescription":"Open PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3764)"},{"Id":"508207404","IsPullRequest":true,"CreatedAt":"2019-10-17T22:28:28","Actor":"dotnet-maestro[bot]","Number":"3761","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191017.4\r\n- **Date Produced**: 10/17/2019 6:49 PM\r\n- **Commit**: 78df3ddd8b40fbd93e10cea111b840c3ecfbb9fb\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19517.4\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3761","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3761)"},{"Id":"508734239","IsPullRequest":true,"CreatedAt":"2019-10-17T21:38:59","Actor":"dotnet-maestro[bot]","Number":"3763","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from nuget/nuget.client","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:eafa42d7-9e65-4d0e-b5a3-08d7219835fd)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Build**: 5.3.1.6268\r\n- **Date Produced**: 10/16/2019 6:20 AM\r\n- **Commit**: f2c670b0b7cdc018dc708666b2d58699d9654e42\r\n- **Branch**: refs/heads/release-5.3.x\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.3.1-rtm.6268\r\n\r\n[marker]: <> (End:eafa42d7-9e65-4d0e-b5a3-08d7219835fd)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3763","RelatedDescription":"Open PR \"[release/3.0.1xx] Update dependencies from nuget/nuget.client\" (#3763)"},{"Id":"507966389","IsPullRequest":true,"CreatedAt":"2019-10-17T04:25:09","Actor":"dotnet-maestro[bot]","Number":"3758","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191016.12\r\n- **Date Produced**: 10/17/2019 12:27 AM\r\n- **Commit**: 32085cbc728e1016c9d6a7bc105845f0f9eb6b47\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.1\r\n\r\n[marker]: <> (End:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3758","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#3758)"},{"Id":"507820459","IsPullRequest":true,"CreatedAt":"2019-10-17T01:38:16","Actor":"dotnet-maestro[bot]","Number":"3757","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191016.1\r\n- **Date Produced**: 10/16/2019 11:22 AM\r\n- **Commit**: f8aac40612d167c5beff554f569897177e786d3a\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19516.1\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3757","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3757)"},{"Id":"508178879","IsPullRequest":false,"CreatedAt":"2019-10-17T01:21:45","Actor":"syndicatedshannon","Number":"3760","RawContent":null,"Title":"FrameworkReference 'Microsoft.AspNetCore.App' was not recognized after downgrade","State":"open","Body":"Downgrade TargetFramework from netcoreapp3.0 to netcoreapp2.2 causes the following upon build:\r\n\r\n> The FrameworkReference 'Microsoft.AspNetCore.App' was not recognized\r\n\r\nClean/Rebuild All does not resolve. Deleting bin/obj folders in the specific projects reporting the FrameworkReference error does resolve. This causes unexpected failures when switching branches. Note the project also depends upon .NET Standard 2.1/2.0 projects, which have coincident upgrade/downgrades. However, cleaning those projects did not resolve.\r\n\r\nI can repro and try deleting something specific if it will help pin the problem down further.","Url":"https://github.com/dotnet/sdk/issues/3760","RelatedDescription":"Open issue \"FrameworkReference 'Microsoft.AspNetCore.App' was not recognized after downgrade\" (#3760)"},{"Id":"507542108","IsPullRequest":true,"CreatedAt":"2019-10-17T00:42:52","Actor":"dotnet-bot","Number":"3754","RawContent":null,"Title":"Merge release/2.2.4xx to release/3.0.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.4xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.4xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.4xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.4xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3754","RelatedDescription":"Closed or merged PR \"Merge release/2.2.4xx to release/3.0.1xx\" (#3754)"},{"Id":"507625049","IsPullRequest":true,"CreatedAt":"2019-10-16T08:11:16","Actor":"dotnet-maestro[bot]","Number":"3756","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191015.16\r\n- **Date Produced**: 10/16/2019 4:22 AM\r\n- **Commit**: 57ce1fec7a023a8e32cc64f8ce2637a0b3cdba35\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19515.16\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3756","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3756)"},{"Id":"507520224","IsPullRequest":true,"CreatedAt":"2019-10-15T23:32:25","Actor":"nguerrera","Number":"3753","RawContent":null,"Title":"Increase timeout and up ulimit -n","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3753","RelatedDescription":"Closed or merged PR \"Increase timeout and up ulimit -n\" (#3753)"},{"Id":"507453295","IsPullRequest":true,"CreatedAt":"2019-10-15T23:07:25","Actor":"vijayrkn","Number":"3750","RawContent":null,"Title":"Set the default publish profile only if the profile is not imported by NetSdk","State":"closed","Body":"Issue: \r\nWhen an SDK based WebJobs project is published without a profile, publish fails with missing Profile named 'FileSystem'.\r\n\r\nThis is because the default filesyste profile is shipped in WebSdk but is set in NetSdk. \r\n\r\nFix: Is to not default the publish profile to 'FileSystem' in NetSdk since NetSdk does not ship this default profile. \r\n\r\nImpact: \r\nThis breaks the Sdk based WebJobs publish scenarios. \r\n\r\nThere are 2 parts to this fix: \r\n1. Removing the default publish profile from Netsdk\r\n2. If the profile is not imported by NetSdk, setting the default publish profile in WebSdk & importing the default profile. This is the websdk part of the fix - https://github.com/aspnet/websdk/pull/1006\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3750","RelatedDescription":"Closed or merged PR \"Set the default publish profile only if the profile is not imported by NetSdk\" (#3750)"},{"Id":"505628347","IsPullRequest":true,"CreatedAt":"2019-10-15T22:58:19","Actor":"dotnet-maestro[bot]","Number":"3740","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191011.6\r\n- **Date Produced**: 10/11/2019 9:07 PM\r\n- **Commit**: f15311bdc5e9fbf4026a3099c32c5ea6b50d6236\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview2.19511.6\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3740","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3740)"},{"Id":"505812496","IsPullRequest":true,"CreatedAt":"2019-10-15T22:09:55","Actor":"dotnet-bot","Number":"3741","RawContent":null,"Title":"Merge release/2.1.8xx to release/2.2.4xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.8xx into release/2.2.4xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.8xx-to-release/2.2.4xx\ngit reset --hard upstream/release/2.2.4xx\ngit merge upstream/release/2.1.8xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.8xx-to-release/2.2.4xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3741","RelatedDescription":"Closed or merged PR \"Merge release/2.1.8xx to release/2.2.4xx\" (#3741)"},{"Id":"505812663","IsPullRequest":true,"CreatedAt":"2019-10-15T20:17:30","Actor":"dotnet-bot","Number":"3742","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3742","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#3742)"},{"Id":"507458154","IsPullRequest":true,"CreatedAt":"2019-10-15T20:12:56","Actor":"nguerrera","Number":"3751","RawContent":null,"Title":"Delete tmp file that was accidentally checked in","State":"open","Body":"Found creeping into master via merge from 3.1\r\n","Url":"https://github.com/dotnet/sdk/pull/3751","RelatedDescription":"Open PR \"Delete tmp file that was accidentally checked in\" (#3751)"},{"Id":"507174167","IsPullRequest":false,"CreatedAt":"2019-10-15T11:09:48","Actor":"mjcheetham","Number":"3749","RawContent":null,"Title":"Incorrect AppHost binary is published for dependant projects","State":"open","Body":"**Version information**\r\n.NET Core SDK 3.0.100\r\n\r\n**Reproduction steps**\r\nOn a Mac...\r\n  1. dotnet new console -n App1\r\n  1. dotnet new console -n App2\r\n  1. dotnet add App2 reference App1\r\n  1. dotnet publish App2 -r win-x64\r\n\r\nor on Windows...\r\n  1. dotnet new console -n App1\r\n  1. dotnet new console -n App2\r\n  1. dotnet add App2 reference App1\r\n  1. dotnet publish App2 -r osx-x64\r\n\r\n**Expected behaviour**\r\nIn the publish directory there exists App2.exe and App1.exe (plus all the runtime bits for Windows 64-bit). Visa-versa for publishing for osx-x64 on a Windows machine.\r\n\r\n**Actual behaviour**\r\nIn the publish directory there exists App2.exe and **_App1 (not a Windows PE)_** (plus all the runtime bits for Windows 64-bit). Visa-versa for publishing for osx-x64 on a Windows machine.\r\n\r\nOn a Mac publishing win-x64:\r\n```shell\r\n$ dotnet --version\r\n3.0.100\r\n$ pwd\r\n/Users/<user>/scratch/xpublishbug/App2/bin/Debug/netcoreapp3.0/win-x64/publish\r\n$ ls -l App*\r\n-rwxr-xr-x  1 <user>  <group>   80860 15 Oct 12:05 App1\r\n-rw-r--r--  1 <user>  <group>    4608 15 Oct 12:05 App1.dll\r\n-rw-r--r--  1 <user>  <group>     440 15 Oct 12:05 App1.pdb\r\n-rw-r--r--  1 <user>  <group>   30026 15 Oct 12:05 App2.deps.json\r\n-rw-r--r--  1 <user>  <group>    4096 15 Oct 12:05 App2.dll\r\n-rwxr--r--  1 <user>  <group>  158208 15 Oct 12:05 App2.exe\r\n-rw-r--r--  1 <user>  <group>     440 15 Oct 12:05 App2.pdb\r\n-rw-r--r--  1 <user>  <group>      26 15 Oct 12:05 App2.runtimeconfig.json\r\n```\r\n\r\nOn Windows publishing osx-x64:\r\n```powershell\r\nPS> dotnet --version\r\n3.0.100\r\nPS> ls App*\r\n\r\n\r\n    Directory: C:\\Users\\<user>\\scratch\\xpublishtest\\App2\\bin\\Debug\\netcoreapp3.0\\osx-x64\\publish\r\n\r\n\r\nMode                LastWriteTime         Length Name\r\n----                -------------         ------ ----\r\n-a----       2019-10-15  12:18 PM           4608 App1.dll\r\n-a----       2019-10-15  12:18 PM         159744 App1.exe\r\n-a----       2019-10-15  12:18 PM            444 App1.pdb\r\n-a----       2019-10-15  12:18 PM          80860 App2\r\n-a----       2019-10-15  12:18 PM          27495 App2.deps.json\r\n-a----       2019-10-15  12:18 PM           4096 App2.dll\r\n-a----       2019-10-15  12:18 PM            444 App2.pdb\r\n-a----       2019-10-15  12:18 PM             28 App2.runtimeconfig.json\r\n```","Url":"https://github.com/dotnet/sdk/issues/3749","RelatedDescription":"Open issue \"Incorrect AppHost binary is published for dependant projects\" (#3749)"},{"Id":"507060412","IsPullRequest":false,"CreatedAt":"2019-10-15T07:30:29","Actor":"josefblaha","Number":"3748","RawContent":null,"Title":"Build succeeds although a file was deleted in a referenced project","State":"open","Body":"In a specific situation, when a file is deleted, causing compile error, build still succeedes.\r\n1. Create a new .NET Standard library project ClassLibrary1 with public Class1.\r\n2. Add another library ClassLibrary2 to the solution.\r\n3. Add a project reference from ClassLibrary2 to ClassLibrary1.\r\n4. Create a new class Consumer1 in ClassLibrary2 with a field of type ClassLibrary1.Class1.\r\n5. dotnet build on solution succeeds (as expected).\r\n6. Delete ClassLibrary1.Class1 file.\r\n7. dotnet build on solution still succeeeds (although it shouldn't).\r\n\r\nPrepared solution in state of point 4:\r\n[FileDeleteTest.zip](https://github.com/dotnet/sdk/files/3727846/FileDeleteTest.zip)\r\n\r\ndotnet SDK 3.0.100\r\nVS 16.3.3\r\nWindows 10 1903\r\n","Url":"https://github.com/dotnet/sdk/issues/3748","RelatedDescription":"Open issue \"Build succeeds although a file was deleted in a referenced project\" (#3748)"},{"Id":"506814823","IsPullRequest":true,"CreatedAt":"2019-10-14T21:06:42","Actor":"dsplaisted","Number":"3747","RawContent":null,"Title":"Update branding to 3.1.100-preview2","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3747","RelatedDescription":"Closed or merged PR \"Update branding to 3.1.100-preview2\" (#3747)"},{"Id":"506742575","IsPullRequest":false,"CreatedAt":"2019-10-14T15:59:55","Actor":"mwpowellhtx","Number":"3746","RawContent":null,"Title":"Build pipeline failed to resolve CLI tooling after VS2019 installation","State":"open","Body":"We got errors in our build pipeline related to our internal CLI tooling failing to resolve correctly, in our estimation, following VS2019 installation.\r\n\r\nRunning the latest NuGet: `Version: 5.3.0.6260`\r\n\r\nIf it helps, our `dotnet --info` looks like this:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  6.1.7601\r\n OS Platform: Windows\r\n RID:         win7-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.508 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.509 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```","Url":"https://github.com/dotnet/sdk/issues/3746","RelatedDescription":"Open issue \"Build pipeline failed to resolve CLI tooling after VS2019 installation\" (#3746)"},{"Id":"506392857","IsPullRequest":true,"CreatedAt":"2019-10-13T22:49:14","Actor":"wli3","Number":"3745","RawContent":null,"Title":"WIP helix","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3745","RelatedDescription":"Open PR \"WIP helix\" (#3745)"},{"Id":"505951909","IsPullRequest":true,"CreatedAt":"2019-10-11T23:43:10","Actor":"dotnet-maestro[bot]","Number":"3744","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191011.02\r\n- **Date Produced**: 10/11/2019 3:47 PM\r\n- **Commit**: 19942e71998242599a0b6d4496066eaa38588af5\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.0.1\r\n\r\n[marker]: <> (End:ee7760b1-2875-4869-d002-08d7114cdbad)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3744","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#3744)"},{"Id":"505950895","IsPullRequest":false,"CreatedAt":"2019-10-11T16:37:45","Actor":"AArnott","Number":"3743","RawContent":null,"Title":"NETSDK1085: SatelliteDllsProjectOutputGroupDependencies causes P2P build during pack","State":"open","Body":"The SatelliteDllsProjectOutputGroupDependencies target results in P2Ps doing a build even when NoBuild=true, as caught by the NETSDK1085 error.\r\n\r\nSimple repro sln: [NETSDK1085Bug.zip](https://github.com/dotnet/sdk/files/3718674/NETSDK1085Bug.zip)\r\n\r\nTo repro:\r\n```\r\ndotnet build\r\ndotnet pack --no-build\r\n```\r\n\r\nScenario: I'm building an analyzer package which includes code fixes in one assembly and analyzers in a P2P reference. I need to gather satellite assemblies from the analyzer project, which is exactly what the `SatelliteDllsProjectOutputGroupDependencies` target is for and what I've been using for years in many projects. But apparently it results in triggering a build in the analyzer project even when I'm using `dotnet pack --no-build`.\r\n\r\nThis came up in my upgrade from .NET Core SDK 2.2.401 to 3.0.100.","Url":"https://github.com/dotnet/sdk/issues/3743","RelatedDescription":"Open issue \"NETSDK1085: SatelliteDllsProjectOutputGroupDependencies causes P2P build during pack\" (#3743)"},{"Id":"505569308","IsPullRequest":true,"CreatedAt":"2019-10-11T03:30:40","Actor":"dotnet-bot","Number":"3738","RawContent":null,"Title":"Merge release/3.0.1xx to release/3.1.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into release/3.1.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-release/3.1.1xx\ngit reset --hard upstream/release/3.1.1xx\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-release/3.1.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3738","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to release/3.1.1xx\" (#3738)"},{"Id":"505569333","IsPullRequest":true,"CreatedAt":"2019-10-11T00:05:30","Actor":"dotnet-bot","Number":"3739","RawContent":null,"Title":"Merge release/3.1.1xx to master","State":"open","Body":"\nThis is an automatically generated pull request from release/3.1.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.1.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.1.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.1.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3739","RelatedDescription":"Open PR \"Merge release/3.1.1xx to master\" (#3739)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"508132491","IsPullRequest":false,"CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Number":"131","RawContent":null,"Title":".NET Core 3.1.0 Preview 1","State":"open","Body":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 1\" (#131)"},{"Id":"506832844","IsPullRequest":false,"CreatedAt":"2019-10-14T19:26:10","Actor":"terrajobst","Number":"130","RawContent":null,"Title":".NET Core 3.0 concludes the .NET Framework API porting project","State":"open","Body":"We started in .NET Core 1.0 with a very minimal API set that only included \\~18K of the .NET Framework APIs. With [.NET Standard 2.0](https://devblogs.microsoft.com/dotnet/announcing-net-standard-2-0/), we tried to make it much more viable to share code between .NET Framework, .NET Core, and Xamarin which resulted in approximately 38K .NET Frameworks APIs being available in .NET Core 2.0. We also built the [Windows Compatibility Pack](https://devblogs.microsoft.com/dotnet/announcing-the-windows-compatibility-pack-for-net-core/) which made another 21K .NET Framework APIs available to .NET Core, resulting in almost 60K additional APIs. And in .NET Core 3.0 we added WPF and WinForms, which increased the number of .NET Framework APIs ported to .NET Core to over 120k, which is more than half of all .NET Framework APIs.\r\n\r\nIt’s also worth pointing out that we added about 62K APIs to .NET Core that don’t exist in .NET Framework. If we compare their total number of APIs, .NET Core has about 80% of the API surface of .NET Framework.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://user-images.githubusercontent.com/5169960/66777114-f8db7c80-ee7c-11e9-9161-acfe1c491586.png\" width=\"600\" align=\"center\">\r\n</p>\r\n\r\nWe announced that the [future of .NET](https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/) will be based on .NET Core. And at Build 2019, [Scott Hunter stated](https://www.youtube.com/watch?v=ZlO1utbB2GQ&t=54m20s) that AppDomains, remoting, Web Forms, WCF server, and Windows Workflow won’t be ported to .NET Core.\r\n\r\nWith .NET Core 3.0, we’re at the point where we’ve ported all technologies that are required for modern workloads, be that desktop apps, mobile apps, console apps, web sites, or cloud services. That’s not to say that we don’t have any gaps or opportunities for new technologies, but we generally believe we won’t be finding them in the .NET Framework code base anymore. Moving forward, we’re focusing our resources on incorporating new technologies.\r\n\r\nSimultaneously, we’re looking into releasing more of the [.NET Framework code base under the MIT license](https://github.com/microsoft/referencesource) on GitHub to allow the community to create OSS projects for technologies we’re not intending to bring to .NET Core. For example, there already are community projects for [CoreWF](https://github.com/UiPath/corewf) and [CoreWCF](https://github.com/CoreWCF/CoreWCF).\r\n\r\nWe’d like to thank everyone who filed issues with requests for APIs being ported. Those issues allowed us to prioritize and close the gaps that prevented people from porting to .NET Core.\r\n\r\nBut since we generally no longer plan to bring existing technologies from .NET Framework to .NET Core we’ll be closing all issues that are [labeled with port-to-core](https://github.com/dotnet/corefx/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3Aport-to-core).\r\n\r\n### Discussion\r\n\r\nTo discuss this issue, please comment on the corresponding issue at https://github.com/dotnet/corefx/issues/41769.","Url":"https://github.com/dotnet/announcements/issues/130","RelatedDescription":"Open issue \".NET Core 3.0 concludes the .NET Framework API porting project\" (#130)"},{"Id":"505445666","IsPullRequest":false,"CreatedAt":"2019-10-10T18:45:56","Actor":"TaraOverfield","Number":"129","RawContent":null,"Title":"October 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework October 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/)\r\n* [.NET Framework October 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/129","RelatedDescription":"Open issue \"October 2019 .NET Updates\" (#129)"},{"Id":"505328689","IsPullRequest":false,"CreatedAt":"2019-10-10T15:19:53","Actor":"carloreggiani","Number":"128","RawContent":null,"Title":"Docker Stop return status Exited \"(3221225786)\"","State":"closed","Body":"Hi\r\nI'm investigating a issue regarding official MCR images on a Win2019 server with Docker EE engine 19.03.2.\r\n\r\nThe images that I'm unsing are:\r\nmcr.microsoft.com/windows/servercore:1809\r\nmcr.microsoft.com/dotnet/framework/aspnet:4.8\r\n\r\nStopping containers based on these images (\"docker stop\" command) I'm getting: \r\n\"Exited (3221225786)\"\r\n\r\nOn linux a stop command normally return: \"Exited (137)\"\r\n\r\nIs it a normal behaviour? What's means 3221225786?\r\n\r\nThanks for any support\r\n\r\nCarlo","Url":"https://github.com/dotnet/announcements/issues/128","RelatedDescription":"Closed issue \"Docker Stop return status Exited \"(3221225786)\"\" (#128)"},{"Id":"504325600","IsPullRequest":false,"CreatedAt":"2019-10-08T23:14:11","Actor":"terrajobst","Number":"127","RawContent":null,"Title":"Consolidated repo names","State":"open","Body":"[ann]: https://github.com/dotnet/announcements/issues/119\r\n\r\nAs we announced earlier, we're [planning on consolidating][ann] some of the repositories in the dotnet org. While this is still work in progress, we'd like to give you an update on where we are.\r\n\r\nSo far, we've identified the following repos:\r\n\r\n* dotnet/**runtime**\r\n\t- Will contain [coreclr](https://github.com/dotnet/coreclr), [corefx](https://github.com/dotnet/corefx), [core-setup](https://github.com/dotnet/core-setup), [aspnet/Extensions](https://github.com/aspnet/Extensions), and some of [mono/mono](https://github.com/mono/mono)\r\n* [dotnet/**sdk**](https://github.com/dotnet/sdk)\r\n\t- Will contain [toolset](https://github.com/dotnet/toolset), [sdk](https://github.com/dotnet/sdk), [cli](https://github.com/dotnet/cli)\r\n* dotnet/**installer**\r\n\t- Renamed from [core-sdk](https://github.com/dotnet/core-sdk)\r\n* dotnet/**aspnetcore**\r\n\t- Moved from [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) and will also contain [aspnet/AspNetCore-Tooling](https://github.com/aspnet/AspNetCore-Tooling)\r\n* dotnet/**efcore**\r\n\t- Moved from [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore)\r\n* [dotnet/**winforms**](https://github.com/dotnet/winforms)\r\n\t- Unchanged, but listed for clarity \r\n* [dotnet/**wpf**](https://github.com/dotnet/wpf)\r\n\t- Unchanged, but listed for clarity\r\n\r\n### Name changes\r\n\r\nYou might notice that we changed our mind on naming from our [earlier announcement][ann]. Based on your feedback, we decided to go with **dotnet/runtime** instead of **dotnet/platform** and **dotnet/sdk** instead of **dotnet/cli**.\r\n\r\nSeveral people pointed out that the previous names weren't relatable to how we talk about the product, for example on download pages. So, we decided to match the product distributions as the primary design point for the new names. We generally refer to the bits you need to run your app as *the runtime* and the bits you need to build apps as *the SDK*. This also matches the naming chosen by other platforms.\r\n\r\n### New repos can't be used for .NET Core 3.x or earlier\r\n\r\nThe consolidated repositories are going to be about .NET 5 and going forward. It will not be possible to build .NET Core 3.1 or earlier from these repositories. As such, only the master branch from each of the repositories will be brought forward. There will be no porting of the individual release branches in the source repositories.\r\n\r\n### Personal names and email addresses\r\n\r\nSince we're planning on rebasing the history in the merged repositories, we can map your name and email address to new values as well. We primarily do this to support our friends in the LGBTQ+ community who have changed their names to reflect their identities. However, anybody is welcome to use this to change their email and name.\r\n\r\nWhatever your reason might be: we value your contributions and we hope this small gesture makes your life a little bit better. So if you changed your name/email – or simply prefer us to use different values – please [submit a request](mailto:dotnet@microsoft.com&subject=.NET%20repo%20consolidation%3A%20request%20for%20name%20change&body=Hey%2C%20%0A%0AI%E2%80%99d%20like%20to%20change%20my%20email%2Fdisplay%20name%20in%20the%20consolidated%20repo%20from%20%0A%0A%20%20%20%20%20%20%20%20My%20Old%20Name%20%3Cold.me%40example.org%3E%20%0A%0Ato%20%0A%0A%20%20%20%20%20%20%20%20My%20New%20Name%20%3Cnew.me%40example.org%3E%20%0A%0AThanks%21%20%0A).\r\n\r\n### More is coming\r\n\r\nWe'll share more updates in the upcoming months. Please let us know of any concerns that we haven't addressed yet!\r\n\r\n### Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27096.","Url":"https://github.com/dotnet/announcements/issues/127","RelatedDescription":"Open issue \"Consolidated repo names\" (#127)"},{"Id":"504304108","IsPullRequest":false,"CreatedAt":"2019-10-08T22:06:07","Actor":"MichaelSimons","Number":"126","RawContent":null,"Title":"4.7.x .NET Framework SDK Docker images no longer published","State":"open","Body":"# 4.7.x .NET Framework SDK Docker images no longer published\r\n\r\nThe [4.7.x .NET Framework SDK Docker images](https://hub.docker.com/_/microsoft-dotnet-framework-sdk) will no longer be published after Oct. 8, 2019.  The 4.8 image tags should be used as a replacement.\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [microsoft/dotnet-framework-docker#428](https://github.com/microsoft/dotnet-framework-docker/issues/428)\r\n\r\n## Details\r\n\r\nAny references to the following SDK tags should be updated to reference `4.8` instead:\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2019`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2019`\r\n\r\nIf you haven't migrated to using images from [MCR](https://github.com/dotnet/announcements/issues/101) and are still using the .NET Framework repos on Docker Hub, you will need to update your tag references to MCR.  This is because the 4.8 images only exist on MCR.  These are the following Docker Hub tags that are affected and should be updated to reference the [4.8 tags at the MCR location](https://hub.docker.com/_/microsoft-dotnet-framework-sdk):\r\n* `microsoft/dotnet-framework:4.7.1-sdk`\r\n* `microsoft/dotnet-framework:4.7.1-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-1803`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2019`","Url":"https://github.com/dotnet/announcements/issues/126","RelatedDescription":"Open issue \"4.7.x .NET Framework SDK Docker images no longer published\" (#126)"},{"Id":"502102886","IsPullRequest":false,"CreatedAt":"2019-10-03T14:30:16","Actor":"MichaelSimons","Number":"125","RawContent":null,"Title":"Alpine Docker images no longer include the tzdata package in 3.0","State":"open","Body":"# Alpine Docker images no longer include the tzdata package in 3.0\r\nBeginning with the 3.0 release, the `tzdata` package has been removed from all Alpine Docker images.\r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\ndotnet/dotnet-docker#1366\r\n\r\n## Details\r\n* https://github.com/dotnet/dotnet-docker/pull/1312\r\n\r\n\r\nThis package was removed because it wasn't required for the main set of scenarios and to have consistency between the runtime-deps images across all Linux distros.  This package is still installed in the 2.x images for Alpine so this will be something to be aware of when migrating from 2.x to 3.0.\r\n\r\n\r\nYou may be impacted by this if you use any of the Alpine images and your code has a dependency on the `tzdata` package, such as using the `System.TimeZoneInfo` API.  In that case, you'll need to update your Dockerfile to explicitly install the package:\r\n```\r\nRUN apk add --no-cache tzdata\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/125","RelatedDescription":"Open issue \"Alpine Docker images no longer include the tzdata package in 3.0\" (#125)"},{"Id":"497868605","IsPullRequest":false,"CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Number":"124","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.0","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n","Url":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.0\" (#124)"},{"Id":"494223006","IsPullRequest":false,"CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Number":"123","RawContent":null,"Title":".NET Core 3.0 RC 1","State":"open","Body":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Open issue \".NET Core 3.0 RC 1\" (#123)"},{"Id":"491801748","IsPullRequest":false,"CreatedAt":"2019-09-10T17:23:20","Actor":"leecow","Number":"122","RawContent":null,"Title":"September 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework September 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-security-and-quality-rollup/)\r\n* [.NET Framework September 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Open issue \"September 2019 .NET Updates\" (#122)"},{"Id":"491794046","IsPullRequest":false,"CreatedAt":"2019-09-10T17:04:46","Actor":"blowdart","Number":"121","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core","State":"open","Body":"# Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Announcement\r\n\r\nThe original announcement for this issue can be found at https://github.com/dotnet/announcements/issues/121\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on .NET Core 2.1.0-2.1.12, or .NET Core 2.2.0-2.2.6\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you have a version of .NET Core less than 2.1.13 or less than 2.2.7, you're vulnerable.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nPaul Ryman of VMware Sydney Engineering Team\r\n\r\n### External Links\r\n\r\n[CVE-2019-1301](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1301)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\nV1.1 (September 10, 2019): Fix version numbers\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-09-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/121","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\" (#121)"},{"Id":"489344106","IsPullRequest":false,"CreatedAt":"2019-09-04T19:14:05","Actor":"leecow","Number":"120","RawContent":null,"Title":".NET Core 3.0 Preview 9","State":"open","Body":".NET Core Preview 9 released today. https://github.com/dotnet/core/issues/3304 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-9/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-9/)\r\n\r\nPlease report any issues you find with 3.0.0 Preview 9, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/120","RelatedDescription":"Open issue \".NET Core 3.0 Preview 9\" (#120)"},{"Id":"480859726","IsPullRequest":false,"CreatedAt":"2019-08-14T19:54:26","Actor":"stephentoub","Number":"119","RawContent":null,"Title":"Consolidating .NET GitHub repos","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.*\r\n\r\nOver the next few months, we plan to consolidate several of the foundational repositories of .NET Core, including dotnet/coreclr and dotnet/corefx.\r\n\r\n.NET’s repository structure on GitHub was initially created in a fairly fine-grained manner, with the aim of enabling runtime agility and increased developer productivity.  However, this separation has led to a variety of complications for contributors and maintainers alike.  For example:\r\n- **Confusion about where issues should be opened.**  It’s not always clear in which repo an issue should be reported, complicated by the fact that some implementations actually span repositories (e.g. a type might be exposed through a reference assembly and have its tests in corefx but actually be implemented in System.Private.CoreLib in coreclr).\r\n- **Difficulty sharing source.**  System.Private.CoreLib is intricately connected to the rest of the runtime, and thus has lived with the runtime code.  That, however, means that although corefx has been intended as the place to share as much core library code as possible across any underlying runtime, we’ve needed to keep a significant body of code in System.Private.CoreLib, which then has meant it’s needed to be “mirrored” to each runtime repo (coreclr, corert, mono) that needs to consume it as source; similarly, corefx has similarly required access to much of that source, for example to use the same interop DllImports that are employed elsewhere in the runtimes.  The automatic mirror that shares this source needs to be maintained, and even when it has been, it’s often led to lag.  It’s also complicated developer processes, where to validate a change in one repo generally requires manually mirroring the code to other local repos in order to validate the change and ensure merging into one repo won’t break the others.\r\n- **PRs spanning multiple repos.**  Because the runtime, CoreLib, and the core libraries are all intricately linked, changing runtime behaviors, adding new APIs, or changing various build processes (e.g. improving static analysis) often requires multiple PRs carefully staged across time and multiple repos.  For example, to add a new method to a type like Dictionary<>, a developer must first make the source changes in her local coreclr repo and the test and reference assembly changes in her local corefx repo.  When satisfied with the fix, the developer must submit a PR to coreclr as well as a PR to corefx, the latter of which will fail.  Eventually the coreclr PR will be merged, and the changes will mirror to the other runtimes that also require the update.  Eventually those mirror PRs will be merged, and builds will be created containing the fix for each runtime.  At some point later those builds will be consumed into the corefx repo, after which point the original corefx PR can be re-validated and eventually merged.  That’s the best case; things get more complicated in situations where there are bidirectional dependencies.\r\n- **Building an installable runtime.** Self-hosting a custom built .NET requires intricate knowledge of how all the repos work and interact.  A developer can’t just clone a single repo, make a desired change, and easily produce an installer.\r\n- **Consistency.**  One goal we had for more fine-grained repos was to enable isolation and independence for teams working within each repo’s confines, but this has led to non-trivial duplication of effort on things like build systems and CI, and then the resulting lack of consistency as each system ends up diverging from the others.\r\n\r\nThe issues go beyond the runtime.  For example, the ASP.NET maintainers and community did a great job in the past year or so consolidating from ~55 repos down to ~5 repos, but that’s still more repos than is desirable, leading to similar issues as cited above for the runtime.  On top of that, these ASP.NET repositories are in the aspnet GitHub org, which adds an additional set of issues, for example:\r\n- **Complications moving issues between repos.**  If a developer opens an issue in aspnet/aspnetcore and it’s determined that the cause of the issue is actually in dotnet/corefx, there is no GitHub mechanism to enable easily moving that issue across the aspnet to dotnet organizational boundary.\r\n- **Permissions.** Each organization’s permissions end up needing to be managed and maintained separately.\r\n\r\nThe issues extend into tooling as well.  For example, we currently have multiple repositories that all logically make up the dotnet CLI, but actually creating a working installer spans multiple repos.\r\n\r\n### Plan\r\n\r\nTo address these issues, we’re planning to make some changes to our repository structure:\r\n- **dotnet/platform.**  We plan to combine dotnet/coreclr, dotnet/corefx, dotnet/corert, dotnet/core-setup, and the relevant portions of mono/mono into a new dotnet/platform repo.  Everything needed to build and produce the Microsoft.NETCore.App shared framework will be in this repo.  We will no longer suffer from the complications of source mirroring.  Features like changing runtime behavior or adding an API will no longer require a complicated dance across multiple repos.  Etc.\r\n- **dotnet/aspnetcore.**  We plan to move the existing aspnet/aspnetcore repository into the dotnet organization.  Along with that, we aim to combine a variety of the other aspnet repositories into aspnetcore, such as aspnet/blazor.  Whether repos like entityframeworkcore remain separate or combined remains an open question.  A goal is that, just as dotnet/platform will be responsible for the creation of Microsoft.NETCore.App, dotnet/aspnetcore will be responsible for the creation of Microsoft.AspNETCore.App.\r\n- **dotnet/cli.**  We plan to combine dotnet/toolset and dotnet/sdk into the dotnet/cli repo.\r\n\r\n### FAQ\r\n\r\n#### Why are we merging repos?\r\n\r\nWe believe we can significantly improve several aspects of .NET on GitHub by combining repos, benefiting both maintainers and contributors.  These improvements will manifest in a variety of ways, such as in better issue management, much easier models of contribution, and easier and faster ways to build and install the resulting bits.\r\n\r\n####  What will happen to the aspnet org?\r\n\r\nThe aspnet org as a separate entity is legacy and artificial.  In time we hope to absorb it into the dotnet org and sunset the aspnet org.\r\n\r\n#### Will the coreclr and corefx repos go away?\r\n\r\nWith the help of GitHub, we plan to migrate all issues from these repos to the new dotnet/platform repo, and then lock down creation of additional issues, such that the repos will no longer be used for issue management.  We will also inhibit the creation of PRs to the master branch, which will effectively become an archive for read-only review of history.  In this sense, these repos will be archived, and no active development will happen with them.  However, we plan to continue servicing previous .NET Core releases out of these repos, so the various release branches (e.g. release/2.1, release/3.0, etc.) will continue to see (limited) activity.\r\n\r\n#### Will the mono repo go away?\r\n\r\nNo. mono/mono contains the source for the full mono stack and will continue to live on happily.  We will simply be moving the managed source associated with System.Private.CoreLib and copying the relatively small amount of source that makes up the native mono runtime to dotnet/platform.  We may choose to then use some mirroring technology to keep the runtime copy in sync (this will, however, not suffer from the same mirroring issues we currently experience, as we would not be mirroring between two components required to build the same binaries), or we may choose to let them diverge and manually sync only those changes deemed relevant to both implementations.\r\n\r\n#### Will the corert repo go away?\r\n\r\nYes.  We plan to retire/archive the corert repo.  Some of the technology in the corert repo will be migrated to the master branch of dotnet/platform, where it will be productized as part of .NET.  Other portions of the corert repo will be migrated to feature branches of dotnet/platform, where the experimentation can continue.  In this way, we will use feature branches to continue experimenting with the corert technology, while making it easier to share portions with its shipping counterpart and also graduate functionality into master if/when it’s ready.\r\n\r\n#### Does this mean there will be a single repo for all of .NET?\r\n\r\nNo.  We will be reducing the number of repos that contribute to .NET, but currently we do not believe that going all the way down to one is the right answer.\r\n\r\n#### Doesn’t this mean that issue and PR tracking will now be overwhelming?\r\n\r\nIt is already the case that the vast majority of issues in a given repo are not relevant to any individual developer, and with several thousand open issues in each repo and on the order of a hundred open PRs in each, we already need systems (e.g. labels) to successfully manage issues and PRs.  As such, we don’t believe the merging will have a significant impact on this aspect of developer productivity.  If it turns out to have an unexpectedly large negative impact, we will work with the community to find ways to mitigate the problem.  However, there are already a multitude of successful open source projects on GitHub with at least an order of magnitude more issues.\r\n\r\n#### What will happen to existing issues?\r\n\r\nWith the help of GitHub functionality, we plan to migrate all issues from old repos (e.g. dotnet/coreclr, dotnet/corefx) to the new repos (e.g. dotnet/platform).  We may also use this as a forcing function to revisit stale issues and either close those that are no longer relevant or reinvigorate those that are demanding of more immediate attention.\r\n\r\n#### What about git history?\r\n\r\nIn general, we plan to keep history, such that history from each constituent repo will be a part of the new repo.  However, we have made some mistakes in the past (e.g. large binaries, multitudes of automated PRs for flowing bits and source between repos, etc.), and we plan to rewrite history to correct those mistakes wherever possible and impactful.  Some rough calculations suggest this could end up significantly reducing the size of the repos as well as the time it takes to clone, which should not only help developers approaching the project but also CI.  This will end up meaning that SHAs may be different in the new repo than they were in the old repo; as previously mentioned, however, any references to the old SHAs in the old repos will continue to work, as those repos will remain accessible.\r\n\r\n#### Will I still show up in the contributor list due to previous contributions?\r\n\r\nYes.  We plan to merge all such history.\r\n\r\n#### Will this break debugging with SourceLink?\r\n\r\nNo.  The existing repos will continue to be accessible, and commit SHAs there will remain unchanged.\r\n\r\n#### Might plans change?\r\n\r\nSure.  Part of the goal of posting this announcement is to hear from you, hear about additional benefits you're excited about, and hear about additional concerns we may not have considered.  We will include such ideas in our planning and course correct as necessary.\r\n\r\n## Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.\r\n","Url":"https://github.com/dotnet/announcements/issues/119","RelatedDescription":"Open issue \"Consolidating .NET GitHub repos\" (#119)"},{"Id":"470434872","IsPullRequest":false,"CreatedAt":"2019-07-19T16:54:02","Actor":"richlander","Number":"118","RawContent":null,"Title":".NET Core master branches have switched to \"5.0\"","State":"open","Body":"# .NET Core master branches have switched to \"5.0\"\r\n\r\nVarious .NET Core repos have switched their `master` branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. This is very similar to how we approached 2.x and 3.0 projects. As context, `master` branches produced 3.0 builds for the entire period of the 2.2 project.\r\n\r\nAt present, this change is only relevant if you contribute to .NET Core repositories. Otherwise, we recommend that you wait for the 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/core #3059](https://github.com/dotnet/core/issues/3059)\r\n\r\n## Details\r\n\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n- [dotnet/coreclr](https://github.com/dotnet/coreclr)\r\n- [dotnet/corefx](https://github.com/dotnet/corefx)\r\n- [dotnet/core-setup](https://github.com/dotnet/core-setup)\r\n\r\nYou can see that [5.0 .NET Core Runtime builds](https://github.com/dotnet/core-setup#daily-builds) are now being built and published at dotnet/core-setup.\r\n\r\nIn large part, we switched `master` to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 released has progressed, we've had to increase scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nNotably, [dotnet/core-sdk](https://github.com/dotnet/core-sdk) is not yet producing 5.0 builds. We expect that the dotnet/core-sdk master branch will continue as a 3.0 branch for 2-3 months while we finish up the .NET Core 3.0 project.\r\n\r\nAt present, there is no developer experience for 5.0. We are waiting on the dotnet/core-sdk repo to switch to 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. We'll update this issue when a 5.0 SDK comes available.","Url":"https://github.com/dotnet/announcements/issues/118","RelatedDescription":"Open issue \".NET Core master branches have switched to \"5.0\"\" (#118)"},{"Id":"465501070","IsPullRequest":false,"CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Number":"117","RawContent":null,"Title":"System.Text.Json usability study results","State":"open","Body":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies 😊\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304.","Url":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Open issue \"System.Text.Json usability study results\" (#117)"},{"Id":"465034831","IsPullRequest":false,"CreatedAt":"2019-07-08T03:13:38","Actor":"leecow","Number":"116","RawContent":null,"Title":"Updates to releases.json (.NET Core release metadata)","State":"open","Body":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, MSBuild, NuGet, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is an example of the new array based on the upcoming July update.\r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n    \"sdk\": {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": []\r\n    },\r\n    \"sdks\": [\r\n        {\r\n            \"version\": \"2.2.301\",\r\n            \"version-display\": \"2.2.301\",\r\n            \"runtime-version\": \"2.2.6\",\r\n            \"vs-version\": \"16.1.3\",\r\n            \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n            \"csharp-version\": \"7.3\",\r\n            \"fsharp-version\": \"4.5\",\r\n            \"vb-version\": null,\r\n            \"files\": []\r\n        },\r\n        {\r\n          \"version\": \"2.2.205\",\r\n          \"version-display\": \"2.2.205\",\r\n          \"runtime-version\": \"2.2.6\",\r\n          \"vs-version\": \"16.0.5\",\r\n          \"vs-support\": \"Visual Studio 2019 (v16.0)\",\r\n          \"csharp-version\": \"7.3\",\r\n          \"fsharp-version\": \"4.5\",\r\n          \"vb-version\": null,\r\n          \"files\": []\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the community which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility compromises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Open issue \"Updates to releases.json (.NET Core release metadata)\" (#116)"},{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1184928601394671616","CreatedAt":"2019-10-17T20:26:08+00:00","UserScreenname":"dotnet","Text":"Take the Fall .NET Core Survey https://t.co/QoL9pUXuID","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":64,"FavoriteCount":52,"RawContent":null},{"Id":"1184876458621095936","CreatedAt":"2019-10-17T16:58:56+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":12,"FavoriteCount":2,"RawContent":null},{"Id":"1184446392829386752","CreatedAt":"2019-10-16T12:30:00+00:00","UserScreenname":"dotnet","Text":"🚀 Coding F# in Visual Studio Code with Ionide 🚀\n\nIn this episode, @_cartermp sits down with @cecilphillip to talk a… https://t.co/5AJoiFdoeK","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":49,"FavoriteCount":29,"RawContent":null},{"Id":"1184165499212423168","CreatedAt":"2019-10-15T17:53:50+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Core 3.1 Preview 1 https://t.co/HAD1JAsf3j","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":205,"FavoriteCount":110,"RawContent":null},{"Id":"1184165405574586368","CreatedAt":"2019-10-15T17:53:28+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9qNspl Core updates in .NET Core 3.1 Preview 1 https://t.co/Dho82BhBu1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":65,"FavoriteCount":39,"RawContent":null},{"Id":"1184151270635921408","CreatedAt":"2019-10-15T16:57:18+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":18,"FavoriteCount":6,"RawContent":null},{"Id":"1182709231746727941","CreatedAt":"2019-10-11T17:27:09+00:00","UserScreenname":"dotnet","Text":"We've been working hard to make IoT development on .NET a great experience.\n\nIn this episode of #OnDotNet… https://t.co/psNXS59gtS","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":72,"FavoriteCount":32,"RawContent":null}]}},"RunOn":"2019-10-21T05:30:36.2559368Z","RunDurationInMilliseconds":15375}