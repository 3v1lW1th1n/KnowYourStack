{"Data":{"Blog":{"FeedItems":[{"Title":"Export To Application Insights With AppCenter Continuous Export","PublishedOn":"2018-07-10T03:35:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Five-star mobile apps have one special feature: they don’t let go of their users. This can be achieved by understanding your app, the app’s users, and how these users interact with your app. The deep...","Href":"https://blog.xamarin.com/appcenter-continuous-export-application-insights/","RawContent":null},{"Title":"The Xamarin Show: Exploring Awesome Xamarin & Visual Studio Features","PublishedOn":"2018-07-05T18:50:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Each week on The Xamarin Show we explore the latest and greatest in Xamarin development by looking at new features built into Visual Studio, build native cross-platform user interfaces with...","Href":"https://blog.xamarin.com/xamarin-show-ux-xamarinforms-apis-xamarin-essentials/","RawContent":null},{"Title":"Xamarin Podcast: What’s New in Visual Studio 2017, Xamarin.Forms, and the Android designer","PublishedOn":"2018-07-02T19:36:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, Pierce Boggan and James Montemagno discuss the latest &#038; greatest in mobile .NET development, including Xamarin.Forms 3.0 and 3.1, Visual Studio 2017...","Href":"https://blog.xamarin.com/xamarin-podcast-vs2017-xamarinforms-android-designer/","RawContent":null},{"Title":"Use MSBuild to Define Advanced Android VersionCode","PublishedOn":"2018-06-28T16:20:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With the introduction of Xamarin.Android v7.2, two new MSBuild properties were also introduced in order to make maintaining Android VersionCode for Android apps even easier: AndroidVersionCodePattern...","Href":"https://blog.xamarin.com/advanced-android-versioncode/","RawContent":null},{"Title":"What’s New In the Xamarin Android Designer","PublishedOn":"2018-06-25T20:10:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Backed by your feedback, our team has been able to improve the Xamarin Android Designer significantly since it&#8217;s initial release a few years back. Now, we have a ton of new and exciting work...","Href":"https://blog.xamarin.com/future-xamarin-android-designer/","RawContent":null},{"Title":"Getting Android Apps Ready for Google Play’s Target API Level Requirements","PublishedOn":"2018-06-21T18:46:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Developing Android applications is a unique experience, as it often involves taking advantage of the latest capabilities of Android while still providing backward compatibility to older Android...","Href":"https://blog.xamarin.com/android-apps-google-play-target-api-level-requirements/","RawContent":null},{"Title":"Supporting iOS 11 and iPhone X in Xamarin.iOS Apps","PublishedOn":"2018-06-18T19:18:01+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Apple has indicated that starting in July 2018 all new apps and app updates submitted to the App Store must be built with the iOS 11 SDK and support the iPhone X Super Retina display. The following...","Href":"https://blog.xamarin.com/supporting-ios-11-iphone-x-xamarin-apps/","RawContent":null},{"Title":"More Cross-Platform APIs with Xamarin.Essentials Latest Preview","PublishedOn":"2018-06-14T19:11:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced Xamarin.Essentials, a core set of cross-platform APIs to help developers build native apps, at Microsoft Build 2018. Xamarin.Essentials gives developers access to over thirty...","Href":"https://blog.xamarin.com/cross-platform-apis-xamarin-essentials-latest-preview/","RawContent":null},{"Title":"Use MongoDB With Your Xamarin Apps","PublishedOn":"2018-06-12T20:01:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the most important decisions that you&#8217;ll make when designing an app is what type of database to use. Not too long ago, the choice was limited to relational databases like SQL server....","Href":"https://blog.xamarin.com/write-apps-using-mongodb-xamarin/","RawContent":null},{"Title":"Build 2018: Conference Vision Demo App","PublishedOn":"2018-06-07T20:43:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Build 2018 we shipped Xamarin.Forms 3.0. Did you miss the announcement? No worries, you can watch it here to catch up on many of the great new things that will help make you more productive...","Href":"https://blog.xamarin.com/build-2018-conference-vision-demo-app/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7963959563","Type":"PullRequestEvent","CreatedAt":"2018-07-13T19:31:32","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1963","RelatedDescription":"Opened pull request \"[Mono.Android-Tests] Ignore DotNetJavaNetworkIfaces test\" (#1963) at xamarin/xamarin-android","RelatedBody":"This test is failing rather consistently on many physical devices. See https://github.com/xamarin/xamarin-android/issues/1534 for more info."},{"Id":"7963321601","Type":"IssuesEvent","CreatedAt":"2018-07-13T17:09:05","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1962","RelatedDescription":"Opened issue \"UpdateAndroidResgen target is skipped on High Sierra after touching a resource file\" (#1962) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Build project once.\r\n2. Touch the layout file associated with the main activity of the project.\r\n3. Build project again.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n_UpdateAndroidResgen runs again after a minor change to a resource file. I'm seeing this in d15-8 on Windows 10 and macOS sierra.\r\n\r\nSierra - _UpdateAndroidResgen runs (passed):\r\nhttp://xqa.blob.core.windows.net/gist/sierra-build-out-c16e2eb482834b98993ea94a141c8ed5.txt\r\n\r\n### Actual Behavior\r\n_UpdateAndroidResgen does not run after a minor change to a resource file. I'm only seeing this in High Sierra macOS environments, and it does seem to be a regression in d15-8.\r\n\r\nHigh Sierra - _UpdateAndroidResgen is skipped (failed):\r\nhttp://xqa.blob.core.windows.net/gist/log-53f53861e0864f38a84e2bb99262e833.txt\r\n\r\n### Version Information\r\nhttps://gist.github.com/pjcollins/700067943fa1b5778c2559aa9d208535\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7962918095","Type":"PullRequestEvent","CreatedAt":"2018-07-13T15:43:53","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1961","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] we should set TargetFrameworkMonikerAssemblyAttributesPath\" (#1961) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/Microsoft/msbuild/blob/b3f9eeab651c92bade6e4f64d11b59aa39e149cb/src/Tasks/Microsoft.Common.CurrentVersion.targets#L3305\r\nFixes: https://github.com/xamarin/xamarin-android/issues/1960\r\n\r\nWhile reviewing build logs, I have noticed something very odd if you\r\nare building for `TargetFrameworkVersion=v6.0` and it gets switched to\r\na different one such as `TargetFrameworkVersion=v9.0`.\r\n\r\nHere is the `GenerateTargetFrameworkMonikerAttribute` target from\r\n`Microsoft.Common.CurrentVersion.targets`:\r\n\r\n    WriteLinesToFile\r\n        Parameters\r\n            File = C:\\Users\\myuser\\AppData\\Local\\Temp\\MonoAndroid,Version=v6.0.AssemblyAttributes.cs\r\n            Lines\r\n                // <autogenerated />\r\n                using System;\r\n                using System.Reflection;\r\n                [assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(\"MonoAndroid,Version=v9.0\", FrameworkDisplayName = \"Xamarin.Android v9.0 Support\")]\r\n            Overwrite = True\r\n\r\nThis was *very* odd, since it was writing a file named\r\n`MonoAndroid,Version=v6.0.AssemblyAttributes.cs` but then writing\r\n`[assembly: TargetFrameworkAttribute(\"MonoAndroid,Version=v9.0\"]` into\r\nit!\r\n\r\nIt appears we are seeing MSBuild's implementation of how\r\n`[assembly: TargetFrameworkAttribute]` is added to a compiled assembly.\r\nIt writes to a temp file using the value from\r\n`$(TargetFrameworkMonikerAssemblyAttributesPath)`. We are not setting\r\nthis property in `Xamarin.Android.Common.targets` after modifying the\r\nvalue of `$(TargetFrameworkVersion)`.\r\n\r\nWhat could this break?\r\n\r\nConsider building multiple Xamarin.Android projects at the same time\r\nwith different `TargetFrameworkVersion` settings. The builds could\r\n\"step on each other\" and write an inappropriate value into the temp\r\nfile!\r\n\r\nIn fact, this did actually occur, see an example from kzu here:\r\nhttps://xamarinhq.slack.com/archives/C03CEGRUW/p1521475676000161\r\n\r\nI added some additional code in `Xamarin.Android.Common.targets` to\r\nset the `$(TargetFrameworkMonikerAssemblyAttributesPath)`\r\nappropriately, and added a test to check for the problem.\r\n\r\nI used the exact code from MSBuild, but we can do something else if\r\nthere is a better option:\r\n\r\nhttps://github.com/Microsoft/msbuild/blob/b3f9eeab651c92bade6e4f64d11b59aa39e149cb/src/Tasks/Microsoft.Common.CurrentVersion.targets#L3305"},{"Id":"7962900800","Type":"IssuesEvent","CreatedAt":"2018-07-13T15:40:35","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1960","RelatedDescription":"Opened issue \"Incorrect $(TargetFrameworkMonikerAssemblyAttributesPath) behavior for MSBuild\" (#1960) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nWhile reviewing build logs, I have noticed something very odd if you\r\nare building for `TargetFrameworkVersion=v6.0` and it gets switched to\r\na different one such as `TargetFrameworkVersion=v9.0`.\r\n\r\nHere is the `GenerateTargetFrameworkMonikerAttribute` target from\r\n`Microsoft.Common.CurrentVersion.targets`:\r\n\r\n    WriteLinesToFile\r\n        Parameters\r\n            File = C:\\Users\\myuser\\AppData\\Local\\Temp\\MonoAndroid,Version=v6.0.AssemblyAttributes.cs\r\n            Lines\r\n                // <autogenerated />\r\n                using System;\r\n                using System.Reflection;\r\n                [assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(\"MonoAndroid,Version=v9.0\", FrameworkDisplayName = \"Xamarin.Android v9.0 Support\")]\r\n            Overwrite = True\r\n\r\nThis was *very* odd, since it was writing a file named\r\n`MonoAndroid,Version=v6.0.AssemblyAttributes.cs` but then writing\r\n`[assembly: TargetFrameworkAttribute(\"MonoAndroid,Version=v9.0\"]` into\r\nit!\r\n\r\nIt appears we are seeing MSBuild's implementation of how\r\n`[assembly: TargetFrameworkAttribute]` is added to a compiled assembly.\r\nIt writes to a temp file using the value from\r\n`$(TargetFrameworkMonikerAssemblyAttributesPath)`. We are not setting\r\nthis property in `Xamarin.Android.Common.targets` after modifying the\r\nvalue of `$(TargetFrameworkVersion)`.\r\n\r\n### Expected Behavior\r\n\r\nWe shouldn't be writing incorrect `TargetFrameworkVersion` values into `$(Temp)\\MonoAndroid,Version=*.AssemblyAttributes.cs` files.\r\n\r\n### Actual Behavior\r\n\r\nWe are writing incorrect `TargetFrameworkVersion` values into `$(Temp)\\MonoAndroid,Version=*.AssemblyAttributes.cs` files.\r\n\r\n### Version Information\r\n\r\nxamarin-android/master"},{"Id":"7961296015","Type":"PullRequestEvent","CreatedAt":"2018-07-13T10:14:23","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1930","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] timestamp fixes for incremental builds\" (#1930) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/Xamarin.Forms/blob/42c07d1ae5aa56eb574b7d169499f1a9af7ec080/Xamarin.Forms.ControlGallery.Android/Xamarin.Forms.ControlGallery.Android.csproj\r\n\r\nWhile working on build performance, I noticed two timestamp issues\r\nthat are preventing some targets in Xamarin.Android from building\r\nincrementally. I spotted both of these while timing builds of the\r\n`Xamarin.Forms.ControlGallery.Android` project. It is a good test\r\nsubject, because it builds PCLs, and seven (or so) Xamarin.Android\r\nlibrary projects.\r\n\r\n### _LinkAssembliesNoShrink\r\n\r\nWhile timing builds, I noticed the following when\r\n`_LinkAssembliesNoShrink` runs:\r\n\r\n    Target Name=_LinkAssembliesNoShrink Project=PagesGallery.Droid.csproj\r\n        Building target \"_LinkAssembliesNoShrink\" partially, because some output files are out of date with respect to their input files.\r\n        [ResolvedUserAssemblies: Input=C:\\Users\\myuser\\Desktop\\Git\\Xamarin.Forms\\PagesGallery\\PagesGallery.Droid\\bin\\Debug\\PagesGallery.Droid.dll, Output=obj\\\\Debug\\android\\assets\\PagesGallery.Droid.dll] Input file is newer than output file.\r\n        ...\r\n        Skip linking unchanged file: C:\\Users\\myuser\\Desktop\\Git\\Xamarin.Forms\\PagesGallery\\PagesGallery.Droid\\bin\\Debug\\PagesGallery.Droid.dll\r\n\r\nIt seems there is a case where MSBuild is thinking the target needs to\r\nrun (due to timestamp values), but the `LinkAssemblies` MSBuild task\r\ndoes not copy the file. It actually doesn't need to do any work at all\r\nhere, since this was a build with no changes.\r\n\r\nThe fix here is to apply a timestamp for files that get skipped. This\r\nprevents the target from running again when it doesn't need to.\r\n\r\nI also removed a spot where a `copysrc` variable looks like it was\r\nbeing set an extra time--did not seem to be needed.\r\n\r\n### _GenerateJavaStubs\r\n\r\nAfter fixing `_LinkAssembliesNoShrink`, I noticed another timestamp\r\nissue:\r\n\r\n    Building target \"_GenerateJavaStubs\" completely.\r\n    Input file \"obj\\\\Debug\\android\\assets\\PagesGallery.Droid.dll\" is newer than output file \"obj\\\\Debug\\android\\typemap.jm\".\r\n\r\nLooking at the `GenerateJavaStubs` MSBuild task, it was never setting\r\nthe timestamp on either `typemap.mj` or `typemap.jm`.\r\n\r\nFixing these two issues, I was able to get a build with no-changes in\r\nthis Xamarin.Forms project down from ~23 seconds to ~13 seconds. I\r\nalso updated the `CheckTimestamps` test to validate these changes."},{"Id":"7960439994","Type":"PullRequestEvent","CreatedAt":"2018-07-13T07:13:37","Actor":"atsushieno","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1959","RelatedDescription":"Opened pull request \"[libmonodroid] correct excess log level that should be info rather than warning.\" (#1959) at xamarin/xamarin-android","RelatedBody":"This should fix https://github.com/xamarin/xamarin-android/issues/1909"},{"Id":"7958772405","Type":"IssuesEvent","CreatedAt":"2018-07-12T21:20:03","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1958","RelatedDescription":"Opened issue \"When the $(DesignTimeBuild) flag changes, build.props is invalidated\" (#1958) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Build\r\n2. Cause a Design-Time Build to occur\r\n3. Build again\r\n4. More things build than _should_\r\n\r\nContext: https://github.com/xamarin/xamarin-android/issues/1933\r\nContext: https://github.com/xamarin/xamarin-android/pull/1943\r\n\r\nOne of the issues I noticed while debugging the issue with #1933 is\r\nthat `$(IntermediateOutputPath)build.props` gets invalidated if\r\n`$(DesignTimeBuild)` changes. `build.props` triggers alot of targets\r\nto build completely again, so this is pretty bad for our build times\r\nin an IDE...\r\n\r\nDesign-Time Builds can run quite frequently in VS Windows, and we\r\ndon't want to rebuild a bunch of things unnecessarily when the user\r\nswitches back to a regular build.\r\n\r\n### Expected Behavior\r\n\r\nDesign-time builds should not invalidate `obj\\Debug\\build.props`, and therefore:\r\n\r\nDesign-time builds should not trigger any of the following targets if there are _no changes_:\r\n- `_LinkAssembliesNoShrink`\r\n- `_UpdateAndroidResgen`\r\n\r\n### Actual Behavior\r\n\r\nDesign-time builds cause a future build (even with no changes) to be slower.\r\n\r\n### Version Information\r\n\r\nHappens on master/d15-8."},{"Id":"7958513963","Type":"PullRequestEvent","CreatedAt":"2018-07-12T20:25:30","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1957","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] use designtimebuild.props\" (#1957) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/issues/1933\r\nContext: https://github.com/xamarin/xamarin-android/pull/1943\r\n\r\nOne of the issues I noticed while debugging the issue with #1933 is\r\nthat `$(IntermediateOutputPath)build.props` gets invalidated if\r\n`$(DesignTimeBuild)` changes. `build.props` triggers alot of targets\r\nto build completely again, so this is pretty bad for our build times\r\nin an IDE...\r\n\r\nDesign-Time Builds can run quite frequently in VS Windows, and we\r\ndon't want to rebuild a bunch of things unnecessarily when the user\r\nswitches back to a regular build.\r\n\r\nSo a solution, is to use a `designtimebuild.props` that works\r\nindependantly of `build.props`. This prevents some slower targets from\r\nrunning when they shouldn't, such as `_UpdateAndroidResgen`.\r\n\r\nI added a test to validate these changes, which also verify that\r\n`IncrementalClean` isn't deleting these files."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7965187129","Type":"IssuesEvent","CreatedAt":"2018-07-14T04:24:55","Actor":"eduardoanies","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3301","RelatedDescription":"Opened issue \"ActivityIndicator change color to black on Xamarin.MAC after the second display.\" (#3301) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nTry to run this code on a Xamarin.Mac project.\r\n\r\n```\r\nActivityIndicator activityIndicator = new ActivityIndicator\r\n            {\r\n                Color = Color.LightGreen,\r\n                IsVisible = true,\r\n                IsRunning = true,\r\n                VerticalOptions = LayoutOptions.CenterAndExpand,\r\n            };\r\n```\r\nIt will show the  ActivityIndicator with color LightGreen the first time, the second time it will show the color black, (This happens only on MacOs, on Android, iOs, UWP works as expected).\r\n### Steps to Reproduce\r\n\r\n1. Display an ActivityIndicator on Mac with some color different to black, like green or blue.\r\n2. Dimiss the ActivityIndicator\r\n3. Show the ActivityIndicator again\r\n\r\n### Expected Behavior\r\n\r\nThe ActivityIndicator color should be the indicated in the code like green or blue\r\n\r\n### Actual Behavior\r\n\r\nThe ActivityIndicator color is black\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE: Visual Studio Community for MAC version 7.5.3 (build 7)\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - MacOs\r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\nXamarin.Forms 3.1.0.637273\r\n- Affected Devices:\r\nmacOS High Sierra\r\nVersion 10.13.4\r\n### Screenshots\r\nhttps://stackoverflow.com/questions/51334903/how-to-change-the-color-of-activityindicator-in-xamarin-forms-macos\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"7964919537","Type":"PullRequestEvent","CreatedAt":"2018-07-14T00:39:15","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3300","RelatedDescription":"Opened pull request \"[iOS] Implement `ForceUpdateSize` for `TableView`\" (#3300) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n`TableView` cells implicitly update size on Android and UWP, but we must force them on iOS. This implements the same pattern used for `ListView`'s `ForceUpdateSize` on `TableView`.\r\n\r\nNote that since this drastically reduces performance, you must explicitly call `ForceUpdateSize` on a cell to update its size.\r\n\r\n### Issues Resolved ###\r\n\r\n- fixes #2842\r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n- iOS `TableViewModelRenderer`  `protected void WireUpForceUpdateSizeRequested`\r\n\r\n### Platforms Affected ###\r\n\r\n- Core (all platforms)\r\n- iOS\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7965098263","Type":"PullRequestEvent","CreatedAt":"2018-07-14T03:01:27","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4444","RelatedDescription":"Opened pull request \"[PDFkit] Fix kPDFDestinationUnspecifiedValue availability\" (#4444) at xamarin/xamarin-macios","RelatedBody":"This used to be a calculated macro and got promoted to a field\r\nin macOS 10.13. This will fix intro in older macOS versions."},{"Id":"7965052451","Type":"PullRequestEvent","CreatedAt":"2018-07-14T02:21:17","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4423","RelatedDescription":"Merged pull request \"[PassKit] Added support for Xcode 10 up to beta 3.\" (#4423) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7965050907","Type":"PullRequestEvent","CreatedAt":"2018-07-14T02:19:58","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4443","RelatedDescription":"Merged pull request \"[WebKit] Update bindings to Xcode 10 Beta 1, Nothing on beta 2 or 3\" (#4443) at xamarin/xamarin-macios","RelatedBody":"Allso adds UIKit UIWebView deprecations"},{"Id":"7964439468","Type":"PullRequestEvent","CreatedAt":"2018-07-13T21:29:07","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4443","RelatedDescription":"Opened pull request \"[WebKit] Update bindings to Xcode 10 Beta 1, Nothing on beta 2 or 3\" (#4443) at xamarin/xamarin-macios","RelatedBody":"Allso adds UIKit UIWebView deprecations"},{"Id":"7964385990","Type":"IssuesEvent","CreatedAt":"2018-07-13T21:14:29","Actor":"marek-safar","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4175","RelatedDescription":"Closed issue \"Internal consistency error, please file a bug (http://bugzilla.xamarin.com). Additional data: found managed object 0x126028ea8=0x7fb3f9052880 (Linker.Sealer.Unsealable) in native object 0x60c000223540 (AppDelegate).\" (#4175) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significally more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. apply patch https://gist.github.com/marek-safar/e564ad5efdbe66387ae53b17ddea86a6\r\n2. make run-ios-sim64-linkall\r\n3. \r\n\r\n### Expected Behavior\r\n\r\nNo crash\r\n\r\n### Actual Behavior\r\n\r\n```\r\n2018-06-03 09:24:06.089 link all[65308:6402124] Xamarin.iOS: Internal consistency error, please file a bug (http://bugzilla.xamarin.com). Additional data: found managed object 0x126028ea8=0x7fb3f9052880 (Linker.Sealer.Unsealable) in native object 0x60c000223540 (AppDelegate).\r\n2018-06-03 09:24:06.091 link all[65308:6402124] critical: Stacktrace:\r\n\r\n2018-06-03 09:24:06.091 link all[65308:6402124] critical:   at <unknown> <0xffffffff>\r\n2018-06-03 09:24:06.091 link all[65308:6402124] critical:   at (wrapper managed-to-native) UIKit.UIApplication.UIApplicationMain (int,string[],intptr,intptr) [0x0005c] in <fada7c48e0ed4641aa34baffb2274fed>:0\r\n2018-06-03 09:24:06.092 link all[65308:6402124] critical:   at UIKit.UIApplication.Main (string[],intptr,intptr) [0x00005] in /Users/marek/git/xamarin/xamarin-macios/src/UIKit/UIApplication.cs:79\r\n2018-06-03 09:24:06.092 link all[65308:6402124] critical:   at UIKit.UIApplication.Main (string[],string,string) [0x0002c] in /Users/marek/git/xamarin/xamarin-macios/src/UIKit/UIApplication.cs:63\r\n2018-06-03 09:24:06.092 link all[65308:6402124] critical:   at LinkAll.Application.Main (string[]) [0x00001] in /Users/marek/git/xamarin/xamarin-macios/tests/linker/ios/link all/Main.cs:19\r\n2018-06-03 09:24:06.093 link all[65308:6402124] critical:   at (wrapper runtime-invoke) <Module>.runtime_invoke_void_object (object,intptr,intptr,intptr) [0x00051] in <dec08c9bb76c4510a20ddda25bf09b70>:0\r\n2018-06-03 09:24:06.093 link all[65308:6402124] critical:\r\nNative stacktrace:\r\n\r\n2018-06-03 09:24:06.149 link all[65308:6402124] critical: \t0   link all                            0x000000010c577394 mono_handle_native_crash + 244\r\n2018-06-03 09:24:06.149 link all[65308:6402124] critical: \t1   libsystem_platform.dylib            0x000000011448ff5a _sigtramp + 26\r\n2018-06-03 09:24:06.149 link all[65308:6402124] critical: \t2   ???                                 0x000000000000ffff 0x0 + 65535\r\n2018-06-03 09:24:06.150 link all[65308:6402124] critical: \t3   libsystem_c.dylib                   0x00000001140c5c97 abort + 127\r\n2018-06-03 09:24:06.150 link all[65308:6402124] critical: \t4   link all                            0x000000010c74e5c9 xamarin_assertion_message + 425\r\n2018-06-03 09:24:06.150 link all[65308:6402124] critical: \t5   link all                            0x000000010c74e405 xamarin_get_managed_object_for_ptr_fast + 213\r\n2018-06-03 09:24:06.150 link all[65308:6402124] critical: \t6   link all                            0x000000010c49ce43 _ZL30native_to_managed_trampoline_5P11objc_objectP13objc_selectorPP11_MonoMethodP13UIApplicationP12NSDictionaryj + 291\r\n2018-06-03 09:24:06.150 link all[65308:6402124] critical: \t7   link all                            0x000000010c49cd08 -[AppDelegate application:didFinishLaunchingWithOptions:] + 72\r\n2018-06-03 09:24:06.150 link all[65308:6402124] critical: \t8   UIKit                               0x000000010e0f775b -[UIApplication _handleDelegateCallbacksWithOptions:isSuspended:restoreState:] + 278\r\n2018-06-03 09:24:06.150 link all[65308:6402124] critical: \t9   UIKit                               0x000000010e0f91d2 -[UIApplication _callInitializationDelegatesForMainScene:transitionContext:] + 4123\r\n2018-06-03 09:24:06.150 link all[65308:6402124] critical: \t10  UIKit                               0x000000010e0fe62b -[UIApplication _runWithMainScene:transitionContext:completion:] + 1677\r\n2018-06-03 09:24:06.150 link all[65308:6402124] critical: \t11  UIKit                               0x000000010e4c0e4a __111-[__UICanvasLifecycleMonitor_Compatability _scheduleFirstCommitForScene:transition:firstActivation:completion:]_block_invoke + 866\r\n2018-06-03 09:24:06.151 link all[65308:6402124] critical: \t12  UIKit                               0x000000010e893909 +[_UICanvas _enqueuePostSettingUpdateTransactionBlock:] + 153\r\n2018-06-03 09:24:06.151 link all[65308:6402124] critical: \t13  UIKit                               0x000000010e4c0a86 -[__UICanvasLifecycleMonitor_Compatability _scheduleFirstCommitForScene:transition:firstActivation:completion:] + 236\r\n2018-06-03 09:24:06.151 link all[65308:6402124] critical: \t14  UIKit                               0x000000010e4c12a7 -[__UICanvasLifecycleMonitor_Compatability activateEventsOnly:withContext:completion:] + 675\r\n2018-06-03 09:24:06.151 link all[65308:6402124] critical: \t15  UIKit                               0x000000010ee324d4 __82-[_UIApplicationCanvas _transitionLifecycleStateWithTransitionContext:completion:]_block_invoke + 299\r\n2018-06-03 09:24:06.152 link all[65308:6402124] critical: \t16  UIKit                               0x000000010ee3236e -[_UIApplicationCanvas _transitionLifecycleStateWithTransitionContext:completion:] + 433\r\n2018-06-03 09:24:06.152 link all[65308:6402124] critical: \t17  UIKit                               0x000000010eb1662d __125-[_UICanvasLifecycleSettingsDiffAction performActionsForCanvas:withUpdatedScene:settingsDiff:fromSettings:transitionContext:]_block_invoke + 221\r\n2018-06-03 09:24:06.152 link all[65308:6402124] critical: \t18  UIKit                               0x000000010ed11387 _performActionsWithDelayForTransitionContext + 100\r\n2018-06-03 09:24:06.152 link all[65308:6402124] critical: \t19  UIKit                               0x000000010eb164f7 -[_UICanvasLifecycleSettingsDiffAction performActionsForCanvas:withUpdatedScene:settingsDiff:fromSettings:transitionContext:] + 223\r\n2018-06-03 09:24:06.153 link all[65308:6402124] critical: \t20  UIKit                               0x000000010e892fb0 -[_UICanvas scene:didUpdateWithDiff:transitionContext:completion:] + 392\r\n2018-06-03 09:24:06.153 link all[65308:6402124] critical: \t21  UIKit                               0x000000010e0fcf0c -[UIApplication workspace:didCreateScene:withTransitionContext:completion:] + 515\r\n2018-06-03 09:24:06.153 link all[65308:6402124] critical: \t22  UIKit                               0x000000010e6cfa97 -[UIApplicationSceneClientAgent scene:didInitializeWithEvent:completion:] + 361\r\n2018-06-03 09:24:06.153 link all[65308:6402124] critical: \t23  FrontBoardServices                  0x00000001178042f3 -[FBSSceneImpl _didCreateWithTransitionContext:completion:] + 331\r\n2018-06-03 09:24:06.153 link all[65308:6402124] critical: \t24  FrontBoardServices                  0x000000011780ccfa __56-[FBSWorkspace client:handleCreateScene:withCompletion:]_block_invoke_2 + 225\r\n2018-06-03 09:24:06.154 link all[65308:6402124] critical: \t25  libdispatch.dylib                   0x0000000113f85779 _dispatch_client_callout + 8\r\n2018-06-03 09:24:06.154 link all[65308:6402124] critical: \t26  libdispatch.dylib                   0x0000000113f8a931 _dispatch_block_invoke_direct + 317\r\n2018-06-03 09:24:06.154 link all[65308:6402124] critical: \t27  FrontBoardServices                  0x0000000117838470 __FBSSERIALQUEUE_IS_CALLING_OUT_TO_A_BLOCK__ + 24\r\n2018-06-03 09:24:06.154 link all[65308:6402124] critical: \t28  FrontBoardServices                  0x000000011783812e -[FBSSerialQueue _performNext] + 439\r\n2018-06-03 09:24:06.155 link all[65308:6402124] critical: \t29  FrontBoardServices                  0x000000011783868e -[FBSSerialQueue _performNextFromRunLoopSource] + 45\r\n2018-06-03 09:24:06.155 link all[65308:6402124] critical: \t30  CoreFoundation                      0x0000000110f70bb1 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 17\r\n2018-06-03 09:24:06.155 link all[65308:6402124] critical: \t31  CoreFoundation                      0x0000000110f554af __CFRunLoopDoSources0 + 271\r\n2018-06-03 09:24:06.155 link all[65308:6402124] critical: \t32  CoreFoundation                      0x0000000110f54a6f __CFRunLoopRun + 1263\r\n2018-06-03 09:24:06.155 link all[65308:6402124] critical: \t33  CoreFoundation                      0x0000000110f5430b CFRunLoopRunSpecific + 635\r\n2018-06-03 09:24:06.155 link all[65308:6402124] critical: \t34  GraphicsServices                    0x000000011648aa73 GSEventRunModal + 62\r\n2018-06-03 09:24:06.156 link all[65308:6402124] critical: \t35  UIKit                               0x000000010e1000b7 UIApplicationMain + 159\r\n2018-06-03 09:24:06.156 link all[65308:6402124] critical: \t36  ???                                 0x00000001273975e9 0x0 + 4953044457\r\n2018-06-03 09:24:06.156 link all[65308:6402124] critical: \t37  ???                                 0x0000000127397483 0x0 + 4953044099\r\n2018-06-03 09:24:06.156 link all[65308:6402124] critical: \t38  link all                            0x000000010c589654 mono_jit_runtime_invoke + 1428\r\n2018-06-03 09:24:06.156 link all[65308:6402124] critical: \t39  link all                            0x000000010c66f0df mono_runtime_invoke_checked + 127\r\n2018-06-03 09:24:06.157 link all[65308:6402124] critical: \t40  link all                            0x000000010c6746fe mono_runtime_exec_main_checked + 110\r\n2018-06-03 09:24:06.157 link all[65308:6402124] critical: \t41  link all                            0x000000010c4f6439 mono_jit_exec + 297\r\n2018-06-03 09:24:06.157 link all[65308:6402124] critical: \t42  link all                            0x000000010c75e4e6 xamarin_main + 2726\r\n2018-06-03 09:24:06.157 link all[65308:6402124] critical: \t43  link all                            0x000000010c4aed70 main + 80\r\n2018-06-03 09:24:06.157 link all[65308:6402124] critical: \t44  libdyld.dylib                       0x0000000113ffa955 start + 1\r\n2018-06-03 09:24:06.157 link all[65308:6402124] critical: \t45  ???                                 0x0000000000000009 0x0 + 9\r\n2018-06-03 09:24:06.158 link all[65308:6402124] critical:\r\n=================================================================\r\nGot a SIGABRT while executing native code. This usually indicates\r\na fatal error in the mono runtime or one of the native libraries\r\nused by your application.\r\n=================================================================\r\n```\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"7963886467","Type":"PullRequestEvent","CreatedAt":"2018-07-13T19:14:07","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4439","RelatedDescription":"Merged pull request \"[PDFKit] Update bindings to Xcode 10 Beta 1, 2 & 3\" (#4439) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7963675522","Type":"PullRequestEvent","CreatedAt":"2018-07-13T18:27:31","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4375","RelatedDescription":"Merged pull request \"Foundation for Xcode 10 Beta 1-2\" (#4375) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7963199677","Type":"IssuesEvent","CreatedAt":"2018-07-13T16:41:24","Actor":"wjk","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4442","RelatedDescription":"Opened issue \"Errors in runtime.h, exposed by Embeddinator\" (#4442) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Clone `mono/Embeddinator-4000` commit `d697cdfca5060c07e95063c30f4864bd0a36b0ca` on a macOS 10.13.5 machine with Xcode 9.4.1 and Visual Studio as described below.\r\n2. `cd objcgen; make`\r\n3. Edit `samples/mac/weather/Makefile` according to the following diff:\r\n\r\n```diff\r\n prepare: $(OBJC_GEN)\r\n        $(MONOMSBUILD) /p:Configuration=Debug MyManagedStuff/MyManagedStuff.sln\r\n-       $(MONO) $(OBJC_GEN) --debug -c MyManagedStuff/MyManagedStuff/bin/Debug/MyManagedStuff.dll -o theweather/MyManagedStuff\r\n+       $(MONO) $(OBJC_GEN) --debug -c MyManagedStuff/MyManagedStuff/bin/Debug/MyManagedStuff.dll -o theweather/MyManagedStuff \\\r\n+               --abi=x86_64 --platform=macos-modern\r\n        cp MyManagedStuff/MyManagedStuff/bin/Debug/MyManagedStuff.dll theweather/MyManagedStuff/MyManagedStuff.dll\r\n ```\r\n\r\n4. `cd samples/mac/weather; make prepare`\r\n\r\n### Expected Behavior\r\n\r\nIt should compile.\r\n\r\n### Actual Behavior\r\n\r\nFails with below error log.\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.5.3 (build 7)\r\nInstallation UUID: a880d919-4858-4032-baa6-3566143de94e\r\nRuntime:\r\n\tMono 5.10.1.57 (2017-12/ea8a24b1bbf) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 510010057\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.1\r\n\t2.1.0\r\n\t2.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.301/Sdks\r\nSDK Versions:\r\n\t2.1.301\r\n\t2.1.300\r\n\t2.1.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.4.1 (14161)\r\nBuild 9F2000\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.4.1.193 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.12.0.4 (Visual Studio Community)\r\nHash: 64fece5f\r\nBranch: d15-7\r\nBuild date: 2018-05-29 20:00:44-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.3.2 (Visual Studio Community)\r\nAndroid SDK: /Users/wjk/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t7.1 (API level 25)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_172\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_172-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.172-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705030007\r\nGit revision: 13cecd02aceddf29a1ed57b86f81c02994df1483\r\nBuild date: 2018-06-14 15:48:08-04\r\nXamarin addins: 7065de97cf22c9038fdc39dd627f2c30790fd8af\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.5\r\nDarwin 17.6.0 Darwin Kernel Version 17.6.0\r\n    Tue May  8 15:22:16 PDT 2018\r\n    root:xnu-4570.61.1~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\n.NET Core Extended Target Framework Support 1.0\r\nAddinMaker 1.4.2\r\nInternet of Things (IoT) development (Preview) 7.5\r\n```\r\n\r\n### Build Logs\r\n\r\n```\r\n/Library/Frameworks/Mono.framework/Versions/Current/Commands/msbuild /p:Configuration=Debug MyManagedStuff/MyManagedStuff.sln\r\nMicrosoft (R) Build Engine version 15.6.0.0 (xplat-master/ca830585 Sun Mar 25 19:24:09 EDT 2018) for Mono\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nBuild started 7/13/2018 12:39:20 PM.\r\nProject \"/Volumes/Sources/Embeddinator-4000/samples/mac/weather/MyManagedStuff/MyManagedStuff.sln\" on node 1 (default targets).\r\nValidateSolutionConfiguration:\r\n  Building solution configuration \"Debug|Any CPU\".\r\nProject \"/Volumes/Sources/Embeddinator-4000/samples/mac/weather/MyManagedStuff/MyManagedStuff.sln\" (1) is building \"/Volumes/Sources/Embeddinator-4000/samples/mac/weather/MyManagedStuff/MyManagedStuff/MyManagedStuff.csproj\" (2) on node 1 (default targets).\r\nGenerateTargetFrameworkMonikerAttribute:\r\nSkipping target \"GenerateTargetFrameworkMonikerAttribute\" because all output files are up-to-date with respect to the input files.\r\nCoreCompile:\r\nSkipping target \"CoreCompile\" because all output files are up-to-date with respect to the input files.\r\nCopyFilesToOutputDirectory:\r\n  MyManagedStuff -> /Volumes/Sources/Embeddinator-4000/samples/mac/weather/MyManagedStuff/MyManagedStuff/bin/Debug/MyManagedStuff.dll\r\nDone Building Project \"/Volumes/Sources/Embeddinator-4000/samples/mac/weather/MyManagedStuff/MyManagedStuff/MyManagedStuff.csproj\" (default targets).\r\nDone Building Project \"/Volumes/Sources/Embeddinator-4000/samples/mac/weather/MyManagedStuff/MyManagedStuff.sln\" (default targets).\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:01.02\r\n/Library/Frameworks/Mono.framework/Versions/Current/Commands/mono ../../../objcgen/bin/Debug/objcgen.exe --debug -c MyManagedStuff/MyManagedStuff/bin/Debug/MyManagedStuff.dll -o theweather/MyManagedStuff \\\r\n\t\t--abi=x86_64 --platform=macos-modern\r\nParsing assemblies...\r\n\tParsed 'MyManagedStuff/MyManagedStuff/bin/Debug/MyManagedStuff.dll'\r\nProcessing assemblies...\r\n\t2 types found\r\nGenerating binding code...\r\n\tGenerated: theweather/MyManagedStuff/bindings.h\r\n\tGenerated: theweather/MyManagedStuff/bindings-private.h\r\n\tGenerated: theweather/MyManagedStuff/bindings.m\r\n\tGenerated: theweather/MyManagedStuff/bindings.xml\r\n\tGenerated: theweather/MyManagedStuff/embeddinator.h\r\n\tGenerated: theweather/MyManagedStuff/glib.h\r\n\tGenerated: theweather/MyManagedStuff/mono_embeddinator.h\r\n\tGenerated: theweather/MyManagedStuff/mono-support.h\r\n\tGenerated: theweather/MyManagedStuff/objc-support.h\r\n\tGenerated: theweather/MyManagedStuff/glib.c\r\n\tGenerated: theweather/MyManagedStuff/mono_embeddinator.c\r\n\tGenerated: theweather/MyManagedStuff/objc-support.m\r\n\tGenerated: theweather/MyManagedStuff/Make.config\r\nCompiling binding code...\r\nFound Mono 5.10.1.57 (between 5.4.1.7 and 5.4.1.7)\r\nFound Xamarin.Mac 4.4.1.193 (between 4.0.0.215 and 4.0.0.215)\r\n\txcode-select -p\r\n\txcrun clang -g -O0 -fobjc-arc -ObjC -Wall -arch x86_64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -mmacosx-version-min=10.7 -I/Library/Frameworks/Xamarin.Mac.framework/Versions/Current/include -DXAMARIN_MAC -DMONO_EMBEDDINATOR_DLL_EXPORT  -c theweather/MyManagedStuff/glib.c -o theweather/MyManagedStuff/x86_64/glib.o \r\n\txcrun clang -g -O0 -fobjc-arc -ObjC -Wall -arch x86_64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -mmacosx-version-min=10.7 -I/Library/Frameworks/Xamarin.Mac.framework/Versions/Current/include -DXAMARIN_MAC -DMONO_EMBEDDINATOR_DLL_EXPORT  -c theweather/MyManagedStuff/mono_embeddinator.c -o theweather/MyManagedStuff/x86_64/mono_embeddinator.o \r\nIn file included from theweather/MyManagedStuff/mono_embeddinator.c:29:\r\nIn file included from theweather/MyManagedStuff/mono_embeddinator.h:32:\r\nIn file included from theweather/MyManagedStuff/mono-support.h:36:\r\nIn file included from /Library/Frameworks/Xamarin.Mac.framework/Versions/Current/include/xamarin/xamarin.h:14:\r\nIn file included from /Library/Frameworks/Xamarin.Mac.framework/Versions/Current/include/xamarin/runtime.h:21:\r\n/Library/Frameworks/Xamarin.Mac.framework/Versions/Current/include/xamarin/runtime-generated.h:86:1: error: must use 'enum' tag to refer to type 'MarshalManagedExceptionMode'\r\nMarshalManagedExceptionMode\r\n^\r\nenum \r\n/Library/Frameworks/Xamarin.Mac.framework/Versions/Current/include/xamarin/runtime-generated.h:89:1: error: must use 'enum' tag to refer to type 'MarshalObjectiveCExceptionMode'\r\nMarshalObjectiveCExceptionMode\r\n^\r\nenum \r\nIn file included from theweather/MyManagedStuff/mono_embeddinator.c:29:\r\nIn file included from theweather/MyManagedStuff/mono_embeddinator.h:32:\r\nIn file included from theweather/MyManagedStuff/mono-support.h:36:\r\nIn file included from /Library/Frameworks/Xamarin.Mac.framework/Versions/Current/include/xamarin/xamarin.h:14:\r\n/Library/Frameworks/Xamarin.Mac.framework/Versions/Current/include/xamarin/runtime.h:88:18: error: pointer to non-const type 'const Protocol *' with no explicit ownership\r\n        const Protocol **protocols; // the corresponding native protocols\r\n                        ^\r\n3 errors generated.\r\n```"},{"Id":"7962876506","Type":"IssuesEvent","CreatedAt":"2018-07-13T15:35:59","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4441","RelatedDescription":"Opened issue \"[generator] Binding with return value of Class [] do not do the right thing\" (#4441) at xamarin/xamarin-macios","RelatedBody":"This was found during binding Foundation in xcode 10:\r\n\r\nhttps://github.com/xamarin/xamarin-macios/pull/4404\r\n\r\nWith this failure\r\n\r\nhttps://gist.github.com/chamons/8225bfd531712ed02ae26373272d09c9\r\n\r\nI'm going to comment out those bindings for now until this is fixed.\r\n\r\nSee NSSecureUnarchiveFromDataTransformer and DataTransformer_AllowedTopLevelTypes_WrapperTests."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1016758939877117952","CreatedAt":"2018-07-10T18:59:56+00:00","UserScreenname":"xamarinhq","Text":"Understanding your app, it's users, &amp; their interactions helps you build a 5-star app. Application Insights w/ AppC… https://t.co/Smw5tVHZ1X","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":39,"FavoriteCount":21,"RawContent":null},{"Id":"1014949294737186816","CreatedAt":"2018-07-05T19:09:03+00:00","UserScreenname":"xamarinhq","Text":"Cool intros to new goodies in &lt;10 minutes! Explore some of the “Snack Pack” episodes that @JamesMontemagno bundled… https://t.co/80gmo35fb6","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":91,"FavoriteCount":42,"RawContent":null},{"Id":"1014903254034141190","CreatedAt":"2018-07-05T16:06:06+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/3RaJk3O0xb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":31,"RawContent":null},{"Id":"1014521211970379776","CreatedAt":"2018-07-04T14:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":34,"RawContent":null},{"Id":"1014159326645313537","CreatedAt":"2018-07-03T14:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":25,"RawContent":null},{"Id":"1013873320834445313","CreatedAt":"2018-07-02T19:53:31+00:00","UserScreenname":"xamarinhq","Text":"In today's Xamarin Podcast, @PierceBoggan &amp; @JamesMontemagno talk up latest &amp; greatest in mobile #dotNET dev; Xamar… https://t.co/chy5AhHt86","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":62,"FavoriteCount":43,"RawContent":null},{"Id":"1013805063209455616","CreatedAt":"2018-07-02T15:22:17+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/kdzv9U4084","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":33,"FavoriteCount":21,"RawContent":null},{"Id":"1013547297437835264","CreatedAt":"2018-07-01T22:18:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/JL1SW3MFro","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":27,"RawContent":null},{"Id":"1012399525338595328","CreatedAt":"2018-06-28T18:17:10+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/3QxhuBcUiC v7.2 introduces two new MSBuild properties to make maintaining Android VersionCode for Andr… https://t.co/j469e1DU24","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":84,"FavoriteCount":58,"RawContent":null},{"Id":"1011343460811583489","CreatedAt":"2018-06-25T20:20:45+00:00","UserScreenname":"xamarinhq","Text":"What’s new in the #XamarinAndroid designer: https://t.co/OOHH6tXhia https://t.co/lCAsZQzwls","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":89,"FavoriteCount":39,"RawContent":null},{"Id":"1009871245574332422","CreatedAt":"2018-06-21T18:50:42+00:00","UserScreenname":"xamarinhq","Text":"Get your #Xamarin Android apps ready for Google Play’s target API level requirements: https://t.co/2iFf5ijjj9 https://t.co/iQmylzyQ7o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":34,"RawContent":null},{"Id":"1008802730993967104","CreatedAt":"2018-06-18T20:04:48+00:00","UserScreenname":"xamarinhq","Text":"Get ready for the July 2018 deadline by ensuring your  #Xamarin apps support iOS 11 and iPhone X: https://t.co/1Wx6Bo4TSQ","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":43,"FavoriteCount":18,"RawContent":null},{"Id":"1007343670775963649","CreatedAt":"2018-06-14T19:27:01+00:00","UserScreenname":"xamarinhq","Text":"Get access to more cross-platform APIs with the latest Xamarin.Essentials Preview: https://t.co/WqtCV8OneC https://t.co/FgdScqkpPt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":116,"FavoriteCount":66,"RawContent":null},{"Id":"1007280505820254209","CreatedAt":"2018-06-14T15:16:01+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/zLa3RTUgaL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":21,"RawContent":null},{"Id":"1006915501405167616","CreatedAt":"2018-06-13T15:05:37+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/U9huu5DdJW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":22,"RawContent":null},{"Id":"1006682387743461376","CreatedAt":"2018-06-12T23:39:19+00:00","UserScreenname":"xamarinhq","Text":"Create your first #Xamarin app using #MongoDB: https://t.co/Nu6lZzYwYX","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":60,"FavoriteCount":25,"RawContent":null},{"Id":"1006563778471788544","CreatedAt":"2018-06-12T15:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":23,"RawContent":null},{"Id":"1006201893369106433","CreatedAt":"2018-06-11T15:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":23,"RawContent":null},{"Id":"1005923084023582721","CreatedAt":"2018-06-10T21:22:07+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/OPYTFzsQk4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":28,"RawContent":null}]}},"RunOn":"2018-07-14T05:30:58.4185321Z","RunDurationInMilliseconds":4217}