{"Data":{"Blog":{"FeedItems":[{"Title":"Using TensorFlow and Azure to Add Image Classification to Your Android Apps","PublishedOn":"2018-04-23T18:51:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"TensorFlow is a well established, open source machine learning and deep learning framework that can be used to create and run a wide range of different models, usually using powerful machines in the...","Href":"https://blog.xamarin.com/android-apps-tensorflow/","RawContent":null},{"Title":"Community Books on Xamarin Development","PublishedOn":"2018-04-20T15:01:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin development is constantly growing and evolving to meet the needs of developers. To help you find the right resources for your development education, we&#8217;ve curated a list of community...","Href":"https://blog.xamarin.com/community-books-xamarin-development/","RawContent":null},{"Title":"Automatic Provisioning with Visual Studio 2017","PublishedOn":"2018-04-18T17:22:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"iOS device provisioning is largely regarded by all iOS developers, Xamarin or otherwise, as being one of the biggest barriers to getting started with iOS. To test and deploy your app on a device, you...","Href":"https://blog.xamarin.com/automatic-provisioning-visual-studio-2017/","RawContent":null},{"Title":"A Brief History of .NET Standard","PublishedOn":"2018-04-16T16:21:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin (and before that, Mono) allowed .NET code to run on multiple platforms for years. These days, there&#8217;s a new push in cross-platform with .NET Core and .NET Standard. This post looks at...","Href":"https://blog.xamarin.com/history-dot-net-standard/","RawContent":null},{"Title":"Using the iOS 11 Drag and Drop APIs in Xamarin.iOS Apps","PublishedOn":"2018-04-13T17:07:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"iOS 11 introduced drag and drop, a feature that allows users to easily move or copy data within or between apps. With drag and drop, users can: Select items to drag Add extra items to a drag after it...","Href":"https://blog.xamarin.com/drag-and-drop-apis-for-xamarin-apps/","RawContent":null},{"Title":"New Xamarin.Forms XAML IntelliSense in Visual Studio 2017","PublishedOn":"2018-04-11T18:30:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Visual Studio 2017 version 15.7 previews are now available, featuring significant improvements to the XAML experience for mobile developers. The Xamarin.Forms XAML editing experience is now powered by...","Href":"https://blog.xamarin.com/new-xamarin-forms-xaml-intellisense-visual-studio-2017/","RawContent":null},{"Title":"What’s New for Xamarin Developers in Visual Studio 2017 Version 15.7 Preview 3","PublishedOn":"2018-04-09T21:32:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Visual Studio 2017 version 15.7 Preview 3 was released today (April 9, 2018) and includes many improvements for mobile developers in Visual Studio. This release sports a brand new IntelliSense...","Href":"https://blog.xamarin.com/visual-studio-2017-version-15-7-preview-3/","RawContent":null},{"Title":"Right-To-Left Localization in Xamarin.Forms","PublishedOn":"2018-04-06T20:05:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you&#8217;re making apps that support right-to-left languages, we have great news for you: Xamarin.Forms 3.0 makes it easier than ever to flip layouts to match language direction! We&#8217;ll use...","Href":"https://blog.xamarin.com/right-to-left-localization-xamarin-forms/","RawContent":null},{"Title":"Debugging Xamarin Open Source Frameworks: Part 3 – Mono","PublishedOn":"2018-04-04T18:38:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is the third post of four in the Debugging Xamarin Open Source Frameworks series, debugging Mono. Part 1 covers building Xamarin.Forms from the source and debugging that code, Part 2 covers...","Href":"https://blog.xamarin.com/debugging-xamarin-mono/","RawContent":null},{"Title":"Find Local Xamarin and .NET Developer Events This April","PublishedOn":"2018-04-02T18:42:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Spring into action this April by finding a Xamarin or .NET user group hosting Xamarin (and related technology) events near you! Get the latest news on exciting releases, tooling, and updates all month...","Href":"https://blog.xamarin.com/xamarin-developer-community-events-april/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7580518128","Type":"IssuesEvent","CreatedAt":"2018-04-24T19:08:24","Actor":"lin-zy1229","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1598","RelatedDescription":"Opened issue \"ConcurrentHashMap doesn't work as expected when use byte array as key in Xamarin\" (#1598) at xamarin/xamarin-android","RelatedBody":"Here is code block I use in Xamarin.\r\n\r\n```\r\nJava.Util.Concurrent.ConcurrentHashMap map = new Java.Util.Concurrent.ConcurrentHashMap();\r\nvar key = new byte[] { 1, 2, 3 };\r\nvar data = new byte[] { 1, 2, 3 };\r\n\r\nmap.Put(key, data);\r\nvar val = map.Get(key); // null, WHY?\r\n\r\nIEnumeration keys = map.Keys();\r\nwhile (keys.HasMoreElements)\r\n{\r\n    var k = keys.NextElement();\r\n    var val2 = map.Get(k); // NOT null\r\n}\r\n```\r\n\r\nI expected `val `is byte array (data), but `val `is null, while `val2 `is not null.\r\n\r\nWhat is the reason?"},{"Id":"7580470597","Type":"IssuesEvent","CreatedAt":"2018-04-24T18:59:21","Actor":"jgold6","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1597","RelatedDescription":"Opened issue \"AIDL file with method that uses a Map parameter causes build failure\" (#1597) at xamarin/xamarin-android","RelatedBody":"When building the attached test project, the build fails with error:\r\n`\r\n/path/to/obj/Debug/aidl/IMxFrameworkService.cs(17,17): Error CS7036: There is no argument given that corresponds to the required formal parameter 'loader' of 'Parcel.ReadHashMap(ClassLoader)' (CS7036) (MobileAndroid)\r\n`\r\n\r\nThe `IMxFrameworkService.cs` is the file generated from the AIDL file. There is this line of code in the `OnTransact` method:\r\n\r\n`arg1 = data.ReadHashMap ();`\r\n\r\nNote that there is no `ClassLoader` parameter. In the `Android.OS.Parcel` class, there is only one overload for the `ReadHashMap` method and it takes a `ClassLoader` (an abstract class) as an argument. There is no overload that takes no arguments. \r\n\r\n### Steps to Reproduce\r\n\r\n1. Open the attached test project\r\n2. Build the project\r\n\r\n\r\n[Microsoft-118042018043876.zip](https://github.com/xamarin/xamarin-android/files/1944147/Microsoft-118042018043876.zip)\r\n\r\n\r\n### Expected Behavior\r\nProject will build\r\n\r\n### Actual Behavior\r\nbuild fails with error noted above.\r\n\r\n### Version Information\r\n\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.4.3 (build 10)\r\nInstallation UUID: f86726f2-bd5d-4610-867e-44e82f306ca2\r\nRuntime:\r\n\tMono 5.8.1.0 (2017-10/6bf3922f3fd) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 508010000\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.1\r\n\t1.0.4\r\n\t1.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.0.1\r\n\t1.0.0-preview2-003121\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.8.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.1\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.2.0.16 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/jongoldberger/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.0.3 (API level 15)\r\n\t\t4.1   (API level 16)\r\n\t\t4.2   (API level 17)\r\n\t\t4.3   (API level 18)\r\n\t\t4.4   (API level 19)\r\n\t\t5.0   (API level 21)\r\n\t\t5.1   (API level 22)\r\n\t\t6.0   (API level 23)\r\n\t\t7.0   (API level 24)\r\n\t\t7.1   (API level 25)\r\n\t\t8.0   (API level 26)\r\n\t\t8.1   (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_161\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_161-b12)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.161-b12, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.3 (14154)\r\nBuild 9E145\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.2.1.29 (Visual Studio Enterprise)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.9.1.24 (Visual Studio Enterprise)\r\nHash: f62de472\r\nBranch: xcode9.3\r\nBuild date: 2018-03-29 19:30:53-0400\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 704030010\r\nGit revision: 5af3e98549653fcc5335896ccc296343d08f31bb\r\nBuild date: 2018-04-12 12:32:07-04\r\nXamarin addins: fadb82fb0fe2668cb7789f8b524aec6fb8568ee7\r\nBuild lane: monodevelop-lion-d15-6\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.4\r\nDarwin 17.5.0 Darwin Kernel Version 17.5.0\r\n    Mon Mar  5 22:24:32 PST 2018\r\n    root:xnu-4570.51.1~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n\r\n### Log File\r\n\r\n[Build_Log.txt](https://github.com/xamarin/xamarin-android/files/1944173/Build_Log.txt)\r\n\r\n\r\n\r\n"},{"Id":"7580461955","Type":"PullRequestEvent","CreatedAt":"2018-04-24T18:57:46","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1596","RelatedDescription":"Merged pull request \"[tests] Report errors last in `RunApkTests`\" (#1596) at xamarin/xamarin-android","RelatedBody":"Context: https://jenkins.mono-project.com/job/xamarin-android-pr-builder/2963/testReport/\r\n\r\nA build for PR #1489 ran 1110 tests; it *should* have run over 35,000.\r\nWhere are the missing tests?\r\n\r\nWhat's missing are the `.apk` on-device tests; BCL tests make up\r\n*most* of our expected test count.\r\n\r\nAnalysis of the build log shows that the on-device tests *are*\r\nrunning, with test results being downloaded:\r\n\r\n\t…/android-toolchain/sdk/platform-tools/adb -s emulator-5570  pull \"/data/data/Xamarin.Android.Bcl_Tests/files/.__override__/TestResults.xUnit.xml\" \"…/xamarin-android/tests/../bin/TestDebug/TestResult-Xamarin.Android.Bcl_Tests.xunit.xml\"\r\n\t...\r\n\t/data/data/Xamarin.Android.Bcl_Tests/files/.__override__/TestResults.xUnit.xml: 1 file pulled. 53.5 MB/s (3273412 bytes in 0.058s)\r\n\r\nbut those results don't appear on the `testReport` URL.\r\n\r\nThe problem is that the `RenameApkTestCases` target is never being\r\nexecuted, and the `RenameApkTestCases` is responsible for copying the\r\n`TestResult*` files where Jenkins looks for them:\r\n\r\n\tDone building target \"ReleaseAndroidTarget\" in project \"RunApkTests.targets\" -- FAILED.:\r\n\r\nThe `RenameApkTestCases` target executes *after*\r\n`ReleaseAndroidTarget`, but because `ReleaseAndroidTarget` failed, the\r\n`RenameApkTestCases` target isn't executed.\r\n\r\nMeanwhile, `ReleaseAndroidTarget` reports an error to ensure that\r\nerrors aren't overlooked; see commit 3b893cd4.\r\n\r\nAllow the `RenameApkTestCases` target to execute by adding a new\r\n`ReportComponentFailures` target. The `ReleaseAndroidTarget` will no\r\nlonger report errors, allowing the `RenameApkTestCases` target to\r\nexecute, while if any tests *do* fail, the `ReportComponentFailures`\r\ntarget will generate an appropriate error."},{"Id":"7580458129","Type":"PullRequestEvent","CreatedAt":"2018-04-24T18:57:03","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1594","RelatedDescription":"Merged pull request \"[tests] Run all test targets\" (#1594) at xamarin/xamarin-android","RelatedBody":"An \"interesting\" observation was made looking at the results of\r\nPR #1562: even though both **macOS+xbuild** and **macOS+msbuild** are\r\nusing `msbuild` (as per eacb8cf6, until we change things so that\r\n**macOS+xbuild** *actually* uses `xbuild`), the number of unit tests\r\nexecuted differed significantly:\r\n\r\n[**macOS+msbuild**][0] ran 308 tests.\r\n[**macOS+xbuild**][1] ran 35724 tests.\r\n\r\n[0]: https://jenkins.mono-project.com/job/xamarin-android-msbuild-pr-builder/2490/testReport/\r\n[1]: https://jenkins.mono-project.com/job/xamarin-android-pr-builder/2969/testReport/\r\n\r\nThe apparent cause of this discrepency is that on the\r\n**macOS+msbuild** job, `Java.Interop.Dynamic-Tests.dll` crashed:\r\n\r\n\tmono --debug packages/NUnit.ConsoleRunner.3.7.0/tools/nunit3-console.exe  …/xamarin-android/external/Java.Interop/build-tools/scripts/../../bin/TestDebug/Java.Interop.Dynamic-Tests.dll  --result=\"TestResult-Java.Interop.Dynamic-Tests.xml;format=nunit2\" --output=\"bin/TestDebug/TestOutput-Java.Interop.Dynamic-Tests.txt\"\r\n\t...\r\n\tStacktrace: (TaskId:31)\r\n\t (TaskId:31)\r\n\t  at <unknown> <0xffffffff> (TaskId:31)\r\n\t  at (wrapper managed-to-native) System.Runtime.Remoting.RemotingServices.InternalExecute (System.Reflection.MethodBase,object,object[],object[]&)\r\n\t  at System.Runtime.Remoting.RemotingServices.InternalExecuteMessage (System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)\r\n\t  at System.Runtime.Remoting.Messaging.StackBuilderSink.SyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage)\r\n\t  at System.Runtime.Remoting.Messaging.ServerObjectTerminatorSink.SyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage)\r\n\t  at System.Runtime.Remoting.Lifetime.LeaseSink.SyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage)\r\n\t  ...\r\n\tNative stacktrace: (TaskId:31)\r\n\t (TaskId:31)\r\n\t      0   mono                                0x000000010cc5b251 mono_handle_native_crash + 257 (TaskId:31)\r\n\t      1   mono                                0x000000010ccf79f6 altstack_handle_and_restore + 70 (TaskId:31)\r\n\t      2   mono                                0x000000010cc419f3 mono_aot_get_cached_class_info + 19 (TaskId:31)\r\n\t      3   mono                                0x000000010cd2f31f mono_class_is_subclass_of + 31 (TaskId:31)\r\n\t      4   libjava-interop.dylib               0x0000000131770968 get_gc_bridge_index + 120 (TaskId:31)\r\n\t      5   libjava-interop.dylib               0x00000001317702ac gc_bridge_class_kind + 60 (TaskId:31)\r\n\t      6   mono                                0x000000010ce19878 class_kind + 24 (TaskId:31)\r\n\t...\r\n\tDone building target \"RunJavaInteropTests\" in project \"RunTests.targets\" -- FAILED.: (TargetId:4)\r\n\tDone Building Project \"/Users/builder/jenkins/workspace/xamarin-android-msbuild-pr-builder/build-tools/scripts/RunTests.targets\" (RunAllTests target(s)) -- FAILED.\r\n\r\nAfter this, execution of the `RunAllTests` target *stopped*,\r\npreventing the `RunApkTests` target from executing.\r\n\r\nThis is not a desirable state of affairs: *even if* a unit test fails,\r\nwe want to run *all* the unit tests, not just those that passed before\r\nthe first failure was observed.\r\n\r\nRework the `RunAllTests` target so that instead of using\r\n`DependsOnTargets`, we create a new `@(_RunTestTarget)` item group and\r\nuse the `<MSBuild/>` task to explicitly invoke the target with\r\n`ContinueOnError=\"ErrorAndContinue\"` specified. This should cause\r\n*all* test-related targets to execute, even if one fails."},{"Id":"7579073211","Type":"PullRequestEvent","CreatedAt":"2018-04-24T14:58:42","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1596","RelatedDescription":"Opened pull request \"[tests] Report errors last in `RunApkTests`\" (#1596) at xamarin/xamarin-android","RelatedBody":"Context: https://jenkins.mono-project.com/job/xamarin-android-pr-builder/2963/testReport/\r\n\r\nA build for PR #1489 ran 1110 tests; it *should* have run over 35,000.\r\nWhere are the missing tests?\r\n\r\nWhat's missing are the `.apk` on-device tests; BCL tests make up\r\n*most* of our expected test count.\r\n\r\nAnalysis of the build log shows that the on-device tests *are*\r\nrunning, with test results being downloaded:\r\n\r\n\t…/android-toolchain/sdk/platform-tools/adb -s emulator-5570  pull \"/data/data/Xamarin.Android.Bcl_Tests/files/.__override__/TestResults.xUnit.xml\" \"…/xamarin-android/tests/../bin/TestDebug/TestResult-Xamarin.Android.Bcl_Tests.xunit.xml\"\r\n\t...\r\n\t/data/data/Xamarin.Android.Bcl_Tests/files/.__override__/TestResults.xUnit.xml: 1 file pulled. 53.5 MB/s (3273412 bytes in 0.058s)\r\n\r\nbut those results don't appear on the `testReport` URL.\r\n\r\nThe problem is that the `RenameApkTestCases` target is never being\r\nexecuted, and the `RenameApkTestCases` is responsible for copying the\r\n`TestResult*` files where Jenkins looks for them:\r\n\r\n\tDone building target \"ReleaseAndroidTarget\" in project \"RunApkTests.targets\" -- FAILED.:\r\n\r\nThe `RenameApkTestCases` target executes *after*\r\n`ReleaseAndroidTarget`, but because `ReleaseAndroidTarget` failed, the\r\n`RenameApkTestCases` target isn't executed.\r\n\r\nMeanwhile, `ReleaseAndroidTarget` reports an error to ensure that\r\nerrors aren't overlooked; see commit 3b893cd4.\r\n\r\nAllow the `RenameApkTestCases` target to execute by adding a new\r\n`ReportComponentFailures` target. The `ReleaseAndroidTarget` will no\r\nlonger report errors, allowing the `RenameApkTestCases` target to\r\nexecute, while if any tests *do* fail, the `ReportComponentFailures`\r\ntarget will generate an appropriate error."},{"Id":"7578569580","Type":"PullRequestEvent","CreatedAt":"2018-04-24T13:46:42","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1595","RelatedDescription":"Opened pull request \"[build] setup $(XAIncludeProprietaryBits) for debugging/fastdev\" (#1595) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/issues/1577\r\n\r\nCurrently the open source `xamarin-android` bits do not support\r\ndebugging, fast deployment, and (perhaps?) other features. These are\r\nimplemented in the proprietary sources of Xamarin.Android, but there\r\n_should_ be a way to use these features if you have the commercial\r\nversion of Xamarin.Android installed on your system.\r\n\r\nTo support this:\r\n- Added a new `proprietary.csproj` project that copies specific\r\nproprietary files from your system's Xamarin.Android to the build output\r\nof `xamarin-android`\r\n- Added the new `$(XAIncludeProprietaryBits)` MSBuild property\r\n- Added a warning if `$(XAIncludeProprietaryBits)` is enabled\r\n\r\nThis feature allowed me to debug a change in `Mono.Android.dll` on\r\nWindows:\r\n1. Installed a commercial master build (VSIX) of Xamarin.Android into my\r\nVS 2017 15.7 Preview\r\n2. Made a change to `Mono.Android` in `Android.App.Activity`, where I\r\nadded a new method\r\n3. Built my local OSS copy of Xamarin.Android:\r\n    `msbuild Xamarin.Android.sln /t:Prepare`\r\n    `msbuild Xamarin.Adnroid.sln /p:XAIncludeProprietaryBits=True`\r\nNOTE: my msbuild is pathed to `C:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Enterprise\\MSBuild\\15.0\\Bin\\MSBuild.exe`\r\n4. Launched an elevated `Developer Command Prompt for VS 2017 Preview`\r\n5. Navigated to my `xamarin-android` checkout directory and ran\r\n`bin\\Debug\\bin\\setup-windows.exe`\r\n6. Opened VS 2017 Preview and created a new Xamarin.Android project\r\ntargeting v8.1\r\n7. Disabled \"fast deployment\" and \"shared runtime\", since I have a\r\nmodification in `Mono.Android.dll`\r\n8. Used my new method in `Android.App.Activity`, I was also able to\r\n\"step\" into the method while debugging\r\n\r\nFuture plans:\r\n- Since this change required use of `setup-windows.exe` I don't think we\r\ncan mark #1577 as finished until we have an equivalent on macOS\r\n- My thought is to rename `setup-windows.exe` to just `setup.exe` and also\r\nsupport macOS. It can make a symlink from\r\n`/Library/Frameworks/Xamarin.Android.framework/Versions/Current` to the\r\n`xamarin-android` build output directory"},{"Id":"7578403033","Type":"PullRequestEvent","CreatedAt":"2018-04-24T13:22:33","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1506","RelatedDescription":"Closed pull request \"[Xamarin.Android.Build.Tasks] Use `BlockingCollection` for Aapt logging.\" (#1506) at xamarin/xamarin-android","RelatedBody":"Rather than use a `lock` object we should be using a\r\ntried and tested `BlockingCollection` to store the\r\nlog messages from `aapt`."},{"Id":"7578363271","Type":"PullRequestEvent","CreatedAt":"2018-04-24T13:16:20","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1594","RelatedDescription":"Opened pull request \"[tests] Run all test targets\" (#1594) at xamarin/xamarin-android","RelatedBody":"An \"interesting\" observation was made looking at the results of\r\nPR #1562: even though both **macOS+xbuild** and **macOS+msbuild** are\r\nusing `msbuild` (as per eacb8cf6, until we change things so that\r\n**macOS+xbuild** *actually* uses `xbuild`), the number of unit tests\r\nexecuted differed significantly:\r\n\r\n[**macOS+msbuild**][0] ran 308 tests.\r\n[**macOS+xbuild**][1] ran 35724 tests.\r\n\r\n[0]: https://jenkins.mono-project.com/job/xamarin-android-msbuild-pr-builder/2490/testReport/\r\n[1]: https://jenkins.mono-project.com/job/xamarin-android-pr-builder/2969/testReport/\r\n\r\nThe apparent cause of this discrepency is that on the\r\n**macOS+msbuild** job, `Java.Interop.Dynamic-Tests.dll` crashed:\r\n\r\n\tmono --debug packages/NUnit.ConsoleRunner.3.7.0/tools/nunit3-console.exe  …/xamarin-android/external/Java.Interop/build-tools/scripts/../../bin/TestDebug/Java.Interop.Dynamic-Tests.dll  --result=\"TestResult-Java.Interop.Dynamic-Tests.xml;format=nunit2\" --output=\"bin/TestDebug/TestOutput-Java.Interop.Dynamic-Tests.txt\"\r\n\t...\r\n\tStacktrace: (TaskId:31)\r\n\t (TaskId:31)\r\n\t  at <unknown> <0xffffffff> (TaskId:31)\r\n\t  at (wrapper managed-to-native) System.Runtime.Remoting.RemotingServices.InternalExecute (System.Reflection.MethodBase,object,object[],object[]&)\r\n\t  at System.Runtime.Remoting.RemotingServices.InternalExecuteMessage (System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMethodCallMessage)\r\n\t  at System.Runtime.Remoting.Messaging.StackBuilderSink.SyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage)\r\n\t  at System.Runtime.Remoting.Messaging.ServerObjectTerminatorSink.SyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage)\r\n\t  at System.Runtime.Remoting.Lifetime.LeaseSink.SyncProcessMessage (System.Runtime.Remoting.Messaging.IMessage)\r\n\t  ...\r\n\tNative stacktrace: (TaskId:31)\r\n\t (TaskId:31)\r\n\t      0   mono                                0x000000010cc5b251 mono_handle_native_crash + 257 (TaskId:31)\r\n\t      1   mono                                0x000000010ccf79f6 altstack_handle_and_restore + 70 (TaskId:31)\r\n\t      2   mono                                0x000000010cc419f3 mono_aot_get_cached_class_info + 19 (TaskId:31)\r\n\t      3   mono                                0x000000010cd2f31f mono_class_is_subclass_of + 31 (TaskId:31)\r\n\t      4   libjava-interop.dylib               0x0000000131770968 get_gc_bridge_index + 120 (TaskId:31)\r\n\t      5   libjava-interop.dylib               0x00000001317702ac gc_bridge_class_kind + 60 (TaskId:31)\r\n\t      6   mono                                0x000000010ce19878 class_kind + 24 (TaskId:31)\r\n\t...\r\n\tDone building target \"RunJavaInteropTests\" in project \"RunTests.targets\" -- FAILED.: (TargetId:4)\r\n\tDone Building Project \"/Users/builder/jenkins/workspace/xamarin-android-msbuild-pr-builder/build-tools/scripts/RunTests.targets\" (RunAllTests target(s)) -- FAILED.\r\n\r\nAfter this, execution of the `RunAllTests` target *stopped*,\r\npreventing the `RunApkTests` target from executing.\r\n\r\nThis is not a desirable state of affairs: *even if* a unit test fails,\r\nwe want to run *all* the unit tests, not just those that passed before\r\nthe first failure was observed.\r\n\r\nRework the `RunAllTests` target so that instead of using\r\n`DependsOnTargets`, we create a new `@(_RunTestTarget)` item group and\r\nuse the `<MSBuild/>` task to explicitly invoke the target with\r\n`ContinueOnError=\"ErrorAndContinue\"` specified. This should cause\r\n*all* test-related targets to execute, even if one fails."},{"Id":"7578043654","Type":"PullRequestEvent","CreatedAt":"2018-04-24T12:21:50","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1592","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tests] Fix CheckMaxResWarningIsEmittedAsAWarning test.\" (#1592) at xamarin/xamarin-android","RelatedBody":"Turns out MSbuild was producing a slightly different warning message\r\nto xbuild for `CheckMaxResWarningIsEmittedAsAWarning`.\r\n\r\nWe expected\r\n\r\n\twarning APT0000: warning : max res 26, skipping values-v27\r\n\r\nbut got\r\n\r\n\twarning APT0000: max res 26, skipping values-v27\r\n\r\nso the test failed."},{"Id":"7577445316","Type":"IssuesEvent","CreatedAt":"2018-04-24T10:21:44","Actor":"yaliashkevich","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1593","RelatedDescription":"Opened issue \"GC.Collect() call crashes app (API Level 15)\" (#1593) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create sample android project from VS for Mac Template (button click counter)\r\n2. Modify button click event\r\n```\r\n            button.Click += delegate { \r\n                button.Text = $\"{count++} clicks!\";\r\n                GC.Collect();\r\n            };\r\n```\r\n3. Run app on android simulator (API level 15)\r\n4. Hit the button\r\n\r\n[sample.zip](https://github.com/xamarin/xamarin-android/files/1942259/sample.zip)\r\n\r\n\r\n\r\n### Expected Behavior\r\nApp counts clicks\r\n### Actual Behavior\r\nApp crashes after first click\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n[environment.txt](https://github.com/xamarin/xamarin-android/files/1942263/environment.txt)\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n[simulator.api15.txt](https://github.com/xamarin/xamarin-android/files/1942261/simulator.api15.txt)\r\n[log.txt](https://github.com/xamarin/xamarin-android/files/1942262/log.txt)\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7577386809","Type":"PullRequestEvent","CreatedAt":"2018-04-24T10:10:33","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1592","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tests] Fix CheckMaxResWarningIsEmittedAsAWarning test.\" (#1592) at xamarin/xamarin-android","RelatedBody":"Turns out MSbuild was producing a slightly different warning message\r\nto xbuild for `CheckMaxResWarningIsEmittedAsAWarning`.\r\n\r\nWe expected\r\n\r\n\twarning APT0000: warning : max res 26, skipping values-v27\r\n\r\nbut got\r\n\r\n\twarning APT0000: max res 26, skipping values-v27\r\n\r\nso the test failed."},{"Id":"7575359779","Type":"IssuesEvent","CreatedAt":"2018-04-24T01:14:56","Actor":"lin-zy1229","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1591","RelatedDescription":"Opened issue \"Array argument for Java Map's key lost its original memory address in binding method, during binding AAR.\" (#1591) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Native android aar's method\r\n```\r\nprivate ConcurrentHashMap<byte[], Object> map = new ConcurrentHashMap();\r\nObject getData(byte[] key) {\r\n    return map.get(key);\r\n}\r\nvoid putData(byte[] data) {\r\n    map.put(data, data);\r\n}\r\n```\r\n2. Xamarin android invoker method generated by binding generator\r\n```\r\nvoid GetData(byte[] p0) {\r\n    ...\r\n    IntPtr native_p0 = JNIEnv.NewArray (p0);\r\n    JValue* __args = stackalloc JValue [1];\r\n    __args [0] = new JValue (native_p0);\r\n    JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_getData_arrayB, __args);\r\n    ...\r\n}\r\nvoid PutData(byte[] p0) {\r\n    ...\r\n    IntPtr native_p0 = JNIEnv.NewArray (p0);\r\n    JValue* __args = stackalloc JValue [1];\r\n    __args [0] = new JValue (native_p0);\r\n    JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_putData_arrayB, __args);\r\n    ...\r\n}\r\n```\r\n3. When we use this Xamarin binded lib in code, it returns null always as follows.\r\n```\r\nbyte[] data=new byte[]{1,2,3};\r\nsomeObj.PutData(data);\r\nvar ans = someObj.GetData(data); // always returns null\r\n```\r\n\r\nHere, we know why ` someObj.GetData(data) `returns null always.\r\nIt is because` GetData(p0)` doesn't use `p0` itself as a key to get corresponding value, but it generates new address by` IntPtr native_p0 = JNIEnv.NewArray (p0)` and use it as a key.\r\nSo the Map variable couldn't find a proper key/value stored by the key (byte array pointer address) generated newly each time in calling  `someObj.GetData(data)`.\r\n\r\nHope you to fix this issue ASAP.\r\n\r\nIt should NOT return null in above code, and it SHOULD return byte[]{1,2,3} as corresponding value."},{"Id":"7574614992","Type":"IssuesEvent","CreatedAt":"2018-04-23T21:34:13","Actor":"xamarin-release-manager","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1511","RelatedDescription":"Closed issue \"Unstable framework versions are used when $(AndroidUselatestPlatformSDK)=true\" (#1511) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Copy the v8.1 framework to v108.1.99\r\n\r\n2. Edit v108.1.99\\AndroidApiInfo.xml, and set `<Id/>` to \"Z\", set `<Level/>` to 127, set `<Version/>` to v108.1.99, and `<Stable/>` to False:\r\n\r\n```xml\r\n    <AndroidApiInfo>\r\n      <Id>Z</Id>\r\n      <Level>127</Level>\r\n      <Name>Z Preview</Name>\r\n      <Version>v108.1.99</Version>\r\n      <Stable>False</Stable>\r\n    </AndroidApiInfo>\r\n```\r\n3. Copy $(AndroidSdkDirectory)\\platforms\\android-27 to $(AndroidSdkDirectory)\\platforms\\android-Z.\r\n\r\n4. Update a new or existing project so that $(TargetFrameworkVersion)=v8.0, and $(AndroidUseLatestPlatformSdk)=true\r\n\r\nAlternatively, a recent build from master which has early P preview support can be used.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nUsing a project with a $(TargetFrameworkVersion) lower than the max stable version, and setting $(AndroidUseLatestPlatformSdk)=true, I would expect my project to build against the latest stable version that is installed. In the case mentioned above, this would be android-27 (v8.1).\r\n\r\n### Actual Behavior\r\nA project with a $(TargetFrameworkVersion) lower than the max stable version, and setting $(AndroidUseLatestPlatformSdk)=true builds against my fake unstable framework version, android-Z.\r\n\r\n### Version Information\r\nXamarin.Android.Sdk-OSS-8.3.99.91_HEAD_33822ad.vsix\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttp://xqa.blob.core.windows.net/gist/log-83bd0e75034940db9ae887a8f5c03d98.txt\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->\n\n> VS bug [#594908](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/594908)"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7579576717","Type":"IssuesEvent","CreatedAt":"2018-04-24T16:15:17","Actor":"duzenko","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2540","RelatedDescription":"Opened issue \"[iOS] Map.UserTrackingMode broken when inside MasterDetailPage\" (#2540) at xamarin/Xamarin.Forms","RelatedBody":"Map does not show user location and/or direction headlight when UserTrackingMode is set the second time.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Start the attached app\r\n2. Click the 'nav' button\r\n3. Click the 'switch' button\r\n4. Click the 'switch' button\r\n5. Click the 'nav' button\r\n\r\n### Expected Behavior\r\nMap shows current location and direction headlight.\r\n\r\n### Actual Behavior\r\nMap does not show user location and/or direction headlight\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5\r\n- Last known good version: 2.3\r\n- IDE: VS2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11\r\n\r\n### Screenshots\r\n\r\n![simulator screen shot - iphone 6 - 2018-04-24 at 18 32 07](https://user-images.githubusercontent.com/1481807/39198243-43f570bc-47ef-11e8-9475-99dbad6d9fdd.png)\r\n![simulator screen shot - iphone 6 - 2018-04-24 at 18 32 20](https://user-images.githubusercontent.com/1481807/39198245-44291df4-47ef-11e8-939c-273409b08ea7.png)\r\n\r\n### Reproduction Link\r\n\r\n[asd.zip](https://github.com/xamarin/Xamarin.Forms/files/1943644/asd.zip)\r\n"},{"Id":"7579032965","Type":"PullRequestEvent","CreatedAt":"2018-04-24T14:53:11","Actor":"henricm","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2539","RelatedDescription":"Opened pull request \"Controlling Caret position on iOS,Android,UWP and color on iOS\" (#2539) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis PR adds support for getting and setting\r\ncaret position on a text Entry on iOS, Android and UWP.\r\n\r\nAlso adding support for setting CursorColor but only for iOS since\r\nit seems unsupported on UWP and couldn't figure out how to do it\r\non Android in an not too complicated manner.\r\n\r\n### Bugs Fixed ###\r\n\r\n- Fixes #1667 except for cursor color functionality on UWP and Android.\r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n - int Entry.CursorPosition { get; set; } //Bindable Property\r\n - int Entry.SelectionLength { get; set; } // Bindable Property\r\n - Color Entry.CursorColor { get; set; } // Bindable Property\r\n\r\n### PR Checklist ###\r\n\r\n- [X] Has tests (if omitted, state reason in description)\r\n- [X] Rebased on top of master at time of PR\r\n- [X] Changes adhere to coding standard\r\n- [X] Consolidate commits as makes sense\r\n"},{"Id":"7578923621","Type":"PullRequestEvent","CreatedAt":"2018-04-24T14:37:41","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2538","RelatedDescription":"Merged pull request \"[macOS] Fixes issue with hiding master page of `MasterDetailPage`\" (#2538) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFixes issue with hiding master page of `MasterDetailPage`\r\n\r\n### Bugs Fixed ###\r\n\r\nFixes https://github.com/xamarin/Xamarin.Forms/issues/2507\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nOn desktop `macOS` changes `IsPresentedProperty` have no effect to hide the master page.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"7578923595","Type":"IssuesEvent","CreatedAt":"2018-04-24T14:37:41","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2507","RelatedDescription":"Closed issue \"[macOS] MasterDetailPage: default MasterBehavior doesn't show Master page\" (#2507) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nWhen using a MasterDetailPage in macOS, there appears to be no `MasterBehavior.Popover` implementation. This could be intended, but it also appears the behavior for `MasterBehavioir.Default` is `Popover`, so macOS users cannot view the master page at all.\r\n\r\n### Steps to Reproduce\r\n\r\n1. File > New > Blank Forms App\r\n2. Add new macOS project (per [docs](https://docs.microsoft.com/en-us/xamarin/xamarin-forms/platform/mac#missing-xamarinforms-features) or [blog post](https://blog.xamarin.com/preview-bringing-macos-to-xamarin-forms/))\r\n3. Add a MasterDetailPage implementation\r\n4. Set the master-detail page to use `MasterBehavior.Default`\r\n5. Run on macOS to see missing master page\r\n\r\n### Expected Behavior\r\n\r\nBeing a desktop platform, I expected the default to be the same as `MasterBehavior.Split`, showing the master page alongside the initial detail page.\r\n\r\n### Actual Behavior\r\n\r\nThe master page is not shown, and there doesn't appear to be any way to view it by dragging in from the edge of any side of the app window.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: confirmed in 2.5.1.x and 3.0.0.354232-pre3\r\n- Last known good version: none found\r\n- IDE: VSMac\r\n- Platform Target Frameworks: macOS\r\n  - macOS: 4.2.1.28\r\n- Nuget Packages: just Forms and File>New defaults\r\n- Affected Devices: MacBook Pro\r\n\r\n### Screenshots\r\n\r\nResult of `MasterBehavior.Default` or `MasterBehavior.Popover`:\r\n![image](https://user-images.githubusercontent.com/713665/39009149-16e2c848-43c8-11e8-986b-162d96f3b7be.png)\r\n\r\nResult of `MasterBehavior.Split`:\r\n![image](https://user-images.githubusercontent.com/713665/39009140-1072b518-43c8-11e8-830e-65478210f088.png)\r\n\r\n> Note: the Y-flipped issue shown here has been resolved by wrapping the detail content in a container view.\r\n\r\n### Reproduction Link\r\n\r\nWhile this isn't the same as the steps above, it's very close. This is a course exercise for Xamarin University's XAM290 course where we explore `MasterBehavior`. It's also the source of the above screenshots.\r\n\r\nhttps://github.com/XamarinUniversity/XAM290/tree/3876fdea03b76fa3a137e5114a075c8b09184317"},{"Id":"7578357868","Type":"PullRequestEvent","CreatedAt":"2018-04-24T13:15:28","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2502","RelatedDescription":"Merged pull request \"[UWP] Fixes the reduced height of the main page\" (#2502) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nWhen calculating the size of the main page added check the first load after updating the mode `MainDetailControl`\r\nScreencast: https://www.screencast.com/t/P6PJyxT6d\r\n\r\n### Bugs Fixed ###\r\n\r\nFixes https://github.com/xamarin/Xamarin.Forms/issues/2228\r\n\r\n### API Changes ###\r\n\r\n--\r\n\r\n### Behavioral Changes ###\r\n\r\nHeight of main page calculates correctly\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"7578357849","Type":"IssuesEvent","CreatedAt":"2018-04-24T13:15:28","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2228","RelatedDescription":"Closed issue \" [UWP] MasterPage - Blank Area below Popover menu the *second* time you show it\" (#2228) at xamarin/Xamarin.Forms","RelatedBody":"Migrated from bugzilla, this is still happening as of version 2.5.0.280555\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=60106\r\n\r\nScreenshot\r\nhttps://bugzilla.xamarin.com/attachment.cgi?id=25259\r\n\r\nVisual Studio 2017 solution that reproduces the issue\r\nhttps://bugzilla.xamarin.com/attachment.cgi?id=25258\r\n\r\n----------\r\n\r\nThis may be related to:\r\n\r\nBug 54036 - [UWP] MasterPage - Bad Rendering\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=54036\r\n  \r\n[UWP] Correctly calculates height of Master Page content #953\r\nhttps://github.com/xamarin/Xamarin.Forms/pull/953\r\n\r\nHow to remove space in MasterDetailPage Master in xamarin Forms - UWP?\r\nhttps://stackoverflow.com/questions/44385234/how-to-remove-space-in-masterdetailpage-master-in-xamarin-forms-uwp\r\n\r\nI'm using Visual Studio 2017 15.3.5 and Xamarin.Forms 2.4.0.282 on Windows Anniversary Edition.\r\n\r\nI have a MasterDetailPage at the root of my UWP application, where the MasterBehavior is set to Popover and the Detail page is a Navigation page.  The *second* time I click the upper-left hamburger icon to display the menu, the height of the page is truncated such that there's a blank space the height of the title bar at the *bottom* the page.  It's almost like the height of the title bar is being subtracted from the height of the Master page twice.\r\n\r\nI've attached a screenshot and a Visual Studio 2017 solution that reproduces the issue.  All of the relevant Xamarin.Forms code is in App.xaml in the .Net Standard project.\r\n\r\nPlease note you have to open the menu a *second* time to reproduce the issue, so just running the application and opening the menu once won't be enough."},{"Id":"7578348170","Type":"PullRequestEvent","CreatedAt":"2018-04-24T13:13:55","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1984","RelatedDescription":"Merged pull request \"[iOS] Fixes for RefreshControl with iOS11 LargeTitles\" (#1984) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nWith latest UIKIt changes it seems there are a bunch of issues related with the new feature for LargeTitles and the RefreshControl, specially when one doesn't follow Apple Guidelines of having the UITableViewController as the first child of the UINavigationController.\r\n\r\nThe workaround is to manually scroll the UITableView to show the refresh control. \r\nWe listen to when the user is \"pulling\" the list and manual show the refresh if needed.\r\n\r\nWe only need the workaround for when using LargeTitles and are in Portrait mode. \r\n\r\nWhen the list view is in landscape mode there's a bug on Apple's side that doesn't show the refresh control even using native Xamarin.iOS application, one can replicate that using Xamarin.iOS largeTitles sample and disabling the sarchcontroller. \r\n\r\n### Bugs Fixed ###\r\n\r\n- fixes #1950\r\n\r\n### API Changes ###\r\n\r\nnone\r\n\r\n### Behavioral Changes ###\r\n\r\nThis should only affect iOS11 and if using LargeTitles and in portrait\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense"},{"Id":"7578348154","Type":"IssuesEvent","CreatedAt":"2018-04-24T13:13:54","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1950","RelatedDescription":"Closed issue \"Add a way to set RaiseOnEqual flag in bindable property to true\" (#1950) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nBindable properties are not set when the original value reference equals the new value. Xamarin.Forms includes an internal flag `SetValueFlags.RaiseOnEqual` to change this behavior. While this flag is correctly checked when applying a new value, there is no way to enable this flag.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a bindable property\r\n2. Set the value of the property\r\n3. Explicitly set the same value again\r\n\r\n### Expected Behavior\r\n\r\nProperty changed notification and a way to enable this behavior (as an option in the Bindable Property)\r\n\r\n### Actual Behavior\r\n\r\nNo notification\r\n\r\n### Use case\r\n\r\nThe bindable property contains information with a metric unit (e.g. 1 meter). The information is stored in an abstract way without a unit and the unit itself is added with an `IValueConverter`.\r\n\r\nThe user of the app changes his preferences; he now wants to see all information in imperial units. The source triggers a property changed notification with an empty string because all the converters need to be triggered again so that they can now represent the same information in a different manner (in this case: 3.28 feet).\r\n\r\n### Relevant code\r\n\r\nhttps://github.com/xamarin/Xamarin.Forms/blob/bfd3ad6491329e58ab145d20d2057ecfb0e06b52/Xamarin.Forms.Core/BindableObject.cs#L585\r\n\r\nOn line 585, there is a reference equals check. On lines 586 and 594 the code uses that check _or the unused RaiseOnEqual flag_ to verify if it should actually set the new value of the property.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.122203\r\n- Last known good version: ???\r\n- IDE: Visual Studio for Mac 7.3.3 (build 17)\r\n- Platform Target Frameworks: all\r\n- Android Support Library Version: N/A\r\n- Affected Devices: all\r\n\r\n### Screenshots\r\n\r\nN/A\r\n\r\n### Reproduction Link\r\n\r\nWill provide if needed (since every app will show this behavior).\r\n\r\n### IDE info\r\n```\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.3.3 (build 17)\r\nInstallation UUID: 75a3e4df-6d6e-4364-9dac-61e6293ef1f9\r\nRuntime:\r\n\tMono 5.4.1.7 (2017-06/e66d9abbb27) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 504010007\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.2\r\n\t1.1.1\r\n\t1.1.0\r\n\t1.0.5\r\n\t1.0.4\r\n\t1.0.1\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.0.4\r\n\t1.0.3\r\n\t1.0.0-preview2-1-003177\r\n\t1.0.0-preview2-003131\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.4.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.0\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.6.1.4 (Visual Studio Enterprise)\r\nHash: db807ec9\r\nBranch: xcode9.2\r\nBuild date: 2018-01-10 16:45:48-0500\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.1.5.0 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/sam/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.3 (API level 18)\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_162\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_162-b12)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.162-b12, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.0.0.216 (Visual Studio Enterprise)\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 703030017\r\nGit revision: 88d62dcf15156ff583f785fa668dbf2a254db12e\r\nBuild date: 2018-02-09 08:36:16-05\r\nXamarin addins: 7c8f967d67207118dd99a1d0cc9c228045b30c5f\r\nBuild lane: monodevelop-lion-d15-5\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.3\r\nDarwin 17.4.0 Darwin Kernel Version 17.4.0\r\n    Sun Dec 17 09:19:54 PST 2017\r\n    root:xnu-4570.41.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nAndroid Signature Tool 2.1.2\r\nGist Ide Information 1.1.0\r\nMSBuild Editor 2.0.1\r\nNuGet Package Explorer 0.2\r\nNuGet Package Management Extensions 0.12.6\r\nRedth's Addins 1.0.9\r\nShow in Github 1.0.4\r\nInternet of Things (IoT) development (Preview) 7.1\r\n```"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7581936033","Type":"PullRequestEvent","CreatedAt":"2018-04-25T01:02:35","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3984","RelatedDescription":"Opened pull request \"[foundation] Avoid unnecessary native calls for NSNull.Null. Fixes #3544\" (#3984) at xamarin/xamarin-macios","RelatedBody":"Repetitive calls to `NSNull.Null.Handle`, e.g. from `NSArray.UnsafeGetItem<T>`,\nmeans several (one by item), costly, calls into ObjC code - but it always\nreturn the same (native) singleton.\n\nThis manually cache the managed `NSNull.Null` static value, once it's\ninitialized the first time, so future calls won't have the performance\npenalty.\n\nhttps://github.com/xamarin/xamarin-macios/issues/3544"},{"Id":"7581880214","Type":"PullRequestEvent","CreatedAt":"2018-04-25T00:41:04","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3983","RelatedDescription":"Opened pull request \"Bump mono to the head of 2017-12, including the workaround for #8403\" (#3983) at xamarin/xamarin-macios","RelatedBody":"Commit list for mono/mono:\n\n* mono/mono@ea8a24b1bbf [2017-12] [mini] Don't verify types if you store to a pointer byref. (#8425)\n* mono/mono@a5b924fa68a Merge pull request #8412 from mono/backport-new-boottime-2017-12\n* mono/mono@34396522f38 [arm] Fix a regression introduced by: (#8415)\n* mono/mono@dd6e11936be [runtime] Don't use clock_gettime on WatchOS and tvOS.\n* mono/mono@e81726eb290 [runtime] Don't use clock_gettime in MacOS.\n* mono/mono@c7a91c01fa3 [runtime] Fix mono_msec_boottime () so it compiles on older ios versions, clock_gettime () is only available from ios 10. (#7671)\n* mono/mono@c6b39a06142 [mono-time] Replace mono_msec_boottime() with CoreCLR implementation. Fixes https://bugzilla.xamarin.com/show_bug.cgi?id=58413\n* mono/mono@99af4a9eda0 [watch] Align cinfo->stack_usage to 16 on watchos. (#8377)\n* mono/mono@75be2e65371 [sdks] Match more closely the pre-SDKs configure flags passed to LLVM (#8382)\n* mono/mono@9273efd9735 [sdks] Fix mktemp parameters (#8325)\n* mono/mono@8eb8f7d5e74 [sdks] Fix typo + Fix verbosity of unzip-android-archive.sh (#8245)\n* mono/mono@c6a8c0e38af [System.Net.Http] Use '*' as the host instead of '+' in the tests. Fixes xamarin/maccore#673.\n* mono/mono@c2e1021ed00 [2017-12][TermInfo] support new file format terminfo2 introduced with ncurses6.1 (#8203)\n* mono/mono@29bbcfb0222 [sdks] Add ANDROID_BUILD_TOOLS_DIR to differentiate it from ANDROID_BUILD_TOOLS_VERSION (#8193)\n* mono/mono@2cc6bede971 [sdks] Fix typo (#8189)\n* mono/mono@16cad3ccd47 [sdks] Add support for building llvm unless the USE_PREBUILT_LLVM Make.config var is set. (#8017) (#8151)\n* mono/mono@8605da46f5c [System] Don't use http://www.mono-project.com for test (#8147)\n* mono/mono@d194b8fd4df [2017-12] [Facades] Add System.Drawing.Common on mobile only (#8130)\n* mono/mono@a7496807837 [sdks] Fix arguments passed to llvm on Linux (#8108)\n\nDiff: https://github.com/mono/mono/compare/b4e428d7c410dba6973d84ec13532debb5535d78...ea8a24b1bbf950699336bd56e9bab9f046da11c5"},{"Id":"7580627894","Type":"PullRequestEvent","CreatedAt":"2018-04-24T19:30:24","Actor":"alexischr","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3981","RelatedDescription":"Merged pull request \"[Make.config] Update MIN_OSX_BUILD_VERSION\" (#3981) at xamarin/xamarin-macios","RelatedBody":"Xcode 9.3 requires a Mac running macOS 10.13.2 or later."},{"Id":"7580422673","Type":"PullRequestEvent","CreatedAt":"2018-04-24T18:50:21","Actor":"alexischr","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3981","RelatedDescription":"Opened pull request \"[Make.config] Update MIN_OSX_BUILD_VERSION\" (#3981) at xamarin/xamarin-macios","RelatedBody":"Xcode 9.3 requires a Mac running macOS 10.13.2 or later."},{"Id":"7579434991","Type":"PullRequestEvent","CreatedAt":"2018-04-24T15:52:45","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3980","RelatedDescription":"Opened pull request \"[generator] More correctly handle XM System TargetFramework and Syste…\" (#3980) at xamarin/xamarin-macios","RelatedBody":"…m.Drawing references\r\n\r\n- https://github.com/xamarin/xamarin-macios/issues/3948"},{"Id":"7579360455","Type":"PullRequestEvent","CreatedAt":"2018-04-24T15:41:16","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3979","RelatedDescription":"Opened pull request \"[runtime] Don't lock while calling selectors that can up calling managed code. Fixes #3943.\" (#3979) at xamarin/xamarin-macios","RelatedBody":"Instead of locking the framework peer lock while we call release on dying\nobject, we just lock and then immediately unlock again before calling release.\n\nThis enforces an execution order that still strong enough to not run into race\nconditions, while at the same time not running into deadlocks.\n\nFixes https://github.com/xamarin/xamarin-macios/issues/3943."},{"Id":"7578132540","Type":"PullRequestEvent","CreatedAt":"2018-04-24T12:38:03","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3977","RelatedDescription":"Closed pull request \"[compare-commits] Create directory before trying to create files in it.\" (#3977) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"7578046496","Type":"IssuesEvent","CreatedAt":"2018-04-24T12:22:25","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3978","RelatedDescription":"Closed issue \"UIApplication.SharedApplication.Delegate.GetWindow() causes crash\" (#3978) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create X.Forms app.\r\n1. In iOS code, create a `[Dependency]` service with the following code in it:\r\n    ```csharp\r\n    var window = UIApplication.SharedApplication.Delegate.GetWindow();\r\n    ```\r\n1. Exercise the line of code above.\r\n\r\n### Expected Behavior\r\n```csharp\r\nDebug.Assert(window != null); //no-op\r\n```\r\n\r\n### Actual Behavior\r\n```\r\n[AppDelegate window]: unrecognized selector sent to instance 0x6080002088d0\r\n```\r\n\r\n### Environment\r\n\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.4.3 (build 10)\r\nInstallation UUID: 03405723-9599-43ad-8c66-07d042449f83\r\nRuntime:\r\n\tMono 5.8.1.0 (2017-10/6bf3922f3fd) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 508010000\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.2\r\n\t1.1.1\r\n\t1.1.0\r\n\t1.1.0-preview1-001100-00\r\n\t1.0.5\r\n\t1.0.4\r\n\t1.0.3\r\n\t1.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.0.4\r\n\t1.0.3\r\n\t1.0.0-rc4-004771\r\n\t1.0.0-preview2.1-003155\r\n\t1.0.0-preview2-1-003177\r\n\t1.0.0-preview2-003121\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.8.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\n'/Applications/Xamarin Profiler.app' not found\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.2.0.16 (Visual Studio Community)\r\nAndroid SDK: ~/Library/Developer/Xamarin/android-sdk-mac_x86\r\n\tSupported Android versions:\r\n\t\t4.0.3 (API level 15)\r\n\t\t4.1   (API level 16)\r\n\t\t4.2   (API level 17)\r\n\t\t4.3   (API level 18)\r\n\t\t4.4   (API level 19)\r\n\t\t5.0   (API level 21)\r\n\t\t5.1   (API level 22)\r\n\t\t6.0   (API level 23)\r\n\t\t7.0   (API level 24)\r\n\t\t7.1   (API level 25)\r\n\t\t8.0   (API level 26)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_73\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_73-b02)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.73-b02, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.3 (14154)\r\nBuild 9E145\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.2.1.29 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.9.1.24 (Visual Studio Community)\r\nHash: f62de472\r\nBranch: xcode9.3\r\nBuild date: 2018-03-29 19:30:53-0400\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 704030010\r\nGit revision: 5af3e98549653fcc5335896ccc296343d08f31bb\r\nBuild date: 2018-04-12 12:32:07-04\r\nXamarin addins: fadb82fb0fe2668cb7789f8b524aec6fb8568ee7\r\nBuild lane: monodevelop-lion-d15-6\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.4\r\nDarwin 17.5.0 Darwin Kernel Version 17.5.0\r\n    Mon Mar  5 22:24:32 PST 2018\r\n    root:xnu-4570.51.1~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nDotNetCoreSupportAnyTargetFramework 1.0\r\nMSBuild Editor 2.0.3\r\nMicroFramework 1.0.3\r\nNuGet Package Explorer 0.2\r\nNuGet Package Management Extensions 0.12.6\r\nRedth's Addins 1.0.9\r\nInternet of Things (IoT) development (Preview) 7.1\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"988809546146701312","CreatedAt":"2018-04-24T15:59:01+00:00","UserScreenname":"xamarinhq","Text":"Running #Xamarin.iOS unit tests in #VSTS: https://t.co/20PDCJZkbJ https://t.co/bAWyV5Zt2G","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":28,"FavoriteCount":11,"RawContent":null},{"Id":"988493654808498176","CreatedAt":"2018-04-23T19:03:47+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/qyMCa5TERh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":87,"FavoriteCount":30,"RawContent":null},{"Id":"988444639064666114","CreatedAt":"2018-04-23T15:49:01+00:00","UserScreenname":"xamarinhq","Text":"Just push play—using Google Play on an Android Emulator: https://t.co/wl37sjNIjv https://t.co/lnoWKsVf6F","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":41,"FavoriteCount":16,"RawContent":null},{"Id":"988180901405364225","CreatedAt":"2018-04-22T22:21:01+00:00","UserScreenname":"xamarinhq","Text":"Add a search bar to your iOS 11 #Xamarin apps: https://t.co/T9OdiJFhmH https://t.co/WHbOgNnjfL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":16,"RawContent":null},{"Id":"987830341409832966","CreatedAt":"2018-04-21T23:08:01+00:00","UserScreenname":"xamarinhq","Text":"Extend your #Xamarin app's reach by adding language support with the Multilingual App Toolkit:… https://t.co/VcwvXVvsi6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":111,"FavoriteCount":52,"RawContent":null},{"Id":"987416244490993664","CreatedAt":"2018-04-20T19:42:32+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":112,"FavoriteCount":49,"RawContent":null},{"Id":"987362257762967553","CreatedAt":"2018-04-20T16:08:01+00:00","UserScreenname":"xamarinhq","Text":"Sketch out your next great app idea with Ink to Code, and see your ideas immediately converted into recognized comp… https://t.co/4JyHATQW2I","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":70,"FavoriteCount":17,"RawContent":null},{"Id":"986658974685679617","CreatedAt":"2018-04-18T17:33:25+00:00","UserScreenname":"xamarinhq","Text":"Automatic iOS app provisioning with #VS2017 15.7 Preview 3: https://t.co/vFjy3uXtie https://t.co/sLhjkaHc9X","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":101,"FavoriteCount":54,"RawContent":null},{"Id":"986626430950920192","CreatedAt":"2018-04-18T15:24:06+00:00","UserScreenname":"xamarinhq","Text":"Check out Android Emulator version 27.0.2, now featuring \"Quick Boot\" to launch the emulator in just a few seconds:… https://t.co/piucqHprNe","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":118,"FavoriteCount":50,"RawContent":null},{"Id":"986268805629345792","CreatedAt":"2018-04-17T15:43:01+00:00","UserScreenname":"xamarinhq","Text":"Minimizes the complexity of video playback across Android, iOS, and Windows environments to deliver rich media expe… https://t.co/eK0geeikW6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":64,"FavoriteCount":22,"RawContent":null},{"Id":"985953326079594496","CreatedAt":"2018-04-16T18:49:25+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":57,"FavoriteCount":37,"RawContent":null},{"Id":"985907924479479811","CreatedAt":"2018-04-16T15:49:01+00:00","UserScreenname":"xamarinhq","Text":"Adding sound to a #XamarinForms app using the SimpleAudioPlayer plugin: https://t.co/r8NSFRpl33 https://t.co/HMGMdGgDYr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":15,"RawContent":null},{"Id":"985296899346456576","CreatedAt":"2018-04-14T23:21:01+00:00","UserScreenname":"xamarinhq","Text":"Try out the #Xamarin Android Device Manager Preview, a tool for creating, editing, and controlling Android virtual… https://t.co/POMrs2vlnD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":66,"FavoriteCount":33,"RawContent":null},{"Id":"984843662428459008","CreatedAt":"2018-04-13T17:20:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/1JLVLvKR0M","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":26,"RawContent":null},{"Id":"984821292938465285","CreatedAt":"2018-04-13T15:51:07+00:00","UserScreenname":"xamarinhq","Text":"Start shipping better apps, faster with this curated list of #VSAppCenter resources: https://t.co/jU0cnONnM8 https://t.co/KTX4gcGjqZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":12,"RawContent":null},{"Id":"984463408073408513","CreatedAt":"2018-04-12T16:09:01+00:00","UserScreenname":"xamarinhq","Text":"CoreML Programming with Xamarin.Mac and F#: https://t.co/vI7JuxjkWa https://t.co/tX03cw88GD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":38,"FavoriteCount":15,"RawContent":null},{"Id":"984140279061020672","CreatedAt":"2018-04-11T18:45:01+00:00","UserScreenname":"xamarinhq","Text":"Get started with new #XamarinForms #XAML IntelliSense functionality in #VisualStudio 2017: https://t.co/EPKoitU5bA https://t.co/JnlquxCZN9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":37,"RawContent":null},{"Id":"983738884319334400","CreatedAt":"2018-04-10T16:10:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build Xamarin.iOS from the source code in the second part of our four-part series on debugging… https://t.co/uVkITyoInQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":29,"FavoriteCount":12,"RawContent":null},{"Id":"983374729166934016","CreatedAt":"2018-04-09T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"We’ve updated the #XamarinForms project templates in #VS2017 to include #dotNET Standard support and customization… https://t.co/O4ILyulYAJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":27,"RawContent":null},{"Id":"983104477468266496","CreatedAt":"2018-04-08T22:09:07+00:00","UserScreenname":"xamarinhq","Text":"Adding geospatial calculations to your Xamarin apps with Azure CosmosDB: https://t.co/acrN8gdJdS https://t.co/7dgtdHbqn9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":16,"RawContent":null}]}},"RunOn":"2018-04-25T05:30:45.1804932Z","RunDurationInMilliseconds":4282}