{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin and Azure Office Hours Recap from December 2018 and January 2019","PublishedOn":"2019-02-21T18:11:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"That&#8217;s right, I ❤️ every single one of you(!) and I want to know more about your stories building mobile apps. I want to hear stories of your successes and also, the not-so-successful...","Href":"https://blog.xamarin.com/xamarin-azure-office-hours-recap-december-january/","RawContent":null},{"Title":"Persisting Settings and Preferences in Mobile Apps with Xamarin.Essentials","PublishedOn":"2019-02-19T19:56:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"An essential part of any mobile application is the ability to persist data. Sometimes that is a large amount of data that requires a database, but often it is smaller pieces of data such as settings...","Href":"https://blog.xamarin.com/persisting-settings-preferences-mobile-apps-xamarin-essentials/","RawContent":null},{"Title":"Xamarin Developer Blog is Getting an Update!","PublishedOn":"2019-02-15T18:56:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Next week, the Xamarin Developer Blog will be migrating to a new platform with a modern, clean design and powerful features that will make it easy for you to discover and share great content. Starting...","Href":"https://blog.xamarin.com/xamarin-developer-blog-is-getting-an-update/","RawContent":null},{"Title":"Visual Studio Mobile Developer Podcast: Releases, Previews, and Roadmaps!","PublishedOn":"2019-02-13T19:56:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Visual Studio Mobile Developer Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in mobile and cloud development. In this episode, we discuss the best of...","Href":"https://blog.xamarin.com/podcast-releases-previews-roadmaps/","RawContent":null},{"Title":"Easily Check Mobile Device Connectivity with Xamarin.Essentials","PublishedOn":"2019-02-12T19:06:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the best parts of a mobile device is their instant access to the internet. As a mobile app developer, it&#8217;s great to be able to pull data from the server to our apps to provide users with...","Href":"https://blog.xamarin.com/easily-check-mobile-device-connectivity-with-xamarin-essentials/","RawContent":null},{"Title":"5 Things You’ll Love in Xamarin.Forms 3.5","PublishedOn":"2019-02-06T17:22:16+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Although Valentine&#8217;s Day isn&#8217;t for a few more days, we just couldn&#8217;t wait to celebrate the love by sharing a new stable release of Xamarin.Forms &#8211; 3.5. Your engagement and...","Href":"https://blog.xamarin.com/5-things-youll-love-xamarin-forms-3-5/","RawContent":null},{"Title":"Using Existing C++ Libraries in Cross-Platform Xamarin.Forms Applications","PublishedOn":"2019-02-04T18:52:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There are many libraries developed using C or C++ which can be brought to bear when creating Xamarin-based mobile apps such as those leveraged by Microsoft’s Hyperlapse Mobile and Pix Camera in order...","Href":"https://blog.xamarin.com/using-c-libraries-xamarin-forms-apps/","RawContent":null},{"Title":"Mobile & .NET Developer Community Events in February","PublishedOn":"2019-02-01T17:31:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Fall in love with building your next mobile application by networking with local user groups to learn about new and exciting releases, tooling, or updates with Xamarin and .NET related technologies!...","Href":"https://blog.xamarin.com/mobile-net-developer-community-events-in-february/","RawContent":null},{"Title":"Complex UI with FastGrid for Xamarin.Forms","PublishedOn":"2019-01-30T17:56:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This guest post was contributed by Slava Chernikoff (Principal Engineer at Binwell,  Microsoft MVP, Xamarin Certified Mobile Developer), Artem Tischenko (Xamarin developer at Binwell) and Kirill...","Href":"https://blog.xamarin.com/complex-ui-with-fastgrid-for-xamarin-forms/","RawContent":null},{"Title":"Android’s D8 dexer and R8 shrinker","PublishedOn":"2019-01-28T18:10:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There is quite a bit of complexity to packaging an Android application. Xamarin.Android has to run through the same build pipeline as Android apps built in Android Studio&#8211;with the addition of...","Href":"https://blog.xamarin.com/androids-d8-dexer-and-r8-shrinker/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9127403926","Type":"PullRequestEvent","CreatedAt":"2019-02-25T03:58:47","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2764","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] remove <Dx/> task\" (#2764) at xamarin/xamarin-android","RelatedBody":"There was only one place in monodroid where the `<Dx/>` task was still\r\nused, which I was able to recently remove.\r\n\r\nWe should remove `<Dx/>` to avoid confusion between the other related\r\ntasks that are in use:\r\n* `<CompileToDalvik/>`\r\n* `<D8/>` and `<R8/>`\r\n\r\nThis will simplify places in monodroid where I need to add d8 support.\r\n\r\nThere is a scenario where \"Enhanced Fast Deployment\" compiles dex\r\nfiles using these tasks."},{"Id":"9121083634","Type":"PullRequestEvent","CreatedAt":"2019-02-22T22:00:03","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2761","RelatedDescription":"Merged pull request \"[r8] bump to 1.3.52\" (#2761) at xamarin/xamarin-android","RelatedBody":"Context: https://mvnrepository.com/artifact/com.android.tools/r8/1.3.52\r\nContext: https://r8.googlesource.com/r8/+/refs/tags/1.3.52/build.gradle#52\r\n\r\nUpdate r8 to the latest stable release on Maven.\r\n\r\nThere is also now some dependencies on packages at:\r\n\r\n    https://kotlin.bintray.com/kotlinx\r\n\r\nI updated the `repositories` defined in `build.gradle` to match what r8's source code has."},{"Id":"9121077975","Type":"PullRequestEvent","CreatedAt":"2019-02-22T21:58:53","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2762","RelatedDescription":"Merged pull request \"Update CODEOWNERS\" (#2762) at xamarin/xamarin-android","RelatedBody":"* Added myself for `/src/r8`\r\n* Added @garuma for the new designer MSBuild targets file"},{"Id":"9119951763","Type":"PullRequestEvent","CreatedAt":"2019-02-22T18:32:50","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2759","RelatedDescription":"Merged pull request \"Don't strip some Windows DLLs\" (#2759) at xamarin/xamarin-android","RelatedBody":"32-bit Windows DLLs cannot be stripped (`strip` from mxe fails when attempting\r\nto do that). This commit adds a metadata item to the `_MonoRuntime` items which\r\ntells the build whether it's ok to strip the DLL for particular instance of\r\nthe runtime build."},{"Id":"9119107494","Type":"PullRequestEvent","CreatedAt":"2019-02-22T16:14:57","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2762","RelatedDescription":"Opened pull request \"Update CODEOWNERS\" (#2762) at xamarin/xamarin-android","RelatedBody":"* Added myself for `/src/r8`\r\n* Added @garuma for the new designer MSBuild targets file"},{"Id":"9118465345","Type":"PullRequestEvent","CreatedAt":"2019-02-22T14:43:42","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2761","RelatedDescription":"Opened pull request \"[r8] bump to 1.3.52\" (#2761) at xamarin/xamarin-android","RelatedBody":"Context: https://mvnrepository.com/artifact/com.android.tools/r8/1.3.52\r\nContext: https://r8.googlesource.com/r8/+/refs/tags/1.3.52/build.gradle#52\r\n\r\nUpdate r8 to the latest stable release on Maven.\r\n\r\nThere is also now some dependencies on packages at:\r\n\r\n    https://kotlin.bintray.com/kotlinx\r\n\r\nI updated the `repositories` defined in `build.gradle` to match what r8's source code has."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9127290635","Type":"PullRequestEvent","CreatedAt":"2019-02-25T03:21:41","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5194","RelatedDescription":"Merged pull request \"[Visual] Material Pickers\" (#5194) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nVisual material implementation for the entry fields that are used for pickers. The pickers themselves are still native but this PR now makes the *textfields* use the same material design between iOS and Android\r\n\r\n### Issues Resolved ### \r\n- fixes #5010 \r\n\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nAndroid Material vs Default\r\n![image](https://user-images.githubusercontent.com/5375137/52540553-ff42b300-2d47-11e9-80bb-9409ea9b545d.png)\r\n\r\niOS Material vs Default\r\n![image](https://user-images.githubusercontent.com/5375137/52540941-8a25ac80-2d4c-11e9-8b82-e35eae622e0b.png)\r\n\r\n\r\n\r\n### Testing Procedure ###\r\nRun Visual Gallery and test out the pickers.\r\nCompare iOS and Android\r\n\r\n```C#\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Text;\r\n\r\nnamespace Xamarin.Forms.Sandbox\r\n{\r\n\tpublic partial class App \r\n\t{\r\n\t\t// This code is called from the App Constructor so just initialize the main page of the application here\r\n\t\tvoid InitializeMainPage()\r\n\t\t{\r\n\t\t\tvar picker = new Picker() { ItemsSource = new List<string> { \"cat\" } };\r\n\t\t\tvar datePicker = new DatePicker();\r\n\t\t\tvar timePicker = new TimePicker();\r\n\r\n\t\t\tMaterial.Picker.SetPlaceholder(picker, \"Click to Picker\");\r\n\t\t\tMaterial.DatePicker.SetPlaceholder(datePicker, \"Click to date Picker\");\r\n\t\t\tMaterial.TimePicker.SetPlaceholder(timePicker, \"Click to time Picker\");\r\n\r\n\r\n\t\t\tMaterial.Picker.SetPlaceholderColor(picker, Color.Green);\r\n\t\t\tMaterial.DatePicker.SetPlaceholderColor(datePicker, Color.Pink);\r\n\t\t\tMaterial.TimePicker.SetPlaceholderColor(timePicker, Color.Yellow);\r\n\r\n\t\t\tMainPage = new ContentPage()\r\n\t\t\t{\r\n\t\t\t\tContent = CreateStackLayout(new View[] { picker, datePicker, timePicker  })\r\n\t\t\t};\r\n\r\n\t\t\tMainPage.Visual = VisualMarker.Material;\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n"},{"Id":"9126855792","Type":"IssuesEvent","CreatedAt":"2019-02-25T00:50:56","Actor":"mattleibow","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5366","RelatedDescription":"Opened issue \"Android + Visual + Focus is wonky\" (#5366) at xamarin/Xamarin.Forms","RelatedBody":"I am not sure of all the things, but for some reason the whole focus things for Android controls (appears to be certain Material controls) is going wonky. It might also be the \"fast renderer\" part, but can't say for sure as there are not that many other fast renderers.\r\n\r\nFor example, if you tap the material page with sliders:\r\n![android-focus](https://user-images.githubusercontent.com/1096616/53307530-44b3c400-38a2-11e9-8842-f6f1e594107c.gif)\r\n\r\nI added all sorts of focus-change listeners and events, but nothing appears to trigger. It looks to be a \"visually focus, but not really\" case.\r\n\r\nWhen tapping entry (while holding the pointer down) the background of some page, **ALL** the controls get focus. This can be seen with the entry getting darker:\r\n![android-entry](https://user-images.githubusercontent.com/1096616/53307358-47adb500-38a0-11e9-91c6-12f90e5e26ec.gif)\r\n\r\nAnd, I have also noticed this in some cases - the WHOLE PAGE gets a ripple???\r\n![android-ripples](https://user-images.githubusercontent.com/1096616/53308214-10db9d00-38a8-11e9-97b3-d235a9d32bca.gif)\r\n\r\nI can't reliably reproduce that one, but it happens. And, as a page can't get focus, this might be some event we are adding somewhere? Maybe we are making the wrong thing \"focusable\"?"},{"Id":"9126801689","Type":"PullRequestEvent","CreatedAt":"2019-02-25T00:25:40","Actor":"AndreiMisiukevich","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5365","RelatedDescription":"Opened pull request \"fix https://github.com/xamarin/Xamarin.Forms/issues/5346\" (#5365) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nModified SetBackgroundColor method\r\n\r\n```csharp\r\npublic virtual void SetBackgroundColor(UITableViewCell tableViewCell, Cell cell, UIColor color)\r\n{\r\n    tableViewCell.TextLabel.BackgroundColor = color; // New line\r\n    tableViewCell.ContentView.BackgroundColor = color; // New line\r\n    tableViewCell.BackgroundColor = color;\r\n}\r\n```\r\n\r\n### Issues Resolved ### \r\n- fixes #5346 \r\n\r\n### API Changes ###\r\nNone\r\n\r\n### Platforms Affected ### \r\n\r\n- iOS\r\n\r\n### Behavioral/Visual Changes ###\r\nActual behavior: you cannot change background color of non-header cell by setting platform-specific property\r\n\r\n\r\n\r\n### Testing Procedure ###\r\n\r\n* Open original issue #5346 \r\n* Run the attached sample on iOS.\r\n* Browse to the ListView/Cell Platform-Specifics page.\r\n\r\n"},{"Id":"9126781989","Type":"PullRequestEvent","CreatedAt":"2019-02-25T00:16:15","Actor":"myroot","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5364","RelatedDescription":"Opened pull request \"[Tizen] Add CollectionView Tizen Renderer\" (#5364) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n<!-- Describe your changes here. -->\r\n Implementation CollectionView Tizen Renderer\r\n Implementation tizen layer CollectionView\r\n \r\n * Unsupported feature\r\n     * SnapPointsAlignment.Center / SnapPointsAlignment.End\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes https://github.com/xamarin/Xamarin.Forms/issues/3172\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n- Tizen\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n![5cc961c6-02ab-11e9-8e37-fa8f83de665b](https://user-images.githubusercontent.com/1029155/53307214-73995c80-38d9-11e9-9168-6ce8e9ddcc4a.gif)![10c5bf80-2eee-11e9-8ec0-dfa6ca64fb9a](https://user-images.githubusercontent.com/1029155/53307215-75fbb680-38d9-11e9-938e-8b19eaac8898.gif)\r\n![49669880-2ef0-11e9-8f10-6337a5d2d526](https://user-images.githubusercontent.com/1029155/53307218-7a27d400-38d9-11e9-9374-f90fafd86da9.gif)\r\n\r\n\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9126737891","Type":"PullRequestEvent","CreatedAt":"2019-02-24T23:55:33","Actor":"AndreiMisiukevich","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5363","RelatedDescription":"Opened pull request \"[macOS] Image crashes App during disposing its renderer\" (#5363) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nPrevent creating new native controls if XF element == null\r\n\r\n### API Changes ###\r\nNone\r\n\r\n### Platforms Affected ### \r\n- MacOS\r\n### Behavioral/Visual Changes ###\r\nNo crash\r\n\r\n### Before/After Screenshots ### \r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nOpen ControlGallery and search Issue342. Try to open it, then try to navigate back.\r\n\r\nActual behavior: crash in ViewRenderer.\r\n\r\n"},{"Id":"9126528779","Type":"IssuesEvent","CreatedAt":"2019-02-24T22:14:18","Actor":"seankanderson","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5362","RelatedDescription":"Opened issue \"UWP Window resize throws exception and content does not layout for masterdetailpage\" (#5362) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nException thrown in UWP project when resizing a window after setting a navigation page in the detail view.\r\n\r\nMasterBehavior = MasterBehavior.Popover;\r\n\r\nOnly occurs when set to Popover. Otherwise resize is buggy and hides parent window control buttons on resize. See images.\r\n\r\nSystem.NullReferenceException\r\n  HResult=0x80004003\r\n  Message=Object reference not set to an instance of an object.\r\n  Source=Xamarin.Forms.Platform.UAP\r\n  StackTrace:\r\n   at Xamarin.Forms.Platform.UWP.MasterDetailPageRenderer.OnIsPaneOpenChanged(DependencyObject sender, DependencyProperty dp)\r\n\r\n### Steps to Reproduce\r\n\r\n1. Build and run this XF UWP project: \r\nhttps://github.com/seankanderson/XamarinFormsUwpMasterDetailException\r\n2. Navigate to view the masterdetail menu\r\n3. Grab bottom right corner and resize to make the window larger\r\n3. Notice Error/Excption in Output window.\r\n4. Notice the horrid resize behavior (happens whether there is an exception or not)\r\n\r\n### Expected Behavior\r\nWindow should resize and content should fit and layout automatically\r\nShould not throw an exception \r\n\r\n### Actual Behavior\r\nWindow controls in top right disappear and content does not layout\r\nException is thrown\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.5.0.169047\r\n- Last known good version: ???\r\n- IDE: Visual Studio 2017 15.9.4\r\n- Platform Target Frameworks: \r\n   - UWP:  target doesnt matter (been using 16299+)\r\n\r\n### Screenshots\r\nScreenshots of my main development project/app: \r\n![image](https://user-images.githubusercontent.com/1112636/53304867-70a25b80-3848-11e9-9a4a-eeeef0cababe.png)\r\n\r\n![image](https://user-images.githubusercontent.com/1112636/53304870-7e57e100-3848-11e9-9a75-8f2c9e5e3a5f.png)\r\n\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/seankanderson/XamarinFormsUwpMasterDetailException\r\n"},{"Id":"9126508435","Type":"IssuesEvent","CreatedAt":"2019-02-24T22:04:42","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5019","RelatedDescription":"Closed issue \"[iOS] CollectionView alignment when using Grid\" (#5019) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nWhen writting some UITests for position of items using CollectionView grid horizontal mode, seems that using the default text of a item (no template) the item in the 2nd row isn't fully aligned.\r\n\r\nTest failing on iOS : https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=234060\r\n\r\nAppCenter test run iOS12 : https://appcenter.ms/orgs/xtc-Xamarin-Forms/apps/XamControl/test/series/pull-4697/runs/f8e90aab-d973-4d1f-aa4d-d9c5dee6ae17\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run the 3.5.0 branch and visit the Default Text (Grid) Gallery\r\n2. Check the alignment of the 1st items of each row\r\n3. the item on the 2nd row doesn't start and X=0\r\n\r\n### Expected Behavior\r\n\r\nItem should be align left no margin\r\n\r\n### Actual Behavior\r\n\r\nItem has a 3 pixel margin from the left edge\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.5.0\r\n- Platform Target Frameworks: \r\n  - iOS: \r\n\r\n### Screenshots\r\n\r\n![simulator screen shot - iphone xs max - 2019-01-18 at 18 38 41](https://user-images.githubusercontent.com/1235097/51406231-6ce82e80-1b50-11e9-9acd-a669fa1ee85f.png)\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/xamarin/Xamarin.Forms/pull/4697/files#diff-cc0239ff3cfcc0116d0fca2ce481a6cdR150\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9122523915","Type":"IssuesEvent","CreatedAt":"2019-02-23T08:54:18","Actor":"MihaMarkic","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5664","RelatedDescription":"Opened issue \"Asserts refresh is tricky\" (#5664) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create an image asset\r\n2. Place image asset on LaunchScreen.storyboard\r\n3. Run in emulator - it shows fine\r\n4. In File Explorer replace the images for the asset (not through Visual Studio)\r\n5. Run in same emulator - it still shows the old image no matter Clean, Rebuild, even deleting cache directories on mac doesn't seem to help.\r\n6. Restart emulator and run - it shows new image\r\n\r\n*not sure about step 6 but did other steps many times and it was still showing the old image\r\n\r\nThe question is how do I properly update the modified asset images through File Explorer.\r\n\r\n### Expected Behavior\r\n\r\nShould show updated asset image\r\n\r\n### Actual Behavior\r\n\r\nShows old asset image\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\nMicrosoft Visual Studio Community 2017  (2)\r\nVersion 15.9.7\r\nVisualStudio.15.Release/15.9.7+28307.423\r\nMicrosoft .NET Framework\r\nVersion 4.7.03190\r\n\r\nInstalled Version: Community\r\n\r\nApplication Insights Tools for Visual Studio Package   8.14.20131.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.9.04012.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60913.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.9.03024.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCake for Visual Studio   0.1.2.0\r\nAdds support for the Cake build tool in Visual Studio 2015 and 2017. Includes support for the Task Runner Explorer, new templates and bootstrapping important Cake files.\r\n\r\nCodeRush for Roslyn   18.2.7.0\r\nDevExpress CodeRush for Roslyn package.\r\n\r\nCodeRush for Roslyn Tool Windows   18.2.7.0\r\nDevExpress CodeRush for Roslyn Tool Windows package.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nDevExpress Reporting Extension   1.0\r\nA Visual Studio extension that invokes the Report Designer editor for report definition REPX files.\r\n\r\nDevExpress Reporting Tools Extension   1.0\r\nExtends Visual Studio with tools required for the Report Designer editor.\r\n\r\nDevExpress.DeploymentTool   1.0\r\nA useful tool for deploying DevExpress assemblies.\r\n\r\nDevExpress.Win.LayoutAssistant Extension   1.0\r\nDevExpress.Win.LayoutAssistant Visual Studio Extension Detailed Info\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nGitHub.VisualStudio   2.7.1.6591\r\nA Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.13.12-pre (9bc9548)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNCrunch   \r\nContinuous Testing Tool for .NET\r\nCopyright © 2010-2018 Remco Software Ltd\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61901.24070\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.9.20918.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 6e26c5bacc8c4201e962f5bdde0a177f82f88691.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Unity   3.9.0.3\r\nVisual Studio Tools for Unity\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWiX Toolset Visual Studio Extension   0.9.21.62588\r\nWiX Toolset Visual Studio Extension version 0.9.21.62588\r\nCopyright (c) .NET Foundation and contributors. All rights reserved.\r\n\r\nXamarin   4.12.3.80 (d15-9@914127c74)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.16.13 (45a16efd4)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.128 (6f5ebb2)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.1.7.0 (HEAD/ba9da7a76)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.2.1.15 (d60abd1)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"9121252850","Type":"PullRequestEvent","CreatedAt":"2019-02-22T22:36:17","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5663","RelatedDescription":"Opened pull request \"[api-diff] Remove apidiff XML reference files. Fixes #4891\" (#5663) at xamarin/xamarin-macios","RelatedBody":"Instead download the assemblies (part of existing bundle.zip) of the\ncurrent release and generate the XML locally (no storage in github)\nbefore doing the diff against the newer, just built, assemblies.\n\nreference: https://github.com/xamarin/xamarin-macios/issues/4891"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1098996242238111745","CreatedAt":"2019-02-22T17:21:37+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @DavidOrtinau gives us all the reasons and features to &lt;3 in Xamarin.Forms 3.5. This… https://t.co/pVcHVX6LYJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":50,"FavoriteCount":22,"RawContent":null},{"Id":"1097993381496700935","CreatedAt":"2019-02-19T22:56:36+00:00","UserScreenname":"xamarinhq","Text":"With only a few lines of code, today's #Xamarin.Essentials API of the week helps you persist settings and preferenc… https://t.co/izkl5pGL6m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":48,"FavoriteCount":20,"RawContent":null},{"Id":"1097939132532310018","CreatedAt":"2019-02-19T19:21:02+00:00","UserScreenname":"xamarinhq","Text":"On this week's #XamarinShow Essential API of the week, we take a look at Secure Storage, which enables you to easil… https://t.co/OwQSZ1QRlI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":44,"FavoriteCount":25,"RawContent":null},{"Id":"1097603017375993857","CreatedAt":"2019-02-18T21:05:26+00:00","UserScreenname":"xamarinhq","Text":"Xamarin.Forms 101: Command Parameters: https://t.co/rwzzq9yQib\n\n.@JamesMontemagno takes us through a new mini-serie… https://t.co/ZFInvKFhSL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":110,"FavoriteCount":48,"RawContent":null},{"Id":"1096561048562384898","CreatedAt":"2019-02-16T00:05:01+00:00","UserScreenname":"xamarinhq","Text":"The #Xamarin Developer Blog is migrating to a new platform with a modern, clean design and powerful features that m… https://t.co/nJUxXItfe8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":98,"FavoriteCount":35,"RawContent":null},{"Id":"1095804816121581570","CreatedAt":"2019-02-13T22:00:01+00:00","UserScreenname":"xamarinhq","Text":"The #VisualStudio Mobile Dev Podcast is out. In this episode, @CodeMillMatt &amp; @JamesMontemagno discuss the latest &amp;… https://t.co/SPEvfxFuLn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":57,"FavoriteCount":14,"RawContent":null},{"Id":"1095445655076700162","CreatedAt":"2019-02-12T22:12:51+00:00","UserScreenname":"xamarinhq","Text":"To provide the best user experience we need access to the current network state of our users’ devices.\n\n...new from… https://t.co/w2ZGMgKqli","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":42,"FavoriteCount":23,"RawContent":null},{"Id":"1093221405917937670","CreatedAt":"2019-02-06T18:54:28+00:00","UserScreenname":"xamarinhq","Text":"Every month we survey &amp; interview our Xamarin devs, listening to your firsthand stories. Why? To make #Xamarin bett… https://t.co/Gwc32YD8qG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":94,"FavoriteCount":42,"RawContent":null},{"Id":"1093196382901547008","CreatedAt":"2019-02-06T17:15:02+00:00","UserScreenname":"xamarinhq","Text":"On a recent #XamarinShow, Mike Parker from the Microsoft Mobile Customer Advisory Team that shows us how to easily… https://t.co/jdjf2oZXwI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":48,"FavoriteCount":16,"RawContent":null},{"Id":"1092542167078326279","CreatedAt":"2019-02-04T21:55:25+00:00","UserScreenname":"xamarinhq","Text":"Walk through some techniques for separating the concerns of dev'ing a C/C++ library, a C# wrapper, &amp; a mobile app s… https://t.co/W1RmRSHzXZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":72,"FavoriteCount":36,"RawContent":null},{"Id":"1091455153868296201","CreatedAt":"2019-02-01T21:56:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing .NET Foundation Open Membership. We're making some big changes to expand the #dotNET Foundation. We’re i… https://t.co/iePYJUdean","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":69,"FavoriteCount":39,"RawContent":null},{"Id":"1091387761297362944","CreatedAt":"2019-02-01T17:28:13+00:00","UserScreenname":"xamarinhq","Text":"There's a new Xamarin.Essentials out. Today, @JamesMontemagno highlights API of the Week, App Information; which gi… https://t.co/WlU6hQHbNl","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":66,"FavoriteCount":22,"RawContent":null},{"Id":"1090678537491808256","CreatedAt":"2019-01-30T18:30:01+00:00","UserScreenname":"xamarinhq","Text":"Check out this super-interesting use-case for creating complex UI using FastGrid for Xamarin.Forms with many cell v… https://t.co/SNff8XhdJ3","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":99,"FavoriteCount":42,"RawContent":null},{"Id":"1089964090339049472","CreatedAt":"2019-01-28T19:11:04+00:00","UserScreenname":"xamarinhq","Text":"Finding it a bit complex packaging your Xamarin. Android application? Here's some excellent info about Android’s D8… https://t.co/1qhLDuX3m6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":71,"FavoriteCount":28,"RawContent":null},{"Id":"1088179823762161664","CreatedAt":"2019-01-23T21:01:02+00:00","UserScreenname":"xamarinhq","Text":"Just released: #VS2019 Preview 2 which includes tons of improvements for mobile devs to make you more productive wh… https://t.co/j4LgiuYkgc","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":156,"FavoriteCount":74,"RawContent":null},{"Id":"1086352280604065792","CreatedAt":"2019-01-18T19:59:01+00:00","UserScreenname":"xamarinhq","Text":"New Year – New podcast. Now on the Visual Studio Mobile Developer Podcast: Office Hours, Hockey App moving to… https://t.co/QtObsRI6av","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":45,"FavoriteCount":20,"RawContent":null},{"Id":"1085961073902129152","CreatedAt":"2019-01-17T18:04:30+00:00","UserScreenname":"xamarinhq","Text":"As the .NET community expands so should the community standups... We are pleased to introduce the expansion of the… https://t.co/EDO0vChQlR","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":45,"FavoriteCount":22,"RawContent":null},{"Id":"1083829954515750923","CreatedAt":"2019-01-11T20:56:12+00:00","UserScreenname":"xamarinhq","Text":"...just posted on the Xamarin Blog, Andrei Nitescu shares one of his contributions to Xamarin.Forms, the bindable l… https://t.co/rp3eVPLbYl","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":105,"FavoriteCount":45,"RawContent":null}]}},"RunOn":"2019-02-25T05:31:14.2685924Z","RunDurationInMilliseconds":2886}