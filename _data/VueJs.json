{"Data":{"Vue-Issues":{"Issues":[{"Id":"362989786","IsPullRequest":false,"CreatedAt":"2018-09-24T00:06:46","Actor":"KelsamGames","Number":"8831","RawContent":null,"Title":"Using multiple selects with v-model and bound and unbound values causes value overriding","State":"open","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/du578xc0/32/](https://jsfiddle.net/du578xc0/32/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nchange first select to \"Some\", then change newly displayed select. You will see that val2 is being set to the bound vals from the val1 select instead of it's own values.\r\n\r\nYou can change the first select to use the .number modifier on the v-model and exchange the bound number values for strings to fix this issue. (at least for this very specific desired effect).\r\n\r\nYou can \"fix\" the problem by either using v-bind:value on all values, or by using non-bound values on all values - but as far as I can tell, if you mix them, then it will cause this override bug\r\n\r\n### What is expected?\r\ndifferent values for each variable\r\n\r\n### What is actually happening?\r\nsecond variable is being overwritten with the first's value\r\n\r\n---\r\nThis was posted/discussed in the discord chat\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8831","RelatedDescription":"Open issue \"Using multiple selects with v-model and bound and unbound values causes value overriding\" (#8831)"},{"Id":"362971216","IsPullRequest":true,"CreatedAt":"2018-09-23T19:43:14","Actor":"nbaulesglobalsolutions","Number":"8830","RawContent":null,"Title":"Hotfix","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [x] Feature\r\n- [x] Code style update\r\n- [x] Refactor\r\n- [x] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [x] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8830","RelatedDescription":"Open PR \"Hotfix\" (#8830)"},{"Id":"362966933","IsPullRequest":false,"CreatedAt":"2018-09-23T18:47:32","Actor":"sleewoo","Number":"8829","RawContent":null,"Title":"On SSR, do not escape RAW nodes","State":"open","Body":"### What problem does this feature solve?\r\nWhen rendering a script tag on server the content is escaped, breaking the js code.\r\n\r\n```html\r\n<script>\r\n  var x = \"y\";\r\n</script>\r\n```\r\n\r\nis rendered as \r\n\r\n```html\r\n<script>\r\n  var x = &quot;y&quot;;\r\n</script>\r\n```\r\n\r\n\r\n### What does the proposed API look like?\r\nA solution would be to allow users to define what to be escaped, to override this map\r\n\r\nhttps://github.com/vuejs/vue/blob/833175e9d6e8f47367e49e1752cd149a677cdae8/src/platforms/web/server/util.js#L43\r\n\r\nOr a option to disable escaping et all here \r\n\r\nhttps://github.com/vuejs/vue/blob/52719ccab8fccffbdf497b96d3731dc86f04c1ce/src/server/optimizing-compiler/codegen.js#L228\r\n\r\nThanks.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8829","RelatedDescription":"Open issue \"On SSR, do not escape RAW nodes\" (#8829)"},{"Id":"362950654","IsPullRequest":false,"CreatedAt":"2018-09-23T15:31:52","Actor":"frederikhors","Number":"8828","RawContent":null,"Title":"Very async rendering with Vue","State":"closed","Body":"### What problem does this feature solve?\r\nIs there in the Vue's world like this in React's world? https://gist.github.com/acdlite/f31becd03e2f5feb9b4b22267a58bc1f\r\n\r\n### What does the proposed API look like?\r\n```js\r\nconst root = ReactDOM.unstable_createRoot(containerEl);\r\nconst work = root.prerender(<App />);\r\n// ... other async work ...\r\nwork.commit();\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/6764957/38159817-c83f7b44-347e-11e8-9a65-92b4aa375e44.gif)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8828","RelatedDescription":"Closed issue \"Very async rendering with Vue\" (#8828)"},{"Id":"362947531","IsPullRequest":false,"CreatedAt":"2018-09-23T14:36:30","Actor":"vinciarts","Number":"8827","RawContent":null,"Title":"CSS children selector don't work on elements in slot. ","State":"closed","Body":"If there's a component A:\n\n```\n<template lang=\"\"pug\">\n.root\n  slot \n</template>\n\n<style lamg=\"stylus\" scoped>\n.root > *\n  position absolute\n</style>\n```\nIf I inserted some element under the instance of A, I suppose these elementshas such style: `position: absolute`, but it doesn't work. \n\n\n   ","Url":"https://github.com/vuejs/vue/issues/8827","RelatedDescription":"Closed issue \"CSS children selector don't work on elements in slot. \" (#8827)"},{"Id":"360615038","IsPullRequest":true,"CreatedAt":"2018-09-23T03:08:01","Actor":"Hoishin","Number":"8801","RawContent":null,"Title":"Fix #8798: $refs TypeScript type definition","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\nFixes #8798 \r\n\r\nWhen you refer to `$refs`, the type if always something truthy, while it is possible that the value is `undefined`.\r\nWithout this change, one can refer to a `ref` that is `undefined`, but TypeScript thinks it is `Element` or `Vue`.\r\n\r\nThis PR added `undefined` type to the type of `$refs`. This way it is more type-safe when using `$refs`.\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [x] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\nThis change will break code written in TypeScript which does not null-check the value of `this.$refs.foo`.\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\n~~If adding a **new feature**, the PR's description includes:~~\r\n~~- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)~~\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8801","RelatedDescription":"Closed or merged PR \"Fix #8798: $refs TypeScript type definition\" (#8801)"},{"Id":"362824345","IsPullRequest":false,"CreatedAt":"2018-09-22T09:11:20","Actor":"hirokiosame","Number":"8826","RawContent":null,"Title":"v-for iterating over v-else","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/hirokiosame/7mfcktv4/](https://jsfiddle.net/hirokiosame/7mfcktv4/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nAdd a `v-for` and `v-if` to an element with a v-else sibling. If the v-if condition evaluates to be falsy, the iteration happens over the `v-else` element.\r\n\r\n### What is expected?\r\nFor the v-for to not iterate over the v-else\r\n\r\n### What is actually happening?\r\nThe v-for is iterating over the v-else\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8826","RelatedDescription":"Closed issue \"v-for iterating over v-else\" (#8826)"},{"Id":"362784736","IsPullRequest":false,"CreatedAt":"2018-09-21T21:47:10","Actor":"brophdawg11","Number":"8825","RawContent":null,"Title":"Non-Deterministic CSS ordering for extracted CSS in an SSR App","State":"open","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://github.com/brophdawg11/vue-ssr-css-ordering](https://github.com/brophdawg11/vue-ssr-css-ordering)\r\n\r\n### Steps to reproduce\r\nReproduction steps are outlined in the README in the github repo.\r\n\r\n### What is expected?\r\nIn both development and production builds, the extracted CSS stylesheets should be loaded in a deterministic order.  \r\n\r\nI believe from reading various semi-related github issues that the order corresponds with the import order via webpack.  If that is the case for SSR as well, I would expect the order to be `app.css -> home.css -> about.css` since the `App.vue` file is loaded statically, and `Home.vue` and `About.vue` are loaded dynamically via routes in that order.\r\n\r\nEither way, I would expect global styles from `App.vue` to always be loaded first, followed by dynamic-route styles, allowing for a proper cascade. \r\n\r\n### What is actually happening?\r\nI think there are two issues at play:\r\n\r\n**Primary Issue**: In development mode, the `app.css` file is incorrectly loaded _after_ the `about.css` file, breaking the cascade for contents of `About.vue`.\r\n\r\n**Secondary Issue**: In production mode, the `app.css` file is properly loaded first, but then `about.css` is loaded prior to `home.css` even though they are imported in the reverse order and even when SSR-ing the home page.\r\n\r\n---\r\n\r\n### Additional Notes\r\n\r\nI'm trying to determine what feels like the optimal solution, and I think there are a few options, in a loose descending order of \"optimal\", and likely increasing order of feasibility:\r\n\r\n1. Global styles from the root `App.vue` component would always be loaded first, followed by the only the styles for the component matched for the current route.  Additional route-specific styles would be loaded on demand when routing.  I understand this is likely beyond the scope of the bundle renderer and potentially something to be implemented by the application itself.\r\n2. Global styles from the root `App.vue` component would always be loaded first, followed by styles for the current route-component, followed by styles for additional route-components.\r\n3. Global styles from the root `App.vue` component would always be loaded first, followed by styles for route-level components, in import-order (i.e., in route-declaration order)\r\n\r\n\r\n\r\nIt is also worth noting that my specific scenario in my larger app is slightly different, but I wasn't able to quite reproduce it exactly in this minimal repo, and I'm not quite sure why.  In my specific app case, I have an `App.vue` and 3 dynamic routes defined in the order:\r\n\r\n* Home\r\n* Page 1\r\n* Page 2\r\n\r\nIn development mode, my stylesheets are included in the order:   page1, app, home, page2.\r\n\r\nIn production mode, my stylesheets are included in the order:   home, page1, page2, app\r\n\r\nSo in the demo repo, the production build is correct insofar as it doesn't break the cascade for either route, and the development build is incorrect for only one of the routes.  \r\n\r\nIn my actual app, the development mode only breaks the cascade for the page1 route, while the production build breaks it for all routes.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8825","RelatedDescription":"Open issue \"Non-Deterministic CSS ordering for extracted CSS in an SSR App\" (#8825)"},{"Id":"362652113","IsPullRequest":false,"CreatedAt":"2018-09-21T14:55:21","Actor":"ideafm","Number":"8824","RawContent":null,"Title":"Sync and async component registration issue","State":"closed","Body":"When I try to register sync and async components from common folder like this\r\n```\r\nglobalComponents.forEach(componentName => {\r\n  let componentConfig = require(`../vue-components/${componentName}.vue`);\r\n  Vue.component(componentName, componentConfig.default || componentConfig)\r\n});\r\n\r\nfor(let componentName of asyncComponents) {\r\n  Vue.component(componentName, () => import(`../vue-components/${componentName}.vue`));\r\n}\r\n\r\nnew Vue({\r\n  el: '#app',\r\n});\r\n```\r\nI've got an error [img](http://joxi.ru/ZrJl63h9aNyK2j.jpg)\r\n\r\nBut when I split components by folders - it works fine\r\n\r\n```\r\nglobalComponents.forEach(componentName => {\r\n  let componentConfig = require(`../vue-components/sync-components/${componentName}.vue`);\r\n  Vue.component(componentName, componentConfig.default || componentConfig)\r\n});\r\n\r\nfor(let componentName of asyncComponents) {\r\n  Vue.component(componentName, () => import(`../vue-components/async-components/${componentName}.vue`));\r\n}\r\n```\r\n","Url":"https://github.com/vuejs/vue/issues/8824","RelatedDescription":"Closed issue \"Sync and async component registration issue\" (#8824)"},{"Id":"362555988","IsPullRequest":false,"CreatedAt":"2018-09-21T10:36:22","Actor":"vedmaque","Number":"8822","RawContent":null,"Title":"Different functional componens has the same key","State":"open","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://github.com/vedmaque/vue-functional-bug](https://github.com/vedmaque/vue-functional-bug)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1) create `Component1`\r\n```\r\n<template functional>\r\n  <div class=\"a\">\r\n    <div class=\"b\">first (template)</div>\r\n    <div class=\"b\">component</div>\r\n  </div>\r\n</template>\r\n```\r\n2) create `Component2`\r\n```\r\n<template functional>\r\n  <div class=\"x\">\r\n    <div class=\"y\">second (template)</div>\r\n    <div class=\"y\">component</div>\r\n  </div>\r\n</template>\r\n```\r\n3) render them in App.\r\n```\r\n<template>\r\n  <div id=\"app\">\r\n    <component1 />\r\n    <component2 />\r\n  </div>\r\n</template>\r\n```\r\n\r\n### What is expected?\r\nEverything works fine\r\n\r\n### What is actually happening?\r\nVue warns about same key\r\n```\r\n[Vue warn]: Duplicate keys detected: '__static__0'. This may cause an update error.\r\n```\r\n\r\n---\r\nIf you create the same components from render function directly, it works fine, without duplicated keys (keys are `undefined` in this situation)\r\n```\r\n<script>\r\nexport default {\r\n  functional: true,\r\n  render(createElement) {\r\n    return createElement(\"div\", {\r\n        staticClass: \"a\"\r\n    }, [createElement(\"div\", {\r\n        staticClass: \"b\"\r\n    }, [\"first\"]), createElement(\"div\", {\r\n        staticClass: \"b\"\r\n    }, [\"component\"])])\r\n  }\r\n}\r\n</script>\r\n```\r\n\r\nThis image shows the difference in VNode objects.\r\n![screenshot](https://github.com/vedmaque/vue-functional-bug/raw/master/functional-bug.png)\r\n\r\nMoreover, if `Component1` looks likes this, it works fine too.\r\n```\r\n<template functional>\r\n  <div class=\"a\">first (template) component</div>\r\n</template>\r\n```\r\n\r\nVue Template Exporer will go crazy too if you try to compile `Component1`\r\nhttps://template-explorer.vuejs.org/#%3Cdiv%20class%3D%22a%22%3E%0A%20%20%3Cdiv%20class%3D%22b%22%3Efirst%20(template)%3C%2Fdiv%3E%0A%20%20%3Cdiv%20class%3D%22b%22%3Ecomponent%3C%2Fdiv%3E%0A%3C%2Fdiv%3E%0A\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8822","RelatedDescription":"Open issue \"Different functional componens has the same key\" (#8822)"},{"Id":"361455511","IsPullRequest":false,"CreatedAt":"2018-09-21T04:33:10","Actor":"AlexDubok","Number":"8810","RawContent":null,"Title":"vue-server-renderer | Webpack 4 deprecation warning for plugins","State":"closed","Body":"### What problem does this feature solve?\r\nIn webpack 4 there is a deprecation warning about the Tapable.plugin being deprecated.\r\n\r\n\r\n### What does the proposed API look like?\r\nChange compiler.plugin to compiler.hooks.[hookname] to support new tappable syntax.\r\n\r\nThe question is what is the preferred way to support new syntax while leaving Webpack 2-3 compatibility?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8810","RelatedDescription":"Closed issue \"vue-server-renderer | Webpack 4 deprecation warning for plugins\" (#8810)"},{"Id":"362441753","IsPullRequest":false,"CreatedAt":"2018-09-21T03:26:17","Actor":"shanxlei","Number":"8821","RawContent":null,"Title":"vue2.0 cannot closed current window,why?","State":"closed","Body":"### What problem does this feature solve?\r\n window.opener = null;\r\n window.open(' ','_self');\r\n window.close(); \r\n\r\n### What does the proposed API look like?\r\n window.opener = null;\r\n window.open(' ','_self');\r\n window.close();\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8821","RelatedDescription":"Closed issue \"vue2.0 cannot closed current window,why?\" (#8821)"},{"Id":"362435986","IsPullRequest":false,"CreatedAt":"2018-09-21T02:44:41","Actor":"shanxlei","Number":"8820","RawContent":null,"Title":"vue2.0 cannot closed current window，why? ","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/8820","RelatedDescription":"Closed issue \"vue2.0 cannot closed current window，why? \" (#8820)"},{"Id":"362411183","IsPullRequest":false,"CreatedAt":"2018-09-21T00:06:46","Actor":"Razenpok","Number":"8819","RawContent":null,"Title":"Inactive keep-alive component keeps updating if bound to nested properties","State":"open","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://refactoring.ninja/vue-v-if-keep-alive/](https://refactoring.ninja/vue-v-if-keep-alive/)\r\nhttps://github.com/Razenpok/vue-v-if-keep-alive\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Press \"Hide labels\"\r\n2. Open dev tools\r\n3. Select DoesUpdate component\r\n4. Press \"Add stuff\"\r\n\r\n### What is expected?\r\n`player.money` remains the same\r\n\r\n### What is actually happening?\r\n`player.money` goes up\r\n[![Image from Gyazo](https://i.gyazo.com/893b9067b540323d582bbd328ebd6ff4.gif)](https://gyazo.com/893b9067b540323d582bbd328ebd6ff4)\r\n\r\n\r\n---\r\nComponent \"DoesntUpdate\" doesn't update on \"Add stuff\" as expected - it is bound to `lives` property which is on top level of `data`.\r\n\r\nThis isn't a dev tools issue, as I observe the same behavior with devtools disabled\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8819","RelatedDescription":"Open issue \"Inactive keep-alive component keeps updating if bound to nested properties\" (#8819)"},{"Id":"362355716","IsPullRequest":false,"CreatedAt":"2018-09-20T21:16:45","Actor":"AlexFree","Number":"8818","RawContent":null,"Title":"The computed property \"SelectMany\" is already defined in data.","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/740132/](https://jsfiddle.net/50wL7mdz/740132/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\ni defined the following before instance new Vue:\r\n\r\nObject.prototype.SelectMany = function () { ... }\r\n\r\nand get:\r\n\r\n[Vue warn]: The computed property \"SelectMany\" is already defined in data.\r\n\r\n(found in <Root>)\r\nwarn\t@\tvue.js:597\r\ninitComputed\t@\tvue.js:3457\r\n...\r\n\r\n\r\n### What is expected?\r\nno warning\r\n\r\n### What is actually happening?\r\nwarning in the console\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8818","RelatedDescription":"Closed issue \"The computed property \"SelectMany\" is already defined in data.\" (#8818)"},{"Id":"362087402","IsPullRequest":false,"CreatedAt":"2018-09-20T09:03:18","Actor":"xingzhefeng","Number":"8817","RawContent":null,"Title":"开发利器 parcel watch index.html ","State":"closed","Body":"vue-cli 3 出来后 .npm run serve 无法生成 dist 文件夹中的内容 . \r\n使用  parcel watch index.html   完美解决\r\n","Url":"https://github.com/vuejs/vue/issues/8817","RelatedDescription":"Closed issue \"开发利器 parcel watch index.html \" (#8817)"},{"Id":"361989204","IsPullRequest":false,"CreatedAt":"2018-09-20T01:57:20","Actor":"chenrenxing","Number":"8816","RawContent":null,"Title":"Vue.directive-The element of the instruction binding does not have data update. Upload also triggers.","State":"closed","Body":"When I bind two different elements to different instructions v-hello and v-world, I find that both v-hello and v-world hook functions upload are triggered when the template is updated, and I think the binding element upload should trigger only the elements bound by the instruction.","Url":"https://github.com/vuejs/vue/issues/8816","RelatedDescription":"Closed issue \"Vue.directive-The element of the instruction binding does not have data update. Upload also triggers.\" (#8816)"},{"Id":"361614382","IsPullRequest":false,"CreatedAt":"2018-09-19T11:37:03","Actor":"maxim-usikov","Number":"8814","RawContent":null,"Title":"Update value from Renderless component through v-model.","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/4xqy2zqlw4?module=%2Fsrc%2FApp.vue](https://codesandbox.io/s/4xqy2zqlw4?module=%2Fsrc%2FApp.vue)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Declare (A) Renderless and (B) Stateless / custom components.\r\n2. Put `value` through `scoped-slot` from (A) to (B).\r\n\r\nFor more: see reproduction link.\r\n\r\n### What is expected?\r\n`v-model` should update `value` in scoped slot. (A) - component.\r\n\r\n### What is actually happening?\r\nDoes not updated through plain html or custom component.\r\n\r\n---\r\nSame problem with computed props in (A) component, then use getters and setters.\r\n\r\nThis might be a problem. Because custom components don't always use input as an event. Sometimes it's update, sometimes it's select, etc...\r\n\r\nOr I just should use HOC for that approach?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8814","RelatedDescription":"Closed issue \"Update value from Renderless component through v-model.\" (#8814)"},{"Id":"361689388","IsPullRequest":false,"CreatedAt":"2018-09-19T10:49:33","Actor":"sankirna","Number":"8815","RawContent":null,"Title":"Prevent props update from child to parent ","State":"closed","Body":"If assing model value in props from parent to child component model parse and assing. \r\nwhile child change value it also change in parent.\r\nPlease help me prevent update parent model value.","Url":"https://github.com/vuejs/vue/issues/8815","RelatedDescription":"Closed issue \"Prevent props update from child to parent \" (#8815)"},{"Id":"361562610","IsPullRequest":false,"CreatedAt":"2018-09-19T07:12:21","Actor":"LaiHuanMin","Number":"8812","RawContent":null,"Title":"Can Vue Support Clone Method For Each Instance?","State":"closed","Body":"### What problem does this feature solve?\r\nHello! I 'm develop vue project which using cdn link, not build way. I wanna know is there can clone all of vm instance attribute such as $data, $store,$router into a new vm instance, and when I change vm instance $data or invoke that vm instance method or push that vm content $router a new page, will never change the origin one.     \r\nBecause I wanna clone new vm instance which has current state,  and without dom render question, it's just about that vm instance data will be setter by method or vuex dispatch.      \r\nMaybe clone method can without dom $refs and mounted method, only care about the data. \r\n\r\n### What does the proposed API look like?\r\nvar vm = new Vue({...});   \r\n// after running a moment   \r\n// i dont' wanna change data at crt vm instance, because change data will effect render question, so i make a clone method\r\nvar newvm = vm.clone({withoutDom: true});   \r\nnewvm.$data.tabledata = [];  \r\nnewvm.$data.invokeRequestData();\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8812","RelatedDescription":"Closed issue \"Can Vue Support Clone Method For Each Instance?\" (#8812)"},{"Id":"361547790","IsPullRequest":false,"CreatedAt":"2018-09-19T07:06:30","Actor":"anderspitman","Number":"8811","RawContent":null,"Title":"Accessing data through functions passed from parent causes list siblings to re-compute","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/t0h73urf/](https://jsfiddle.net/t0h73urf/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick the button.\r\n\r\n### What is expected?\r\ncomputed.value is only recalculated for the changed list element (look at the console logs). See this slightly modified fiddle for expected behavior (not using the accessor): https://jsfiddle.net/twnmoLsh/2/\r\n\r\n### What is actually happening?\r\nAll 3 computed.value elements are recalculated.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8811","RelatedDescription":"Closed issue \"Accessing data through functions passed from parent causes list siblings to re-compute\" (#8811)"},{"Id":"361605620","IsPullRequest":false,"CreatedAt":"2018-09-19T07:05:41","Actor":"shirleyMHao","Number":"8813","RawContent":null,"Title":"click event will be trigged twice for some situation","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/733707/](https://jsfiddle.net/50wL7mdz/733707/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick the text \"Hello\"\r\n\r\n### What is expected?\r\nthe click event \"handleClick\" has been triggered twice.\r\nyou can see the console log or the message becomes \"Hello add add\"\r\n\r\n### What is actually happening?\r\nclick event only run once.\r\n\r\n---\r\nFYI: If add the \"for\" attribute for the label, click event will only be triggered once.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8813","RelatedDescription":"Closed issue \"click event will be trigged twice for some situation\" (#8813)"},{"Id":"361163218","IsPullRequest":true,"CreatedAt":"2018-09-18T07:07:44","Actor":"kaorun343","Number":"8809","RawContent":null,"Title":"fix(types): update the type definition of $el property","State":"open","Body":"to be able to define `$el` as `SVGElement`\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [x] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8809","RelatedDescription":"Open PR \"fix(types): update the type definition of $el property\" (#8809)"},{"Id":"361097057","IsPullRequest":false,"CreatedAt":"2018-09-18T07:00:55","Actor":"Razenpok","Number":"8808","RawContent":null,"Title":"Disable observing for components hidden by v-show","State":"closed","Body":"### What problem does this feature solve?\r\nI have an app with several non-trivial component blocks, each one being constantly updating a lot of its inner components (my app is very dynamic). At any moment of the time, only one such block must be visible. I don't think using `v-if` or `is` is a good idea in my case, as recreating such blocks is rather expensive. I decided to use `v-show` instead, but I've noticed that inner components are still being updated on every block (even hidden). Even worse, some of these updates are very computational heavy, so my app is basically wasting CPU clocks on updating hidden elements.\r\n\r\nSimplified example:\r\n\r\n```js\r\n<div id=\"test\" v-show=\"visible\"><p>Number {{ number }}<p></div>\r\n```\r\n\r\n```js\r\nvar vm = new Vue({\r\n    el: '#test',\r\n    data: {\r\n        number: 0,\r\n        visible: true\r\n    }\r\n});\r\n\r\nsetInterval(function() {\r\n    vm.number  ;\r\n}, 10);\r\n```\r\n\r\nHere `<p>` will still be updated even if `visible` is `false`.\r\n\r\n### What does the proposed API look like?\r\nEither make this behavior default or add some attribute to control it (something like `v-freeze`).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8808","RelatedDescription":"Closed issue \"Disable observing for components hidden by v-show\" (#8808)"},{"Id":"361022472","IsPullRequest":true,"CreatedAt":"2018-09-17T20:05:44","Actor":"rhengles","Number":"8807","RawContent":null,"Title":"Lazy load for components, filters and directives (fix #8106)","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nThe convincing reason was explained at length over at #8106. I know this will not be merged, in fact I'm gonna close it myself. But I'm publishing this PR for reference for anyone else interested.\r\n\r\nThe initial need was for components, but when reviewing the code I thought the most elegant way to do this was by changing the `resolveAsset()` function to call a user function defined on the `$options` object:\r\n\r\n```\r\ngetComponent(id: string, identifierSpellings: Object): void | Component | AsyncComponent\r\ngetDirective(id: string, identifierSpellings: Object): void | Directive\r\ngetFilter(id: string, identifiesSpellings: Object): void | Filter\r\n```\r\n\r\nThe `identifierSpellings` object has normalized spellings in case the user needs it:\r\n\r\n- raw: the way it was called\r\n- hyphenated\r\n- camelized\r\n- PascalCase\r\n- and a toString() method, which returns the raw version\r\n\r\nThe nice thing about this is that it gives all the power to the user, and enables him to do many things which aren't possible with the current api, and the biggest use case is to **lazily load async components only when they are needed.**\r\n\r\nI know that to submit a decent PR, I'd still need to write tests and documentation... that is the next step.\r\n\r\nA running example can be seen here:\r\n\r\nhttps://unpkg.com/@arijs/vue-generator@0.1.4/outra/pagina/\r\n\r\nMy version is released at:\r\nhttps://unpkg.com/@arijs/vue@2.5.17-beta1.0/\r\nhttps://www.npmjs.com/package/@arijs/vue","Url":"https://github.com/vuejs/vue/pull/8807","RelatedDescription":"Closed or merged PR \"Lazy load for components, filters and directives (fix #8106)\" (#8807)"},{"Id":"360883370","IsPullRequest":false,"CreatedAt":"2018-09-17T17:40:14","Actor":"lichenhao","Number":"8806","RawContent":null,"Title":"vue router lost meta config","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsbin.com/sazujuxoba/edit?html,output](https://jsbin.com/sazujuxoba/edit?html,output)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\ninstall vue@2.5.17\r\ninstall vue-router@3.0.1\r\ndefine a router with meta info\r\ndefine the beforeEach callback and the to.meta is an empty object.\r\n\r\n\r\n### What is expected?\r\nto.meta should be the current definition object \r\n\r\n### What is actually happening?\r\nit's an empty object here. \r\n\r\n---\r\nand the beforeRouteEnter hook not trigger.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8806","RelatedDescription":"Closed issue \"vue router lost meta config\" (#8806)"},{"Id":"360747025","IsPullRequest":false,"CreatedAt":"2018-09-17T11:25:45","Actor":"base3344","Number":"8804","RawContent":null,"Title":"el property","State":"closed","Body":"### What problem does this feature solve?\r\nvar app = new Vue({ el: '#app', ...\r\n\"el\" property it is impossible to understand intuitively what it means. I'm a novice developer on vue, in my opinion, it was much more readable to call the property as a \"element\", etc.\r\n\r\n\r\n### What does the proposed API look like?\r\nvar app = new Vue({\r\n  element: '#app',\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8804","RelatedDescription":"Closed issue \"el property\" (#8804)"},{"Id":"360776124","IsPullRequest":false,"CreatedAt":"2018-09-17T08:57:57","Actor":"johnnymijnhout","Number":"8805","RawContent":null,"Title":"Encoded single quote (&#39;) is not displayed correct in async loaded html input field","State":"open","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/sf9cg0db/](https://jsfiddle.net/sf9cg0db/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nTry to dynamically load an input field with a value that contains an encoded single quote (&amp;#39;) as plain HTML. Normally the input field will display the single quote in the input box. However, Vue shows the &amp;#39; in the input box. \r\n\r\n~~I tested this with multiple encoded chars, and everything works correctly, except for the single quote.~~ As stated by @HcySunYang, all entities except the 6 he listed have this issue.\r\n\r\n### What is expected?\r\nA single quote is shown in the input field when loaded async with Vue\r\n\r\n### What is actually happening?\r\n&amp;#39; is show in the input field when loaded async with Vue\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8805","RelatedDescription":"Open issue \"Encoded single quote (&#39;) is not displayed correct in async loaded html input field\" (#8805)"},{"Id":"360700203","IsPullRequest":false,"CreatedAt":"2018-09-17T04:46:47","Actor":"BradHan","Number":"8803","RawContent":null,"Title":"vue 2.5.17下渲染svg maker元素的refx和refy属性无效，造成图像错位","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codepen.io/bradhan/pen/pOOOYq](https://codepen.io/bradhan/pen/pOOOYq)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nv1.0.28 is ok: https://codepen.io/bradhan/pen/Wgggqg\r\n\r\nv2.5.17 has bug: https://codepen.io/bradhan/pen/pOOOYq\r\n\r\n### What is expected?\r\n用组件方式渲染带marker元素的svg，由于refx和refy属性无效，造成图像错位\r\n\r\n### What is actually happening?\r\n用组件方式渲染带marker元素的svg，图像不错位\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8803","RelatedDescription":"Closed issue \"vue 2.5.17下渲染svg maker元素的refx和refy属性无效，造成图像错位\" (#8803)"},{"Id":"360696667","IsPullRequest":false,"CreatedAt":"2018-09-17T01:05:54","Actor":"hhch","Number":"8802","RawContent":null,"Title":"vue computed ","State":"closed","Body":"### What problem does this feature solve?\r\nconsole.log(this.shopHisChange[this.curMemberId]) should not be undefined\r\n\r\n### What does the proposed API look like?\r\ncomputed:{\r\n            showShopBasicForm(){\r\n                console.log('*****')\r\n                console.log(this.shopHisChange)\r\n                console.log(this.curMemberId)\r\n                console.log(this.shopHisChange[this.curMemberId])\r\n                console.log('****')\r\n                return !!this.shopHisChange[this.curMemberId]\r\n            }\r\n}\r\n![image](https://user-images.githubusercontent.com/21006441/45602826-65f0c880-ba57-11e8-9aec-357691c5542a.png)\r\n\r\nthe result is below:\r\n*****\r\n {__ob__: Observer}b2blily3818986484ab197: {buyerProtection: 1, chanyedai: {…}, chanyedaiList:Array(1), chanyedaiMap: {…}, cx: 1, …}__ob__: Observer {value: {…}, dep: Dep, vmCount: 0}__proto__: Object\r\nb2blily3818986484ab197\r\nundefined\r\n ****\r\n![image](https://user-images.githubusercontent.com/21006441/45602817-435eaf80-ba57-11e8-9554-5d1017351f07.png)\r\n\r\nwhy is undefined\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8802","RelatedDescription":"Closed issue \"vue computed \" (#8802)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"362924527","IsPullRequest":true,"CreatedAt":"2018-09-23T08:32:38","Actor":"HikaruSato","Number":"2405","RawContent":null,"Title":"Add Node.js(Express) Usage Example to Docs","State":"open","Body":"I thought that I needed documentation on usage examples in Node.js (Express).\r\nSo I will suggest adding a usage example in Node.js (Express).","Url":"https://github.com/vuejs/vue-router/pull/2405","RelatedDescription":"Open PR \"Add Node.js(Express) Usage Example to Docs\" (#2405)"},{"Id":"362886196","IsPullRequest":false,"CreatedAt":"2018-09-22T19:59:11","Actor":"rightaway","Number":"2404","RawContent":null,"Title":"Set caseSensitive and pathToRegexpOptions defaults on router","State":"open","Body":"### What problem does this feature solve?\r\n`caseSensitive` and `pathToRegexpOptions` are set on each of the routes individually, which is redundant and not clean especially when working a very large number of routes and across multiple files. It would simplify the code to be able to set it as a default on the router itself, and each of the routes will inherit that if they don't override it in their own route config.\r\n\r\n### What does the proposed API look like?\r\n```js\r\nnew VueRouter({\r\n  caseSensitive: true,\r\n  pathToRegexpOptions: {},\r\n  routes: [\r\n    { path: '/example', caseSensitive: false, pathToRegexpOptions: {} }\r\n  ]\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2404","RelatedDescription":"Open issue \"Set caseSensitive and pathToRegexpOptions defaults on router\" (#2404)"},{"Id":"362876398","IsPullRequest":false,"CreatedAt":"2018-09-22T17:43:59","Actor":"smakinson","Number":"2403","RawContent":null,"Title":"route will iframe changes the iframe then the page when hitting back","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/smakinson/pen/JaVbGv](https://codepen.io/smakinson/pen/JaVbGv)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick the first PRESS ME link to move to the page with an iframe.\r\n\r\nNotice the iframe and the VAL.\r\n\r\nClick the next PRESS ME link.\r\n\r\nNotice the iframe and the VAL.\r\n\r\nPress the back button.\r\n\r\nNotice the iframe and the VAL.\r\n\r\nPress the back button again.\r\n\r\nNotice the iframe and the VAL.\r\n\r\n### What is expected?\r\nPressing the browser back button would go back to the previous route on the first press, not first affecting only the iframe.\r\n\r\n### What is actually happening?\r\nPressing back in the browser first affects the iframe, then pressing again affects the route.\r\n\r\n---\r\nReference issue: https://github.com/vuejs/vue-router/issues/1699\r\n\r\nI came across this bug recently in a project I am working on that uses an iframe for video. I had only noticed the issue in Chrome initially, but the pen seems to show it happening in Firefox and Safari as well.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2403","RelatedDescription":"Open issue \"route will iframe changes the iframe then the page when hitting back\" (#2403)"},{"Id":"362523658","IsPullRequest":false,"CreatedAt":"2018-09-22T09:56:35","Actor":"rothsandro","Number":"2401","RawContent":null,"Title":"$router not available in function passed as prop (undefined is not an object)","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/rothsandro/vue-router-issue](https://github.com/rothsandro/vue-router-issue)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Clone the repo\r\n2. Go into the repo folder\r\n3. `npm install`\r\n4. `npm run serve`\r\n5. Open the app (http://localhost:8080/)\r\n6. Click on the button\r\n\r\nThe parent component `HelloWorld` has a property `demo` with a function `run`, passed down to its child component `ChildComponent`. Clicking the button executes the run method in the child component.\r\n\r\nThe run method triggers four alerts:\r\n1. Alert of a property of the class\r\n2. Alert a property from the Vuex store\r\n3. Alert the $router object using a method in the class\r\n4. Alert using this.$router directly instead of a separate function\r\n\r\n\r\n\r\n\r\n### What is expected?\r\nYou should see four alerts, number 3 and 4 should show \"[object Object]\".\r\n\r\n### What is actually happening?\r\nOnly three alerts will be shown, number four produces the following error:\r\n\r\n```\r\nTypeError: undefined is not an object (evaluating 'this._routerRoot._router')\r\n```\r\n\r\nThe same syntax using this.$store works fine. Therefore I assume the problem is related to Vue Router, not Vue or Typescript.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2401","RelatedDescription":"Closed issue \"$router not available in function passed as prop (undefined is not an object)\" (#2401)"},{"Id":"362717132","IsPullRequest":false,"CreatedAt":"2018-09-22T07:47:10","Actor":"Drezdenozk","Number":"2402","RawContent":null,"Title":"Can i make route with asterisk and exception?","State":"closed","Body":"### What problem does this feature solve?\r\nFor works need something like\r\n'path': '*(exclude something like /static/)'\r\nYes, really, root asterisk and exception...\r\n\r\n### What does the proposed API look like?\r\n*(regExp)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2402","RelatedDescription":"Closed issue \"Can i make route with asterisk and exception?\" (#2402)"},{"Id":"362432843","IsPullRequest":false,"CreatedAt":"2018-09-21T14:51:15","Actor":"dongnaebi","Number":"2400","RawContent":null,"Title":"Why encode '(' to 28%","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://abc.com/search?keyword=iPhone%20XS%20Max(A2104)%20%E5%9B%BD%E8%A1%8C%E7%89%88](https://abc.com/search?keyword=iPhone%20XS%20Max(A2104)%20%E5%9B%BD%E8%A1%8C%E7%89%88)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI use vue-router in ssr,in entry-server.js,got rejection\r\n```javascript\r\n    const { url } = context\r\n    const { fullPath } = router.resolve(url).route\r\n\r\n    if (fullPath !== url) {\r\n      return reject({ url: fullPath })\r\n    }\r\n```\r\nthe URL is `/search?keyword=iPhone%20XS%20Max(A2104)%20%E5%9B%BD%E8%A1%8C%E7%89%88`\r\nget fullPath in express by `req.url` is `/search?keyword=iPhone%20XS%20Max(A2104)%20%E5%9B%BD%E8%A1%8C%E7%89%88`\r\nbut in vue-router `route.fullPath` get `/search?keyword=iPhone%20XS%20Max%28A2104%29%20%E5%9B%BD%E8%A1%8C%E7%89%88`\r\nthe difference is vue-router encode '(' to 28% and ')' to 29%,why do this?\r\n\r\n### What is expected?\r\ndon't endoce `!， '，(，)，*，-，.，_，~，0-9，a-z，A-Z`\r\n\r\n### What is actually happening?\r\ngot error in ssr\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2400","RelatedDescription":"Closed issue \"Why encode '(' to 28%\" (#2400)"},{"Id":"362178487","IsPullRequest":false,"CreatedAt":"2018-09-20T13:11:28","Actor":"Undefined123456789","Number":"2399","RawContent":null,"Title":"有时候会出现不能命中目标路由而直接命中根路由的问题，不是必然，有时候会出现，频率还有点高，在开发阶段没有问题，发布后就会有问题","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://47.95.14.230:10003/dist/index.html#/test1](http://47.95.14.230:10003/dist/index.html#/test1)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n一直点 【router-link】点击跳转test3 ，理论上回会命中目标路由，但会出现直接到根路由的情况。\r\n\r\n### What is expected?\r\n一直都是命中目标路由\r\n\r\n### What is actually happening?\r\n会出现直接到根路由的情况\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2399","RelatedDescription":"Closed issue \"有时候会出现不能命中目标路由而直接命中根路由的问题，不是必然，有时候会出现，频率还有点高，在开发阶段没有问题，发布后就会有问题\" (#2399)"},{"Id":"361766796","IsPullRequest":false,"CreatedAt":"2018-09-19T14:07:12","Actor":"ChrisDSky","Number":"2398","RawContent":null,"Title":"Refresh Page not reloading website","State":"closed","Body":"Hello,\r\n\r\nI have discovered that if your app is using nested routes or params in routes, if you refresh the page, basically the page doesn't get reloaded and it displays a blank page.\r\n\r\nThe only errors I found in the debug console are:\r\n\r\nChris:1 Refused to apply style from 'http://localhost:8080/testProps/main.css' because its MIME type ('text/html') is not a supported stylesheet MIME type, and strict MIME checking is enabled.\r\nChris:13 GET http://localhost:8080/testProps/main.js 404 (Not Found)\r\nChris:1 Refused to execute script from 'http://localhost:8080/testProps/main.js' because its MIME type ('text/html') is not executable, and strict MIME type checking is enabled.\r\n\r\nIf I have only one level of routing like http://www.mydomain.com/RouteOn\r\n\r\nI can reload the page fine.\r\n\r\nbut if I have something like\r\n\r\nhttp://www.mydomain.com/RouteOn/params1 \r\n\r\nor\r\n\r\nhttp://www.mydomain.com/RouteOn/subRoute\r\n\r\nit shows the error I mention above and show a blank page.\r\n\r\nI am unsure why it does that. I am using angular for another website, with nested routes and parameters, and it has no problem reloading the page correctly.\r\n\r\nI have read on another forum, from a Vue developer, that it is just not possible to achieve a reload with nested routes or params properly.\r\n\r\nCould any one let me know if it can be achieved (keep in mind the website is hosted on a bucket on AWS, so no server trick can be involved). If it can be, how would I do that ?\r\n\r\nThank you in advance.\r\n\r\n\r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/2398","RelatedDescription":"Closed issue \"Refresh Page not reloading website\" (#2398)"},{"Id":"361509724","IsPullRequest":true,"CreatedAt":"2018-09-18T22:36:40","Actor":"jnields","Number":"2397","RawContent":null,"Title":"Add access to history state","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nThis allows developers access to history.state, which you can use for associating extra data to the URL without updating the visible URL, in history mode.  It does not work for hash mode.","Url":"https://github.com/vuejs/vue-router/pull/2397","RelatedDescription":"Open PR \"Add access to history state\" (#2397)"},{"Id":"361186436","IsPullRequest":false,"CreatedAt":"2018-09-18T08:22:15","Actor":"defusioner","Number":"2396","RawContent":null,"Title":"Props params passing with keep-alive","State":"closed","Body":"### Version\r\n2.8.1 & 3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/mo5x4nlq7p](https://codesandbox.io/s/mo5x4nlq7p)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Open console\r\n- Go to dog, then to home\r\n\r\n### What is expected?\r\nEvery route is in keep-alive, so dog should be kept alive with its `name=dog`\r\n\r\n### What is actually happening?\r\nIn console we see: `missing required prop: \"name\".`\r\nFor this demo it is almost transparent, but in a real project I've faced a problem that the component that is dependent of the incoming parameter won't be rendered (as it uses apollo and computed properties binded on that parameter).\r\n\r\n---\r\nP.S. Without keep-alive it's ok\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2396","RelatedDescription":"Closed issue \"Props params passing with keep-alive\" (#2396)"},{"Id":"361185756","IsPullRequest":false,"CreatedAt":"2018-09-18T08:14:00","Actor":"defusioner","Number":"2395","RawContent":null,"Title":"Props params passing with keep-alive","State":"closed","Body":"**Version**\r\n2.8.1 & 3.0.1\r\n\r\n**Reproduction link**\r\nhttps://codesandbox.io/s/mo5x4nlq7p\r\n\r\n**Steps to reproduce**\r\n- Open console\r\n- Go to dog, then to home\r\n\r\n**What is expected?**\r\nEvery route is in keep-alive, so dog should be kept alive with its `name=dog`\r\n\r\n**What is actually happening?**\r\nIn console we see: `missing required prop: \"name\"`.\r\nFor this demo it is almost transparent, but in a real project I've faced a problem that the component that is dependent of the incoming parameter won't be rendered (as it uses apollo and computed properties binded on that parameter).\r\n\r\nP.S. Without keep-alive it's ok","Url":"https://github.com/vuejs/vue-router/issues/2395","RelatedDescription":"Closed issue \"Props params passing with keep-alive\" (#2395)"},{"Id":"360776064","IsPullRequest":false,"CreatedAt":"2018-09-17T22:50:51","Actor":"lakca","Number":"2393","RawContent":null,"Title":"Expose (store) history state stack","State":"closed","Body":"### What problem does this feature solve?\r\nAs we know,  for security reasons, browsers do not expose visited pages history.\r\nBut if in a single page application , it will be very helpful to access the history stack. \r\nFor example, I can clarify if it should directly back to previous or redirect to specific page when logged in.\r\nalthough I can replace these with other approaches in different scenarios or maintain this by myself.\r\nAppreciate it!\r\n\r\n### What does the proposed API look like?\r\nrouter.history.stack or others are all okay.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2393","RelatedDescription":"Closed issue \"Expose (store) history state stack\" (#2393)"},{"Id":"360793297","IsPullRequest":false,"CreatedAt":"2018-09-17T09:50:14","Actor":"zhengxs2018","Number":"2394","RawContent":null,"Title":"3.0.1 构建失败，找不到错误，问题已关闭","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/issues/2394","RelatedDescription":"Closed issue \"3.0.1 构建失败，找不到错误，问题已关闭\" (#2394)"},{"Id":"360715120","IsPullRequest":false,"CreatedAt":"2018-09-17T06:29:19","Actor":"stevenadams","Number":"2392","RawContent":null,"Title":"The output component names in vue-router.common.js are not what is defined in the src/components files","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/blob/dev/dist/vue-router.common.js#L386](https://github.com/vuejs/vue-router/blob/dev/dist/vue-router.common.js#L386)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nTry using `<RouterLink />` instead of `<router-link />`\r\n\r\n### What is expected?\r\nI should be able to use `<RouterLink />`\r\n\r\n### What is actually happening?\r\n`<routerlink> //content </routerlink>` gets rendered\r\n\r\n---\r\nI cloned the repo and ran `npm run build` - got the expected outcome in vue-router.common.js\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2392","RelatedDescription":"Closed issue \"The output component names in vue-router.common.js are not what is defined in the src/components files\" (#2392)"},{"Id":"360663346","IsPullRequest":true,"CreatedAt":"2018-09-16T18:05:23","Actor":"mlboy","Number":"2391","RawContent":null,"Title":"add this <router-link :to=\"-1\" go>","State":"open","Body":"声明式 | 编程式\r\n-- | --\r\n\\<router-link :to=\"...\" go\\>  | router.go(-1)","Url":"https://github.com/vuejs/vue-router/pull/2391","RelatedDescription":"Open PR \"add this <router-link :to=\"-1\" go>\" (#2391)"},{"Id":"360648966","IsPullRequest":true,"CreatedAt":"2018-09-16T15:17:52","Actor":"posva","Number":"2390","RawContent":null,"Title":"fix(resolve): use current location if not provided","State":"open","Body":"Fixes #2385\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2390","RelatedDescription":"Open PR \"fix(resolve): use current location if not provided\" (#2390)"},{"Id":"360637284","IsPullRequest":false,"CreatedAt":"2018-09-16T13:00:01","Actor":"posva","Number":"2389","RawContent":null,"Title":"Nodes leak when using an input with type=password","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n  <title>Document</title>\r\n</head>\r\n\r\n\r\n<body>\r\n  <script src=\"https://unpkg.com/vue@2.5.17/dist/vue.min.js\"></script>\r\n  <script src=\"../dist/vue-router.min.js\"></script>\r\n\r\n  <div id=\"app\">\r\n    <router-link :to=\"'/'\">Home</router-link>\r\n    <router-link :to=\"'/Login'\">Login</router-link>\r\n    <router-view />\r\n  </div>\r\n\r\n  <script>\r\n    const Home = {\r\n      template: `\r\n      <div class=\"home\">\r\n      <input \r\n        type=\"password\"\r\n        placeholder=\"password\" \r\n        name=\"password\"><br>\r\n  </div>\r\n  `\r\n    }\r\n\r\n    const Login = {\r\n      template: `\r\n      <div class=\"login\">\r\n    <div>\r\n      <h2>Login</h2>\r\n      \r\n      <button>Login</button>\r\n    </div>\r\n  </div>\r\n  `,\r\n      methods: {\r\n        submitClicked(id, password) { }\r\n      }\r\n    }\r\n\r\n    Vue.use(VueRouter);\r\n    const router = new VueRouter({\r\n      mode: \"history\",\r\n      base: '/explorations/',\r\n      routes: [\r\n        {\r\n          path: \"/\",\r\n          name: \"home\",\r\n          component: Home\r\n        },\r\n        {\r\n          path: \"/login\",\r\n          name: \"login\",\r\n          component: Login\r\n        }\r\n      ]\r\n    });\r\n\r\n    new Vue({\r\n      router,\r\n    }).$mount(\"#app\");\r\n  </script>\r\n\r\n</body>\r\n\r\n</html>\r\n```\r\n\r\n(file to be created in `explorations` folder) in vue-router repro after running `npm run build`\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- record memory grap in performance tab in chrome\r\n- click links to change views multiple times\r\n- garbage collect\r\n- repeat\r\n- stop recording\r\n- check node count increase\r\n\r\n### What is expected?\r\nnode count should go back to the same value after second garbage collection\r\n\r\n### What is actually happening?\r\nit keeps increasing\r\n\r\n---\r\nRemoving the type=password makes it behave as expected\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2389","RelatedDescription":"Open issue \"Nodes leak when using an input with type=password\" (#2389)"},{"Id":"360636851","IsPullRequest":false,"CreatedAt":"2018-09-16T12:55:06","Actor":"posva","Number":"2388","RawContent":null,"Title":"fail","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/issues/2388","RelatedDescription":"Closed issue \"fail\" (#2388)"},{"Id":"360628338","IsPullRequest":false,"CreatedAt":"2018-09-16T11:02:43","Actor":"askart","Number":"2387","RawContent":null,"Title":"prefetch/preload modules","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2387","RelatedDescription":"Closed issue \"prefetch/preload modules\" (#2387)"},{"Id":"360165365","IsPullRequest":false,"CreatedAt":"2018-09-14T08:36:51","Actor":"clevergod","Number":"2386","RawContent":null,"Title":"IE9: Object doesn't support this property or method \"replaceState\"","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/issues/1834](https://github.com/vuejs/vue-router/issues/1834)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nIE9 throw the following error： Object doesn't support this property or method \"replaceState\"\r\nI set the options: fallback: false\r\nI saw a similar issue：https://github.com/vuejs/vue-router/issues/1834\r\nWhy not do the same treatment here?：\r\nhttps://github.com/vuejs/vue-router/blob/8dadf9744e5d8431bf3e9148e66b34f4849055b5/dist/vue-router.js#L2149-L2153\r\n\r\n\r\n### What is expected?\r\nIn addition to the judgment support supportPushState processing：https://github.com/vuejs/vue-router/blob/8dadf9744e5d8431bf3e9148e66b34f4849055b5/dist/vue-router.js#L2149-L2153\r\n\r\n### What is actually happening?\r\nIE9 throw the following error: Object doesn't support this property or method \"replaceState\"\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2386","RelatedDescription":"Closed issue \"IE9: Object doesn't support this property or method \"replaceState\"\" (#2386)"},{"Id":"360156944","IsPullRequest":false,"CreatedAt":"2018-09-14T04:59:27","Actor":"decademoon","Number":"2385","RawContent":null,"Title":"router.resolve does not use current route by default","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/df4Lnuw6/698/](http://jsfiddle.net/df4Lnuw6/698/)\r\n\r\n### Steps to reproduce\r\n- Click the link.\r\n- Click the button.\r\n\r\n### What is expected?\r\nNo warning to be shown.\r\n\r\n### What is actually happening?\r\nA warning is shown saying that the id param was not provided. The [docs](https://router.vuejs.org/api/#router-resolve) mention that the current route will be used if omitted.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2385","RelatedDescription":"Open issue \"router.resolve does not use current route by default\" (#2385)"},{"Id":"359396064","IsPullRequest":false,"CreatedAt":"2018-09-12T20:18:08","Actor":"OculusMode","Number":"2384","RawContent":null,"Title":"Memory leaks","State":"closed","Body":"### Version\r\n2.5.0\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/7wnmv7q9n1](https://codesandbox.io/s/7wnmv7q9n1)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSimply navigate through tabs again and again\r\n\r\n### What is expected?\r\nMemory should be preseved\r\n\r\n### What is actually happening?\r\nMemory is increasing by time\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2384","RelatedDescription":"Closed issue \"Memory leaks\" (#2384)"},{"Id":"359390928","IsPullRequest":false,"CreatedAt":"2018-09-12T09:25:55","Actor":"OculusMode","Number":"2383","RawContent":null,"Title":"Memory leaks","State":"closed","Body":"Hey i've created an app and im having memory leaks while navigating via router.\r\nlink:\r\nhttps://codesandbox.io/s/7wnmv7q9n1\r\n\r\nGenerate issue: just navigate through upper tabs again and again and you will easliy find increase in memory.","Url":"https://github.com/vuejs/vue-router/issues/2383","RelatedDescription":"Closed issue \"Memory leaks\" (#2383)"},{"Id":"357319734","IsPullRequest":true,"CreatedAt":"2018-09-10T16:10:45","Actor":"sirlancelot","Number":"2377","RawContent":null,"Title":"Indicate that error handlers get an error argument","State":"closed","Body":"Update TS declaration to indicate that error handlers also pass the error as the callback's only argument.","Url":"https://github.com/vuejs/vue-router/pull/2377","RelatedDescription":"Closed or merged PR \"Indicate that error handlers get an error argument\" (#2377)"},{"Id":"358410613","IsPullRequest":true,"CreatedAt":"2018-09-10T13:42:10","Actor":"dkulyk","Number":"2382","RawContent":null,"Title":"Added resolving a component type.","State":"closed","Body":"Added support for resolving vm in the next((vm)=>{}) call.\r\n\r\n```\r\n@Component<Test>({\r\n  beforeRouteEnter(to, from, next) {\r\n    next((vm) => {\r\n      vm.testBool = true;  //TypeScript resolved this field. \r\n    });\r\n  },\r\n})\r\nexport default class Test extends Vue {\r\n  public testBool: boolean = false;\r\n}\r\n```\r\n![image](https://user-images.githubusercontent.com/370042/45268762-6521ca80-b48a-11e8-988a-d4abcf4b4eef.png)\r\n","Url":"https://github.com/vuejs/vue-router/pull/2382","RelatedDescription":"Closed or merged PR \"Added resolving a component type.\" (#2382)"},{"Id":"356878682","IsPullRequest":true,"CreatedAt":"2018-09-09T16:51:19","Actor":"kazupon","Number":"2376","RawContent":null,"Title":"docs(ja): update docs","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n/ping @ktsn @potato4d \r\n🙏 \r\n","Url":"https://github.com/vuejs/vue-router/pull/2376","RelatedDescription":"Closed or merged PR \"docs(ja): update docs\" (#2376)"},{"Id":"358253193","IsPullRequest":false,"CreatedAt":"2018-09-08T13:38:52","Actor":"michaelfelixmurphy","Number":"2381","RawContent":null,"Title":"Query parameter types change on reload","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vv2rrjm2p7](https://codesandbox.io/s/vv2rrjm2p7)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nIt helps to open the inline browser in a new window so you can see the native URL bar.\r\n\r\nClick \"say hello\" or \"say goodbye\" to go to the respective page with no query param. Number should be blank and the type undefined.\r\n\r\nClick the button to switch pages but set the number to 10. The number is set and the type is number.\r\n\r\nYou can also confirm that the param is being set in the URL bar.\r\n\r\nNow reload the page (or copy the URL and load it in a fresh tab). The number will be set and display correctly, but the type will be string. You can confirm this in the Vue devtools.\r\n\r\n### What is expected?\r\nOn a fresh load or reload, the type of the \"number\" param should be the same as it was when it was set by Vue. The type should be number.\r\n\r\n### What is actually happening?\r\nOn reload, the type changes to string.\r\n\r\n---\r\nFrankly I don't care which type vue router gives to me. I would prefer the parsing happens automatically, so I get a number, but if I know I'll get a string, I can always call parseInt myself. The important thing is that there is no difference in types between loading from another page vs loading for the first time from a URL. With many more query params of different types it is a pain (and code bloat) to handle the case where any of them can come in as a string or as the expected type.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2381","RelatedDescription":"Closed issue \"Query parameter types change on reload\" (#2381)"},{"Id":"357993316","IsPullRequest":false,"CreatedAt":"2018-09-07T09:36:49","Actor":"anneincoding","Number":"2380","RawContent":null,"Title":"vue ssr document is not defined","State":"closed","Body":"Hi everyone, I am trying to do server side render by 'vue-server-renderer', I can do \r\n```ssh\r\nnpm run dev\r\n```\r\nto develop, but when I try \r\n```ssh\r\nnpm run build\r\nnpm run start\r\n```\r\nI always got errors like this\r\n```ssh\r\nReferenceError: document is not defined\r\n    at n.(anonymous function).n.(anonymous function).(anonymous function).u.push.n.(anonymous function).Promise.then.n.(anonymous function) (server-bundle.js:1:422)\r\n    at new Promise (<anonymous>)\r\n    at Function.module.exports.o.e (server-bundle.js:1:346)\r\n    at component (server-bundle.js:1:3272)\r\n    at <my address>/node_modules/vue-router/dist/vue-router.common.js:1776:17\r\n    at <my address>/node_modules/vue-router/dist/vue-router.common.js:1803:66\r\n    at Array.map (<anonymous>)\r\n    at <my address>/node_modules/vue-router/dist/vue-router.common.js:1803:38\r\n    at Array.map (<anonymous>)\r\n    at flatMapComponents (<my address>/node_modules/vue-router/dist/vue-router.common.js:1802:26)\r\nerror during render : /\r\nReferenceError: document is not defined\r\n    at n.(anonymous function).n.(anonymous function).(anonymous function).u.push.n.(anonymous function).Promise.then.n.(anonymous function) (webpack/bootstrap:55:0)\r\n    at new Promise (<anonymous>)\r\n    at Function.module.exports.o.e (webpack/bootstrap:50:0)\r\n    at component (src/router/index.js:12:43)\r\n    at <my address>/node_modules/vue-router/dist/vue-router.common.js:1776:17\r\n    at <my address>/node_modules/vue-router/dist/vue-router.common.js:1803:66\r\n    at Array.map (<anonymous>)\r\n    at <my address>/node_modules/vue-router/dist/vue-router.common.js:1803:38\r\n    at Array.map (<anonymous>)\r\n    at flatMapComponents (<my address>/node_modules/vue-router/dist/vue-router.common.js:1802:26)\r\n\r\n```\r\nmy server.js looks like this \r\n```javascript\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst express = require('express');\r\nconst favicon = require('serve-favicon');\r\nconst compression = require('compression');\r\n// const microcache = require('route-cache');\r\nconst serialize = require('serialize-javascript');\r\nconst LRU = require('lru-cache');\r\nconst { createBundleRenderer } = require('vue-server-renderer');\r\nconst resolve = file => path.resolve(__dirname, file);\r\n\r\nconst isProd = process.env.NODE_ENV === 'production';\r\n// const useMicroCache = process.env.MICRO_CACHE !== 'false';\r\n\r\n// const serverInfo = `express/${require('express/package.json').version}` +\r\n//     `vue-server-renderer/${require('vue-server-renderer/package.json').version}`;\r\n\r\nconst app = express();\r\n\r\nconst proxy = require('http-proxy-middleware');\r\n\r\napp.use('/index', proxy({'target': 'https://xiaochengxu.huxiu.com', 'changeOrigin': true}));\r\n\r\nfunction createRenderer (bundle, options) {\r\n  // https://github.com/vuejs/vue/blob/dev/packages/vue-server-renderer/README.md#why-use-bundlerenderer\r\n  return createBundleRenderer(bundle, Object.assign(options, {\r\n    // for component caching\r\n    'cache': LRU({\r\n      'max': 1000,\r\n      'maxAge': 1000 * 60 * 15\r\n    }),\r\n    // this is only needed when vue-server-renderer is npm-linked\r\n    'basedir': resolve('./dist'),\r\n    // recommended for performance\r\n    'runInNewContext': false\r\n  }));\r\n}\r\n\r\nlet renderer;\r\nlet readyPromise;\r\nconst templatePath = resolve('./src/index.template.html');\r\n\r\nif (isProd) {\r\n  // In production: create server renderer using template and built server bundle.\r\n  // The server bundle is generated by vue-ssr-webpack-plugin.\r\n  const template = fs.readFileSync(templatePath, 'utf-8');\r\n  // const template = fs.readFileSync('./dist/index.html', 'utf-8');\r\n  const serverBundle = require('./dist/vue-ssr-server-bundle.json');\r\n  // The client manifests are optional, but it allows the renderer\r\n  // to automatically infer preload/prefetch links and directly add <script>\r\n  // tags for any async chunks used during render, avoiding waterfall requests.\r\n  const clientManifest = require('./dist/vue-ssr-client-manifest.json');\r\n\r\n  renderer = createRenderer(serverBundle, {\r\n    template,\r\n    clientManifest\r\n  });\r\n} else {\r\n  // In development: setup the dev server with watch and hot-reload,\r\n  // and create a new renderer on bundle / index template update.\r\n  readyPromise = require('./build/dev-server')(\r\n    app,\r\n    templatePath,\r\n    (bundle, options) => {\r\n      renderer = createRenderer(bundle, options);\r\n    }\r\n  );\r\n}\r\n\r\n\r\nconst serve = (path, cache) => express.static(resolve(path), {\r\n  'maxAge': cache && isProd ? 60 * 60 * 24 * 30 : 0\r\n});\r\n// 加载和设置static\r\n\r\napp.use(compression({ 'threshold': 0 }));\r\napp.use(favicon('./public/favicon.ico'));\r\napp.use('/dist', serve('./dist', true));\r\napp.use('/public', serve('./public', true));\r\n// app.use('/manifest.json', serve('./manifest.json', true));\r\napp.use('/service-worker.js', serve('./dist/service-worker.js'));\r\n// app.use(microcache.cacheSeconds(1, req => useMicroCache && req.originalUrl));\r\n\r\nfunction render(req, res) {\r\n  // res.setHeader('Context-Type', 'text/html');\r\n  // res.setHeader('Server', serverInfo);\r\n  const s = Date.now();\r\n  const context = {\r\n    'title': '虎嗅网', // default title\r\n    'url': req.url\r\n  };\r\n\r\n  const handleError = err => {\r\n    if (err.url) {\r\n      res.redirect(err.url);\r\n    } else if (err.code === 404) {\r\n      res.status(404).send('404 | Page Not Found');\r\n    } else {\r\n      // Render Error Page or Redirect\r\n      res.status(500).send('500 | Internal Server Error');\r\n      console.error(`error during render : ${req.url}`);\r\n      console.error(err.stack);\r\n    }\r\n  };\r\n  let html = '';\r\n  const renderStream = renderer.renderToStream(context);\r\n\r\n  renderStream.once('data', data => {\r\n    html += data.toString();\r\n  });\r\n  renderStream.on('data', chunk => {\r\n    res.write(chunk);\r\n  });\r\n  renderStream.on('end', () => {\r\n    if (context.initialState) {\r\n      res.write(\r\n        `<script>window.__INSTAL_STATE__=${\r\n          serialize(context.initialState, {'isJSON':true})\r\n        }</script>`\r\n      );\r\n    }\r\n    res.end(html.tail);\r\n    console.log(`whole request: ${Date.now() - s}ms`);\r\n  });\r\n  renderStream.on('error', handleError);\r\n}\r\n\r\napp.get('*', isProd ? render : (req, res) => {\r\n  readyPromise.then(() => render(req, res));\r\n});\r\n\r\nconst port = process.env.PORT || 9028;\r\n\r\napp.listen(port, () => {\r\n  console.log(`server started at  http://localhost:${port}`);\r\n});\r\n\r\n```\r\n","Url":"https://github.com/vuejs/vue-router/issues/2380","RelatedDescription":"Closed issue \"vue ssr document is not defined\" (#2380)"},{"Id":"357802997","IsPullRequest":true,"CreatedAt":"2018-09-06T20:31:04","Actor":"feute","Number":"2379","RawContent":null,"Title":"Add missing semicolon in CSS file from transitions example","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\nsmall detail in css file","Url":"https://github.com/vuejs/vue-router/pull/2379","RelatedDescription":"Closed or merged PR \"Add missing semicolon in CSS file from transitions example\" (#2379)"},{"Id":"357617377","IsPullRequest":false,"CreatedAt":"2018-09-06T11:43:45","Actor":"VCodepp","Number":"2378","RawContent":null,"Title":"Iframe problem.","State":"closed","Body":"I'm creating an admin page and I'm using the TyinMCE text editor with the FileBrowser plugins KCfinder.\r\nHowever, when I click the browser button, the window opens as if it is entering the normal site.\r\nCan I make sure some links are not taken into consideration?","Url":"https://github.com/vuejs/vue-router/issues/2378","RelatedDescription":"Closed issue \"Iframe problem.\" (#2378)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"361250917","IsPullRequest":false,"CreatedAt":"2018-09-22T23:08:32","Actor":"sjmcdowall","Number":"1403","RawContent":null,"Title":"Typescript definition for interface Dispatch not correct -- should allow non-async return? ","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/sjmcdowall/hzew29g1/](https://jsfiddle.net/sjmcdowall/hzew29g1/)\r\n\r\n\r\n### Steps to reproduce\r\nCreate a typescript Vue project with Vuex\r\nUse a fairly strict tslint that has \"no-floating-promises\" turned on \r\nCode a call to a store.dispatch() without await / async Promise stuff (i.e. normal sync. call)\r\n\r\n### What is expected?\r\nNo linting errors\r\n\r\n### What is actually happening?\r\ntslint complains with \r\nERROR: (no-floating-promises) /Users/sjm/work/mm/mms4/web-ui/src/app/router.ts[91, 5]: Promises must be handled appropriately on this code:\r\n    store.dispatch('event/initState');\r\n\r\n---\r\nI think the interface for Dispatch needs to have more overrides to include the non-Promise versions that return : any ?? \r\n\r\n`export interface Dispatch {\r\n  (type: string, payload?: any, options?: DispatchOptions): Promise<any>;\r\n  <P extends Payload>(payloadWithType: P, options?: DispatchOptions): Promise<any>;\r\n  (type: string, payload?: any, options?: DispatchOptions): any;\r\n  <P extends Payload>(payloadWithType: P, options?: DispatchOptions): any;\r\n}`\r\n\r\n??\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1403","RelatedDescription":"Closed issue \"Typescript definition for interface Dispatch not correct -- should allow non-async return? \" (#1403)"},{"Id":"361542686","IsPullRequest":true,"CreatedAt":"2018-09-19T01:29:50","Actor":"rigor789","Number":"1404","RawContent":null,"Title":"feat(devtool): allow usage in non-browser environments","State":"open","Body":"This allows inspecting vuex state in standalone devtools with non-browser environments such as NativeScript\r\n\r\nChanges taken from\r\nhttps://github.com/vuejs/vue-devtools/blob/4fe7c84d614f1ddf581d65274f30a989b77f9ad3/shells/electron/index.js#L3-L7","Url":"https://github.com/vuejs/vuex/pull/1404","RelatedDescription":"Open PR \"feat(devtool): allow usage in non-browser environments\" (#1404)"},{"Id":"359858860","IsPullRequest":true,"CreatedAt":"2018-09-13T11:42:03","Actor":"escapedcat","Number":"1402","RawContent":null,"Title":"chore(docs): link to vue docs watch for options","State":"open","Body":"> Accepts an optional options object that takes the same options as Vue's vm.$watch method.\r\n\r\nlinking to the actual `watch` of the vue doc might be helpful for others to check options faster. not sure if this is wanted though due to future maintenance efforts.","Url":"https://github.com/vuejs/vuex/pull/1402","RelatedDescription":"Open PR \"chore(docs): link to vue docs watch for options\" (#1402)"},{"Id":"359583716","IsPullRequest":true,"CreatedAt":"2018-09-12T17:40:01","Actor":"TimvdLippe","Number":"1401","RawContent":null,"Title":"Add esm-browser build to dist","State":"open","Body":"This PR is the complement of https://github.com/vuejs/vue/pull/7110 which is already being distributed on NPM for Vue. I have personally ran the build and imported in my project and I can confirm all references to `process` have been removed and that the code is not transpiled.\r\n\r\nFixes #1247","Url":"https://github.com/vuejs/vuex/pull/1401","RelatedDescription":"Open PR \"Add esm-browser build to dist\" (#1401)"},{"Id":"358486841","IsPullRequest":false,"CreatedAt":"2018-09-12T11:55:12","Actor":"the-s0urce","Number":"1398","RawContent":null,"Title":"Mutations or Actions deprecated?","State":"closed","Body":"### What problem does this feature solve?\r\nHello,\r\nas first sorry for abusing the issue system, but did not find any other contact option. On one of the last two vue.js conferences (not sure wich of both it was), you said, that Mutations and Actions will be merged to one call. I was looking for some written news about this now for quite a time. Now we are setting up a new big project and we would really love to get a confirmation about this.\r\nThank you\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1398","RelatedDescription":"Closed issue \"Mutations or Actions deprecated?\" (#1398)"},{"Id":"359277072","IsPullRequest":true,"CreatedAt":"2018-09-12T01:02:39","Actor":"kazupon","Number":"1400","RawContent":null,"Title":"update ja docs","State":"open","Body":"/ping @ktsn ","Url":"https://github.com/vuejs/vuex/pull/1400","RelatedDescription":"Open PR \"update ja docs\" (#1400)"},{"Id":"358495065","IsPullRequest":false,"CreatedAt":"2018-09-10T07:11:53","Actor":"ankitsinghaniyaz","Number":"1399","RawContent":null,"Title":"How to access Vue(vm) instance in Vuex store?","State":"open","Body":"### What problem does this feature solve?\r\nI have a `$notify` method on Vue prototype. I need to use that in my action. Is there a way to do that?\r\n\r\nI see that on Vuex we have `this.$_vm` but not sure if that is the right thing to do\r\n\r\n### What does the proposed API look like?\r\n`this.vue.$notify()`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1399","RelatedDescription":"Open issue \"How to access Vue(vm) instance in Vuex store?\" (#1399)"},{"Id":"358406566","IsPullRequest":false,"CreatedAt":"2018-09-09T19:55:57","Actor":"ClickerMonkey","Number":"1397","RawContent":null,"Title":"Improve Computed Support","State":"open","Body":"### What problem does this feature solve?\r\nBetter support for computed properties with a set function.\r\n\r\n\r\n### What does the proposed API look like?\r\n\r\n```vue\r\nimport { mapComputed } from 'vuex'\r\nnew Vue({\r\n  computed: {\r\n    ...mapComputed({\r\n       'mutationName': 'stateVariable',\r\n       // example:\r\n       'setLoading': 'loading'\r\n    })\r\n  }\r\n})\r\n```\r\n\r\nThis would generate a computed property that would return `stateVariable` and when the value is changed it would call the mutation `mutationName` with the new value.\r\n\r\nThis greatly simplifies directives like `v-model`.\r\n\r\nImplementation:\r\n\r\n```TypeScript\r\ntype VuexComputedMap = { [mutation: string]: string };\r\n\r\nexport function mapComputed(map: VuexComputedMap) {\r\n  const mapped = Object.create(null);\r\n  for (const mutation in map) {\r\n    const variable = map[mutation]\r\n    mapped[variable] = {\r\n      get () {\r\n         return this.$store.state[ variable ]\r\n      },\r\n      set (value) {\r\n        this.$store.commit(mutation, value)\r\n      }\r\n    };\r\n  }\r\n  return mapped;\r\n}\r\n```\r\n\r\n### Problems\r\n\r\nThe implementation would need to be changed to account for modules & namespaces.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1397","RelatedDescription":"Open issue \"Improve Computed Support\" (#1397)"},{"Id":"355668368","IsPullRequest":false,"CreatedAt":"2018-09-09T18:09:20","Actor":"matsieftw","Number":"1389","RawContent":null,"Title":"Documentation Never Actually Walks You Through Set Up","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://thereisntoneandyoushouldnotrequirethis.com](https://thereisntoneandyoushouldnotrequirethis.com)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Go to your docs.\r\n2. Read them.\r\n3. Think about whether they would be helpful to someone trying to set up a Vue app.\r\n\r\n### What is expected?\r\nHelpful documentation walking you through set up of a Vue app using Vuex.\r\n\r\n### What is actually happening?\r\nA lot of info on concepts and no info on actually bringing in Vuex to your application.\r\n\r\n---\r\nVue's documentation in general never actually walks you through setting anything up. It provides a few code snippets and assumes you'll understand. The documentation has been the biggest source of my frustration while using Vue since it never actually explains anything.\r\n\r\nFor example, on the Vuex installation page, sandwiched between CDN/package manager installation and building from source, you've put that Vuex needs to be instantiated in a module set up. You've provided zero context for this. Is this in the store? Is this for every file you need to access the store in? More importantly, it shouldn't be on the installation page, let alone sandwiched in between different installation methods. Vue's documentation is riddled with these issues. Unfortunately, I still don't actually know enough about how Vue actually works to be able to contribute to the documentation in any way. If I didn't have to use Vue for the project I am on, I would be using React, Redux, & RxJs and have access to meaningful, better written documentation that bothers to walk you through the set up. If Vue actually wants to gain any real traction, you're going to need to actually show folks how to use and set up your tools.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1389","RelatedDescription":"Closed issue \"Documentation Never Actually Walks You Through Set Up\" (#1389)"},{"Id":"356482547","IsPullRequest":true,"CreatedAt":"2018-09-03T12:16:11","Actor":"xiaoshude","Number":"1396","RawContent":null,"Title":"feat(helpers): Allow function to be passed as namespace argument for …","State":"open","Body":"…mapState, mapGetters, mapMutati","Url":"https://github.com/vuejs/vuex/pull/1396","RelatedDescription":"Open PR \"feat(helpers): Allow function to be passed as namespace argument for …\" (#1396)"},{"Id":"356481173","IsPullRequest":true,"CreatedAt":"2018-09-03T12:13:04","Actor":"xiaoshude","Number":"1395","RawContent":null,"Title":"feat(helpers): Allow function to be passed as namespace argument for …","State":"closed","Body":"…mapState, mapGetters, mapMutati","Url":"https://github.com/vuejs/vuex/pull/1395","RelatedDescription":"Closed or merged PR \"feat(helpers): Allow function to be passed as namespace argument for …\" (#1395)"},{"Id":"355847188","IsPullRequest":false,"CreatedAt":"2018-09-03T07:21:12","Actor":"Fachher","Number":"1391","RawContent":null,"Title":"Registering Vuex hooks prevents vue rendering.","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/Fachher/vuejsschool.git](https://github.com/Fachher/vuejsschool.git)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nyarn run serve.\r\nopen browser and open http://localhost:8080\r\nYou will see that only the navigationbar is displayed but content is missing.\r\n\r\n### What is expected?\r\nSee the content of each route\r\n\r\n### What is actually happening?\r\ncontent is not rendered\r\n\r\n---\r\nRemoving hook methods from About.vue, Home.vue and ShipmentList.vue leads to working app. This means just adding the hooks does not lead to this behavior.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1391","RelatedDescription":"Closed issue \"Registering Vuex hooks prevents vue rendering.\" (#1391)"},{"Id":"355913234","IsPullRequest":false,"CreatedAt":"2018-09-01T04:09:50","Actor":"imatmati","Number":"1393","RawContent":null,"Title":"Vuex module helpers","State":"closed","Body":"### What problem does this feature solve?\r\nPrevent wrong placement of mapping helpers in component.\r\nI came across a trouble lately with coding calls to modules. I used the helpers but incorrectly. For example, I used an action helper in the computed part of my component. The issue was that it was called only once .\r\n\r\n### What does the proposed API look like?\r\n`mapActions(myComponent,[\"action1\", \"action2\"])`\r\n\r\nBut to prevent any wrong insertion in the component, it would be convenient to register the component in the helpers instead of inserting the helpers in the component which is error prone.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1393","RelatedDescription":"Closed issue \"Vuex module helpers\" (#1393)"},{"Id":"356049299","IsPullRequest":true,"CreatedAt":"2018-09-01T03:52:33","Actor":"yangdan8","Number":"1394","RawContent":null,"Title":"修复d.ts不能支持tsx的bug","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1394","RelatedDescription":"Closed or merged PR \"修复d.ts不能支持tsx的bug\" (#1394)"},{"Id":"355885735","IsPullRequest":false,"CreatedAt":"2018-08-31T08:24:23","Actor":"imatmati","Number":"1392","RawContent":null,"Title":"Vuex module helpers","State":"closed","Body":"Hi,\r\n\r\nI would to propose an enhancement. I came across a trouble lately with coding calls to modules. I used the helpers but incorrectly. For example, I used an action helper in the computed part of my component. The issue was that it was called only once ... But to prevent any wrong insertion in the component, it would be convenient to register the component in the helpers instead of inserting the helpers in the component which is error prone. Why not something like : \r\n`mapActions(myComponent,[\"action1\", \"action2\"])`\r\nIt would insert correctly the helpers in the component.\r\nHave a nice day.\r\n\r\nIvan Matmati\r\n","Url":"https://github.com/vuejs/vuex/issues/1392","RelatedDescription":"Closed issue \"Vuex module helpers\" (#1392)"},{"Id":"355824650","IsPullRequest":false,"CreatedAt":"2018-08-31T03:15:23","Actor":"myadomin","Number":"1390","RawContent":null,"Title":"bug: examples\\todomvc, when press keyboard enter to delete some todoItem, maybe delete two todoItem","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/dev/examples/todomvc/store/mutations.js](https://github.com/vuejs/vuex/blob/dev/examples/todomvc/store/mutations.js)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nwhen edit some one todoItem, clear the todoItem text, then press keyboard enter.\r\n\r\n\r\n### What is expected?\r\ndelete the todoItem\r\n\r\n### What is actually happening?\r\ndelete the todoItem and anothre todoItem\r\n\r\n---\r\nwhen edit some one todoItem, clear the todoItem text, then press keyboard enter.\r\nit will execute @keyup.enter=\"doneEdit\" and @keyup.esc=\"cancelEdit\" (in page TodoItem.vue).\r\nin page vuex\\examples\\todomvc\\store\\mutations.js, mutation:removeTodo.\r\nthe mutation:removeTodo will execute twice, so will delete two todoItem.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1390","RelatedDescription":"Open issue \"bug: examples\\todomvc, when press keyboard enter to delete some todoItem, maybe delete two todoItem\" (#1390)"},{"Id":"355551023","IsPullRequest":true,"CreatedAt":"2018-08-31T03:02:07","Actor":"myadomin","Number":"1388","RawContent":null,"Title":"fix bug: examples/todomvc","State":"closed","Body":"page vuex\\examples\\todomvc\\store\\mutations.js,  method:removeTodo.\r\nwhen edit some one todoItem, clear the todoItem, then press keyboard enter.\r\nbecause execute @keyup.enter=\"doneEdit\" and @keyup.esc=\"cancelEdit\" (in page TodoItem.vue).\r\nso here will execute twice, so will delete two todoItem.\r\nso i suggest change here to .","Url":"https://github.com/vuejs/vuex/pull/1388","RelatedDescription":"Closed or merged PR \"fix bug: examples/todomvc\" (#1388)"},{"Id":"355404917","IsPullRequest":false,"CreatedAt":"2018-08-30T05:04:44","Actor":"lin-123","Number":"1384","RawContent":null,"Title":"mutate setHours by date.setHours() will not trigger view update ","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/lin-123/pen/RYoaOK?editors=1111](https://codepen.io/lin-123/pen/RYoaOK?editors=1111)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n## code\r\n- store.js\r\n```javascript\r\nimport Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport * as mutations from './mutations'\r\nimport * as actions from './actions'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    date: new Date()\r\n  },\r\n  mutations,\r\n  actions,\r\n  strict: process.env.NODE_ENV !== 'production'\r\n})\r\n```\r\n\r\n- mutations.js\r\n```javascript\r\nexport const SET_HOUR = (state, hours) => {\r\n  state.date.setHours(hours)\r\n}\r\n```\r\n\r\n- components\r\n```html\r\n<template>\r\n<div class=\"map\">\r\n  <h2>{{dateFull}}</h2>\r\n  <button @click=\"updateHours\">update hours</button>\r\n</div>\r\n</template>\r\n<script>\r\nimport L from 'leaflet'\r\nimport { mapState } from 'vuex'\r\n\r\nexport default {\r\n  data: () => ({\r\n    hours: 0\r\n  }),\r\n  computed: {\r\n    ...mapState({\r\n      date: state => state.date\r\n    })\r\n  },\r\n  methods: {\r\n    updateHours() {\r\n      this.hours  = 1\r\n      this.$store.commit('SET_HOURS', this.hours)\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n\r\n### What is expected?\r\ndate should be change on view when i mutate date\r\n\r\n### What is actually happening?\r\nview have no change when i mutate date by state.date.setHours(hours).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1384","RelatedDescription":"Closed issue \"mutate setHours by date.setHours() will not trigger view update \" (#1384)"},{"Id":"355413687","IsPullRequest":true,"CreatedAt":"2018-08-30T05:01:01","Actor":"leecade","Number":"1387","RawContent":null,"Title":"fix: confused namespace for get module","State":"closed","Body":"see #1386","Url":"https://github.com/vuejs/vuex/pull/1387","RelatedDescription":"Closed or merged PR \"fix: confused namespace for get module\" (#1387)"},{"Id":"355412566","IsPullRequest":false,"CreatedAt":"2018-08-30T05:00:49","Actor":"leecade","Number":"1386","RawContent":null,"Title":"Confused namespace for get module","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue](https://codesandbox.io/s/vue)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. create files in store folder\r\n\r\n`store/foo/index.js`\r\n\r\n`store/foo/a.js`\r\n\r\n2. get module by namespace\r\n\r\n```js\r\ncomputed: {\r\n   ...mapState('foo/a', []), // correct\r\n   ...mapState('foo', []), // correct\r\n   //  ...mapState('foo/index', []), // not works here\r\n}\r\n```\r\n\r\n### What is expected?\r\nit make sense if `mapState('foo/index', [])` works as `mapState('foo', [])`\r\n\r\n### What is actually happening?\r\n`mapState('foo/index', [])` not work\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1386","RelatedDescription":"Closed issue \"Confused namespace for get module\" (#1386)"},{"Id":"355411714","IsPullRequest":false,"CreatedAt":"2018-08-30T03:36:45","Actor":"leecade","Number":"1385","RawContent":null,"Title":"Confused namespace for module","State":"closed","Body":"## Version\r\n\r\n3.0.1\r\n\r\nReproduction link\r\n\r\n## Steps to reproduce\r\n\r\n1. create file in store folder\r\n\r\n`store/foo/index.js`\r\n\r\n`store/foo/a.js`\r\n\r\n2. get module by namespace\r\n\r\n```js\r\ncomputed: {\r\n   ...mapState('foo/a', []), // correct\r\n   ...mapState('foo', []), // correct\r\n   //  ...mapState('foo/index', []), // not works here\r\n}\r\n```\r\n\r\n## What is expected?\r\n\r\nit make sense if `mapState('foo/index', [])` works as `mapState('foo', [])`\r\n\r\n## What is actually happening?\r\n\r\n`mapState('foo/index', [])` not work","Url":"https://github.com/vuejs/vuex/issues/1385","RelatedDescription":"Closed issue \"Confused namespace for module\" (#1385)"},{"Id":"355221437","IsPullRequest":false,"CreatedAt":"2018-08-29T15:43:11","Actor":"james-wasson","Number":"1383","RawContent":null,"Title":"Vuex loop dependencies are slow","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/james_wasson/2ut7rbx5/](https://jsfiddle.net/james_wasson/2ut7rbx5/)  \r\nPlease refer to the console for more information while running this fiddle.  \r\nYou can control what is being logged by changing the flags at the top of the fiddle\r\n\r\n### Steps to reproduce\r\n* create a loop adding a component\r\n* add > 8 Vuex dependencies per component row\r\n* when changing the list removing rows is slow\r\n\r\n### What is expected?\r\nDepending on Vuex should be of similar speed to passing as props.  \r\nHere is an example of passing by props: https://jsfiddle.net/james_wasson/8g2fxr9n/\r\n\r\n### What is actually happening?\r\nDepending on the number of rows the removal time increase to more than 100 milliseconds, and at very high numbers of rows (> 400) removal can take up to 500 milliseconds\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1383","RelatedDescription":"Open issue \"Vuex loop dependencies are slow\" (#1383)"},{"Id":"354375091","IsPullRequest":false,"CreatedAt":"2018-08-29T01:05:01","Actor":"devinholloway","Number":"1381","RawContent":null,"Title":"store.watch not functioning in SSR mode","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/devinholloway/vuex-watch-ssr](https://github.com/devinholloway/vuex-watch-ssr)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClone the github account. Follow instructions in README\r\n\r\n### What is expected?\r\nstore.watch to execute its callback when the state its watching chanes\r\n\r\n### What is actually happening?\r\ncallback is not called on state update only in SSR\r\n\r\n---\r\nThis is a project using Quasar for SSR. preFetch methods execute server side, much like the fetch methods in Nuxt. The purpose of this is to execute multiple server side functions where one depends on the results of the other.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1381","RelatedDescription":"Closed issue \"store.watch not functioning in SSR mode\" (#1381)"},{"Id":"354683228","IsPullRequest":false,"CreatedAt":"2018-08-28T11:13:18","Actor":"sergioIGZ","Number":"1382","RawContent":null,"Title":"this is undefined inside the getters","State":"open","Body":"### What problem does this feature solve?\r\nif (somehow) you can access to this inside getters then you could use plugins inside getters (as you can now in actions or mutations)\r\n\r\n### What does the proposed API look like?\r\nI'm not sure how would i solve this, maybe this is a bug.\r\nThe thing is that inside a getter you can use this.$myPlugin.whatever()\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1382","RelatedDescription":"Open issue \"this is undefined inside the getters\" (#1382)"},{"Id":"351720920","IsPullRequest":true,"CreatedAt":"2018-08-25T09:00:18","Actor":"Alex-Sokolov","Number":"1376","RawContent":null,"Title":"docs: [RU] Translation fixes","State":"closed","Body":"Fix links anchors","Url":"https://github.com/vuejs/vuex/pull/1376","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation fixes\" (#1376)"},{"Id":"353990294","IsPullRequest":true,"CreatedAt":"2018-08-25T08:59:53","Actor":"kkkisme","Number":"1380","RawContent":null,"Title":"Update logger.d.ts","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1380","RelatedDescription":"Closed or merged PR \"Update logger.d.ts\" (#1380)"},{"Id":"353618860","IsPullRequest":false,"CreatedAt":"2018-08-24T02:21:10","Actor":"Xiaolin-Zhu","Number":"1379","RawContent":null,"Title":"There is a error when I use ...mapState","State":"closed","Body":"`...mapState({\r\n            inviteeCount: state => state.inviteeCount,\r\n        })`\r\n\r\nError is \r\nUncaught TypeError: Object(...) is not a function","Url":"https://github.com/vuejs/vuex/issues/1379","RelatedDescription":"Closed issue \"There is a error when I use ...mapState\" (#1379)"},{"Id":"353167919","IsPullRequest":false,"CreatedAt":"2018-08-23T01:17:09","Actor":"philBrown","Number":"1378","RawContent":null,"Title":"Direct mutation of state not throwing error in strict mode","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/r1z0a4gp/7/](https://jsfiddle.net/r1z0a4gp/7/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nIn the JSFiddle example, type into the text box.\r\n\r\nThe input's `v-model` is bound to a computed property with getter and setter. The getter maps directly to `$store.state.foo` and the setter dispatches the \"setFoo\" action.\r\n\r\nThe action directly modifies `context.state.foo` instead of committing a mutation.\r\n\r\n\r\n\r\n### What is expected?\r\nStrict mode is enabled so I would expect to see an error about directly mutating state outside of a mutation\r\n\r\n### What is actually happening?\r\nNo errors are reported and state is modified\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1378","RelatedDescription":"Closed issue \"Direct mutation of state not throwing error in strict mode\" (#1378)"},{"Id":"352092756","IsPullRequest":false,"CreatedAt":"2018-08-20T11:21:30","Actor":"dracarys26","Number":"1377","RawContent":null,"Title":"vuex 支持es6的map 吗","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/issues/1377","RelatedDescription":"Closed issue \"vuex 支持es6的map 吗\" (#1377)"},{"Id":"350321174","IsPullRequest":true,"CreatedAt":"2018-08-14T08:39:00","Actor":"Jinjiang","Number":"1375","RawContent":null,"Title":"Applied #1361 to all languages","State":"closed","Body":"#1361 ","Url":"https://github.com/vuejs/vuex/pull/1375","RelatedDescription":"Closed or merged PR \"Applied #1361 to all languages\" (#1375)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-09-24T05:30:48.9445179Z","RunDurationInMilliseconds":3175}