{"Data":{"GitHub":{"Issues":[{"Id":"464654522","IsPullRequest":true,"CreatedAt":"2019-07-05T14:00:21","Actor":"RussKie","Number":"1285","RawContent":null,"Title":"Fix 1274 port IntegerCollectionEditor","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\nCloses #1274\r\n\r\n\r\n## Proposed changes\r\n\r\n- Port IntegerCollectionEditor from NET Fx\r\n- Fix xml-docs\r\n- Fix names\r\n- Remove unused usings\r\n- Remove `this.`\r\n- Add missing braces\r\n- Use arrow functions, where appropriate\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- TODO \r\n","Url":"https://github.com/dotnet/winforms/pull/1285","RelatedDescription":"Open PR \"Fix 1274 port IntegerCollectionEditor\" (#1285)"},{"Id":"464449514","IsPullRequest":true,"CreatedAt":"2019-07-05T03:50:19","Actor":"RussKie","Number":"1284","RawContent":null,"Title":"WIP: Fix 1270 port StringCollectionEditor","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nCloses #1270\r\n\r\n\r\n## Proposed changes\r\n\r\n- Port StringCollectionEditor from NET Fx\r\n- Fix xml-docs\r\n- Fix names\r\n- Remove unused usings\r\n- Remove `this.`\r\n- Add missing braces\r\n- Use arrow functions, where appropriate\r\n\r\n\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- TODO","Url":"https://github.com/dotnet/winforms/pull/1284","RelatedDescription":"Open PR \"WIP: Fix 1270 port StringCollectionEditor\" (#1284)"},{"Id":"464440659","IsPullRequest":false,"CreatedAt":"2019-07-05T02:56:59","Actor":"RussKie","Number":"1283","RawContent":null,"Title":"Port System.Windows.Forms.Design.DataGridColumnCollectionEditor","State":"open","Body":"**Problem description:**\r\n`DataGridColumnCollectionEditor` from System.Windows.Forms.Design is missing\r\n\r\nRefer to https://github.com/dotnet/winforms/issues/1115#issuecomment-504798149\r\n","Url":"https://github.com/dotnet/winforms/issues/1283","RelatedDescription":"Open issue \"Port System.Windows.Forms.Design.DataGridColumnCollectionEditor\" (#1283)"},{"Id":"464440601","IsPullRequest":false,"CreatedAt":"2019-07-05T02:56:40","Actor":"RussKie","Number":"1282","RawContent":null,"Title":"Port System.Windows.Forms.Design.ToolStripCollectionEditor","State":"open","Body":"**Problem description:**\r\n`ToolStripCollectionEditor` from System.Windows.Forms.Design is missing\r\n\r\nRefer to https://github.com/dotnet/winforms/issues/1115#issuecomment-504798149\r\n","Url":"https://github.com/dotnet/winforms/issues/1282","RelatedDescription":"Open issue \"Port System.Windows.Forms.Design.ToolStripCollectionEditor\" (#1282)"},{"Id":"464440531","IsPullRequest":false,"CreatedAt":"2019-07-05T02:56:16","Actor":"RussKie","Number":"1281","RawContent":null,"Title":"Port System.Windows.Forms.Design.TabPageCollectionEditor","State":"open","Body":"**Problem description:**\r\n`TabPageCollectionEditor` from System.Windows.Forms.Design is missing\r\n\r\nRefer to https://github.com/dotnet/winforms/issues/1115#issuecomment-504798149\r\n","Url":"https://github.com/dotnet/winforms/issues/1281","RelatedDescription":"Open issue \"Port System.Windows.Forms.Design.TabPageCollectionEditor\" (#1281)"},{"Id":"464440462","IsPullRequest":false,"CreatedAt":"2019-07-05T02:55:51","Actor":"RussKie","Number":"1280","RawContent":null,"Title":"Port System.Windows.Forms.Design.StyleCollectionEditor","State":"open","Body":"**Problem description:**\r\n`StyleCollectionEditor` from System.Windows.Forms.Design is missing\r\n\r\nRefer to https://github.com/dotnet/winforms/issues/1115#issuecomment-504798149\r\n","Url":"https://github.com/dotnet/winforms/issues/1280","RelatedDescription":"Open issue \"Port System.Windows.Forms.Design.StyleCollectionEditor\" (#1280)"},{"Id":"464440389","IsPullRequest":false,"CreatedAt":"2019-07-05T02:55:29","Actor":"RussKie","Number":"1279","RawContent":null,"Title":"Port System.Windows.Forms.Design.TreeNodeStyleCollectionEditor","State":"open","Body":"**Problem description:**\r\n`TreeNodeStyleCollectionEditor` from System.Windows.Forms.Design is missing\r\n\r\nRefer to https://github.com/dotnet/winforms/issues/1115#issuecomment-504798149\r\n","Url":"https://github.com/dotnet/winforms/issues/1279","RelatedDescription":"Open issue \"Port System.Windows.Forms.Design.TreeNodeStyleCollectionEditor\" (#1279)"},{"Id":"464440337","IsPullRequest":false,"CreatedAt":"2019-07-05T02:55:08","Actor":"RussKie","Number":"1278","RawContent":null,"Title":"Port System.Windows.Forms.Design.TreeNodeCollectionEditor","State":"open","Body":"**Problem description:**\r\n`TreeNodeCollectionEditor` from System.Windows.Forms.Design is missing\r\n\r\nRefer to https://github.com/dotnet/winforms/issues/1115#issuecomment-504798149\r\n","Url":"https://github.com/dotnet/winforms/issues/1278","RelatedDescription":"Open issue \"Port System.Windows.Forms.Design.TreeNodeCollectionEditor\" (#1278)"},{"Id":"464440277","IsPullRequest":false,"CreatedAt":"2019-07-05T02:54:45","Actor":"RussKie","Number":"1277","RawContent":null,"Title":"Port System.Windows.Forms.Design.ListViewSubItemCollectionEditor","State":"open","Body":"**Problem description:**\r\n`ListViewSubItemCollectionEditor` from System.Windows.Forms.Design is missing\r\n\r\nRefer to https://github.com/dotnet/winforms/issues/1115#issuecomment-504798149\r\n","Url":"https://github.com/dotnet/winforms/issues/1277","RelatedDescription":"Open issue \"Port System.Windows.Forms.Design.ListViewSubItemCollectionEditor\" (#1277)"},{"Id":"464440221","IsPullRequest":false,"CreatedAt":"2019-07-05T02:54:20","Actor":"RussKie","Number":"1276","RawContent":null,"Title":"Port System.Windows.Forms.Design.ListViewItemCollectionEditor","State":"open","Body":"**Problem description:**\r\n`ListViewItemCollectionEditor` from System.Windows.Forms.Design is missing\r\n\r\nRefer to https://github.com/dotnet/winforms/issues/1115#issuecomment-504798149\r\n","Url":"https://github.com/dotnet/winforms/issues/1276","RelatedDescription":"Open issue \"Port System.Windows.Forms.Design.ListViewItemCollectionEditor\" (#1276)"},{"Id":"464440080","IsPullRequest":false,"CreatedAt":"2019-07-05T02:53:26","Actor":"RussKie","Number":"1275","RawContent":null,"Title":"Port System.Windows.Forms.Design.ListViewGroupCollectionEditor","State":"open","Body":"**Problem description:**\r\n`ListViewGroupCollectionEditor` from System.Windows.Forms.Design is missing\r\n\r\nRefer to https://github.com/dotnet/winforms/issues/1115#issuecomment-504798149\r\n","Url":"https://github.com/dotnet/winforms/issues/1275","RelatedDescription":"Open issue \"Port System.Windows.Forms.Design.ListViewGroupCollectionEditor\" (#1275)"},{"Id":"464440002","IsPullRequest":false,"CreatedAt":"2019-07-05T02:53:02","Actor":"RussKie","Number":"1274","RawContent":null,"Title":"Port System.Windows.Forms.Design.IntegerCollectionEditor","State":"open","Body":"**Problem description:**\r\n`IntegerCollectionEditor` from System.Windows.Forms.Design is missing\r\n\r\nRefer to https://github.com/dotnet/winforms/issues/1115#issuecomment-504798149\r\n","Url":"https://github.com/dotnet/winforms/issues/1274","RelatedDescription":"Open issue \"Port System.Windows.Forms.Design.IntegerCollectionEditor\" (#1274)"},{"Id":"464439926","IsPullRequest":false,"CreatedAt":"2019-07-05T02:52:33","Actor":"RussKie","Number":"1273","RawContent":null,"Title":"Port System.Windows.Forms.Design.ImageCollectionEditor","State":"open","Body":"**Problem description:**\r\n`ImageCollectionEditor` from System.Windows.Forms.Design is missing\r\n\r\nRefer to https://github.com/dotnet/winforms/issues/1115#issuecomment-504798149\r\n","Url":"https://github.com/dotnet/winforms/issues/1273","RelatedDescription":"Open issue \"Port System.Windows.Forms.Design.ImageCollectionEditor\" (#1273)"},{"Id":"464439862","IsPullRequest":false,"CreatedAt":"2019-07-05T02:52:05","Actor":"RussKie","Number":"1272","RawContent":null,"Title":"Port System.Windows.Forms.Design.StringArrayEditor","State":"open","Body":"**Problem description:**\r\n`StringArrayEditor` from System.Windows.Forms.Design is missing\r\n\r\nRefer to https://github.com/dotnet/winforms/issues/1115#issuecomment-504798149\r\n","Url":"https://github.com/dotnet/winforms/issues/1272","RelatedDescription":"Open issue \"Port System.Windows.Forms.Design.StringArrayEditor\" (#1272)"},{"Id":"464439737","IsPullRequest":false,"CreatedAt":"2019-07-05T02:51:22","Actor":"RussKie","Number":"1271","RawContent":null,"Title":"Port System.Windows.Forms.Design.ListControlStringCollectionEditor","State":"open","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`)\r\n* Have you experienced this same bug with .NET Framework?: Yes/No\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n`ListControlStringCollectionEditor` from System.Windows.Forms.Design is missing\r\n\r\nRefer to https://github.com/dotnet/winforms/issues/1115#issuecomment-504798149\r\n","Url":"https://github.com/dotnet/winforms/issues/1271","RelatedDescription":"Open issue \"Port System.Windows.Forms.Design.ListControlStringCollectionEditor\" (#1271)"},{"Id":"464439657","IsPullRequest":false,"CreatedAt":"2019-07-05T02:50:54","Actor":"RussKie","Number":"1270","RawContent":null,"Title":"Port System.Windows.Forms.Design.StringCollectionEditor","State":"open","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`)\r\n* Have you experienced this same bug with .NET Framework?: Yes/No\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n`StringCollectionEditor` from System.Windows.Forms.Design is missing\r\n\r\nRefer to https://github.com/dotnet/winforms/issues/1115#issuecomment-504798149\r\n","Url":"https://github.com/dotnet/winforms/issues/1270","RelatedDescription":"Open issue \"Port System.Windows.Forms.Design.StringCollectionEditor\" (#1270)"},{"Id":"464439546","IsPullRequest":false,"CreatedAt":"2019-07-05T02:50:09","Actor":"RussKie","Number":"1269","RawContent":null,"Title":"Port System.Windows.Forms.Design.ColumnHeaderCollectionEditor","State":"open","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`)\r\n* Have you experienced this same bug with .NET Framework?: Yes/No\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n`ColumnHeaderCollectionEditor` from System.Windows.Forms.Design is missing\r\n\r\nRefer to https://github.com/dotnet/winforms/issues/1115#issuecomment-504798149","Url":"https://github.com/dotnet/winforms/issues/1269","RelatedDescription":"Open issue \"Port System.Windows.Forms.Design.ColumnHeaderCollectionEditor\" (#1269)"},{"Id":"463143796","IsPullRequest":false,"CreatedAt":"2019-07-05T01:45:17","Actor":"hughbe","Number":"1263","RawContent":null,"Title":"ComponentDesigner.DoDefaultAction throws InvalidCastException if GetCompatibleMethods contains a non-string value","State":"closed","Body":"Invalid values should be skipped (e.g. enumerate using `.OfType<string>()`)\r\n\r\n```cs\r\npublic static IEnumerable<object[]> DoDefaultAction_ValidProperty_TestData()\r\n{\r\n    foreach (string property in new string[] { nameof(DefaultEventComponent.StringProperty) })\r\n    {\r\n        yield return new object[] { property, new object[] { null, new object(), \"NoSuchStringValue\" }, 1, null };\r\n        yield return new object[] { property, new object[] { null, new object(), \"NoSuchStringValue\" }, 1, string.Empty };\r\n        yield return new object[] { property, new object[] { null, new object(), \"NoSuchStringValue\" }, 1, \"UniqueMethod\" };\r\n    }\r\n}\r\n\r\n[Theory]\r\n[MemberData(nameof(DoDefaultAction_ValidProperty_TestData))]\r\npublic void ComponentDesigner_DoDefaultAction_InvokeWithComponentWithHostValidProperty_Success(string property, ICollection compatibleMethods, int expectedSetCallCount, string uniqueMethodName)\r\n{\r\n    var designer = new ComponentDesigner();\r\n    var component1 = new DefaultEventComponent\r\n    {\r\n        StringProperty = \"StringValue\"\r\n    };\r\n    var component2 = new DefaultEventComponent\r\n    {\r\n        StringProperty = string.Empty\r\n    };\r\n    var component3 = new DefaultEventComponent\r\n    {\r\n        StringProperty = null\r\n    };\r\n    var mockEventBindingService = new Mock<IEventBindingService>(MockBehavior.Strict);\r\n    mockEventBindingService\r\n        .Setup(s => s.GetEventProperty(It.IsAny<EventDescriptor>()))\r\n        .Returns(TypeDescriptor.GetProperties(typeof(DefaultEventComponent))[property])\r\n        .Verifiable();\r\n    mockEventBindingService\r\n        .Setup(s => s.CreateUniqueMethodName(component3, It.IsAny<EventDescriptor>()))\r\n        .Returns(uniqueMethodName)\r\n        .Verifiable();\r\n    mockEventBindingService\r\n        .Setup(s => s.GetCompatibleMethods(It.IsAny<EventDescriptor>()))\r\n        .Returns(compatibleMethods)\r\n        .Verifiable();\r\n    var mockSelectionService = new Mock<ISelectionService>(MockBehavior.Strict);\r\n    mockSelectionService\r\n        .Setup(s => s.GetSelectedComponents())\r\n        .Returns(new object[] { component1, component2, component3 });\r\n    var mockDesignerHost = new Mock<IDesignerHost>(MockBehavior.Strict);\r\n    mockDesignerHost\r\n        .Setup(h => h.RootComponent)\r\n        .Returns<IComponent>(null);\r\n    mockDesignerHost\r\n        .Setup(h => h.CreateTransaction(It.IsAny<string>()))\r\n        .Returns<DesignerTransaction>(null)\r\n        .Verifiable();\r\n    var mockSite = new Mock<ISite>(MockBehavior.Strict);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IDesignerHost)))\r\n        .Returns(mockDesignerHost.Object);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IComponentChangeService)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IInheritanceService)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IDictionaryService)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IExtenderListService)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(ITypeDescriptorFilterService)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IEventBindingService)))\r\n        .Returns(mockEventBindingService.Object)\r\n        .Verifiable();\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(ISelectionService)))\r\n        .Returns(mockSelectionService.Object)\r\n        .Verifiable();\r\n    var rootComponent = new Component\r\n    {\r\n        Site = mockSite.Object\r\n    };\r\n    designer.Initialize(rootComponent);\r\n    component1.StringPropertySetCount = 0;\r\n    component2.StringPropertySetCount = 0;\r\n    component3.StringPropertySetCount = 0;\r\n\r\n    designer.DoDefaultAction();\r\n    mockSite.Verify(s => s.GetService(typeof(IEventBindingService)), Times.Once());\r\n    mockSite.Verify(s => s.GetService(typeof(ISelectionService)), Times.Once());\r\n    mockEventBindingService.Verify(s => s.GetEventProperty(It.IsAny<EventDescriptor>()), Times.Exactly(3));\r\n    mockDesignerHost.Verify(h => h.CreateTransaction(It.IsAny<string>()), Times.Exactly(3));\r\n    mockEventBindingService.Verify(s => s.CreateUniqueMethodName(component3, It.IsAny<EventDescriptor>()), Times.Once());\r\n    mockEventBindingService.Verify(s => s.GetCompatibleMethods(It.IsAny<EventDescriptor>()), Times.Exactly(2));\r\n    Assert.Equal(\"StringValue\", component1.StringProperty);\r\n    Assert.Equal(expectedSetCallCount, component1.StringPropertySetCount);\r\n    Assert.Empty(component2.StringProperty);\r\n    Assert.Equal(1, component2.StringPropertySetCount);\r\n    Assert.Equal(uniqueMethodName, component3.StringProperty);\r\n    Assert.Equal(1, component3.StringPropertySetCount);\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/1263","RelatedDescription":"Closed issue \"ComponentDesigner.DoDefaultAction throws InvalidCastException if GetCompatibleMethods contains a non-string value\" (#1263)"},{"Id":"463143303","IsPullRequest":false,"CreatedAt":"2019-07-05T01:45:17","Actor":"hughbe","Number":"1262","RawContent":null,"Title":"ComponentDesigner.DoDefaultAction throws NullReferenceException if GetCompatibleMethods returns null","State":"closed","Body":"Should be treated as if it were empty\r\n```cs\r\npublic static IEnumerable<object[]> DoDefaultAction_ValidProperty_TestData()\r\n{\r\n    foreach (string property in new string[] { nameof(DefaultEventComponent.StringProperty) })\r\n    {\r\n        yield return new object[] { property, null, 1, null };\r\n        yield return new object[] { property, null, 1, string.Empty };\r\n        yield return new object[] { property, null, 1, \"UniqueMethod\" };\r\n    }\r\n}\r\n\r\n[Theory]\r\n[MemberData(nameof(DoDefaultAction_ValidProperty_TestData))]\r\npublic void ComponentDesigner_DoDefaultAction_InvokeWithComponentWithHostValidProperty_Success(string property, ICollection compatibleMethods, int expectedSetCallCount, string uniqueMethodName)\r\n{\r\n    var designer = new ComponentDesigner();\r\n    var component1 = new DefaultEventComponent\r\n    {\r\n        StringProperty = \"StringValue\"\r\n    };\r\n    var component2 = new DefaultEventComponent\r\n    {\r\n        StringProperty = string.Empty\r\n    };\r\n    var component3 = new DefaultEventComponent\r\n    {\r\n        StringProperty = null\r\n    };\r\n    var mockEventBindingService = new Mock<IEventBindingService>(MockBehavior.Strict);\r\n    mockEventBindingService\r\n        .Setup(s => s.GetEventProperty(It.IsAny<EventDescriptor>()))\r\n        .Returns(TypeDescriptor.GetProperties(typeof(DefaultEventComponent))[property])\r\n        .Verifiable();\r\n    mockEventBindingService\r\n        .Setup(s => s.CreateUniqueMethodName(component3, It.IsAny<EventDescriptor>()))\r\n        .Returns(uniqueMethodName)\r\n        .Verifiable();\r\n    mockEventBindingService\r\n        .Setup(s => s.GetCompatibleMethods(It.IsAny<EventDescriptor>()))\r\n        .Returns(compatibleMethods)\r\n        .Verifiable();\r\n    var mockSelectionService = new Mock<ISelectionService>(MockBehavior.Strict);\r\n    mockSelectionService\r\n        .Setup(s => s.GetSelectedComponents())\r\n        .Returns(new object[] { component1, component2, component3 });\r\n    var mockDesignerHost = new Mock<IDesignerHost>(MockBehavior.Strict);\r\n    mockDesignerHost\r\n        .Setup(h => h.RootComponent)\r\n        .Returns<IComponent>(null);\r\n    mockDesignerHost\r\n        .Setup(h => h.CreateTransaction(It.IsAny<string>()))\r\n        .Returns<DesignerTransaction>(null)\r\n        .Verifiable();\r\n    var mockSite = new Mock<ISite>(MockBehavior.Strict);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IDesignerHost)))\r\n        .Returns(mockDesignerHost.Object);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IComponentChangeService)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IInheritanceService)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IDictionaryService)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IExtenderListService)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(ITypeDescriptorFilterService)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IEventBindingService)))\r\n        .Returns(mockEventBindingService.Object)\r\n        .Verifiable();\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(ISelectionService)))\r\n        .Returns(mockSelectionService.Object)\r\n        .Verifiable();\r\n    var rootComponent = new Component\r\n    {\r\n        Site = mockSite.Object\r\n    };\r\n    designer.Initialize(rootComponent);\r\n    component1.StringPropertySetCount = 0;\r\n    component2.StringPropertySetCount = 0;\r\n    component3.StringPropertySetCount = 0;\r\n\r\n    designer.DoDefaultAction();\r\n    mockSite.Verify(s => s.GetService(typeof(IEventBindingService)), Times.Once());\r\n    mockSite.Verify(s => s.GetService(typeof(ISelectionService)), Times.Once());\r\n    mockEventBindingService.Verify(s => s.GetEventProperty(It.IsAny<EventDescriptor>()), Times.Exactly(3));\r\n    mockDesignerHost.Verify(h => h.CreateTransaction(It.IsAny<string>()), Times.Exactly(3));\r\n    mockEventBindingService.Verify(s => s.CreateUniqueMethodName(component3, It.IsAny<EventDescriptor>()), Times.Once());\r\n    mockEventBindingService.Verify(s => s.GetCompatibleMethods(It.IsAny<EventDescriptor>()), Times.Exactly(2));\r\n    Assert.Equal(\"StringValue\", component1.StringProperty);\r\n    Assert.Equal(expectedSetCallCount, component1.StringPropertySetCount);\r\n    Assert.Empty(component2.StringProperty);\r\n    Assert.Equal(1, component2.StringPropertySetCount);\r\n    Assert.Equal(uniqueMethodName, component3.StringProperty);\r\n    Assert.Equal(1, component3.StringPropertySetCount);\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/1262","RelatedDescription":"Closed issue \"ComponentDesigner.DoDefaultAction throws NullReferenceException if GetCompatibleMethods returns null\" (#1262)"},{"Id":"463142654","IsPullRequest":false,"CreatedAt":"2019-07-05T01:45:17","Actor":"hughbe","Number":"1261","RawContent":null,"Title":"ComponentDesigner.DoDefaultAction throws InvalidCastException if the default event property is not a string","State":"closed","Body":"Should be skipped in the same way as read-only properties\r\n```cs\r\npublic static IEnumerable<object[]> DoDefaultAction_InvalidProperty_TestData()\r\n{\r\n    yield return new object[] { null };\r\n    yield return new object[] { TypeDescriptor.GetProperties(typeof(DefaultEventComponent))[nameof(DefaultEventComponent.ReadOnlyProperty)] };\r\n    yield return new object[] { TypeDescriptor.GetProperties(typeof(DefaultEventComponent))[nameof(DefaultEventComponent.IntProperty)] };\r\n}\r\n\r\n[Theory]\r\n[MemberData(nameof(DoDefaultAction_InvalidProperty_TestData))]\r\npublic void ComponentDesigner_DoDefaultAction_InvokeWithComponentWithHostInvalidProperty_Success(PropertyDescriptor property)\r\n{\r\n    var designer = new ComponentDesigner();\r\n    var component = new DefaultEventComponent\r\n    {\r\n        StringProperty = \"StringValue\"\r\n    };\r\n    var mockEventBindingService = new Mock<IEventBindingService>(MockBehavior.Strict);\r\n    mockEventBindingService\r\n        .Setup(s => s.GetEventProperty(It.IsAny<EventDescriptor>()))\r\n        .Returns(property)\r\n        .Verifiable();\r\n    var mockSelectionService = new Mock<ISelectionService>(MockBehavior.Strict);\r\n    mockSelectionService\r\n        .Setup(s => s.GetSelectedComponents())\r\n        .Returns(new object[] { component });\r\n    var mockDesignerHost = new Mock<IDesignerHost>(MockBehavior.Strict);\r\n    mockDesignerHost\r\n        .Setup(h => h.RootComponent)\r\n        .Returns<IComponent>(null);\r\n    mockDesignerHost\r\n        .Setup(h => h.CreateTransaction(It.IsAny<string>()))\r\n        .Returns<DesignerTransaction>(null)\r\n        .Verifiable();\r\n    var mockSite = new Mock<ISite>(MockBehavior.Strict);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IDesignerHost)))\r\n        .Returns(mockDesignerHost.Object);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IComponentChangeService)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IInheritanceService)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IDictionaryService)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IExtenderListService)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(ITypeDescriptorFilterService)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IEventBindingService)))\r\n        .Returns(mockEventBindingService.Object)\r\n        .Verifiable();\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(ISelectionService)))\r\n        .Returns(mockSelectionService.Object)\r\n        .Verifiable();\r\n    var rootComponent = new Component\r\n    {\r\n        Site = mockSite.Object\r\n    };\r\n    designer.Initialize(rootComponent);\r\n    component.StringPropertySetCount = 0;\r\n\r\n    designer.DoDefaultAction();\r\n    mockSite.Verify(s => s.GetService(typeof(IEventBindingService)), Times.Once());\r\n    mockSite.Verify(s => s.GetService(typeof(ISelectionService)), Times.Once());\r\n    mockSite.Verify(s => s.GetService(typeof(IDesignerHost)), Times.Exactly(2));\r\n    mockSelectionService.Verify(s => s.GetSelectedComponents(), Times.Once());\r\n    mockEventBindingService.Verify(s => s.GetEventProperty(It.IsAny<EventDescriptor>()), Times.Once());\r\n    Assert.Equal(\"StringValue\", component.StringProperty);\r\n    Assert.Equal(0, component.StringPropertySetCount);\r\n\r\n    // Call again.\r\n    designer.DoDefaultAction();\r\n    mockSite.Verify(s => s.GetService(typeof(IEventBindingService)), Times.Exactly(2));\r\n    mockSite.Verify(s => s.GetService(typeof(ISelectionService)), Times.Exactly(2));\r\n    mockSite.Verify(s => s.GetService(typeof(IDesignerHost)), Times.Exactly(3));\r\n    mockSelectionService.Verify(s => s.GetSelectedComponents(), Times.Exactly(2));\r\n    mockEventBindingService.Verify(s => s.GetEventProperty(It.IsAny<EventDescriptor>()), Times.Exactly(2));\r\n    Assert.Equal(\"StringValue\", component.StringProperty);\r\n    Assert.Equal(0, component.StringPropertySetCount);\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/1261","RelatedDescription":"Closed issue \"ComponentDesigner.DoDefaultAction throws InvalidCastException if the default event property is not a string\" (#1261)"},{"Id":"463141954","IsPullRequest":false,"CreatedAt":"2019-07-05T01:45:17","Actor":"hughbe","Number":"1260","RawContent":null,"Title":"ComponentDesigner.DoDefaultAction throws NRE if GetSelectedComponents returns null","State":"closed","Body":"Should be treated as if it were empty\r\n\r\n```cs\r\npublic static IEnumerable<object[]> DoDefaultAction_InvalidSelectedComponents_TestData()\r\n{\r\n    yield return new object[] { null };\r\n    yield return new object[] { new object[0] };\r\n    yield return new object[] { new object[] { null, new object() } };\r\n}\r\n\r\n[Theory]\r\n[MemberData(nameof(DoDefaultAction_InvalidSelectedComponents_TestData))]\r\npublic void ComponentDesigner_DoDefaultAction_InvokeWithComponentWithHostInvalidSelectedComponents_Success(ICollection selectedComponents)\r\n{\r\n    var designer = new ComponentDesigner();\r\n    var mockEventBindingService = new Mock<IEventBindingService>(MockBehavior.Strict);\r\n    var mockSelectionService = new Mock<ISelectionService>(MockBehavior.Strict);\r\n    mockSelectionService\r\n        .Setup(s => s.GetSelectedComponents())\r\n        .Returns(selectedComponents);\r\n    var mockDesignerHost = new Mock<IDesignerHost>(MockBehavior.Strict);\r\n    mockDesignerHost\r\n        .Setup(h => h.RootComponent)\r\n        .Returns<IComponent>(null);\r\n    var mockSite = new Mock<ISite>(MockBehavior.Strict);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IDesignerHost)))\r\n        .Returns(mockDesignerHost.Object);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IComponentChangeService)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IInheritanceService)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IDictionaryService)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IExtenderListService)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(ITypeDescriptorFilterService)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IEventBindingService)))\r\n        .Returns(mockEventBindingService.Object)\r\n        .Verifiable();\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(ISelectionService)))\r\n        .Returns(mockSelectionService.Object)\r\n        .Verifiable();\r\n    var rootComponent = new Component\r\n    {\r\n        Site = mockSite.Object\r\n    };\r\n    designer.Initialize(rootComponent);\r\n\r\n    designer.DoDefaultAction();\r\n    mockSite.Verify(s => s.GetService(typeof(IEventBindingService)), Times.Once());\r\n    mockSite.Verify(s => s.GetService(typeof(ISelectionService)), Times.Once());\r\n    mockSite.Verify(s => s.GetService(typeof(IDesignerHost)), Times.Exactly(2));\r\n    mockSelectionService.Verify(s => s.GetSelectedComponents(), Times.Once());\r\n\r\n    // Call again.\r\n    designer.DoDefaultAction();\r\n    mockSite.Verify(s => s.GetService(typeof(IEventBindingService)), Times.Exactly(2));\r\n    mockSite.Verify(s => s.GetService(typeof(ISelectionService)), Times.Exactly(2));\r\n    mockSite.Verify(s => s.GetService(typeof(IDesignerHost)), Times.Exactly(3));\r\n    mockSelectionService.Verify(s => s.GetSelectedComponents(), Times.Exactly(2));\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/1260","RelatedDescription":"Closed issue \"ComponentDesigner.DoDefaultAction throws NRE if GetSelectedComponents returns null\" (#1260)"},{"Id":"463140112","IsPullRequest":false,"CreatedAt":"2019-07-05T01:45:17","Actor":"hughbe","Number":"1259","RawContent":null,"Title":"ComponentDesigner.Children throws NRE if AssociatedComponents returns null","State":"closed","Body":"Should be treated as if it were empty\r\n\r\n```cs\r\npublic static IEnumerable<object[]> Children_GetInvalidService_TestData()\r\n{\r\n    foreach (ICollection associatedComponents in new object[] { null, new object[0], new object[] { new Component() }})\r\n    {\r\n        yield return new object[] { associatedComponents, null };\r\n        yield return new object[] { associatedComponents, new object() };\r\n    }\r\n}\r\n\r\n[Theory]\r\n[MemberData(nameof(Children_GetInvalidService_TestData))]\r\npublic void ComponentDesigner_Children_GetWithInvalidDesignerHost_ReturnsEmpty(ICollection associatedComponents, object host)\r\n{\r\n    var designer = new CustomAssociatedComponentsComponentDesigner(associatedComponents);\r\n    ITreeDesigner treeDesigner = designer;\r\n    var mockSite = new Mock<ISite>(MockBehavior.Strict);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IDesignerHost)))\r\n        .Returns(host);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IComponentChangeService)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IInheritanceService)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IDictionaryService)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(IExtenderListService)))\r\n        .Returns(null);\r\n    mockSite\r\n        .Setup(s => s.GetService(typeof(ITypeDescriptorFilterService)))\r\n        .Returns(null);\r\n    var component = new Component\r\n    {\r\n        Site = mockSite.Object\r\n    };\r\n    designer.Initialize(component);\r\n    Assert.Empty(treeDesigner.Children);\r\n}\r\n\r\nprivate class CustomAssociatedComponentsComponentDesigner : ComponentDesigner\r\n{\r\n    private readonly ICollection _associatedComponents;\r\n\r\n    public CustomAssociatedComponentsComponentDesigner(ICollection associatedComponents)\r\n    {\r\n        _associatedComponents = associatedComponents;\r\n    }\r\n\r\n    public override ICollection AssociatedComponents => _associatedComponents;\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/1259","RelatedDescription":"Closed issue \"ComponentDesigner.Children throws NRE if AssociatedComponents returns null\" (#1259)"},{"Id":"463133686","IsPullRequest":true,"CreatedAt":"2019-07-05T01:43:58","Actor":"hughbe","Number":"1256","RawContent":null,"Title":"Improve editor tests","State":"closed","Body":"Extracted from #1215","Url":"https://github.com/dotnet/winforms/pull/1256","RelatedDescription":"Closed or merged PR \"Improve editor tests\" (#1256)"},{"Id":"464212397","IsPullRequest":false,"CreatedAt":"2019-07-04T11:19:55","Actor":"weltkante","Number":"1268","RawContent":null,"Title":"Clipboard.ContainsImage inconsistent with Clipboard.GetImage","State":"open","Body":"In #493 it was decided that removing metafile support from `Clipboard.GetImage` is by design. However `Clipboard.SetImage` and `Clipboard.ContainsImage` were never adjusted and still support metafiles, this leads to an inconsistent API.\r\n\r\n```C#\r\nClipboard.SetImage(new Metafile(\"example.emf\")); // copies the metafile to the clipboard\r\nClipboard.ContainsImage(); // returns true\r\nClipboard.GetImage(); // returns null by design, issue #493\r\n```\r\n\r\n* `GetImage` returning null (instead of throwing an exception) is correct, since all clipboard APIs return null if there is no compatible data available. Since #493 removes compatibility for reading metafiles this is expected behavior.\r\n* `ContainsImage` returning `true` if a metafile is present is a bug, it must return `false` because `GetImage` will not be able to read the metafile.\r\n* `SetImage` still supports metafiles so we now have a write-only API which is arguably not a bug, but it may be confusing why you can write metafiles but not read them back. If you want to drop support for metafiles from SetImage as well then it should throw an exception.\r\n\r\nSide note: I didn't test it explicitely but I assume the DataObject APIs behave the same way as the Clipboard APIs and need the same fix.","Url":"https://github.com/dotnet/winforms/issues/1268","RelatedDescription":"Open issue \"Clipboard.ContainsImage inconsistent with Clipboard.GetImage\" (#1268)"},{"Id":"463362654","IsPullRequest":true,"CreatedAt":"2019-07-03T02:26:34","Actor":"hughbe","Number":"1265","RawContent":null,"Title":"Add ApplicationContext tests and cleanup code","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/1265","RelatedDescription":"Closed or merged PR \"Add ApplicationContext tests and cleanup code\" (#1265)"},{"Id":"463186221","IsPullRequest":true,"CreatedAt":"2019-07-03T01:31:33","Actor":"v-zbsail","Number":"1264","RawContent":null,"Title":"LOC CHECKIN | dotnet/winforms master | 20190702","State":"closed","Body":"Fixes #1076 ","Url":"https://github.com/dotnet/winforms/pull/1264","RelatedDescription":"Closed or merged PR \"LOC CHECKIN | dotnet/winforms master | 20190702\" (#1264)"},{"Id":"463430639","IsPullRequest":true,"CreatedAt":"2019-07-02T20:53:10","Actor":"dreddy-work","Number":"1267","RawContent":null,"Title":"Removing instances of \"Framework\" and Cleaning unised methods","State":"open","Body":"Cleaning DpiHelper class methods that were not used anymore. Removing the \"Framework\" instances. Cleaning comments and updating resx templates.\r\n\r\nFixes #485 ","Url":"https://github.com/dotnet/winforms/pull/1267","RelatedDescription":"Open PR \"Removing instances of \"Framework\" and Cleaning unised methods\" (#1267)"},{"Id":"463380066","IsPullRequest":true,"CreatedAt":"2019-07-02T19:02:34","Actor":"wtgodbe","Number":"1266","RawContent":null,"Title":"Fix COM interop ELEMDESC (#1254)","State":"closed","Body":"ELEMDESC doesn't contain a pointer. This fixes a regression introduced in #818.\r\n\r\nFixes #896\r\n\r\nHas been approved for preview7. CC @JeremyKuhne @danmosemsft \r\n\r\nCherry-pick of https://github.com/dotnet/winforms/pull/1254","Url":"https://github.com/dotnet/winforms/pull/1266","RelatedDescription":"Closed or merged PR \"Fix COM interop ELEMDESC (#1254)\" (#1266)"},{"Id":"463136348","IsPullRequest":false,"CreatedAt":"2019-07-02T10:00:03","Actor":"hughbe","Number":"1258","RawContent":null,"Title":"DesignSurface.View throws NRE if the root component designer has null SupportedTechnologies","State":"open","Body":"Should be treated the same as if the `SupportedTechnologies` array was empty\r\n\r\n```cs\r\n[Theory]\r\n[InlineData(typeof(NullSupportedTechnologiesRootDesignerComponent))]\r\n[InlineData(typeof(EmptySupportedTechnologiesRootDesignerComponent))]\r\npublic void DesignSurface_View_GetWithInvalidSupportedTechnologies_ThrowsNotSupportedException(Type rootComponentType)\r\n{\r\n    var surface = new SubDesignSurface();\r\n    surface.BeginLoad(rootComponentType);\r\n    Assert.Throws<NotSupportedException>(() => surface.View);\r\n}\r\n\r\nprivate class NullSupportedTechnologiesRootComponentDesigner : ComponentDesigner, IRootDesigner\r\n{\r\n    public ViewTechnology[] SupportedTechnologies => null;\r\n    public object GetView(ViewTechnology technology) => throw new NotImplementedException();\r\n}\r\n\r\n[Designer(typeof(NullSupportedTechnologiesRootComponentDesigner), typeof(IRootDesigner))]\r\nprivate class NullSupportedTechnologiesRootDesignerComponent : Component\r\n{\r\n}\r\n\r\nprivate class SubDesignSurface : DesignSurface\r\n{\r\n    public SubDesignSurface() : base()\r\n    {\r\n    }\r\n\r\n    public IDesignerLoaderHost2 Host => Assert.IsAssignableFrom<IDesignerLoaderHost2>(ComponentContainer);\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/1258","RelatedDescription":"Open issue \"DesignSurface.View throws NRE if the root component designer has null SupportedTechnologies\" (#1258)"},{"Id":"463135603","IsPullRequest":false,"CreatedAt":"2019-07-02T09:58:29","Actor":"hughbe","Number":"1257","RawContent":null,"Title":"DesignSurface.View throws NRE if `LoadErrors` contains a null element","State":"open","Body":"E..g\r\n```cs\r\npublic static IEnumerable<object[]> View_GetLoadError_TestData()\r\n{\r\n    yield return new object[] { new object[0] };\r\n    yield return new object[] { new object[] { new Exception() } };\r\n    yield return new object[] { new object[] { \"Error\" } };\r\n    yield return new object[] { new object[] { null } };\r\n}\r\n\r\n[Theory]\r\n[MemberData(nameof(View_GetLoadError_TestData))]\r\npublic void DesignSurface_View_GetWithLoadErrors_ThrowsInvalidOperationException(object[] errorCollection)\r\n{\r\n    var surface = new SubDesignSurface();\r\n    IDesignerLoaderHost2 host = surface.Host;\r\n    var mockLoader = new Mock<DesignerLoader>(MockBehavior.Strict);\r\n    mockLoader\r\n        .Setup(l => l.BeginLoad(host));\r\n    surface.BeginLoad(mockLoader.Object);\r\n    host.EndLoad(\"BaseClassName\", false, errorCollection);\r\n    Assert.Throws<InvalidOperationException>(() => surface.View);\r\n}\r\n\r\nprivate class SubDesignSurface : DesignSurface\r\n{\r\n    public SubDesignSurface() : base()\r\n    {\r\n    }\r\n\r\n    public IDesignerLoaderHost2 Host => Assert.IsAssignableFrom<IDesignerLoaderHost2>(ComponentContainer);\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/1257","RelatedDescription":"Open issue \"DesignSurface.View throws NRE if `LoadErrors` contains a null element\" (#1257)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-07-06T05:30:52.2244705Z","RunDurationInMilliseconds":952}