{"Data":{"Blog":{"FeedItems":[{"Title":"F# language and tools update for Visual Studio 2017 version 15.6","PublishedOn":"2018-03-06T18:28:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With the release of Visual Studio 2017 version 15.6, we’re excited to share updates to the F# language and core library, F# tooling in Visual Studio, and infrastructure updates that concern OSS...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/06/f-language-and-tools-update-for-visual-studio-2017-version-15-6/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.1 Preview 1","PublishedOn":"2018-02-27T18:11:29+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today we are releasing the first preview of EF Core 2.1, alongside .NET Core 2.1 Preview 1 and ASP.NET Core 2.1 Preview 1. The new bits are available in NuGet as part of the individual packages, and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/announcing-entity-framework-core-2-1-preview-1/","RawContent":null},{"Title":"Announcing .NET Core 2.1 Preview 1","PublishedOn":"2018-02-27T18:08:23+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.1 Preview 1. It is the first public release of .NET Core 2.1. We have great improvements that we want to share and that we would love to get your feedback on,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/announcing-net-core-2-1-preview-1/","RawContent":null},{"Title":"Calling All Desktop Developers: How do you interact with data?","PublishedOn":"2018-02-27T17:00:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Connecting to databases and services is an important part of desktop application development for many of our customers. Visual Studio provides a variety of tools and technologies that can help you...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/calling-all-desktop-developers-how-do-you-interact-with-data/","RawContent":null},{"Title":"Azure Blob Storage as a Network Drive","PublishedOn":"2018-02-26T16:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Many applications make use of a network drive to backup and store files. When I was in university I found myself constantly coding for fun, and one example took the form of a network share for my...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/26/azure-blob-storage-as-a-network-drive/","RawContent":null},{"Title":".NET Framework February 2018 Security and Quality Rollup","PublishedOn":"2018-02-14T04:27:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the February 2018 Security and Quality Rollup. Security No new security fixes. See .NET Framework January 2018 Security and Quality Rollup for the latest security updates....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/","RawContent":null},{"Title":"Machine Learning in .NET – Help us build the right experience!","PublishedOn":"2018-02-13T17:17:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the past few years, Machine Learning (ML) and Artificial Intelligence (AI) have paved the road for building smarter applications through advancements in speech recognition, computer vision,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/machine-learning-in-net-help-us-build-the-right-experience/","RawContent":null},{"Title":"Announcing .NET Framework 4.7.2 Early Access build 3052!","PublishedOn":"2018-02-05T21:55:13+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Today, we are happy to share the .NET Framework 4.7.2 Early Access build 3052 for your feedback. .NET Framework 4.7.2 is the next version of the .NET Framework. It is currently feature-complete and in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/05/announcing-net-framework-4-7-2-early-access-build-3052/","RawContent":null},{"Title":"Entity Framework Core 2.1 Roadmap","PublishedOn":"2018-02-02T18:39:25+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As mentioned in the announcement of the .NET Core 2.1 roadmap earlier today, at this point we know the overall shape of our next release and we have decided on a general schedule for it. As we...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/02/entity-framework-core-2-1-roadmap/","RawContent":null},{"Title":".NET Core 2.1 Roadmap","PublishedOn":"2018-02-02T18:22:30+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"The .NET team has been working on the .NET Core 2.1 release for the last several months on GitHub. We know that many of you have been using .NET Core 2.0 since it shipped in August of last year and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/02/net-core-2-1-roadmap/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7192252734","Type":"PullRequestEvent","CreatedAt":"2018-02-03T01:30:47","Actor":"karann-msft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Opened pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7187459205","Type":"PullRequestEvent","CreatedAt":"2018-02-02T05:26:03","Actor":"mairaw","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Opened pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""},{"Id":"7102763357","Type":"PullRequestEvent","CreatedAt":"2018-01-16T00:17:04","Actor":"galatrash-at-dnn","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Opened pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7097053889","Type":"PullRequestEvent","CreatedAt":"2018-01-14T15:15:00","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Opened pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7065382954","Type":"PullRequestEvent","CreatedAt":"2018-01-06T19:21:47","Actor":"ctaggart","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Opened pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7044237283","Type":"PullRequestEvent","CreatedAt":"2017-12-31T20:25:44","Actor":"onovotny","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Opened pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7301596554","Type":"IssuesEvent","CreatedAt":"2018-02-27T06:10:33","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/61","RelatedDescription":"Opened issue \"New offline books released for Visual Studio 2017\" (#61) at dotnet/announcements","RelatedBody":"# New offline books released for Visual Studio 2017\r\n\r\nEarlier this month, we released an update to Offline Books for the Visual Studio 2017 Help Viewer.\r\n\r\nThis release includes new .NET books, including .NET Core Guide, .NET Guide, .NET Framework Guide and the .NET API Reference. It also includes the latest content for Visual Studio 2017 version 15.5, the latest updates to Visual Basic, C# (7.1 and 7.2), F#, ASP.NET Core, NuGet, SQL Server, and the Universal Windows Platform.\r\n\r\nThe .NET Guide, .NET Framework Guide and .NET API Reference books together are a replacement for the .NET Framework 4.6 and 4.5 book, which can be removed. Just be aware that the new .NET API Reference book currently displays the API syntax block for C# only, but examples are shown in other languages, just like the experience you currently have on docs.microsoft.com.If you need to see the API syntax for Visual Basic, C++/CLI or F#, then you should keep the old book until the new reference book is updated again in a few weeks. Once you remove the .NET Framework 4.6 and 4.5 book, you cannot reinstall it.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\n- https://github.com/dotnet/docs/issues/4502\r\n\r\n## Add new content\r\n\r\nYou will see these new books when you have Help Viewer installed and choose **Help** > **Add and Remove Content** from the Visual Studio 2017 main menu. If you don't see this menu item, then [open the Visual Studio Installer](https://docs.microsoft.com/visualstudio/install/modify-visual-studio), click the **More** dropdown and choose **Modify**. When the component list appears, choose **Individual Components** at the top, then check **Help Viewer**.\r\n\r\n![help_viewer_component](https://user-images.githubusercontent.com/12971179/36713111-c9d49a7c-1b40-11e8-918a-e7e3619669a2.png)\r\n\r\n## Help Viewer Installation\r\n\r\nTo start the installation, select the **Modify** button in the lower right corner of the Installer window.\r\n\r\nTo update individual books whose status is \"Updates available\", remove the book and then click **Add** to get the new version. To update all your books at once, select the link in the lower right corner of the **Add and Remove Content** window:\r\n\r\n![offline-books](https://user-images.githubusercontent.com/12971179/36713028-75b944f6-1b40-11e8-91c4-4830355f815e.png)"},{"Id":"7300537622","Type":"IssuesEvent","CreatedAt":"2018-02-27T00:12:10","Actor":"eerhardt","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/60","RelatedDescription":"Opened issue \"System.Runtime.Intrinsics in .NET Core 2.1\" (#60) at dotnet/announcements","RelatedBody":"# System.Runtime.Intrinsics in .NET Core 2.1\r\n\r\n.NET Core 2.1 has been adding platform intrinsic APIs to support directly calling processor specific instructions, such as Intel’s x86 SIMD instructions.  See the [initial platform intrinsics design](https://github.com/dotnet/designs/blob/master/accepted/platform-intrinsics.md) for more information.\r\n\r\nWe have decided that it makes the most sense for this intrinsics feature to ship in a “preview” status in the .NET Core 2.1 RTM timeframe.  This means that the runtime support we are implementing will be included, but the assembly exposing the intrinsics will only be available to projects via explicit reference to a “preview-only” package.  These APIs won’t be included in the official .NET Core 2.1 packages.\r\n\r\nGiven our limited time and resources, recent changes in the approach we take to expose the intrinsics, and API changes prompted by design feedback from the community, we don’t believe there is enough time to settle these APIs for 2.1. We plan to follow the pattern of other recent features like Span<T> and Memory<T> that first shipped in preview before formally joining the supported API surface.  Not only would we expect the next version of .NET Core to support more intrinsics than could be supported in 2.1, but we expect to have real usage examples in CoreFX and higher level components as well.  These real world examples, as well as feedback from customers who opt in to the preview, should give us the confidence we need to officially support the APIs going forward.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\nhttps://github.com/dotnet/corefx/issues/27486\r\n\r\n## Details\r\n\r\nIn the coming days, we plan on removing System.Runtime.Intrinsics.dll from the Microsoft.NETCore.App package.  This means any libraries/applications that are using these APIs will no longer compile by default, and will not run on new builds of .NET Core 2.1.\r\n\r\nAt the same time, we will start producing a new System.Runtime.Intrinsics.Experimental NuGet package.  In order to continue using these APIs on .NET Core 2.1, a project will need to add a reference to this new package.\r\n\r\nAs its name implies, this package is experimental and should only be used for preview purposes.  It isn’t expected to be used in production scenarios.  Future version of .NET Core (after 2.1) will be allowed to break this package. This enables us respond to future feedback that requires the APIs to be modified.\r\n\r\nIn the future, when we are confident we have the intrinsic APIs right, we will stop producing the System.Runtime.Intrinsics.Experimental package. The platform intrinsics APIs will then be added back to Microsoft.NETCore.App and will be officially supported."},{"Id":"7273056222","Type":"IssuesEvent","CreatedAt":"2018-02-21T02:28:03","Actor":"KathleenDollard","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/57","RelatedDescription":"Opened issue \"Manually Uninstall .NET Core SDK 2.2.0-Preview Nightly Builds\" (#57) at dotnet/announcements","RelatedBody":"# Manually Uninstall .NET Core SDK 2.2.0-Preview Nightly Builds\r\n\r\n[A change in the version number strategy for .NET Core SDK](https://github.com/dotnet/designs/pull/29) resulted in some nightly builds having a higher version number. This higher version number will block the installation of the correct .NET Core SDK.\r\n\r\nIf you have installed nightly builds of the .NET Core SDK that start with version number that begin with `2.2.0-preview1`, you must manually uninstall these preview builds before later versions of the SDK with version numbers like 2.1.xxx will be available. This may have occurred by installing nightly builds of the .NET Core SDK or nightly builds of Visual Studio 15.5 Preview. \r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/cli #8652](https://github.com/dotnet/cli/issues/8652)\r\n\r\n## Details\r\n\r\n[We changed the version number strategy for .NET Core SDK](https://github.com/dotnet/designs/pull/29) as development was ongoing. Because of this, version numbers on the old scheme appeared in nightly builds. Unfortunately, these numbers are higher than the version numbers in the new scheme. All of the newer SDKs for .NET Core 2.1 will be ignored due to this higher version number; this includes newer nightly builds, public previews and eventual releases.\r\n\r\nThese older version numbers are similar to the following, with the last several different values in the last six digits:\r\n\r\n```\r\n2.2.0-preview1-008000\r\n```\r\n\r\nSince the newer versions are in the form:\r\n\r\n```\r\n2.1.300-preview1-008000\r\n```\r\n\r\n## Call to Action\r\n\r\nIf you have installed nightly builds. Please uninstall any .NET SDK versions that start with 2.2.0-preview1."},{"Id":"7253280422","Type":"IssuesEvent","CreatedAt":"2018-02-16T04:14:06","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/56","RelatedDescription":"Closed issue \"Can you help with this issue?\" (#56) at dotnet/announcements","RelatedBody":"https://stackoverflow.com/questions/48819198/weird-behavior-of-httpclienthandler-sslprotocol-property-in-net-framework-4-7-1\r\n"},{"Id":"7253090788","Type":"IssuesEvent","CreatedAt":"2018-02-16T02:41:24","Actor":"rudeGit","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/56","RelatedDescription":"Opened issue \"Can you help with this issue?\" (#56) at dotnet/announcements","RelatedBody":"https://stackoverflow.com/questions/48819198/weird-behavior-of-httpclienthandler-sslprotocol-property-in-net-framework-4-7-1\r\n"},{"Id":"7227221771","Type":"IssuesEvent","CreatedAt":"2018-02-10T18:30:42","Actor":"kasper3","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/55","RelatedDescription":"Closed issue \"Needs clarity on open / close source nature of product being announced\" (#55) at dotnet/announcements","RelatedBody":"On first page of this repository, it reads:\r\n\r\n> Subscribe to this repo to be notified of Announcements and changes in .NET Core.\r\n\r\nDoes that mean all announcements are related to .NET Core and all products being announced are are open sourced?\r\n\r\nIf there are announcements about the propitiatory or closed-source products, the products whose sources <b>in full*</b> are not accessible by public, should be marked as such either using a label (https://github.com/dotnet/announcements/labels), or clearly stated in text.\r\n\r\n#### * Source code including the build script that generates the package end user downloads from nuget or myget feeds\r\n\r\nOne example is https://github.com/dotnet/announcements/issues/30, where it is presented to user as if the product ILLink is in open, but the package https://dotnet.myget.org/feed/dotnet-core/package/nuget/Illink.Tasks is produced by script which are nowhere to b found in open. Read more at https://github.com/dotnet/core/issues/915#issuecomment-364645429"},{"Id":"7226630380","Type":"IssuesEvent","CreatedAt":"2018-02-10T11:59:43","Actor":"kasper3","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/55","RelatedDescription":"Opened issue \"Needs clarity on open / close source nature of product being announced\" (#55) at dotnet/announcements","RelatedBody":"On first page of this repository, it reads:\r\n\r\n> Subscribe to this repo to be notified of Announcements and changes in .NET Core.\r\n\r\nDoes that mean all announcements are related to .NET Core and all products being announced are are open sourced?\r\n\r\nIf there are announcements about the propitiatory or closed-source products, the products whose sources <b>in full*</b> are not accessible by public, should be marked as such either using a label (https://github.com/dotnet/announcements/labels), or clearly stated in text.\r\n\r\n#### * Source code including the build script that generates the package end user downloads from nuget or myget feeds\r\n\r\nOne example is https://github.com/dotnet/announcements/issues/30, where it is presented to user as if the product ILLink is in open, but the package https://dotnet.myget.org/feed/dotnet-core/package/nuget/Illink.Tasks is produced by script which are nowhere to b found in open. Read more at https://github.com/dotnet/core/issues/915#issuecomment-364645429"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7341615276","Type":"PullRequestEvent","CreatedAt":"2018-03-07T03:03:37","Actor":"jashook","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16662","RelatedDescription":"Merged pull request \"Remove vs2015 build dependencies\" (#16662) at dotnet/coreclr","RelatedBody":"This affects the official buildpipeline.\r\n\r\n/cc @RussKeldorph"},{"Id":"7341612756","Type":"PullRequestEvent","CreatedAt":"2018-03-07T03:02:45","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16788","RelatedDescription":"Merged pull request \"Add debugger usage note\" (#16788) at dotnet/coreclr","RelatedBody":"@stephentoub @gregg-miskelly @cshung "},{"Id":"7341518680","Type":"PullRequestEvent","CreatedAt":"2018-03-07T02:30:27","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16795","RelatedDescription":"Opened pull request \"Archive coreclrtests.*.txt files\" (#16795) at dotnet/coreclr","RelatedBody":""},{"Id":"7341494177","Type":"PullRequestEvent","CreatedAt":"2018-03-07T02:22:35","Actor":"echesakovMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16794","RelatedDescription":"Opened pull request \"Disable FEATURE_NI_BIND_FALLBACK by default for all platforms\" (#16794) at dotnet/coreclr","RelatedBody":"Disable `FEATURE_NI_BIND_FALLBACK` in clrfeatures.cmake by default for all platforms as discussed in #16787\r\n\r\n@jkotas PTAL\r\n"},{"Id":"7341493390","Type":"PullRequestEvent","CreatedAt":"2018-03-07T02:22:19","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16793","RelatedDescription":"Merged pull request \"Create text-based pass/fail/skip files\" (#16793) at dotnet/coreclr","RelatedBody":"These files can be used to pass back to runtest.sh using the\r\n`--playlist` option."},{"Id":"7341489232","Type":"PullRequestEvent","CreatedAt":"2018-03-07T02:20:57","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16793","RelatedDescription":"Opened pull request \"Create text-based pass/fail/skip files\" (#16793) at dotnet/coreclr","RelatedBody":"These files can be used to pass back to runtest.sh using the\r\n`--playlist` option."},{"Id":"7341476379","Type":"PullRequestEvent","CreatedAt":"2018-03-07T02:16:38","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16792","RelatedDescription":"Merged pull request \"Add configuration to zip files, for clarity\" (#16792) at dotnet/coreclr","RelatedBody":""},{"Id":"7341475780","Type":"PullRequestEvent","CreatedAt":"2018-03-07T02:16:25","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16792","RelatedDescription":"Opened pull request \"Add configuration to zip files, for clarity\" (#16792) at dotnet/coreclr","RelatedBody":""}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7341114268","Type":"PullRequestEvent","CreatedAt":"2018-03-07T00:21:28","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8734","RelatedDescription":"Opened pull request \"Remove temp project path from tool install warnings and errors.\" (#8734) at dotnet/cli","RelatedBody":"This commit attempts to filter the diagnostic messages emitted during tool\r\ninstallation.  The diagnostic messages may be prefixed with the temporary\r\nproject; since this is an implementation detail that only causes confusion and\r\nclutter in the diagnostic messages, the prefix is removed if present.\r\n\r\nFixes #8707.\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7339905933","Type":"IssuesEvent","CreatedAt":"2018-03-06T19:47:00","Actor":"molinch","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/668","RelatedDescription":"Opened issue \"Adding .NET Standard 2 dll breaks build\" (#668) at dotnet/standard","RelatedBody":"Hi all,\r\n\r\nI know there are a couple of already opened issues with a similar topic, but in my case it looks slightly different. The issue is with a web application.\r\n\r\nI have some projects that use Microsoft.CodeAnalysis.CSharp.Scripting and Ben.Demystify.\r\nSince they need a different System.IO. I ended up with binding redirects, so I use System.IO 4.1.1.0.\r\nThis used to work great, and System.IO used to be copied automatically to the web application bin/ folder. The System.IO comes from the nuget package.\r\n\r\nNow I just added to another project the package SixLabors.ImageSharp, it references .NET Standard 2, 1.3 and 1. For that project System.IO comes from C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Microsoft\\Microsoft.NET.Build.Extensions\\net461\\lib\\System.IO.dll\r\nThe issue is that System.IO and some other dlls are no longer copied to the web application bin/ folder. Because of that the app fails to run, it requires System.IO 4.1.1.0 to be there in the bin\\ since I have a binding redirect for it.\r\n\r\nIt seems somehow related to: https://github.com/dotnet/corefx/issues/25773#issuecomment-350000563\r\n\r\nDo you have any work around?\r\n\r\n"},{"Id":"7339806877","Type":"IssuesEvent","CreatedAt":"2018-03-06T19:27:58","Actor":"JBildstein","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/666","RelatedDescription":"Closed issue \"netstandard.xml is malformed\" (#666) at dotnet/standard","RelatedBody":"I'm trying to do some analysis of xml comments in C# code with roslyn and this works all fine until I try to get a comment from a framework type.\r\n\r\nAfter some searching I found that the netstandard.xml file is malformed and trying to parse it with XElement.Parse throws an exception.\r\nFor example, the first occurrence is at line 652:\r\n```\r\n<returns><p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"2\"><p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">A signed integer that indicates the relative values of <code data-dev-comment-type=\"paramref\">a</code> and <code data-dev-comment-type=\"paramref\">b</code>, as shown in the following table.  </p>\r\n <table><thead><tr><th> Value  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"4\" sourceendlinenumber=\"4\"> </th><th> Meaning  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"6\" sourceendlinenumber=\"6\"> </th></tr></thead><tbody><tr><td> Less than zero  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"8\" sourceendlinenumber=\"8\"> </td><td><code data-dev-comment-type=\"paramref\">a</code> is less than <code data-dev-comment-type=\"paramref\">b</code>, with casing ignored.  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"10\" sourceendlinenumber=\"10\"> </td></tr><tr><td> Zero  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"12\" sourceendlinenumber=\"12\"> </td><td><code data-dev-comment-type=\"paramref\">a</code> equals <code data-dev-comment-type=\"paramref\">b</code>, with casing ignored.  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"14\" sourceendlinenumber=\"14\"> </td></tr><tr><td> Greater than zero  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"16\" sourceendlinenumber=\"16\"> </td><td><code data-dev-comment-type=\"paramref\">a</code> is greater than <code data-dev-comment-type=\"paramref\">b</code>, with casing ignored.  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"18\" sourceendlinenumber=\"18\"> </td></tr></tbody></table></p>\r\n</returns>\r\n```\r\nand it looks like all of the errors are related to elements containing \"netstandard.yml\"\r\n\r\nAlso, for some reason the root node is \"span\" and not \"doc\" as usual. i.e.\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?><span>\r\n<doc>\r\n...\r\n</doc></span>\r\n```\r\nOnce I fixed those errors by removing them in my local copy, I am able to retrieve the xml comments with roslyn.\r\n\r\nI checked NETStandard.Library version 2.0.0 and 2.0.1 from nuget."},{"Id":"7339400219","Type":"IssuesEvent","CreatedAt":"2018-03-06T18:09:24","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/665","RelatedDescription":"Closed issue \"Build Failure: Official master builds failing due to duplicate refName IDs\" (#665) at dotnet/standard","RelatedBody":"These need to be either unique, or removed (so that VSTS can generate them):\r\n\r\nhttps://github.com/dotnet/standard/blob/9675a2eea8d55756780c8e6f4a3215c932a23e63/buildpipeline/dotnet-standard-win.json#L102\r\n\r\nhttps://github.com/dotnet/standard/blob/9675a2eea8d55756780c8e6f4a3215c932a23e63/buildpipeline/dotnet-standard-win.json#L123\r\n\r\n/cc @weshaggard "},{"Id":"7339305157","Type":"IssuesEvent","CreatedAt":"2018-03-06T17:51:28","Actor":"jnm2","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/667","RelatedDescription":"Opened issue \"Root package was specified but was not found in PackageDependencies\" (#667) at dotnet/standard","RelatedBody":"I have this in `Common.props` which is imported into the top of most of the csprojs:\r\n\r\n```xml\r\n  <ItemGroup>\r\n    <PackageReference Include=\"SourceLink.Embed.AllSourceFiles\" Version=\"2.7.4\" PrivateAssets=\"all\" />\r\n  </ItemGroup>\r\n```\r\n\r\nThe csproj has `<TrimUnusedDependencies>true</TrimUnusedDependencies>` and `<PackageReference Include=\"Microsoft.Packaging.Tools.Trimming\" Version=\"1.1.0-preview1-25818-01\" />`.\r\n\r\nThe build fails:\r\n\r\n> Microsoft.Packaging.Tools.Trimming.targets(55,5): error MSB4018: The \"TrimFiles\" task failed unexpectedly.\r\n> System.Exception: Root package SourceLink.Embed.AllSourceFiles was specified but was not found in PackageDependencies\r\n>    at Microsoft.DotNet.Build.Tasks.TrimFiles.GetPackageRoots(IDictionary`2 packages, Trimmable trimmable)\r\n>    at Microsoft.DotNet.Build.Tasks.TrimFiles.Execute()\r\n>    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n>    at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n\r\nIs this expected to work?"},{"Id":"7339177599","Type":"IssuesEvent","CreatedAt":"2018-03-06T17:27:47","Actor":"JBildstein","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/666","RelatedDescription":"Opened issue \"netstandard.xml is malformed\" (#666) at dotnet/standard","RelatedBody":"I'm trying to do some analysis of xml comments in C# code with roslyn and this works all fine until I try to get a comment from a framework type.\r\n\r\nAfter some searching I found that the netstandard.xml file is malformed and trying to parse it with XElement.Parse throws an exception.\r\nFor example, the first occurrence is at line 652:\r\n```\r\n<returns><p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"2\"><p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">A signed integer that indicates the relative values of <code data-dev-comment-type=\"paramref\">a</code> and <code data-dev-comment-type=\"paramref\">b</code>, as shown in the following table.  </p>\r\n <table><thead><tr><th> Value  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"4\" sourceendlinenumber=\"4\"> </th><th> Meaning  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"6\" sourceendlinenumber=\"6\"> </th></tr></thead><tbody><tr><td> Less than zero  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"8\" sourceendlinenumber=\"8\"> </td><td><code data-dev-comment-type=\"paramref\">a</code> is less than <code data-dev-comment-type=\"paramref\">b</code>, with casing ignored.  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"10\" sourceendlinenumber=\"10\"> </td></tr><tr><td> Zero  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"12\" sourceendlinenumber=\"12\"> </td><td><code data-dev-comment-type=\"paramref\">a</code> equals <code data-dev-comment-type=\"paramref\">b</code>, with casing ignored.  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"14\" sourceendlinenumber=\"14\"> </td></tr><tr><td> Greater than zero  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"16\" sourceendlinenumber=\"16\"> </td><td><code data-dev-comment-type=\"paramref\">a</code> is greater than <code data-dev-comment-type=\"paramref\">b</code>, with casing ignored.  <p>\r\n<p sourcefile=\"netstandard.yml\" sourcestartlinenumber=\"18\" sourceendlinenumber=\"18\"> </td></tr></tbody></table></p>\r\n</returns>\r\n```\r\nand it looks like all of the errors are related to elements containing \"netstandard.yml\"\r\n\r\nAlso, for some reason the root node is \"span\" and not \"doc\" as usual. i.e.\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?><span>\r\n<doc>\r\n...\r\n</doc></span>\r\n```\r\nOnce I fixed those errors by removing them in my local copy, I am able to retrieve the xml comments with roslyn.\r\n\r\nI checked NETStandard.Library version 2.0.0 and 2.0.1 from nuget."},{"Id":"7334343447","Type":"IssuesEvent","CreatedAt":"2018-03-05T22:26:53","Actor":"dagood","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/665","RelatedDescription":"Opened issue \"Build Failure: Official master builds failing due to duplicate refName IDs\" (#665) at dotnet/standard","RelatedBody":"These need to be either unique, or removed (so that VSTS can generate them):\r\n\r\nhttps://github.com/dotnet/standard/blob/9675a2eea8d55756780c8e6f4a3215c932a23e63/buildpipeline/dotnet-standard-win.json#L102\r\n\r\nhttps://github.com/dotnet/standard/blob/9675a2eea8d55756780c8e6f4a3215c932a23e63/buildpipeline/dotnet-standard-win.json#L123\r\n\r\n/cc @weshaggard "}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7341809241","Type":"PullRequestEvent","CreatedAt":"2018-03-07T04:14:30","Actor":"GrabYourPitchforks","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/27782","RelatedDescription":"Merged pull request \"Add more tests for Span<T>.Clear()\" (#27782) at dotnet/corefx","RelatedBody":"We didn't previously have tests that checked that `Span<T>.Clear()` (for referential T) stayed within its slice. Adding a test to check this."},{"Id":"7341745012","Type":"PullRequestEvent","CreatedAt":"2018-03-07T03:49:44","Actor":"JeremyKuhne","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/27809","RelatedDescription":"Opened pull request \"Support trimmed paths in FileInfo\" (#27809) at dotnet/corefx","RelatedBody":"Some paths are not creatable in Windows without special syntax. Notably paths with trailing spaces and periods. As GetFullPath() (and GetFullPathName()) trim these we would lose the correct file name as we passed the path around. With the enumeration changes we now populate FileInfo correctly- this change allows the other methods to work when wrapped around such a path.\r\n\r\nAlso remove some CAS related comments.\r\n\r\ncc: @jkotas, @Anipik, @danmosemsft, @pjanotti "},{"Id":"7341711773","Type":"IssuesEvent","CreatedAt":"2018-03-07T03:37:21","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/27808","RelatedDescription":"Closed issue \"It seems that ReadOnlyMemory can not have OwnedMemory as object\" (#27808) at dotnet/corefx","RelatedBody":"I see next comment in `ReadOnlyMemory` https://source.dot.net/#System.Private.CoreLib/shared/System/ReadOnlyMemory.cs,28\r\n```cs\r\n        // The highest order bit of _index is used to discern whether _object is an array/string or an owned memory\r\n        // if (_index >> 31) == 1, _object is an OwnedMemory<T>\r\n        // else, _object is a T[] or string\r\n```\r\n\r\nI see that all code use `_index` without checking this flag.\r\nAlso the only way to create `ReadOnlyMemory` with such flag is to call `internal ReadOnlyMemory(object obj, int start, int length)` constructor. https://source.dot.net/#System.Private.CoreLib/shared/System/ReadOnlyMemory.cs,86\r\nBut it never called with such flag. See all references to this constructor.\r\n\r\nOnly `public ReadOnlySpan<T> Span` method used this flag. https://source.dot.net/#System.Private.CoreLib/shared/System/ReadOnlyMemory.cs,162\r\n\r\nBut it looks like phantom code that never executed because this flag is never is true.\r\n\r\nAm I right and this flag and phantom code should be removed?"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7341939166","Type":"PullRequestEvent","CreatedAt":"2018-03-07T05:08:05","Actor":"AdamSpeight2008","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25296","RelatedDescription":"Opened pull request \"Include additional information about the found and expected character.\" (#25296) at dotnet/roslyn","RelatedBody":"Include additional information about the found and expected character, when there is an unexpected difference. *I found it useful to see, what was missing during parsing.*"},{"Id":"7341921281","Type":"IssuesEvent","CreatedAt":"2018-03-07T05:00:50","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/25295","RelatedDescription":"Opened issue \"Tuple equality: relax requirement for ValueTuple type\" (#25295) at dotnet/roslyn","RelatedBody":"I don't think that will be very easy to do, but it'd be nice if we could.\r\n\r\n```C#\r\n        [Fact]\r\n        public void TestWithoutValueTuple()\r\n        {\r\n            var source = @\"\r\nclass C\r\n{\r\n    static bool M()\r\n    {\r\n        return (1, 2) == (3, 4);\r\n    }\r\n}\";\r\n            var comp = CreateCompilationWithMscorlib40(source);\r\n\r\n            comp.VerifyDiagnostics(\r\n                // (6,16): error CS8179: Predefined type 'System.ValueTuple`2' is not defined or imported\r\n                //         return (1, 2) == (3, 4);\r\n                Diagnostic(ErrorCode.ERR_PredefinedValueTupleTypeNotFound, \"(1, 2)\").WithArguments(\"System.ValueTuple`2\").WithLocation(6, 16),\r\n                // (6,26): error CS8179: Predefined type 'System.ValueTuple`2' is not defined or imported\r\n                //         return (1, 2) == (3, 4);\r\n                Diagnostic(ErrorCode.ERR_PredefinedValueTupleTypeNotFound, \"(3, 4)\").WithArguments(\"System.ValueTuple`2\").WithLocation(6, 26),\r\n                // (6,16): error CS8179: Predefined type 'System.ValueTuple`2' is not defined or imported\r\n                //         return (1, 2) == (3, 4);\r\n                Diagnostic(ErrorCode.ERR_PredefinedValueTupleTypeNotFound, \"(1, 2)\").WithArguments(\"System.ValueTuple`2\").WithLocation(6, 16),\r\n                // (6,26): error CS8179: Predefined type 'System.ValueTuple`2' is not defined or imported\r\n                //         return (1, 2) == (3, 4);\r\n                Diagnostic(ErrorCode.ERR_PredefinedValueTupleTypeNotFound, \"(3, 4)\").WithArguments(\"System.ValueTuple`2\").WithLocation(6, 26)\r\n                );\r\n        }\r\n```"},{"Id":"7341871250","Type":"PullRequestEvent","CreatedAt":"2018-03-07T04:40:03","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25291","RelatedDescription":"Merged pull request \"Refresh features/tuple-equality with latest bits from features/compiler\" (#25291) at dotnet/roslyn","RelatedBody":"The last commit updates the tuple-equality tests to use the new test APIs.\r\nAlso, equality with `default` literal was updated in `features/compiler` and impacts the tuple equality feature (that's expected). I skipped those tests with a PROTOTYPE marker for now."},{"Id":"7341766017","Type":"IssuesEvent","CreatedAt":"2018-03-07T03:57:22","Actor":"AlekseyTs","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/25294","RelatedDescription":"Opened issue \"Unable to use re-throw in expression form\" (#25294) at dotnet/roslyn","RelatedBody":"```\r\nclass C\r\n{\r\n    void F(object x, object y, object z, int u)\r\n    /*<bind>*/{\r\n        try\r\n        {\r\n            u = 1;\r\n        }\r\n        catch\r\n        {\r\n            M(x, (y ?? throw), z);\r\n        }\r\n    }/*</bind>*/\r\n\r\n    static void M(object x, object y, object z){}\r\n}\r\n```\r\n\r\nObserved:\r\n```\r\n                // (12,29): error CS1525: Invalid expression term ')'\r\n                //             M(x, (y ?? throw), z);\r\n                Diagnostic(ErrorCode.ERR_InvalidExprTerm, \")\").WithArguments(\")\").WithLocation(12, 29)\r\n```\r\n\r\nExpected:\r\nNo error, an exception should be re-thrown as appropriate.\r\nI didn't check whether the current behavior is according to the specification of the \"Throw Expression\" feature, however it feels to me that it would be good if the code would just work.\r\n "},{"Id":"7341672723","Type":"IssuesEvent","CreatedAt":"2018-03-07T03:23:12","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/25293","RelatedDescription":"Opened issue \"Annoying completion when adding pattern conditional in front of expression\" (#25293) at dotnet/roslyn","RelatedBody":"When inserting some code into an existing expression, I find it common to get an annoying completion when trying to type `null`.\r\nFor example, if you want to make a declaration into a conditional (from `var x = z;` to `var x = something is null ? y : z;`), `null` is not offered.\r\n\r\n![image](https://user-images.githubusercontent.com/12466233/37071882-9b13422c-2173-11e8-8ff0-062696253561.png)\r\n\r\nTagging @Neme12 who is fixing some other completion issues with patterns."},{"Id":"7341659892","Type":"IssuesEvent","CreatedAt":"2018-03-07T03:18:37","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/25292","RelatedDescription":"Opened issue \"Introduce Local: trigger the refactoring with a cursor position but no selection\" (#25292) at dotnet/roslyn","RelatedBody":"Currently, you have to select the whole expression that you want to introduce a local for. For example, `[|x.Field.Method()|]`.\r\nBut I think in most cases, if not all, it should be possible to trigger from just a cursor position, such as `x.Field.Meth$$od()`."},{"Id":"7341484112","Type":"PullRequestEvent","CreatedAt":"2018-03-07T02:19:12","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25291","RelatedDescription":"Opened pull request \"Refresh features/tuple-equality with latest bits from features/compiler\" (#25291) at dotnet/roslyn","RelatedBody":"The last commit updates the tuple-equality tests to use the new test APIs.\r\nAlso, equality with `default` literal was updated in `features/compiler` and impacts the tuple equality feature (that's expected). I skipped those tests with a PROTOTYPE marker for now."},{"Id":"7341465524","Type":"PullRequestEvent","CreatedAt":"2018-03-07T02:13:17","Actor":"JieCarolHu","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25290","RelatedDescription":"Opened pull request \"Bug4434 new\" (#25290) at dotnet/roslyn","RelatedBody":"<details><summary>Ask Mode template not completed</summary>\r\n\r\n<!-- This template is not always required. If you aren't sure about whether it's needed or want help filling out the sections,\r\nsubmit the pull request and then ask us for help. :) -->\r\n\r\n### Customer scenario\r\n\r\nWhat does the customer do to get into this situation, and why do we think this\r\nis common enough to address for this release.  (Granted, sometimes this will be\r\nobvious \"Open project, VS crashes\" but in general, I need to understand how\r\ncommon a scenario is)\r\n\r\n### Bugs this fixes\r\n\r\n(either VSO or GitHub links)\r\n\r\n### Workarounds, if any\r\n\r\nAlso, why we think they are insufficient for RC vs. RC2, RC3, or RTW\r\n\r\n### Risk\r\n\r\nThis is generally a measure our how central the affected code is to adjacent\r\nscenarios and thus how likely your fix is to destabilize a broader area of code\r\n\r\n### Performance impact\r\n\r\n(with a brief justification for that assessment (e.g. \"Low perf impact because no extra allocations/no complexity changes\" vs. \"Low\")\r\n\r\n### Is this a regression from a previous update?\r\n\r\n### Root cause analysis\r\n\r\nHow did we miss it?  What tests are we adding to guard against it in the future?\r\n\r\n### How was the bug found?\r\n\r\n(E.g. customer reported it vs. ad hoc testing)\r\n\r\n### Test documentation updated?\r\n\r\nIf this is a new non-compiler feature or a significant improvement to an existing feature, update https://github.com/dotnet/roslyn/wiki/Manual-Testing once you know which release it is targeting.\r\n\r\n</details>\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7341858816","Type":"PullRequestEvent","CreatedAt":"2018-03-07T04:34:58","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5416","RelatedDescription":"Merged pull request \"[ILVerify] Fix include/exclude pattern matching by using fully qualified method name and added some verbose output\" (#5416) at dotnet/corert","RelatedBody":"I saw that include/exclude pattern matching was not working anymore, because only the method name and not the fully qualified name was used.\r\n\r\nI also added some verbose output to see what input files, reference files, include and exclude patterns are used and if a method was verified or skipped."},{"Id":"7341695098","Type":"PullRequestEvent","CreatedAt":"2018-03-07T03:31:11","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5509","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5509) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7341146343","Type":"IssuesEvent","CreatedAt":"2018-03-07T00:31:41","Actor":"denisvlah","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5508","RelatedDescription":"Opened issue \"app with mongoDB compilation failure\" (#5508) at dotnet/corert","RelatedBody":"I am trying to compile an app with  RyuJIT AOT compiler following steps in https://github.com/dotnet/corert/tree/master/samples/MonoGame\r\n\r\nThe app has a reference to the mongodb oficcial driver.\r\n\r\nIt gives the following error:\r\nEXEC : error : VTable of type 'MongoDB.Bson.Serialization.IBsonSerializer`1<IgnoredReply<System.__Canon>>' not computed by the IL scanner. You can work around by running the compilation with scanner disabled. [C:\\Users\\User\\Desktop\\EpyDoc3\\Src\\Core\\DruidTesterApp\\DruidTesterAppNetcore\\DruidTesterAppNetcore.csproj]\r\n\r\nI have also tried the rd.xml file with the following conent but it doesn't help:\r\n\r\n```\r\n<Directives>\r\n  <Application>\r\n    <Assembly Name=\"Newtonsoft.Json\">\r\n      <Type Name=\"Newtonsoft.Json.Serialization.ObjectConstructor`1[[System.Object,System.Private.CoreLib]]\" Dynamic=\"Required All\" />\r\n    </Assembly>\r\n    \r\n    <!--<Assembly Name=\"MongoDB.Driver.Core\">      \r\n      <Type Name=\"MongoDB.Driver.Core.Misc.BatchableSource`1[System.__Canon]\" Dynamic=\"Required All\" />      \r\n    </Assembly>-->\r\n\r\n    <Assembly Name=\"MongoDB.Bson\" Dynamic=\"Required All\" />\r\n    <Assembly Name=\"MongoDB.Driver.Core\" Dynamic=\"Required All\" />\r\n    <Assembly Name=\"MongoDB.Driver\" Dynamic=\"Required All\" />\r\n    <Assembly Name=\"mscorlib\" Dynamic=\"Required All\"/>\r\n  </Application>\r\n</Directives>\r\n```\r\n\r\nthe fragment of the .csproj file:\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.DotNet.ILCompiler\" Version=\"1.0.0-alpha-*\" />\r\n    <PackageReference Include=\"MongoDB.Driver\" Version=\"2.5.0\" />\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"11.0.1\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <Folder Include=\"EpyDoc.Tools.DruidDriver\\\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <RdXmlFile Include=\"rd.xml\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n\r\n```"},{"Id":"7339888641","Type":"PullRequestEvent","CreatedAt":"2018-03-06T19:43:36","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5507","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5507) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7339632294","Type":"PullRequestEvent","CreatedAt":"2018-03-06T18:54:03","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5506","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#5506) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"7339595805","Type":"PullRequestEvent","CreatedAt":"2018-03-06T18:47:03","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5507","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5507) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7339587244","Type":"PullRequestEvent","CreatedAt":"2018-03-06T18:45:32","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5506","RelatedDescription":"Opened pull request \"Merge changes from TFS\" (#5506) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"7337375332","Type":"PullRequestEvent","CreatedAt":"2018-03-06T12:15:11","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5425","RelatedDescription":"Merged pull request \"Static constructors for WebAssembly\" (#5425) at dotnet/corert","RelatedBody":"Implements static constructor triggering. Also includes several bug fixes found in the process:\r\n* Don't make the ClassConstructorRunner depend on module intialization\r\n* Moves non-GC statics and thread statics from globals to the type's data regions. GC statics can't be moved until we can call InitializeModules on startup.\r\n* Devirtualizing interface calls to structs in order to be able to compile the class constructor runner.\r\n* Add a prolog block before Block0 to allow branching to Block0, which happens in retail builds\r\n* Correct use of unreachable in traps and at the end of finally blocks to fix more retail build problems\r\n* Stop reusing spill slots when a spilled value is spilled again. This avoids cases where the spills feeding into a block don't use the same slot\r\n* Enable thunks for NativeCallable methods and call RhpReversePInvoke for them\r\n* Fix alignment for cases where a small type is followed by a larger one\r\n* Workaround for Emscripten atomics bug\r\n\r\nFixes #4532 "}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7341318512","Type":"IssuesEvent","CreatedAt":"2018-03-07T01:26:10","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1358","RelatedDescription":"Closed issue \"Missing System.Threading.Tasks\" (#1358) at dotnet/sdk","RelatedBody":"To reproduce:\r\n\r\n* Use a Windows 10 system with Visual Studio 2017, .NET Framework 4.6.2 SDK as well as .NET Core SDK installed.\r\n* Create in Visual Studio 2017 a new project A targeting .NET Standard 1.3.\r\n* Build project A using msbuild `Microsoft (R) Build Engine version 15.2.0.0`\r\n* Create  in Visual Studio 2017 a new project B in a different solution targeting .NET Framework 4.6.2\r\n* Import into B project A. (either the assembly or a nuget package, you name it)\r\n* Build project B using msbuild `Microsoft (R) Build Engine version 15.2.0.0`\r\n* Notice the output does not contain assembly `System.Threading.Tasks` (this should be ok, right? Should be in the GAC, right?)\r\n* Copy your assemblies to a Linux machine with mono, run it with mono, works flawlessly.\r\n* Try to run the software in Windows 10 machine, and get this result:\r\n![image](https://user-images.githubusercontent.com/24405049/27315516-4676115e-55a4-11e7-957c-f7c973fba9c9.png)\r\n\r\nAm I missing something too obvious in here?"},{"Id":"7335380106","Type":"PullRequestEvent","CreatedAt":"2018-03-06T03:38:42","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2025","RelatedDescription":"Opened pull request \"Update stage 0 .NET Core SDK version\" (#2025) at dotnet/sdk","RelatedBody":"I'm having issues with CI failing but tests passing locally in #2008, so in this PR I'm trying to isolate some of the changes and test them separately."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"969672659385700354","CreatedAt":"2018-03-02T20:35:52+00:00","UserScreenname":"dotnet","Text":"It's not too late... Happening now: Miguel de Icaza's Developer Tools Reddit AMA. Ask him anything ab out what we'v… https://t.co/Ct6QA3l0FL","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":21,"FavoriteCount":12,"RawContent":null},{"Id":"968893314832285697","CreatedAt":"2018-02-28T16:59:02+00:00","UserScreenname":"dotnet","Text":"And by \"check out\" @terrajobst really means: please subscribe :-) https://t.co/O2IOMK3aAU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":27,"FavoriteCount":10,"RawContent":null},{"Id":"968549530395336704","CreatedAt":"2018-02-27T18:12:57+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9qNspl Core 2.1.0-preview1 now available https://t.co/jAZAQmZq7Q","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":110,"FavoriteCount":108,"RawContent":null},{"Id":"968549278879592449","CreatedAt":"2018-02-27T18:11:57+00:00","UserScreenname":"dotnet","Text":"Announcing Entity Framework Core 2.1 Preview 1 https://t.co/myZTqqSPuJ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":89,"FavoriteCount":69,"RawContent":null},{"Id":"968549057403604992","CreatedAt":"2018-02-27T18:11:04+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Core 2.1 Preview 1 https://t.co/YMrTQJHDhU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":525,"FavoriteCount":406,"RawContent":null}]}},"RunOn":"2018-03-07T05:30:22.6176939Z","RunDurationInMilliseconds":8677}