{"Data":{"GitHub":{"Issues":[{"Id":"434080430","IsPullRequest":true,"CreatedAt":"2019-04-17T03:55:02","Actor":"daholste","Number":"3373","RawContent":null,"Title":"[AutoML] Migrate AutoML back to its own solution, w/ NuGet dependencies","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3373","RelatedDescription":"Open PR \"[AutoML] Migrate AutoML back to its own solution, w/ NuGet dependencies\" (#3373)"},{"Id":"434080076","IsPullRequest":true,"CreatedAt":"2019-04-17T03:53:10","Actor":"daholste","Number":"3372","RawContent":null,"Title":"[AutoML] Migrate AutoML back to its own solution, w/ NuGet dependencies","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3372","RelatedDescription":"Closed or merged PR \"[AutoML] Migrate AutoML back to its own solution, w/ NuGet dependencies\" (#3372)"},{"Id":"434048893","IsPullRequest":true,"CreatedAt":"2019-04-17T02:33:20","Actor":"srsaggam","Number":"3371","RawContent":null,"Title":"[AutoML] Minor changes to generated project in CLI based on feedback","State":"closed","Body":"\r\n1) Match the filenames with classes\r\n2) Dynamic generation of nuget packages for generated project\r\n3) nit picks in UI ","Url":"https://github.com/dotnet/machinelearning/pull/3371","RelatedDescription":"Closed or merged PR \"[AutoML] Minor changes to generated project in CLI based on feedback\" (#3371)"},{"Id":"434047461","IsPullRequest":true,"CreatedAt":"2019-04-17T01:08:30","Actor":"glebuk","Number":"3370","RawContent":null,"Title":"Increase Native build warning level  to W3 and fix build warnings","State":"open","Body":"Before, we actually only reported W1 warning level during native build.\r\n Now we warn on L3 warnings\r\nFixed three warnings from downcasting variables. In all cases the downcasting was deemed safe and replaced with ```static_cast<>```\r\nNote that all those warnings were deemed required to fix for compliance criteria.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3370","RelatedDescription":"Open PR \"Increase Native build warning level  to W3 and fix build warnings\" (#3370)"},{"Id":"433520461","IsPullRequest":true,"CreatedAt":"2019-04-17T00:04:54","Actor":"Ivanidzo4ka","Number":"3345","RawContent":null,"Title":"SymSGD documentation","State":"closed","Body":"Documentation for SymSGD towards #2522 ","Url":"https://github.com/dotnet/machinelearning/pull/3345","RelatedDescription":"Closed or merged PR \"SymSGD documentation\" (#3345)"},{"Id":"433999149","IsPullRequest":true,"CreatedAt":"2019-04-16T23:15:22","Actor":"daholste","Number":"3364","RawContent":null,"Title":"[AutoML] Rev AutoML public API; add required native references to AutoML projects","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3364","RelatedDescription":"Closed or merged PR \"[AutoML] Rev AutoML public API; add required native references to AutoML projects\" (#3364)"},{"Id":"434020866","IsPullRequest":false,"CreatedAt":"2019-04-16T22:59:57","Actor":"CESARDELATORRE","Number":"3369","RawContent":null,"Title":"Example code on how to load in-memory images into ONNX models and TensorFlow models","State":"open","Body":"I'm reviving these issues. Basically, we need example code on how  to load in-memory images into pipeline (for ONNX and TensorFlow models):\r\n\r\nhttps://github.com/dotnet/machinelearning/issues/2495\r\n\r\nhttps://github.com/dotnet/machinelearning/issues/2121\r\n\r\nThere are many scenarios that require that way instead of loading from image files on the drive.\r\n\r\nScenarios:\r\n- Live-streaming images coming from a laptop camera for object detection ONNX models\r\n- Web/Service Http apps where images come through HTTP and need to be processed directly\r\n\r\nCan the team create example code of ONNX model and a second for a TensorFlow model where in-memory images are provided instead of loading from files on the drive?\r\n ","Url":"https://github.com/dotnet/machinelearning/issues/3369","RelatedDescription":"Open issue \"Example code on how to load in-memory images into ONNX models and TensorFlow models\" (#3369)"},{"Id":"434016423","IsPullRequest":true,"CreatedAt":"2019-04-16T22:42:17","Actor":"wschin","Number":"3368","RawContent":null,"Title":"Check size before allocation","State":"open","Body":"This PR fixes #3361 by incorporating a minor fix from LIBMF.","Url":"https://github.com/dotnet/machinelearning/pull/3368","RelatedDescription":"Open PR \"Check size before allocation\" (#3368)"},{"Id":"434015508","IsPullRequest":true,"CreatedAt":"2019-04-16T22:38:42","Actor":"shauheen","Number":"3367","RawContent":null,"Title":"Setting metadata back to defaults for Microsoft.ML.DataView","State":"open","Body":"Fixes #3366 ","Url":"https://github.com/dotnet/machinelearning/pull/3367","RelatedDescription":"Open PR \"Setting metadata back to defaults for Microsoft.ML.DataView\" (#3367)"},{"Id":"434011822","IsPullRequest":false,"CreatedAt":"2019-04-16T22:24:46","Actor":"shauheen","Number":"3366","RawContent":null,"Title":"Microsoft.ML.DataView metadat needs to be fixed","State":"open","Body":"In #2974 we moved IDataView back to Microsoft.ML, but did not update the logo for the nuget back to ML.NET","Url":"https://github.com/dotnet/machinelearning/issues/3366","RelatedDescription":"Open issue \"Microsoft.ML.DataView metadat needs to be fixed\" (#3366)"},{"Id":"434007827","IsPullRequest":false,"CreatedAt":"2019-04-16T22:11:30","Actor":"artidoro","Number":"3365","RawContent":null,"Title":"RowGroupColumnName of ranking trainers options class defaults to null","State":"open","Body":"The `Options` class of the ranking trainers (`FastTree` and `LightGbm`) defaults to `RowGroupColumnName = null`.\r\n\r\nThis is:\r\n1. Inconsistent with the simple constructor where `RowGroupColumnName` defaults to `GroupId`\r\n2. Not desirable as in ranking the row group is very important for correct training\r\n\r\nHere are the lines where the row group column name is set:\r\nhttps://github.com/dotnet/machinelearning/blob/738e5d5a5b90f8c3a93c391bb8b2e0bcdad35cd0/src/Microsoft.ML.Data/Training/TrainerInputBase.cs#L106-L110\r\n\r\nWe need to update the default and align it with the simple constructor.","Url":"https://github.com/dotnet/machinelearning/issues/3365","RelatedDescription":"Open issue \"RowGroupColumnName of ranking trainers options class defaults to null\" (#3365)"},{"Id":"433998658","IsPullRequest":true,"CreatedAt":"2019-04-16T21:43:14","Actor":"daholste","Number":"3363","RawContent":null,"Title":"[AutoML] Rev AutoML public API; add required native references to AutoML projects","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3363","RelatedDescription":"Closed or merged PR \"[AutoML] Rev AutoML public API; add required native references to AutoML projects\" (#3363)"},{"Id":"433988148","IsPullRequest":true,"CreatedAt":"2019-04-16T21:14:31","Actor":"wschin","Number":"3362","RawContent":null,"Title":"Upgrade matrix factorization samples","State":"open","Body":"One more step toward #2522.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3362","RelatedDescription":"Open PR \"Upgrade matrix factorization samples\" (#3362)"},{"Id":"433978177","IsPullRequest":false,"CreatedAt":"2019-04-16T20:48:47","Actor":"glebuk","Number":"3361","RawContent":null,"Title":"MFNative Utility::malloc_aligned_float() can overflow on 32-bit systems","State":"open","Body":"### ISSUE\r\nIn MF Native, the function malloc_aligned_float() can underallocate, creating a potential for buffer overlow in Matrix Factorization algorithm.\r\nThe function ```Utility::malloc_aligned_float(mf_long size)``` takes an input ```size``` which is a 64 bit signed integer.  Later in the function we do a static cast to ```size_t```.  \r\n```_aligned_malloc(static_cast<size_t>(size * sizeof(mf_float))```\r\nNote that on 32-bit platform size_t is 32 bit.  As a result, the outcome of the cast result in loss of data (size will be <max uint)).  The funciton will succeed and the algo will assume that the array is bigger vs what it actually is. Then you this can potentially lead to an exploitable buffer overflow.\r\n\r\n### EXPECTED\r\nWe must validate and ensure that there is no cast issues for all platforms.  we should validate all inputs and do NOT use static casting.  In addition, consider changing the type of ```size``` to ```size_t```","Url":"https://github.com/dotnet/machinelearning/issues/3361","RelatedDescription":"Open issue \"MFNative Utility::malloc_aligned_float() can overflow on 32-bit systems\" (#3361)"},{"Id":"433965526","IsPullRequest":false,"CreatedAt":"2019-04-16T20:16:04","Actor":"artidoro","Number":"3360","RawContent":null,"Title":"Samples templates could be improved and use TrainTestSplit","State":"open","Body":"Our samples templates for trainers usually call the `GenerateDataPoints` method twice, once to generate the test data and once to generate the training data. Furthermore, the two calls are not symmetrical.\r\n\r\nSee here the template for binary classification trainers:\r\nhttps://github.com/dotnet/machinelearning/blob/5538ccfcd8b0ad89146cf428dcfae6f25b179703/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/BinaryClassification/BinaryClassification.ttinclude#L21-L25\r\nand\r\nhttps://github.com/dotnet/machinelearning/blob/5538ccfcd8b0ad89146cf428dcfae6f25b179703/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/BinaryClassification/BinaryClassification.ttinclude#L49-L50\r\n\r\nIt would be more educationally useful to replace this with a single call to the data generation method and combine it with a call to `TrainTestSplit`.\r\n\r\nSee @rogancarr's motivating comment: https://github.com/dotnet/machinelearning/pull/3338#discussion_r275909222","Url":"https://github.com/dotnet/machinelearning/issues/3360","RelatedDescription":"Open issue \"Samples templates could be improved and use TrainTestSplit\" (#3360)"},{"Id":"433945439","IsPullRequest":true,"CreatedAt":"2019-04-16T19:22:40","Actor":"shmoradims","Number":"3359","RawContent":null,"Title":"API reference - Fix placeholder links","State":"open","Body":"Fixes #2356 with actual links.","Url":"https://github.com/dotnet/machinelearning/pull/3359","RelatedDescription":"Open PR \"API reference - Fix placeholder links\" (#3359)"},{"Id":"433922291","IsPullRequest":false,"CreatedAt":"2019-04-16T18:24:46","Actor":"PeterPann23","Number":"3358","RawContent":null,"Title":"lack of feedbak from the ITrainer api becomes an issue","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: Core 3.0, preview 1.0 of ML\r\n\r\n### Issue\r\nWorking larger datasets it becomes important to get a progress on what the system is doing.\r\nI am testing the framework against a smaller set of production data (21 days@23:45:00 per day), The smaller training file is ~300 GB and 35630 columns, depending on the multiclass label to predict. \r\n\r\nThere is not only no documentation in regards to sizing there is also no progress report or early stopping method that one can hook into, or is there?. \r\n\r\nOne can limit the amount of iterations, however it would be far cooler to be able to hooking to an Iteration have an event that states the current metric as well as a \"Cancel\" property. there are several events that use such hooks like Form.OnClosing. \r\n\r\nHaving a cancel would ideally have the model fitted in such a state that one can save it. Ideally I would suggest to have \"duration of training\" as well as \"Iteration performed\"  in the event. this would nicely hook into progress reporting tools. \r\n\r\nI guess it could be a part of IProgressChannel? \r\nWould be nice if this could be considered\r\n   \r\n","Url":"https://github.com/dotnet/machinelearning/issues/3358","RelatedDescription":"Open issue \"lack of feedbak from the ITrainer api becomes an issue\" (#3358)"},{"Id":"433596151","IsPullRequest":true,"CreatedAt":"2019-04-16T17:24:53","Actor":"daholste","Number":"3351","RawContent":null,"Title":"[AutoML] Add AutoML XML documentation to all public members; migrate AutoML projects & tests into ML.NET solution; AutoML test fixes","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/3351","RelatedDescription":"Closed or merged PR \"[AutoML] Add AutoML XML documentation to all public members; migrate AutoML projects & tests into ML.NET solution; AutoML test fixes\" (#3351)"},{"Id":"433638773","IsPullRequest":true,"CreatedAt":"2019-04-16T17:22:53","Actor":"daholste","Number":"3355","RawContent":null,"Title":"Fix typos in XML comments in TextLoaderSaverCatalog","State":"closed","Body":"Closes #3354 ","Url":"https://github.com/dotnet/machinelearning/pull/3355","RelatedDescription":"Closed or merged PR \"Fix typos in XML comments in TextLoaderSaverCatalog\" (#3355)"},{"Id":"433636658","IsPullRequest":false,"CreatedAt":"2019-04-16T17:22:53","Actor":"daholste","Number":"3354","RawContent":null,"Title":"Comment typo","State":"closed","Body":"https://github.com/dotnet/machinelearning/blob/70ef7ecd43b031b481a4047ea361da5e2f360336/src/Microsoft.ML.Data/DataLoadSave/Text/TextLoaderSaverCatalog.cs#L22\r\n\r\n'can contain column' --> 'can contain columns'","Url":"https://github.com/dotnet/machinelearning/issues/3354","RelatedDescription":"Closed issue \"Comment typo\" (#3354)"},{"Id":"433873254","IsPullRequest":true,"CreatedAt":"2019-04-16T16:26:10","Actor":"shmoradims","Number":"3357","RawContent":null,"Title":"Cherry-pick #3310: \"API reference - Updated trainer docs for AveragedPerceptron (#3310)\"","State":"open","Body":"* Updated trainer docs for AveragedPerceptron\r\n\r\n* Addressed PR comments\r\n\r\n* Updated xref\r\n\r\n* Added more IO details.\r\n\r\n* Updated nuget statement\r\n\r\n* Fixed formula with latex syntax\r\n\r\nWe are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3357","RelatedDescription":"Open PR \"Cherry-pick #3310: \"API reference - Updated trainer docs for AveragedPerceptron (#3310)\"\" (#3357)"},{"Id":"433717983","IsPullRequest":false,"CreatedAt":"2019-04-16T11:01:58","Actor":"PeterPann23","Number":"3356","RawContent":null,"Title":"L1 and L2 Regularization","State":"open","Body":"[Enter feedback here]\r\nI would provide a reason as for the use of the parameter. if L1 stands for Lasso Regression (Least Absolute Shrinkage and Selection Operator) than one could mention that:\r\n\r\n> The value L1 helps by adding an absolute value for the magnitude of coefficients as a \"penalty\" for the loss function. The Lasso will reduce/shrink the weight of the less important features and works well with models that have a large set of features (the value should be higher than 0 and less than or equal to 1, Based on the trainer used the L1 value is inferred based on steps of 0.25f starting at 0f ends at 1f. If you would like to avoid \"discovery\" and use your own scale than you could enter one here. \r\n---\r\nRight now the property adds no value to the API also it provides an automatically inferred based on data set. without telling the user.\r\n\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: c1d926eb-6385-aae6-78f8-88410472625c\r\n* Version Independent ID: 5a58a60a-7ba0-8ef9-3537-05bb28678113\r\n* Content: [SdcaTrainerBase&lt;TOptions,TTransformer,TModel&gt;.OptionsBase.L1Regularization Field (Microsoft.ML.Trainers)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.trainers.sdcatrainerbase-3.optionsbase.l1regularization?view=ml-dotnet)\r\n* Content Source: [dotnet/xml/Microsoft.ML.Trainers/SdcaTrainerBase`3+OptionsBase.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Trainers/SdcaTrainerBase`3+OptionsBase.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @sfilipi\r\n* Microsoft Alias: **johalex**","Url":"https://github.com/dotnet/machinelearning/issues/3356","RelatedDescription":"Open issue \"L1 and L2 Regularization\" (#3356)"},{"Id":"433635389","IsPullRequest":true,"CreatedAt":"2019-04-16T07:54:46","Actor":"codemzs","Number":"3353","RawContent":null,"Title":"BinaryClassification Calibrators: Replace Preview API with IDataView based getter API.","State":"open","Body":"towards #3350","Url":"https://github.com/dotnet/machinelearning/pull/3353","RelatedDescription":"Open PR \"BinaryClassification Calibrators: Replace Preview API with IDataView based getter API.\" (#3353)"},{"Id":"433611343","IsPullRequest":true,"CreatedAt":"2019-04-16T06:50:38","Actor":"codemzs","Number":"3352","RawContent":null,"Title":"Add links to code samples in documentation.","State":"open","Body":"Towards #1209\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3352","RelatedDescription":"Open PR \"Add links to code samples in documentation.\" (#3352)"},{"Id":"433582178","IsPullRequest":false,"CreatedAt":"2019-04-16T04:48:12","Actor":"codemzs","Number":"3350","RawContent":null,"Title":"Stop using Preview structure and API in samples.","State":"open","Body":"From PR #3307 and @TomFinley 's [comment ](https://github.com/dotnet/machinelearning/pull/3307#pullrequestreview-225891973) it was learnt that samples should be rewritten to not use \"preview\" structure because we're writing sample code using a structure expressly and clearly intended purely for debugging in a preview window anyway. There are a number of samples that use preview structure, I will start converting these samples in batches and replace the usage of preview API/structure with something more appropriate like IDataView + getter or Enumerable(with class). We definitely don't want to be educating our users the wrong thing.\r\n\r\nCC: @TomFinley @shmoradims @natke @shauheen ","Url":"https://github.com/dotnet/machinelearning/issues/3350","RelatedDescription":"Open issue \"Stop using Preview structure and API in samples.\" (#3350)"},{"Id":"433577799","IsPullRequest":true,"CreatedAt":"2019-04-16T04:23:56","Actor":"ganik","Number":"3349","RawContent":null,"Title":"ApplyOnnxModel sample","State":"open","Body":"part of #1209 ","Url":"https://github.com/dotnet/machinelearning/pull/3349","RelatedDescription":"Open PR \"ApplyOnnxModel sample\" (#3349)"},{"Id":"433577110","IsPullRequest":true,"CreatedAt":"2019-04-16T04:20:17","Actor":"sfilipi","Number":"3348","RawContent":null,"Title":"CherryPicking #3316 - ColumCopying documentation  ","State":"open","Body":"Cherry picking #3316 \r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3348","RelatedDescription":"Open PR \"CherryPicking #3316 - ColumCopying documentation  \" (#3348)"},{"Id":"433576785","IsPullRequest":true,"CreatedAt":"2019-04-16T04:18:59","Actor":"ganik","Number":"3347","RawContent":null,"Title":"ApplyOnnxModel transform","State":"closed","Body":"part of #1209 ","Url":"https://github.com/dotnet/machinelearning/pull/3347","RelatedDescription":"Closed or merged PR \"ApplyOnnxModel transform\" (#3347)"},{"Id":"433532290","IsPullRequest":true,"CreatedAt":"2019-04-16T01:10:09","Actor":"codemzs","Number":"3346","RawContent":null,"Title":"test.","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/3346","RelatedDescription":"Closed or merged PR \"test.\" (#3346)"},{"Id":"433502239","IsPullRequest":true,"CreatedAt":"2019-04-15T22:18:33","Actor":"Ivanidzo4ka","Number":"3344","RawContent":null,"Title":"Cherry pick Projection documentation and Normalize changes to 1.0","State":"open","Body":"Documentation for Projection and Normalize transforms.\r\nOriginal PRs https://github.com/dotnet/machinelearning/pull/3232 and #3244","Url":"https://github.com/dotnet/machinelearning/pull/3344","RelatedDescription":"Open PR \"Cherry pick Projection documentation and Normalize changes to 1.0\" (#3344)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-04-17T05:30:33.3188962Z","RunDurationInMilliseconds":546}