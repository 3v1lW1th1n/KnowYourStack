{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework January 2018 Security and Quality Rollup","PublishedOn":"2018-01-10T06:39:31+00:00","CommentsCount":28,"FacebookCount":0,"Summary":"Updated: January 24, 2018 Today, we are releasing the January 2018 Security and Quality Rollup. An issue with the January 2018 Monthly Rollup was found on Windows 7 and Windows Server 2008 R2 if .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/","RawContent":null},{"Title":".NET for UWP January 2018 Update","PublishedOn":"2018-01-10T04:17:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET for UWP January 2018 Update. This post includes the fix included and instructions on how to update your applications. Security CVE-2018-0786 – Security Feature Bypass...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/","RawContent":null},{"Title":".NET Framework 4.7.1 is available on Windows Update, WSUS and MU Catalog!","PublishedOn":"2018-01-09T21:39:54+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today, we are happy to announce the Microsoft .NET Framework 4.7.1 is available on Windows Update, Windows Server Update Services (WSUS) and Microsoft Update (MU) Catalog. This includes reliability...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-4-7-1-is-available-on-windows-update-wsus-and-mu-catalog/","RawContent":null},{"Title":".NET Core January 2018 Update","PublishedOn":"2018-01-09T21:08:03+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core January 2018 Update. This includes .NET Core  1.0.9, 1.1.6 and 2.0.5. Please leave feedback on the release in the comments below or at dotnet/core #1199. Security...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-core-january-2018-update/","RawContent":null},{"Title":"Migrating your existing .NET application to the cloud? Tell us about it!","PublishedOn":"2017-12-05T18:14:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Hi everyone! The .NET team is conducting a survey to learn more about your approach for moving existing .NET applications to the cloud.  The survey should take less than 5 minutes to complete. Take...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/12/05/migrating-your-existing-net-application-to-the-cloud-tell-us-about-it/","RawContent":null},{"Title":"Announcing the Windows Compatibility Pack for .NET Core","PublishedOn":"2017-11-17T04:59:32+00:00","CommentsCount":76,"FacebookCount":0,"Summary":"Porting existing code to .NET Core used to be quite hard because the available API set was very small. In .NET Core 2.0, we already made this much easier, thanks to .NET Standard 2.0. Today,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/announcing-the-windows-compatibility-pack-for-net-core/","RawContent":null},{"Title":"UPDATE – Microservices and Docker containers: Architecture, Patterns and Development guidance (Updated for .NET Core 2.0)","PublishedOn":"2017-11-16T22:00:06+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published this eBook/guide and sample application offering guidance for architecting microservices and Docker containers based applications. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-microservices-and-docker-containers-architecture-patterns-and-development-guidance-updated-for-net-core-2-0/","RawContent":null},{"Title":"UPDATE – Web Applications with ASP.NET Core Architecture and Patterns guidance (Updated for ASP.NET Core 2)","PublishedOn":"2017-11-16T21:00:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published an eBook/Guide and sample application offering guidance named Architecting Modern Web Applications with ASP.NET Core and Microsoft Azure. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-web-applications-with-asp-net-core-architecture-and-patterns-guidance-updated-for-asp-net-core-2/","RawContent":null},{"Title":"Introducing Tensor for multi-dimensional Machine Learning and AI data","PublishedOn":"2017-11-15T22:00:18+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Overview Tensor is an exchange type for homogenous multi-dimensional data for 1 to N dimensions. The motivation behind introducing Tensor&#60;T&#62; is to make it easy for Machine Learning library...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/introducing-tensor-for-multi-dimensional-machine-learning-and-ai-data/","RawContent":null},{"Title":"Introducing Nullable Reference Types in C#","PublishedOn":"2017-11-15T20:00:47+00:00","CommentsCount":240,"FacebookCount":0,"Summary":"Today we released a prototype of a C# feature called &#8220;nullable reference types&#8220;, which is intended to help you find and fix most of your null-related bugs before they blow up at runtime....","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/nullable-reference-types-in-csharp/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7102763357","Type":"PullRequestEvent","CreatedAt":"2018-01-16T00:17:04","Actor":"galatrash-at-dnn","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Opened pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7097053889","Type":"PullRequestEvent","CreatedAt":"2018-01-14T15:15:00","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Opened pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7065382954","Type":"PullRequestEvent","CreatedAt":"2018-01-06T19:21:47","Actor":"ctaggart","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Opened pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7044237283","Type":"PullRequestEvent","CreatedAt":"2017-12-31T20:25:44","Actor":"onovotny","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Opened pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"6946829856","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:08:42","Actor":"heiligerdankgesang","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Opened pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"6934052963","Type":"PullRequestEvent","CreatedAt":"2017-12-02T15:19:09","Actor":"rprouse","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Opened pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7089727012","Type":"IssuesEvent","CreatedAt":"2018-01-12T04:51:18","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/53","RelatedDescription":"Opened issue \".NET Framework January 2018 Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications\" (#53) at dotnet/announcements","RelatedBody":"# .NET Framework January 2018 Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications\r\n\r\nAn issue has been found in the [.NET Framework January 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/). The .NET team is in the process of fixing the issue. This document describes the symptom and workarounds to resolve the issue while you are waiting for a fix.\r\n\r\nThis document will be updated when a fix is made available.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #599](https://github.com/Microsoft/dotnet/issues/599)\r\n\r\n## Symptoms\r\n\r\nWindows Presentation Foundation (WPF) applications that request a fallback font or a character that is not included in the currently selected font return the following error messages: \r\n\r\n```\r\nSystem.TypeInitializationException\r\n \r\n“FileFormatException: No FontFamily element found in FontFamilyCollection \r\nthat matches current OS or greater: Win7SP1”.\r\n\r\nInner exception originates from: CompositeFontParser\r\n```\r\n\r\n## Workarounds\r\n\r\nTo work around this problem, use one of the following methods.\r\n\r\n### Workaround 1 - Uninstall the January 2018 Update\r\n\r\nTo keep .NET 4.7.1 installed and maintain protection against vulnerabilities that are addressed by the January security updates, uninstall the January .NET Framework Security and Quality Rollup ([KB4055002](https://support.microsoft.com/en-us/help/4055002)), and then install the January .NET Framework Security-Only Update ([KB4054183](https://support.microsoft.com/en-us/help/4054183)). To do this, follow these steps:\r\n\r\n1. In Control Panel, open the Windows Update item, and then select View update history.\r\n1. In the Review your update history list, locate and select Security Update for Microsoft .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, 4.7.1 ([KB4055002](https://support.microsoft.com/en-us/help/4055002)). Then, select Uninstall.\r\n1. When you are prompted for confirmation to uninstall, select Yes.\r\n1. Restart your computer if you are prompted to do this.\r\n1. Download and install the Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 for Windows 7 SP1 and Windows Server 2008 R2 SP1 and .NET Framework 4.6 for Windows Server 2008 SP2 ([KB4054183](https://support.microsoft.com/en-us/help/4054183)) for your operating system configuration from the following links:\r\n   * [Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 for Windows 7 SP1 and Windows Server 2008 R2 SP1 for x86 systems (KB4054183)](http://download.windowsupdate.com/d/msdownload/update/software/secu/2018/01/ndp47-kb4054183-x86_301cb3d6591b572786c8349c12a28e5ec5d2d334.exe)\r\n   * [Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 on Windows 7 SP1 and Windows Server 2008 R2 SP1 for x64 systems (KB4055269)](http://download.windowsupdate.com/d/msdownload/update/software/secu/2018/01/ndp47-kb4054183-x64_a022ad5109b1208dff502d1be4477668b4fa258d.exe)\r\n1. Follow the installation prompts, and then restart your computer if your are prompted to do this.\r\n\r\n### Workaround 2 - Uninstall the .NET Framework 4.7.1, Install .NET Framework 4.7\r\n\r\nRoll back to the previous version of .NET Framework. To do this, follow these steps:\r\n\r\n1. In Control Panel, open the Programs and Features item.\r\n1. In the Uninstall or change a program list, locate and then select Microsoft .NET Framework 4.7.1, and then select Uninstall/Change.\r\n![image](https://user-images.githubusercontent.com/2608468/34859496-5a3f11e6-f70b-11e7-82cb-5a12a4f9a633.png)\r\n1. Select Remove .NET Framework 4.7.1 from this computer, and then select Next.\r\n![image](https://user-images.githubusercontent.com/2608468/34859585-f5d50f3e-f70b-11e7-8fb9-a75e35c08767.png)\r\n1. Select Continue to confirm uninstallation.\r\n1. Select Finish after the uninstallation is finished.\r\n![image](https://user-images.githubusercontent.com/2608468/34859595-07877226-f70c-11e7-9d66-908a37ef0ded.png)\r\n1. Restart your computer if you are prompted to do this.\r\n1. Install [.NET Framework 4.7](https://www.microsoft.com/en-us/download/details.aspx?id=55170).\r\n\r\n## Issue Reports\r\n\r\n* [KB4074906 (Microsoft)](https://support.microsoft.com/en-us/help/4074906)\r\n* [0xd4d/dnSpy #692](https://github.com/0xd4d/dnSpy/issues/692)\r\n* [Wox-launcher/Wox #1823](https://github.com/Wox-launcher/Wox/issues/1823)\r\n"},{"Id":"7076404590","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:02:02","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/52","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0764: Denial of Service when parsing XML documents\" (#52) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0764\r\n## Denial of Service when parsing XML documents\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 1.1, and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a Denial of Service vulnerability in all public versions of .NET core due to improper processing of XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application. A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET core handles XML document processing.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.9, 1.1.6 and 2.0.5. Developers are advised to update their .NET Core SDK to version 2.1.4 or 1.1.7. These runtime and SDK versions will also address CVE-2018-0786,  https://github.com/dotnet/announcements/issues/51\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n## Affected Software\r\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected runtime versions listed below\r\n\r\n Runtime Version | Fixed runtime version\r\n----------------| -------------------------\r\n1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7, 1.0.8 | 1.0.9\r\n1.1.0, 1.1.1, 1.1.2, 1.1.4, 1.1.5 | 1.1.6\r\n2.0.0, 2.0.3, 2.0.4 |  2.0.5\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\ |\r\n| macOS | /usr/local/share/dotnet/shared/Microsoft.NETCore.App/    |\r\n| Supported Linux platforms | /usr/share/dotnet/shared/Microsoft.NETCore.App/   |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 1.0.9, 1.1.6 or 2.0.2 then any applications targeting .NET Core will be vulnerable. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by installing the latest runtimes or SDKs. Typically application servers only install a runtime package, developer machines install SDKs. Installers can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). Runtime version 1.1.6 will also install runtime version 1.0.9.\r\n\r\nIf you have built a [self-contained application](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the [application.runtime.config](https://github.com/dotnet/cli/blob/ede74b6be1406ba0c086b6d5fc1a5d4eacff1f01/Documentation/specs/runtime-configuration-file.md#appnameruntimeconfigjson) file for that application and editing the framework version and setting `rollForward` to `false`. This should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nNote that this file is optional, you may need to create it for each application alongside the executable.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0764](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0764)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  "},{"Id":"7076401836","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:01:26","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/51","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0786: Security Feature Bypass in X509 Certificate Validation\" (#51) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0786\r\n## Security Feature Bypass in X509 Certificate Validation\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 1.1, and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly. \r\n\r\nMicrosoft is aware of a security vulnerability in the public versions of .NET Core where an attacker could present a certificate that is marked invalid for a specific use, but a component uses it for that purpose. This action disregards the Enhanced Key Usage tagging.\r\n\r\nThe security update addresses the vulnerability by ensuring that .NET Core components completely validate certificates.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.9, 1.1.6 and 2.0.5. Developers are advised to update their .NET Core SDK to version 2.1.4 or 1.1.7. These runtime and SDK versions will also address CVE-2018-0764 ***** TODO: ADD LINK TO OTHER ISSUE *****\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n## Affected Software\r\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected runtime versions listed below\r\n\r\n Runtime Version | Fixed runtime version\r\n----------------| -------------------------\r\n1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7, 1.0.8 | 1.0.9\r\n1.1.0, 1.1.1, 1.1.2, 1.1.4, 1.1.5 | 1.1.6\r\n2.0.0, 2.0.3, 2.0.4 |  2.0.5\r\n\r\nThis vulnerability also affects any .NET native applications using the following NuGet packages.\r\n\r\nNuGet Packages | Fixed NuGet Packages\r\n-- | --\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.2.* (contains   .NET native 1.4.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.2.4\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.3.* (contains   .NET native 1.6.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.3.5\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.4.* (contains   .NET native 1.7.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.4.2\r\nMicrosoft.NETCore.UniversalWindowsPlatform 6.0.* (contains   .NET native 2.0.*) | Microsoft.NETCore.UniversalWindowsPlatform 6.0.6\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\ |\r\n| macOS | /usr/local/share/dotnet/shared/Microsoft.NETCore.App/    |\r\n| Supported Linux platforms | /usr/share/dotnet/shared/Microsoft.NETCore.App/   |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 1.0.9, 1.1.6 or 2.0.2 then any applications targeting .NET Core will be vulnerable. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by installing the latest runtimes or SDKs. Typically application servers only install a runtime package, developer machines install SDKs. Installers can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). Runtime version 1.1.6 will also install runtime version 1.0.9.\r\n\r\nIf you have built a [self-contained application](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n#### How do I fix my .NET native application? \r\n\r\n.NET native requires that applications be re-processed by the .NET native compiler to incorporate the fixes and the re-processed version needs to be distributed via the Windows Store.\r\n\r\nWe recommend that you update your .NET UWP apps to use the latest minor version of the `Microsoft.NETCore.UniversalWindowsPlatform` NuGet package so that you can build and verify that your app works as expected when updated. If you are using version 6.0.x, you should update to 6.0.6 and if you’re using 5.2.x, you can update to 5.2.4. Of course, you can update to a higher major version too, but we are distributing security updates for all impacted major versions (currently 5.2.x, 5.3.x, 5.4.x and 6.0.x). Additionally, whether or not you update your NuGet packages, all applications submitted to the store after today will be automatically fixed during submission processing.\r\n\r\nIf you do not update your app in the Store, it will automatically be reprocessed and distributed via an application update in the next few weeks. Users who have automatic app updates enabled will get the fix with no intervention on your or their parts. Because updated apps are distributed through the Windows Store, sideloaded apps will not be automatically updated. We recommend that developers who distribute sideloaded apps update the affected NuGet packages, rebuild their applications and distribute them to their users.\r\n\r\nMicrosoft is committed to keeping UWP applications secure and to supporting developers. If you have feedback on the fix distribution process, please let us know at dotnetnative@microsoft.com. \r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the [application.runtime.config](https://github.com/dotnet/cli/blob/ede74b6be1406ba0c086b6d5fc1a5d4eacff1f01/Documentation/specs/runtime-configuration-file.md#appnameruntimeconfigjson) file for that application and editing the framework version and setting `rollForward` to `false`. This should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nNote that this file is optional, you may need to create it for each application alongside the executable.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0786](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0786)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_"},{"Id":"6948315401","Type":"IssuesEvent","CreatedAt":"2017-12-05T23:41:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Closed issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Referencing #29.\r\n\r\nWill it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"},{"Id":"6944555922","Type":"IssuesEvent","CreatedAt":"2017-12-05T10:46:06","Actor":"tioduke","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Opened issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Will it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7148196631","Type":"PullRequestEvent","CreatedAt":"2018-01-25T05:24:03","Actor":"jashook","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15813","RelatedDescription":"Merged pull request \"Add innerloop tag for pri0 jobs\" (#15813) at dotnet/coreclr","RelatedBody":"Everything that is not innerloop will run priority 1."},{"Id":"7147953763","Type":"PullRequestEvent","CreatedAt":"2018-01-25T03:42:18","Actor":"mmitche","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16009","RelatedDescription":"Opened pull request \"Ensure signing of cross targeting components\" (#16009) at dotnet/coreclr","RelatedBody":""},{"Id":"7147806821","Type":"PullRequestEvent","CreatedAt":"2018-01-25T02:49:08","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/16008","RelatedDescription":"Opened pull request \"WIP No Merge [Arm64] Add HWIntrinsic test\" (#16008) at dotnet/coreclr","RelatedBody":""}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7147789654","Type":"IssuesEvent","CreatedAt":"2018-01-25T02:42:56","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8471","RelatedDescription":"Opened issue \"Message from NuGet is not localized\" (#8471) at dotnet/cli","RelatedBody":"“Restoring Packages for” \r\n“Generating msbuild file” \r\n“Restore completed in xxx.xx ms for” "},{"Id":"7147677336","Type":"PullRequestEvent","CreatedAt":"2018-01-25T02:06:08","Actor":"nugetlurker","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8470","RelatedDescription":"Opened pull request \"Insert NuGet Build 4.6.0-rtm-4859 into cli\" (#8470) at dotnet/cli","RelatedBody":"Insert NuGet Build 4.6.0-rtm-4859 into cli release/2.1.1xx branch"},{"Id":"7147669348","Type":"PullRequestEvent","CreatedAt":"2018-01-25T02:03:20","Actor":"nugetlurker","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/8464","RelatedDescription":"Closed pull request \"Insert NuGet Build 4.6.0-rtm-4859 into cli\" (#8464) at dotnet/cli","RelatedBody":"Insert NuGet Build 4.6.0-rtm-4859 into cli master branch"},{"Id":"7147668036","Type":"PullRequestEvent","CreatedAt":"2018-01-25T02:02:53","Actor":"nugetlurker","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/8469","RelatedDescription":"Closed pull request \"Insert NuGet Build 4.6.0-rtm-4859 into cli\" (#8469) at dotnet/cli","RelatedBody":"Insert NuGet Build 4.6.0-rtm-4859 into cli release/2.1.1xx branch"},{"Id":"7147646486","Type":"PullRequestEvent","CreatedAt":"2018-01-25T01:55:27","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8468","RelatedDescription":"Merged pull request \"Remove PackageToProjectFileAdder\" (#8468) at dotnet/cli","RelatedBody":"Add reference to project with version * is doing the same thing\r\n"},{"Id":"7147548547","Type":"PullRequestEvent","CreatedAt":"2018-01-25T01:21:54","Actor":"nugetlurker","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8469","RelatedDescription":"Opened pull request \"Insert NuGet Build 4.6.0-rtm-4859 into cli\" (#8469) at dotnet/cli","RelatedBody":"Insert NuGet Build 4.6.0-rtm-4859 into cli release/2.1.1xx branch"},{"Id":"7147487593","Type":"IssuesEvent","CreatedAt":"2018-01-25T01:01:45","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/7358","RelatedDescription":"Closed issue \"Consume the RHEL docker image with sudo already in\" (#7358) at dotnet/cli","RelatedBody":"\r\n\r\n"},{"Id":"7147469032","Type":"PullRequestEvent","CreatedAt":"2018-01-25T00:55:39","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8468","RelatedDescription":"Opened pull request \"Remove PackageToProjectFileAdder\" (#8468) at dotnet/cli","RelatedBody":"Add reference to project with version * is doing the same thing\r\n"},{"Id":"7147288623","Type":"IssuesEvent","CreatedAt":"2018-01-24T23:56:05","Actor":"johnbeisner","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8375","RelatedDescription":"Closed issue \"Run-Build.sh/ps1 does not behave correctly when passing in a target \" (#8375) at dotnet/cli","RelatedBody":"Related: https://github.com/dotnet/cli/issues/8358\r\n\r\nWhen passing in a 'target' on the command line from Build.sh/cmd; the target is attempted on the first pass call to \"dotnet msbuild build.proj\". This causes unpredictable results.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7146888746","Type":"IssuesEvent","CreatedAt":"2018-01-24T22:12:48","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8467","RelatedDescription":"Closed issue \"How does --additional-deps work along with --additionalprobingpath\" (#8467) at dotnet/cli","RelatedBody":"First of all, what I'm trying to do here is to run an assembly as a container to be reused by multiple other assemblies. So I would like to run something like\r\n> dotnet MyHost.dll MyImplementation.dll\r\n\r\nwhere MyHost.dll is reused and sets up the runtime for MyImplementation.dll (which contains webapi controllers). In order for that to work, the dotnet cli will need to understand what it needs to load. I've been reading [this](http://www.natemcmaster.com/blog/2017/12/21/netcore-primitives/) and I'm able to get it to work by manually crafting the deps.json file. However, I'm trying to use the existing tooling for this and I was under the impression that the --addtional-deps and --additionalprobingpath were to be used for this. However, I cannot get this to work.\r\n[NetCoreLoaderTest.zip](https://github.com/dotnet/cli/files/1661603/NetCoreLoaderTest.zip)\r\n\r\n\r\n## Steps to reproduce\r\nUse the added solution. \r\nWhat I'm trying to find out is what the difference is between running with --additional-deps and having a project reference.\r\n\r\n## Expected  behavior\r\nRunning with additional-deps is equivalent to merging the deps.json files and/or running with a project reference. I would expect it to be the equivalent of 'merging' the deps.json files together.\r\n\r\n## Actual behavior\r\nHaving a project reference, building the solution and starting it (in the bin/debug/netcoreapp2.0 folder) using\r\n> dotnet NetCoreLoaderTest.dll\r\n\r\nworks\r\n\r\nRemoving the project reference and running it like this (again in the bin/debug/netcoreapp2.0 folder):\r\n> dotnet --additional-deps ..\\..\\..\\..\\Dep\r\nendentProject\\bin\\Debug\\netcoreapp2.0\\DependentProject.deps.json --additionalprobingpath ..\\..\\..\\..\\DependentProject\\bi\r\nn\\Debug\\netcoreapp2.0\\ .\\NetCoreLoaderTest.dll\r\n\r\ndoes not work. It crashes with:\r\n>Processing TPA for deps entry [DependentProject, 1.0.0, DependentProject.dll]\r\n  Considering entry [DependentProject/1.0.0/DependentProject.dll] and probe dir [C:\\Program Files\\dotnet\\shared\\Microsof\r\nt.NETCore.App\\2.0.5]\r\n    Skipping... probe in deps json failed\r\n    Skipping... not found in probe dir 'C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\2.0.5'\r\n  Considering entry [DependentProject/1.0.0/DependentProject.dll] and probe dir []\r\n    Local path query did not exist D:\\code\\sandbox\\NetCoreLoaderTest\\NetCoreLoaderTest\\bin\\Debug\\netcoreapp2.0\\Dependent\r\nProject.dll\r\n    Skipping... probe in deps dir 'D:\\code\\sandbox\\NetCoreLoaderTest\\NetCoreLoaderTest\\bin\\Debug\\netcoreapp2.0\\' failed\r\n    Skipping... not found in probe dir ''\r\n  Considering entry [DependentProject/1.0.0/DependentProject.dll] and probe dir [C:\\Program Files\\dotnet\\store\\x64\\netco\r\nreapp2.0]\r\n    Relative path query did not exist C:\\Program Files\\dotnet\\store\\x64\\netcoreapp2.0\\DependentProject\\1.0.0\\DependentPr\r\noject.dll\r\n    Skipping... not found in probe dir 'C:\\Program Files\\dotnet\\store\\x64\\netcoreapp2.0'\r\n  **Considering entry [DependentProject/1.0.0/DependentProject.dll] and probe dir [D:\\code\\sandbox\\NetCoreLoaderTest\\Depen\r\ndentProject\\bin\\Debug\\netcoreapp2.0\\]\r\n    Relative path query did not exist D:\\code\\sandbox\\NetCoreLoaderTest\\DependentProject\\bin\\Debug\\netcoreapp2.0\\Depende\r\nntProject\\1.0.0\\DependentProject.dll\r\n    Skipping... not found in probe dir** 'D:\\code\\sandbox\\NetCoreLoaderTest\\DependentProject\\bin\\Debug\\netcoreapp2.0\\'\r\n  Considering entry [DependentProject/1.0.0/DependentProject.dll] and probe dir [C:\\Users\\jvanbakel\\.nuget\\packages]\r\n    Relative path query did not exist C:\\Users\\jvanbakel\\.nuget\\packages\\DependentProject\\1.0.0\\DependentProject.dll\r\n    Skipping... not found in probe dir 'C:\\Users\\jvanbakel\\.nuget\\packages'\r\n  Considering entry [DependentProject/1.0.0/DependentProject.dll] and probe dir [C:\\Program Files\\dotnet\\sdk\\NuGetFallba\r\nckFolder]\r\n    Relative path query did not exist C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\DependentProject\\1.0.0\\DependentPr\r\noject.dll\r\n    Skipping... not found in probe dir 'C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder'\r\nError:\r\n  An assembly specified in the application dependencies manifest (DependentProject.deps.json) was not found:\r\n    package: 'DependentProject', version: '1.0.0'\r\n    path: 'DependentProject.dll'\r\n\r\nSo from the bold lines, I'm taking that for some reason it thinks it is a package now?\r\n\r\nMy other solution was to copy all the files into one folder (so the output from both projects) and then run:\r\n> dotnet --additional-deps .\\DependentProj\r\nect.deps.json .\\NetCoreLoaderTest.dll\r\n\r\nBut that crashes with\r\n>Unhandled Exception: System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.DllNotFoundException: Unable to load DLL 'sni.dll': The specified module could not be found. (Exception from HRESULT: 0x8007007E)\r\n\r\nso that doesn't seem to load the runtime dependencies?\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Command Line Tools (2.1.4)\r\n\r\nProduct Information:\r\n Version:            2.1.4\r\n Commit SHA-1 hash:  5e8add2190\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.15063\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.4\\\r\n\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7147470769","Type":"PullRequestEvent","CreatedAt":"2018-01-25T00:56:13","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/627","RelatedDescription":"Merged pull request \"Update BuildTools to prerelease-02423-02 (master)\" (#627) at dotnet/standard","RelatedBody":""},{"Id":"7143189352","Type":"IssuesEvent","CreatedAt":"2018-01-24T09:56:56","Actor":"cincuranet","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/628","RelatedDescription":"Opened issue \"Adding ITuple to .NET Standard\" (#628) at dotnet/standard","RelatedBody":"The `ITuple` interface is available in .NET Core 2.0 and .NET Framework 4.7.1. Is there anything preventing it being added to .NET Standard as well? The `ValueTuple` itself is part of .NET Standard."},{"Id":"7140329255","Type":"PullRequestEvent","CreatedAt":"2018-01-23T20:13:01","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/627","RelatedDescription":"Opened pull request \"Update BuildTools to prerelease-02423-01 (master)\" (#627) at dotnet/standard","RelatedBody":""},{"Id":"7140094288","Type":"PullRequestEvent","CreatedAt":"2018-01-23T19:26:10","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/622","RelatedDescription":"Merged pull request \"Update BuildTools to prerelease-02422-01 (master)\" (#622) at dotnet/standard","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7148066644","Type":"IssuesEvent","CreatedAt":"2018-01-25T04:28:28","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/26584","RelatedDescription":"Opened issue \"Add AsString() extension method to ReadOnlySpan<char>\" (#26584) at dotnet/corefx","RelatedBody":"## Rationale\r\nWe have the ability to create a string from a ReadOnlySpan\\<char\\> in .NET Core (https://github.com/dotnet/corefx/blob/master/src/System.Runtime/ref/System.Runtime.cs#L2215).\r\n```C#\r\npublic String(System.ReadOnlySpan<char> value) { }\r\n```\r\nHowever, someone using the portable System.Memory does not have the ability to convert a ReadOnlySpan\\<char\\> into a string.\r\n\r\nWe can resolve that by providing an extension method on ReadOnlySpan\\<char\\>. **Note:** This will clearly result in an allocation.\r\n\r\n## API Proposal\r\n```C#\r\nnamespace System\r\n{\r\n    public static partial class MemoryExtensions\r\n    {\r\n        public static string AsString(this ReadOnlySpan<char> source);\r\n    }\r\n}\r\n```\r\n\r\n## Notes\r\nThe .NET Core implementation of this would just call the string constructor in corelib under the covers.\r\n\r\nThere is probably a way to get to the underlying string from the Pinnable\\<char\\> internal field for the portable span as well. Otherwise, we could copy the string data. Something like:\r\n```C#\r\npublic static unsafe string AsString(this System.ReadOnlySpan<char> source)\r\n{\r\n    string result = new string(' ', source.Length);\r\n    fixed (char* dest = result, src = &MemoryMarshal.GetReference(source))\r\n    {\r\n        for (int i = 0; i < source.Length; i++)\r\n        {\r\n            *(dest + i) = *(src + i);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n```\r\n\r\nThis could be useful, if you need to, let's say combine the Directory property on FindData with a filename string to generate a full path (from https://github.com/dotnet/corefx/issues/25873). \r\n## Sample Usage\r\n```C#\r\nstring directory = FindData<T>.Directory;\r\nReadOnlySpan<char> fileNameSpan = FindData<T>.FileName;\r\nstring fullPath = directory + fileNameSpan.AsString();\r\n\r\nAssert.Equal(\"Hello\", \"Hello\".AsReadOnlySpan().AsString());\r\n```\r\n\r\ncc @KrzysztofCwalina, @jkotas, @stephentoub, @dotnet/corefxlab-contrib "},{"Id":"7148008633","Type":"PullRequestEvent","CreatedAt":"2018-01-25T04:03:47","Actor":"bartonjs","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/26583","RelatedDescription":"Opened pull request \"Port ECDiffieHellman to .NET Core\" (#26583) at dotnet/corefx","RelatedBody":"This brings the ECDiffieHellman class as-is from .NET Framework (last edited\r\nfor net462) to System.Security.Cryptography.Algorithms, and the\r\nECDiffieHellmanCng class as-is to System.Security.Cryptography.Cng, and adds\r\nECDiffieHellmanOpenSsl to System.Security.Cryptography.OpenSsl.\r\n\r\nA fair amount of this change is factoring out ECDSA code to general ECC code\r\nfor each of the platforms.\r\n\r\nSince there isn't obvious value in having public ECDiffieHellmanPublicKey\r\nderived types, ECDiffieHellmanOpenSslPublicKey is not public.\r\n\r\nFixes #8158."},{"Id":"7147931750","Type":"PullRequestEvent","CreatedAt":"2018-01-25T03:33:52","Actor":"agocke","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/26582","RelatedDescription":"Closed pull request \"Add another Zip IEnumerable<T> extension method\" (#26582) at dotnet/corefx","RelatedBody":"There's already a Zip extension method that takes two IEnumerables\r\nand a result selector Func that's meant to combine the elements\r\nof the enumerables in some way. Perhaps the most common use of this\r\nmethod is to just create a tuple, so I've added an overload which\r\nremoves the result selector and instead produces a ValueTuple by\r\ndefault."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7148208261","Type":"IssuesEvent","CreatedAt":"2018-01-25T05:28:48","Actor":"jessejiang0214","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24442","RelatedDescription":"Opened issue \"CSharpScript cannot run in Android and iOS\" (#24442) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nInstall from nuget 2.6.1 for CSharp.Scripting\r\n**Steps to Reproduce**:\r\n\r\n1. Create Xamarin project\r\n2. Put these code in \r\n```\r\n            runBtn.Clicked += async (sender, e) => {\r\n                using (var loader = new InteractiveAssemblyLoader())\r\n                {\r\n                    loader.RegisterDependency(typeof(object).Assembly);\r\n                    loader.RegisterDependency(typeof(Enumerable).Assembly);\r\n                    var script = CSharpScript.Create<int>(\"1 + 2\", assemblyLoader: loader);\r\n\r\n                    var result = await script.RunAsync();\r\n                    outputLabel.Text = result.ToString(); \r\n                }\r\n\r\n\r\n            };\r\n```\r\n3. Run and crash both Android and iOS\r\n\r\n**Expected Behavior**:\r\nIt should return 3 as a result \r\n**Actual Behavior**:\r\nIn Android, it throws \r\n`\r\nSystem.IO.FileNotFoundException: Could not find file \"/mscorlib.dll\"\r\n`\r\nIn iOS it throws \r\n```\r\nSystem.TypeInitializationException: The type initializer for 'AppContext' threw an exception. ---> System.ArgumentNullException: Value cannot be null.\r\nParameter name: type\r\n  at System.Reflection.IntrospectionExtensions.GetTypeInfo (System.Type type) [0x00009] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.6.1.3/src/mono/mcs/class/referencesource/mscorlib/system/reflection/introspectionextensions.cs:26\r\n  at Microsoft.CodeAnalysis.CoreClrShim+AppContext..cctor () [0x0000f] in <7d37a385ddd24eeb96bd540d739cc157>:0\r\n  --- End of inner exception stack trace ---\r\n  at Microsoft.CodeAnalysis.Scripting.Hosting.RuntimeMetadataReferenceResolver.ResolveTrustedPlatformAssemblyCore (System.String name, Microsoft.CodeAnalysis.MetadataReferenceProperties properties) [0x00007] in <7d37a385ddd24eeb96bd540d739cc157>:0\r\n  at Microsoft.CodeAnalysis.Scripting.Hosting.RuntimeMetadataReferenceResolver.ResolveReference (System.String reference, System.String baseFilePath, Microsoft.CodeAnalysis.MetadataReferenceProperties properties) [0x000d8] in <7d37a385ddd24eeb96bd540d739cc157>:0\r\n  at Microsoft.CodeAnalysis.Scripting.Script.GetReferencesForCompilation (Microsoft.CodeAnalysis.CommonMessageProvider messageProvider, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, Microsoft.CodeAnalysis.MetadataReference languageRuntimeReferenceOpt) [0x000b5] in <7d37a385ddd24eeb96bd540d739cc157>:0\r\n  at Microsoft.CodeAnalysis.CSharp.Scripting.CSharpScriptCompiler.CreateSubmission (Microsoft.CodeAnalysis.Scripting.Script script) [0x00021] in <c0e694fe65c94345b710ccb0d4c64a74>:0\r\n  at Microsoft.CodeAnalysis.Scripting.Script.GetCompilation () [0x00008] in <7d37a385ddd24eeb96bd540d739cc157>:0\r\n  at Microsoft.CodeAnalysis.Scripting.Script`1[T].GetExecutor (System.Threading.CancellationToken cancellationToken) [0x00008] in <7d37a385ddd24eeb96bd540d739cc157>:0\r\n  at Microsoft.CodeAnalysis.Scripting.Script`1[T].RunAsync (System.Object globals, System.Func`2[T,TResult] catchException, System.Threading.CancellationToken cancellationToken) [0x0001b] in <7d37a385ddd24eeb96bd540d739cc157>:0\r\n  at TestRoslyn.TestRoslynPage+<<-ctor>b__0_0>d.MoveNext () [0x00075] in /Users/jesse/Documents/Project/TestRoslyn/TestRoslynPage.xaml.cs:127\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.6.1.3/src/mono/mcs/class/referencesource/mscorlib/system/runtime/exceptionservices/exceptionservicescommon.cs:152\r\n  at System.Runtime.CompilerServices.AsyncMethodBuilderCore+<>c.<ThrowAsync>b__6_0 (System.Object state) [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.6.1.3/src/mono/mcs/class/referencesource/mscorlib/system/runtime/compilerservices/AsyncMethodBuilder.cs:1018\r\n  at UIKit.UIKitSynchronizationContext+<Post>c__AnonStorey0.<>m__0 () [0x00000] in /Users/builder/data/lanes/5665/f70a1348/source/xamarin-macios/src/UIKit/UIKitSynchronizationContext.cs:24\r\n  at Foundation.NSAsyncActionDispatcher.Apply () [0x00000] in /Users/builder/data/lanes/5665/f70a1348/source/xamarin-macios/src/Foundation/NSAction.cs:163\r\n  at at (wrapper managed-to-native) UIKit.UIApplication:UIApplicationMain (int,string[],intptr,intptr)\r\n  at UIKit.UIApplication.Main (System.String[] args, System.IntPtr principal, System.IntPtr delegate) [0x00005] in /Users/builder/data/lanes/5665/f70a1348/source/xamarin-macios/src/UIKit/UIApplication.cs:79\r\n  at UIKit.UIApplication.Main (System.String[] args, System.String principalClassName, System.String delegateClassName) [0x00038] in /Users/builder/data/lanes/5665/f70a1348/source/xamarin-macios/src/UIKit/UIApplication.cs:63\r\n  at TestRoslyn.iOS.Application.Main (System.String[] args) [0x00001] in /Users/jesse/Documents/Project/TestRoslyn/iOS/Main.cs:17\r\n```\r\n\r\nI haven't tested with iOS device, cause I know Mono has this issue https://github.com/mono/mono/issues/6616, but Mono works on iOS simulator.\r\n"},{"Id":"7147982525","Type":"PullRequestEvent","CreatedAt":"2018-01-25T03:53:15","Actor":"jasonmalinowski","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24441","RelatedDescription":"Opened pull request \"Merge dev15.6.x into dev15.6.x-vs-deps\" (#24441) at dotnet/roslyn","RelatedBody":"Merging last changes prior to final insertion."},{"Id":"7147870933","Type":"PullRequestEvent","CreatedAt":"2018-01-25T03:11:57","Actor":"jasonmalinowski","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24405","RelatedDescription":"Closed pull request \"Pull dev15.6.x into dev15.6.x-vs-deps\" (#24405) at dotnet/roslyn","RelatedBody":"Snap so we can get a signed build tonight."},{"Id":"7147866012","Type":"PullRequestEvent","CreatedAt":"2018-01-25T03:10:02","Actor":"jasonmalinowski","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24440","RelatedDescription":"Merged pull request \"Revert \"moved waiter from diagnostics.dll to features.dll\"\" (#24440) at dotnet/roslyn","RelatedBody":"These APIs are heavily used by TypeScript, so we need to address that before we can take it."},{"Id":"7147674434","Type":"PullRequestEvent","CreatedAt":"2018-01-25T02:05:08","Actor":"jasonmalinowski","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24440","RelatedDescription":"Opened pull request \"Revert \"moved waiter from diagnostics.dll to features.dll\"\" (#24440) at dotnet/roslyn","RelatedBody":"These APIs are heavily used by TypeScript, so we need to address that before we can take it."},{"Id":"7147669236","Type":"PullRequestEvent","CreatedAt":"2018-01-25T02:03:18","Actor":"jasonmalinowski","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24405","RelatedDescription":null,"RelatedBody":"Snap so we can get a signed build tonight."},{"Id":"7147669175","Type":"PullRequestEvent","CreatedAt":"2018-01-25T02:03:16","Actor":"jasonmalinowski","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24405","RelatedDescription":"Closed pull request \"Pull dev15.6.x into dev15.6.x-vs-deps\" (#24405) at dotnet/roslyn","RelatedBody":"Snap so we can get a signed build tonight."},{"Id":"7147643610","Type":"IssuesEvent","CreatedAt":"2018-01-25T01:54:28","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24439","RelatedDescription":"Closed issue \"EnC scenario: non-remappable regions cleanup\" (#24439) at dotnet/roslyn","RelatedBody":"```\r\nusing System;\r\n\r\nclass Program\r\n{\r\n    static void Main()\r\n    {   \r\n        // [2]\r\n        try\r\n        {\r\n            G();\r\n        }\r\n        catch (Exception) {\r\n            Console.WriteLine(1);\r\n            Console.WriteLine(2);\r\n            Console.WriteLine(3);\r\n        }\r\n        // [3]\r\n    }\r\n\r\n    static void G()\r\n    {\r\n        throw new Exception(); // breakpoint [1]\r\n    }\r\n}\r\n```\r\n\r\n1. Place breakpoints.\r\n2. F5, breakpoint 1 is hit.\r\n3. Insert line `Console.WriteLine(4);` at `// [3]`\r\n4. F10\r\n5. insert 2 lines at ```// [2]```\r\n6. F10\r\n\r\n**Expected**\r\n\r\n```Console.WriteLine(1);``` is highlighted yellow as the current IP."},{"Id":"7147642422","Type":"IssuesEvent","CreatedAt":"2018-01-25T01:54:05","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24439","RelatedDescription":"Opened issue \"EnC scenario: non-remappable regions cleanup\" (#24439) at dotnet/roslyn","RelatedBody":"```\r\nusing System;\r\n\r\nclass Program\r\n{\r\n    static void Main()\r\n    {   \r\n        // [2]\r\n        try\r\n        {\r\n            G();\r\n        }\r\n        catch (Exception) {\r\n            Console.WriteLine(1);\r\n            Console.WriteLine(2);\r\n            Console.WriteLine(3);\r\n        }\r\n        // [3]\r\n    }\r\n\r\n    static void G()\r\n    {\r\n        throw new Exception(); // breakpoint [1]\r\n    }\r\n}\r\n```\r\n\r\n1. Place breakpoints.\r\n2. F5, breakpoint 1 is hit.\r\n3. Insert line `Console.WriteLine(4);` at `// [3]`\r\n4. F10\r\n5. insert 2 lines at ```// [2]```\r\n6. F10\r\n\r\n**Expected**\r\n\r\n```Console.WriteLine(1);``` is highlighted yellow as the current IP."},{"Id":"7147489418","Type":"PullRequestEvent","CreatedAt":"2018-01-25T01:02:20","Actor":"t-camaia","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24438","RelatedDescription":"Opened pull request \"ERR_ImplBadTupleNames is now being reported in correct class\" (#24438) at dotnet/roslyn","RelatedBody":"An if statement was added to check whether we should report ERR_ImplBadTupleNames in the method or in the class declaration. Some tests were also updated.\r\n\r\nFixes #20897."},{"Id":"7147439228","Type":"PullRequestEvent","CreatedAt":"2018-01-25T00:45:44","Actor":"agocke","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24352","RelatedDescription":"Merged pull request \"Add doc describing ref-reassignment\" (#24352) at dotnet/roslyn","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7147608672","Type":"PullRequestEvent","CreatedAt":"2018-01-25T01:42:22","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5288","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#5288) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"7147573785","Type":"PullRequestEvent","CreatedAt":"2018-01-25T01:30:33","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5288","RelatedDescription":"Opened pull request \"Merge changes from TFS\" (#5288) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"7147397690","Type":"PullRequestEvent","CreatedAt":"2018-01-25T00:31:40","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5287","RelatedDescription":"Opened pull request \"[WIP] Enable CoreFX tests on CoreRT\" (#5287) at dotnet/corert","RelatedBody":"This enables running CoreFX tests on CoreRT. A couple of points\r\n\r\n- A number of tests have a dependency on the `CoreFX.Private.TestUtilities` assembly. We need a way to distribute this - as either a NuGet package or fetching built assemblies as correlation payloads from build machines. Any suggestions on this would be great.\r\n\r\n- No shell script changes - most of this change is cross-plat, but only called on Windows\r\n\r\n- Test URL - will change according to whichever version we pick, run and \"freeze\" \r\n\r\n- Some minor points marked with TODOs\r\n\r\ncc @MichalStrehovsky @jkotas @sergiy-k "},{"Id":"7145012177","Type":"PullRequestEvent","CreatedAt":"2018-01-24T16:00:15","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5286","RelatedDescription":"Merged pull request \"Reflection-block some types in CoreLib\" (#5286) at dotnet/corert","RelatedBody":"This saves 50 kB on a hello world app (~20 kB in metadata and blobs, the rest is in code).\r\n\r\nThis is using the existing ReflectionBlocked attribute to manually block public types that get otherwise blocked by the IL2IL toolchain in Project N. These types are public within the repo, but should be considered private implementation details everywhere else.\r\n\r\nWrote a small tool that would let me identify these: https://gist.github.com/MichalStrehovsky/e2ddec899d3e0db6eba95bf68694b40e. There is more."},{"Id":"7144736045","Type":"PullRequestEvent","CreatedAt":"2018-01-24T15:14:27","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5286","RelatedDescription":"Opened pull request \"Reflection-block some types in CoreLib\" (#5286) at dotnet/corert","RelatedBody":"This saves 50 kB on a hello world app.\r\n\r\nThis is using the existing ReflectionBlocked attribute to manually block public types that get otherwise blocked by the IL2IL toolchain in Project N. These types are public within the repo, but should be considered private implementation details everywhere else.\r\n\r\nWrote a small tool that would let me identify these: https://gist.github.com/MichalStrehovsky/e2ddec899d3e0db6eba95bf68694b40e. There is more."},{"Id":"7142131983","Type":"PullRequestEvent","CreatedAt":"2018-01-24T04:49:31","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5285","RelatedDescription":"Merged pull request \"Merge master to nmirror\" (#5285) at dotnet/corert","RelatedBody":""},{"Id":"7142131633","Type":"PullRequestEvent","CreatedAt":"2018-01-24T04:49:23","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5285","RelatedDescription":"Opened pull request \"Merge master to nmirror\" (#5285) at dotnet/corert","RelatedBody":""},{"Id":"7141940436","Type":"PullRequestEvent","CreatedAt":"2018-01-24T03:31:28","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5284","RelatedDescription":"Merged pull request \"Update dependencies\" (#5284) at dotnet/corert","RelatedBody":""},{"Id":"7141820397","Type":"PullRequestEvent","CreatedAt":"2018-01-24T02:48:08","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5284","RelatedDescription":"Opened pull request \"Update dependencies\" (#5284) at dotnet/corert","RelatedBody":""}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7147360776","Type":"IssuesEvent","CreatedAt":"2018-01-25T00:19:10","Actor":"natidea","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1321","RelatedDescription":"Closed issue \"VS2017 publish: project.assets.json doesn't have a target for .NETCoreApp,Version=v1.1\" (#1321) at dotnet/sdk","RelatedBody":"_From @kosa-gyula-77 on June 8, 2017 14:27_\n\nPublishing the _xunitCore1.0_ project in the solution attached from Visual Studio 2017 fails with the following error:\r\n\r\n_Assets file 'C:\\Users\\xxx\\Documents\\Visual Studio 2017\\Projects\\xunitCore1.0\\xunitCore1.0\\obj\\project.assets.json' doesn't have a target for '.NETCoreApp,Version=v1.1'. Ensure you have restored this project for TargetFramework='netcoreapp1.1' and RuntimeIdentifier=''._\r\n\r\nCould you please help in identifying why I'm getting this error? xunitCore1.0 targets netcoreapp1.0.\r\n\r\n[xunitCore1.0.zip](https://github.com/Microsoft/msbuild/files/1061297/xunitCore1.0.zip)\r\n\r\nThanks.\n\n_Copied from original issue: Microsoft/msbuild#2196_"},{"Id":"7146852195","Type":"PullRequestEvent","CreatedAt":"2018-01-24T22:04:34","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/1892","RelatedDescription":"Opened pull request \"Updating the branding to 2.1.100, to match the CLIs branding.\" (#1892) at dotnet/sdk","RelatedBody":""},{"Id":"7146329452","Type":"IssuesEvent","CreatedAt":"2018-01-24T20:12:41","Actor":"nkolev92","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/sdk/issues/1321","RelatedDescription":"Reopened issue \"VS2017 publish: project.assets.json doesn't have a target for .NETCoreApp,Version=v1.1\" (#1321) at dotnet/sdk","RelatedBody":"_From @kosa-gyula-77 on June 8, 2017 14:27_\n\nPublishing the _xunitCore1.0_ project in the solution attached from Visual Studio 2017 fails with the following error:\r\n\r\n_Assets file 'C:\\Users\\xxx\\Documents\\Visual Studio 2017\\Projects\\xunitCore1.0\\xunitCore1.0\\obj\\project.assets.json' doesn't have a target for '.NETCoreApp,Version=v1.1'. Ensure you have restored this project for TargetFramework='netcoreapp1.1' and RuntimeIdentifier=''._\r\n\r\nCould you please help in identifying why I'm getting this error? xunitCore1.0 targets netcoreapp1.0.\r\n\r\n[xunitCore1.0.zip](https://github.com/Microsoft/msbuild/files/1061297/xunitCore1.0.zip)\r\n\r\nThanks.\n\n_Copied from original issue: Microsoft/msbuild#2196_"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"955790963024257024","CreatedAt":"2018-01-23T13:14:57+00:00","UserScreenname":"dotnet","Text":"Check out @csharpfritz and @condrong at 10am ET, 15:00 UTC talking about new @AspNet Core features and benefits for… https://t.co/BLXAg7rubK","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"954763538328883201","CreatedAt":"2018-01-20T17:12:20+00:00","UserScreenname":"dotnet","Text":"Jeff is close to his first follower goal!  Follow him on Mixer or Twitch and he will host a FREE workshop live on s… https://t.co/EefnkSEqfe","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":6,"RawContent":null},{"Id":"954724179533758465","CreatedAt":"2018-01-20T14:35:56+00:00","UserScreenname":"dotnet","Text":"Join Jeff at 10am ET (-5:00 UTC) for a live coding stream about .NET, .NET Core, C#, and Visual Studio.  He'll also… https://t.co/dWA8n7Ttph","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":7,"RawContent":null},{"Id":"953279226869960704","CreatedAt":"2018-01-16T14:54:13+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz today to learn more about .NET and ask questions about .NET, .NET Core, Visual Studio or ASPNet. https://t.co/ZtyD9ubcE6","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"952185961085067266","CreatedAt":"2018-01-13T14:29:58+00:00","UserScreenname":"dotnet","Text":"Our Jeff Fritz (@csharpfritz) will be LIVE CODING again today.  Today's topic is unit testing @AspNet Core projects… https://t.co/kXZpzdtOqA","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":26,"FavoriteCount":10,"RawContent":null}]}},"RunOn":"2018-01-25T05:30:23.0919871Z","RunDurationInMilliseconds":8602}