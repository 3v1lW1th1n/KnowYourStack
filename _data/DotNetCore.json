{"Data":{"Blog":{"FeedItems":[{"Title":"Handling a new era in the Japanese calendar in .NET","PublishedOn":"2018-11-14T20:30:13+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Typically, calendar eras represent long time periods. In the Gregorian calendar, for example, the current era spans (as of this year) 2,018 years. In the Japanese calendar, however, a new era begins...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/14/handling-a-new-era-in-the-japanese-calendar-in-net/","RawContent":null},{"Title":".NET Framework November 2018 Security and Quality Rollup","PublishedOn":"2018-11-14T00:24:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the November 2018 Security and Quality Rollup. Security No new security fixes. See .NET Framework September 2018 Security and Quality Rollup for the latest security updates....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/13/net-framework-november-2018-security-and-quality-rollup/","RawContent":null},{"Title":".NET Core tooling update for Visual Studio 2017 version 15.9","PublishedOn":"2018-11-13T18:09:43+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting with Visual Studio 2017 version 15.9, we’ve changed how the Visual Studio tooling for .NET consumes .NET Core SDKs. Prior to this change, installing a preview version of the .NET Core SDK...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/13/net-core-tooling-update-for-visual-studio-2017-version-15-9/","RawContent":null},{"Title":"Cross-platform Time Zones with .NET Core","PublishedOn":"2018-11-13T18:00:21+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Developing applications that span multiple operating systems in .NET Core while working with Time Zone information can lead to unexpected results for developers not familiar with the differences in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/13/cross-platform-time-zones-with-net-core/","RawContent":null},{"Title":"Building C# 8.0","PublishedOn":"2018-11-13T00:00:02+00:00","CommentsCount":112,"FacebookCount":0,"Summary":"Building C# 8.0 The next major version of C# is C# 8.0. It&#8217;s been in the works for quite some time, even as we built and shipped the minor releases C# 7.1, 7.2 and 7.3, and I&#8217;m quite...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/12/building-c-8-0/","RawContent":null},{"Title":"Announcing ML.NET 0.7 (Machine Learning .NET)","PublishedOn":"2018-11-08T20:57:16+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We&#8217;re excited to announce today the release of ML.NET 0.7 &#8211; the latest release of the cross-platform and open source machine learning framework for .NET developers (ML.NET 0.1 was released...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/08/announcing-ml-net-0-7-machine-learning-net/","RawContent":null},{"Title":"Understanding the Whys, Whats, and Whens of ValueTask","PublishedOn":"2018-11-07T18:00:31+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"The .NET Framework 4 saw the introduction of the System.Threading.Tasks namespace, and with it the Task class. This type and the derived Task&#60;TResult&#62; have long since become a staple of .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/07/understanding-the-whys-whats-and-whens-of-valuetask/","RawContent":null},{"Title":"Announcing .NET Standard 2.1","PublishedOn":"2018-11-05T17:42:38+00:00","CommentsCount":107,"FacebookCount":0,"Summary":"Since we shipped .NET Standard 2.0 about a year ago, we&#8217;ve shipped two updates to .NET Core 2.1 and are about to release .NET Core 2.2. It&#8217;s time to update the standard to include some of...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/05/announcing-net-standard-2-1/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access build 3673","PublishedOn":"2018-10-30T19:27:39+00:00","CommentsCount":19,"FacebookCount":0,"Summary":"We are happy to share the next Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a single package that bundles the .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/30/announcing-net-framework-4-8-early-access-build-3673/","RawContent":null},{"Title":"Bringing .NET application performance analysis to Linux","PublishedOn":"2018-10-24T21:36:02+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Both the Windows and Linux ecosystems have a swath of battle-hardened performance analysis and investigation tools. But up until recently, developers and platform engineers could use none of these...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/24/bringing-net-application-performance-analysis-to-linux/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8578587104","Type":"PullRequestEvent","CreatedAt":"2018-11-13T05:53:19","Actor":"leastprivilege","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Opened pull request \"Update identityserver.md\" (#117) at dotnet/foundation","RelatedBody":"significant whitespace"},{"Id":"8578321898","Type":"PullRequestEvent","CreatedAt":"2018-11-13T04:22:33","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Merged pull request \"Update identityserver.md\" (#114) at dotnet/foundation","RelatedBody":""},{"Id":"8573927252","Type":"PullRequestEvent","CreatedAt":"2018-11-12T13:30:25","Actor":"scottbrady91","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Opened pull request \"Update to IdentityManager project\" (#116) at dotnet/foundation","RelatedBody":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo."},{"Id":"8573265026","Type":"PullRequestEvent","CreatedAt":"2018-11-12T11:25:41","Actor":"leastprivilege","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/115","RelatedDescription":"Opened pull request \"Create identitymodel.md\" (#115) at dotnet/foundation","RelatedBody":""},{"Id":"8573235551","Type":"PullRequestEvent","CreatedAt":"2018-11-12T11:20:18","Actor":"leastprivilege","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Opened pull request \"Update identityserver.md\" (#114) at dotnet/foundation","RelatedBody":""},{"Id":"8520090559","Type":"PullRequestEvent","CreatedAt":"2018-11-01T16:20:08","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Merged pull request \"Update logo for couchbase-lite in projects.json\" (#113) at dotnet/foundation","RelatedBody":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser."},{"Id":"8448824845","Type":"PullRequestEvent","CreatedAt":"2018-10-19T12:44:07","Actor":"SeanKilleen","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Opened pull request \"Update logo for couchbase-lite in projects.json\" (#113) at dotnet/foundation","RelatedBody":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65"},{"Id":"8341294365","Type":"IssuesEvent","CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Opened issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112) at dotnet/foundation","RelatedBody":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"8582735181","Type":"IssuesEvent","CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Opened issue \".NET Core November Update - 2.1.6 and SDK 2.1.500\" (#91) at dotnet/announcements","RelatedBody":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018[(https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8605773820","Type":"IssuesEvent","CreatedAt":"2018-11-17T03:36:54","Actor":"tcostin","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/21065","RelatedDescription":"Opened issue \"Runtime fails to marshal arguments, throws ArgumentException in corner case COM interop scenario\" (#21065) at dotnet/coreclr","RelatedBody":"This is a re-posting of [Roslyn issue 16177](https://github.com/dotnet/roslyn/issues/16177). Apologies for re-opening, but I ran into the problem again recently, and I have a nagging feeling that the original issue (posted via MS Connect, which is now retired) was mis-directed to the Roslyn team instead of CoreCLR. The Roslyn team decided the issue was indeed a bug and attempted to fix it, but later decided that their fix was not viable because it modified the output of tlbexp.\r\n\r\nIssue summary: in a COM interop scenario where _each_ of the following holds, the runtime will raise a managed ArgumentException from an internal helper method in mscorlib that is implemented inside the runtime.\r\n\r\n1. The COM types being referenced are embedded inside the calling assembly (Visual Studio: Embed Interop Types = true for the COM type lib reference). Note, this is the _default_ VS behavior when adding a COM reference to a managed project.\r\n2. The calling assembly does not have the [ComVisible(true)] attribute. Again, this is the _default_ for most VS project types.\r\n3. The managed code calls an unmanaged COM function that takes an argument of the form pSAFEARRAY(STRUCT), where <STRUCT> is a custom COM record type defined in the type lib.\r\n\r\nThe exception is being thrown because code internal to the runtime fails to marshal the SAFEARRAY argument. See original issue for more in-depth analysis. The workaround I typically use is to disable COM type embedding (factor 1)."},{"Id":"8605590796","Type":"PullRequestEvent","CreatedAt":"2018-11-17T01:38:02","Actor":"sandreenko","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21059","RelatedDescription":"Merged pull request \"Exclude tests/src/JIT/opt/ObjectStackAllocation/ObjectStackAllocationTests from GCStress\" (#21059) at dotnet/coreclr","RelatedBody":"Revert it when #21057 is fixed."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8605575368","Type":"IssuesEvent","CreatedAt":"2018-11-17T01:29:48","Actor":"hrumhurum","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10356","RelatedDescription":"Opened issue \"Regression in .NET SDK 500: 'dotnet tool install' fails with 401 (Unauthorized) when there is a private feed is in Nuget.config\" (#10356) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\n1. Ensure .NET SDK 2.1.500 is installed\r\n2. Ensure there is a private feed in NuGet.config that requires authentication\r\n3. dotnet tool install -g Contoso.FooBar\r\n\r\n## Expected  behavior\r\nTool 'foobar' (version '1.2.3') was successfully installed.\r\n\r\n## Actual behavior\r\nC:\\Program Files\\dotnet\\sdk\\2.1.500\\NuGet.targets(114,5): error : Failed to retrieve information about 'contoso.foobar' from remote source 'https://rd.contoso.com:12345/nuget/feed/FindPackagesById()?id='contoso.foobar'&semVerLevel=2.0.0'. [C:\\Users\\Tester\\AppData\\Local\\Temp\\h2vj5tjo.mmy\\restore.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.1.500\\NuGet.targets(114,5): error :   **Response status code does not indicate success: 401 (Unauthorized).** [C:\\Users\\Tester\\AppData\\Local\\Temp\\h2vj5tjo.mmy\\restore.csproj]\r\nThe tool package could not be restored.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.500\r\n Commit:    b68b931422\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  6.3.9600\r\n OS Platform: Windows\r\n RID:         win81-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.500\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.6\r\n  Commit:  3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.102 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n## Notes\r\nThe issue is not present in .NET Core SDK 2.1.400, e.g. it goes away when .NET Core SDK 2.1.500 is uninstalled, and reappears when SDK 2.1.500 is installed again.\r\n\r\nHere is the sample `NuGet.config` from `C:\\Users\\Tester\\Application Data\\NuGet` folder:\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <packageSources>\r\n    <add key=\"Microsoft Visual Studio Offline Packages\" value=\"C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\" />\r\n    <add key=\"Contoso R&amp;D\" value=\"https://rd.contoso.com:12345/nuget/feed\" />\r\n    <add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" protocolVersion=\"3\" />\r\n  </packageSources>\r\n  <packageRestore>\r\n    <add key=\"enabled\" value=\"True\" />\r\n    <add key=\"automatic\" value=\"True\" />\r\n  </packageRestore>\r\n  <bindingRedirects>\r\n    <add key=\"skip\" value=\"False\" />\r\n  </bindingRedirects>\r\n  <packageManagement>\r\n    <add key=\"format\" value=\"0\" />\r\n    <add key=\"disabled\" value=\"False\" />\r\n  </packageManagement>\r\n  <packageSourceCredentials>\r\n    <Contoso_x0020_R_x0026_D>\r\n      <add key=\"Username\" value=\"tester\" />\r\n      <add key=\"Password\" value=\"...\" />\r\n    </Contoso_x0020_R_x0026_D>\r\n  </packageSourceCredentials>\r\n</configuration>\r\n```\r\n\r\n"},{"Id":"8605013551","Type":"IssuesEvent","CreatedAt":"2018-11-16T22:14:29","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10338","RelatedDescription":"Closed issue \".dcproj file prevents `dotnet run` outside of docker container\" (#10338) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nIn Visual Studio 2017: File->New Project->ASP.NET Core Web Application\r\nChoose either Web API or Web Application\r\nCheck \"Enable Docker Support\"\r\n\r\nGo to command line and run\r\n```\r\ndotnet run ./[NAME]\r\n```\r\n\r\n## Expected  behavior\r\ndotnet CLI restores packages, builds the project and runs it outside of the docker container on the host OS.\r\n\r\n## Actual behavior\r\n```\r\nUnable to run your project.\r\nPlease ensure you have a runnable project type and ensure 'dotnet run' supports this project.\r\nA runnable project should target a runnable TFM (for instance, netcoreapp2.0) and have OutputType 'Exe'.\r\nThe current OutputType is 'DockerCompose'.\r\n```\r\n\r\nNote that the csproj does in fact have the OutputType of Exe; the dotnet CLI is ignoring that setting due to the presense of the .dcproj file that is generated when enabling docker support for the project.\r\n\r\n## Workaround\r\nChange directory into the project folder before using `dotnet run`. \r\n\r\nThe .dcproj file isn't in that folder so `dotnet run` doesn't detect it and runs as expected.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.500\r\n Commit:    b68b931422\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.500\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.6\r\n  Commit:  3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"8604828439","Type":"IssuesEvent","CreatedAt":"2018-11-16T21:31:29","Actor":"dsplaisted","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10106","RelatedDescription":"Closed issue \"Figure out conventions for WPF Xaml files in Sdk-style projects\" (#10106) at dotnet/cli","RelatedBody":"Currently, WPF projects for .NET Core 3.0 include explicit items for xaml files.  We should include these items implicitly if possible.  Though there are a bunch of different item templates (user control, page, window, etc), it looks like they all end up as `Page` items.  So probably we can just include `App.xaml` as an `ApplicationDefinition` item, and all other xaml files as `Page` items.\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Wpf\">​\r\n ​\r\n  <PropertyGroup>​\r\n    <OutputType>WinExe</OutputType>​\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>​\r\n  </PropertyGroup>​\r\n ​\r\n  <ItemGroup>​\r\n    <ApplicationDefinition Include=\"App.xaml\" />​\r\n    <Page Include=\"MainWindow.xaml\" />​\r\n  </ItemGroup>​\r\n ​\r\n  <ItemGroup>​\r\n    <FrameworkReference Include=\"Microsoft.DesktopUI\"/>​\r\n  </ItemGroup>​\r\n ​\r\n</Project>\r\n```\r\n\r\n## Proposal\r\n\r\nIn WPF SDK .props:\r\n\r\n- Include \"App.xaml\" as an `ApplicationDefinition` item if it exists on disk, unless `EnableDefaultApplicationDefinition` is set to false\r\n- Include all *.xaml files in project folder or subfolders as `Page` items (unless `EnableDefaultPageItems` property is set to false)\r\n\r\nIn WPF SDK .targets:\r\n\r\n- Remove all `Resource`, `Content`, and `None` items from the `Page` items.  IE: `<Page Remove=\"@(Resource);@(Content);@(None)\" />` (unless `EnableDefaultPageItems` property is set to false)\r\n\r\nThis would mean that by default, there wouldn't be any `Page` or `ApplicationDefinition` items defined in the project file.  If you wanted to use a xaml file as a different item type, you could explicitly include it in the project file, e.g. `<Resource Include=\"MyResource.xaml\" />`.  The WPF SDK .targets would then remove that file from the `Page` item.\r\n\r\nWe think that the project system currently would not understand the removal in the .targets file, which would mean that if you changed the build action of a Xaml file from Page to Resource in VS, you'd get something like the following in your project:\r\n\r\n```xml\r\n<Page Remove=\"MyResource.xaml\" />\r\n<Resource Include=\"MyResource.xaml\" />\r\n```"},{"Id":"8604827664","Type":"IssuesEvent","CreatedAt":"2018-11-16T21:31:19","Actor":"dsplaisted","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10107","RelatedDescription":"Closed issue \"Consider making FrameworkReferences implicit in WPF and Web SDKs\" (#10107) at dotnet/cli","RelatedBody":"In .NET Core 3.0, a WPF project will import the WPF SDK in its project element (`<Project Sdk=\"Microsoft.NET.Sdk.Wpf\">​`), and will also have a FrameworkReference to Microsoft.DesktopUI (`<FrameworkReference Include=\"Microsoft.DesktopUI\"/>​`).  Similarly, ASP.NET Core projects will use the `Microsoft.NET.Sdk.Web` SDK, and will have a FrameworkReference to `Microsoft.AspNetCore`.\r\n\r\nHaving to specify both the Sdk and the FrameworkReference seems redundant.  They do serve separate purposes: the FrameworkReference allows you to use the APIs in the shared framework, while the Sdk import brings in the build logic (for example, razor or xaml compilation, or default globs for the project type).\r\n\r\nWe should consider having WPF and Web SDKs by default include an implicit FrameworkReference to the corresponding shared framework, and removing the FrameworkReferences from the project templates.\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"8604248065","Type":"PullRequestEvent","CreatedAt":"2018-11-16T19:27:45","Actor":"mmitche","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10355","RelatedDescription":"Opened pull request \"Update SDK and Arcade dependencies\" (#10355) at dotnet/cli","RelatedBody":""},{"Id":"8603870101","Type":"IssuesEvent","CreatedAt":"2018-11-16T18:11:03","Actor":"amitsamanta2307","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10354","RelatedDescription":"Opened issue \"Unable to Install .NET Core 2.1 SDK and Runtime on Linux Ubuntu 18.04 x64\" (#10354) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\namit@dh77eb-ubuntu18:~$ sudo apt-get install dotnet-sdk-2.1\r\namit@dh77eb-ubuntu18:~$ sudo apt-get install aspnetcore-runtime-2.1\r\n\r\n## Expected  behavior\r\n.Net Cores should  get installed\r\n\r\n## Actual behavior\r\namit@dh77eb-ubuntu18:~$ sudo apt-get install aspnetcore-runtime-2.1\r\nReading package lists... Done\r\nBuilding dependency tree       \r\nReading state information... Done\r\nSome packages could not be installed. This may mean that you have\r\nrequested an impossible situation or if you are using the unstable\r\ndistribution that some required packages have not yet been created\r\nor been moved out of Incoming.\r\nThe following information may help to resolve the situation:\r\n\r\nThe following packages have unmet dependencies:\r\n aspnetcore-runtime-2.1 : Depends: dotnet-runtime-2.1 (>= 2.1.6) but it is not going to be installed\r\nE: Unable to correct problems, you have held broken packages.\r\n\r\namit@dh77eb-ubuntu18:~$ sudo apt-get install dotnet-sdk-2.1\r\nReading package lists... Done\r\nBuilding dependency tree       \r\nReading state information... Done\r\nSome packages could not be installed. This may mean that you have\r\nrequested an impossible situation or if you are using the unstable\r\ndistribution that some required packages have not yet been created\r\nor been moved out of Incoming.\r\nThe following information may help to resolve the situation:\r\n\r\nThe following packages have unmet dependencies:\r\n dotnet-sdk-2.1 : Depends: dotnet-runtime-2.1 (>= 2.1.6) but it is not going to be installed\r\n                  Depends: aspnetcore-runtime-2.1 (>= 2.1.6) but it is not going to be installed\r\nE: Unable to correct problems, you have held broken packages.\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\namit@dh77eb-ubuntu18:~$ dotnet --info\r\n\r\nCommand 'dotnet' not found, but can be installed with:\r\n\r\nsudo snap install dotnet-sdk\r\n\r\namit@dh77eb-ubuntu18:~$ uname -a\r\nLinux dh77eb-ubuntu18 4.15.0-39-generic #42-Ubuntu SMP Tue Oct 23 15:48:01 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\namit@dh77eb-ubuntu18:~$ lsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID:\tUbuntu\r\nDescription:\tUbuntu 18.04.1 LTS\r\nRelease:\t18.04\r\nCodename:\tbionic\r\n\r\namit@dh77eb-ubuntu18:~$ sudo add-apt-repository universe\r\n'universe' distribution component is already enabled for all sources.\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8602147237","Type":"PullRequestEvent","CreatedAt":"2018-11-16T13:16:27","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/971","RelatedDescription":"Merged pull request \"Update dependency files\" (#971) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18565.9\r\n\r\n"},{"Id":"8602071401","Type":"PullRequestEvent","CreatedAt":"2018-11-16T13:01:21","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/971","RelatedDescription":"Opened pull request \"Update dependency files\" (#971) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18565.9\r\n\r\n"},{"Id":"8595356206","Type":"PullRequestEvent","CreatedAt":"2018-11-15T13:21:29","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/970","RelatedDescription":"Merged pull request \"Update dependency files\" (#970) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18564.20\r\n\r\n"},{"Id":"8595229560","Type":"PullRequestEvent","CreatedAt":"2018-11-15T13:01:21","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/970","RelatedDescription":"Opened pull request \"Update dependency files\" (#970) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18564.20\r\n\r\n"},{"Id":"8588084500","Type":"PullRequestEvent","CreatedAt":"2018-11-14T13:12:05","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/969","RelatedDescription":"Merged pull request \"Update dependency files\" (#969) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18563.21\r\n\r\n"},{"Id":"8588027346","Type":"PullRequestEvent","CreatedAt":"2018-11-14T13:01:58","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/969","RelatedDescription":"Opened pull request \"Update dependency files\" (#969) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18563.21\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8605551801","Type":"PullRequestEvent","CreatedAt":"2018-11-17T01:18:13","Actor":"mmitche","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/33562","RelatedDescription":"Merged pull request \"Fixes extract out of directory by ensuring trailing separator for nested paths\" (#33562) at dotnet/corefx","RelatedBody":"…ted paths. (#32165)\r\n\r\nRelated to PR #32127"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"8605840309","Type":"PullRequestEvent","CreatedAt":"2018-11-17T04:29:08","Actor":"ivanbasov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/31223","RelatedDescription":"Merged pull request \"Revert \"Cleanup IVTs for 15.7 and 15.8 since they won't be loaded in 16.0\" (#31223) at dotnet/roslyn","RelatedBody":"This reverts commit 166349c8ce72f9b708779233fa7c9f561271f058."},{"Id":"8605722697","Type":"PullRequestEvent","CreatedAt":"2018-11-17T03:00:07","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/31174","RelatedDescription":"Merged pull request \"Merge dev16.0.x to dev16.0-preview2\" (#31174) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from dev16.0.x into dev16.0-preview2.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0.x-to-dev16.0-preview2\ngit reset --hard upstream/dev16.0-preview2\ngit merge upstream/dev16.0.x\n# Fix merge conflicts\ngit commit\ngit push merges/dev16.0.x-to-dev16.0-preview2 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8605678578","Type":"PullRequestEvent","CreatedAt":"2018-11-17T02:30:05","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/31228","RelatedDescription":"Merged pull request \"Merge dev16.0.x to dev16.0.x-vs-deps\" (#31228) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from dev16.0.x into dev16.0.x-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0.x-to-dev16.0.x-vs-deps\ngit reset --hard upstream/dev16.0.x-vs-deps\ngit merge upstream/dev16.0.x\n# Fix merge conflicts\ngit commit\ngit push merges/dev16.0.x-to-dev16.0.x-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8605630896","Type":"PullRequestEvent","CreatedAt":"2018-11-17T02:00:05","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/31229","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#31229) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8605151710","Type":"PullRequestEvent","CreatedAt":"2018-11-16T22:50:29","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6588","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr,corefx\" (#6588) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh"},{"Id":"8605151195","Type":"PullRequestEvent","CreatedAt":"2018-11-16T22:50:20","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6587","RelatedDescription":"Merged pull request \"Disambiguate Span indexer intrinsic\" (#6587) at dotnet/corert","RelatedBody":"Port https://github.com/dotnet/coreclr/issues/21051 to CoreRT"},{"Id":"8604914044","Type":"PullRequestEvent","CreatedAt":"2018-11-16T21:50:56","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6590","RelatedDescription":"Opened pull request \"Further CPAOT infra fixes for release mode support\" (#6590) at dotnet/corert","RelatedBody":"1) Pass the proper configuration and architecture to msbuild when\r\nrestoring XUnitTooling so that it gets restored into the proper\r\nfolder - this fixes building the CoreCLR tests in release mode.\r\n\r\n2) Set the 'Optimize' property for Microsoft.NetCore.Native.targets\r\nin CoreCLR test and framework assembly build to actually make a\r\ndifference w.r.t. release codegen by passing '-O' to ILC.\r\n\r\n3) Update comments in the R2R test scripts to indicate we now\r\nsupport per-configuration output folders.\r\n\r\nThanks\r\n\r\nTomas\r\n\r\nP.S. Top200 tests have approximately the same pass rate in\r\ndebug and release mode (debug reports 6~8 errors, release 8~9 errors\r\nin my local testing).\r\n\r\nFramework assembly compilation in release mode has somewhat worse\r\npass rate, 110 out of the 152 assemblies build amounting to about\r\n72% pass rate."},{"Id":"8603702036","Type":"PullRequestEvent","CreatedAt":"2018-11-16T17:37:42","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6589","RelatedDescription":"Opened pull request \"Try to include System.Data.Common in the framework\" (#6589) at dotnet/corert","RelatedBody":""},{"Id":"8603634291","Type":"PullRequestEvent","CreatedAt":"2018-11-16T17:24:28","Actor":"dotnet-maestro-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6588","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#6588) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"8603613099","Type":"PullRequestEvent","CreatedAt":"2018-11-16T17:20:28","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6586","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#6586) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas"},{"Id":"8603490595","Type":"PullRequestEvent","CreatedAt":"2018-11-16T16:58:28","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6587","RelatedDescription":"Opened pull request \"Disambiguate Span indexer intrinsic\" (#6587) at dotnet/corert","RelatedBody":"Port https://github.com/dotnet/coreclr/issues/21051 to CoreRT"},{"Id":"8603305881","Type":"PullRequestEvent","CreatedAt":"2018-11-16T16:28:06","Actor":"dotnet-maestro-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6586","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#6586) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"8602418271","Type":"IssuesEvent","CreatedAt":"2018-11-16T14:05:34","Actor":"akinohana","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/6585","RelatedDescription":"Opened issue \"ILC Reported  FileLoadErrorGeneric: System.Data.Common when using [Newtonsoft.Json]\" (#6585) at dotnet/corert","RelatedBody":"This happened when I using CoreRT to build a static library, is it a something not done yet or am I doing anything wrong?\r\n\r\n![image](https://user-images.githubusercontent.com/29968862/48625983-a9ca6480-e9eb-11e8-83a3-38ba0bb8a53f.png)\r\n\r\n\r\n```\r\nEXEC : warning : Method `[Newtonsoft.Json]Newtonsoft.Json.Converters.DataTableConverter.CanConvert(Type)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: System.Data.Common [H:\\project\\newNuget\\HelloWorld\\Main.csproj]\r\nEXEC : warning : Method `[Newtonsoft.Json]Newtonsoft.Json.Converters.DataSetConverter.CanConvert(Type)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: System.Data.Common [H:\\project\\newNuget\\HelloWorld\\Main.csproj]\r\nEXEC : warning : Method `[Newtonsoft.Json]Newtonsoft.Json.Converters.BinaryConverter.CanConvert(Type)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: System.Data.Common [H:\\project\\newNuget\\HelloWorld\\Main.csproj]\r\nEXEC : warning : Method `[Newtonsoft.Json]Newtonsoft.Json.Converters.BinaryConverter.GetByteArray(object)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: System.Data.Common [H:\\project\\newNuget\\HelloWorld\\Main.csproj]\r\nEXEC : warning : Method `[Newtonsoft.Json]Newtonsoft.Json.Converters.DataTableConverter.WriteJson(JsonWriter,object,JsonSerializer)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: System.Data.Common [H:\\project\\newNuget\\HelloWorld\\Main.csproj]\r\nEXEC : warning : Method `[Newtonsoft.Json]Newtonsoft.Json.Converters.DataSetConverter.WriteJson(JsonWriter,object,JsonSerializer)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: System.Data.Common [H:\\project\\newNuget\\HelloWorld\\Main.csproj]\r\nEXEC : warning : Method `[Newtonsoft.Json]Newtonsoft.Json.Converters.DataTableConverter.ReadJson(JsonReader,Type,object,JsonSerializer)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: System.Data.Common [H:\\project\\newNuget\\HelloWorld\\Main.csproj]\r\nEXEC : warning : Method `[Newtonsoft.Json]Newtonsoft.Json.Converters.DataSetConverter.ReadJson(JsonReader,Type,object,JsonSerializer)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: System.Data.Common [H:\\project\\newNuget\\HelloWorld\\Main.csproj]\r\nEXEC : warning : Method `[Newtonsoft.Json]Newtonsoft.Json.Converters.BinaryConverter.ReadJson(JsonReader,Type,object,JsonSerializer)` will always throw because: [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: System.Data.Common [H:\\project\\newNuget\\HelloWorld\\Main.csproj]\r\n  Microsoft (R) Library Manager Version 14.14.26433.0\r\n  Copyright (C) Microsoft Corporation.  All rights reserved.\r\n\r\n  \"/OUT:bin\\release\\netcoreapp2.1\\win-x64\\native\\Main.lib\"\r\n  \"obj\\release\\netcoreapp2.1\\win-x64\\native\\Main.obj\"\r\n  Main -> H:\\project\\newNuget\\HelloWorld\\bin\\release\\netcoreapp2.1\\win-x64\\publish\\\r\nC:\\Users\\h6hfhrht\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-27116-01\\build\\Microsoft.NETCore.Native.Publish.targets(77,5): error MSB3030: Could not copy the file \"bin\\release\\netcoreapp2.1\\win-x64\\native\\Main.pdb\" because it was not found. [H:\\project\\newNuget\\HelloWorld\\Main.csproj]\r\n\r\n```"},{"Id":"8601907084","Type":"PullRequestEvent","CreatedAt":"2018-11-16T12:27:15","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6584","RelatedDescription":"Merged pull request \"Merge master to nmirror\" (#6584) at dotnet/corert","RelatedBody":""},{"Id":"8601906252","Type":"PullRequestEvent","CreatedAt":"2018-11-16T12:27:05","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6584","RelatedDescription":"Opened pull request \"Merge master to nmirror\" (#6584) at dotnet/corert","RelatedBody":""}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"8603994301","Type":"IssuesEvent","CreatedAt":"2018-11-16T18:37:09","Actor":"ericstj","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2674","RelatedDescription":"Opened issue \"ConflictResolution doesn't consider project references\" (#2674) at dotnet/sdk","RelatedBody":"I was trying to reference a project that built a newer version of a dll than one from the shared framework.\r\n\r\nI expected conflict resolution to remove the one from the shared framework, but the project reference was never passed to ConflictResolution.  As a result both flow through and RAR ignores the project reference.  The two files got passed to RAR, shared framework file as a `Assemblies` parameter and project reference as `AssemblyFiles` parameter and RAR ignores the latter (not necessarily a bug since we'd be in trouble if it let it through as we wouldn't have removed the runtime item).  The app then fails to produce the assets file with `NETSDK1007: Cannot file project info for 'path to project reference'.  THis can indicate a missing project reference.`  Indeed it's missing because RAR dropped it. \r\n\r\nWe should make sure that ConflictResolution sees ProjectReferences and then can handle a conflict where either the project reference or the package reference wins (making the appropriate trims to the assets file to avoid above error).\r\n\r\n"},{"Id":"8603287046","Type":"PullRequestEvent","CreatedAt":"2018-11-16T16:25:04","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2673","RelatedDescription":"Merged pull request \"Update dependency files\" (#2673) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18565.9\r\n\r\n"},{"Id":"8602073553","Type":"PullRequestEvent","CreatedAt":"2018-11-16T13:01:46","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2673","RelatedDescription":"Opened pull request \"Update dependency files\" (#2673) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18565.9\r\n\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1062754536018898946","CreatedAt":"2018-11-14T17:10:01+00:00","UserScreenname":"dotnet","Text":"Hear the latest and greatest on the future of .NET and check out demos of #dotNET Core . You'll also get a chance t… https://t.co/yskyvl0xjt","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":77,"FavoriteCount":38,"RawContent":null}]}},"RunOn":"2018-11-17T05:30:30.4748672Z","RunDurationInMilliseconds":7740}