{"Data":{"Blog":{"FeedItems":[{"Title":"5 Things You’ll Love in Xamarin.Forms 3.5","PublishedOn":"2019-02-06T17:22:16+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Although Valentine&#8217;s Day isn&#8217;t for a few more days, we just couldn&#8217;t wait to celebrate the love by sharing a new stable release of Xamarin.Forms &#8211; 3.5. Your engagement and...","Href":"https://blog.xamarin.com/5-things-youll-love-xamarin-forms-3-5/","RawContent":null},{"Title":"Using Existing C++ Libraries in Cross-Platform Xamarin.Forms Applications","PublishedOn":"2019-02-04T18:52:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There are many high-performance libraries primarily developed using C or C++. This article, &#8220;Use C/C++ Libraries With Xamarin&#8220;, walks through the technique of separating the concerns of...","Href":"https://blog.xamarin.com/using-c-libraries-xamarin-forms-apps/","RawContent":null},{"Title":"Mobile & .NET Developer Community Events in February","PublishedOn":"2019-02-01T17:31:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Fall in love with building your next mobile application by networking with local user groups to learn about new and exciting releases, tooling, or updates with Xamarin and .NET related technologies!...","Href":"https://blog.xamarin.com/mobile-net-developer-community-events-in-february/","RawContent":null},{"Title":"Complex UI with FastGrid for Xamarin.Forms","PublishedOn":"2019-01-30T17:56:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This guest post was contributed by Slava Chernikoff (Principal Engineer at Binwell,  Microsoft MVP, Xamarin Certified Mobile Developer), Artem Tischenko (Xamarin developer at Binwell) and Kirill...","Href":"https://blog.xamarin.com/complex-ui-with-fastgrid-for-xamarin-forms/","RawContent":null},{"Title":"Android’s D8 dexer and R8 shrinker","PublishedOn":"2019-01-28T18:10:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There is quite a bit of complexity to packaging an Android application. Xamarin.Android has to run through the same build pipeline as Android apps built in Android Studio&#8211;with the addition of...","Href":"https://blog.xamarin.com/androids-d8-dexer-and-r8-shrinker/","RawContent":null},{"Title":"What’s New for Xamarin Developers in Visual Studio 2019 Preview 2","PublishedOn":"2019-01-23T20:22:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, Visual Studio 2019 Preview 2 was released and includes many improvements for mobile developers in Visual Studio. This release, we focused on key areas to make you more productive when authoring...","Href":"https://blog.xamarin.com/whats-new-for-xamarin-developers-in-visual-studio-2019-preview-2/","RawContent":null},{"Title":"Visual Studio Mobile Developer Podcast: New Year – New Pod!","PublishedOn":"2019-01-18T18:59:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Visual Studio Mobile Developer Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in mobile and cloud development. This episode includes a discussion of...","Href":"https://blog.xamarin.com/visual-studio-mobile-developer-podcast-new-year-new-pod/","RawContent":null},{"Title":"Introducing the .NET Community Standup Series","PublishedOn":"2019-01-17T16:57:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We love our amazing .NET community that is filled with amazing developers writing fantastic blogs, libraries, presentations, and pull requests every week. We are always looking for ways to highlight...","Href":"https://blog.xamarin.com/introducing-the-net-community-standup-series/","RawContent":null},{"Title":"Xamarin.Forms 3.5: A Little Bindable Love","PublishedOn":"2019-01-11T18:06:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post contributed by Andrei Nitescu, a mobile developer since 2013 and frequent contributor to Xamarin.Forms. He shares about his experiences with other developers on his blog, and...","Href":"https://blog.xamarin.com/xamarin-forms-3-5-a-little-bindable-love/","RawContent":null},{"Title":"Hackathon Superweapon: F# and Fabulous","PublishedOn":"2019-01-10T20:27:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Recently, I participated in Hack for the Sea, a weekend devoted to applying tech to marine conservation. One of our local challenges was a “cross-platform mobile app for reporting marine debris.” A...","Href":"https://blog.xamarin.com/hackathon-superweapon-f-and-fabulous/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9036568310","Type":"PullRequestEvent","CreatedAt":"2019-02-09T01:09:25","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2716","RelatedDescription":"Merged pull request \"Bump JI to get the Lazy initialization in JniRuntime improvement\" (#2716) at xamarin/xamarin-android","RelatedBody":""},{"Id":"9036560087","Type":"PullRequestEvent","CreatedAt":"2019-02-09T01:05:58","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2656","RelatedDescription":"Merged pull request \"[docs] Update the build instructions for Windows\" (#2656) at xamarin/xamarin-android","RelatedBody":"Context: https://gitter.im/xamarin/xamarin-android?at=5c4a25ba7a0f4d5b1900f7a4\r\nContext: https://gitter.im/xamarin/xamarin-android?at=5c4a9d968ce4bb25b80795d3\r\n\r\nAdd environment setup instructions to make it easier for contributors to\r\nmake sure they have a Windows build environment that has the expected\r\nbuild dependencies.  The instructions were a little confusing before\r\nthis because the [Build Dependencies][0] page doesn't have a dedicated\r\nsection about Windows.\r\n\r\nAdd a link to the [Using Your Build][1] page to make it easier for\r\ncontributors to find the next step about how to build a Xamarin.Android\r\napplication after they have built `Xamarin.Android.sln`.\r\n\r\nMention the (relatively new) `Xamarin.Android.Build.Tasks.sln` as a way\r\nto work around output assembly file locking when working on the build\r\ntasks on Windows.\r\n\r\n[0]: https://github.com/xamarin/xamarin-android/blob/master/Documentation/building/dependencies.md\r\n[1]: https://github.com/xamarin/xamarin-android/blob/master/Documentation/workflow/UsingYourBuild.md"},{"Id":"9036486359","Type":"PullRequestEvent","CreatedAt":"2019-02-09T00:37:30","Actor":"alexischr","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2719","RelatedDescription":"Opened pull request \"Include 'libmono-native.so' in .apk\" (#2719) at xamarin/xamarin-android","RelatedBody":""},{"Id":"9035416528","Type":"PullRequestEvent","CreatedAt":"2019-02-08T20:24:23","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2718","RelatedDescription":"Opened pull request \"Typename mapping + environment assembly generator\" (#2718) at xamarin/xamarin-android","RelatedBody":"Xamarin.Android needs a lot of information on the runtime in order to do its\r\ntasks. Among this is are two bits of information that are used in the runtime\r\nstartup: type mappings (java-to-managed and managed-to-java) and environment\r\nsettings (variables and system properties). So far, Xamarin.Android used these\r\nbits of data (generated on the application build time) by loading them and\r\nparsing dynamically during startup. However, none of this data is *actually*\r\ndynamic - it's known beforehand and should be stored as static data right in the\r\napplication. The problem with this idea, however, was that we had no way to put\r\nthat information into the application native bits on the build time: it would\r\nrequire the presence of a compiler (or native assembler) as well as the native\r\nlinker for the target platforms. Until recently, it meant having to have the\r\nAndroid NDK installed, a pretty hefty requirement. However, right now Android\r\nSDK ships the native linker with its `build-tools` package and we can bundle in\r\nour packages the, relatively small, `gas` native assembler for all the\r\narchitectures we support which allows us to generate simple native assembler\r\ncode, compile it and link into a shared library **when packaging** the\r\napplication.\r\n\r\nThe way it works is that during Xamarin.Android build we also build a stub\r\n`libxamarin-app.so` library which the XA runtime is linked against. That stub\r\nlibrary is **not** shipped with XA, instead the version we generate on the build\r\ntime is packaged together with the runtime inside the APK. Since it's\r\nabi-compatible with the one built previously, the dynamic loader doesn't care\r\nand loads everything just fine.\r\n\r\nThis allows us to dispense with memory allocation, loading (potentially large)\r\nfiles from the apk (lots of I/O, slow), parsing text files to set environment\r\nvariables (this also includes memory allocation). All of the data is loaded for\r\nus by Android and we simply access global variables from the `libxamarin-app.so`\r\nlibrary.\r\n\r\nThe process, however, can be time consuming (sort of...) and in order to allow\r\nfast deployment to work as quickly as possible, the debug (and desktop/host -\r\nfor the benefit of the UI Designer) builds of the runtime also contain code to\r\nload both type maps and environment variables from files stored inside one of\r\nthe override directories.\r\n\r\nThe changes got us a speed-up of ~20ms for a release build of a Xamarin.Forms\r\napp on Pixel 3 XL."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9036916893","Type":"IssuesEvent","CreatedAt":"2019-02-09T04:30:03","Actor":"EmilAlipiev","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5183","RelatedDescription":"Opened issue \"[Enhancement] UWP- Replace MasterDetailControl with NavigationView\" (#5183) at xamarin/Xamarin.Forms","RelatedBody":"## Summary\r\nMasterDetailPageRenderer implements native tools on IOS and Android but on UWP, it has MasterDetailControl as custom control instead of native navigationView. we are missing many of the useful features of navigationView\r\n\r\nhttps://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/navigationview\r\nhttps://docs.microsoft.com/en-us/uwp/api/windows.ui.xaml.controls.navigationview\r\n\r\n## API Changes\r\n\r\n Replace MasterDetailControl with NavigationView or make it optional for those who wants to continue using MasterDetailControl \r\n "},{"Id":"9036878209","Type":"PullRequestEvent","CreatedAt":"2019-02-09T04:02:14","Actor":"EmilAlipiev","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5182","RelatedDescription":"Opened pull request \"DetectPlatform Fixed for UWP\" (#5182) at xamarin/Xamarin.Forms","RelatedBody":"…onInfo.DeviceFamily\r\n\r\nUWP-Xbox sets TV...Surface tablets sets Desktop intead of Phone\r\n\r\n### Description of Change ###\r\n\r\nthis PR fixes this issue https://github.com/xamarin/Xamarin.Forms/issues/4852\r\n\r\n### Issues Resolved ### \r\n\r\nUsing previous code, it was missing platforms like Xbox which should be set as TV.\r\nBeside that Surface tablet PCs were getting Idiom as phone. Because ApiInformation.IsTypePresent(\"Windows.Phone.UI.Input.HardwareButtons\")  returns false for Surface. It supposed to be Desktop not Phone as confirmed in the msdn question below. Using DeviceFamily returns Desktop. \r\n\r\nhttps://social.msdn.microsoft.com/Forums/windowsapps/en-US/0b75ea16-1d2a-4997-bfa2-8cb6f73ff1e8/uwp-what-device-family-is-a-surface-tablet?forum=wpdevelop#39c5d17a-4706-4c24-b3c0-9b17ca60dd4f\r\n\r\n\r\n- fixes #\r\n\r\n### API Changes ###\r\nRunning UWP app on Xbox returns Idiom as TV, Surface returns as Desktop\r\n \r\n### Platforms Affected ### \r\n\r\n- UWP\r\n "},{"Id":"9036676401","Type":"PullRequestEvent","CreatedAt":"2019-02-09T02:00:21","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5181","RelatedDescription":"Opened pull request \"Reinstate and obsolete IPlatform, et al\" (#5181) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nReinstate and obsolete various internals that were modified in 3.5.\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes https://github.com/xamarin/Xamarin.Forms/pull/4235#issuecomment-461511061\r\n\r\n### API Changes ###\r\n\r\nThis, but in reverse: https://github.com/xamarin/Xamarin.Forms/pull/4235#issuecomment-461689943\r\n \r\n### Platforms Affected ### \r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n"},{"Id":"9036655196","Type":"PullRequestEvent","CreatedAt":"2019-02-09T01:49:33","Actor":"matthewrdev","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5180","RelatedDescription":"Opened pull request \"Add AllowMultiple=true to QueryPropertyAttribute\" (#5180) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAdded `AllowMultiple=true` to the `QueryPropertyAttribute`.\r\n\r\n### Issues Resolved ### \r\n\r\nIn the process of building a demo app (https://github.com/matthewrdev/xamarin-forms-4), I discovered that I could not apply multiple parameters; doing so would cause a compile-time error.\r\n\r\n![image](https://user-images.githubusercontent.com/3260473/52514753-a3edc380-2c68-11e9-856b-83391996b10c.png)\r\n\r\nThe usage of this property in [ShellContent.ApplyQueryAttributes](https://github.com/xamarin/Xamarin.Forms/blob/master/Xamarin.Forms.Core/Shell/ShellContent.cs#L171) indicates that the intended behaviour is to allow users to specify multiple URL arguments that will be applied onto the page. Changing AllowMultiple to true fixes this.\r\n\r\nFor reference, when AllowMultiple is not explicitly set, it's default value is false. See: https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/attributes/attributeusage.\r\n\r\n### API Changes ###\r\n\r\nAdded `AllowMultiple=true` to the [`QueryPropertyAttribute`]().\r\n\r\n### Platforms Affected ### \r\n\r\n- Core/XAML (all platforms)\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\n 1. Define a page that uses multiple the `QueryPropertyAttribute` to apply URL arguments to properties\r\n 2. Prior to this change, this will result in a compilation error.\r\n 3. After this change, there will be no compilation error.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"9036372510","Type":"PullRequestEvent","CreatedAt":"2019-02-08T23:57:49","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5179","RelatedDescription":"Opened pull request \"Missing visual not falling back to registered default renderer\" (#5179) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nThe code was using the wrong key type when accessing the handler dictionary when checking for a default registered renderer.\r\n\r\n\r\n### Platforms Affected ### \r\n- Core/XAML (all platforms)\r\n\r\n### Testing Options ###\r\n- There's a UI Test\r\n- Set Visual on Button to some random type (that's not a VisualMarker) and make sure it loads the AppCompatButton\r\n- Download nuget and install it into an Android 8.1 project and set one button to visual and the other not. Make sure they both load appcompat\r\n\r\n### PR Checklist ###\r\n- [X] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n"},{"Id":"9036006563","Type":"IssuesEvent","CreatedAt":"2019-02-08T22:21:59","Actor":"ianvink","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5178","RelatedDescription":"Opened issue \"Building 3.5.0 fails on MonoAndroid81\" (#5178) at xamarin/Xamarin.Forms","RelatedBody":" \r\n### Description\r\nrunning **.create-nuget.bat droidios** after Visual Studio 2017 does a full Solution build (any cpu) on **3.5.0** results in the error:\r\n\r\n> \r\n> 'msbuild' is not recognized as an internal or external command,\r\n> operable program or batch file.\r\n> 'msbuild' is not recognized as an internal or external command,\r\n> operable program or batch file.\r\n> Attempting to build package from 'Xamarin.Forms.nuspec'.\r\n> Could not find a part of the path 'e:\\GitHub\\Xamarin.Forms\\Xamarin.Forms.Platform.Android\\bin\\debug\\MonoAndroid81'.\r\n\r\n**Doing the same under 3.4.0 works fine and a nuget package is made that works.**\r\n\r\n### Steps to Reproduce\r\n\r\n1. Delete all repo folders locally\r\n2. Use the GitHub client to get the latest\r\n3. Switch to 3.5.0 branch\r\n4. Open VS2017 => Xamarin.Forms.sln\r\n5. Switch to Any CPU, build the solution\r\n6. Run **.create-nuget.bat droidios**\r\n\r\n### Expected Behavior\r\n\r\nA nuget package created\r\n\r\n### Actual Behavior\r\n> 'msbuild' is not recognized as an internal or external command,\r\n> operable program or batch file.\r\n> 'msbuild' is not recognized as an internal or external command,\r\n> operable program or batch file.\r\n> Attempting to build package from 'Xamarin.Forms.nuspec'.\r\n> Could not find a part of the path 'e:\\GitHub\\Xamarin.Forms\\Xamarin.Forms.Platform.Android\\bin\\debug\\MonoAndroid81'.\r\n\r\n### Basic Information\r\n\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.9.6\r\nVisualStudio.15.Release/15.9.6+28307.344\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Enterprise\r\n \r\n \r\nAdd New File   3.5.134\r\nThe fastest and easiest way to add new files to any project - including files that start with a dot\r\n\r\nASP.NET and Web Tools 2017   15.9.04012.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60913.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.9.03024.0\r\nAzure App Service Tools v3.0.0\r\n\r\nBundler & Minifier   2.8.396\r\nAdds support for bundling and minifying JavaScript, CSS and HTML files in any project.\r\n\r\n \r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nCreateUnitTestBoilerplateCommand Extension   1.0\r\nCreateUnitTestBoilerplateCommand Visual Studio Extension Detailed Info\r\n\r\nCSS Tools   1.1.23\r\nProvides additional features to the CSS editor in Visual Studio.\r\n\r\nEditor Enhancements   1.0.30\r\nProvides additional features such as HTML and URL encodings, transformations and sorting of selected text the editor.\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nFile Nesting   2.6.85\r\nAutomatically nest files based on file name and enables developers to nest and unnest any file manually\r\n\r\nGitHub.VisualStudio   2.7.1.6591\r\nA Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n\r\nHTML Tools   1.0.3\r\nProductivity tools for the HTML editor\r\n\r\nIntelliCode Extension   1.0\r\nIntelliCode Extension\r\n\r\nIntelliCode Extension   1.0\r\nIntelliCode Visual Studio Extension Detailed Info\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nJetBrains ReSharper Ultimate 2018.3.2   Build 183.0.20190124.112722\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2019 JetBrains, Inc.\r\n\r\nMarkdown Editor   1.12.236\r\nA full featured Markdown editor with live preview and syntax highlighting. Supports GitHub flavored Markdown.\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10730.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.13.12-pre (9bc9548)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nOpen Command Line   2.1.218\r\nOpens a command line at the root of the project. Support for all consoles such as CMD, PowerShell, Bash etc. Provides syntax highlighting, Intellisense and execution of .cmd and .bat files.\r\n\r\nOzCode   1.0\r\nYour road to Magical Debugging. http://www.oz-code.com\r\n\r\nOzCodePackage Extension   1.0\r\nOzCodePackage Visual Studio Extension Detailed Info\r\n\r\nPackage Installer   2.0.103\r\nMakes it easier, faster and more convenient than ever to install Bower, npm, Yarn, JSPM, TSD, Typings and NuGet packages to any project\r\n\r\nPackage Security Alerts   1.0.22\r\nIdentifies npm and Bower packages that contains known security vulnerabilities to ensure your project is always using the most secure package versions.\r\n\r\nProject File Tools   1.0.1\r\nProvides Intellisense and other tooling for XML based project files such as .csproj and .vbproj files.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSnapshot Debugging Extension   1.0\r\nSnapshot Debugging Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61901.03220\r\nMicrosoft SQL Server Data Tools\r\n\r\n \r\nTypeScript Tools   15.9.20918.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\n \r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28307.208\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWeb Compiler   1.12.394\r\nCompiler for LESS, Sass and CoffeeScript files\r\n\r\nWeb Essentials 2017   2.0.44\r\nThe easiest way to set up Visual Studio for the ultimate web development experience. Requires Visual Studio 2017 Update 8 or newer\r\n\r\nXamarin   4.12.3.79 (d15-9@260fa6a34)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.16.13 (45a16efd4)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Live Reload   0.3.27 (remotes/origin/dev@207abf7)\r\nProvides live reload capabilities for Xamarin XAML.\r\n\r\nXamarin Templates   1.1.128 (6f5ebb2)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.1.5.0 (HEAD/4b951a3e7)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.2.1.12 (65ec520)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n \r\n![image](https://user-images.githubusercontent.com/112916/52509286-6deb0980-2bac-11e9-96bc-c815686b0e9f.png)\r\n\r\n"},{"Id":"9035994361","Type":"IssuesEvent","CreatedAt":"2019-02-08T22:19:27","Actor":"bares43","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5177","RelatedDescription":"Opened issue \"[Enhancement] Change NavigationPage back button color on Android\" (#5177) at xamarin/Xamarin.Forms","RelatedBody":"## Summary\r\nI cannot change NavigationPage back button color on Android. On iOS color of back button is the same as color of text - so I can change it using BarTextColor property. This is not working on Android and I believe that this should behave the same. For now the only solution is to use custom renderer.\r\n\r\nI think that it should be changed somewhere here https://github.com/xamarin/Xamarin.Forms/blob/7cc9a282bdeb76405c793574ebe0d096072f4228/Xamarin.Forms.Platform.Android/AppCompat/NavigationPageRenderer.cs#L935 but I'm unable do it myself.\r\n\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9035441586","Type":"IssuesEvent","CreatedAt":"2019-02-08T20:29:09","Actor":"luhenry","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5381","RelatedDescription":"Closed issue \"[interpreter]Debugging sample crashes when interpreter is enabled\" (#5381) at xamarin/xamarin-macios","RelatedBody":"\r\n### Steps to Reproduce\r\n\r\n1. Install Xamarin.iOS master, Version: 12.7.0.35 (Visual Studio Enterprise) 327c0a8d\r\n2.  Set a breakpoint against Line7 in ClassesUnderTest/SimpleBreakpoints.cs\r\n2. Build and deploy cross platform debugging app on device with interpreter enabled for iOS.Debugging.\r\n3. GoTo SimpleBreakPoint and click Start\r\n\r\n### Expected Behavior\r\nBreakpoint should get hit and user must able to debug app successfully.\r\n### Actual Behavior\r\nConnection to the debugger is lost and app crashes with an error, 2019-01-11 10:27:16.744 XiOSDebugging[2297:333230] error: * Assertion at /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/external/mono/mono/mini/debugger-engine.c:359, condition `ji' not met\r\n\r\n### Environment\r\n```\r\n=== Visual Studio Enterprise 2017 for Mac (Preview) ===\r\n\r\nVersion 7.8 Preview (7.8 build 1487)\r\nInstallation UUID: fe2e3011-6fdf-476f-9a39-d7d6b435ddd1\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 5.6.0.1 (d16-0 / 2e9867a4)\r\n\r\n\tPackage version: 518000225\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 5.18.0.225 (2018-08/bac9fc1f889) (64-bit)\r\n\tPackage version: 518000225\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.8.0.5385\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Version: 2.1.2\r\nSDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\nSDK Version: 2.1.302\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.18.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.4\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Updater ===\r\n\r\nVersion: 11\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.1 (14460.46)\r\nBuild 10B61\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.2.1.12 (Visual Studio Enterprise)\r\nHash: 65ec520f\r\nBranch: \r\nBuild date: 2018-12-05 12:06:09-0500\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.7.0.35 (Visual Studio Enterprise)\r\nHash: 327c0a8d\r\nBranch: master\r\nBuild date: 2019-01-08 23:25:33-0800\r\n\r\n=== Xamarin.Android ===\r\n\r\nNot Installed\r\n\r\n=== Microsoft Mobile OpenJDK ===\r\n\r\nJava SDK: Not Found\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 7.8.1.0\r\nHash: 06ceaea1\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 708001487\r\nGit revision: 0311f28ad5352750c02c4854a36587e47f4806be\r\nBuild date: 2018-12-19 18:37:11+00\r\nBuild branch: release-7.8\r\nXamarin extensions: 1de2700808f1ef0e06199d64e043bc2ae523d700\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.1\r\nDarwin 18.2.0 Darwin Kernel Version 18.2.0\r\n    Fri Oct  5 19:41:49 PDT 2018\r\n    root:xnu-4903.221.2~2/RELEASE_X86_64 x86_64\r\n```\r\n### Build Logs\r\n\r\nBuild Log: https://gist.github.com/GouriKumari/26eafacbd0e746e405b0807adc71efe0\r\nApplication Output: https://gist.github.com/GouriKumari/edfe0fde10ce6a745fa0c25644e17f89\r\nCrash Log: https://gist.github.com/GouriKumari/8037dc279a34dfcf408e1e728743f5a7\r\n\r\n### Example Project (If Possible)\r\nhttps://www.dropbox.com/s/zabk8nwa3bvjzsr/CrossPlatformDebugging.zip?dl=0\r\n\r\n## Additional Info:\r\nThis works when interpreter is disabled.\r\n"},{"Id":"9033734662","Type":"PullRequestEvent","CreatedAt":"2019-02-08T15:44:53","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5575","RelatedDescription":"Merged pull request \"[msbuild] Fixes NativeExecutable MTouch output prop for VS\" (#5575) at xamarin/xamarin-macios","RelatedBody":"Since the Output property was being set on each call to the MTouch task despite it changed or not VS was generating that file on Windows on each run, which breaks incremental builds. Now, we're setting it only if the executable file changed or was just created.\r\n\r\nBug 785284 - .dSym is not properly generated unless configuration is Release\r\nFixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/785284"},{"Id":"9033513000","Type":"PullRequestEvent","CreatedAt":"2019-02-08T15:14:08","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5577","RelatedDescription":"Merged pull request \"[tests|mmp] Bump mmp's WarningTests to use Xcode 9.4\" (#5577) at xamarin/xamarin-macios","RelatedBody":"Fixes xamarin/maccore#1390\r\n\r\nApple removed `NSTextViewIvars.sharedData` in mojave which is needed to link\r\nusing Xcode 8.3 so we bumped WarningTests to use Xcode 9.4 which also reproduces\r\nthe behaviour the test expects and we ensure that the test is run because we\r\nalso require Xcode 9.4 to be there."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1093221405917937670","CreatedAt":"2019-02-06T18:54:28+00:00","UserScreenname":"xamarinhq","Text":"Every month we survey &amp; interview our Xamarin devs, listening to your firsthand stories. Why? To make #Xamarin bett… https://t.co/Gwc32YD8qG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":82,"FavoriteCount":34,"RawContent":null},{"Id":"1093196382901547008","CreatedAt":"2019-02-06T17:15:02+00:00","UserScreenname":"xamarinhq","Text":"On a recent #XamarinShow, Mike Parker from the Microsoft Mobile Customer Advisory Team that shows us how to easily… https://t.co/jdjf2oZXwI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":46,"FavoriteCount":15,"RawContent":null},{"Id":"1092542167078326279","CreatedAt":"2019-02-04T21:55:25+00:00","UserScreenname":"xamarinhq","Text":"Walk through some techniques for separating the concerns of dev'ing a C/C++ library, a C# wrapper, &amp; a mobile app s… https://t.co/W1RmRSHzXZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":68,"FavoriteCount":34,"RawContent":null},{"Id":"1091455153868296201","CreatedAt":"2019-02-01T21:56:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing .NET Foundation Open Membership. We're making some big changes to expand the #dotNET Foundation. We’re i… https://t.co/iePYJUdean","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":68,"FavoriteCount":39,"RawContent":null},{"Id":"1091387761297362944","CreatedAt":"2019-02-01T17:28:13+00:00","UserScreenname":"xamarinhq","Text":"There's a new Xamarin.Essentials out. Today, @JamesMontemagno highlights API of the Week, App Information; which gi… https://t.co/WlU6hQHbNl","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":65,"FavoriteCount":22,"RawContent":null},{"Id":"1090678537491808256","CreatedAt":"2019-01-30T18:30:01+00:00","UserScreenname":"xamarinhq","Text":"Check out this super-interesting use-case for creating complex UI using FastGrid for Xamarin.Forms with many cell v… https://t.co/SNff8XhdJ3","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":96,"FavoriteCount":42,"RawContent":null},{"Id":"1089964090339049472","CreatedAt":"2019-01-28T19:11:04+00:00","UserScreenname":"xamarinhq","Text":"Finding it a bit complex packaging your Xamarin. Android application? Here's some excellent info about Android’s D8… https://t.co/1qhLDuX3m6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":70,"FavoriteCount":28,"RawContent":null},{"Id":"1088179823762161664","CreatedAt":"2019-01-23T21:01:02+00:00","UserScreenname":"xamarinhq","Text":"Just released: #VS2019 Preview 2 which includes tons of improvements for mobile devs to make you more productive wh… https://t.co/j4LgiuYkgc","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":155,"FavoriteCount":74,"RawContent":null},{"Id":"1086352280604065792","CreatedAt":"2019-01-18T19:59:01+00:00","UserScreenname":"xamarinhq","Text":"New Year – New podcast. Now on the Visual Studio Mobile Developer Podcast: Office Hours, Hockey App moving to… https://t.co/QtObsRI6av","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":44,"FavoriteCount":20,"RawContent":null},{"Id":"1085961073902129152","CreatedAt":"2019-01-17T18:04:30+00:00","UserScreenname":"xamarinhq","Text":"As the .NET community expands so should the community standups... We are pleased to introduce the expansion of the… https://t.co/EDO0vChQlR","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":44,"FavoriteCount":22,"RawContent":null},{"Id":"1083829954515750923","CreatedAt":"2019-01-11T20:56:12+00:00","UserScreenname":"xamarinhq","Text":"...just posted on the Xamarin Blog, Andrei Nitescu shares one of his contributions to Xamarin.Forms, the bindable l… https://t.co/rp3eVPLbYl","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":104,"FavoriteCount":45,"RawContent":null},{"Id":"1083399709526503424","CreatedAt":"2019-01-10T16:26:34+00:00","UserScreenname":"xamarinhq","Text":"Our very first Mobile .NET #CommunityStandup will be live in about 30 minutes at 9am Pacific! @maddyleger1,… https://t.co/vmFHIKZTIt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":58,"FavoriteCount":19,"RawContent":null},{"Id":"1080559862642282502","CreatedAt":"2019-01-02T20:22:01+00:00","UserScreenname":"xamarinhq","Text":"It’s a new year with tons of new and awesome Xamarin and .NET Community events coming this month. Get the full list… https://t.co/ZOykEyCRBN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":59,"FavoriteCount":22,"RawContent":null},{"Id":"1075783769876033536","CreatedAt":"2018-12-20T16:03:32+00:00","UserScreenname":"xamarinhq","Text":"Introducing Xamarin.Essentials, a new library that abstracts native APIs into a set of cross-platform APIs giving y… https://t.co/EMM97iFY9o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":270,"FavoriteCount":119,"RawContent":null},{"Id":"1072256672498966533","CreatedAt":"2018-12-10T22:28:06+00:00","UserScreenname":"xamarinhq","Text":"CarouselView is Here! Xamarin.Forms 4.0 now includes an entirely new point of view. ...as part of the upcoming rele… https://t.co/Vh8UMRM4ez","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":153,"FavoriteCount":69,"RawContent":null},{"Id":"1070425707770195968","CreatedAt":"2018-12-05T21:12:30+00:00","UserScreenname":"xamarinhq","Text":"Yesterday at Microsoft Connect(); 2018 we announced our plans &amp; preview for Xamarin.Forms 4.0. This post will give… https://t.co/oNXLJGsrQ8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":144,"FavoriteCount":74,"RawContent":null},{"Id":"1070075277101944833","CreatedAt":"2018-12-04T22:00:01+00:00","UserScreenname":"xamarinhq","Text":"Today, at #MSFTConnect 2018, we have several exciting announcements about brand new capabilities and foundational i… https://t.co/olEK9QjR1j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":54,"FavoriteCount":38,"RawContent":null}]}},"RunOn":"2019-02-09T05:31:14.8889352Z","RunDurationInMilliseconds":3075}