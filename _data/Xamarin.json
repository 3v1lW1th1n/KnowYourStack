{"Data":{"Blog":{"FeedItems":[{"Title":"New Xamarin University Course: Navigation Patterns in Xamarin.Forms (XAM205)","PublishedOn":"2018-02-26T19:10:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms, a popular choice for cross-platform Xamarin apps, has two stacks. It&#8217;s common to implement navigation by pushing and popping Pages on a stack, but the two stacks are intended for...","Href":"https://blog.xamarin.com/xamarin-forms-navigation-patterns-xam205/","RawContent":null},{"Title":"Add Tizen Projects to Your Xamarin.Forms Applications","PublishedOn":"2018-02-23T19:24:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a special guest post from Jay Cho of the Samsung Tizen team. It&#8217;s been a while since the first preview version of Tizen .NET was released. Thanks to the newest release, developing...","Href":"https://blog.xamarin.com/add-tizen-projects-xamarin-forms-apps/","RawContent":null},{"Title":"Create and Host tvOS TVML Apps with Azure and Xamarin","PublishedOn":"2018-02-22T20:30:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Creating amazing tvOS TVML apps doesn&#8217;t have to be hard. In this blog post, I&#8217;ll go over the many similarities tvOS has to iOS and show you how to create a sample quiz app using UIKit that...","Href":"https://blog.xamarin.com/create-tvos-tvml-apps-azure-xamarin/","RawContent":null},{"Title":"Use CoreML And Azure To Create Simple Xamarin.iOS Apps","PublishedOn":"2018-02-20T19:36:35+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last year Apple released a device-optimized machine learning framework called Core ML to make it as easy as possible to integrate machine learning and artificial intelligence services into your iOS...","Href":"https://blog.xamarin.com/coreml-azure-create-simple-xamarin-ios-apps/","RawContent":null},{"Title":"Extend Xamarin.Forms Controls Functionality with Behaviors","PublishedOn":"2018-02-16T18:48:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms provides a way to build 100% native, cross-platform applications with both a shared logic layer and a shared user-interface layer. Built-in Xamarin.Forms controls also provide a ton of...","Href":"https://blog.xamarin.com/extend-xamarin-forms-controls-functionality-with-behaviors/","RawContent":null},{"Title":"Xamarin.iOS and Xcode 9.3 Web Preview","PublishedOn":"2018-02-15T20:36:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The next release of Xcode, version 9.3, is currently in beta. Development of Xamarin.iOS to support the new Xcode 9.3 version is in-progress and available now as a web preview. Participating in...","Href":"https://blog.xamarin.com/xcode-9-3-web-preview-high-sierra-required/","RawContent":null},{"Title":"Add a Search Bar to Your Xamarin Apps in iOS 11","PublishedOn":"2018-02-12T20:00:25+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As described in the Go Large with iOS 11 post, view controllers in iOS 11 can use large titles to improve the clarity of an app&#8217;s user interface. To complement a view controller&#8217;s large...","Href":"https://blog.xamarin.com/add-search-bar-xamarin-ios-11/","RawContent":null},{"Title":"Podcast: Rapid UI Prototyping with Ink to Code, Merged Dictionaries in Xamarin.Forms, & Android Emulator Tips","PublishedOn":"2018-02-09T19:33:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I talk about a new tool that turns drawings into Android or UWP layouts, merged dictionaries coming to Xamarin.Forms, ways to make your...","Href":"https://blog.xamarin.com/podcast-rapid-ui-prototyping-ink-code-merged-dictionaries-xamarin-forms-android-emulator-tips/","RawContent":null},{"Title":"Add Languages to Your Xamarin Apps with Multilingual App Toolkit","PublishedOn":"2018-02-08T20:10:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With Xamarin, you can extend your cross-platform apps with support for native speakers, reaching markets that might otherwise be overlooked. However, managing multiple languages and keeping everything...","Href":"https://blog.xamarin.com/add-languages-to-your-apps-with-xamarin-and-multilingual-app-toolkit/","RawContent":null},{"Title":"Upcoming Webinar | Xamarin University Presents: Building Your First Intelligent App with Xamarin and Microsoft Cognitive Services","PublishedOn":"2018-02-07T19:39:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today&#8217;s apps must be “intelligent” to win app users’ loyalty, whether for a consumer app or a business app. With Xamarin.Forms and Microsoft Cognitive Services, you can easily create your first...","Href":"https://blog.xamarin.com/upcoming-webinar-xamarin-university-presents-building-first-intelligent-app-xamarin-microsoft-cognitive-services/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7306791685","Type":"IssuesEvent","CreatedAt":"2018-02-27T23:27:17","Actor":"baulig","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1346","RelatedDescription":"Opened issue \"Linker requires symbol files\" (#1346) at xamarin/xamarin-android","RelatedBody":"It looks like the linker currently requires symbol files to be present: [Xamarin.Android.Build.Tasks/Linker/MonoDroid.Tuner/Linker.cs:51](https://github.com/xamarin/xamarin-android/blob/master/src/Xamarin.Android.Build.Tasks/Linker/MonoDroid.Tuner/Linker.cs#L51).\r\n\r\nThis is causing a test failure in the [2018-02 monthly integration](https://github.com/xamarin/xamarin-android/pull/1289) because the latest nuget package of `Newtonsoft.Json` doesn't seem to ship a `.pdb`.\r\n\r\nI added a [temporary FIXME](https://github.com/xamarin/xamarin-android/commit/676104bafd821fca02713ae2ce4d32bea69834ab) to the integration branch just to get the build going, but this is probably not what we want long-term."},{"Id":"7305843161","Type":"PullRequestEvent","CreatedAt":"2018-02-27T20:05:45","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1185","RelatedDescription":"Merged pull request \"Better NetStandard Support\" (#1185) at xamarin/xamarin-android","RelatedBody":"Context #1154 \r\n\r\nThis PR brings in changes from xamarin/xamarin-macios#2643 and xamarin/xamarin-macios#2731 to improve our net standard support. While it does not fix the packaging problem in #1154 it will give us parity with the iOS code base. "},{"Id":"7305829747","Type":"PullRequestEvent","CreatedAt":"2018-02-27T20:03:09","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1345","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Add Default Metadata for `@(AndroidResource)` Items.\" (#1345) at xamarin/xamarin-android","RelatedBody":"Fixes #1287\r\n\r\nOne of the problems we have encountered is that the logic behind\r\nhow and when the design time build (DTB) is run is unclear. Specifically\r\nwhat events/changes trigger a DTB. After lenghty conversations with\r\nthe Visual Studio team it seems that their prefered solution is to\r\nuse the `Generator` metadata.\r\n\r\nThe idea behind this is that an Item can include\r\n\r\n\t<Generator>MSBuild:Target</Generator>\r\n\r\nmetadata which specify the MSBuild `Target` to run if that file\r\nis modified. If these data is present Visual Studio will run the\r\ntarget, which then modifies the required files which then triggers\r\nan DTB update. Other ideas included adding a FileSystemWatcher to\r\nthe Visual Studio Addin to detect these changes and run targets.\r\nThat said the Generator metadata is built in and should work for\r\nthis purpose.\r\n\r\nSo now the problem. Normally you define this metadata on the Item\r\nin the csproj. We have 1000's of developers with existing projects\r\nwhich DO NOT include this data. So how do we fix up existing projects\r\nwithout a) requiring manual changes or b) having to write a tool to\r\nupgrade the projects.\r\n\r\nThis is where `<ItemDefinitionGroup/>` [1] comes in :). It allows\r\nus to define the `default` metadata we want to include on Items.\r\nSo if we define\r\n\r\n\t<ItemDefinitionGroup>\r\n\t\t<Foo>\r\n           \t\t<A>bar</A>\r\n        \t</Foo>\r\n\t</ItemDefinitionGroup>\r\n\r\n\t<Foo Include=\"1\">\r\n\t\t<A>some</A>\r\n\t</Foo>\r\n\t<Foo Include=\"2\" />\r\n\r\nWhen will happen is `<A>bar</A>` will be automatically added to\r\nthe `<Foo Include=\"2\" />`. It will be skipped on the other one\r\nbecause it already has a `<A/>` element defined. This is a really\r\nnice feature since it allows us to add the required metadata in\r\nthe background without having to get users to upgrade projects.\r\nAlso because these are default values the csproj files will NOT\r\nbe changed when a user alters the project for some other reason.\r\ni.e they WONT end up will ALL the `<AndroidResource />` items\r\nhaving this new data on them.\r\n\r\nThe other thing to note is that these changes will only apply to\r\nthe DTB. The target we are calling in this case is `UpdateGeneratedFiles`.\r\nThis target is not part of the `Build` chain. As a result\r\n`_SetupDesingTimeBuildForCompile` will be called. This sets `$(DesignTimeBuild)`\r\nto true. So calling this target will ONLY update the DTB related files.\r\n\r\n[1] https://docs.microsoft.com/en-us/visualstudio/msbuild/itemdefinitiongroup-element-msbuild"},{"Id":"7305829722","Type":"IssuesEvent","CreatedAt":"2018-02-27T20:03:09","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1287","RelatedDescription":"Closed issue \"Unable to discover new string resource (or other xml defined resources) in Intellisense after building\" (#1287) at xamarin/xamarin-android","RelatedBody":"This issue appears to be a regression in d15-6, so I will be adding it to the 15.6 milestone. However, I am not sure if it is related to the managed resource parser changes that have been re-enabled there.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new Single-View Android App.\r\n2. Add a new string entry in Resources -> values -> Strings.xml, such as:\r\n```xml\r\n<string name=\"test\">test</string>\r\n```\r\n3. Open MainActivity.cs and confirm that you are unable to see Intellisense for `Resource.String.test`.\r\n4. Select Build -> Build solution\r\n5. Open MainActivity.cs and confirm that you are _still_ unable to see Intellisense for `Resource.String.test`.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nNewly added string and other xml resources can be discovered via Intellisense immediately after completing a build.\r\n\r\n### Actual Behavior\r\nIntellisense does not work for a new string resource after building.\r\n\r\n### Version Information\r\nVS 15.6 Preview 4:\r\nhttps://gist.github.com/pjcollins/b8be35efd9b9eb0fb7e1355e74396fd2\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nDiagnostic build output:\r\nhttps://gist.github.com/pjcollins/292e2acf118eaced6de4124aedf15254\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7304728768","Type":"PullRequestEvent","CreatedAt":"2018-02-27T16:41:23","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1345","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Add Default Metadata for `@(AndroidResource)` Items.\" (#1345) at xamarin/xamarin-android","RelatedBody":"Fixes #1287\r\n\r\nOne of the problems we have encountered is that the logic behind\r\nhow and when the design time build (DTB) is run is unclear. Specifically\r\nwhat events/changes trigger a DTB. After lenghty conversations with\r\nthe Visual Studio team it seems that their prefered solution is to\r\nuse the `Generator` metadata.\r\n\r\nThe idea behind this is that an Item can include\r\n\r\n\t<Generator>MSBuild:Target</Generator>\r\n\r\nmetadata which specify the MSBuild `Target` to run if that file\r\nis modified. If these data is present Visual Studio will run the\r\ntarget, which then modifies the required files which then triggers\r\nan DTB update. Other ideas included adding a FileSystemWatcher to\r\nthe Visual Studio Addin to detect these changes and run targets.\r\nThat said the Generator metadata is built in and should work for\r\nthis purpose.\r\n\r\nSo now the problem. Normally you define this metadata on the Item\r\nin the csproj. We have 1000's of developers with existing projects\r\nwhich DO NOT include this data. So how do we fix up existing projects\r\nwithout a) requiring manual changes or b) having to write a tool to\r\nupgrade the projects.\r\n\r\nThis is where `<ItemDefinitionGroup/>` [1] comes in :). It allows\r\nus to define the `default` metadata we want to include on Items.\r\nSo if we define\r\n\r\n\t<ItemDefinitionGroup>\r\n\t\t<Foo>\r\n           \t\t<A>bar</A>\r\n        \t</Foo>\r\n\t</ItemDefinitionGroup>\r\n\r\n\t<Foo Include=\"1\">\r\n\t\t<A>some</A>\r\n\t</Foo>\r\n\t<Foo Include=\"2\" />\r\n\r\nWhen will happen is `<A>bar</A>` will be automatically added to\r\nthe `<Foo Include=\"2\" />`. It will be skipped on the other one\r\nbecause it already has a `<A/>` element defined. This is a really\r\nnice feature since it allows us to add the required metadata in\r\nthe background without having to get users to upgrade projects.\r\nAlso because these are default values the csproj files will NOT\r\nbe changed when a user alters the project for some other reason.\r\ni.e they WONT end up will ALL the `<AndroidResource />` items\r\nhaving this new data on them.\r\n\r\nThe other thing to note is that these changes will only apply to\r\nthe DTB. The target we are calling in this case is `UpdateGeneratedFiles`.\r\nThis target is not part of the `Build` chain. As a result\r\n`_SetupDesingTimeBuildForCompile` will be called. This sets `$(DesignTimeBuild)`\r\nto true. So calling this target will ONLY update the DTB related files.\r\n\r\n[1] https://docs.microsoft.com/en-us/visualstudio/msbuild/itemdefinitiongroup-element-msbuild"},{"Id":"7304424036","Type":"PullRequestEvent","CreatedAt":"2018-02-27T15:53:43","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1338","RelatedDescription":"Merged pull request \"[msbuild][Mono.Android] add a bunch of \"missing\" manifest attributes.\" (#1338) at xamarin/xamarin-android","RelatedBody":"This should fix https://github.com/xamarin/xamarin-android/issues/1224.\r\n\r\nThose attributes were based on build-tools/manifest-attribute-codegen.exe\r\n(which is not really codegen yet, but lists up all the manifest attributes\r\nthat are found from Android SDK resources).\r\n\r\nHowever not all the attributes were documented. For those undocumented\r\nattributes, the issue https://github.com/xamarin/xamarin-android/issues/1336\r\nwas created to track."},{"Id":"7304424014","Type":"IssuesEvent","CreatedAt":"2018-02-27T15:53:43","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1224","RelatedDescription":"Closed issue \"Add android:networkSecurityConfig support to ApplicationAttribute\" (#1224) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Add `[Application]` attribute and try specifying networkSecurityConfig as a property\r\n2. Compilation fails\r\n\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nShould allow user to specify url/path to the networkSecurityConfig\r\n### Actual Behavior\r\nXamarin.Android does not support specifying this attribute in manifest through property.\r\n\r\n### Version Information\r\nLatest master https://github.com/xamarin/xamarin-android/blob/master/src/Xamarin.Android.NamingCustomAttributes/Android.App/ApplicationAttribute.cs\r\n\r\n### Log File\r\nN/A\r\n\r\n### Other\r\nThis attribute was included in API 24\r\nhttps://developer.android.com/guide/topics/manifest/application-element.html#networkSecurityConfig\r\n\r\nLooks like it is not yet available via C# surface"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7307658358","Type":"IssuesEvent","CreatedAt":"2018-02-28T04:02:51","Actor":"franzdevel","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1989","RelatedDescription":"Opened issue \"Disappearing ActivityIndicators in TableView on iOS\" (#1989) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nOn iOS, when scrolling through a Xamarin.Forms.TableView whose cells include running ActivityIndicators, those ActivityIndicators sometimes become invisible.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run attached project on iOS simulator or device (I tested on iPhone 8 / iOS 11.2 simulator and on iPhone 4s / iOS 9.3.5 device)\r\n2. In the displayed list, scroll up and down.\r\n\r\n### Expected Behavior\r\n\r\nEach TableView cell should display a running ActivityIndicator all the time.\r\n\r\n### Actual Behavior\r\n\r\nSometimes individual ActivityIndicators become invisible during the scrolling. This occurs especially when scrolling right down to the bottom of the list and then scrolling back up a little bit, or when scrolling up to the start and then back down. In those cases, the cells that are just coming into view do not display their ActivityIndicators.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms 2.5.0.280555\r\n- Last known good version: ?\r\n- IDE: Visual Studio Community 2017 for Mac\r\n- Platform Target Frameworks:\r\n  - iOS:  11.2\r\n- Affected Devices: It seems to be a general problem rather than restricted to certain devices\r\n\r\n### Screenshot\r\n\r\nThe following screenshot shows ActivityIndicators missing for cells 17 and 18, after having scrolled down to the end of the list and a little bit back up again.\r\n\r\n![screen shot 2018-02-28 at 3 00 14 pm](https://user-images.githubusercontent.com/24537277/36769438-5fd3c3ba-1c98-11e8-8685-b8dcf70fa873.png)\r\n\r\n### Reproduction Project\r\n\r\n[listviewtest.zip](https://github.com/xamarin/Xamarin.Forms/files/1765519/listviewtest.zip)"},{"Id":"7307154154","Type":"IssuesEvent","CreatedAt":"2018-02-28T01:16:08","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1961","RelatedDescription":"Closed issue \"Live player closing on phone when debugging\" (#1961) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nI have been following the xamarin book supplied by xamarin. The black cats application is causing the live player to simply shut down on my phone with no error messages.\r\n\r\nUnless the code in the book is incorrect there must be a bug when accessing resources.\r\n\r\n### Steps to Reproduce\r\n\r\n1.  Down load Black Cats Solution from your xamarin book here\r\n\r\nhttps://developer.xamarin.com/guides/xamarin-forms/creating-mobile-apps-xamarin-forms/\r\n\r\n2. Run via live player wifi connection to mobile phone \r\n\r\n3. Live player switches off when this line is run\r\n\r\n     using (Stream stream = assembly.GetManifestResourceStream(resource))\r\n \r\n\r\n\r\n### Expected Behavior\r\nThe text file should open \r\n\r\n### Actual Behavior\r\nThe live player switches off completely and phone goes to main menu screen, no error messages just a complete failure\r\n\r\n### Basic Information\r\n\r\nTO be honest if you take the project from your book you will have all the same settings as me\r\n\r\nwei Honor. However phone is fine, it is only the project I refer to that is causing the error so far. I am guessing it cannot locate the file but even if that is the case why is there no detail of any exception? I even put in a try catch block but it does not give any details and does not catch an error before it fails\r\n\r\n\r\n### Reproduction Link\r\n\r\nA link to the solution used in your book\r\n\r\nhttps://github.com/xamarin/xamarin-forms-book-samples/tree/master/Chapter04/BlackCat\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7306566878","Type":"PullRequestEvent","CreatedAt":"2018-02-27T22:32:46","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3611","RelatedDescription":"Opened pull request \"[macos] WKPreferences does not declare NSCopying\" (#3611) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7306254917","Type":"PullRequestEvent","CreatedAt":"2018-02-27T21:28:30","Actor":"lewurm","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3610","RelatedDescription":"Opened pull request \"Bump mono and touchunit\" (#3610) at xamarin/xamarin-macios","RelatedBody":"this should fix https://github.com/xamarin/maccore/issues/651"},{"Id":"7306091885","Type":"IssuesEvent","CreatedAt":"2018-02-27T20:56:14","Actor":"therealjohn","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3604","RelatedDescription":"Closed issue \"Where to download Xamarin tools for Visual studio 2015\" (#3604) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\nPlease share download path for Xamarin tools for Visual Studio 2015 and Xamarin.iOS for Mac.\r\n\r\nI am getting release notes from below path but there is no downloadable link.\r\nhttps://developer.xamarin.com/releases/current/\r\n\r\n\r\n### Expected Behavior\r\nNeed downloadable link\r\n\r\n### Actual Behavior\r\nNo downloadable link\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nMicrosoft Visual Studio Professional 2015\r\nVersion 14.0.25431.01 Update 3\r\nMicrosoft .NET Framework\r\nVersion 4.7.02558\r\n\r\nInstalled Version: Professional\r\n\r\nVisual Basic 2015   00322-50050-56982-AA785\r\nMicrosoft Visual Basic 2015\r\n\r\nVisual C# 2015   00322-50050-56982-AA785\r\nMicrosoft Visual C# 2015\r\n\r\nVisual C++ 2015   00322-50050-56982-AA785\r\nMicrosoft Visual C++ 2015\r\n\r\nApplication Insights Tools for Visual Studio Package   7.18.00214.2\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2015.1 (Beta8)   14.1.11107.0\r\nASP.NET and Web Tools 2015.1 (Beta8)\r\n\r\nASP.NET Web Frameworks and Tools 2012.2   4.1.41102.0\r\nFor additional information, visit http://go.microsoft.com/fwlink/?LinkID=309563\r\n\r\nASP.NET Web Frameworks and Tools 2013   5.2.40314.0\r\nFor additional information, visit http://www.asp.net/\r\n\r\nCommon Azure Tools   1.8\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJetBrains ReSharper Ultimate 2016.2    Build 106.0.20160818.163633\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2018 JetBrains, Inc.\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure Mobile Services Tools   1.4\r\nMicrosoft Azure Mobile Services Tools\r\n\r\nMicrosoft Team Foundation Server 2015 Power Tools   14.0\r\nPower Tools that extend the Team Foundation Server integration with Visual Studio.\r\n\r\nMicrosoft Visual Studio Process Editor   1.0\r\nProcess Editor for Microsoft Visual Studio Team Foundation Server\r\n\r\nMono Debugging for Visual Studio   4.7.4-pre (c2d89eb)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   3.4.4\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nPreEmptive Analytics Visualizer   1.2\r\nMicrosoft Visual Studio extension to visualize aggregated summaries from the PreEmptive Analytics product.\r\n\r\nSQL Server Data Tools   14.0.60519.0\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript   1.8.36.0\r\nTypeScript tools for Visual Studio\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.7.10.38 (34c1b6c)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin.Android   8.0.2.1 (c2a33d8)\r\nVisual Studio extension to enable development for Xamarin.Android.\r\n\r\nXamarin.iOS   11.3.0.47 (51128b8)\r\nVisual Studio extension to enable development for Xamarin.iOS.\r\n\r\n\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"7305532088","Type":"IssuesEvent","CreatedAt":"2018-02-27T19:06:25","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3609","RelatedDescription":"Opened issue \"Document XM_TEST_NAME Hack\" (#3609) at xamarin/xamarin-macios","RelatedBody":"XM GuiUnit based tests accept XM_TEST_NAME to run only one test, but this is not documented.\r\n\r\nhttps://github.com/xamarin/xamarin-macios/blob/master/tests/common/mac/MacTestMain.cs#L36"},{"Id":"7305496923","Type":"PullRequestEvent","CreatedAt":"2018-02-27T18:59:42","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3606","RelatedDescription":"Merged pull request \"[apidiff] Update references to the latest stables\" (#3606) at xamarin/xamarin-macios","RelatedBody":"XI comes from `xcode9.2`;\nXM comes from `d15-5`;"},{"Id":"7305279375","Type":"IssuesEvent","CreatedAt":"2018-02-27T18:18:16","Actor":"cwensley","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3608","RelatedDescription":"Opened issue \"Xamarin.Mac Binding Library project does not support \"Full\" framework\" (#3608) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a new Xamarin.Mac \"Bindings Library\"\r\n2. Open up the properties for the bindings project\r\n3. Set Build > General > Target Framework to \"Xamarin.Mac Full\"\r\n4. Add a Cocoa App and set its target framework to \"Xamarin.Mac Full\"\r\n5. Add a reference on the Cocoa App to the bindings library\r\n5. Compile (broken!)\r\n\r\n### Expected Behavior\r\nYou should be able to create a bindings library for either \"modern\" or \"full\" frameworks, *and* compile them.\r\n\r\n### Actual Behavior\r\nIt only works for the \"modern\" framework. \r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Professional 2017 for Mac ===\r\n\r\nVersion 7.3.3 (build 23)\r\nInstallation UUID: d9050f0b-87f7-4e38-9d83-c01eaf2f82fc\r\nRuntime:\r\n\tMono 5.4.1.7 (2017-06/e66d9abbb27) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 504010007\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\n\t2.0.0-preview1-002111-00\r\n\t2.0.0-beta-001791-00\r\n\t1.1.1\r\n\t1.1.0\r\n\t1.0.4\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\n\t2.0.0-preview1-005977\r\n\t2.0.0-preview1-005645\r\n\t1.0.1\r\n\t1.0.0-preview2-1-003177\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.4.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.0\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.6.1.4 (Visual Studio Professional)\r\nHash: db807ec9\r\nBranch: xcode9.2\r\nBuild date: 2018-01-10 16:45:48-0500\r\n\r\n=== Xamarin.Android ===\r\n\r\nNot Installed\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.0.0.216 (Visual Studio Professional)\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 703030023\r\nGit revision: e02ab111d8181ffe766c2258141282c88188ebb6\r\nBuild date: 2018-02-20 08:06:38-05\r\nXamarin addins: 5ce2b6790676a4542aa0d69d07f6a716e17d4e65\r\nBuild lane: monodevelop-lion-d15-5\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.3\r\nDarwin 17.4.0 Darwin Kernel Version 17.4.0\r\n    Sun Dec 17 09:19:54 PST 2017\r\n    root:xnu-4570.41.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nAddinMaker 1.4.2\r\nRhinoCommon Plugin Support 7.3.3.0\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\n```\r\nBuilding Solution: MyBindingProject (Debug)\r\n__________________________________________________\r\nProject \"/Users/curtis/Projects/MyBindingProject/MyBindingProject/MyBindingProject.csproj\" (Build target(s)):\r\n\r\n/Library/Frameworks/Mono.framework/Versions/5.4.1/lib/mono/msbuild/15.0/bin/Microsoft.Common.CurrentVersion.targets(2003,5): warning MSB3245: Could not resolve this reference. Could not locate the assembly \"Xamarin.Mac\". Check to make sure the assembly exists on disk. If this reference is required by your code, you may get compilation errors.\r\n/Library/Frameworks/Xamarin.Mac.framework/Versions/Current/bin/bgen  -nostdlib /v /baselib:/Library/Frameworks/Xamarin.Mac.framework/Versions/Current/lib/mono/4.5/Xamarin.Mac.dll /unsafe /d:\"__UNIFIED__;__MACOS__;DEBUG\" /Users/curtis/Projects/MyBindingProject/MyBindingProject/ApiDefinition.cs /s:/Users/curtis/Projects/MyBindingProject/MyBindingProject/StructsAndEnums.cs -r /mscorlib.dll -r /Library/Frameworks/Mono.framework/Versions/5.4.1/lib/mono/4.5-api/System.Core.dll -r /Library/Frameworks/Mono.framework/Versions/5.4.1/lib/mono/4.5-api/System.dll -r /mscorlib.dll /tmpdir:/Users/curtis/Projects/MyBindingProject/MyBindingProject/obj/Debug/mac/ /sourceonly:/Users/curtis/Projects/MyBindingProject/MyBindingProject/obj/Debug/mac/sources.list /target-framework=Xamarin.Mac,Version=v4.5,Profile=Full \r\nBTOUCH : error CS0006: Metadata file `/mscorlib.dll' could not be found\r\nBTOUCH : error CS0006: Metadata file `/mscorlib.dll' could not be found\r\nBTOUCH : error CS1703: An assembly `System' with the same identity has already been imported. Consider removing one of the references\r\nBTOUCH : error CS1703: An assembly `System.Core' with the same identity has already been imported. Consider removing one of the references\r\nBTOUCH : error CS0518: The predefined type `System.Object' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.ValueType' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Attribute' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Int32' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.UInt32' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Int64' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.UInt64' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Single' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Double' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Char' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Int16' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Decimal' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Boolean' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.SByte' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Byte' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.UInt16' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.String' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Enum' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Delegate' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.MulticastDelegate' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Void' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Array' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Type' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Collections.IEnumerator' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Collections.IEnumerable' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.IDisposable' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.IntPtr' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.UIntPtr' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.RuntimeFieldHandle' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.RuntimeTypeHandle' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Exception' is not defined or imported\r\nDone building project \"MyBindingProject.csproj\" -- FAILED.\r\n\r\n---------------------- Done ----------------------\r\n\r\nBuild: 35 errors, 1 warning\r\n```\r\n\r\n### Example Project (If Possible)\r\n\r\n[MyBindingProject.zip](https://github.com/xamarin/xamarin-macios/files/1764172/MyBindingProject.zip)\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"968530780724088832","CreatedAt":"2018-02-27T16:58:27+00:00","UserScreenname":"xamarinhq","Text":"Our own @mayur_tendulkar shows you how to build a mobile app using #XamarinForms and the Microsoft Graph API:… https://t.co/svcX6jHBJ4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":39,"FavoriteCount":13,"RawContent":null},{"Id":"968204127166754816","CreatedAt":"2018-02-26T19:20:26+00:00","UserScreenname":"xamarinhq","Text":"Get a sneak peek at our newest @XamarinU course, \"Navigation Patterns in #XamarinForms\": https://t.co/3fd0sIUJMZ https://t.co/GzDZxRtlZH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":19,"RawContent":null},{"Id":"968170803916361728","CreatedAt":"2018-02-26T17:08:02+00:00","UserScreenname":"xamarinhq","Text":"Learn how to supercharge your Xamarin.Mac app startup times: https://t.co/JzwELyF3Tm https://t.co/ABxM6v3B6S","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":22,"FavoriteCount":4,"RawContent":null},{"Id":"967928201430388736","CreatedAt":"2018-02-26T01:04:01+00:00","UserScreenname":"xamarinhq","Text":"Implement or improve end-to-end mobile #DevOps in your apps with this series from Greg Shackles on the #VSAppCenter… https://t.co/bCckhyxtl6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":25,"RawContent":null},{"Id":"967564304206745600","CreatedAt":"2018-02-25T00:58:01+00:00","UserScreenname":"xamarinhq","Text":"Running #Xamarin.iOS unit tests in #VSTS: https://t.co/20PDCJZkbJ https://t.co/6VAIpDbCD7","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":76,"FavoriteCount":44,"RawContent":null},{"Id":"967121514339405824","CreatedAt":"2018-02-23T19:38:31+00:00","UserScreenname":"xamarinhq","Text":"Add @TizenProject to your #XamarinForms apps: https://t.co/pom9Nki4vo https://t.co/EVWC9fi7wy","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":25,"FavoriteCount":8,"RawContent":null},{"Id":"967078348043190272","CreatedAt":"2018-02-23T16:47:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how ActivityTask makes async/await easier to use in your #Xamarin Android mobile apps: https://t.co/drhcfIy4ht","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":22,"RawContent":null},{"Id":"966787653097181187","CreatedAt":"2018-02-22T21:31:53+00:00","UserScreenname":"xamarinhq","Text":"Create and host tvOS TVML apps with Microsoft #Azure and #Xamarin: https://t.co/ScMHDQBDvs https://t.co/sPxlVR6weS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":30,"FavoriteCount":18,"RawContent":null},{"Id":"966716967104245760","CreatedAt":"2018-02-22T16:51:00+00:00","UserScreenname":"xamarinhq","Text":"It's almost time for our webinar with @XamarinU on building your first intelligent app with #Xamarin and Microsoft… https://t.co/nrzOWMsSV0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":17,"FavoriteCount":4,"RawContent":null},{"Id":"966354831018520577","CreatedAt":"2018-02-21T16:52:00+00:00","UserScreenname":"xamarinhq","Text":"You don't want to miss tomorrow's webinar with @XamarinU on building your first intelligent app with #Xamarin and M… https://t.co/XMK3ovJfTs","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":35,"FavoriteCount":17,"RawContent":null},{"Id":"966037865846181889","CreatedAt":"2018-02-20T19:52:29+00:00","UserScreenname":"xamarinhq","Text":"Learn how to create simple Xamarin.iOS apps with #CoreML and Microsoft #Azure: https://t.co/poP0TGynlP https://t.co/Qv70tw9axj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":35,"RawContent":null},{"Id":"965998738874556416","CreatedAt":"2018-02-20T17:17:01+00:00","UserScreenname":"xamarinhq","Text":"Take advantage of #ARKit, an augmented-reality mode on iOS 11 for 6S and up iPhones + 2017 iPads and iPad Pros:… https://t.co/1lAEfhDA1g","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":16,"RawContent":null},{"Id":"965632571618062337","CreatedAt":"2018-02-19T17:02:00+00:00","UserScreenname":"xamarinhq","Text":"Curated resources on getting up and started quickly with #XamarinForms from Program Manager @davidortinau: https://t.co/amiCZn15ns","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":64,"FavoriteCount":27,"RawContent":null},{"Id":"965372405307904001","CreatedAt":"2018-02-18T23:48:11+00:00","UserScreenname":"xamarinhq","Text":"Start shipping better apps, faster with this curated list of #VSAppCenter resources: https://t.co/jU0cnONnM8 https://t.co/jYvtDxgwWV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":18,"RawContent":null},{"Id":"965038410061754371","CreatedAt":"2018-02-18T01:41:01+00:00","UserScreenname":"xamarinhq","Text":"Minimizes the complexity of video playback across Android, iOS, and Windows environments to deliver rich media expe… https://t.co/RWk7OAQZFR","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":126,"FavoriteCount":45,"RawContent":null},{"Id":"964574735530065920","CreatedAt":"2018-02-16T18:58:32+00:00","UserScreenname":"xamarinhq","Text":"Extending #XamarinForms controls functionality with Behaviors: https://t.co/8arBeS4lBP https://t.co/7nB0W3r0xF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":59,"FavoriteCount":23,"RawContent":null},{"Id":"964541888152920064","CreatedAt":"2018-02-16T16:48:01+00:00","UserScreenname":"xamarinhq","Text":"Adding sound to a #XamarinForms app using the SimpleAudioPlayer plugin: https://t.co/r8NSFRpl33 https://t.co/WXW0TRw6LE","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":10,"RawContent":null},{"Id":"964239391743979520","CreatedAt":"2018-02-15T20:46:00+00:00","UserScreenname":"xamarinhq","Text":"Try out the just-released Xamarin.iOS and Xcode 9.3 Web Preview: https://t.co/2zZi61OBFp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":30,"FavoriteCount":16,"RawContent":null},{"Id":"964183272367579136","CreatedAt":"2018-02-15T17:03:00+00:00","UserScreenname":"xamarinhq","Text":"Don't miss next week's webinar with @XamarinU on building your first intelligent app with #Xamarin and Microsoft… https://t.co/Dn5JtYz3iz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":32,"FavoriteCount":17,"RawContent":null},{"Id":"963815851416834049","CreatedAt":"2018-02-14T16:43:00+00:00","UserScreenname":"xamarinhq","Text":"Adaptive UI with #XamarinForms: https://t.co/XZYix2Cv0j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":60,"FavoriteCount":22,"RawContent":null}]}},"RunOn":"2018-02-28T05:30:38.0437232Z","RunDurationInMilliseconds":3961}