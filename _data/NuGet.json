{"Data":{"Blog":{"FeedItems":[{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null},{"Title":"NuGet Summer 2018 Roadmap","PublishedOn":"2018-07-02T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This blog post provides insights into the NuGet team plans for the upcoming quarter (July &#8211; Sep 2018). In the March 2018 NuGet Spring 2018 Roadmap, we had outlined Package Signing,...","Href":"https://devblogs.microsoft.com/nuget/nuget-summer-2018-roadmap/","RawContent":null},{"Title":"Introducing signed package submissions to NuGet.org","PublishedOn":"2018-05-22T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In September 2017, we announced our plans to improve the security of the NuGet ecosystem by introducing the ability for package authors to sign packages. Today, we want to announce support for any...","Href":"https://devblogs.microsoft.com/nuget/introducing-signed-package-submissions/","RawContent":null},{"Title":"NuGet.org will only support MSA/AAD starting June 1st, 2018","PublishedOn":"2018-05-15T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We had previously announced the deprecation of NuGet.org&#8217;s home-grown authentication in favor of Microsoft accounts (MSA) that will allow us to add support for additional security systems such...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-only-support-msa-aad-starting-june/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"10152386115","Type":"IssuesEvent","CreatedAt":"2019-08-05T23:29:52","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7361","RelatedDescription":"Closed issue \"[GitHub Usage] Update \"Find and choose packages\" documentation\" (#7361) at NuGet/NuGetGallery","RelatedBody":"Add \"GitHub Usage\" to this document: https://docs.microsoft.com/en-us/nuget/consume-packages/finding-and-choosing-packages#evaluating-packages\r\n\r\n@mogah, Please let me know if you need help editing the documentation! ðŸ˜„ "},{"Id":"10151751673","Type":"PullRequestEvent","CreatedAt":"2019-08-05T21:11:53","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7417","RelatedDescription":"Opened pull request \"Allow form feed character to be used in license files\" (#7417) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/7405.\r\n"},{"Id":"10151358850","Type":"PullRequestEvent","CreatedAt":"2019-08-05T20:07:27","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7409","RelatedDescription":"Merged pull request \"[GitHub Usage] Trim whitespace\" (#7409) at NuGet/NuGetGallery","RelatedBody":"Beautiful new UI:\r\n\r\n![image](https://user-images.githubusercontent.com/737941/62491811-c9740980-b781-11e9-992c-0b0852cabaf1.png)\r\n\r\nAddresses https://github.com/nuget/nugetgallery/issues/7346"},{"Id":"10151160113","Type":"PullRequestEvent","CreatedAt":"2019-08-05T19:34:57","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7399","RelatedDescription":"Merged pull request \"Fix Support Request Dialog box\" (#7399) at NuGet/NuGetGallery","RelatedBody":"Address issue #7397 \r\nThis was caused by the upgrade to jQuery 3.x and a known incompatibility with jqueryUI < 1.12\r\nsee https://github.com/vanderlee/colorpicker/issues/132 and https://github.com/jquery/jquery/issues/3193 for details."},{"Id":"10150750007","Type":"IssuesEvent","CreatedAt":"2019-08-05T18:29:53","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7416","RelatedDescription":"Opened issue \"[Icons] Catalog2Dnx can host icon from IconUrl\" (#7416) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"10150741925","Type":"IssuesEvent","CreatedAt":"2019-08-05T18:28:34","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7262","RelatedDescription":"Closed issue \"[Icons] db2lucene support for Icons\" (#7262) at NuGet/NuGetGallery","RelatedBody":"Proper icon URL needs to be generated.\r\nChanges need to mimic the catalog2lucene changes (keeping in mind different data source): #7067 "},{"Id":"10150225752","Type":"IssuesEvent","CreatedAt":"2019-08-05T17:05:28","Actor":"adamjcooper","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7415","RelatedDescription":"Opened issue \"Locked out, unable to convert nuget.org account to use Microsoft sign in\" (#7415) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\n\r\nOur corporate nuget.org account username is \"accusoft\". This is currently a nuget.org account, not a Microsoft account.\r\n\r\nWe can sign in using our NuGet.org account, but after signing in we are shown the home page with a warning banner telling us we need to go to Account Settings and switch to using a Microsoft account to sign in. However, we can't actually open our account settings. In fact, nearly the entire UI of the home page is disabled (links don't work, cursor changes to indicate a clickable link or text field in strange places, etc.). \r\n\r\nAfter signing in via NuGet.org, we've tried manually navigating to https://www.nuget.org/account, but this simply redirects back to the home page.\r\n\r\nWe seem to be locked out of our account, without any way forward to convert to using a Microsoft account for sign in.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n\r\n1. Navigate to https://www.nuget.org (using private/incognito mode to ensure no cookies are set)\r\n2. Click the \"sign in\" link in the top right\r\n3. Because we do not yet have a Microsoft account setup, click \"Sign in using NuGet.org account\"\r\n4. Sign in with our username and password\r\n5. Observe that we are signed in and see this at the top of the page when it loads:\r\n\r\n![image](https://user-images.githubusercontent.com/443020/62481472-85ccd000-b780-11e9-929a-76ea2930b178.png)\r\n\r\n6. Try to click the \"Account Settings\" link and observe it does not function. Try doing anything significant on this page and notice it does not function (open the profile menu in top right, click on links in top nav bar, etc.).\r\n7. Manually navigate to https://www.nuget.org/account. Observe that the account page does not load. Instead, the home page is loaded. \r\n\r\n### Expected behavior\r\nWe should be able to sign in with our NuGet.org account and edit our account settings to switch over to using a Microsoft account.\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/443020/62481598-d6442d80-b780-11e9-9a58-e22b17f27db0.png)\r\n\r\n![image](https://user-images.githubusercontent.com/443020/62481626-ea882a80-b780-11e9-9ba1-23d03e5ba7e6.png)\r\n\r\n![image](https://user-images.githubusercontent.com/443020/62481662-068bcc00-b781-11e9-9f61-24d38b0e52d7.png)\r\n\r\n![image](https://user-images.githubusercontent.com/443020/62481717-3044f300-b781-11e9-8bb5-393e672fa8c8.png)\r\n\r\nAdditionally, manually navigating to https://www.nuget.org/account does not load the account details page. Instead, replies with an HTTP 302, redirecting to the (still non-functional) home page."},{"Id":"10148792008","Type":"IssuesEvent","CreatedAt":"2019-08-05T13:55:34","Actor":"dac11","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7414","RelatedDescription":"Opened issue \"500 Internal Server Error\" (#7414) at NuGet/NuGetGallery","RelatedBody":"We are using NuGet.Server v3.2.1.0. During startup the server returns \"500 Internal Server Error\" to every client which wants to access the nuget server. The Server needs about a minute to start up.\r\n\r\nI did disable FileSystemMonitoring in Webconfig and set initialCacheRebuildAfterSeconds =1. Now the \"500 Internal Server Error\" is returned for only about 10 Secondes.\r\n\r\nIs this by design or a bug? Everyone thinks the server is broken but it is only waking up.\r\n"},{"Id":"10147806216","Type":"IssuesEvent","CreatedAt":"2019-08-05T11:35:01","Actor":"varbedi","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7413","RelatedDescription":"Opened issue \"On-prem hosted NuGet Gallery - Push symbol packages and its feed for Visual Studio\" (#7413) at NuGet/NuGetGallery","RelatedBody":"Hi,\r\n\r\nMy company is looking to host its own NuGet Gallery and would like to have both the main package and symbols package feeds available using it.\r\n\r\nSo, I have downloaded the source code for it and tried to push both the main package and symbols package, but pushing the symbols package fails.\r\n\r\nLooking at the source code for NuGet Gallery, I can see that it only allows symbol packages which have PackageType set to 'SymbolsPackage' in metadata which I believe is only available in 'snupkg' symbol packages.\r\n\r\nI also looked at how NuGet client works and if I understand correctly, the source need to implement V3 API which has the 'index.json' file. Is there any documentation for I can achieve the same for the on-prem hosted NuGet Gallery and what will be the URL to use in Visual Studio for symbols packages?\r\n\r\nIf not, can you please recommend the other best possible solutions?\r\n\r\nThanks\r\n"},{"Id":"10145187263","Type":"PullRequestEvent","CreatedAt":"2019-08-05T02:56:28","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7412","RelatedDescription":"Merged pull request \"Upgrade ServerCommon dependency\" (#7412) at NuGet/NuGetGallery","RelatedBody":"React to the breaking API changes in https://github.com/NuGet/ServerCommon/pull/303, which blocks testing https://github.com/NuGet/ServerCommon/pull/297. This does not change any existing functionality.\r\n\r\nAddresses https://github.com/NuGet/NuGetGallery/issues/7411"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"10152556144","Type":"IssuesEvent","CreatedAt":"2019-08-06T00:19:18","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8104","RelatedDescription":"Closed issue \"Final 5.1.0 insertion and shipping\" (#8104) at NuGet/Home","RelatedBody":"5.1.0.6013 Build\r\nReleaseId via AzDO: [322942](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=322942)\r\n\r\n- [x] Shepherd insertions into VS-16.1.0-preview4-- inserted via the setup/msbuild/nuget joint insertion\r\n\r\n- [x] Shepherd insertions into SDK\r\nhttps://github.com/dotnet/sdk/pull/3217  -- sdk release/2.2.3xx branch\r\nhttps://github.com/dotnet/sdk/pull/3218  -- sdk release/2.1.7xx branch\r\n\r\n- [x] Shepherd insertions into CLI\r\nhttps://github.com/dotnet/cli/pull/11303   -- cli release/2.2.3xx branch\r\nhttps://github.com/dotnet/cli/pull/11304   -- cli release/2.1.7xx branch\r\n\r\n- [x] Review and polish release notes\r\n- [x] Send PR with release notes to team - https://github.com/NuGet/docs.microsoft.com-nuget/pull/1442\r\n- [x] publish release notes - @karann-msft \r\n- [x] draft team tweet, etc... - @karann-msft \r\n\r\n- [x] Ship packages- @rrelyea \r\n- [x] Ship nuget.exe - @loic-sharma & @rrelyea - NuGet.Services.Index/pull/143\r\n\r\nWait a few weeks \r\n\r\n- [x] Bless nuget.exe if feedback after a few weeks is good."},{"Id":"10152513807","Type":"IssuesEvent","CreatedAt":"2019-08-06T00:06:29","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8390","RelatedDescription":"Closed issue \"Revert \"public -> internal\" change in PluginProcess\" (#8390) at NuGet/Home","RelatedBody":"Tracking issue for Revert \"public -> internal\" change in PluginProcess NuGet/NuGet.Client#2954"},{"Id":"10152443008","Type":"IssuesEvent","CreatedAt":"2019-08-05T23:45:52","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/6060","RelatedDescription":"Reopened issue \"add support for dotnet list command\" (#6060) at NuGet/Home","RelatedBody":"_From @Kemyke on October 19, 2017 13:29_\n\n## Steps to reproduce\r\nThere is no substituting functionality for 'nuget.exe list' feature. That would be great if it would be possible to use the dotnet CLI for automation on every platform. Currently the mono should be installed on Ubutnu to run nuget.exe. Is there a plan to add all the missing functionality to the dotnet CLI?\r\n\r\n## Expected  behavior\r\ndotnet nuget list <Filter expression>\r\n\r\n## Actual behavior\r\nThere is no funcionality in the dotnet CLI to list the available packages.\r\n\r\n\r\n\r\n\r\n\r\n\n\n_Copied from original issue: dotnet/cli#7869_"},{"Id":"10151970899","Type":"IssuesEvent","CreatedAt":"2019-08-05T21:52:22","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8425","RelatedDescription":"Opened issue \"Log the stack trace when the log level is detailed/debug. \" (#8425) at NuGet/Home","RelatedBody":"Follow the code references to https://github.com/NuGet/NuGet.Client/blob/d8d6a2f364502b43910fb2845b0f29e2dcff0d8a/src/NuGet.Core/NuGet.Common/ExceptionUtilities.cs#L21. "},{"Id":"10151700657","Type":"IssuesEvent","CreatedAt":"2019-08-05T21:02:55","Actor":"JarahSi","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8254","RelatedDescription":"Closed issue \"Validate dependency groups in nuspec\" (#8254) at NuGet/Home","RelatedBody":"Validate the dependencies found in the `lib` or `ref` folder in the nuspec\r\n\r\n[Spec](https://github.com/NuGet/Engineering/blob/josi-pkgValidation/Client.Specs/PackageValidation/DependenciesInNuspecMatchLibRefFolder.md)\r\n\r\n[PR](https://github.com/NuGet/NuGet.Client/pull/2936)"},{"Id":"10151219601","Type":"IssuesEvent","CreatedAt":"2019-08-05T19:44:43","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8424","RelatedDescription":"Opened issue \"NU1403 improvements - validate all packages, include the expected/actual sha values\" (#8424) at NuGet/Home","RelatedBody":"The current NU1403 message looks something like this: \r\n\r\n```\r\nerror NU1403: The package System.Collections.4.0.11 sha512 validation failed. The package is different than the last restore\r\n```\r\n\r\nI have a couple of ideas for improvements.\r\n\r\n- [ ] Don't say sha512, use hash. \r\n\r\n- [ ] Validate all packages when encountering this error. \r\nCurrently we fail fast and we don't validate all the packages. We should validate all the packages and add a message for every single offending package. These errors shouldn't be a moving target for the customer. \r\n\r\n- [ ] Include the expected and actual values of the hash. I think there's potential value in this, but I also think that we shouldn't bloat the messages with unneeded info. \r\n\r\nThoughts @anangaur @NuGet/nuget-client \r\n"},{"Id":"10150804932","Type":"IssuesEvent","CreatedAt":"2019-08-05T18:38:41","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8423","RelatedDescription":"Opened issue \"Enable test PackCommand_WithGeneratePackageOnBuildSet_CanPublish for netcoreapp3.0 when it's ready\" (#8423) at NuGet/Home","RelatedBody":"Test PackCommand_WithGeneratePackageOnBuildSet_CanPublish is broken for SDK issue https://github.com/dotnet/sdk/issues/3367  (for netcoreapp3.0 only).\r\nWe skip this test for now.\r\nWe need to enable this test for netcoreapp3.0 when the above issue is solved."},{"Id":"10149761379","Type":"IssuesEvent","CreatedAt":"2019-08-05T15:55:05","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7958","RelatedDescription":"Closed issue \"Nuget Context Sensitive Menu should have \"Manage Nuget Packages\"\" (#7958) at NuGet/Home","RelatedBody":"<p>Could you Add &quot;Manage Nuget Packages&quot; to the context sensitive menu when selecting the Nuget node? I know its there on Dependencies but I still right click on Nugets intuitively.  </p><p><a href=\"https://pbs.twimg.com/media/DzV7zOzVAAA0sLy.png:large\"> Image:DzV7zOzVAAA0sLy.png:large</a></p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/idea/457905/nuget-context-sensitive-menu-should-have-manage-nu.html\nVSTS ticketId: 792883_\n_These are the original issue comments:_\n\nJane Wu [MSFT] on 2/15/2019, 02:11 AM (48 days ago): <p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.&nbsp;We'll provide an update once the issue has been triaged by the product team.</p>"},{"Id":"10148913251","Type":"IssuesEvent","CreatedAt":"2019-08-05T14:10:24","Actor":"dac11","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8422","RelatedDescription":"Closed issue \"500 Internal Server Error during Startup\" (#8422) at NuGet/Home","RelatedBody":"We are using NuGet.Server v3.2.1.0. During startup the server returns \"500 Internal Server Error\" to every client which wants to access the nuget server. The Server needs about a minute to start up.\r\n\r\nI did disable FileSystemMonitoring in Webconfig and set initialCacheRebuildAfterSeconds =1. Now the \"500 Internal Server Error\" is returned for only about 10 Secondes.\r\n\r\nIs this by design or a bug? Everyone thinks the server is broken but it is only waking up.\r\n\r\n"},{"Id":"10146531766","Type":"IssuesEvent","CreatedAt":"2019-08-05T08:23:34","Actor":"dac11","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8422","RelatedDescription":"Opened issue \"500 Internal Server Error during Startup\" (#8422) at NuGet/Home","RelatedBody":"We are using NuGet.Server v3.2.1.0. During startup the server returns \"500 Internal Server Error\" to every client which wants to access the nuget server. The Server needs about a minute to start up.\r\n\r\nI did disable FileSystemMonitoring in Webconfig and set initialCacheRebuildAfterSeconds =1. Now the \"500 Internal Server Error\" is returned for only about 10 Secondes.\r\n\r\nIs this by design or a bug? Everyone thinks the server is broken but it is only waking up.\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10115721045","Type":"IssuesEvent","CreatedAt":"2019-07-30T22:44:31","Actor":"shoter","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/36","RelatedDescription":"Closed issue \"Replace reference to codeplex issue numer 3072\" (#36) at NuGet/Announcements","RelatedBody":"This is copy of codeplex issue number 3072 as it is referenced inside code. I should do a PR shortly to address this one.\r\n\r\nThe place where it is referenced is RuntimeHelper.cs:150\r\n\r\n\r\n---\r\n\r\nWe're hitting an issue with Microsoft.Bcl package where NuGet is adding a binding redirect for a binary that is considered part of the framework, this causes the application to crash because the binding redirect refers to assembly version that is not available at runtime.\r\n\r\n@Repro:\r\n\r\n1. Create a new Console Application targeting 4.5\r\n2. Create a new Portable Library targeting .NET Framework 4.5, Silverlight 4, Windows Phone 7.5 and .NET for Windows Store apps\r\n3. Add a reference to the portable library from the Console Application\r\n4. Install the Microsoft.Bcl package (1.0.16-rc) to both projects\r\n\r\n@Expected: No binding redirect for System.Runtime in the .NET Framework 4.5 project because a ___later version___ is part of the target framework (see C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\RedistList\\FrameworkList.xml)\r\n@Actual: Binding redirect\r\n\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-1.5.11.0\" newVersion=\"1.5.11.0\" />\r\n</dependentAssembly>\r\n\r\n\r\nYou can use the IVsFrameworkMultiTargeting to determine if a given assembly version is available as part of a given target framework.\r\nMake sure when you fix this, that you only skip the binding redirect if ___a later or same version___ is available in the framework.  \r\n2013-02-22\r\n\r\n---\r\n\r\nWe'll do this in 2.4 release.  \r\n2013-02-26\r\n\r\n---\r\n\r\nIs IVsFrameworkMultiTargeting.IsReferenceableInTargetFx the method I need to call? What should I pass to pwszAssemblySpec?  \r\n2013-06-08\r\n\r\n---\r\n\r\nIt's the full name of the assembly (mscorlib, Version=[version], PublicKeyToken=[token], Culture=[culture]). It can either contain all the information (key, version, etc), or just the simple name (\"mscorlib\")  \r\n2013-06-10\r\n\r\n---\r\n\r\nSo look like I can only check for the same version of the target framework. Can't check for a later version using this method, because I don't know what future versions will be.  \r\n2013-06-12\r\n\r\n---\r\n\r\nThat's fine. That's exactly the behavior we want. For example, System.Runtime didn't ship in 4.0, but did in 4.5. We still want a binding redirect generated for it in 4.0, but not for 4.5.  \r\n2013-06-13\r\n\r\n---\r\n\r\nI followed the exact same steps above, but there's no binding redirect added to the Console Application. It's only added to the __Portable Library project__. Is that the bug?  \r\n2013-06-13\r\n\r\n---\r\n\r\nThe binding redirects added to the Portable Library project seems to come from the Microsoft.Bcl package itself (from the content folder's app.config.transform file). this looks like a non-bug.\r\n2013-06-13\r\n\r\n  \r\nI'm chasing up the repro with Eric St. John. He walked through the code and figured out where it was broken.\r\n\r\nIt's the not the app.config.tranform, notice how the net45 content is empty, and hence no transforms. We also marked our transforms with a special marker that indicates that we added the redirects . The binding redirects we were seeing were not coming from us.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAre you seeing the binding redirects added to the Console Application or the Portable Library? I don't see binding redirect added to Console Application, only the Portable Library.  \r\n2013-06-13\r\n\r\n---\r\n\r\nYes I'm talking about the ConsoleApplication. The binding redirects in the portable library project are expected, and do not affect runtime behavior (as the app.config is ignored and not copied to the app project), and hence can't cause an application to crash.\r\n\r\nI've found another repro (NuGet has really weird logic around when it decides to add binding redirects so it was hard to find a repro).\r\n\r\nThe repro is instead of using the Microsoft.Bcl package, install the Microsoft.Net.Http, 2.2.3-beta package. Make sure you are targeting __4.5__ from the ConsoleApplication and the exact platforms that I called out above for portable.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAlso, the ConsoleApplication must be referencing the portable project before installing the package.  \r\n2013-06-13\r\n\r\n---\r\n\r\nOK now I can repro  \r\n2013-06-14\r\n\r\n---\r\n\r\nOK, I've got a fix now. It no longer adds the binding redirect for System.Runtime.dll, but still adds one for System.Net.Http.Primitives. I guess it's expected, right? Please confirm.\r\n\r\n```\r\n<assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Net.Http.Primitives\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-4.2.3.0\" newVersion=\"4.2.3.0\" />\r\n</dependentAssembly>\r\n</assemblyBinding>\r\n```  \r\n2013-06-14\r\n\r\n---\r\n\r\n\r\nYes that's correct. System.Net.Http.Primitives does not exist in the framework.  \r\n2013-06-14\r\n\r\n---\r\n\r\nFixed in changeset b8d515f6341193b970d2a9d837e580e762d2eb71  \r\n2013-06-19\r\n\r\n---\r\n\r\ni get the same issue with my test project still, runtime being added... if i comment this out the tests run fine... if not i get exceptions thrown from json.net  \r\n2013-08-09\r\n\r\n---\r\n\r\n(or i can change the version up to 4.0.0.0 or something and it works)  \r\n2013-08-09"},{"Id":"10115715827","Type":"IssuesEvent","CreatedAt":"2019-07-30T22:43:23","Actor":"shoter","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/36","RelatedDescription":"Opened issue \"Replace reference to codeplex issue numer 3072\" (#36) at NuGet/Announcements","RelatedBody":"This is copy of codeplex issue number 3072 as it is referenced inside code. I should do a PR shortly to address this one.\r\n\r\nThe place where it is referenced is RuntimeHelper.cs:150\r\n\r\n\r\n---\r\n\r\nWe're hitting an issue with Microsoft.Bcl package where NuGet is adding a binding redirect for a binary that is considered part of the framework, this causes the application to crash because the binding redirect refers to assembly version that is not available at runtime.\r\n\r\n@Repro:\r\n\r\n1. Create a new Console Application targeting 4.5\r\n2. Create a new Portable Library targeting .NET Framework 4.5, Silverlight 4, Windows Phone 7.5 and .NET for Windows Store apps\r\n3. Add a reference to the portable library from the Console Application\r\n4. Install the Microsoft.Bcl package (1.0.16-rc) to both projects\r\n\r\n@Expected: No binding redirect for System.Runtime in the .NET Framework 4.5 project because a ___later version___ is part of the target framework (see C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\RedistList\\FrameworkList.xml)\r\n@Actual: Binding redirect\r\n\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-1.5.11.0\" newVersion=\"1.5.11.0\" />\r\n</dependentAssembly>\r\n\r\n\r\nYou can use the IVsFrameworkMultiTargeting to determine if a given assembly version is available as part of a given target framework.\r\nMake sure when you fix this, that you only skip the binding redirect if ___a later or same version___ is available in the framework.  \r\n2013-02-22\r\n\r\n---\r\n\r\nWe'll do this in 2.4 release.  \r\n2013-02-26\r\n\r\n---\r\n\r\nIs IVsFrameworkMultiTargeting.IsReferenceableInTargetFx the method I need to call? What should I pass to pwszAssemblySpec?  \r\n2013-06-08\r\n\r\n---\r\n\r\nIt's the full name of the assembly (mscorlib, Version=[version], PublicKeyToken=[token], Culture=[culture]). It can either contain all the information (key, version, etc), or just the simple name (\"mscorlib\")  \r\n2013-06-10\r\n\r\n---\r\n\r\nSo look like I can only check for the same version of the target framework. Can't check for a later version using this method, because I don't know what future versions will be.  \r\n2013-06-12\r\n\r\n---\r\n\r\nThat's fine. That's exactly the behavior we want. For example, System.Runtime didn't ship in 4.0, but did in 4.5. We still want a binding redirect generated for it in 4.0, but not for 4.5.  \r\n2013-06-13\r\n\r\n---\r\n\r\nI followed the exact same steps above, but there's no binding redirect added to the Console Application. It's only added to the __Portable Library project__. Is that the bug?  \r\n2013-06-13\r\n\r\n---\r\n\r\nThe binding redirects added to the Portable Library project seems to come from the Microsoft.Bcl package itself (from the content folder's app.config.transform file). this looks like a non-bug.\r\n2013-06-13\r\n\r\n  \r\nI'm chasing up the repro with Eric St. John. He walked through the code and figured out where it was broken.\r\n\r\nIt's the not the app.config.tranform, notice how the net45 content is empty, and hence no transforms. We also marked our transforms with a special marker that indicates that we added the redirects . The binding redirects we were seeing were not coming from us.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAre you seeing the binding redirects added to the Console Application or the Portable Library? I don't see binding redirect added to Console Application, only the Portable Library.  \r\n2013-06-13\r\n\r\n---\r\n\r\nYes I'm talking about the ConsoleApplication. The binding redirects in the portable library project are expected, and do not affect runtime behavior (as the app.config is ignored and not copied to the app project), and hence can't cause an application to crash.\r\n\r\nI've found another repro (NuGet has really weird logic around when it decides to add binding redirects so it was hard to find a repro).\r\n\r\nThe repro is instead of using the Microsoft.Bcl package, install the Microsoft.Net.Http, 2.2.3-beta package. Make sure you are targeting __4.5__ from the ConsoleApplication and the exact platforms that I called out above for portable.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAlso, the ConsoleApplication must be referencing the portable project before installing the package.  \r\n2013-06-13\r\n\r\n---\r\n\r\nOK now I can repro  \r\n2013-06-14\r\n\r\n---\r\n\r\nOK, I've got a fix now. It no longer adds the binding redirect for System.Runtime.dll, but still adds one for System.Net.Http.Primitives. I guess it's expected, right? Please confirm.\r\n\r\n```\r\n<assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Net.Http.Primitives\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-4.2.3.0\" newVersion=\"4.2.3.0\" />\r\n</dependentAssembly>\r\n</assemblyBinding>\r\n```  \r\n2013-06-14\r\n\r\n---\r\n\r\n\r\nYes that's correct. System.Net.Http.Primitives does not exist in the framework.  \r\n2013-06-14\r\n\r\n---\r\n\r\nFixed in changeset b8d515f6341193b970d2a9d837e580e762d2eb71  \r\n2013-06-19\r\n\r\n---\r\n\r\ni get the same issue with my test project still, runtime being added... if i comment this out the tests run fine... if not i get exceptions thrown from json.net  \r\n2013-08-09\r\n\r\n---\r\n\r\n(or i can change the version up to 4.0.0.0 or something and it works)  \r\n2013-08-09"},{"Id":"10105705706","Type":"IssuesEvent","CreatedAt":"2019-07-29T18:41:10","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/35","RelatedDescription":"Opened issue \"Machine readable output for dotnet list package\" (#35) at NuGet/Announcements","RelatedBody":"The spec for 'Machine readable output for dotnet list package' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Machine readable output for dotnet list package](https://github.com/NuGet/Home/wiki/%5BSpec%5D-Machine-readable-output-for-dotnet-list-package) | https://github.com/NuGet/Home/issues/7752 |"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1124053944269983745","CreatedAt":"2019-05-02T20:51:58+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfvqkS is currently degraded and some pages might take too long to load. We are investigating theâ€¦ https://t.co/j3saBGKARZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1121348019914334210","CreatedAt":"2019-04-25T09:39:36+00:00","UserScreenname":"nuget","Text":"Thanks for your contribution. https://t.co/RDrP9LnHU3","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":26,"FavoriteCount":3,"RawContent":null},{"Id":"1116042504854335488","CreatedAt":"2019-04-10T18:17:22+00:00","UserScreenname":"nuget","Text":"We have just published the NuGet Roadmap for Spring 2019. Check it out now! \nhttps://t.co/gt7qR0S3wV","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":18,"RawContent":null},{"Id":"1115380341353537538","CreatedAt":"2019-04-08T22:26:10+00:00","UserScreenname":"nuget","Text":"Alert ðŸš¨: Package publishing to @NuGet.org is taking more time than expected. The team is currently investigating thâ€¦ https://t.co/EuaZ7gBehM","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":1,"FavoriteCount":6,"RawContent":null}]}},"RunOn":"2019-08-06T05:30:46.6666715Z","RunDurationInMilliseconds":2120}