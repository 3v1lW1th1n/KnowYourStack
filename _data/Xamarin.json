{"Data":{"Blog":{"FeedItems":[{"Title":"Podcast: Android Oreo, iOS 11, and Xamarin.Forms Tips & Tricks","PublishedOn":"2017-09-22T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>In this episode of the Xamarin Podcast, James Montemagno and I cover Xamarin support for Android Oreo and iOS 11, share tips for beating the learning curve with Xamarin.Forms, talk upcoming releases in the pipeline, and more! Be sure to download today&#8217;s episode from your favorite podcasting app. Subscribe or Download Today Keeping up with [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/podcast-android-oreo-ios-11-xamarin-forms-tips-tricks/\">Podcast: Android Oreo, iOS 11, and Xamarin.Forms Tips &#038; Tricks</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/podcast-android-oreo-ios-11-xamarin-forms-tips-tricks/","RawContent":null},{"Title":"Protecting Your Xamarin Apps with Dotfuscator","PublishedOn":"2017-09-20T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>This is a special guest post from Joe Sewell, a developer on the Dotfuscator team at PreEmptive Solutions. Let&#8217;s be honest, releasing a library, desktop app, or mobile app can be a bit scary. Once your software is freely available to the world, you lose a certain degree of control over how it will be [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/protecting-xamarin-apps-dotfuscator/\">Protecting Your Xamarin Apps with Dotfuscator</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/protecting-xamarin-apps-dotfuscator/","RawContent":null},{"Title":"Augment Reality with Xamarin and iOS 11","PublishedOn":"2017-09-19T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>One of the showcase features of iOS 11 is ARKit, an augmented-reality mode available on devices powered by A9 and newer chips (basically, 6S and better iPhones, 2017 iPads, and iPad Pros). With ARKit, users hold up the device and view a composite of the video feed and computer-generated imagery (either 2D SpriteKit or 3D [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/augment-reality-xamarin-ios-11/\">Augment Reality with Xamarin and iOS 11</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/augment-reality-xamarin-ios-11/","RawContent":null},{"Title":"Learn How The Lean Cook Uses Mobile to Drive Revenue and Promote Healthy Living","PublishedOn":"2017-09-18T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>The Lean Cook, a popular UK diet and fitness blog started as a hobby by a husband and wife team, is a prime example of how to design apps for the user. Instead of simply replicating web content on a smaller screen, the team crafted an interactive shopping and cooking experience. They’ve grown a loyal following, and their latest project (available [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/learn-lean-cook-uses-mobile-drive-revenue-promote-healthy-living/\">Learn How The Lean Cook Uses Mobile to Drive Revenue and Promote Healthy Living</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/learn-lean-cook-uses-mobile-drive-revenue-promote-healthy-living/","RawContent":null},{"Title":"Xamarin.Forms: Tips for Beating the Learning Curve","PublishedOn":"2017-09-15T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>As a first time user learning any new technology or pattern, there’s always a curve, and over the years I&#8217;ve stood at the threshold of a product and gazed up that curve to determine how painfully steep it appeared and how long it would take until I was productive. Now, as the Program Manager for Xamarin.Forms, [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/xamarin-forms-tips-beating-learning-curve/\">Xamarin.Forms: Tips for Beating the Learning Curve</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/xamarin-forms-tips-beating-learning-curve/","RawContent":null},{"Title":"Xamarin All-Stars at .NET Conf 2017!","PublishedOn":"2017-09-14T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Join Xamarin Product Managers and Engineers at .NET Conf 2017, a free virtual event for any developer. This year&#8217;s speaker line-up consists of all-star Xamarin speakers, including Miguel de Icaza, James Montemagno, and Mikayla Hutchinson, who will present on Xamarin tooling and the latest on what’s happening with Xamarin and related technologies. What&#8217;s .NET Conf? [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/xamarin-stars-net-conf-2017/\">Xamarin All-Stars at .NET Conf 2017!</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/xamarin-stars-net-conf-2017/","RawContent":null},{"Title":"Get Your Apps Ready for iOS 11!","PublishedOn":"2017-09-13T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>We’ve just updated our iOS 11 support to go along with the Xcode 9 GM Seed release. You can use this build along with the Xcode 9 GM to submit applications that take advantage of the new features in iOS 11, tvOS 11 and watchOS 4 to the Apple AppStore. We also have awesome new sample [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/get-apps-ready-ios-11/\">Get Your Apps Ready for iOS 11!</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/get-apps-ready-ios-11/","RawContent":null},{"Title":"Xamarin.Android 8.0 Gets Even Sweeter with Oreo","PublishedOn":"2017-09-11T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>Android 8.0 Oreo is by far the sweetest version of Android to date, with great new features including notification channels, notification badges, custom fonts in XML, downloadable fonts, instant apps, background limits, autofill, and picture-in-picture (PIP). We&#8217;re excited to announce Xamarin.Android support for Android Oreo in our latest release of Xamarin.Android for both Visual Studio [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/xamarin-android-8-0-gets-even-sweeter-with-oreo/\">Xamarin.Android 8.0 Gets Even Sweeter with Oreo</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/xamarin-android-8-0-gets-even-sweeter-with-oreo/","RawContent":null},{"Title":"Podcast: Android Oreo Support, Xamarin Live Player Preview 2, New iOS 11 Previews, and more!","PublishedOn":"2017-09-11T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>In this episode of the Xamarin Podcast, James Montemagno and I discuss all of the amazing new previews available to Xamarin developers, including Android Oreo, iOS 11, Xamarin Live Player, Xamarin.Forms, and more! We also discuss some exciting news with the Xamarin MVP Program and a new certification level for Xamarin developers. Be sure to [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/podcast-android-oreo-support-xamarin-live-player-preview-2-new-ios-11-previews/\">Podcast: Android Oreo Support, Xamarin Live Player Preview 2, New iOS 11 Previews, and more!</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/podcast-android-oreo-support-xamarin-live-player-preview-2-new-ios-11-previews/","RawContent":null},{"Title":"Digitally Imported Delivers 10 Music Streaming Apps to Millions of Fans Globally","PublishedOn":"2017-09-07T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"<p>One of the first music streaming services and the #1 radio network for electronic music fans, Digitally Imported’s laser focus on UX and mobile quality helps them retain their competitive edge and keep users coming back for more. The team has grown from one developer and one app to a global team supporting five (near [&#8230;]</p>\n<p>The post <a rel=\"nofollow\" href=\"https://blog.xamarin.com/digitally-imported-delivers-10-music-streaming-apps-millions-fans-globally/\">Digitally Imported Delivers 10 Music Streaming Apps to Millions of Fans Globally</a> appeared first on <a rel=\"nofollow\" href=\"https://blog.xamarin.com\">Xamarin Blog</a>.</p>\n","Href":"https://blog.xamarin.com/digitally-imported-delivers-10-music-streaming-apps-millions-fans-globally/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"6627499041","Type":"PullRequestEvent","CreatedAt":"2017-09-23T03:42:26","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/895","RelatedDescription":"Merged pull request \"Bump to Java.Interop/d15-5/bf15aab1\" (#895) at xamarin/xamarin-android","RelatedBody":"Bumps to cecil/mono-2017-06/c0eb983d.\r\n\r\nUpdates to use the same Cecil branch+commit as mono/2017-06: the\r\ncecil/mono-2017-06 branch."},{"Id":"6626664180","Type":"PullRequestEvent","CreatedAt":"2017-09-22T20:34:23","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/895","RelatedDescription":"Opened pull request \"Bump to Java.Interop/d15-5/bf15aab1\" (#895) at xamarin/xamarin-android","RelatedBody":"Bumps to cecil/mono-2017-06/c0eb983d.\r\n\r\nUpdates to use the same Cecil branch+commit as mono/2017-06: the\r\ncecil/mono-2017-06 branch."},{"Id":"6626325276","Type":"PullRequestEvent","CreatedAt":"2017-09-22T19:03:13","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/894","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tests] Bump mimimum Timing for Managed Resource Build.\" (#894) at xamarin/xamarin-android","RelatedBody":"Our unit tests reliably take over 5 seconds to do a design time\r\nbuild :(. But that does not happen locally, so we are bumping the\r\ntime limit up to 8 seconds."},{"Id":"6626316085","Type":"PullRequestEvent","CreatedAt":"2017-09-22T19:00:52","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/892","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Fixed Managed DesignTimeBuild.\" (#892) at xamarin/xamarin-android","RelatedBody":"OK completely forgot when writting this that under VS2017..\r\n`DesignTimeBuild` is NOT set :(. As a result when the old\r\n`Choose` statements run.. we always get a value of `False`\r\nfor `ManagedDesignTimeBuild`.\r\n\r\nSo lets rework the task to make sure we do all the required\r\ncalculations in `_SetupDesignTimeBuildForCompile` which does\r\nget run right at the start of the `Compile`."},{"Id":"6626310871","Type":"PullRequestEvent","CreatedAt":"2017-09-22T18:59:33","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/891","RelatedDescription":"Merged pull request \"[tests] update NUnit to 3.6.0\" (#891) at xamarin/xamarin-android","RelatedBody":"Context:\r\nhttps://jenkins.mono-project.com/job/xamarin-android-pr-builder/1659/testReport/\r\n\r\nI’ve been noticing the Xamarin.Android.Build.Tests are occasionally\r\nfailing and reporting zero test results (no failures, no success). This\r\nsituation doesn’t break PR builds, and effectively skips\r\nXamarin.Android.Build.Tests.\r\n\r\nUpdating NUnit.ConsoleRunner may be the fix as mentioned on this issue:\r\nhttps://github.com/nunit/nunit/issues/1509\r\n\r\nUnfortunately NUnit has some more dependencies now, so there are a few\r\nmore packages. I chose version 3.6.0, as I could get a parallel version\r\nnumber across all NUnit packages."},{"Id":"6625966068","Type":"PullRequestEvent","CreatedAt":"2017-09-22T17:32:57","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/894","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tests] Bump mimimum Timing for Managed Resource Build.\" (#894) at xamarin/xamarin-android","RelatedBody":"Our unit tests reliably take over 5 seconds to do a design time\r\nbuild :(. But that does not happen locally, so we are bumping the\r\ntime limit up to 8 seconds."},{"Id":"6625936839","Type":"PullRequestEvent","CreatedAt":"2017-09-22T17:25:22","Actor":"atsushieno","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/893","RelatedDescription":"Opened pull request \"[src/Mono.Android] regenerated api-26.xml.in and fixed build on metadata.\" (#893) at xamarin/xamarin-android","RelatedBody":"Somehow the latest class-parse gives more parameter names on api-26\r\n(we have no idea what caused that). That somehow resulted in some\r\nevent generation related breakage, which is also fixed in this change."},{"Id":"6625922494","Type":"PullRequestEvent","CreatedAt":"2017-09-22T17:21:35","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/889","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] A few more instances of DesignTime errors\" (#889) at xamarin/xamarin-android","RelatedBody":"We have a couple more Tasks which require the\r\n\t`ContinueOnError=\"$(DesignTimeBuild)\"`\r\nattribute to avoid messing up the Visual Studio lanuage service."},{"Id":"6625917337","Type":"PullRequestEvent","CreatedAt":"2017-09-22T17:20:19","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/890","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tests] Fix the BindingCustomJavaApplicationClass Test\" (#890) at xamarin/xamarin-android","RelatedBody":"Fix up the builder to return a new property `AndroidMSBuildDirectory`\r\nwhich returns the correct directory to look for msbuild related files.\r\n\r\na subdirectory of `lib/xamarin.android` on windows they are in\r\na completely different location."},{"Id":"6625846759","Type":"PullRequestEvent","CreatedAt":"2017-09-22T17:01:43","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/892","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Fixed Managed DesignTimeBuild.\" (#892) at xamarin/xamarin-android","RelatedBody":"OK completely forgot when writting this that under VS2017..\r\n`DesignTimeBuild` is NOT set :(. As a result when the old\r\n`Choose` statements run.. we always get a value of `False`\r\nfor `ManagedDesignTimeBuild`.\r\n\r\nSo lets rework the task to make sure we do all the required\r\ncalculations in `_SetupDesignTimeBuildForCompile` which does\r\nget run right at the start of the `Compile`."},{"Id":"6625683598","Type":"PullRequestEvent","CreatedAt":"2017-09-22T16:20:36","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/891","RelatedDescription":"Opened pull request \"[tests] update NUnit to 3.6.0\" (#891) at xamarin/xamarin-android","RelatedBody":"Context:\r\nhttps://jenkins.mono-project.com/job/xamarin-android-pr-builder/1659/testReport/\r\n\r\nI’ve been noticing the Xamarin.Android.Build.Tests are occasionally\r\nfailing and reporting zero test results (no failures, no success). This\r\nsituation doesn’t break PR builds, and effectively skips\r\nXamarin.Android.Build.Tests.\r\n\r\nUpdating NUnit.ConsoleRunner may be the fix as mentioned on this issue:\r\nhttps://github.com/nunit/nunit/issues/1509\r\n\r\nUnfortunately NUnit has some more dependencies now, so there are a few\r\nmore packages. I chose version 3.6.0, as I could get a parallel version\r\nnumber across all NUnit packages."},{"Id":"6625041749","Type":"PullRequestEvent","CreatedAt":"2017-09-22T14:06:00","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/890","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tests] Fix the BindingCustomJavaApplicationClass Test\" (#890) at xamarin/xamarin-android","RelatedBody":"Fix up the builder to return a new property `AndroidMSBuildDirectory`\r\nwhich returns the correct directory to look for msbuild related files.\r\n\r\na subdirectory of `lib/xamarin.android` on windows they are in\r\na completely different location."},{"Id":"6624338296","Type":"PullRequestEvent","CreatedAt":"2017-09-22T11:10:14","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/889","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] A few more instances of DesignTime errors\" (#889) at xamarin/xamarin-android","RelatedBody":"We have a couple more Tasks which require the\r\n\t`ContinueOnError=\"$(DesignTimeBuild)\"`\r\nattribute to avoid messing up the Visual Studio lanuage service."},{"Id":"6623842240","Type":"PullRequestEvent","CreatedAt":"2017-09-22T09:02:52","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/886","RelatedDescription":"Merged pull request \"[tests] Windows fixes for Xamarin.Android.Build.Tests\" (#886) at xamarin/xamarin-android","RelatedBody":"This resolves several issues:\r\n- `XamarinProject` was not finding NuGet.exe on Windows and the process\r\nis visible\r\n- On Windows, the tests need `libzip.dll` and `zlib.dll` in their output\r\n- `BindingBuildTest` was not using `android-support-multidex.jar` from\r\nVS 2017 installation\r\n- `RunAdbCommand` was using unix-style paths\r\n\r\nChanges:\r\n- Run `.nuget/NuGet.exe` on Windows and make it hidden\r\n- Bump LibZipSharp, which better supports `<ProjectReference />`,\r\n`libzip-windows.mdproj` no longer needs to do anything on Windows\r\n- `BindingBuildTest` can use the `FrameworkLibDirectory` property\r\n- `RunAdbCommand` should use `Path.Combine`\r\n- Removed duplicate `FSharp.Compiler.CodeDom` in `packages.config`\r\n(test runner warning)"},{"Id":"6623821642","Type":"PullRequestEvent","CreatedAt":"2017-09-22T08:57:49","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/888","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] dx.jar command line too long.\" (#888) at xamarin/xamarin-android","RelatedBody":"Fixes https://bugzilla.xamarin.com/show_bug.cgi?id=59651\r\n\r\nWe were passing ALL the .class files in as parameters to the\r\ndx.jar invocation. Turns out we can just pass the top level\r\ndirectory. In this case `$(IntermediateOutputPath)android\\bin\\classes`\r\nwill do fine. Because its a directory dx will pick up any\r\n.class file it finds in any subdirectory.\r\n\r\nI did try this with the .jar files as well, but because allot\r\nof the libraries have a `lib` folder which contain a internal .jar\r\nfile it causes problems. This is because it produces dupicate types.\r\nSo rather than specificly ignore the lib folder (which migth change)\r\nwe will just stick to the current system."},{"Id":"6622108022","Type":"PullRequestEvent","CreatedAt":"2017-09-21T21:54:22","Actor":"cobey","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/887","RelatedDescription":"Merged pull request \"[Mono.Android] Fix ViewStructure enumification (#885)\" (#887) at xamarin/xamarin-android","RelatedBody":"Fixes: https://bugzilla.xamarin.com/show_bug.cgi?id=59655\r\n\r\nBumps to xamarin-android-api-compatibility/d15-4/413ffe8f.\r\n\r\nEnumify `Android.Views.ViewStructure.SetAutofillType()`."},{"Id":"6622100530","Type":"PullRequestEvent","CreatedAt":"2017-09-21T21:52:17","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/887","RelatedDescription":"Opened pull request \"[Mono.Android] Fix ViewStructure enumification (#885)\" (#887) at xamarin/xamarin-android","RelatedBody":"Fixes: https://bugzilla.xamarin.com/show_bug.cgi?id=59655\r\n\r\nBumps to xamarin-android-api-compatibility/master/7fce46a4.\r\n\r\nEnumify `Android.Views.ViewStructure.SetAutofillType()`."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"6627276722","Type":"PullRequestEvent","CreatedAt":"2017-09-23T00:28:43","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1155","RelatedDescription":"Opened pull request \"[Android] Prevent ObjectDisposedExceptions in ListViews with Header/FooterTemplates\" (#1155) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nA continuation of #1063, this will do the same work for `HeaderTemplate` and `FooterTemplate`. Additionally, calling `RemoveAllViews` before calling `Dispose` is a terrible thing and leaves orphaned views behind. Also using a `_disposed` bool instead of checking for a non-null `HeaderView` just for added clarity and to prevent possible situations where everything may not be disposed.\r\n\r\n### Bugs Fixed ###\r\n\r\n- - [Bug 48998 - Back on NavigationPage causes System.ObjectDisposedException](https://bugzilla.xamarin.com/show_bug.cgi?id=48998)\r\n- [Bug 57910 - ObjectDisposedException in Xamarin.Forms.Platform.Android.Renderers.ProgressBarRenderer](https://bugzilla.xamarin.com/show_bug.cgi?id=57910)\r\n- https://bugzilla.xamarin.com/show_bug.cgi?id=45330### API Changes ###\r\n\r\nList all API changes here (or just put None), example:\r\n \r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6625936891","Type":"PullRequestEvent","CreatedAt":"2017-09-22T17:25:23","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1154","RelatedDescription":"Opened pull request \"Fix context action/tap gesture conflict when tap gesture is on nested view\" (#1154) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThe original fix for 46363 handled the case where a TapGesture was added to the top-level control inside of a DataTemplate; unfortunately, it missed the case where a TapGesture was added to a control nested deeper in the DataTemplate's hierarchy. This fix addresses the more general case. \r\n\r\n### Bugs Fixed ###\r\n\r\n- [46363 – TapGestureRecognizer blocks List View Context Actions](https://bugzilla.xamarin.com/show_bug.cgi?id=46363#c14)\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6624397697","Type":"PullRequestEvent","CreatedAt":"2017-09-22T11:27:49","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1138","RelatedDescription":"Merged pull request \"[Evolution] Merged Dictionaries\" (#1138) at xamarin/Xamarin.Forms","RelatedBody":"**NOTE0: this PR replaces #869**\r\n**NOTE1: Do not squash merge to preserve author information. Thanks**\r\n\r\n### Description of Change ###\r\n\r\nThe addition of Multiple MergedDictionaries into ResourceDictionary, as discussed in the Evolution forum: https://forums.xamarin.com/discussion/86308/multiple-merged-dictionaries. Allows multiple ResourceDictionaries to be added to the VisualElement root Resources property.\r\n\r\n### Bugs Fixed ###\r\n\r\n- N/A\r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n - ICollection<ResourceDictionary> MergedDictionaries // In ResourceDictionary.cs\r\n\r\n### Behavioral Changes ###\r\n\r\nThe addition, of adding multiple ResourceDictionaries into a ResourceDictionary. No behavioral changes to existing functionality were made.\r\n\r\n### PR Checklist ###\r\n\r\n- [X] Has tests (if omitted, state reason in description)\r\n- [X] Rebased on top of master at time of PR\r\n- [X] Changes adhere to coding standard\r\n- [X] Consolidate commits as makes sense\r\n\r\n"},{"Id":"6622297964","Type":"PullRequestEvent","CreatedAt":"2017-09-21T22:55:42","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1145","RelatedDescription":"Merged pull request \"[UITests] Update uitest dev packages ios11\" (#1145) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nUpdate for iOS11 tests\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6621676085","Type":"PullRequestEvent","CreatedAt":"2017-09-21T20:07:35","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1153","RelatedDescription":"Opened pull request \"Prototypical Cell Cache for IsEnabled testing; UITest\" (#1153) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nDescribe your changes here.\r\n\r\n### Bugs Fixed ###\r\n\r\n- Provide links to bugs here\r\n\r\n### API Changes ###\r\n\r\nList all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n\r\n### Behavioral Changes ###\r\n\r\nDescribe any non-bug related behavioral changes that may change how users app behaves when upgrading to this version of the codebase.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"6627109915","Type":"PullRequestEvent","CreatedAt":"2017-09-22T22:59:18","Actor":"jgold6","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2765","RelatedDescription":"Opened pull request \"Fix bug 58243\" (#2765) at xamarin/xamarin-macios","RelatedBody":"NSApplicationLaunchUserNotificationKey is missing"},{"Id":"6626707665","Type":"PullRequestEvent","CreatedAt":"2017-09-22T20:45:47","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2762","RelatedDescription":"Merged pull request \"[macos] Add objc_msgSends to un-break classic API (#2757)\" (#2762) at xamarin/xamarin-macios","RelatedBody":"- https://bugzilla.xamarin.com/show_bug.cgi?id=59673\r\n- Cherry pick of https://github.com/xamarin/xamarin-macios/pull/2757 to d15-5"},{"Id":"6626689411","Type":"PullRequestEvent","CreatedAt":"2017-09-22T20:41:17","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2764","RelatedDescription":"Opened pull request \"Fix CFMessagePort crash when returning data from callback\" (#2764) at xamarin/xamarin-macios","RelatedBody":"- The system releases returned CFData, which caused over release crashes\r\n- https://bugzilla.xamarin.com/show_bug.cgi?id=51263\r\n- Was checked w\\ instruments after fix for leaks (none found)."},{"Id":"6626199502","Type":"PullRequestEvent","CreatedAt":"2017-09-22T18:31:27","Actor":"timrisi","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2763","RelatedDescription":"Opened pull request \"[macOS][AOT] Remove 'experimental', indicate hybrid is only for 'all'…\" (#2763) at xamarin/xamarin-macios","RelatedBody":"Cherry-pick from master\r\n\r\n--aot[=VALUE]          Specify assemblies that should be AOT compiled\r\n                               - none - No AOT (default)\r\n                               - all - Every assembly in MonoBundle\r\n                               - core - Xamarin.Mac, System, mscorlib\r\n                               - sdk - Xamarin.Mac.dll and BCL assemblies\r\n                               - |hybrid after option enables hybrid AOT which\r\n                               allows IL stripping but is slower (only valid\r\n                               for 'all')\r\n                                - Individual files can be included for AOT via +\r\n                               FileName.dll and excluded via -FileName.dll\r\n\r\n                               Examples:\r\n                                 --aot:all,-MyAssembly.dll\r\n                                 --aot:core|hybrid,+MyOtherAssembly.dll,-\r\n                               mscorlib.dll"},{"Id":"6626127326","Type":"PullRequestEvent","CreatedAt":"2017-09-22T18:13:34","Actor":"timrisi","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2742","RelatedDescription":"Merged pull request \"[macOS][AOT] Remove 'experimental', indicate hybrid is only for 'all'\" (#2742) at xamarin/xamarin-macios","RelatedBody":"```\r\n--aot[=VALUE]          Specify assemblies that should be AOT compiled\r\n                               - none - No AOT (default)\r\n                               - all - Every assembly in MonoBundle\r\n                               - core - Xamarin.Mac, System, mscorlib\r\n                               - sdk - Xamarin.Mac.dll and BCL assemblies\r\n                               - |hybrid after option enables hybrid AOT which\r\n                               allows IL stripping but is slower (only valid\r\n                               for 'all')\r\n                                - Individual files can be included for AOT via +\r\n                               FileName.dll and excluded via -FileName.dll\r\n\r\n                               Examples:\r\n                                 --aot:all,-MyAssembly.dll\r\n                                 --aot:core|hybrid,+MyOtherAssembly.dll,-\r\n                               mscorlib.dll\r\n```"},{"Id":"6626109074","Type":"PullRequestEvent","CreatedAt":"2017-09-22T18:08:52","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2762","RelatedDescription":"Opened pull request \"[macos] Add objc_msgSends to un-break classic API (#2757)\" (#2762) at xamarin/xamarin-macios","RelatedBody":"- https://bugzilla.xamarin.com/show_bug.cgi?id=59673\r\n- Cherry pick of https://github.com/xamarin/xamarin-macios/pull/2757 to d15-5"},{"Id":"6626103782","Type":"PullRequestEvent","CreatedAt":"2017-09-22T18:07:28","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2757","RelatedDescription":"Merged pull request \"[macos] Add objc_msgSends to un-break classic API\" (#2757) at xamarin/xamarin-macios","RelatedBody":"- https://bugzilla.xamarin.com/show_bug.cgi?id=59673"},{"Id":"6626047371","Type":"PullRequestEvent","CreatedAt":"2017-09-22T17:53:37","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2749","RelatedDescription":"Merged pull request \"[xharness] Don't try to run 32-bit tests on devices that don't support 32-bits.\" (#2749) at xamarin/xamarin-macios","RelatedBody":null}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"911313517848006657","CreatedAt":"2017-09-22T19:37:28+00:00","UserScreenname":"xamarinhq","Text":"This week on the @XamarinPodcast learn about #Xamarin support for #AndroidOreo and #iOS11, #XamarinForms, plus more: https://t.co/CDAYHoRh5t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":17,"FavoriteCount":16,"RawContent":null},{"Id":"910894395024699392","CreatedAt":"2017-09-21T15:52:02+00:00","UserScreenname":"xamarinhq","Text":"Our @XamarinU webinar with Charles Petzold on UrhoSharp 3D with #Xamarin Workbooks is about to start—join us:… https://t.co/CjCM7pVcd3","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":15,"FavoriteCount":7,"RawContent":null},{"Id":"910587508056051713","CreatedAt":"2017-09-20T19:32:34+00:00","UserScreenname":"xamarinhq","Text":"See how the #Dotfuscator from @PreEmptive can protect your #Xamarin apps and libraries from reverse engineering: https://t.co/hyhUzG4o9r","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":75,"FavoriteCount":25,"RawContent":null},{"Id":"910536790372683777","CreatedAt":"2017-09-20T16:11:02+00:00","UserScreenname":"xamarinhq","Text":"Last chance—don't forget to sign up for Charles Petzold's webinar tomorrow on UrhoSharp 3D with Xamarin Workbooks:… https://t.co/KilnMMfPtU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":12,"FavoriteCount":9,"RawContent":null},{"Id":"910535530965737486","CreatedAt":"2017-09-20T16:06:02+00:00","UserScreenname":"xamarinhq","Text":"Our friends at #VSMobileCenter have made it even easier to add mobile DevOps to your development process with great… https://t.co/YalQb8Jt8k","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":25,"FavoriteCount":16,"RawContent":null},{"Id":"910216295668383747","CreatedAt":"2017-09-19T18:57:30+00:00","UserScreenname":"xamarinhq","Text":"Xamarin's @lobrien  shows you how to  add augmented reality to your #Xamarin apps with #ARKit in #iOS11: https://t.co/FPBpyiRPEK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":83,"FavoriteCount":43,"RawContent":null},{"Id":"910192040188751872","CreatedAt":"2017-09-19T17:21:07+00:00","UserScreenname":"xamarinhq","Text":"Get your #Xamarin apps ready for #iOS11, #tvOS11, and #watchOS4 with updated #VisualStudio tools, docs, and samples: https://t.co/7eYTFe0O73","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":42,"FavoriteCount":26,"RawContent":null},{"Id":"910173151891468295","CreatedAt":"2017-09-19T16:06:04+00:00","UserScreenname":"xamarinhq","Text":"#Xamarin Partners are helping companies accelerate their mobile projects every day. Find a #XamarinPartner near you… https://t.co/IfYCiVzmVz","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":14,"FavoriteCount":10,"RawContent":null},{"Id":"909881970783551489","CreatedAt":"2017-09-18T20:49:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how The Lean Cook is using mobile to promote healthy living AND drive revenue in a crowded market:… https://t.co/UF1i6PVrtR","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":15,"FavoriteCount":3,"RawContent":null},{"Id":"909810012469514243","CreatedAt":"2017-09-18T16:03:05+00:00","UserScreenname":"xamarinhq","Text":"Request App Store ratings and reviews from your users with an in-app dialog using the SKStoreReviewController:… https://t.co/bSbfehKqcq","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":41,"FavoriteCount":18,"RawContent":null},{"Id":"908780317200179200","CreatedAt":"2017-09-15T19:51:26+00:00","UserScreenname":"xamarinhq","Text":"#XamarinForms Program Manager @davidortinau shares his tips for beating the learning curve: https://t.co/amiCZmJtYS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":38,"RawContent":null},{"Id":"908722845253083136","CreatedAt":"2017-09-15T16:03:04+00:00","UserScreenname":"xamarinhq","Text":"Ready to go mobile? @XamarinU offers 30-day free trials! Learn more: https://t.co/bVpjALvmoy https://t.co/4d4kRrEKka","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":29,"FavoriteCount":12,"RawContent":null},{"Id":"908428865781067776","CreatedAt":"2017-09-14T20:34:54+00:00","UserScreenname":"xamarinhq","Text":"Save the date for #dotNETconf, a FREE virtual event w/ talks from @JamesMontemagno, @migueldeicaza, &amp; @mjhutchinson: https://t.co/iTsu7CpsRx","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":84,"FavoriteCount":49,"RawContent":null},{"Id":"908360444636786694","CreatedAt":"2017-09-14T16:03:01+00:00","UserScreenname":"xamarinhq","Text":"Don't miss out! Sign up now for Charles Petzold's 9/21 @XamarinU webinar on UrhoSharp 3D with Xamarin Workbooks:… https://t.co/xNJ8ThNJr9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":10,"FavoriteCount":7,"RawContent":null},{"Id":"908108658436972545","CreatedAt":"2017-09-13T23:22:30+00:00","UserScreenname":"xamarinhq","Text":"Get your #Xamarin apps ready for #iOS11: https://t.co/gRQcYsRCXM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":43,"RawContent":null},{"Id":"907995789787648000","CreatedAt":"2017-09-13T15:54:00+00:00","UserScreenname":"xamarinhq","Text":"Demystifying build configurations: https://t.co/KxvabUJIue","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":29,"FavoriteCount":20,"RawContent":null},{"Id":"907633910342983680","CreatedAt":"2017-09-12T15:56:01+00:00","UserScreenname":"xamarinhq","Text":"Build better enterprise apps with our eBook, \"Enterprise Application Patterns using #XamarinForms\":… https://t.co/TIoMfDn3d8","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":108,"FavoriteCount":60,"RawContent":null},{"Id":"907351795420286976","CreatedAt":"2017-09-11T21:15:00+00:00","UserScreenname":"xamarinhq","Text":"Get started with #AndroidOreo for https://t.co/3QxhuBuvHc 8.0: https://t.co/dqWUbgCT2F","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":92,"FavoriteCount":66,"RawContent":null}]}},"RunOn":"2017-09-23T05:30:35.2031415Z","RunDurationInMilliseconds":3860}