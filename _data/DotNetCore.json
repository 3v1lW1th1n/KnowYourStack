{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing .NET Core 3 Preview 2","PublishedOn":"2019-01-29T17:57:06+00:00","CommentsCount":28,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 3 Preview 2. It includes new features in .NET Core 3.0 and C# 8, in addition to the large number of new features in Preview 1. ASP.NET Core 3.0 Preview 2  is...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/29/announcing-net-core-3-preview-2/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access Build 3734","PublishedOn":"2019-01-29T00:30:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are getting closer to the final version now! This release includes several accessibility, performance and reliability fixes across the major framework libraries. We will continue to stabilize this...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/28/announcing-net-framework-4-8-early-access-build-3734/","RawContent":null},{"Title":"Help us plan the future of .NET and Big Data","PublishedOn":"2019-01-28T22:05:15+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"We’re currently looking into how we can make .NET great for Big Data scenarios.    Please fill out the survey below and help shape how we can improve .NET for Big Data by sharing your experiences,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/28/help-us-plan-the-future-of-net-and-big-data/","RawContent":null},{"Title":"Debugging .NET Apps with Time Travel Debugging (TTD)","PublishedOn":"2019-01-25T19:32:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"When you are debugging an application, there are many tools and techniques you can use, like logs, memory dumps and Event Tracing for Windows (ETW). In this post, we will talk about Time Travel...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/25/debugging-net-apps-with-time-travel-debugging-ttd/","RawContent":null},{"Title":".NET and TypeScript at FOSDEM 2019","PublishedOn":"2019-01-24T20:50:01+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The schedule for the .NET and Typescript Developer Room at FOSDEM has now been published! FOSDEM is one of the longest running Free and Open Source conferences, and we’re excited to have a .NET and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/24/net-and-typescript-at-fosdem-2019/","RawContent":null},{"Title":"Do more with patterns in C# 8.0","PublishedOn":"2019-01-24T18:00:30+00:00","CommentsCount":57,"FacebookCount":0,"Summary":"Do more with patterns in C# 8.0 Visual Studio 2019 Preview 2 is out! And with it, a couple more C# 8.0 features are ready for you to try. It&#8217;s mostly about pattern matching, though I&#8217;ll...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/24/do-more-with-patterns-in-c-8-0/","RawContent":null},{"Title":"Announcing F# 4.6 Preview","PublishedOn":"2019-01-24T15:45:40+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re excited to announce that Visual Studio 2019 will ship a new version of F# when it releases: F# 4.6! F# 4.6 is a smaller update to the F# language, making it a &#8220;true&#8221;...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/24/announcing-f-4-6-preview/","RawContent":null},{"Title":".NET Core tooling update for Visual Studio 2019 Preview 2","PublishedOn":"2019-01-24T15:30:31+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Another preview of Visual Studio 2019, another update on the cool stuff going into it! We&#8217;re pleased to announce some updates to the .NET Core tools for Visual Studio 2019. You can try these...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/24/net-core-tooling-update-for-visual-studio-2019-preview-2/","RawContent":null},{"Title":".NET Framework January 22, 2018 Cumulative Update for Windows 10 version 1809 and Windows Server 2019","PublishedOn":"2019-01-22T22:22:08+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today, we are releasing the January 22, 2018 .NET Framework Cumulative Update for Windows 10 version 1809 and Windows Server 2019. For more information about the new Cumulative Updates for .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/","RawContent":null},{"Title":"Help us help you! What desktop apps are you bringing to .NET Core 3.0?","PublishedOn":"2019-01-17T16:00:26+00:00","CommentsCount":46,"FacebookCount":0,"Summary":"Windows Desktop applications are coming to .NET Core. The recently released .NET Core 3.0 Preview 1 version includes WinForms and WPF support. To make .NET Core 3.0 viable for as many of you as...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/17/help-us-help-you-what-desktop-apps-are-you-bringing-to-net-core-3-0/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8997330482","Type":"PullRequestEvent","CreatedAt":"2019-02-02T11:04:15","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Merged pull request \"Update links\" (#130) at dotnet/foundation","RelatedBody":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com."},{"Id":"8887340703","Type":"PullRequestEvent","CreatedAt":"2019-01-15T05:16:12","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Opened pull request \"Update links\" (#130) at dotnet/foundation","RelatedBody":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com."},{"Id":"8860916656","Type":"PullRequestEvent","CreatedAt":"2019-01-09T22:28:14","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Merged pull request \"Update of EF description\" (#128) at dotnet/foundation","RelatedBody":"@divega !"},{"Id":"8837337598","Type":"PullRequestEvent","CreatedAt":"2019-01-05T03:23:40","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Merged pull request \"Update to absolute path\" (#129) at dotnet/foundation","RelatedBody":"Update to absolute path so that when this list is copied the link will actually work"},{"Id":"8833785661","Type":"PullRequestEvent","CreatedAt":"2019-01-04T11:57:11","Actor":"MarcBruins","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Opened pull request \"Update to absolute path\" (#129) at dotnet/foundation","RelatedBody":"Update to absolute path so that when this list is copied the link will actually work"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"8852414845","Type":"IssuesEvent","CreatedAt":"2019-01-08T18:17:46","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Opened issue \"January 2019 .NET Updates\" (#96) at dotnet/announcements","RelatedBody":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"8852318390","Type":"IssuesEvent","CreatedAt":"2019-01-08T18:00:28","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Opened issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Compression.ZipFile | 4.0.0, 4.0.1, 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-01-08_\r\n\r\n"},{"Id":"8852317992","Type":"IssuesEvent","CreatedAt":"2019-01-08T18:00:24","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Net.Http | 4.3.0, 4.3.1, 4.3.2, 4.3.3, 4.3.4 | 4.3.5\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-01-08_\r\n"},{"Id":"8752496804","Type":"IssuesEvent","CreatedAt":"2018-12-14T03:22:59","Actor":"1015450578","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93) at dotnet/announcements","RelatedBody":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]"},{"Id":"8752467326","Type":"IssuesEvent","CreatedAt":"2018-12-14T03:12:36","Actor":"1015450578","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Opened issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93) at dotnet/announcements","RelatedBody":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]"},{"Id":"8741036679","Type":"IssuesEvent","CreatedAt":"2018-12-12T12:56:54","Actor":"bilalmalik777","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92) at dotnet/announcements","RelatedBody":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment"},{"Id":"8740711774","Type":"IssuesEvent","CreatedAt":"2018-12-12T11:57:02","Actor":"bilalmalik777","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Opened issue \".net core Console\" (#92) at dotnet/announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details.\r\nI am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.iothub.simulator:\r\n    image: ${DOCKER_REGISTRY-}ttcoreiothubsimulator\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.IotHub.Simulator/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - mqtt\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.labourtelemetry.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcorelabourtelemetrywebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.LabourTelemetry.WebJob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.telemetry.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoretelemetrywebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Telemetry.WebJob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - mqtt\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  redis:\r\n    image: redis\r\n    command: redis-server --appendonly yes\r\n    ports:\r\n      - '6379:6379'\r\n    volumes:\r\n      - ${APPDATA}/redis:/bitnami/redis/data\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.16\r\n\r\n  mqtt:\r\n    image: eclipse-mosquitto\r\n    hostname: mqtt\r\n    container_name: mqtt\r\n    expose:\r\n      - \"1883\"\r\n      - \"9001\"\r\n    ports:\r\n      - \"1883:1883\"\r\n      - \"9001:9001\"\r\n    volumes:\r\n      - ${APPDATA}/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.8\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8998805415","Type":"PullRequestEvent","CreatedAt":"2019-02-03T01:55:24","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/22380","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corert,corefx\" (#22380) at dotnet/coreclr","RelatedBody":"This PR contains mirrored changes from dotnet/corert,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @filipnavara"},{"Id":"8998786054","Type":"PullRequestEvent","CreatedAt":"2019-02-03T01:40:46","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/22380","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corert,corefx\" (#22380) at dotnet/coreclr","RelatedBody":"This PR contains mirrored changes from dotnet/corert,corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"8998778876","Type":"IssuesEvent","CreatedAt":"2019-02-03T01:35:26","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/22379","RelatedDescription":"Opened issue \"[arm] Test failed: System.Runtime.Tests.MemoryFailPointTests.Ctor_LargeSizeInMegabytes_ThrowsInsufficientMemoryException\" (#22379) at dotnet/coreclr","RelatedBody":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm/job/jitstress/job/arm_cross_checked_windows_nt_corefx_baseline_tst/54/\r\n\r\n**Failed tests:**\r\nSystem.Runtime.Tests.MemoryFailPointTests.Ctor_LargeSizeInMegabytes_ThrowsInsufficientMemoryException\r\n\r\n**Log:**\r\n```\r\nSystem.Runtime.Tests.MemoryFailPointTests.Ctor_LargeSizeInMegabytes_ThrowsInsufficientMemoryException [FAIL]\r\n      Assert.Throws() Failure\r\n      Expected: typeof(System.InsufficientMemoryException)\r\n      Actual:   typeof(System.IO.IOException): The parameter is incorrect.\r\n      ---- System.IO.IOException : The parameter is incorrect.\r\n      Stack Trace:\r\n           at System.Runtime.MemoryFailPoint.MemFreeAfterAddress(Void* address, UInt64 size)\r\n           at System.Runtime.MemoryFailPoint.CheckForFreeAddressSpace(UInt64 size, Boolean shouldThrow)\r\n           at System.Runtime.MemoryFailPoint..ctor(Int32 sizeInMegabytes)\r\n        D:\\j\\workspace\\arm_cross_che---99792267\\_\\fx\\src\\System.Runtime\\tests\\System\\Runtime\\MemoryFailPointTests.cs(33,0): at System.Runtime.Tests.MemoryFailPointTests.<>c.<Ctor_LargeSizeInMegabytes_ThrowsInsufficientMemoryException>b__2_0()\r\n        ----- Inner Stack Trace -----\r\n           at System.Runtime.MemoryFailPoint.MemFreeAfterAddress(Void* address, UInt64 size)\r\n           at System.Runtime.MemoryFailPoint.CheckForFreeAddressSpace(UInt64 size, Boolean shouldThrow)\r\n           at System.Runtime.MemoryFailPoint..ctor(Int32 sizeInMegabytes)\r\n        D:\\j\\workspace\\arm_cross_che---99792267\\_\\fx\\src\\System.Runtime\\tests\\System\\Runtime\\MemoryFailPointTests.cs(33,0): at System.Runtime.Tests.MemoryFailPointTests.<>c.<Ctor_LargeSizeInMegabytes_ThrowsInsufficientMemoryException>b__2_0()\r\n```"},{"Id":"8998760081","Type":"PullRequestEvent","CreatedAt":"2019-02-03T01:21:32","Actor":"filipnavara","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/22378","RelatedDescription":"Opened pull request \"WIP:  Convert System.Globalization.Native to C\" (#22378) at dotnet/coreclr","RelatedBody":"Revival of #18614. NOT READY FOR REVIEW YET, JUST RUNNING CI\r\n\r\nThe original PR was closed and never finished. There were the remaining issues raised during the review:\r\n- [x] Lack of use of ICU error handling (https://github.com/dotnet/coreclr/pull/18614#discussion_r199536418, https://github.com/dotnet/coreclr/pull/18614#discussion_r199536418)\r\n- [x] Inappropriate conversion of C++ enum to C enum (https://github.com/dotnet/coreclr/pull/18614#discussion_r199543731)\r\n- [ ] Missing optimization for allocation inside loop (https://github.com/dotnet/coreclr/pull/18614#discussion_r199519678)\r\n\r\nI started to address them. The error handling is not always as pretty as it should be. Notably `ucal_set` doesn't handle `NULL` value in first parameter, so explicit error handling must precede it."},{"Id":"8998718890","Type":"PullRequestEvent","CreatedAt":"2019-02-03T00:50:55","Actor":"Tomius","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/22377","RelatedDescription":"Opened pull request \"Back patching #21804 to the 2.1 LTS branch\" (#22377) at dotnet/coreclr","RelatedBody":"The reasons why I chose to backport Brian Sullivan's fix:\r\n* It could be a security issue. The behaviour described in #21890 can be easily abused to get read/write access to an arbitrary memory address within a safe context. \r\n* It causes programs to misbehave. \r\n* It is very easy to trigger this bug from simple F# code. \r\n* The existance of this bug is preventing the current F# project I'm working on to use dotnet core in production, as there isn't any workaround that's applicable for us regarding this issue."},{"Id":"8998696241","Type":"PullRequestEvent","CreatedAt":"2019-02-03T00:34:16","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/22376","RelatedDescription":"Opened pull request \"Use unsigned pointer extension in muldi-dimensional array stubs\" (#22376) at dotnet/coreclr","RelatedBody":"Delete unnecessary parallel logic that kept track of the total multiplier\r\n\r\nFixes #22348"},{"Id":"8998680592","Type":"PullRequestEvent","CreatedAt":"2019-02-03T00:22:45","Actor":"Tomius","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/22375","RelatedDescription":"Opened pull request \"Typo fix: Rename DevDiv_754566.ilprog to DevDiv_754566.ilproj\" (#22375) at dotnet/coreclr","RelatedBody":"Typo in file extension name"},{"Id":"8998519283","Type":"IssuesEvent","CreatedAt":"2019-02-02T22:34:51","Actor":"CarolEidt","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/22253","RelatedDescription":"Closed issue \"[Linux/arm64] GitHub_20657 fails with JitStress=2/JitStressRegs=1\" (#22253) at dotnet/coreclr","RelatedBody":"https://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/arm64_cross_checked_ubuntu16.04_jitstress2_jitstressregs1_tst/108/consoleFull\r\n\r\nTests:\r\n```\r\n./JIT/jit64/hfa/main/testC/hfa_nd1C_r/hfa_nd1C_r.exe\r\n./JIT/jit64/hfa/main/testC/hfa_nd0C_r/hfa_nd0C_r.exe\r\n./JIT/jit64/hfa/main/testC/hfa_sd0C_r/hfa_sd0C_r.exe\r\n./JIT/jit64/hfa/main/testC/hfa_sd1C_r/hfa_sd1C_r.exe\r\n```\r\n\r\nTests appear to pass, but return code 1, not 100."},{"Id":"8998517123","Type":"PullRequestEvent","CreatedAt":"2019-02-02T22:33:31","Actor":"CarolEidt","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/22311","RelatedDescription":"Merged pull request \"Spill tree temp large vectors around calls\" (#22311) at dotnet/coreclr","RelatedBody":"The code was there to handle lclVars, but there was an implicit assumption that non-lclVar large vector tree temps would never be live across a call.\r\n\r\nFixes the GitHub_20657 failure in #22253"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8997550293","Type":"PullRequestEvent","CreatedAt":"2019-02-02T13:32:10","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10696","RelatedDescription":"Merged pull request \"Update dependencies from dotnet/sdk\" (#10696) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.19101.3\r\n\r\n"},{"Id":"8997503856","Type":"PullRequestEvent","CreatedAt":"2019-02-02T13:02:00","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10696","RelatedDescription":"Opened pull request \"Update dependencies from dotnet/sdk\" (#10696) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.19101.3\r\n\r\n"},{"Id":"8997503212","Type":"PullRequestEvent","CreatedAt":"2019-02-02T13:01:35","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10695","RelatedDescription":"Opened pull request \"Update dependencies from dotnet/arcade\" (#10695) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19101.16\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8988505913","Type":"IssuesEvent","CreatedAt":"2019-01-31T20:48:53","Actor":"botrif","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1064","RelatedDescription":"Opened issue \"NETStandard, T4 templates, and System.Numerics.VEctors\" (#1064) at dotnet/standard","RelatedBody":"W have a T4 template to generate code based on reflection of another project. The template project and the other project are SDK style, multitargeted: <TargetFrameworks>netstandard2.0;net46;uap10.0.14393</TargetFrameworks>\r\nThe assembly to reflect on is loaded with <#@ assembly name=…\r\nIf the first target in the list is net46 or uap, reflection works fine: typeof(MyClass).Assembly.GetTypes()\r\nBut with netstandard first in the list, we get ReflectionTypeLoadException containing the following:\r\n\r\nCould not load file or assembly 'System.Numerics.Vectors, Version=4.1.3.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\n\r\n(the reflected-on assembly uses System.Vector.Numerics: <PackageReference Include=\"System.Numerics.Vectors\" Version=\"4.5.0\" Condition=\" '$(TargetFramework)' == 'netstandard2.0' \" />\r\nOur prrevious workaround was to do the build-time code generation on net46 or uap, but we want to move to netstandard only builds soon. How can this error be dealt with?\r\n"},{"Id":"8987877444","Type":"IssuesEvent","CreatedAt":"2019-01-31T19:03:58","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/926","RelatedDescription":"Closed issue \"Track .NET Core similar to other platforms\" (#926) at dotnet/standard","RelatedBody":"@weshaggard started this work in his [wesh/netcoreapp_compat](https://github.com/dotnet/standard/tree/wesh/netcoreapp_compat) branch."},{"Id":"8978890473","Type":"IssuesEvent","CreatedAt":"2019-01-30T15:33:00","Actor":"pranavkm","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/standard/issues/474","RelatedDescription":"Reopened issue \"The type 'Attribute' is defined in an assembly that is not referenced.\" (#474) at dotnet/standard","RelatedBody":"I'm encountering this error when using MSTest and the Microsoft.AspNetCore.TestHost. It all works fine until I call the TestServer to render a view.\r\n\r\nI'm using VS2017 15.3 with the .NET Core 2.0 Sdk with my net.core app targeting .NET Framework 4.6.1.\r\nAny advise on how I might fix this?\r\n\r\n```\r\n\"Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationFailedException: One or more compilation failures occurred:\\r\\ne3s05cht.itf(4,62): error CS0012: The type 'Attribute' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(4,81): error CS0518: Predefined type 'System.String' is not defined or imported\\r\\ne3s05cht.itf(4,109): error CS0518: Predefined type 'System.Type' is not defined or imported\\r\\ne3s05cht.itf(4,11): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(8,11): error CS0246: The type or namespace name 'System' could not be found (are you missing a using directive or an assembly reference?)\\r\\ne3s05cht.itf(9,11): error CS0246: The type or namespace name 'System' could not be found (are you missing a using directive or an assembly reference?)\\r\\ne3s05cht.itf(10,11): error CS0246: The type or namespace name 'System' could not be fou\r\nnd (are you missing a using directive or an assembly reference?)\\r\\ne3s05cht.itf(11,11): error CS0246: The type or namespace name 'System' could not be found (are you missing a using directive or an assembly reference?)\\r\\ne3s05cht.itf(14,36): error CS0234: The type or namespace name 'ViewFeatures' does not exist in the namespace 'Microsoft.AspNetCore.Mvc' (are you missing an assembly reference?)\\r\\ne3s05cht.itf(15,93): error CS1980: Cannot define a class or member that utilizes 'dynamic' because the compiler required type 'System.Runtime.CompilerServices.DynamicAttribute' cannot be found. Are you missing a reference?\\r\\ne3s05cht.itf(15,93): error CS0518: Predefined type 'System.Boolean' is not defined or imported\\r\\ne3s05cht.itf(15,44): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(18,67): error CS1983: The return type of an async method mus\r\nt be void, Task or Task<T>\\r\\ne3s05cht.itf(18,39): error CS0400: The type or namespace name 'System' could not be found in the global namespace (are you missing an assembly reference?)\\r\\ne3s05cht.itf(70,49): error CS0234: The type or namespace name 'ViewFeatures' does not exist in the namespace 'Microsoft.AspNetCore.Mvc' (are you missing an assembly reference?)\\r\\ne3s05cht.itf(70,118): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(72,49): error CS0234: The type or namespace name 'IUrlHelper' does not exist in the namespace 'Microsoft.AspNetCore.Mvc' (are you missing an assembly reference?)\\r\\ne3s05cht.itf(72,71): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(74,49): error CS0234: The type or namespace name 'IViewComponentHelper' does not exist in the namespace 'Microsoft.AspNetCore.Mvc' (are you missing an assembly reference?)\\r\\ne3s05cht.itf(74,87): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05\r\ncht.itf(76,59): error CS0234: The type or namespace name 'IJsonHelper' does not exist in the namespace 'Microsoft.AspNetCore.Mvc.Rendering' (are you missing an assembly reference?)\\r\\ne3s05cht.itf(76,83): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(78,59): error CS0234: The type or namespace name 'IHtmlHelper<>' does not exist in the namespace 'Microsoft.AspNetCore.Mvc.Rendering' (are you missing an assembly reference?)\\r\\ne3s05cht.itf(78,71): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(78,71): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(78,71): error CS1980: Cannot define a class or member that utilizes 'dynamic' because the compiler required type 'System.Runtime.CompilerServices.DynamicAttribute' cannot be found. Are you missing a reference?\\r\\ne3s05ch\r\nt.itf(78,71): error CS0518: Predefined type 'System.Boolean' is not defined or imported\\r\\ne3s05cht.itf(78,92): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(18,67): error CS0508: '_Views_PublicApp_cshtml.ExecuteAsync()': return type must be 'Task' to match overridden member 'RazorPageBase.ExecuteAsync()'\\r\\ne3s05cht.itf(18,67): error CS0012: The type 'Task' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(69,58): error CS0012: The type 'Attribute' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(69,10): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(71,58): error CS0012: The type 'Attribute' is defined in an assembly that is not referenced. You must add a referen\r\nce to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(71,10): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(73,58): error CS0012: The type 'Attribute' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(73,10): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(75,58): error CS0012: The type 'Attribute' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(75,10): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(77,58): error CS0012: The type 'Attribute' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=ne\r\nutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(77,10): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(20,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(20,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(20,26): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(20,29): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(20,34): error CS0518: Predefined type 'System.Boolean' is not defined or imported\\r\\ne3s05cht.itf(20,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(21,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=\r\nneutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(21,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(21,26): error CS0518: Predefined type 'System.String' is not defined or imported\\r\\ne3s05cht.itf(21,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(36,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(36,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(36,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(43,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(43,13): error CS0518: Predefined ty\r\npe 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(43,26): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(43,31): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(43,36): error CS0518: Predefined type 'System.Boolean' is not defined or imported\\r\\ne3s05cht.itf(43,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(44,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(44,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(44,26): error CS0518: Predefined type 'System.String' is not defined or imported\\r\\ne3s05cht.itf(44,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(48,13): error CS0012: The type 'Object' is defined in an assembl\r\ny that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(48,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(48,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(56,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(56,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(56,26): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(56,31): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(56,36): error CS0518: Predefined type 'System.Boolean' is not defined or imported\\r\\ne3s05cht.itf(56,13): error CS0518: Predefined type 'System.Void' is not d\r\nefined or imported\\r\\ne3s05cht.itf(57,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(57,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(57,26): error CS0518: Predefined type 'System.String' is not defined or imported\\r\\ne3s05cht.itf(57,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(58,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(58,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(58,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(64,13): error CS0012: The type 'Object' is defined in an as\r\nsembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(64,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(64,26): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(64,32): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(64,37): error CS0518: Predefined type 'System.Boolean' is not defined or imported\\r\\ne3s05cht.itf(64,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(65,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(65,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(65,26): error CS0518: Predefined type 'System.String' i\r\ns not defined or imported\\r\\ne3s05cht.itf(65,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(66,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(66,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(66,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(18,67): error CS0161: '_Views_PublicApp_cshtml.ExecuteAsync()': not all code paths return a value\\r\\ne3s05cht.itf(15,18): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\nC:\\\\Source\\\\TFS\\\\ReferenceApp\\\\RefApp.Web\\\\Views\\\\PublicApp.cshtml(15,10): error CS0518: Predefined type 'System.Boolean' is not defined or imported\\r\\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CompileAndEmit(RazorCodeDocument codeDocument, String gener\r\natedCode)\\r\\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CompileAndEmit(String relativePath)\\r\\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CreateCacheEntry(String normalizedPath)\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorPageFactoryProvider.CreateFactory(String relativePath)\\r\\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.CreateCacheResult(HashSet`1 expirationTokens, String relativePath, Boolean isMainPage)\\r\\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.LocatePageFromPath(String executingFilePath, String pagePath, Boolean isMainPage)\\r\\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetView(String executingFilePath, String viewPath, Boolean isMainPage)\\r\\n   at Micro\r\nsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.GetView(String executingFilePath, String viewPath, Boolean isMainPage)\\r\\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ViewResultExecutor.FindView(ActionContext actionContext, ViewResult viewResult)\\r\\n   at Microsoft.AspNetCore.Mvc.ViewResult.<ExecuteResultAsync>d__26.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeResultAsync>d__19.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvo\r\nker.<InvokeNextResultFilterAsync>d__24.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeNextResourceFilter>d__22.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeFilterPipelineAsync>d__17.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task\r\n task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeAsync>d__15.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()\\r\\n--- End of stack trace from previous lo\r\ncation where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>d__6.MoveNext()\"\r\n\r\n```\r\n"},{"Id":"8978889066","Type":"IssuesEvent","CreatedAt":"2019-01-30T15:32:50","Actor":"pranavkm","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/474","RelatedDescription":"Closed issue \"The type 'Attribute' is defined in an assembly that is not referenced.\" (#474) at dotnet/standard","RelatedBody":"I'm encountering this error when using MSTest and the Microsoft.AspNetCore.TestHost. It all works fine until I call the TestServer to render a view.\r\n\r\nI'm using VS2017 15.3 with the .NET Core 2.0 Sdk with my net.core app targeting .NET Framework 4.6.1.\r\nAny advise on how I might fix this?\r\n\r\n```\r\n\"Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationFailedException: One or more compilation failures occurred:\\r\\ne3s05cht.itf(4,62): error CS0012: The type 'Attribute' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(4,81): error CS0518: Predefined type 'System.String' is not defined or imported\\r\\ne3s05cht.itf(4,109): error CS0518: Predefined type 'System.Type' is not defined or imported\\r\\ne3s05cht.itf(4,11): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(8,11): error CS0246: The type or namespace name 'System' could not be found (are you missing a using directive or an assembly reference?)\\r\\ne3s05cht.itf(9,11): error CS0246: The type or namespace name 'System' could not be found (are you missing a using directive or an assembly reference?)\\r\\ne3s05cht.itf(10,11): error CS0246: The type or namespace name 'System' could not be fou\r\nnd (are you missing a using directive or an assembly reference?)\\r\\ne3s05cht.itf(11,11): error CS0246: The type or namespace name 'System' could not be found (are you missing a using directive or an assembly reference?)\\r\\ne3s05cht.itf(14,36): error CS0234: The type or namespace name 'ViewFeatures' does not exist in the namespace 'Microsoft.AspNetCore.Mvc' (are you missing an assembly reference?)\\r\\ne3s05cht.itf(15,93): error CS1980: Cannot define a class or member that utilizes 'dynamic' because the compiler required type 'System.Runtime.CompilerServices.DynamicAttribute' cannot be found. Are you missing a reference?\\r\\ne3s05cht.itf(15,93): error CS0518: Predefined type 'System.Boolean' is not defined or imported\\r\\ne3s05cht.itf(15,44): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(18,67): error CS1983: The return type of an async method mus\r\nt be void, Task or Task<T>\\r\\ne3s05cht.itf(18,39): error CS0400: The type or namespace name 'System' could not be found in the global namespace (are you missing an assembly reference?)\\r\\ne3s05cht.itf(70,49): error CS0234: The type or namespace name 'ViewFeatures' does not exist in the namespace 'Microsoft.AspNetCore.Mvc' (are you missing an assembly reference?)\\r\\ne3s05cht.itf(70,118): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(72,49): error CS0234: The type or namespace name 'IUrlHelper' does not exist in the namespace 'Microsoft.AspNetCore.Mvc' (are you missing an assembly reference?)\\r\\ne3s05cht.itf(72,71): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(74,49): error CS0234: The type or namespace name 'IViewComponentHelper' does not exist in the namespace 'Microsoft.AspNetCore.Mvc' (are you missing an assembly reference?)\\r\\ne3s05cht.itf(74,87): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05\r\ncht.itf(76,59): error CS0234: The type or namespace name 'IJsonHelper' does not exist in the namespace 'Microsoft.AspNetCore.Mvc.Rendering' (are you missing an assembly reference?)\\r\\ne3s05cht.itf(76,83): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(78,59): error CS0234: The type or namespace name 'IHtmlHelper<>' does not exist in the namespace 'Microsoft.AspNetCore.Mvc.Rendering' (are you missing an assembly reference?)\\r\\ne3s05cht.itf(78,71): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(78,71): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(78,71): error CS1980: Cannot define a class or member that utilizes 'dynamic' because the compiler required type 'System.Runtime.CompilerServices.DynamicAttribute' cannot be found. Are you missing a reference?\\r\\ne3s05ch\r\nt.itf(78,71): error CS0518: Predefined type 'System.Boolean' is not defined or imported\\r\\ne3s05cht.itf(78,92): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(18,67): error CS0508: '_Views_PublicApp_cshtml.ExecuteAsync()': return type must be 'Task' to match overridden member 'RazorPageBase.ExecuteAsync()'\\r\\ne3s05cht.itf(18,67): error CS0012: The type 'Task' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(69,58): error CS0012: The type 'Attribute' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(69,10): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(71,58): error CS0012: The type 'Attribute' is defined in an assembly that is not referenced. You must add a referen\r\nce to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(71,10): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(73,58): error CS0012: The type 'Attribute' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(73,10): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(75,58): error CS0012: The type 'Attribute' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(75,10): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(77,58): error CS0012: The type 'Attribute' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=ne\r\nutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(77,10): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(20,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(20,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(20,26): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(20,29): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(20,34): error CS0518: Predefined type 'System.Boolean' is not defined or imported\\r\\ne3s05cht.itf(20,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(21,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=\r\nneutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(21,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(21,26): error CS0518: Predefined type 'System.String' is not defined or imported\\r\\ne3s05cht.itf(21,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(36,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(36,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(36,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(43,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(43,13): error CS0518: Predefined ty\r\npe 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(43,26): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(43,31): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(43,36): error CS0518: Predefined type 'System.Boolean' is not defined or imported\\r\\ne3s05cht.itf(43,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(44,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(44,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(44,26): error CS0518: Predefined type 'System.String' is not defined or imported\\r\\ne3s05cht.itf(44,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(48,13): error CS0012: The type 'Object' is defined in an assembl\r\ny that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(48,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(48,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(56,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(56,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(56,26): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(56,31): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(56,36): error CS0518: Predefined type 'System.Boolean' is not defined or imported\\r\\ne3s05cht.itf(56,13): error CS0518: Predefined type 'System.Void' is not d\r\nefined or imported\\r\\ne3s05cht.itf(57,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(57,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(57,26): error CS0518: Predefined type 'System.String' is not defined or imported\\r\\ne3s05cht.itf(57,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(58,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(58,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(58,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(64,13): error CS0012: The type 'Object' is defined in an as\r\nsembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(64,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(64,26): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(64,32): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(64,37): error CS0518: Predefined type 'System.Boolean' is not defined or imported\\r\\ne3s05cht.itf(64,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(65,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(65,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(65,26): error CS0518: Predefined type 'System.String' i\r\ns not defined or imported\\r\\ne3s05cht.itf(65,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(66,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(66,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(66,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(18,67): error CS0161: '_Views_PublicApp_cshtml.ExecuteAsync()': not all code paths return a value\\r\\ne3s05cht.itf(15,18): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\nC:\\\\Source\\\\TFS\\\\ReferenceApp\\\\RefApp.Web\\\\Views\\\\PublicApp.cshtml(15,10): error CS0518: Predefined type 'System.Boolean' is not defined or imported\\r\\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CompileAndEmit(RazorCodeDocument codeDocument, String gener\r\natedCode)\\r\\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CompileAndEmit(String relativePath)\\r\\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CreateCacheEntry(String normalizedPath)\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorPageFactoryProvider.CreateFactory(String relativePath)\\r\\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.CreateCacheResult(HashSet`1 expirationTokens, String relativePath, Boolean isMainPage)\\r\\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.LocatePageFromPath(String executingFilePath, String pagePath, Boolean isMainPage)\\r\\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetView(String executingFilePath, String viewPath, Boolean isMainPage)\\r\\n   at Micro\r\nsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.GetView(String executingFilePath, String viewPath, Boolean isMainPage)\\r\\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ViewResultExecutor.FindView(ActionContext actionContext, ViewResult viewResult)\\r\\n   at Microsoft.AspNetCore.Mvc.ViewResult.<ExecuteResultAsync>d__26.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeResultAsync>d__19.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvo\r\nker.<InvokeNextResultFilterAsync>d__24.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeNextResourceFilter>d__22.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeFilterPipelineAsync>d__17.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task\r\n task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeAsync>d__15.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()\\r\\n--- End of stack trace from previous lo\r\ncation where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>d__6.MoveNext()\"\r\n\r\n```\r\n"},{"Id":"8966283216","Type":"PullRequestEvent","CreatedAt":"2019-01-28T22:28:28","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1062","RelatedDescription":"Merged pull request \"Add build status badge to Repo home page\" (#1062) at dotnet/standard","RelatedBody":"CC @danmosemsft @terrajobst @safern @ViktorHofer "}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8998824794","Type":"PullRequestEvent","CreatedAt":"2019-02-03T02:10:08","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/35061","RelatedDescription":"Merged pull request \"Update dependencies from dotnet/corefx\" (#35061) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- Microsoft.NETCore.Platforms - 3.0.0-preview.19102.2\r\n\r\n"},{"Id":"8998780760","Type":"PullRequestEvent","CreatedAt":"2019-02-03T01:36:51","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/35059","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#35059) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub"},{"Id":"8998779162","Type":"PullRequestEvent","CreatedAt":"2019-02-03T01:35:40","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/35031","RelatedDescription":"Merged pull request \"Move Interop.GetTimestamp.cs to shared CoreLib partition.\" (#35031) at dotnet/corefx","RelatedBody":"Related to https://github.com/dotnet/corert/pull/6932."},{"Id":"8998362251","Type":"PullRequestEvent","CreatedAt":"2019-02-02T21:02:40","Actor":"dotnet-maestro[bot]","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/35061","RelatedDescription":"Opened pull request \"Update dependencies from dotnet/corefx\" (#35061) at dotnet/corefx","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- Microsoft.NETCore.Platforms - 3.0.0-preview.19102.2\r\n\r\n"},{"Id":"8998265681","Type":"PullRequestEvent","CreatedAt":"2019-02-02T20:07:47","Actor":"filipnavara","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/35060","RelatedDescription":"Opened pull request \"WIP: Move LowLevelMonitor functions from CoreRT to System.Native\" (#35060) at dotnet/corefx","RelatedBody":"The functions are renamed, implementation is converted from C++ to C.\r\n\r\nTwo new functions are exposed - `SystemNative_MonitorTryAcquire` and `SystemNative_MonitorBroadcastAndRelease`. Both were implemented in CoreRT native code, but they were never used. They will likely not be necessary, but I added them in the off-chance that they would be used since the implementation is small and trivial. \r\n\r\nThe need for `SystemNative_MonitorTryAcquire` is avoided by keeping the track of locked state in the managed code and using `Interlocked` methods to handle it there. `SystemNative_MonitorBroadcastAndRelease` is similar to `Monitor.PulseAll`, which is not exposed in the `LowLevelMonitor` API.\r\n\r\nNaming is not necessarily final, suggestions are welcome."},{"Id":"8998099436","Type":"PullRequestEvent","CreatedAt":"2019-02-02T18:36:50","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/35059","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#35059) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"8998683610","Type":"PullRequestEvent","CreatedAt":"2019-02-03T00:25:02","Actor":"cston","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/33076","RelatedDescription":"Opened pull request \"Handle ref variables similarly to non-ref variables\" (#33076) at dotnet/roslyn","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8998854381","Type":"PullRequestEvent","CreatedAt":"2019-02-03T02:33:23","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6939","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,coreclr\" (#6939) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @filipnavara"},{"Id":"8998853787","Type":"PullRequestEvent","CreatedAt":"2019-02-03T02:32:52","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6939","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#6939) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"8998853534","Type":"PullRequestEvent","CreatedAt":"2019-02-03T02:32:40","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6938","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,coreclr\" (#6938) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub"},{"Id":"8998778821","Type":"PullRequestEvent","CreatedAt":"2019-02-03T01:35:23","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6938","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#6938) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"8998778322","Type":"PullRequestEvent","CreatedAt":"2019-02-03T01:35:04","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6937","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#6937) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas"},{"Id":"8997954396","Type":"PullRequestEvent","CreatedAt":"2019-02-02T17:19:00","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6937","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#6937) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"8997243208","Type":"PullRequestEvent","CreatedAt":"2019-02-02T10:05:12","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6936","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#6936) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar"},{"Id":"8997228549","Type":"PullRequestEvent","CreatedAt":"2019-02-02T09:55:45","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/6922","RelatedDescription":"Closed pull request \"WIP: Move ResourceManager to shared CoreLib.\" (#6922) at dotnet/corert","RelatedBody":"Counter-part for https://github.com/dotnet/coreclr/pull/22249."},{"Id":"8997205076","Type":"PullRequestEvent","CreatedAt":"2019-02-02T09:40:07","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6936","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#6936) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"8997199122","Type":"PullRequestEvent","CreatedAt":"2019-02-02T09:35:58","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6935","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr,corefx\" (#6935) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @filipnavara @stephentoub"},{"Id":"8996480594","Type":"PullRequestEvent","CreatedAt":"2019-02-02T01:44:33","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6935","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#6935) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"8996479398","Type":"PullRequestEvent","CreatedAt":"2019-02-02T01:43:57","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6934","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,coreclr\" (#6934) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding"},{"Id":"8995140685","Type":"PullRequestEvent","CreatedAt":"2019-02-01T20:02:06","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6934","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#6934) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"8997630700","Type":"PullRequestEvent","CreatedAt":"2019-02-02T14:21:04","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2900","RelatedDescription":"Merged pull request \"Update dependencies from dotnet/arcade\" (#2900) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19101.16\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19101.16\r\n\r\n"},{"Id":"8997501648","Type":"PullRequestEvent","CreatedAt":"2019-02-02T13:00:39","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2900","RelatedDescription":"Opened pull request \"Update dependencies from dotnet/arcade\" (#2900) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19101.16\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19101.16\r\n\r\n"},{"Id":"8997411847","Type":"PullRequestEvent","CreatedAt":"2019-02-02T12:01:29","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2899","RelatedDescription":"Opened pull request \"Merge release/2.2.2xx to master\" (#2899) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8997411806","Type":"PullRequestEvent","CreatedAt":"2019-02-02T12:01:27","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2898","RelatedDescription":"Opened pull request \"Merge release/2.1.6xx to release/2.2.2xx\" (#2898) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2018-12-16T11:57:53","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"open","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Open issue \"No logo provided for Prism\" (#126)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2018-12-16T11:53:31","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"open","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Open issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2018-12-16T11:52:07","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"open","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Open issue \"Missing logo for Umbraco\" (#124)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2018-12-16T11:50:29","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"open","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Open issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379731798","IsPullRequest":true,"CreatedAt":"2018-11-13T04:22:32","Actor":"leastprivilege","Number":"114","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#114)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"},{"Id":"379733880","IsPullRequest":true,"CreatedAt":"2018-11-13T04:20:23","Actor":"leastprivilege","Number":"115","RawContent":null,"Title":"Create identitymodel.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/115","RelatedDescription":"Closed or merged PR \"Create identitymodel.md\" (#115)"},{"Id":"371941750","IsPullRequest":true,"CreatedAt":"2018-11-01T16:20:07","Actor":"SeanKilleen","Number":"113","RawContent":null,"Title":"Update logo for couchbase-lite in projects.json","State":"closed","Body":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser.","Url":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Closed or merged PR \"Update logo for couchbase-lite in projects.json\" (#113)"},{"Id":"365089074","IsPullRequest":false,"CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Number":"112","RawContent":null,"Title":"Suggest: key  F12  go to source code of dotnetcore  rather then metadata","State":"open","Body":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n","Url":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Open issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112)"},{"Id":"356296763","IsPullRequest":false,"CreatedAt":"2018-09-02T16:49:34","Actor":"adamralph","Number":"111","RawContent":null,"Title":"Sourcelink location is confusing","State":"open","Body":"The README has link under the \"Cameron Taggart\" section pointing to https://github.com/ctaggart/SourceLink but the project now seems to live under the \"dotnet\" org in https://github.com/dotnet/sourcelink/ which suggests the link should be changed to that, and moved under the \"Microsoft\" section.","Url":"https://github.com/dotnet/foundation/issues/111","RelatedDescription":"Open issue \"Sourcelink location is confusing\" (#111)"},{"Id":"353832272","IsPullRequest":true,"CreatedAt":"2018-08-27T16:21:55","Actor":"jkonicki","Number":"110","RawContent":null,"Title":"Fix - add missing comma","State":"closed","Body":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix.","Url":"https://github.com/dotnet/foundation/pull/110","RelatedDescription":"Closed or merged PR \"Fix - add missing comma\" (#110)"},{"Id":"352736883","IsPullRequest":true,"CreatedAt":"2018-08-23T23:10:07","Actor":"anthonychu","Number":"108","RawContent":null,"Title":"Fix errors in projects.json","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/108","RelatedDescription":"Closed or merged PR \"Fix errors in projects.json\" (#108)"},{"Id":"353536205","IsPullRequest":true,"CreatedAt":"2018-08-23T23:09:07","Actor":"jkonicki","Number":"109","RawContent":null,"Title":"Add Steeltoe to the project listing","State":"closed","Body":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks.","Url":"https://github.com/dotnet/foundation/pull/109","RelatedDescription":"Closed or merged PR \"Add Steeltoe to the project listing\" (#109)"},{"Id":"339545098","IsPullRequest":true,"CreatedAt":"2018-08-17T23:19:54","Actor":"slide","Number":"105","RawContent":null,"Title":"Add DLR/IronPython2/IronPython3","State":"closed","Body":"Add DLR/IronPython2/IronPython3 to project list.","Url":"https://github.com/dotnet/foundation/pull/105","RelatedDescription":"Closed or merged PR \"Add DLR/IronPython2/IronPython3\" (#105)"},{"Id":"336936558","IsPullRequest":false,"CreatedAt":"2018-08-07T07:06:40","Actor":"tomkerkhove","Number":"104","RawContent":null,"Title":"About still mentions CodePlex","State":"closed","Body":"About still mentions CodePlex which is now in archive mode.\r\n\r\n![image](https://user-images.githubusercontent.com/4345663/42086259-e0b7d008-7b92-11e8-96c9-02ee61ddc457.png)\r\n\r\nIs this something that I can PR?","Url":"https://github.com/dotnet/foundation/issues/104","RelatedDescription":"Closed issue \"About still mentions CodePlex\" (#104)"},{"Id":"340355507","IsPullRequest":false,"CreatedAt":"2018-07-11T18:28:16","Actor":"Eilon","Number":"107","RawContent":null,"Title":"Links to .NET Foundation web site use HTTP instead of HTTPS","State":"open","Body":"It appears that HTTPS works just fine: https://www.dotnetfoundation.org/\r\n\r\nBut the links at these places use HTTP:\r\n1. The link in the header of https://github.com/dotnet/home\r\n2. The link in the header of https://github.com/dotnet\r\n3. Some links in https://github.com/dotnet/home/blob/master/README.md (both to .NET Foundation, and a GitHub link to another project)\r\n\r\nThese links should all change to HTTPS.","Url":"https://github.com/dotnet/foundation/issues/107","RelatedDescription":"Open issue \"Links to .NET Foundation web site use HTTP instead of HTTPS\" (#107)"},{"Id":"340126921","IsPullRequest":false,"CreatedAt":"2018-07-11T07:41:25","Actor":"glatzert","Number":"106","RawContent":null,"Title":"Updates are not requested from local WSUS","State":"open","Body":"The Team somewhen Mention, that fixes should be installed automatically, if .NET Core is on a Windows Server.\r\nThis seems not to work. What are the prerequisits for this to be working?","Url":"https://github.com/dotnet/foundation/issues/106","RelatedDescription":"Open issue \"Updates are not requested from local WSUS\" (#106)"},{"Id":"326192782","IsPullRequest":true,"CreatedAt":"2018-05-24T16:33:09","Actor":"danmosemsft","Number":"103","RawContent":null,"Title":"Add ML.NET to readme","State":"closed","Body":"cc @shauheen @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/103","RelatedDescription":"Closed or merged PR \"Add ML.NET to readme\" (#103)"},{"Id":"321003666","IsPullRequest":true,"CreatedAt":"2018-05-18T19:05:07","Actor":"shauheen","Number":"102","RawContent":null,"Title":"Update projects.json adding MLNET","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/102","RelatedDescription":"Closed or merged PR \"Update projects.json adding MLNET\" (#102)"},{"Id":"321003407","IsPullRequest":true,"CreatedAt":"2018-05-18T19:04:23","Actor":"shauheen","Number":"101","RawContent":null,"Title":"Create mlnet.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/101","RelatedDescription":"Closed or merged PR \"Create mlnet.md\" (#101)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"406042411","IsPullRequest":true,"CreatedAt":"2019-02-03T01:55:24","Actor":"Dotnet-GitSync-Bot","Number":"22380","RawContent":null,"Title":"Mirror changes from dotnet/corert,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @filipnavara","Url":"https://github.com/dotnet/coreclr/pull/22380","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert,corefx\" (#22380)"},{"Id":"406042107","IsPullRequest":false,"CreatedAt":"2019-02-03T01:35:26","Actor":"VincentBu","Number":"22379","RawContent":null,"Title":"[arm] Test failed: System.Runtime.Tests.MemoryFailPointTests.Ctor_LargeSizeInMegabytes_ThrowsInsufficientMemoryException","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm/job/jitstress/job/arm_cross_checked_windows_nt_corefx_baseline_tst/54/\r\n\r\n**Failed tests:**\r\nSystem.Runtime.Tests.MemoryFailPointTests.Ctor_LargeSizeInMegabytes_ThrowsInsufficientMemoryException\r\n\r\n**Log:**\r\n```\r\nSystem.Runtime.Tests.MemoryFailPointTests.Ctor_LargeSizeInMegabytes_ThrowsInsufficientMemoryException [FAIL]\r\n      Assert.Throws() Failure\r\n      Expected: typeof(System.InsufficientMemoryException)\r\n      Actual:   typeof(System.IO.IOException): The parameter is incorrect.\r\n      ---- System.IO.IOException : The parameter is incorrect.\r\n      Stack Trace:\r\n           at System.Runtime.MemoryFailPoint.MemFreeAfterAddress(Void* address, UInt64 size)\r\n           at System.Runtime.MemoryFailPoint.CheckForFreeAddressSpace(UInt64 size, Boolean shouldThrow)\r\n           at System.Runtime.MemoryFailPoint..ctor(Int32 sizeInMegabytes)\r\n        D:\\j\\workspace\\arm_cross_che---99792267\\_\\fx\\src\\System.Runtime\\tests\\System\\Runtime\\MemoryFailPointTests.cs(33,0): at System.Runtime.Tests.MemoryFailPointTests.<>c.<Ctor_LargeSizeInMegabytes_ThrowsInsufficientMemoryException>b__2_0()\r\n        ----- Inner Stack Trace -----\r\n           at System.Runtime.MemoryFailPoint.MemFreeAfterAddress(Void* address, UInt64 size)\r\n           at System.Runtime.MemoryFailPoint.CheckForFreeAddressSpace(UInt64 size, Boolean shouldThrow)\r\n           at System.Runtime.MemoryFailPoint..ctor(Int32 sizeInMegabytes)\r\n        D:\\j\\workspace\\arm_cross_che---99792267\\_\\fx\\src\\System.Runtime\\tests\\System\\Runtime\\MemoryFailPointTests.cs(33,0): at System.Runtime.Tests.MemoryFailPointTests.<>c.<Ctor_LargeSizeInMegabytes_ThrowsInsufficientMemoryException>b__2_0()\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22379","RelatedDescription":"Open issue \"[arm] Test failed: System.Runtime.Tests.MemoryFailPointTests.Ctor_LargeSizeInMegabytes_ThrowsInsufficientMemoryException\" (#22379)"},{"Id":"406041244","IsPullRequest":true,"CreatedAt":"2019-02-03T01:21:31","Actor":"filipnavara","Number":"22378","RawContent":null,"Title":"WIP:  Convert System.Globalization.Native to C","State":"open","Body":"Revival of #18614. NOT READY FOR REVIEW YET, JUST RUNNING CI\r\n\r\nThe original PR was closed and never finished. These were the remaining issues raised during the review:\r\n- [x] Lack of use of ICU error handling (https://github.com/dotnet/coreclr/pull/18614#discussion_r199536418, http://userguide.icu-project.org/design#TOC-Error-Handling)\r\n- [x] Inappropriate conversion of C++ enum to C enum (https://github.com/dotnet/coreclr/pull/18614#discussion_r199543731)\r\n- [x] Missing optimization for allocation inside loop (https://github.com/dotnet/coreclr/pull/18614#discussion_r199519678)\r\n\r\nI started to address them. The error handling is not always as pretty as it should be. Notably `ucal_set` doesn't handle `NULL` value in first parameter, so explicit error handling must precede it.","Url":"https://github.com/dotnet/coreclr/pull/22378","RelatedDescription":"Open PR \"WIP:  Convert System.Globalization.Native to C\" (#22378)"},{"Id":"406039357","IsPullRequest":true,"CreatedAt":"2019-02-03T00:50:54","Actor":"Tomius","Number":"22377","RawContent":null,"Title":"Back patching #21804 to the 2.1 LTS branch","State":"open","Body":"The reasons why I chose to backport Brian Sullivan's fix:\r\n* It could be a security issue. The behaviour described in #21890 can be easily abused to get read/write access to an arbitrary memory address within a safe context. \r\n* It causes programs to misbehave. \r\n* It is very easy to trigger this bug from simple F# code. \r\n* The existance of this bug is preventing the current F# project I'm working on to use dotnet core in production, as there isn't any workaround that's applicable for us regarding this issue.","Url":"https://github.com/dotnet/coreclr/pull/22377","RelatedDescription":"Open PR \"Back patching #21804 to the 2.1 LTS branch\" (#22377)"},{"Id":"406038300","IsPullRequest":true,"CreatedAt":"2019-02-03T00:34:15","Actor":"jkotas","Number":"22376","RawContent":null,"Title":"Use unsigned index extension in muldi-dimensional array stubs","State":"open","Body":"Delete unnecessary parallel logic that kept track of the total multiplier\r\n\r\nFixes #22348","Url":"https://github.com/dotnet/coreclr/pull/22376","RelatedDescription":"Open PR \"Use unsigned index extension in muldi-dimensional array stubs\" (#22376)"},{"Id":"406037565","IsPullRequest":true,"CreatedAt":"2019-02-03T00:22:45","Actor":"Tomius","Number":"22375","RawContent":null,"Title":"Typo fix: Rename DevDiv_754566.ilprog to DevDiv_754566.ilproj","State":"open","Body":"Typo in file extension name","Url":"https://github.com/dotnet/coreclr/pull/22375","RelatedDescription":"Open PR \"Typo fix: Rename DevDiv_754566.ilprog to DevDiv_754566.ilproj\" (#22375)"},{"Id":"405991623","IsPullRequest":true,"CreatedAt":"2019-02-02T18:31:32","Actor":"stephentoub","Number":"22373","RawContent":null,"Title":"Avoid delegate/work item allocations when setting async continuation","State":"closed","Body":"When awaiting a task, there's a race between seeing whether the task has completed (in which case we just continue running synchronously), finding the task hasn't completed (in which case we hook up a continuation), and then by the time we try to hook up the continuation finding the task has already completed.  In that final case, we don't want to just execute the callback synchronously, as we risk a stack dive, so we queue it.  That queueing currently entails two allocations in the common case: one for the work item object, and one for the Action delegate we force into existence for the state machine box's MoveNext method (in the common case it's now never allocated because you only await Tasks and ValueTasks known to the runtime, which bypasses its creation).  We can instead just queue the box itself, and avoid both allocations.\r\n\r\ncc: @kouvel, @tarekgh, @benaadams ","Url":"https://github.com/dotnet/coreclr/pull/22373","RelatedDescription":"Closed or merged PR \"Avoid delegate/work item allocations when setting async continuation\" (#22373)"},{"Id":"405968432","IsPullRequest":true,"CreatedAt":"2019-02-02T17:14:48","Actor":"jkotas","Number":"22371","RawContent":null,"Title":"Rename ResourceManager fields to follow conventions","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/22371","RelatedDescription":"Closed or merged PR \"Rename ResourceManager fields to follow conventions\" (#22371)"},{"Id":"406000393","IsPullRequest":false,"CreatedAt":"2019-02-02T16:58:20","Actor":"CarolEidt","Number":"22374","RawContent":null,"Title":"[LSRA] Further tuning of preferencing is needed","State":"open","Body":"LSRA preferencing was improved with #19429, but additional tuning is needed.\r\nOn x86, the `Span.IndexerBench` benchmark, the changes caused additional spill in some key methods due to different allocation choices. Specifically:\r\n\r\n- `Span.IndexerBench:TestSameIndex1(struct,int,int):ubyte`  - V02 gets spilled\r\n- `Span.IndexerBench:TestCoveredIndex2(struct,int,int):ubyte` - V02 gets spilled\r\n- `Span.IndexerBench:TestIndexer6(struct):ubyte` - V02 gets spilled\r\n- `Span.IndexerBench:TestCoveredIndex3(struct,int,int):ubyte` - V04 gets spilled\r\n\r\nAnother area to investigate (probably independent from the above), is that it seems logical that `RefPosition::getRangeEndRef()` should only return 'nextRefPosition' if it is a `lastUse` and otherwise return `lastRefPosition', but that tends to  excessively lengthen the range for heuristic purposes. Another option might be to iterate to the next `lastUse`, but that might have excess throughput impact.","Url":"https://github.com/dotnet/coreclr/issues/22374","RelatedDescription":"Open issue \"[LSRA] Further tuning of preferencing is needed\" (#22374)"},{"Id":"405970503","IsPullRequest":true,"CreatedAt":"2019-02-02T10:27:20","Actor":"marek-safar","Number":"22372","RawContent":null,"Title":"Implement ManifestBasedResourceGroveler::GetNeutralResourcesLanguageAttribute","State":"open","Body":"in shared managed code","Url":"https://github.com/dotnet/coreclr/pull/22372","RelatedDescription":"Open PR \"Implement ManifestBasedResourceGroveler::GetNeutralResourcesLanguageAttribute\" (#22372)"},{"Id":"405958855","IsPullRequest":true,"CreatedAt":"2019-02-02T07:41:06","Actor":"kouvel","Number":"22370","RawContent":null,"Title":"Add config option to disable tier 0 JIT","State":"open","Body":"Fixes https://github.com/dotnet/coreclr/issues/21856\r\n- For methods that don't have pregenerated code, using tier 0 JIT can improve startup perf, and disabling tier 0 JIT can be useful to sacrifice some startup time to avoid issues of running tier 0 code for too long. In some cases, it may also be desirable to avoid tiering up much later.\r\n- In separate PRs, I intend on exposing this to be configurable from a project file, and to turn on the option for microbenchmarks in the performance repo to get more representative data\r\n- A fixed value for the call count indicates that tier 0 call counting is disabled. When disabled, the method starts at tier 1.\r\n- Also modified call counting to start from a predetermined threshold and count down to zero, as it simplifies some things, allows for methods to have different thresholds, and likely is what we would want eventually anyway\r\n- Took a small step towards eliminating knowledge of specific tier levels in code that should not care, though more is to be done there","Url":"https://github.com/dotnet/coreclr/pull/22370","RelatedDescription":"Open PR \"Add config option to disable tier 0 JIT\" (#22370)"},{"Id":"405949534","IsPullRequest":true,"CreatedAt":"2019-02-02T05:15:34","Actor":"franksinankaya","Number":"22369","RawContent":null,"Title":"More PAL layer cleanup for GNU and add build script support for GCC","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/22369","RelatedDescription":"Open PR \"More PAL layer cleanup for GNU and add build script support for GCC\" (#22369)"},{"Id":"405904646","IsPullRequest":true,"CreatedAt":"2019-02-02T05:01:54","Actor":"echesakovMSFT","Number":"22360","RawContent":null,"Title":"Make Import of Helix.Sdk conditional in helixpublishwitharcade.proj","State":"closed","Body":"This is needed to avoid execution of initial targets inside Helix.Sdk for project runs not using Helix.\r\nThis also needed to fix failure in https://github.com/dotnet/coreclr/pull/22096\r\n\r\n@alexperovich PTAL","Url":"https://github.com/dotnet/coreclr/pull/22360","RelatedDescription":"Closed or merged PR \"Make Import of Helix.Sdk conditional in helixpublishwitharcade.proj\" (#22360)"},{"Id":"405902589","IsPullRequest":true,"CreatedAt":"2019-02-02T03:48:58","Actor":"marek-safar","Number":"22359","RawContent":null,"Title":"Move Marshal::UnsafeAddrOfPinnedArrayElement to shared partition","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/22359","RelatedDescription":"Closed or merged PR \"Move Marshal::UnsafeAddrOfPinnedArrayElement to shared partition\" (#22359)"},{"Id":"405849892","IsPullRequest":true,"CreatedAt":"2019-02-02T03:47:53","Actor":"jkotas","Number":"22354","RawContent":null,"Title":"Make Exception._HResult private","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/22354","RelatedDescription":"Closed or merged PR \"Make Exception._HResult private\" (#22354)"},{"Id":"405935844","IsPullRequest":false,"CreatedAt":"2019-02-02T02:01:45","Actor":"VincentBu","Number":"22368","RawContent":null,"Title":"[arm64] Test failed: CoreMangLib_system._delegate_miscellaneous_Co6031GetHaCode_Co6031GetHaCode_._delegate_miscellaneous_Co6031GetHashCode_Co6031GetHashCode_sh","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm64/job/jitstress/job/arm64_cross_checked_ubuntu16.04_r2r_jitstress1_tst/23/\r\n\r\n**Failed tests:**\r\nCoreMangLib_system._delegate_miscellaneous_Co6031GetHaCode_Co6031GetHaCode_._delegate_miscellaneous_Co6031GetHashCode_Co6031GetHashCode_sh\r\n\r\n**Log:**\r\n```\r\nCoreMangLib_system._delegate_miscellaneous_Co6031GetHaCode_Co6031GetHaCode_._delegate_miscellaneous_Co6031GetHashCode_Co6031GetHashCode_sh [FAIL]\r\n        /n/nReturn code:      137/nRaw output file:      /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_r2r_jitstress1_tst/bin/tests/Linux.arm64.Checked/CoreMangLib/system/Reports/CoreMangLib.system/delegate/miscellaneous/Co6031GetHashCode/Co6031GetHashCode.output.txt/nRaw output:/nTest Harness Exitcode is : 137\r\n        /nTo run the test:/n> set CORE_ROOT=/home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_r2r_jitstress1_tst/bin/tests/Linux.arm64.Checked/Tests/Core_Root/n> /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_r2r_jitstress1_tst/bin/tests/Linux.arm64.Checked/CoreMangLib/system/delegate/miscellaneous/Co6031GetHashCode/Co6031GetHashCode.sh/n\r\n        Expected: True\r\n        Actual:   False\r\n        Stack Trace:\r\n          /mnt/j/workspace/dotnet_coreclr/master/arm64_cross_checked_ubuntu16.04/bin/tests/Linux.arm64.Checked/TestWrappers/CoreMangLib.system/CoreMangLib.system.XUnitWrapper.cs(949,0): at CoreMangLib_system._delegate_miscellaneous_Co6031GetHaCode_Co6031GetHaCode_._delegate_miscellaneous_Co6031GetHashCode_Co6031GetHashCode_sh()\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22368","RelatedDescription":"Open issue \"[arm64] Test failed: CoreMangLib_system._delegate_miscellaneous_Co6031GetHaCode_Co6031GetHaCode_._delegate_miscellaneous_Co6031GetHashCode_Co6031GetHashCode_sh\" (#22368)"},{"Id":"405934551","IsPullRequest":false,"CreatedAt":"2019-02-02T01:49:01","Actor":"VincentBu","Number":"22367","RawContent":null,"Title":"Test Infrastructure Failure: System.ComponentModel.Win32Exception (12): Cannot allocate memory","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm64/job/jitstress/job/arm64_cross_checked_ubuntu16.04_r2r_jitstress2_tiered_tst/18/\r\n\r\n**Log:**\r\n```\r\nTest Infrastructure Failure: System.ComponentModel.Win32Exception (12): Cannot allocate memory\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22367","RelatedDescription":"Open issue \"Test Infrastructure Failure: System.ComponentModel.Win32Exception (12): Cannot allocate memory\" (#22367)"},{"Id":"405930740","IsPullRequest":false,"CreatedAt":"2019-02-02T01:15:55","Actor":"VincentBu","Number":"22366","RawContent":null,"Title":"[arm64] Test failed: baseservices_threading._generics_TimerCallback_thread03_thread03_._generics_TimerCallback_thread03_thread03_sh","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/job/arm64_cross_release_ubuntu16.04_r2r_tst/23/\r\n\r\n**Failed tests:**\r\nbaseservices_threading._generics_TimerCallback_thread03_thread03_._generics_TimerCallback_thread03_thread03_sh\r\n\r\n**Log:**\r\n```\r\nbaseservices_threading._generics_TimerCallback_thread03_thread03_._generics_TimerCallback_thread03_thread03_sh [FAIL]\r\n        Stack Trace:\r\n          /mnt/j/workspace/dotnet_coreclr/master/arm64_cross_release_ubuntu16.04/bin/tests/Linux.arm64.Release/TestWrappers/baseservices.threading/baseservices.threading.XUnitWrapper.cs(7739,0): at baseservices_threading._generics_TimerCallback_thread03_thread03_._generics_TimerCallback_thread03_thread03_sh()\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22366","RelatedDescription":"Open issue \"[arm64] Test failed: baseservices_threading._generics_TimerCallback_thread03_thread03_._generics_TimerCallback_thread03_thread03_sh\" (#22366)"},{"Id":"405927997","IsPullRequest":false,"CreatedAt":"2019-02-02T00:55:28","Actor":"BruceForstall","Number":"22365","RawContent":null,"Title":"[Linux/arm64] NativeLibraryTests_sh failure","State":"open","Body":"COMPlus_GCStress=0xC\r\nCOMPlus_TieredCompilation=0\r\n\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/arm64_cross_checked_ubuntu16.04_gcstress0xc_tst/17/consoleFull\r\n\r\nI can repro this locally about every 4 runs.\r\n\r\n```\r\nInterop_NativeLibrary._NativeLibraryTests_NativeLibraryTests_._NativeLibraryTests_NativeLibraryTests_sh [FAIL]\r\n01:45:43         /n/nReturn code:      1/nRaw output file:      /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_gcstress0xc_tst/bin/tests/Linux.arm64.Checked/Interop/NativeLibrary/Reports/Interop.NativeLibrary/NativeLibraryTests/NativeLibraryTests.output.txt/nRaw output:/nBEGIN EXECUTION\r\n01:45:43         /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_gcstress0xc_tst/bin/tests/Linux.arm64.Checked/Tests/Core_Root/corerun NativeLibraryTests.exe\r\n01:45:43          FreeLibrary(188350176) : Success : [FAIL]\r\n01:45:43         Expected: 100\r\n01:45:43         Actual: 156\r\n01:45:43         END EXECUTION - FAILED\r\n01:45:43         Test Harness Exitcode is : 1\r\n01:45:43         /nTo run the test:/n> set CORE_ROOT=/home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_gcstress0xc_tst/bin/tests/Linux.arm64.Checked/Tests/Core_Root/n> /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_gcstress0xc_tst/bin/tests/Linux.arm64.Checked/Interop/NativeLibrary/NativeLibraryTests/NativeLibraryTests.sh/n\r\n01:45:43         Expected: True\r\n01:45:43         Actual:   False\r\n01:45:43         Stack Trace:\r\n01:45:43           /mnt/j/workspace/dotnet_coreclr/master/arm64_cross_checked_ubuntu16.04/bin/tests/Linux.arm64.Checked/TestWrappers/Interop.NativeLibrary/Interop.NativeLibrary.XUnitWrapper.cs(109,0): at Interop_NativeLibrary._NativeLibraryTests_NativeLibraryTests_._NativeLibraryTests_NativeLibraryTests_sh()\r\n```\r\n","Url":"https://github.com/dotnet/coreclr/issues/22365","RelatedDescription":"Open issue \"[Linux/arm64] NativeLibraryTests_sh failure\" (#22365)"},{"Id":"405925739","IsPullRequest":true,"CreatedAt":"2019-02-02T00:39:52","Actor":"erozenfeld","Number":"22364","RawContent":null,"Title":"Force results of rejected multi-reg-returning tail-call candidates to temp.","State":"open","Body":"Issue #20269 ran into an assert when trying to merge returns, one of which\r\nis a call to a multi-reg-returning method. The repro in the bug is a pmi\r\nof `System.Reflection.Metadata`. I added a simple repro test case.\r\n\r\nResults of calls to multi-reg-returning methods are expected to\r\nbe saved to temps. Normally it's ensured by `impFixupCallStructReturn`;\r\nhowever, it doesn't do that for tail-call candidates.\r\n\r\nThis change forces results of calls to multi-reg-returning methods\r\nto temps if the tail call is rejected late in morph.\r\n\r\nFixes #20269.","Url":"https://github.com/dotnet/coreclr/pull/22364","RelatedDescription":"Open PR \"Force results of rejected multi-reg-returning tail-call candidates to temp.\" (#22364)"},{"Id":"405921143","IsPullRequest":true,"CreatedAt":"2019-02-02T00:12:08","Actor":"davmason","Number":"22363","RawContent":null,"Title":"Port profiler howtos from David Broman's blog to the documentation folder","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/22363","RelatedDescription":"Open PR \"Port profiler howtos from David Broman's blog to the documentation folder\" (#22363)"},{"Id":"405920112","IsPullRequest":true,"CreatedAt":"2019-02-02T00:06:37","Actor":"sandreenko","Number":"22362","RawContent":null,"Title":"Reenable  corefx System.Linq.Expressions.Tests.","State":"open","Body":"Link #19457","Url":"https://github.com/dotnet/coreclr/pull/22362","RelatedDescription":"Open PR \"Reenable  corefx System.Linq.Expressions.Tests.\" (#22362)"},{"Id":"405912223","IsPullRequest":false,"CreatedAt":"2019-02-01T23:24:48","Actor":"BruceForstall","Number":"22361","RawContent":null,"Title":"runtest.py test failure output has too many newlines and duplicate text","State":"open","Body":"In the \"Output of failing tests:\" section, runtest.py prints out all the output of a failed test. In the Jenkins logs, this ends up outputting an extra newline for every line of output.\r\n\r\nE.g., https://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/arm64_cross_checked_windows_nt_jitstress2_tst_prtest/30/consoleFull\r\n\r\n```\r\n01:08:17 #################################################################\r\n01:08:17 Output of failing tests:\r\n01:08:17 \r\n01:08:17 [C:\\j\\workspace\\arm64_cross_c---18085166\\bin\\tests\\Windows_NT.arm64.Checked\\JIT\\HardwareIntrinsics\\X86\\Sse2\\Sse2_r\\Sse2_r.cmd]: \r\n01:08:17 \r\n01:08:17 \r\n01:08:17 cmdLine:C:\\\\j\\\\workspace\\\\arm64_cross_c---18085166\\\\bin\\\\tests\\\\Windows_NT.arm64.Checked\\\\JIT\\\\HardwareIntrinsics\\\\X86\\\\Sse2\\\\Sse2_r\\\\Sse2_r.cmd Timed Out\r\n\r\n01:08:17 \r\n01:08:17 \r\n01:08:17 Return code:      -100\r\n01:08:17 Raw output file:      C:\\\\j\\\\workspace\\\\arm64_cross_c---18085166\\\\bin\\\\tests\\\\Windows_NT.arm64.Checked\\\\Reports\\\\JIT.HardwareIntrinsics\\\\X86\\\\Sse2\\\\Sse2_r\\\\Sse2_r.output.txt\r\n01:08:17 Raw output:\r\n01:08:17 BEGIN EXECUTION\r\n\r\n01:08:17 \r\n\r\n01:08:17 C:\\\\j\\\\workspace\\\\arm64_cross_c---18085166\\\\bin\\\\tests\\\\Windows_NT.arm64.Checked\\\\JIT\\\\HardwareIntrinsics\\\\X86\\\\Sse2\\\\Sse2_r>set COMPLUS_NOGUIONASSERT=1 \r\n\r\n01:08:17 \r\n\r\n01:08:17 C:\\\\j\\\\workspace\\\\arm64_cross_c---18085166\\\\bin\\\\tests\\\\Windows_NT.arm64.Checked\\\\JIT\\\\HardwareIntrinsics\\\\X86\\\\Sse2\\\\Sse2_r>set COMPLUS_CONTINUEONASSERT=0 \r\n\r\n01:08:17 \r\n\r\n01:08:17 C:\\\\j\\\\workspace\\\\arm64_cross_c---18085166\\\\bin\\\\tests\\\\Windows_NT.arm64.Checked\\\\JIT\\\\HardwareIntrinsics\\\\X86\\\\Sse2\\\\Sse2_r>set COMPLUS_JITSTRESS=2 \r\n\r\n01:08:17 \r\n\r\n01:08:17 C:\\\\j\\\\workspace\\\\arm64_cross_c---18085166\\\\bin\\\\tests\\\\Windows_NT.arm64.Checked\\\\JIT\\\\HardwareIntrinsics\\\\X86\\\\Sse2\\\\Sse2_r>set COMPLUS_TIEREDCOMPILATION=0 \r\n\r\n01:08:17  \\\"C:\\\\j\\\\workspace\\\\arm64_cross_c---18085166\\\\bin\\\\tests\\\\Windows_NT.arm64.Checked\\\\Tests\\\\Core_Root\\\\corerun.exe\\\" Sse2_r.exe \r\n\r\n01:08:17 Supported ISAs:\r\n\r\n01:08:17   AES:       False\r\n\r\n01:08:17   AVX:       False\r\n\r\n01:08:17   AVX2:      False\r\n\r\n01:08:17   BMI1:      False\r\n\r\n01:08:17   BMI2:      False\r\n\r\n01:08:17   FMA:       False\r\n\r\n01:08:17   LZCNT:     False\r\n\r\n01:08:17   PCLMULQDQ: False\r\n\r\n01:08:17   POPCNT:    False\r\n\r\n01:08:17   SSE:       False\r\n\r\n01:08:17   SSE2:      False\r\n\r\n01:08:17   SSE3:      False\r\n\r\n01:08:17   SSE4.1:    False\r\n\r\n01:08:17   SSE4.2:    False\r\n\r\n01:08:17   SSSE3:     False\r\n...\r\n```\r\n\r\nAlso, it looks like the test output is displayed twice.\r\n\r\nThe code to do this is:\r\n```\r\nfor item in failed_tests:\r\n    print(\"[%s]: \" % item[\"test_path\"])\r\n    print(\"\")\r\n\r\n    test_output = item[\"test_output\"]\r\n\r\n    # XUnit results are captured as escaped characters.\r\n    test_output = test_output.replace(\"\\\\r\", \"\\r\")\r\n    test_output = test_output.replace(\"\\\\n\", \"\\n\")\r\n\r\n    print(test_output)\r\n    test_output = test_output.replace(\"/r\", \"\\r\")\r\n    test_output = test_output.replace(\"/n\", \"\\n\")\r\n    unicode_output = None\r\n    if sys.version_info < (3,0):\r\n        # Handle unicode characters in output in python2.*\r\n        unicode_output = unicode(test_output, \"utf-8\")\r\n    else:\r\n        unicode_output = test_output\r\n\r\n    print(unicode_output)\r\n    print(\"\")\r\n```\r\n\r\nHere, it appears\r\n1. We have both `\\r` and `\\n` in the text, and I believe Python `print` on Windows auto-translates `\\n` to `\\r\\n`, so we probably end up with `\\r\\r\\n`.\r\n2. We are outputting the text both non-Unicode and Unicode, so duplicating the output. Is that necessary?\r\n","Url":"https://github.com/dotnet/coreclr/issues/22361","RelatedDescription":"Open issue \"runtest.py test failure output has too many newlines and duplicate text\" (#22361)"},{"Id":"405780357","IsPullRequest":true,"CreatedAt":"2019-02-01T22:26:37","Actor":"stephentoub","Number":"22352","RawContent":null,"Title":"Remove stale warning 420 pragmas","State":"closed","Body":"It used to be that the CS0420 warning (\"a reference to a volatile field will not be treated as volatile\") would fire when a volatile was used with an Interlocked.* operation.  That warning was unnecessary, as Interlocked.* would itself provide the relevant barriers, and these functions were special cased in Roslyn a long time ago.  But there are still lots of places where pragmas disabling the warning have stuck around.  I'm deleting them all.","Url":"https://github.com/dotnet/coreclr/pull/22352","RelatedDescription":"Closed or merged PR \"Remove stale warning 420 pragmas\" (#22352)"},{"Id":"405897943","IsPullRequest":true,"CreatedAt":"2019-02-01T22:25:49","Actor":"sandreenko","Number":"22358","RawContent":null,"Title":"Reenable CoreFX tests that were marked as fixed.","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/22358","RelatedDescription":"Open PR \"Reenable CoreFX tests that were marked as fixed.\" (#22358)"},{"Id":"405891960","IsPullRequest":true,"CreatedAt":"2019-02-01T22:05:13","Actor":"jkoritzinsky","Number":"22357","RawContent":null,"Title":"Correctly error out gracefully on setup-stress-dependencies when libcoredistools isn't available.","State":"open","Body":"Right now `setup-stress-dependencies.sh` only errors out if the retrieved path doesn't exist. However, it doesn't error out if the path is empty. This change enables it to error out gracefully on an empty path.","Url":"https://github.com/dotnet/coreclr/pull/22357","RelatedDescription":"Open PR \"Correctly error out gracefully on setup-stress-dependencies when libcoredistools isn't available.\" (#22357)"},{"Id":"405876662","IsPullRequest":true,"CreatedAt":"2019-02-01T21:16:30","Actor":"RussKeldorph","Number":"22356","RawContent":null,"Title":"[DO NOT MERGE] Dummy change","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/22356","RelatedDescription":"Open PR \"[DO NOT MERGE] Dummy change\" (#22356)"},{"Id":"405855300","IsPullRequest":true,"CreatedAt":"2019-02-01T20:09:03","Actor":"sandreenko","Number":"22355","RawContent":null,"Title":"Delete exclusions that reference fixed issues.","State":"open","Body":"These issues were closed as fixed so we expect these test to pass now.\r\n\r\nAlso change the reason for tests that referenced a closed issue to the actual reason and change issue number it is now tracked by another issue (and the original was closed).\r\n\r\nLink #13828 to memorize that we need to enable `JIT/Methodical/tailcall_v4/hijacking` back when it is fixed.","Url":"https://github.com/dotnet/coreclr/pull/22355","RelatedDescription":"Open PR \"Delete exclusions that reference fixed issues.\" (#22355)"},{"Id":"405769964","IsPullRequest":true,"CreatedAt":"2019-02-01T19:34:32","Actor":"AndyAyersMS","Number":"22351","RawContent":null,"Title":"Ensure method is active in PrepareMethod","State":"closed","Body":"Fixes an assert when first call to PrepareMethod for an assembly\r\nis an interop method.","Url":"https://github.com/dotnet/coreclr/pull/22351","RelatedDescription":"Closed or merged PR \"Ensure method is active in PrepareMethod\" (#22351)"},{"Id":"405798529","IsPullRequest":true,"CreatedAt":"2019-02-01T17:26:39","Actor":"fiigii","Number":"22353","RawContent":null,"Title":"Optimize Vector128/256<T>.Get/WithElement","State":"open","Body":"This PR optimizes `Vector128/256<T>.Get/WithElement` to generate SIMD instructions with constant index.\r\n\r\nAlso fix https://github.com/dotnet/corefx/issues/33696 and contribute to https://github.com/dotnet/coreclr/issues/22240.\r\n\r\n@CarolEidt @tannergooding @AndyAyersMS ","Url":"https://github.com/dotnet/coreclr/pull/22353","RelatedDescription":"Open PR \"Optimize Vector128/256<T>.Get/WithElement\" (#22353)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"405981092","IsPullRequest":true,"CreatedAt":"2019-02-02T13:32:10","Actor":"dotnet-maestro[bot]","Number":"10696","RawContent":null,"Title":"Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.19101.3\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10696","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/sdk\" (#10696)"},{"Id":"405981068","IsPullRequest":true,"CreatedAt":"2019-02-02T13:01:35","Actor":"dotnet-maestro[bot]","Number":"10695","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19101.16\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10695","RelatedDescription":"Open PR \"Update dependencies from dotnet/arcade\" (#10695)"},{"Id":"405513382","IsPullRequest":true,"CreatedAt":"2019-02-02T01:36:25","Actor":"wli3","Number":"10684","RawContent":null,"Title":"Mark exposed newtonsoftjson API internal","State":"closed","Body":"I checked, SDK does not use these specific APIs","Url":"https://github.com/dotnet/cli/pull/10684","RelatedDescription":"Closed or merged PR \"Mark exposed newtonsoftjson API internal\" (#10684)"},{"Id":"405908901","IsPullRequest":true,"CreatedAt":"2019-02-01T23:09:29","Actor":"wli3","Number":"10694","RawContent":null,"Title":"WIP no merge for tests Remove skip first run flag","State":"open","Body":"\r\n","Url":"https://github.com/dotnet/cli/pull/10694","RelatedDescription":"Open PR \"WIP no merge for tests Remove skip first run flag\" (#10694)"},{"Id":"405888779","IsPullRequest":false,"CreatedAt":"2019-02-01T21:55:01","Actor":"rido-min","Number":"10693","RawContent":null,"Title":"Take care of the XBF file produced by WinRT components with UI ","State":"open","Body":"Windows Runtime Components with XAML UI produce a XBF file (Xaml Binary Format). To consume these components the caller looks for the xbf following the next convention:\r\n\r\n```\r\nOutDir\r\n--App.exe\r\n--LibraryName\r\n----ControlName.xbf\r\n```\r\n\r\nTo enable the reference (p2p and NuGet) the caller must set the `AssetTargetCallback` to a compatible TFM. This is done automatically with the imported targets from the new Windows.Sdk.Contracts nupkg.\r\n\r\n/cc @sbanni\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10693","RelatedDescription":"Open issue \"Take care of the XBF file produced by WinRT components with UI \" (#10693)"},{"Id":"405886893","IsPullRequest":false,"CreatedAt":"2019-02-01T21:49:26","Actor":"rido-min","Number":"10692","RawContent":null,"Title":"WinRT implementation DLL should be copied to the right location ","State":"open","Body":"To enable 3rd party Windows Runtime Components to be consumed from .NET Core 3 projects we need to ensure that the `.winmd` and/or `.dll` files are copied to the right location. \r\n\r\n/cc @sbanni","Url":"https://github.com/dotnet/cli/issues/10692","RelatedDescription":"Open issue \"WinRT implementation DLL should be copied to the right location \" (#10692)"},{"Id":"405692706","IsPullRequest":true,"CreatedAt":"2019-02-01T21:10:50","Actor":"dotnet-maestro[bot]","Number":"10689","RawContent":null,"Title":"Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.19081.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10689","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/sdk\" (#10689)"},{"Id":"405586997","IsPullRequest":false,"CreatedAt":"2019-02-01T20:55:46","Actor":"JiahongJin1","Number":"10686","RawContent":null,"Title":"Error occurred when min-code is specific.","State":"closed","Body":"## Steps to reproduce\r\n1. Create a new console app in VS\r\n2. Modify the csproj with the following: `<Project Sdk=\"Microsoft.NET.Sdk/min=9999\">\r\n`\r\nIt shows as below:\r\n![image](https://user-images.githubusercontent.com/46206739/52108865-6cfb2a80-2636-11e9-88c8-87afa1fa1c84.png)\r\n\r\n3. Reload the project,\r\n## Expected  behavior\r\nThere's a error in error list window:\r\n`\"The current .NET SDK does not support targeting .NET Core 3.0. Either target .NET Core 2.2 or lower, or use a version of the .NET SDK that supports .NET Core 3.0.\"`\r\n\r\n## Actual behavior:\r\nReload the project, it shows the error:\r\n![image](https://user-images.githubusercontent.com/46206739/52108943-bcd9f180-2636-11e9-8c08-3579436e74df.png)\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\nC:\\Users\\e2euser>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-010197\r\n Commit:    f80481ad2d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010197\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27330-4\r\n  Commit:  373df9c049\r\n\r\n.NET Core SDKs installed:\r\n  2.1.600-preview-009472 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.200-preview-009748 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview-010197 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-19080-0484 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27330-4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview-27330-15 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10686","RelatedDescription":"Closed issue \"Error occurred when min-code is specific.\" (#10686)"},{"Id":"405126317","IsPullRequest":true,"CreatedAt":"2019-02-01T20:54:22","Actor":"mayankbansal018","Number":"10677","RawContent":null,"Title":"Vstest honor nologo","State":"closed","Body":"Passing /nologo user input to VSTest task\r\n\r\nRelated: https://github.com/Microsoft/vstest/pull/1717\r\n\r\nBug: https://github.com/Microsoft/vstest/issues/1701","Url":"https://github.com/dotnet/cli/pull/10677","RelatedDescription":"Closed or merged PR \"Vstest honor nologo\" (#10677)"},{"Id":"405867105","IsPullRequest":true,"CreatedAt":"2019-02-01T20:46:24","Actor":"KevinRansom","Number":"10691","RawContent":null,"Title":"Update FSharp Compiler to: 10.4.1-rtm-190201-03","State":"open","Body":"Update FSharp Compiler to match one inserted into VS.\r\n","Url":"https://github.com/dotnet/cli/pull/10691","RelatedDescription":"Open PR \"Update FSharp Compiler to: 10.4.1-rtm-190201-03\" (#10691)"},{"Id":"405866945","IsPullRequest":true,"CreatedAt":"2019-02-01T20:45:50","Actor":"KevinRansom","Number":"10690","RawContent":null,"Title":"Update FSharp Compiler to: 10.4.1-rtm-190201-03","State":"open","Body":"Update FSharp Compiler to match one inserted into VS.\r\n","Url":"https://github.com/dotnet/cli/pull/10690","RelatedDescription":"Open PR \"Update FSharp Compiler to: 10.4.1-rtm-190201-03\" (#10690)"},{"Id":"405672672","IsPullRequest":true,"CreatedAt":"2019-02-01T19:23:00","Actor":"dotnet-bot","Number":"10687","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10687","RelatedDescription":"Closed or merged PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#10687)"},{"Id":"405692564","IsPullRequest":true,"CreatedAt":"2019-02-01T13:27:17","Actor":"dotnet-maestro[bot]","Number":"10688","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19081.3\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10688","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#10688)"},{"Id":"405499620","IsPullRequest":false,"CreatedAt":"2019-02-01T05:42:51","Actor":"jkdey","Number":"10683","RawContent":null,"Title":"Unable to push multiple packages at the same time","State":"closed","Body":"## Steps to reproduce\r\n`dotnet nuget push *.nupkg -k <username>:<password> -s <source_uri>`\r\n\r\n## Expected behavior\r\npush all packages as shown in the last [example](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-nuget-push?tabs=netcore2x#examples)\r\n\r\n## Actual behavior\r\npushes first package only\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.503\r\n Commit:    4c506e0f35\r\n\r\nRuntime Environment:\r\n OS Name:     alpine\r\n OS Version:  3.7\r\n OS Platform: Linux\r\n RID:         alpine.3.7-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.1.503/\r\n\r\nHost (useful for support):\r\n  Version: 2.1.7\r\n  Commit:  cca5d72d48\r\n\r\n.NET Core SDKs installed:\r\n  2.1.503 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]","Url":"https://github.com/dotnet/cli/issues/10683","RelatedDescription":"Closed issue \"Unable to push multiple packages at the same time\" (#10683)"},{"Id":"405437232","IsPullRequest":true,"CreatedAt":"2019-02-01T05:17:42","Actor":"nugetlurker","Number":"10680","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview3.5800 into cli","State":"closed","Body":"Insert NuGet Build 5.0.0-preview3.5800 into cli release/2.2.2xx branch","Url":"https://github.com/dotnet/cli/pull/10680","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.0.0-preview3.5800 into cli\" (#10680)"},{"Id":"405533473","IsPullRequest":false,"CreatedAt":"2019-02-01T03:09:13","Actor":"neville-nazerane","Number":"10685","RawContent":null,"Title":"`dotnet add package` fails when --packages-directory has spaces","State":"open","Body":"I am running the latest release version 2.2. I tried running the following: \r\n\r\n    dotnet add package packageName --package-directory \"D:\\Cloud\\Dropbox\\codes\\dotnet samples\\nugets\"\r\n\r\nI get the error: \r\n\r\n> error: Unrecognized command or argument 'samples\\nugets'\r\n\r\nThe error is gone when the folder has no spaces. \r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10685","RelatedDescription":"Open issue \"`dotnet add package` fails when --packages-directory has spaces\" (#10685)"},{"Id":"405437261","IsPullRequest":true,"CreatedAt":"2019-02-01T02:54:54","Actor":"nugetlurker","Number":"10681","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview3.5800 into cli","State":"closed","Body":"Insert NuGet Build 5.0.0-preview3.5800 into cli release/2.1.6xx branch","Url":"https://github.com/dotnet/cli/pull/10681","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.0.0-preview3.5800 into cli\" (#10681)"},{"Id":"405455648","IsPullRequest":false,"CreatedAt":"2019-01-31T21:49:13","Actor":"nguerrera","Number":"10682","RawContent":null,"Title":"Mark shipping/non-shipping assets appropriately across all of our repos","State":"open","Body":"The following repos need changes to IsShipping metadata:\r\n\r\n* cli\r\n* cliCommandLineParser\r\n* sdk\r\n* toolset\r\n\r\nNone of these repos ship packages directly. The packages are all transport-only. Therefore, IsShippingPackage should be false for all of them. \r\n\r\n* For each repo, make sure we have https://github.com/dotnet/arcade/pull/1900\r\n\r\n* Make sure all test projects are IsShipping=false (therefore IsShippingAssembly=false, IsShippingPackage=false)\r\n\r\n* Product projects should be IsShippingAssembly=true, IsShippingPackage= false\r\n\r\ncc @chcosta ","Url":"https://github.com/dotnet/cli/issues/10682","RelatedDescription":"Open issue \"Mark shipping/non-shipping assets appropriately across all of our repos\" (#10682)"},{"Id":"405001780","IsPullRequest":false,"CreatedAt":"2019-01-31T18:06:01","Actor":"RealOrko","Number":"10675","RawContent":null,"Title":"Zipping and Unzipping could be unified with the dotnet cli tool offering between various runtimes (win-x64/linux-x64/osx-64)","State":"closed","Body":"## Steps to reproduce\r\n\r\nHave loads of dotnet framework services/ui's hosted on Windows that you would like to migrate to dotnet core/Linux in AWS with a standard way of zipping and unzipping artifacts across win-x64/osx-64/linux-x64 runtimes using the dotnet core cli. \r\n\r\nWe use a hybrid of powershell(Compress-Archive/Expand-Archive)/bash(zip/unzip) at the moment. In some cases on windows we have ruby or various other RAKE, MAKE, FAKE, CAKE ways of achieving this. It would be great if we could bring this into the dotnet cli.\r\n\r\n## Expected  behavior\r\n\r\nCommon dotnet cli command for zipping and unzipping folders/zip across the following RID's: win-x64/osx-x64/linux-x64.\r\n\r\nExample: https://github.com/RealOrko/dotnet-cli-zip\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10675","RelatedDescription":"Closed issue \"Zipping and Unzipping could be unified with the dotnet cli tool offering between various runtimes (win-x64/linux-x64/osx-64)\" (#10675)"},{"Id":"405235636","IsPullRequest":true,"CreatedAt":"2019-01-31T13:32:48","Actor":"dotnet-maestro[bot]","Number":"10679","RawContent":null,"Title":"Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.19080.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10679","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/sdk\" (#10679)"},{"Id":"405235440","IsPullRequest":true,"CreatedAt":"2019-01-31T13:32:25","Actor":"dotnet-maestro[bot]","Number":"10678","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19080.6\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10678","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#10678)"},{"Id":"404915239","IsPullRequest":true,"CreatedAt":"2019-01-31T06:52:39","Actor":"vijayrkn","Number":"10672","RawContent":null,"Title":"Updating the WebSdk package version","State":"closed","Body":"Feed with the changes - https://dotnet.myget.org/feed/dotnet-web/package/nuget/Microsoft.NET.Sdk.Web/2.2.200\r\n\r\nThis is approved for 2.2.200\r\n","Url":"https://github.com/dotnet/cli/pull/10672","RelatedDescription":"Closed or merged PR \"Updating the WebSdk package version\" (#10672)"},{"Id":"405026377","IsPullRequest":false,"CreatedAt":"2019-01-31T00:25:20","Actor":"richlander","Number":"10676","RawContent":null,"Title":"Linux ARM32 RID Incorrect","State":"open","Body":"```console\r\npi@raspberrypi:~/webapp3 $ uname -a\r\nLinux raspberrypi 4.14.79-v7+ #1159 SMP Sun Nov 4 17:50:20 GMT 2018 armv7l GNU/Linux\r\npi@raspberrypi:~/webapp3 $ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-010184\r\n Commit:    c57bde4593\r\n\r\nRuntime Environment:\r\n OS Name:     raspbian\r\n OS Version:  9\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100-preview-010184/\r\n```\r\n\r\nRID should be `linux-arm` on this platform.\r\n\r\nThe Linux ARM64 RID is correct (on an ARM64 install).","Url":"https://github.com/dotnet/cli/issues/10676","RelatedDescription":"Open issue \"Linux ARM32 RID Incorrect\" (#10676)"},{"Id":"404991447","IsPullRequest":true,"CreatedAt":"2019-01-30T22:21:52","Actor":"nkolev92","Number":"10674","RawContent":null,"Title":"Interactive switch for Remove package command","State":"open","Body":"Adding an interactive switch for the remove pkg command. \r\n\r\n//cc @wli3 \r\n\r\nWe should discuss whether this is truly the experience we want here as illustrated in the pull request.\r\n\r\nRelated NuGet change is https://github.com/NuGet/NuGet.Client/pull/2704.","Url":"https://github.com/dotnet/cli/pull/10674","RelatedDescription":"Open PR \"Interactive switch for Remove package command\" (#10674)"},{"Id":"404927193","IsPullRequest":false,"CreatedAt":"2019-01-30T19:26:56","Actor":"Thraka","Number":"10673","RawContent":null,"Title":"[feature] Add the ability to dump all commands and parameters to a json file","State":"open","Body":"Regarding the CLI docs published here: https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet?tabs=netcore21\r\n\r\nOne thing that will help us get docs published easily for CLI reference is if we can dump the whole list of commands, descriptions, option/mandatory status, parameters list, etc. This way we can easily diff between releases to see what has changed. It will also allow us to automate the documentation!\r\n\r\nIt's very troublesome to update the CLI ref which is literally a copy/paste of output from running the commands by hand...\r\n\r\n@mairaw @KathleenDollard ","Url":"https://github.com/dotnet/cli/issues/10673","RelatedDescription":"Open issue \"[feature] Add the ability to dump all commands and parameters to a json file\" (#10673)"},{"Id":"404585712","IsPullRequest":false,"CreatedAt":"2019-01-30T04:12:13","Actor":"jakerenzella","Number":"10671","RawContent":null,"Title":"`dotnet new` returns exit code of 0 when no framework is specified.","State":"closed","Body":"This is similar to [#6569 ](https://github.com/dotnet/templating/issues/1640) but this occurs also with no framework specified, not sure if it should be the same issue.\r\n\r\n## Steps to reproduce\r\n`dotnet new && echo ok`\r\n\r\n## Expected  behavior\r\nexit value to be returned (in this test, no OK should be echoed)\r\n\r\n## Actual behavior\r\nExit code `0` is returned:\r\n```\r\n❯ dotnet new && echo ok\r\nUsage: new [options]\r\n\r\nOptions:\r\n  -h, --help          Displays help for this command.\r\n  -l, --list          Lists templates containing the specified name. If no name is specified, lists all templates.\r\n  -n, --name          The name for the output being created. If no name is specified, the name of the current directory is used.\r\n  -o, --output        Location to place the generated output.\r\n  -i, --install       Installs a source or a template pack.\r\n  -u, --uninstall     Uninstalls a source or a template pack.\r\n  --nuget-source      Specifies a NuGet source to use during install.\r\n  --type              Filters templates based on available types. Predefined values are \"project\", \"item\" or \"other\".\r\n  --force             Forces content to be generated even if it would change existing files.\r\n  -lang, --language   Filters templates based on language and specifies the language of the template to create.\r\n...\r\n\r\nok\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.400\r\n Commit:    8642e60a0f\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.1.400/\r\n\r\nHost (useful for support):\r\n  Version: 2.1.2\r\n  Commit:  811c3ce6c0\r\n\r\n.NET Core SDKs installed:\r\n  2.1.400 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10671","RelatedDescription":"Closed issue \"`dotnet new` returns exit code of 0 when no framework is specified.\" (#10671)"},{"Id":"404541452","IsPullRequest":true,"CreatedAt":"2019-01-30T00:01:34","Actor":"dotnet-bot","Number":"10670","RawContent":null,"Title":"Merge release/2.2.2xx to master","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10670","RelatedDescription":"Open PR \"Merge release/2.2.2xx to master\" (#10670)"},{"Id":"404402146","IsPullRequest":false,"CreatedAt":"2019-01-29T17:25:28","Actor":"Cosebdd","Number":"10669","RawContent":null,"Title":"dotnet sln remove puts all nested not empty solution folders into root folder","State":"open","Body":"## Steps to reproduce\r\n1. Create blank solution\r\n2. Create solution folders and any file like this: \\NewFolder1\\NewFolder2\\text.txt\r\n3. Create any project inside the solution\r\n4. Remove project using the \"dotnet sln remove\" command\r\n\r\n## Expected  behavior\r\nFile is located in the \\NewFolder1\\NewFolder2 folder\r\n\r\n## Actual behavior\r\nFile is located in the \\NewFolder2 folder\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.500\r\n Commit:    b68b931422\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.500\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.6\r\n  Commit:  3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n","Url":"https://github.com/dotnet/cli/issues/10669","RelatedDescription":"Open issue \"dotnet sln remove puts all nested not empty solution folders into root folder\" (#10669)"},{"Id":"404318472","IsPullRequest":false,"CreatedAt":"2019-01-29T15:59:24","Actor":"theoldscarana","Number":"10667","RawContent":null,"Title":"dotnet test too many tcp connections time_wait","State":"closed","Body":"Hi,\r\n\r\nI have a problem with \"dotnet test\" in container linux.\r\n\r\nThis is the scenario:\r\n\r\n- Nunit Test Project \r\n- Framework .Net Core 2.1\r\n- In the nunit test project, I have a single test that execute a query on sql server \r\n- I use the docker image: \"microsoft/dotnet:2.1-sdk\"\r\n- Docker Engine Setting: 4 CPU, 2GB RAM\r\n\r\nIn the container I execute these steps:\r\n\r\n1- dotnet restore ./\r\n2- dotnet build ./ --no-restore \r\n3- dotnet publish ./ --no-build \r\n4- dotnet test ./NUnitTestCore.csproj -d diagnostic.txt --verbosity normal --no-build --logger:nunit;LogFilePath=../NTestResult.xml\r\n\r\nThe execution of step 4 is very slow and sometimes it doesn't end. \r\nI found many tcp connections in TIME_WAIT to sqlserver(port 1433) with netstat and the dotnet test diagnostic file reports many rows like this: \r\n\"TpTrace Verbose: 0 : 676, 7, 2019/01/29, 13:42:29.437, 18771123468400, vstest.console.dll, TcpClientExtensions.MessageLoopAsync: NotifyDataAvailable remoteEndPoint: 127.0.0.1:45445 localEndPoint: 127.0.0.1:39065\"\r\n\r\nExample netstat output:\r\nTCP    192.168.34.101:57084   x.x.x.x:1433    TIME_WAIT       0\r\nTCP    192.168.34.101:57085   x.x.x.x:1433    TIME_WAIT       0\r\nTCP    192.168.34.101:57086   x.x.x.x:1433    TIME_WAIT       0\r\nTCP    192.168.34.101:57087   x.x.x.x:1433    TIME_WAIT       0\r\nTCP    192.168.34.101:57088   x.x.x.x:1433    TIME_WAIT       0\r\nTCP    192.168.34.101:57089   x.x.x.x:1433    TIME_WAIT       0\r\nTCP    192.168.34.101:57090   x.x.x.x:1433    TIME_WAIT       0\r\nTCP    192.168.34.101:57091   x.x.x.x:1433    TIME_WAIT       0\r\nTCP    192.168.34.101:57092   x.x.x.x:1433    TIME_WAIT       0\r\nTCP    192.168.34.101:57093   x.x.x.x:1433    TIME_WAIT       0\r\nTCP    192.168.34.101:57094   x.x.x.x:1433    TIME_WAIT       0\r\n\r\n\r\nI tried also with MSTest and Xunit project with the same result.\r\n\r\nIf I use the image in windows container I don't encounter the problem.\r\n\r\nAnyone noticed this behavior?\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10667","RelatedDescription":"Closed issue \"dotnet test too many tcp connections time_wait\" (#10667)"},{"Id":"404359877","IsPullRequest":false,"CreatedAt":"2019-01-29T15:56:08","Actor":"gdillen","Number":"10668","RawContent":null,"Title":"dotnet add local package -> error: Value cannot be null. error: Parameter name: path1","State":"open","Body":"## Steps to reproduce\r\nI'm on macOS 10.14.2\r\ndotnet version 2.2.103\r\n\r\n1. Create a C# class library project\r\n2. Add package metadata to the project file\r\n- inside the existing <PropertyGroup> tag,\r\n`<PackageId>mylib</PackageId>\r\n<Version>1.0.0</Version>\r\n<Authors>MyName</Authors>\r\n<Company>MyCompany</Company>`\r\n\r\n3. Run the pack command\r\n$ dotnet pack\r\n4 $ nuget add mylib.nupkg -source /Users/myname/nuget_repo\r\n5 $ dotnet nuget push mylib.1.0.0.nupkg -s my-nuget\r\nIn my ConsoleApp project try to add my nuget package:\r\n6 $ dotnet add package mylib -s /Users/myname/nuget-repo\r\n\r\n## Expected  behavior\r\nSuccessfully adding my Nuget package.\r\n\r\n## Actual behavior\r\nmyname:MyConsoleApp myname$ dotnet add package mylib\r\n  Writing /var/folders/cr/4pk4646d1_x5tl_tbbbbvqkw0000gn/T/tmpyagAXi.tmp\r\ninfo : Adding PackageReference for package 'mylib' into project '/Users/myname/Projects/MyConsoleApp/MyConsoleApp.csproj'.\r\nlog  : Restoring packages for /Users/myname/Projects/MyConsoleApp/MyConsoleApp.csproj...\r\ninfo : Package 'mylib' is compatible with all the specified frameworks in project '/Users/myname/Projects/MyConsoleApp/MyConsoleApp.csproj'.\r\nerror: Value cannot be null.\r\nerror: Parameter name: path1\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10668","RelatedDescription":"Open issue \"dotnet add local package -> error: Value cannot be null. error: Parameter name: path1\" (#10668)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"405434278","IsPullRequest":false,"CreatedAt":"2019-01-31T20:48:53","Actor":"botrif","Number":"1064","RawContent":null,"Title":"NETStandard, T4 templates, and System.Numerics.Vectors","State":"open","Body":"We have a T4 template to generate code based on reflection of another project. The template project and the other project are SDK style, multitargeted: &lt;TargetFrameworks&gt;net46;netstandard2.0;uap10.0.14393&lt;/TargetFramework&gt;\r\nThe assembly to reflect on is loaded with &lt;#@ assembly name=…\r\nIf the first target in the list is net46, reflection works fine: typeof(MyClass).Assembly.GetTypes()\r\nBut with netstandard first in the list, we get ReflectionTypeLoadException containing the following:\r\n\r\nCould not load file or assembly 'System.Numerics.Vectors, Version=4.1.3.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\n\r\n(the reflected-on assembly uses System.Vector.Numerics: &lt;PackageReference Include=\"System.Numerics.Vectors\" Version=\"4.5.0\" Condition=\" '$(TargetFramework)' == 'netstandard2.0' \" /&gt;\r\nOur previous workaround was to do the design-time code generation on net46, but we want to move to netstandard builds soon. How can this error be dealt with?","Url":"https://github.com/dotnet/standard/issues/1064","RelatedDescription":"Open issue \"NETStandard, T4 templates, and System.Numerics.Vectors\" (#1064)"},{"Id":"403988291","IsPullRequest":true,"CreatedAt":"2019-01-28T22:28:27","Actor":"wtgodbe","Number":"1062","RawContent":null,"Title":"Add build status badge to Repo home page","State":"closed","Body":"CC @danmosemsft @terrajobst @safern @ViktorHofer ","Url":"https://github.com/dotnet/standard/pull/1062","RelatedDescription":"Closed or merged PR \"Add build status badge to Repo home page\" (#1062)"},{"Id":"404008513","IsPullRequest":false,"CreatedAt":"2019-01-28T21:10:37","Actor":"wtgodbe","Number":"1063","RawContent":null,"Title":"Create shims for new netstandard2.1 assemblies","State":"open","Body":"We need to create Shims for the assemblies added to netstandard2.1 that weren't in netstandard2.0 - This means (as far as I know):\r\n\r\n- System.Memory\r\n- System.Threading.Tasks.Extensions\r\n- System.Reflection.DispatchProxy\r\n- System.Reflection.Emit\r\n- System.Reflection.Emit.ILGeneration\r\n- System.Reflection.Emit.Lightweight\r\n- System.Numerics.Vectors\r\n- System.Buffers\r\n\r\nCC @ericstj @terrajobst ","Url":"https://github.com/dotnet/standard/issues/1063","RelatedDescription":"Open issue \"Create shims for new netstandard2.1 assemblies\" (#1063)"},{"Id":"398564136","IsPullRequest":false,"CreatedAt":"2019-01-24T23:36:09","Actor":"netspiri","Number":"1052","RawContent":null,"Title":"Incorrect dll being copied","State":"closed","Body":"I have\r\n\r\n- ProjectA targeting .Net Standard 2.0 making use of nuget library where the dlls for the different frameworks are named differently\r\n- ProjectB targeting .Net Standard 2.0 references ProjectA\r\n- ProjectC targeting .Net Framework 4.7.2 references ProjectB\r\n- ProjectD targeting .Net Framework 4.7.2 and is a Console app referencing ProjectC\r\n\r\nIf I run ProjectD I get the infamous \"Could not load file or assembly\" for Aspose.Email.Core.dll.\r\n\r\nI played around <RestoreProjectStyle>PackageReference</RestoreProjectStyle> in ProjectC and ProjectD but this results in .net framework dll (i.e Aspose.Email.dll) being copied over from the nuget package and not the .net standard dll (Aspose.Email.Core.dll).  I did not play with binding redirects because I do not think this is related.\r\n\r\nI've migrated manually ProjectC and ProjectD to the new csproj style but this had no effect.\r\n\r\nI do not want to end up with ProjectD referencing the required dlls directly because there must \"the proper way of doing it\".\r\n\r\nI have therefore uploaded a clean barebones project to https://bitbucket.org/netspiri/projectreferencestest.git , so as to see how the experts would do it, in the hope that this might help others. \r\n\r\nI've attached also the output of msbuild ProjectD.csproj /t:rebuild /bl\r\n\r\nIt would be nice if the experts would guide trough thier troubleshooting process.\r\n\r\n[log.txt](https://github.com/dotnet/standard/files/2752202/log.txt)\r\n[msbuild.zip](https://github.com/dotnet/standard/files/2752203/msbuild.zip)\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1052","RelatedDescription":"Closed issue \"Incorrect dll being copied\" (#1052)"},{"Id":"402932649","IsPullRequest":true,"CreatedAt":"2019-01-24T23:21:33","Actor":"wtgodbe","Number":"1060","RawContent":null,"Title":"Set StrongNameKeyID after import sdk.props","State":"closed","Body":"This allows us to set our own default for `StrongNameKeyID` rather than relying on the one from the SDK.\r\n\r\nCC @ericstj ","Url":"https://github.com/dotnet/standard/pull/1060","RelatedDescription":"Closed or merged PR \"Set StrongNameKeyID after import sdk.props\" (#1060)"},{"Id":"402860962","IsPullRequest":true,"CreatedAt":"2019-01-24T21:43:12","Actor":"terrajobst","Number":"1059","RawContent":null,"Title":"Add missing dummy fields","State":"closed","Body":"In ced9376c, we've added dummy fields for structs. Apparently, I missed these two in the diff.","Url":"https://github.com/dotnet/standard/pull/1059","RelatedDescription":"Closed or merged PR \"Add missing dummy fields\" (#1059)"},{"Id":"402275150","IsPullRequest":false,"CreatedAt":"2019-01-24T19:47:05","Actor":"jacobmohl","Number":"1056","RawContent":null,"Title":"Add support for HttpClient.PatchAsync()","State":"closed","Body":"It would make sense to support the HTTP Verb PATCH in HttpClient. Which for now is only supported in .Net Core 2.1 and forward with HttpClient.PatchAsync().","Url":"https://github.com/dotnet/standard/issues/1056","RelatedDescription":"Closed issue \"Add support for HttpClient.PatchAsync()\" (#1056)"},{"Id":"402847550","IsPullRequest":true,"CreatedAt":"2019-01-24T19:39:46","Actor":"wtgodbe","Number":"1058","RawContent":null,"Title":"Re-enable APICompat for netstandard1.x/2.0","State":"closed","Body":"This causes netstandard1.x/2.0 assets to be binplaced at `artifacts\\obj\\CompatShims\\ref` again, which will re-enable the APICompat runs for those TFMs. @ViktorHofer I noticed you removed this line here: https://github.com/dotnet/standard/pull/1040/files#diff-1fea8681058f11db0ecbfc2fc8a5be52L7 - was that intentional?","Url":"https://github.com/dotnet/standard/pull/1058","RelatedDescription":"Closed or merged PR \"Re-enable APICompat for netstandard1.x/2.0\" (#1058)"},{"Id":"400369663","IsPullRequest":false,"CreatedAt":"2019-01-24T19:21:03","Actor":"UnreachableCode","Number":"1055","RawContent":null,"Title":"Android implementation of HTTPClient throwing up java.io.IOException ","State":"closed","Body":"I believe this relates to the bug detailed in Xamarin's old Bugzilla:\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=41100\r\n\r\nand is also similar to the issue discussed here:\r\nhttps://github.com/square/okhttp/issues/1517\r\n\r\nHere is the main stacktrace of my issue:\r\n\r\nLoginProvider+<LoginAsync>d__1.MoveNext () C:\\source\\repos\\{MyApp}\\{MyApp}\\{MyApp}\\Services\\LoginProvider.cs:35\r\njava.io.IOException: unexpected end of stream on Connection{testclarity.i-menzies.com:443, proxy=DIRECT@ hostAddress=62.244.173.166 cipherSuite=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 protocol=http/1.1} (recycle count=0)\r\ncom.android.okhttp.internal.http.HttpConnection.readResponse(HttpConnection.java:210)\r\ncom.android.okhttp.internal.http.HttpTransport.readResponseHeaders(HttpTransport.java:80)\r\ncom.android.okhttp.internal.http.HttpEngine.readNetworkResponse(HttpEngine.java:905)\r\ncom.android.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:789)\r\ncom.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:443)\r\ncom.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:388)\r\ncom.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java:501)\r\ncom.android.okhttp.internal.huc.DelegatingHttpsURLConnection.getResponseCode(DelegatingHttpsURLConnection.java:105)\r\ncom.android.okhttp.internal.huc.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:25)\r\nCaused by: java.io.EOFException: \\n not found: size=0 content=...\r\ncom.android.okhttp.okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:200)\r\ncom.android.okhttp.internal.http.HttpConnection.readResponse(HttpConnection.java:191)\r\n\r\nI have tried setting the connection closed header and setting chunked transfer encoding but neither of these fixes work. I would try to set the OkHTTP.setRetryOnConnectionFailure(true) but I don't think there is a way to do this in the referenced Java source.","Url":"https://github.com/dotnet/standard/issues/1055","RelatedDescription":"Closed issue \"Android implementation of HTTPClient throwing up java.io.IOException \" (#1055)"},{"Id":"402566640","IsPullRequest":true,"CreatedAt":"2019-01-24T06:55:33","Actor":"wtgodbe","Number":"1057","RawContent":null,"Title":"Dummy commit to trigger CI","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1057","RelatedDescription":"Closed or merged PR \"Dummy commit to trigger CI\" (#1057)"},{"Id":"400334291","IsPullRequest":false,"CreatedAt":"2019-01-18T13:36:41","Actor":"aday12345","Number":"1054","RawContent":null,"Title":".net standard 2.1 targeting question","State":"closed","Body":"i have the .net core 2.2 sdk installed and can target it with no issue, but should i be able to target the netStandard 2.1 library when creating a class library? i only see 2.0 as an option.","Url":"https://github.com/dotnet/standard/issues/1054","RelatedDescription":"Closed issue \".net standard 2.1 targeting question\" (#1054)"},{"Id":"396287501","IsPullRequest":false,"CreatedAt":"2019-01-17T10:59:36","Actor":"gpcaretti","Number":"1044","RawContent":null,"Title":"FAQ: how to understand a package is compatible with NETStandard","State":"closed","Body":"I am developing a library bases on .NETstandard 2.0.\r\n\r\nMy question is: if in my library I need to refer a class defined outside the .NETstandard library (e.g. the `System.ComponentModel.DataAnnotations.DataTypeAttribute` class), how do I understand if I do not break the multiplatfom compatibility of my library by referring the external library `System.ComponentModel.DataAnnotations`?","Url":"https://github.com/dotnet/standard/issues/1044","RelatedDescription":"Closed issue \"FAQ: how to understand a package is compatible with NETStandard\" (#1044)"},{"Id":"396610837","IsPullRequest":true,"CreatedAt":"2019-01-16T21:17:03","Actor":"wtgodbe","Number":"1047","RawContent":null,"Title":"Bump AssemblyVersion for nestandard.dll to 2.1.0.0","State":"closed","Body":"Fixes https://github.com/dotnet/standard/issues/929\r\n\r\nCC @ericstj @terrajobst ","Url":"https://github.com/dotnet/standard/pull/1047","RelatedDescription":"Closed or merged PR \"Bump AssemblyVersion for nestandard.dll to 2.1.0.0\" (#1047)"},{"Id":"399549465","IsPullRequest":false,"CreatedAt":"2019-01-15T21:45:54","Actor":"kaby76","Number":"1053","RawContent":null,"Title":"Qs on NET Standard, Formal Specifications, Type Equivalence, etc.","State":"open","Body":"I've started porting (rewriting) the Net Core framework to the GPU. Part of this very large task is to go through the framework and verify that it indeed satisfies the Net Standard specification because I really don't trust anything/anyone. So, I have several questions regarding Net Standard.\r\n\r\n1) According to Microsoft documentation (https://docs.microsoft.com/en-us/dotnet/standard/net-standard), “[t]he .NET Standard is a formal specification of .NET APIs that are intended to be available on all .NET implementations. The motivation behind the .NET Standard is establishing greater uniformity in the .NET ecosystem. ECMA 335 continues to establish uniformity for .NET implementation behavior, but there's no similar spec for the .NET Base Class Libraries (BCL) for .NET library implementations.”\r\n\r\nQ: Exactly where is the “formal specification” of the API? Is it the MD file for a particular version (e.g., https://raw.githubusercontent.com/dotnet/standard/master/docs/versions/netstandard2.0_ref.md)? Is it the collection of C# files with stub implementations (e.g., the files in https://github.com/dotnet/standard/tree/master/src/netstandard/ref)? Or, is it something else?\r\n\r\n2) Assuming that the C# files in https://github.com/dotnet/standard/tree/master/src/netstandard/ref is the formal definition. I wrote a CSPROJ to build an assembly for the current state of the decls. Then, I wrote a program to go through a framework, following reference assemblies to implementation assemblies, and output a sorted list of all types, all methods, all attributes, for public decls. I compared the reference and implementation assemblies for Net Core with the Standard set forth in the C# code. And yes, there are some non-trivial differences, mostly because the standard is evolving.\r\n\r\nThe following are general questions of type equivalence.\r\n\r\nQ: If there's an attribute (\"[...]\") on a type is in Standard, but missing on the type in Core, does Core still satisfy the Standard?\r\n\r\nQ: If a method and/or type exists in Core, but not in Standard, does the implementation still satisfy the Standard? In other words, can an implementation provide \"extra\" and still satisfy Standard?\r\n\r\nThe full list of the type dump for Standard and Core assemblies is here (https://1drv.ms/f/s!Atb3HX_AxX9ZgaxT-m221N6ut285Vw).\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1053","RelatedDescription":"Open issue \"Qs on NET Standard, Formal Specifications, Type Equivalence, etc.\" (#1053)"},{"Id":"393267915","IsPullRequest":true,"CreatedAt":"2019-01-14T18:45:00","Actor":"ViktorHofer","Number":"1040","RawContent":null,"Title":"Remove the manual config system","State":"closed","Body":"Fixes https://github.com/dotnet/standard/issues/1032","Url":"https://github.com/dotnet/standard/pull/1040","RelatedDescription":"Closed or merged PR \"Remove the manual config system\" (#1040)"},{"Id":"396798571","IsPullRequest":false,"CreatedAt":"2019-01-11T01:19:54","Actor":"duncand","Number":"1050","RawContent":null,"Title":"Proposal to rename Standard 2.1 to 2.2, make 2.1 a Framework compatible subset","State":"closed","Body":"I'm looking to provide input on .NET Standard and this appears to be the best place.\r\n\r\nSee https://blogs.msdn.microsoft.com/dotnet/2018/11/05/announcing-net-standard-2-1/ for reference.\r\n\r\nI propose that what is currently planned for .NET Standard 2.1 be pushed back to .NET Standard 2.2, and that .NET Standard 2.1 instead just have the subset of those changes that are implementable on .NET Framework.\r\n\r\nWhile going forward, .NET Standard after 2.0 is mainly adding new features that are not practical to implement in .NET Framework, some of the proposals for 2.1 contained bringing out some things that already existed but missed the 2.0 window.\r\n\r\nIf we do what I propose, then we have a last chance to increase the API surface that can run everywhere, before it is permanently shut out due to releasing a .NET Standard version that Framework can't run, given that each increasing Standard version is a superset of what came before.","Url":"https://github.com/dotnet/standard/issues/1050","RelatedDescription":"Closed issue \"Proposal to rename Standard 2.1 to 2.2, make 2.1 a Framework compatible subset\" (#1050)"},{"Id":"394796330","IsPullRequest":false,"CreatedAt":"2019-01-11T00:23:25","Actor":"MV10","Number":"1041","RawContent":null,"Title":"System.MathF missing in .NET Standard 2.1 README","State":"closed","Body":"Minor, but `System.MathF` is missing from the [README](https://github.com/dotnet/standard/blob/master/docs/planning/netstandard-2.1/README.md). I figured it would be in the Miscellaneous list at a minimum. (As I understand it, this is still on schedule for .NET Standard 2.1 per  https://github.com/dotnet/corefx/issues/15830, correct?)\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1041","RelatedDescription":"Closed issue \"System.MathF missing in .NET Standard 2.1 README\" (#1041)"},{"Id":"396675175","IsPullRequest":false,"CreatedAt":"2019-01-11T00:22:05","Actor":"Entomy","Number":"1049","RawContent":null,"Title":"String Enhancements","State":"closed","Body":"In .NET Core >=2.1 there exists a `.Join()` method that takes strings and chars, and a `.Split()` method that takes strings and chars. However in .NET Standard, `.Join()` only accepts strings, and `.Split()` only accepts chars. This is an odd seeming, and inconvenient, limitation. Can this be added to a future version?","Url":"https://github.com/dotnet/standard/issues/1049","RelatedDescription":"Closed issue \"String Enhancements\" (#1049)"},{"Id":"397146216","IsPullRequest":false,"CreatedAt":"2019-01-08T23:57:44","Actor":"dsplaisted","Number":"1051","RawContent":null,"Title":"Create targeting pack for .NET Standard","State":"open","Body":"For .NET Core 3.0, we expect to separate targeting packs, which contain the assets needed at build time when targeting .NET Core 3.0 (for example, reference assemblies and intellisense documentation) from \"runtime packs\", which will include the platform-specific runtime components for .NET Core 3.  See dotnet/cli#10006, and [dotnet/designs#50](https://github.com/dotnet/designs/pull/50/files?short_path=ebf265d#diff-ebf265d0476041dd8cab82fa24ab5b0e)\r\n\r\nWe will have targeting pack for each shared framework (.NET Core, ASP.NET Core, and WindowsDesktop), as well as for .NET Standard.  This issue tracks the work required a .NET Standard targeting pack.  Ideally, we should create targeting packs for both .NET Standard 2.1 and 2.0.\r\n\r\nThe work required includes:\r\n\r\n- A new NuGet package including the targeting pack assets.  This should include the reference assemblies, intellisense documentation, and platform manifest file.  The current straw man proposal for the package ID is `Microsoft.NETCore.App.Ref`\r\n- Installers for each supported installer format (msi, deb, pkg, and rpm), which lay out the targeting pack files under `<DOTNET_ROOT>/packs/<PackageId>/version`.  These installers will be bundled or depended on by the corresponding .NET Core SDK installers.\r\n\r\nSome of the details (such as package layout, names, etc) are still [under design](https://github.com/dotnet/designs/pull/50/files?short_path=ebf265d#diff-ebf265d0476041dd8cab82fa24ab5b0e) and may change slightly.","Url":"https://github.com/dotnet/standard/issues/1051","RelatedDescription":"Open issue \"Create targeting pack for .NET Standard\" (#1051)"},{"Id":"396646204","IsPullRequest":true,"CreatedAt":"2019-01-07T22:02:02","Actor":"wtgodbe","Number":"1048","RawContent":null,"Title":" Move source items into src folder","State":"closed","Body":"With this, we group all source items into an `src` folder to match the convention of other repos. I've done a diff of the `artifacts` dir before & after this change to confirm that everything still looks like the same. @ViktorHofer @danmosemsft @terrajobst PTAL\r\n\r\nFixes https://github.com/dotnet/standard/issues/1037","Url":"https://github.com/dotnet/standard/pull/1048","RelatedDescription":"Closed or merged PR \" Move source items into src folder\" (#1048)"},{"Id":"393015237","IsPullRequest":false,"CreatedAt":"2019-01-07T22:02:02","Actor":"ViktorHofer","Number":"1037","RawContent":null,"Title":"Group source items in a src folder","State":"closed","Body":"We should move\r\n- netstandard\r\n- platforms\r\n- apicompat\r\n- dir.traversal.targets\r\n- package.builds\r\n- src.builds\r\n\r\ninto a `src` folder to align with other dotnet repos.\r\n\r\ncc @wtgodbe @danmosemsft @terrajobst","Url":"https://github.com/dotnet/standard/issues/1037","RelatedDescription":"Closed issue \"Group source items in a src folder\" (#1037)"},{"Id":"396598897","IsPullRequest":true,"CreatedAt":"2019-01-07T18:47:02","Actor":"wtgodbe","Number":"1046","RawContent":null,"Title":"Update APICompat baseline","State":"closed","Body":"I see these updates to the APICompat baselines after building from clean - I've confirmed that they weren't present before https://github.com/dotnet/standard/commit/dbb3e847a6dd09a8c9ec0206463ed1b848a5c90b. I figured I'd open a PR to use first as an easy way to view the diff & discuss, then to take into master if we decide it's the right thing. @ViktorHofer did you notice these locally when fixing up APICompat/GenAPI?","Url":"https://github.com/dotnet/standard/pull/1046","RelatedDescription":"Closed or merged PR \"Update APICompat baseline\" (#1046)"},{"Id":"396591596","IsPullRequest":false,"CreatedAt":"2019-01-07T18:06:51","Actor":"wtgodbe","Number":"1045","RawContent":null,"Title":"Convert seed.sh/.cmd files to proj files & update GenAPI invocations","State":"open","Body":"We should convert files like https://github.com/dotnet/standard/blob/8ca3d4c0c9599186d50196781484312176a9b2ad/platforms/xamarin.android/seed.sh to `.proj` files that can be built on-demand (either by direct invocation of `dotnet msbuild`, or a wrapper .ps1/.sh script that builds the project). This way we'll have access to the up-to-date version of `GenAPI`. We should also update the invocation of GenAPI to match the new standard introduced by https://github.com/dotnet/arcade/pull/1676\r\n\r\nCC @ViktorHofer ","Url":"https://github.com/dotnet/standard/issues/1045","RelatedDescription":"Open issue \"Convert seed.sh/.cmd files to proj files & update GenAPI invocations\" (#1045)"},{"Id":"396025237","IsPullRequest":true,"CreatedAt":"2019-01-04T19:25:54","Actor":"ViktorHofer","Number":"1043","RawContent":null,"Title":"Fix GenAPI invocation with new args","State":"closed","Body":"Also need to use DARC to get a GenApi fix in.","Url":"https://github.com/dotnet/standard/pull/1043","RelatedDescription":"Closed or merged PR \"Fix GenAPI invocation with new args\" (#1043)"},{"Id":"395644781","IsPullRequest":true,"CreatedAt":"2019-01-04T16:29:48","Actor":"ViktorHofer","Number":"1042","RawContent":null,"Title":"Respect ApiCompat cmd changes","State":"closed","Body":"Depends on https://github.com/dotnet/arcade/pull/1676","Url":"https://github.com/dotnet/standard/pull/1042","RelatedDescription":"Closed or merged PR \"Respect ApiCompat cmd changes\" (#1042)"},{"Id":"393264404","IsPullRequest":true,"CreatedAt":"2018-12-26T21:14:18","Actor":"terrajobst","Number":"1039","RawContent":null,"Title":"Fix representation of enum values","State":"closed","Body":"We finally fixed the missing feature in our source emitter so that it now includes a human readable bitmask rather than the underlying value.\r\n\r\n***This doesn't change any API surface but makes diffs more human readable.***","Url":"https://github.com/dotnet/standard/pull/1039","RelatedDescription":"Closed or merged PR \"Fix representation of enum values\" (#1039)"},{"Id":"393009607","IsPullRequest":false,"CreatedAt":"2018-12-21T01:08:29","Actor":"ViktorHofer","Number":"1036","RawContent":null,"Title":"Disable Jenkins","State":"closed","Body":"We need to disable Jenkins so I doesn't get queued in a PR anymore and if not already done point mc.dot.net to the new Azure DevOps run. I also noticed that the last official build happened 12/3, maybe the cron job is not configured right?","Url":"https://github.com/dotnet/standard/issues/1036","RelatedDescription":"Closed issue \"Disable Jenkins\" (#1036)"},{"Id":"393171059","IsPullRequest":true,"CreatedAt":"2018-12-20T19:19:30","Actor":"wtgodbe","Number":"1038","RawContent":null,"Title":"Add APICompat run for NetStandard2.0","State":"closed","Body":"Adds ApiCompat coverage for .netstandard2.0\r\n\r\n@ViktorHofer @terrajobst PTAL\r\n\r\nresolves https://github.com/dotnet/standard/issues/1029","Url":"https://github.com/dotnet/standard/pull/1038","RelatedDescription":"Closed or merged PR \"Add APICompat run for NetStandard2.0\" (#1038)"},{"Id":"393005614","IsPullRequest":true,"CreatedAt":"2018-12-20T18:07:43","Actor":"ViktorHofer","Number":"1035","RawContent":null,"Title":"Cleanup files after arcade switch & update baseline","State":"closed","Body":"Cleaning up some leftovers and running the build once to regenerate the baseline files.\r\n\r\nOpened https://github.com/dotnet/standard/issues/1031 and https://github.com/dotnet/standard/issues/1032 which should also be done.\r\n\r\nFailing CI jobs are leftovers: https://github.com/dotnet/standard/issues/1036\r\n\r\ncc @danmosemsft ","Url":"https://github.com/dotnet/standard/pull/1035","RelatedDescription":"Closed or merged PR \"Cleanup files after arcade switch & update baseline\" (#1035)"},{"Id":"393001679","IsPullRequest":true,"CreatedAt":"2018-12-20T11:31:22","Actor":"ViktorHofer","Number":"1034","RawContent":null,"Title":"Cleanup files after arcade switch & update baseline","State":"closed","Body":"Cleaning up some leftovers and running the build once to regenerate the baseline files.\r\n\r\nOpened https://github.com/dotnet/standard/issues/1031 and https://github.com/dotnet/standard/issues/1032 which should also be done.\r\n\r\ncc @danmosemsft ","Url":"https://github.com/dotnet/standard/pull/1034","RelatedDescription":"Closed or merged PR \"Cleanup files after arcade switch & update baseline\" (#1034)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"406022298","IsPullRequest":true,"CreatedAt":"2019-02-03T02:10:08","Actor":"dotnet-maestro[bot]","Number":"35061","RawContent":null,"Title":"Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- Microsoft.NETCore.Platforms - 3.0.0-preview.19102.2\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/35061","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/corefx\" (#35061)"},{"Id":"406009316","IsPullRequest":true,"CreatedAt":"2019-02-03T01:36:51","Actor":"Dotnet-GitSync-Bot","Number":"35059","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corefx/pull/35059","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#35059)"},{"Id":"406017614","IsPullRequest":true,"CreatedAt":"2019-02-02T20:07:47","Actor":"filipnavara","Number":"35060","RawContent":null,"Title":"WIP: Move LowLevelMonitor functions from CoreRT to System.Native","State":"open","Body":"The functions are renamed, implementation is converted from C++ to C. \r\n\r\nOriginal source:\r\n- https://github.com/dotnet/corert/blob/master/src/Native/System.Private.CoreLib.Native/pal_threading.cpp\r\n- https://github.com/dotnet/corert/blob/master/src/Native/System.Private.CoreLib.Native/pal_threading.h\r\n\r\n<strike>Two new functions are exposed - `SystemNative_MonitorTryAcquire` and `SystemNative_MonitorBroadcastAndRelease`. Both were implemented in CoreRT native code, but they were never used. They will likely not be necessary, but I added them in the off-chance that they would be used since the implementation is small and trivial. \r\n\r\nThe need for `SystemNative_MonitorTryAcquire` is avoided by keeping the track of locked state in the managed code and using `Interlocked` methods to handle it there. `SystemNative_MonitorBroadcastAndRelease` is similar to `Monitor.PulseAll`, which is not exposed in the `LowLevelMonitor` API.</strike>\r\n\r\nNaming is not necessarily final, suggestions are welcome.","Url":"https://github.com/dotnet/corefx/pull/35060","RelatedDescription":"Open PR \"WIP: Move LowLevelMonitor functions from CoreRT to System.Native\" (#35060)"},{"Id":"406002146","IsPullRequest":true,"CreatedAt":"2019-02-02T17:25:57","Actor":"Dotnet-GitSync-Bot","Number":"35058","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corefx/pull/35058","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#35058)"},{"Id":"406001477","IsPullRequest":true,"CreatedAt":"2019-02-02T17:11:35","Actor":"hughbe","Number":"35057","RawContent":null,"Title":"Add more System.Json tests and remove dead xunit workarounds","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/pull/35057","RelatedDescription":"Open PR \"Add more System.Json tests and remove dead xunit workarounds\" (#35057)"},{"Id":"405995943","IsPullRequest":true,"CreatedAt":"2019-02-02T16:07:55","Actor":"hughbe","Number":"35056","RawContent":null,"Title":"Cleanup doc comments in ComponentModel.Primitives","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/pull/35056","RelatedDescription":"Open PR \"Cleanup doc comments in ComponentModel.Primitives\" (#35056)"},{"Id":"405993787","IsPullRequest":true,"CreatedAt":"2019-02-02T15:43:05","Actor":"hughbe","Number":"35055","RawContent":null,"Title":" Increase code coverage of System.ComponentModel.Primitives to 100%","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/pull/35055","RelatedDescription":"Open PR \" Increase code coverage of System.ComponentModel.Primitives to 100%\" (#35055)"},{"Id":"405993393","IsPullRequest":false,"CreatedAt":"2019-02-02T15:38:28","Actor":"RyotaMurohoshi","Number":"35054","RawContent":null,"Title":"Add Enumerable.IsEmpty that judges `IEnumerable<T>` is empty.","State":"open","Body":"# Summary\r\n\r\nAdd `IsEmpty` method.\r\n\r\n* Judges that `IEnumerable<T>` is empty.\r\n* `IEnumerable<T>` extension method. New `LINQ to Objects member`.\r\n* Someone uses \"Count() == 0\" incorrectly. `IsEmpty` method helps them.\r\n\r\n# API\r\n\r\n```csharp\r\npublic static class Enumerable\r\n{\r\n    public static bool IsEmpty<TSource>(this IEnumerable<TSource> source);\r\n}\r\n```\r\n\r\n# Background\r\n\r\nThere are no method or property to judge that Array, `IEnumerable<T>` and `List<T>` etc are empty or not.\r\n\r\nSomeone uses \"Count() == 0\" incorrectly to judge that `IEnumerable<T>` is empty or not. This is bad usage. Next code is an example.\r\n\r\nNext code read all line twice. To judge `target.txt` is empty, we do not need read all lines. If `target.txt` is huge, it is so bad.\r\n\r\n```csharp\r\nIEnumerable<string> lines = File.ReadLines(\"target.txt\");\r\n// Bad solution\r\nif(lines.Count() == 0) {\r\n    Console.WriteLine(\"target.txt is empty.\");\r\n    return ;\r\n}\r\n\r\n// iterate all line and use it.\r\n```\r\n\r\nGood practice is to use `Any` method and `!` to judge `is empty`. This can judge that file is empty or not without reading all lines.\r\n\r\n```csharp\r\nIEnumerable<string> lines = File.ReadLines(\"target.txt\");\r\n// Current good solution\r\nif(!lines.Any()) {\r\n    Console.WriteLine(\"target.txt is empty.\");\r\n    return ;\r\n}\r\n\r\n// iterate all line and use it.\r\n```\r\n\r\nBy the way, I do NOT think this is BEST way.\r\n\r\n# Solution and Usage\r\n\r\nI suggest `IsEmpty` method to `IEnumerable<T>` as extension method. `IsEmpty` judeges that Array, `IEnumerable<T>` and `List<T>` etc are empty or not.\r\n\r\n\r\n```csharp\r\nIEnumerable<string> lines = File.ReadLines(\"target.txt\");\r\nif(lines.IsEmpty()) {\r\n    Console.WriteLine(\"target.txt is empty.\");\r\n    return ;\r\n}\r\n\r\n// iterate all line and use it.\r\n```\r\n\r\nThis is more clear and explicit than `Any` and `!` usage.  And beginner can notice the `IsEmpty` method with IntelliSense.\r\n\r\n# Relatives\r\n\r\nThere is `IsEmpty` method in Ix.NET.\r\n\r\nIx.NET\r\n\r\nhttps://github.com/dotnet/reactive/blob/master/Ix.NET/Source/System.Interactive/Empty.cs\r\n\r\nNext languages have `IsEmpty` or `isEmpty` methods.\r\n\r\nF#\r\nhttps://msdn.microsoft.com/en-us/visualfsharpdocs/conceptual/list.isempty%5B't%5D-function-%5Bfsharp%5D\r\nhttps://msdn.microsoft.com/en-us/visualfsharpdocs/conceptual/array.isempty%5b't%5d-function-%5bfsharp%5d\r\nhttps://msdn.microsoft.com/en-us/visualfsharpdocs/conceptual/seq.isempty%5b't%5d-function-%5bfsharp%5d\r\n\r\nJava\r\nhttps://docs.oracle.com/javase/10/docs/api/java/util/Collection.html#isEmpty()\r\n\r\n\r\nKotlin\r\nhttps://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/is-empty.html\r\nhttps://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/-collection/is-empty.html\r\n\r\nScala\r\nhttps://www.scala-lang.org/api/current/scala/collection/GenTraversableOnce.html#isEmpty:Boolean\r\n","Url":"https://github.com/dotnet/corefx/issues/35054","RelatedDescription":"Open issue \"Add Enumerable.IsEmpty that judges `IEnumerable<T>` is empty.\" (#35054)"},{"Id":"405993233","IsPullRequest":false,"CreatedAt":"2019-02-02T15:36:21","Actor":"hughbe","Number":"35053","RawContent":null,"Title":"CompositionExceptionTests.Message_ShouldFormatCountOfRootCausesUsingTheCurrentCulture test fails, but only in code coverage","State":"open","Body":"Running `dotnet msbuild /T:BuildAndTest`, this test passes\r\nRunning `dotnet msbuild /T:BuildAndTest /P:Coverage=true` this test fails:\r\n\r\n```\r\n    Discovering: System.ComponentModel.Composition.Tests (method display = ClassAndMethod, method display options = None)\r\n    Discovered:  System.ComponentModel.Composition.Tests (found 1428 of 1628 test cases)\r\n    Starting:    System.ComponentModel.Composition.Tests (parallel test collections = on, max threads = 4)\r\n        Exit code was 131 but it should have been 42\r\n        Expected: True\r\n        Actual:   False\r\n        Stack Trace:\r\n          /Users/hugh/Documents/GitHub/corefx/src/CoreFx.Private.TestUtilities/src/System/Diagnostics/RemoteExecutorTestBase.cs(371,0): at System.Diagnostics.RemoteExecutorTestBase.RemoteInvokeHandle.Dispose(Boolean disposing)\r\n          /Users/hugh/Documents/GitHub/corefx/src/CoreFx.Private.TestUtilities/src/System/Diagnostics/RemoteExecutorTestBase.cs(345,0): at System.Diagnostics.RemoteExecutorTestBase.RemoteInvokeHandle.Dispose()\r\n          /Users/hugh/Documents/GitHub/corefx/src/System.ComponentModel.Composition/tests/System/ComponentModel/Composition/CompositionExceptionTests.cs(372,0): at System.ComponentModel.Composition.CompositionExceptionTests.Message_ShouldFormatCountOfRootCausesUsingTheCurrentCulture()\r\n    Finished:    System.ComponentModel.Composition.Tests\r\n```","Url":"https://github.com/dotnet/corefx/issues/35053","RelatedDescription":"Open issue \"CompositionExceptionTests.Message_ShouldFormatCountOfRootCausesUsingTheCurrentCulture test fails, but only in code coverage\" (#35053)"},{"Id":"405992955","IsPullRequest":true,"CreatedAt":"2019-02-02T15:33:09","Actor":"hughbe","Number":"35052","RawContent":null,"Title":"Add more ComponentModel.Annotations tests","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/pull/35052","RelatedDescription":"Open PR \"Add more ComponentModel.Annotations tests\" (#35052)"},{"Id":"405981621","IsPullRequest":true,"CreatedAt":"2019-02-02T13:08:10","Actor":"dotnet-maestro[bot]","Number":"35051","RawContent":null,"Title":"Update dependencies from dotnet/coreclr","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/coreclr\r\n\r\n- Microsoft.NET.Sdk.IL - 3.0.0-preview-27401-72\r\n- Microsoft.NETCore.ILAsm - 3.0.0-preview-27401-72\r\n- Microsoft.NETCore.Runtime.CoreCLR - 3.0.0-preview-27401-72\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/35051","RelatedDescription":"Open PR \"Update dependencies from dotnet/coreclr\" (#35051)"},{"Id":"405976008","IsPullRequest":false,"CreatedAt":"2019-02-02T11:48:55","Actor":"Wraith2","Number":"35050","RawContent":null,"Title":"Build: tests and no longer auto run and ForceRunTests won't make them","State":"open","Body":"Updated to master, `clean -all`, `build -allconfigurations` and noticed no tests were run. Then I tried the library I'm actually interested in `build src\\System.Data.SqlClient` and still no tests, auto or manual. I tried forcing them with both `/p:Test=true` and `/p:ForceRunTests=true` which I've used successfully in the past. Neither work.\r\n\r\nHas the method of running tests changed?\r\n\r\n@safern @ViktorHofer ","Url":"https://github.com/dotnet/corefx/issues/35050","RelatedDescription":"Open issue \"Build: tests and no longer auto run and ForceRunTests won't make them\" (#35050)"},{"Id":"405971484","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:21","Actor":"Dotnet-GitSync-Bot","Number":"35049","RawContent":null,"Title":"Mirror changes from dotnet/corert,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corefx/pull/35049","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert,coreclr\" (#35049)"},{"Id":"405888419","IsPullRequest":true,"CreatedAt":"2019-02-02T10:40:26","Actor":"dotnet-maestro-bot","Number":"35038","RawContent":null,"Title":"Update ProjectNTfs, ProjectNTfsTestILC to beta-27401-00, beta-27401-00, respectively (master)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/35038","RelatedDescription":"Closed or merged PR \"Update ProjectNTfs, ProjectNTfsTestILC to beta-27401-00, beta-27401-00, respectively (master)\" (#35038)"},{"Id":"405932344","IsPullRequest":true,"CreatedAt":"2019-02-02T10:39:01","Actor":"Dotnet-GitSync-Bot","Number":"35044","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @filipnavara @stephentoub","Url":"https://github.com/dotnet/corefx/pull/35044","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#35044)"},{"Id":"405937346","IsPullRequest":true,"CreatedAt":"2019-02-02T10:34:33","Actor":"dotnet-maestro[bot]","Number":"35046","RawContent":null,"Title":"Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- Microsoft.NETCore.Platforms - 3.0.0-preview.19101.4\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- Microsoft.NETCore.Platforms - 3.0.0-preview.19101.5\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/35046","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/corefx\" (#35046)"},{"Id":"405919917","IsPullRequest":true,"CreatedAt":"2019-02-02T08:09:10","Actor":"jkotas","Number":"35042","RawContent":null,"Title":"Cleanup security permission and resource consumption attribute references","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/35042","RelatedDescription":"Closed or merged PR \"Cleanup security permission and resource consumption attribute references\" (#35042)"},{"Id":"405942280","IsPullRequest":true,"CreatedAt":"2019-02-02T03:18:55","Actor":"ahsonkhan","Number":"35048","RawContent":null,"Title":"[WIP] Add Utf8JsonWriter write element and write element value + update ref.","State":"open","Body":"Addresses parts of the https://github.com/dotnet/corefx/issues/33968 related to `Utf8JsonWriter`.\r\n\r\n**TODO:**\r\n- **We need to decide on the behavior of this API** around pretty printing/minifying the JSON element for complex types.\r\n  - The current behavior just takes the JSON text represented by `JsonElement` and writes that to the output (maintaining whatever formatting it initially had).\r\n  - Do we truly support `Indented` here? To do that we would have to enumerate all the sub-elements and write them with proper indentation. Right now, we take the payload formatting as is, which means it could result in inconsistent output formatting which may not match user expectations.\r\n  - Maybe we should consider renaming the API to `WriteElementRaw` instead and consider providing `WriteElement` APIs that honors the `WriteOptions` fully.\r\n    - To do so, we would need to expose some helper APIs on `JsonDocument`/`JsonElement` (at least internally) so we can `Utf8JsonWriter` can read the rows of the underlying DB directly.\r\n- Add the utf-8 `ReadOnlySpan<byte>` overload.\r\n- The `Utf8JsonWriter` needs an (internal) API on `JsonElement` that returns the raw utf-8 input bytes directly (without transcoding to utf-16 string). The existing `GetRawText()` API forces an allocation, and results in unnecessary work.\r\n\r\n@bartonjs, what did you have in mind around the semantics of this API?\r\n\r\ncc @GrabYourPitchforks, @JamesNK, @stephentoub, @BrennanConroy  ","Url":"https://github.com/dotnet/corefx/pull/35048","RelatedDescription":"Open PR \"[WIP] Add Utf8JsonWriter write element and write element value + update ref.\" (#35048)"},{"Id":"405939374","IsPullRequest":true,"CreatedAt":"2019-02-02T02:41:53","Actor":"hughbe","Number":"35047","RawContent":null,"Title":"Cleanup ObjectModel code","State":"open","Body":"Extracted from https://github.com/dotnet/corefx/pull/35013\r\n\r\nAlso has a param name addition for no-such-item","Url":"https://github.com/dotnet/corefx/pull/35047","RelatedDescription":"Open PR \"Cleanup ObjectModel code\" (#35047)"},{"Id":"405933667","IsPullRequest":true,"CreatedAt":"2019-02-02T01:40:38","Actor":"danmosemsft","Number":"35045","RawContent":null,"Title":"Fix disable media insertion prompt","State":"open","Body":"Fix https://github.com/dotnet/corefx/issues/35037\r\n\r\nIf it was a class, I would make a private parameterless constructor to prevent this mistake.","Url":"https://github.com/dotnet/corefx/pull/35045","RelatedDescription":"Open PR \"Fix disable media insertion prompt\" (#35045)"},{"Id":"405852945","IsPullRequest":true,"CreatedAt":"2019-02-02T01:24:25","Actor":"Dotnet-GitSync-Bot","Number":"35033","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corefx/pull/35033","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#35033)"},{"Id":"405883075","IsPullRequest":true,"CreatedAt":"2019-02-02T00:58:11","Actor":"dotnet-maestro[bot]","Number":"35036","RawContent":null,"Title":"Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- Microsoft.NETCore.Platforms - 3.0.0-preview.19101.3\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/35036","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/corefx\" (#35036)"},{"Id":"405926165","IsPullRequest":true,"CreatedAt":"2019-02-02T00:42:40","Actor":"safern","Number":"35043","RawContent":null,"Title":"Add build badges to README","State":"open","Body":"Note that not all the badges work because of an Azure Devops bug when there are multiple jobs with the same display name. In this case for Windows and Linux.\r\n\r\nI don't know if this is the layout for the table that we want or if we want one table per OS. Ideas are welcome :smile:\r\n\r\nPreview: https://github.com/safern/corefx/tree/AddBadges\r\n\r\nAlso, I moved the badges up, per Dan's request.\r\n\r\ncc: @karelz @danmosemsft @ViktorHofer @ericstj ","Url":"https://github.com/dotnet/corefx/pull/35043","RelatedDescription":"Open PR \"Add build badges to README\" (#35043)"},{"Id":"405917650","IsPullRequest":false,"CreatedAt":"2019-02-01T23:52:59","Actor":"maryamariyan","Number":"35041","RawContent":null,"Title":"Mishandled serialization on some Exception types with non-serializable fields","State":"open","Body":"Not all Exception types are serializable but for those (listed below) they serialize a private field of arbitrary type that may not be serializable:\r\n\r\n- InvalidOperationException\r\n- ArgumentOutOfRangeException\r\n- RuntimeWrappedException \r\n- XmlSchemaValidationException\r\n- SecurityException\r\n\r\nFor them, we need to use the ToString() value for the non serializable types. (sample to follow: SwitchExpressionException)\r\n\r\nRefer to: https://github.com/dotnet/corefx/pull/34954#discussion_r252381080\r\n\r\ncc: @danmosemsft ","Url":"https://github.com/dotnet/corefx/issues/35041","RelatedDescription":"Open issue \"Mishandled serialization on some Exception types with non-serializable fields\" (#35041)"},{"Id":"405912682","IsPullRequest":false,"CreatedAt":"2019-02-01T23:26:50","Actor":"linmeng08","Number":"35040","RawContent":null,"Title":"X509Chain.Build doesn't return the issuer even with AllowUnknownCertificateAuthority flag","State":"open","Body":"I have a scenario that I need to verify if a certificate is issued by a specific issuer (not trusted CA). To do so I'm trying to specify AllowUnknownCertificateAuthority flag while building the chain and expecting to perform my own validation with the items in the chain. But after the Build method is called and returned true (expected), the ChainElements collection only has one element which is the certificate being verified and doesn't have its issuer. Is this expected?\r\n\r\nThe essential code is as following:\r\n\r\n```\r\nvar chain = new X509Chain(true);\r\nchain.ChainPolicy = new X509ChainPolicy()\r\n{\r\n    RevocationMode = X509RevocationMode.NoCheck,\r\n    VerificationFlags = X509VerificationFlags.AllowUnknownCertificateAuthority\r\n};\r\n\r\nif (chain.Build(certificate))\r\n{\r\n    for (int i = chain.ChainElements.Count - 1; i >= 0; i--)\r\n    {\r\n        // Expecting the untrusted CA to be found here, but it is not - there's only 1 item\r\n        // which is the certificate being verified.\r\n    }\r\n}\r\n\r\n```","Url":"https://github.com/dotnet/corefx/issues/35040","RelatedDescription":"Open issue \"X509Chain.Build doesn't return the issuer even with AllowUnknownCertificateAuthority flag\" (#35040)"},{"Id":"405882570","IsPullRequest":false,"CreatedAt":"2019-02-01T22:47:51","Actor":"vadmyst","Number":"35035","RawContent":null,"Title":"SslStream.AuthenticateAsClient - RevocationStatusUnknown: unable to get certificate CRL for OCSP certificate (Let's Encrypt)","State":"closed","Body":"I stumbled on different behavior of SslStream.AuthenticateAsClient under Windows and Linux for the same server - https://www.videolan.org. On Linux(Raspberry Pi - Raspbian) SslStream.AuthenticateAsClient fails to open secure connection with the server. The same problem is not reproduced on Windows. I have also tried other servers that use Let's Encrypt.\r\n\r\nOn Linux my app is packaged as a self-contained and uses .Net Core 2.1.\r\n\r\nThe certificate validation callback indicates following error - _RemoteCertificateChainErrors_\r\nWhen I dig into the chain: \r\n_Element 0: www.videolan.org - RevocationStatusUnknown: **unable to get certificate CRL**\r\nElement 1: Let's Encrypt Authority X3 - OK\r\nElement 2: DST Root CA X3 - OK_\r\n\r\nServer certificate is a Let's Encrypt one that does not have CRL but instead uses OCSP.\r\n\r\nFrom the same Raspberry Pi box, I have successfully validated the certificate along with its chain using openssl. I also verified certificate revocation status by using ocsp.\r\n\r\n_Response verify OK\r\nvideolan.pem: good\r\n        This Update: Jan 30 07:00:00 2019 GMT\r\n        Next Update: Feb  6 07:00:00 2019 GMT_\r\n\r\nI know that .Net Core uses external libraries for TLS\r\nIs it the issue in .Net Core or underlying libraries it uses for TLS?\r\n\r\nHere's what I have on that Linux box\r\n_openssl version -v -p\r\nOpenSSL 1.1.0f  25 May 2017\r\nplatform: debian-armhf_\r\n\r\n_curl --version\r\ncurl 7.52.1 (arm-unknown-linux-gnueabihf) libcurl/7.52.1 **OpenSSL/1.0.2l** zlib/1.2.8 libidn2/0.16 libpsl/0.17.0 (+libidn2/0.16) libssh2/1.7.0 nghttp2/1.18.1 librtmp/2.3\r\nProtocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3 pop3s rtmp rtsp scp sftp smb smbs smtp smtps telnet tftp\r\nFeatures: AsynchDNS IDN IPv6 Largefile GSS-API Kerberos SPNEGO NTLM NTLM_WB SSL libz TLS-SRP HTTP2 UnixSockets HTTPS-proxy PSL_\r\n\r\nJust in case, here's the log\r\nThe stacktrace of AuthenticateAsClient is as follows \r\nInner System.Security.Authentication.AuthenticationException: The remote certificate is invalid according to the validation procedure.\r\n   at System.Net.Security.SslState.StartSendAuthResetSignal(ProtocolToken message, AsyncProtocolRequest asyncRequest, ExceptionDispatchInfo exception)\r\n   at System.Net.Security.SslState.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartReadFrame(Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartReadFrame(Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.ProcessReceivedBlob(Byte[] buffer, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartReadFrame(Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.StartSendBlob(Byte[] incoming, Int32 count, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.ForceAuthentication(Boolean receiveFirst, Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.ProcessAuthentication(LazyAsyncResult lazyResult)\r\n   at System.Net.Security.SslStream.AuthenticateAsClient(SslClientAuthenticationOptions sslClientAuthenticationOptions)\r\n   at System.Net.Security.SslStream.AuthenticateAsClient(String targetHost, X509CertificateCollection clientCertificates, SslProtocols enabledSslProtocols, Boolean checkCertificateRevocation)","Url":"https://github.com/dotnet/corefx/issues/35035","RelatedDescription":"Closed issue \"SslStream.AuthenticateAsClient - RevocationStatusUnknown: unable to get certificate CRL for OCSP certificate (Let's Encrypt)\" (#35035)"},{"Id":"405902432","IsPullRequest":true,"CreatedAt":"2019-02-01T22:42:51","Actor":"dseefeld","Number":"35039","RawContent":null,"Title":"[release/2.1] Skip CoreFx.Private.TestUtilities in source-build - retry","State":"open","Body":"Creating a new , fresh PR to see if we can get CI to reset and pass.\r\n\r\nOriginal PR is: https://github.com/dotnet/corefx/pull/33217\r\n\r\nText from original PR:\r\n\r\n---\r\n\r\nThis project referenced the XUnit.Runtime dependency project, causing test-only prebuilt dependencies.\r\n\r\nEven though source-build always passes BuildTests=false, include a condition to handle \"true\" to make intent clear.\r\n\r\n---\r\n\r\nThis is a patch for removing test dependencies from source-build: dotnet/source-build#847.\r\n\r\nFrom what I can tell, ProjectExclusions is a vestigial itemgroup from the dev/eng branch. I don't see any usages, but we can start using it for this.\r\n\r\nI've got a port of this on master that I submitted as #33218, since dir.props => Directory.Build.props.\r\n\r\n(If this doesn't seem like the right way to do this, let me know a better fix and I can update the patch.)","Url":"https://github.com/dotnet/corefx/pull/35039","RelatedDescription":"Open PR \"[release/2.1] Skip CoreFx.Private.TestUtilities in source-build - retry\" (#35039)"},{"Id":"405888188","IsPullRequest":false,"CreatedAt":"2019-02-01T21:53:24","Actor":"mriehm","Number":"35037","RawContent":null,"Title":"Incorrect use of DisableMediaInsertionPrompt","State":"open","Body":"Unless I'm very much confused, it appears that the FileSystemEnumerator constructor uses DisableMediaInsertionPrompt incorrectly such that it will do nothing because it calls 'new DisableMediaInsertionPrompt()' instead of DisableMediaInsertionPrompt.Create().\r\n\r\nI just happened to notice this while scrolling through the code. I don't know exactly in which situations the undesirable media prompt would occur and don't have a particular need for this to be fixed.","Url":"https://github.com/dotnet/corefx/issues/35037","RelatedDescription":"Open issue \"Incorrect use of DisableMediaInsertionPrompt\" (#35037)"},{"Id":"405856908","IsPullRequest":false,"CreatedAt":"2019-02-01T20:13:41","Actor":"rido-min","Number":"35034","RawContent":null,"Title":"System.Runtime.WindowsRuntime adds incorrect Binding Redirects","State":"open","Body":"Repro steps:\r\n\r\n- Create a .NETStandard Library project\r\n- Reference the Contracts NuGet pkg\r\n- Use some types in the library that use IAsyncOperation\r\n- Create a WPF project\r\n- Reference the library project\r\n- build\r\n\r\nYou will notice that the .exe.config gets generated with this binding redirect:\r\n```xml\r\n      <dependentAssembly>\r\n        <assemblyIdentity name=\"System.Runtime.WindowsRuntime\" publicKeyToken=\"b77a5c561934e089\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-4.0.14.0\" newVersion=\"4.0.14.0\" />\r\n      </dependentAssembly>\r\n ```\r\n \r\nAnd since in your .NuGet package you are not copying the System.Runtime.WindowsRuntime.dll locally this will fail as it cannot find the assembly from the NuGet package.\r\n\r\n```\r\nSystem.IO.FileNotFoundException\r\n  HResult=0x80070002\r\n  Message=Could not load file or assembly 'System.Runtime.WindowsRuntime, Version=4.0.14.0, Culture=neutral, PublicKeyToken=b77a5c561934e089' or one of its dependencies. The system cannot find the file specified.\r\n```\r\n\r\n/cc @jeffschwMSFT \r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/35034","RelatedDescription":"Open issue \"System.Runtime.WindowsRuntime adds incorrect Binding Redirects\" (#35034)"},{"Id":"405843176","IsPullRequest":false,"CreatedAt":"2019-02-01T19:32:51","Actor":"krwq","Number":"35032","RawContent":null,"Title":"SslStream does lots of unnecessary allocations","State":"open","Body":"See https://github.com/dotnet/corefx/blob/master/src/Common/src/Interop/Windows/sspicli/SSPIWrapper.cs#L389\r\n\r\nWe allocate the byte array first and then create a structure from that which we could've done directly.\r\n\r\nThis will also require changing the code a bit so that structs are also not copied on the stack (in my case struct was more than 500bytes but have not looked much at others but I suspect it might make a difference)\r\n\r\nIn my PR: https://github.com/dotnet/corefx/pull/35029/files#diff-64fd743f079aacb4bc8a908838ede753R389\r\nI've used non-allocating pattern, we should do something similar for the remaining 10+ strucutures.\r\n\r\nI'm not sure how much allocation this can save but considering SslStream can be created per connection it might add some boost in a larger project or on a web server","Url":"https://github.com/dotnet/corefx/issues/35032","RelatedDescription":"Open issue \"SslStream does lots of unnecessary allocations\" (#35032)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"406037702","IsPullRequest":true,"CreatedAt":"2019-02-03T00:25:01","Actor":"cston","Number":"33076","RawContent":null,"Title":"Handle ref variables similarly to non-ref variables","State":"open","Body":"Fixes #33074.","Url":"https://github.com/dotnet/roslyn/pull/33076","RelatedDescription":"Open PR \"Handle ref variables similarly to non-ref variables\" (#33076)"},{"Id":"406034240","IsPullRequest":true,"CreatedAt":"2019-02-02T23:34:29","Actor":"emilefokkema","Number":"33075","RawContent":null,"Title":"Improve method that finds an expression's parent lambda to introduce a local into","State":"open","Body":"This is a fix for issue https://github.com/dotnet/roslyn/issues/31012.\r\n\r\nConsider the expression `x.Resolve()` on line 8 of the following piece of code:\r\n```cs\r\nusing System;\r\npublic interface IResolver { int Resolve(); }\r\npublic class Test\r\n{\r\n    private void register(Func<IResolver, object> a) { }\r\n    private void test(Func<int, object> factory)\r\n        => register(x => factory(\r\n            x.Resolve() // <== this one\r\n        ));\r\n}\r\n```\r\nWhen we want to introduce a local for it, we enter a method called `GetParentLambda` which, starting with the expression `x.Resolve()`, looks along its parent chain in order to find the lambda that begins with `x =>` on line 7. But it doesn't find it, because the parent of `x.Resolve()` is an `ArgumentSyntax` and not an `ExpressionSyntax`, which causes it to stop looking.\r\n\r\nThe fix that I am proposing here changes the algorithm in such a way that it skips over the `ArgumentSyntax` and the `ArgumentListSyntax`, so that it finds the lambda that it's looking for.","Url":"https://github.com/dotnet/roslyn/pull/33075","RelatedDescription":"Open PR \"Improve method that finds an expression's parent lambda to introduce a local into\" (#33075)"},{"Id":"406033883","IsPullRequest":false,"CreatedAt":"2019-02-02T23:29:12","Actor":"cston","Number":"33074","RawContent":null,"Title":"Incorrect nullability of `ref` variables","State":"open","Body":"Warnings are reported for each dereference:\r\n```C#\r\n#pragma warning disable 8618\r\n\r\nclass C\r\n{\r\n    internal object? F;\r\n}\r\n\r\nclass Program\r\n{\r\n    static void F1(ref object? x, ref int? y, ref C z)\r\n    {\r\n        x = 1;\r\n        x.ToString();\r\n\r\n        y = 2;\r\n        _ = y.Value;\r\n\r\n        z = new C() { F = 3 };\r\n        z.F.ToString();\r\n    }\r\n}\r\n```\r\nResult:\r\n```\r\n(13,9): warning CS8602: Possible dereference of a null reference.\r\n(16,13): warning CS8629: Nullable value type may be null.\r\n(19,9): warning CS8602: Possible dereference of a null reference.\r\n```","Url":"https://github.com/dotnet/roslyn/issues/33074","RelatedDescription":"Open issue \"Incorrect nullability of `ref` variables\" (#33074)"},{"Id":"406022031","IsPullRequest":false,"CreatedAt":"2019-02-02T20:59:41","Actor":"sharwell","Number":"33073","RawContent":null,"Title":"IDE0058 reported if type does not resolve","State":"open","Body":"**Version Used**: Visual Studio 2019 Preview 2\r\n\r\n**Steps to Reproduce**:\r\n\r\nWrite the following _without_ including an import for `System.Threading`.\r\n\r\n```\r\nawait Task.Delay(0, CancellationToken.None).ConfigureAwait(false);\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nIDE0058 not reported.\r\n\r\n**Actual Behavior**:\r\n\r\nIDE0058 is reported, and the code fix adds `_ =` in front of the statement.\r\n","Url":"https://github.com/dotnet/roslyn/issues/33073","RelatedDescription":"Open issue \"IDE0058 reported if type does not resolve\" (#33073)"},{"Id":"405996322","IsPullRequest":false,"CreatedAt":"2019-02-02T16:12:10","Actor":"Thealexbarney","Number":"33072","RawContent":null,"Title":"Compiler gives CS8158 on certain ref return methods with ref parameters","State":"open","Body":"**Version Used**: \r\nSDK 2.1.503 / Roslyn 2.10.0.0 (45b37117)\r\n\r\n**Steps to Reproduce**:\r\n\r\n```\r\npublic class Example\r\n{\r\n    private byte[] Data { get; set; }\r\n\r\n    public ref int GetStructField(out int field)\r\n    {\r\n        ref MyStruct s = ref GetStruct(Data, out _);\r\n        field = 9;\r\n        return ref s.B;\r\n    }\r\n\r\n    private static ref MyStruct GetStruct(byte[] data, out int field)\r\n    {\r\n        ref MyStruct s = ref MemoryMarshal.Cast<byte, MyStruct>(data)[0];\r\n        field = s.B;\r\n        return ref s;\r\n    }\r\n\r\n    [StructLayout(LayoutKind.Sequential, Pack = 4)]\r\n    private struct MyStruct\r\n    {\r\n        public int A;\r\n        public int B;\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nUnsure. I don't know if this is by design or an issue with Roslyn. In any case, it seems odd or unintuitive to me.\r\n\r\n**Actual Behavior**:\r\n`CS8158 - Cannot return by reference a member of 's' because it was initialized to a value that cannot be returned by reference`\r\n\r\nHowever, when I change `GetStructField` to this, it compiles.\r\n```\r\npublic ref int GetStructField(out int field)\r\n{\r\n    ref MyStruct s = ref GetStruct(Data, out field);\r\n    field = 9;\r\n    return ref s.B;\r\n}\r\n```","Url":"https://github.com/dotnet/roslyn/issues/33072","RelatedDescription":"Open issue \"Compiler gives CS8158 on certain ref return methods with ref parameters\" (#33072)"},{"Id":"405870564","IsPullRequest":true,"CreatedAt":"2019-02-02T09:08:11","Actor":"heejaechang","Number":"33050","RawContent":null,"Title":"don't retain fault result in task center if nuget info download failed.","State":"closed","Body":"to retain fault result in task center, we need to provide detail info UI so that user can click the fault task left in the task center, but right now we don't have one and we don't want to just show exception message in message box.\r\n\r\nwe could think of using RetainAndNotifyFault so that we show exception message in the task center tip, but that would be annoying since most likely it is info user didn't ask for or care.\r\n\r\nwe can add UI later if user ever ask for it. for now, taking simple approach of just removing it from task center once download is done in any way (success, cancelled, failed)\r\n\r\nfixes https://github.com/dotnet/roslyn/issues/32944\r\ncloses #29694","Url":"https://github.com/dotnet/roslyn/pull/33050","RelatedDescription":"Closed or merged PR \"don't retain fault result in task center if nuget info download failed.\" (#33050)"},{"Id":"405957595","IsPullRequest":true,"CreatedAt":"2019-02-02T07:21:19","Actor":"Cosifne","Number":"33071","RawContent":null,"Title":"Allow ForEach to For when there are comments ","State":"open","Body":"Related: [issue](26571)\r\n\r\nRemove the check for comments for both VB and C# so the refactoring will be provided.\r\nChange the corresponding tests.\r\n\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/33071","RelatedDescription":"Open PR \"Allow ForEach to For when there are comments \" (#33071)"},{"Id":"405943294","IsPullRequest":true,"CreatedAt":"2019-02-02T03:34:14","Actor":"Cosifne","Number":"33070","RawContent":null,"Title":"Polish on Pull Member Up UI","State":"open","Body":"Related\r\n[issue1](https://github.com/dotnet/roslyn/issues/32948)\r\n[issue2](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/781741)\r\n[issue3](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/781738)\r\n\r\n1. Change the text of quick action to 'Name' so that it won't be too long.\r\n2. Remove the help link question mark on the dialog since we don't have help link right now.\r\n3. Select a destination by default.\r\n\r\ntag @AbhitejJohn to review xaml file\r\n\r\nIt looks like\r\n![com](https://user-images.githubusercontent.com/24360909/52162395-5aa9dc80-2688-11e9-8076-7365c53d1a8a.jpg)\r\n![comp2](https://user-images.githubusercontent.com/24360909/52162396-5da4cd00-2688-11e9-9ad5-5c9f838586e9.png)\r\n![comp3](https://user-images.githubusercontent.com/24360909/52162397-60072700-2688-11e9-8fa7-f1fb21902418.png)\r\n","Url":"https://github.com/dotnet/roslyn/pull/33070","RelatedDescription":"Open PR \"Polish on Pull Member Up UI\" (#33070)"},{"Id":"405918977","IsPullRequest":true,"CreatedAt":"2019-02-02T02:30:12","Actor":"dotnet-bot","Number":"33059","RawContent":null,"Title":"Merge dev16.0-preview3-vs-deps to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.0-preview3-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0-preview3-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/dev16.0-preview3-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.0-preview3-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33059","RelatedDescription":"Closed or merged PR \"Merge dev16.0-preview3-vs-deps to master-vs-deps\" (#33059)"},{"Id":"405919073","IsPullRequest":true,"CreatedAt":"2019-02-02T02:09:20","Actor":"dotnet-bot","Number":"33063","RawContent":null,"Title":"Merge dev16.1-preview1 to dev16.1-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.1-preview1 into dev16.1-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.1-preview1-to-dev16.1-preview1-vs-deps\ngit reset --hard upstream/dev16.1-preview1-vs-deps\ngit merge upstream/dev16.1-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.1-preview1-to-dev16.1-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33063","RelatedDescription":"Closed or merged PR \"Merge dev16.1-preview1 to dev16.1-preview1-vs-deps\" (#33063)"},{"Id":"405875482","IsPullRequest":true,"CreatedAt":"2019-02-02T01:58:45","Actor":"JoeRobich","Number":"33051","RawContent":null,"Title":"Classify keywords in ForEachVariableStatements as ControlKeywords","State":"closed","Body":"Fixes #33039","Url":"https://github.com/dotnet/roslyn/pull/33051","RelatedDescription":"Closed or merged PR \"Classify keywords in ForEachVariableStatements as ControlKeywords\" (#33051)"},{"Id":"405924024","IsPullRequest":false,"CreatedAt":"2019-02-02T00:34:26","Actor":"ssg","Number":"33069","RawContent":null,"Title":"Nullable reference types cannot be enabled with project-wide <NullableReferenceTypes> tag","State":"closed","Body":"**Version Used**: \r\nMicrosoft Visual Studio Enterprise 2019 Preview\r\nVersion 16.0.0 Preview 2.1\r\nVisualStudio.16.Preview/16.0.0-pre.2.1+28529.54\r\nMicrosoft .NET Framework\r\nVersion 4.7.03190\r\n\r\nC# Tools   3.0.0-beta2-19068-12+231aeb8be8357239499d45c0574e5a9a8c9174f0\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Write this .NET Core console app using LangVersion = 8.0:\r\n\r\n```csharp\r\nusing System;\r\n\r\nclass Program\r\n{\r\n    static T Foo<T>() => default;\r\n\r\n    static void Main()\r\n    {\r\n    }\r\n}\r\n```\r\n\r\n2. Add `#nullable enable` at the top of the source code. \r\n3. Get a compiler warning CS8603 for the function declaration.\r\n4. Remove `#nullable enable` line and add `<NullableReferenceTypes>true</NullableReferenceTypes>` in the project, right after the LangVersion 8.0 tag.\r\n\r\n**Expected Behavior**:\r\nThe same compiler warning when `#nullable enable` was used.\r\n\r\n**Actual Behavior**:\r\nNo compiler warnings, therefore nullable reference types are not enabled for the project.","Url":"https://github.com/dotnet/roslyn/issues/33069","RelatedDescription":"Closed issue \"Nullable reference types cannot be enabled with project-wide <NullableReferenceTypes> tag\" (#33069)"},{"Id":"405922455","IsPullRequest":false,"CreatedAt":"2019-02-02T00:19:46","Actor":"vsfeedback","Number":"33068","RawContent":null,"Title":"Auto Format: Don't align end-of-line comments","State":"open","Body":"<p>I use auto-formatting to format my C# code in Visual Studio, but I find it extremely annoying how it insists on aligning end-of-line comments (those starting with //) from multiple consecutive lines horizontally with each other.  It drives me crazy when this situation arises which is frequent enough for me to post this suggestion.  Please add an option to allow me to turn off this annoying behavior!</p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/idea/432260/auto-format-dont-align-end-of-line-comments.html\nVSTS ticketId: 774369_\n_These are the original issue comments:_\n\nJane Wu [MSFT] on 1/22/2019, 02:10 AM (10 days ago): <p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.&nbsp;You will hear from us in about a week on our next steps.</p>","Url":"https://github.com/dotnet/roslyn/issues/33068","RelatedDescription":"Open issue \"Auto Format: Don't align end-of-line comments\" (#33068)"},{"Id":"405921122","IsPullRequest":true,"CreatedAt":"2019-02-02T00:12:00","Actor":"mavasani","Number":"33067","RawContent":null,"Title":"Handle null reference exception during analyzer execution when cancel…","State":"open","Body":"…lation has been requested\r\n\r\nFixes VSO Watson [#763828](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/763828)\r\nAll the dumps for the watson show that cancellation was requested during analysis, leading to one thread clearing state while other thread faulted.","Url":"https://github.com/dotnet/roslyn/pull/33067","RelatedDescription":"Open PR \"Handle null reference exception during analyzer execution when cancel…\" (#33067)"},{"Id":"405920188","IsPullRequest":false,"CreatedAt":"2019-02-02T00:07:02","Actor":"vsfeedback","Number":"33066","RawContent":null,"Title":"I would like a refactor in the C# editor that will reflow a multiline comment at some margin.","State":"open","Body":"<p>when editing a multiline comment, I often need to reflow the comment after I have edited it so that it can be more easily read.</p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/idea/432431/i-would-like-a-refactor-in-the-c-editor-that-will.html\nVSTS ticketId: 774419_\n_These are the original issue comments:_\n\nJane Wu [MSFT] on 1/22/2019, 02:11 AM (10 days ago): <p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.&nbsp;You will hear from us in about a week on our next steps.</p>","Url":"https://github.com/dotnet/roslyn/issues/33066","RelatedDescription":"Open issue \"I would like a refactor in the C# editor that will reflow a multiline comment at some margin.\" (#33066)"},{"Id":"405919113","IsPullRequest":true,"CreatedAt":"2019-02-02T00:01:07","Actor":"dotnet-bot","Number":"33065","RawContent":null,"Title":"Merge master to features/NullableDogfood","State":"open","Body":"\nThis is an automatically generated pull request from master into features/NullableDogfood.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/NullableDogfood\ngit reset --hard upstream/features/NullableDogfood\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/NullableDogfood --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33065","RelatedDescription":"Open PR \"Merge master to features/NullableDogfood\" (#33065)"},{"Id":"405919094","IsPullRequest":true,"CreatedAt":"2019-02-02T00:01:03","Actor":"dotnet-bot","Number":"33064","RawContent":null,"Title":"Merge master to features/editorconfig-in-compiler","State":"open","Body":"\nThis is an automatically generated pull request from master into features/editorconfig-in-compiler.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/editorconfig-in-compiler\ngit reset --hard upstream/features/editorconfig-in-compiler\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/editorconfig-in-compiler --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33064","RelatedDescription":"Open PR \"Merge master to features/editorconfig-in-compiler\" (#33064)"},{"Id":"405919062","IsPullRequest":true,"CreatedAt":"2019-02-02T00:00:53","Actor":"dotnet-bot","Number":"33062","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33062","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#33062)"},{"Id":"405919046","IsPullRequest":true,"CreatedAt":"2019-02-02T00:00:48","Actor":"dotnet-bot","Number":"33061","RawContent":null,"Title":"Merge dev16.0-preview3 to dev16.0-preview3-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from dev16.0-preview3 into dev16.0-preview3-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0-preview3-to-dev16.0-preview3-vs-deps\ngit reset --hard upstream/dev16.0-preview3-vs-deps\ngit merge upstream/dev16.0-preview3\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.0-preview3-to-dev16.0-preview3-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33061","RelatedDescription":"Open PR \"Merge dev16.0-preview3 to dev16.0-preview3-vs-deps\" (#33061)"},{"Id":"405918993","IsPullRequest":true,"CreatedAt":"2019-02-02T00:00:36","Actor":"dotnet-bot","Number":"33060","RawContent":null,"Title":"Merge master-vs-deps to dev16.1-preview1-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master-vs-deps into dev16.1-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-dev16.1-preview1-vs-deps\ngit reset --hard upstream/dev16.1-preview1-vs-deps\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-dev16.1-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33060","RelatedDescription":"Open PR \"Merge master-vs-deps to dev16.1-preview1-vs-deps\" (#33060)"},{"Id":"405918945","IsPullRequest":true,"CreatedAt":"2019-02-02T00:00:22","Actor":"dotnet-bot","Number":"33058","RawContent":null,"Title":"Merge master to dev16.1-preview1","State":"open","Body":"\nThis is an automatically generated pull request from master into dev16.1-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-dev16.1-preview1\ngit reset --hard upstream/dev16.1-preview1\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-dev16.1-preview1 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33058","RelatedDescription":"Open PR \"Merge master to dev16.1-preview1\" (#33058)"},{"Id":"405918926","IsPullRequest":true,"CreatedAt":"2019-02-02T00:00:15","Actor":"dotnet-bot","Number":"33057","RawContent":null,"Title":"Merge dev16.0-preview3 to master","State":"open","Body":"\nThis is an automatically generated pull request from dev16.0-preview3 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0-preview3-to-master\ngit reset --hard upstream/master\ngit merge upstream/dev16.0-preview3\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.0-preview3-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33057","RelatedDescription":"Open PR \"Merge dev16.0-preview3 to master\" (#33057)"},{"Id":"405916821","IsPullRequest":true,"CreatedAt":"2019-02-01T23:48:36","Actor":"sharwell","Number":"33056","RawContent":null,"Title":"Use default literal for parameters in symbol display","State":"open","Body":"Fixes #33049","Url":"https://github.com/dotnet/roslyn/pull/33056","RelatedDescription":"Open PR \"Use default literal for parameters in symbol display\" (#33056)"},{"Id":"405913772","IsPullRequest":false,"CreatedAt":"2019-02-01T23:32:16","Actor":"vsfeedback","Number":"33055","RawContent":null,"Title":"Display localized string from the resource when hovering on the resource strings.","State":"open","Body":"<p>It would be useful to lookup the actual resource strings whenever I hover over a Resource string object. this would help speed what the actual string values are. Would be nice if it worked with other resource types as well.</p><p></p><p>To elaborate the feature, If hover a resource object in the code it currently shows the comment of the property ErrorMessageText, would be cool if the actual resource string was displayed.</p><p></p><p>Resources.ErrorMessageText</p><p></p><p>Thanks in advance</p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/idea/412450/display-localized-string-from-the-resource-when-ho.html\nVSTS ticketId: 754431_\n_These are the original issue comments:_\n\nJane Wu [MSFT] on 12/19/2018, 08:24 PM (43 days ago): <p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.&nbsp;You will hear from us in about a week on our next steps.</p>\nSP on 12/19/2018, 08:25 PM (43 days ago): <p>Thank you very much for the quick response.</p>\n\nKendra Havens [MSFT] on 2/1/2019, 03:29 PM (2 min ago): <p>Thank you for filing this feedback! I think this information would make sense to show in quick info when hovering. I'm going to move this bug to our open source GitHub repo for further discussion with the community.</p>\n","Url":"https://github.com/dotnet/roslyn/issues/33055","RelatedDescription":"Open issue \"Display localized string from the resource when hovering on the resource strings.\" (#33055)"},{"Id":"405894206","IsPullRequest":true,"CreatedAt":"2019-02-01T22:13:08","Actor":"JoeRobich","Number":"33053","RawContent":null,"Title":"Updated dotnet-format package description.","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/33053","RelatedDescription":"Open PR \"Updated dotnet-format package description.\" (#33053)"},{"Id":"405889381","IsPullRequest":true,"CreatedAt":"2019-02-01T21:56:40","Actor":"ivanbasov","Number":"33052","RawContent":null,"Title":"Merge dev15.9.x-vs-deps into dev15.9.x","State":"open","Body":"I'd like to merge dev15.9.x-vs-deps into dev15.9.x assuming that dev15.9.x will be automatically merged into master.","Url":"https://github.com/dotnet/roslyn/pull/33052","RelatedDescription":"Open PR \"Merge dev15.9.x-vs-deps into dev15.9.x\" (#33052)"},{"Id":"405861785","IsPullRequest":false,"CreatedAt":"2019-02-01T20:28:30","Actor":"stephentoub","Number":"33049","RawContent":null,"Title":"IntelliSense isn't simplifying optional parameter defaults","State":"open","Body":"**Version Used**: \r\nVersion 16.0.0 Preview 3.0 28531.182.d16.0\r\n\r\n**Steps to Reproduce**:\r\nPaste this code into VS:\r\n```C#\r\nclass Program\r\n{\r\n    static void Main()\r\n    {\r\n        Foo();\r\n    }\r\n\r\n    static void Foo(MyStruct s = default) { }\r\n}\r\n\r\nstruct MyStruct { }\r\n```\r\nthen get IntelliSense for the `Foo` method:\r\n![image](https://user-images.githubusercontent.com/2642209/52147778-bc8d2680-2635-11e9-87de-e88414f66193.png)\r\nIt shows `MyStruct s = default(MyStruct)` rather than `MyStruct s = default`, even though a) the method is defined with just `default` and b) my editorconfig settings are set to simplify, e.g. if I instead have the parameter declared as `MyStruct s = default(MyStruct)`, VS dutifully tells me I should simplify it:\r\n![image](https://user-images.githubusercontent.com/2642209/52147842-f3633c80-2635-11e9-9010-9cba2a6333d2.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/33049","RelatedDescription":"Open issue \"IntelliSense isn't simplifying optional parameter defaults\" (#33049)"},{"Id":"405823729","IsPullRequest":true,"CreatedAt":"2019-02-01T18:37:45","Actor":"chsienki","Number":"33048","RawContent":null,"Title":"Disable nullable analysis for generated files","State":"open","Body":"- Track if syntax tree is generated\r\n- Set nullable analysis as disabled by default in generated files\r\n- Add tests\r\n  - (Note: tests aren't checking generated detection status, we're re-using the generated detection logic from the analysers, so trust that it's good)\r\n\r\nFixes #32745 \r\nFixes #31875\r\nFixes #30268","Url":"https://github.com/dotnet/roslyn/pull/33048","RelatedDescription":"Open PR \"Disable nullable analysis for generated files\" (#33048)"},{"Id":"405812938","IsPullRequest":false,"CreatedAt":"2019-02-01T18:06:23","Actor":"JosefPihrt","Number":"33047","RawContent":null,"Title":"ArgumentException when trying to set property from ProjectBuildManager.s_defaultGlobalProperties","State":"open","Body":"This is a follow-up to #30174 where the advice is to set `ShouldUnsetParentConfigurationAndPlatform` to `false` when building in `Release` configuration.\r\n\r\nOn the other hand when I try to set this property in latest version (3.0.0-beta2-final) then ArgumentException is thrown.\r\n\r\nDoes it means that properties from `ProjectBuildManager.s_defaultGlobalProperties` are not meant to be set? If this is the case then it would be better to provide more meaningful exception message (and maybe throw earlier). If the properties can be set then `AddRange` cannot be used.\r\n\r\nhttps://github.com/dotnet/roslyn/blob/c8e0e7f29853eb5775da2187991e68fa5077f7af/src/Workspaces/Core/MSBuild/MSBuild/Build/ProjectBuildManager.cs#L153\r\n\r\n**Steps to Reproduce**:\r\n```\r\nusing System.Collections.Generic;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.Build.Locator;\r\nusing Microsoft.CodeAnalysis;\r\nusing Microsoft.CodeAnalysis.MSBuild;\r\nusing System;\r\n\r\nstatic class Program\r\n{\r\n    static async Task Main()\r\n    {\r\n        MSBuildLocator.RegisterDefaults();\r\n\r\n        var properties = new Dictionary<string, string>\r\n        {\r\n            [\"ShouldUnsetParentConfigurationAndPlatform\"] = \"false\"\r\n        };\r\n\r\n        using (MSBuildWorkspace workspace = MSBuildWorkspace.Create(properties))\r\n        {\r\n            Solution solution = await workspace.OpenSolutionAsync(@\"Foo.sln\");\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\n**Actual Behavior**:\r\n```\r\nSystem.ArgumentException\r\n  HResult=0x80070057\r\n  Message=An element with the same key but a different value already exists. Key: ShouldUnsetParentConfigurationAndPlatform\r\n  Source=System.Collections.Immutable\r\n  StackTrace:\r\n   at System.Collections.Immutable.ImmutableDictionary`2.HashBucket.Add(TKey key, TValue value, IEqualityComparer`1 keyOnlyComparer, IEqualityComparer`1 valueComparer, KeyCollisionBehavior behavior, OperationResult& result)\r\n   at System.Collections.Immutable.ImmutableDictionary`2.AddRange(IEnumerable`1 items, MutationInput origin, KeyCollisionBehavior collisionBehavior)\r\n   at System.Collections.Immutable.ImmutableDictionary`2.AddRange(IEnumerable`1 pairs, Boolean avoidToHashMap)\r\n   at System.Collections.Immutable.ImmutableDictionary`2.AddRange(IEnumerable`1 pairs)\r\n   at Microsoft.CodeAnalysis.MSBuild.Build.ProjectBuildManager.StartBatchBuild(IDictionary`2 globalProperties)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.Worker.<LoadAsync>d__18.MoveNext()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildProjectLoader.<LoadSolutionInfoAsync>d__21.MoveNext()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace.<OpenSolutionAsync>d__23.MoveNext()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at MSBuildTest.Program.<OpenSolutionAndCompileAsync>d__1.MoveNext()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at MSBuildTest.Program.<Main>d__0.MoveNext()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at MSBuildTest.Program.<Main>(String[] args)\r\n```","Url":"https://github.com/dotnet/roslyn/issues/33047","RelatedDescription":"Open issue \"ArgumentException when trying to set property from ProjectBuildManager.s_defaultGlobalProperties\" (#33047)"},{"Id":"405904711","IsPullRequest":false,"CreatedAt":"2019-02-01T08:00:50","Actor":"RUSshy","Number":"33054","RawContent":null,"Title":"[x64](3.0.100-preview-010184) Switch expression bug","State":"open","Body":"Hi\r\n\r\nLooks like the new pattern matching feature broke old style switch expression\r\n\r\nhttps://github.com/rds1983/StbImageSharp/blob/master/src/StbImageSharp/PngDecoder.cs#L714\r\n\r\nDoesn't compile anymore \r\n\r\n```\r\n  PngDecoder.cs(714, 38): [CS1003] Syntax error, ':' expected\r\n  PngDecoder.cs(714, 70): [CS1002] ; expected\r\n  PngDecoder.cs(714, 70): [CS1513] } expected\r\n  PngDecoder.cs(718, 39): [CS1003] Syntax error, ',' expected\r\n  PngDecoder.cs(774, 39): [CS1003] Syntax error, ',' expected\r\n  PngDecoder.cs(793, 39): [CS1003] Syntax error, ',' expected\r\n  PngDecoder.cs(842, 39): [CS1003] Syntax error, ',' expected\r\n  PngDecoder.cs(878, 39): [CS1003] Syntax error, ',' expected\r\n```","Url":"https://github.com/dotnet/roslyn/issues/33054","RelatedDescription":"Open issue \"[x64](3.0.100-preview-010184) Switch expression bug\" (#33054)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"406045401","IsPullRequest":true,"CreatedAt":"2019-02-03T02:33:22","Actor":"Dotnet-GitSync-Bot","Number":"6939","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @filipnavara","Url":"https://github.com/dotnet/corert/pull/6939","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#6939)"},{"Id":"406042102","IsPullRequest":true,"CreatedAt":"2019-02-03T02:32:39","Actor":"Dotnet-GitSync-Bot","Number":"6938","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/6938","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#6938)"},{"Id":"406002163","IsPullRequest":true,"CreatedAt":"2019-02-03T01:35:03","Actor":"Dotnet-GitSync-Bot","Number":"6937","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/6937","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6937)"},{"Id":"405967247","IsPullRequest":true,"CreatedAt":"2019-02-02T10:05:12","Actor":"Dotnet-GitSync-Bot","Number":"6936","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corert/pull/6936","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6936)"},{"Id":"405295729","IsPullRequest":true,"CreatedAt":"2019-02-02T09:55:45","Actor":"filipnavara","Number":"6922","RawContent":null,"Title":"WIP: Move ResourceManager to shared CoreLib.","State":"closed","Body":"Counter-part for https://github.com/dotnet/coreclr/pull/22249.","Url":"https://github.com/dotnet/corert/pull/6922","RelatedDescription":"Closed or merged PR \"WIP: Move ResourceManager to shared CoreLib.\" (#6922)"},{"Id":"405934113","IsPullRequest":true,"CreatedAt":"2019-02-02T09:35:58","Actor":"Dotnet-GitSync-Bot","Number":"6935","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @filipnavara @stephentoub","Url":"https://github.com/dotnet/corert/pull/6935","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#6935)"},{"Id":"405852985","IsPullRequest":true,"CreatedAt":"2019-02-02T01:43:57","Actor":"Dotnet-GitSync-Bot","Number":"6934","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/6934","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#6934)"},{"Id":"405575610","IsPullRequest":true,"CreatedAt":"2019-02-01T17:22:58","Actor":"Dotnet-GitSync-Bot","Number":"6930","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/6930","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6930)"},{"Id":"405639169","IsPullRequest":true,"CreatedAt":"2019-02-01T10:24:30","Actor":"MichalStrehovsky","Number":"6933","RawContent":null,"Title":"Merge master to nmirror","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6933","RelatedDescription":"Closed or merged PR \"Merge master to nmirror\" (#6933)"},{"Id":"405600096","IsPullRequest":true,"CreatedAt":"2019-02-01T10:23:47","Actor":"MichalStrehovsky","Number":"6931","RawContent":null,"Title":"Fix Project N build break","State":"closed","Body":"Interestingly, there's no warning for this on the CoreRT side. On Project N side, this is a warning as error.","Url":"https://github.com/dotnet/corert/pull/6931","RelatedDescription":"Closed or merged PR \"Fix Project N build break\" (#6931)"},{"Id":"405615342","IsPullRequest":true,"CreatedAt":"2019-02-01T09:18:58","Actor":"filipnavara","Number":"6932","RawContent":null,"Title":"Remove code that was moved to System.Native","State":"open","Body":"Testing build. I assume the C# P/Invoke prototypes should be moved to shared CoreLib (to be in CoreFX too). Will this be ok with ProjectN?","Url":"https://github.com/dotnet/corert/pull/6932","RelatedDescription":"Open PR \"Remove code that was moved to System.Native\" (#6932)"},{"Id":"404911696","IsPullRequest":true,"CreatedAt":"2019-02-01T06:49:19","Actor":"MichalStrehovsky","Number":"6919","RawContent":null,"Title":"Impose limits on array sizes","State":"closed","Body":"The CLR imposes limits on the sizes of arrays. Impose the same limits.\r\n\r\nFixes the failing test after #6914.\r\n\r\nOnly did x64 Windows so far because I want to get an agreement on the merits and structure first.","Url":"https://github.com/dotnet/corert/pull/6919","RelatedDescription":"Closed or merged PR \"Impose limits on array sizes\" (#6919)"},{"Id":"405459415","IsPullRequest":true,"CreatedAt":"2019-02-01T06:48:05","Actor":"MichalStrehovsky","Number":"6928","RawContent":null,"Title":"Annotate types moved from S.R.Extensions","State":"closed","Body":"Testing how much hate this is going to bring me.\r\n\r\nThese annotations let ProjectN deal with the fact that we now have two\r\ndefinitions of System.Environment in the system. This is needed as long\r\nas Project N is stuck on 2.1-level version of the framework.","Url":"https://github.com/dotnet/corert/pull/6928","RelatedDescription":"Closed or merged PR \"Annotate types moved from S.R.Extensions\" (#6928)"},{"Id":"405546829","IsPullRequest":true,"CreatedAt":"2019-02-01T06:47:55","Actor":"Dotnet-GitSync-Bot","Number":"6929","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/6929","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6929)"},{"Id":"405352419","IsPullRequest":true,"CreatedAt":"2019-01-31T19:44:26","Actor":"jkotas","Number":"6926","RawContent":null,"Title":"Merge nmirror to master","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6926","RelatedDescription":"Closed or merged PR \"Merge nmirror to master\" (#6926)"},{"Id":"405019298","IsPullRequest":true,"CreatedAt":"2019-01-31T19:19:50","Actor":"trylek","Number":"6921","RawContent":null,"Title":"Pointer size and ARM64 fixes in GC ref map emitter","State":"closed","Body":"While investigating the ARM64 GC ref map issue\r\n\r\nhttps://github.com/dotnet/coreclr/issues/19464\r\n\r\nI noticed several places in ArgIterator where I hadn't replaced\r\nIntPtr.Size with _transitionBlock.PointerSize. This change fixes\r\nthis issue and also implements the fix for ARM64 GC ref map per\r\n\r\nhttps://github.com/dotnet/coreclr/pull/22309\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/6921","RelatedDescription":"Closed or merged PR \"Pointer size and ARM64 fixes in GC ref map emitter\" (#6921)"},{"Id":"405380870","IsPullRequest":true,"CreatedAt":"2019-01-31T18:40:01","Actor":"dotnet-bot","Number":"6927","RawContent":null,"Title":"Merge changes from TFS","State":"closed","Body":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!","Url":"https://github.com/dotnet/corert/pull/6927","RelatedDescription":"Closed or merged PR \"Merge changes from TFS\" (#6927)"},{"Id":"405301033","IsPullRequest":true,"CreatedAt":"2019-01-31T17:19:02","Actor":"Dotnet-GitSync-Bot","Number":"6923","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding @marek-safar","Url":"https://github.com/dotnet/corert/pull/6923","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#6923)"},{"Id":"405313502","IsPullRequest":true,"CreatedAt":"2019-01-31T17:18:37","Actor":"MichalStrehovsky","Number":"6924","RawContent":null,"Title":"Fix ProjectN build breaks","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6924","RelatedDescription":"Closed or merged PR \"Fix ProjectN build breaks\" (#6924)"},{"Id":"405350947","IsPullRequest":true,"CreatedAt":"2019-01-31T17:17:59","Actor":"dotnet-bot","Number":"6925","RawContent":null,"Title":"Merge changes from TFS","State":"closed","Body":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!","Url":"https://github.com/dotnet/corert/pull/6925","RelatedDescription":"Closed or merged PR \"Merge changes from TFS\" (#6925)"},{"Id":"404971691","IsPullRequest":true,"CreatedAt":"2019-01-31T15:30:13","Actor":"Dotnet-GitSync-Bot","Number":"6920","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/6920","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6920)"},{"Id":"404600862","IsPullRequest":true,"CreatedAt":"2019-01-30T14:43:45","Actor":"jkotas","Number":"6914","RawContent":null,"Title":"Out of memory handling fixes","State":"closed","Body":"Fixes #6912","Url":"https://github.com/dotnet/corert/pull/6914","RelatedDescription":"Closed or merged PR \"Out of memory handling fixes\" (#6914)"},{"Id":"404310513","IsPullRequest":false,"CreatedAt":"2019-01-30T14:43:45","Actor":"avalko","Number":"6912","RawContent":null,"Title":"Unable to allocate an array larger than 2GB","State":"closed","Body":"Code example:\r\n```\r\nstatic void Main(string[] args)\r\n{\r\n    int s = int.MaxValue / 4;\r\n    Console.WriteLine($\"alloc ({s*4} bytes)\");\r\n    var arr = new int[s];\r\n    var r = new Random();\r\n    for (int i = 0; i < s; i++)\r\n    {\r\n        arr[i] = r.Next();\r\n    }\r\n\r\n    Console.WriteLine(\"complete\");\r\n    Console.WriteLine(\"avg = \" + arr.Average());\r\n}\r\n```\r\n\r\nOn CoreCLR everything works (output):\r\n```\r\nalloc (2147483644 bytes)\r\ncomplete\r\navg = 1073756900,39117\r\n```\r\n\r\nOn CoreRT the program print `alloc (2147483644 bytes)` and ends without exception. Just stops all done.\r\n\r\nOS: **win10**\r\nBuild command: `dotnet publish -r win-x64 -c release`","Url":"https://github.com/dotnet/corert/issues/6912","RelatedDescription":"Closed issue \"Unable to allocate an array larger than 2GB\" (#6912)"},{"Id":"404753934","IsPullRequest":true,"CreatedAt":"2019-01-30T14:18:39","Actor":"Dotnet-GitSync-Bot","Number":"6918","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @MichalStrehovsky","Url":"https://github.com/dotnet/corert/pull/6918","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6918)"},{"Id":"404730815","IsPullRequest":true,"CreatedAt":"2019-01-30T11:40:42","Actor":"MichalStrehovsky","Number":"6917","RawContent":null,"Title":"Merge master to nmirror","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6917","RelatedDescription":"Closed or merged PR \"Merge master to nmirror\" (#6917)"},{"Id":"404618925","IsPullRequest":true,"CreatedAt":"2019-01-30T07:23:42","Actor":"Dotnet-GitSync-Bot","Number":"6916","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @SwooshyCueb @SwooshyCueb","Url":"https://github.com/dotnet/corert/pull/6916","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6916)"},{"Id":"404601800","IsPullRequest":true,"CreatedAt":"2019-01-30T06:16:11","Actor":"Dotnet-GitSync-Bot","Number":"6915","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding @marek-safar","Url":"https://github.com/dotnet/corert/pull/6915","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6915)"},{"Id":"404095205","IsPullRequest":true,"CreatedAt":"2019-01-30T02:39:16","Actor":"grant-d","Number":"6911","RawContent":null,"Title":"[NO MERGE] BitOps analysis CoreRT (WIP)","State":"closed","Body":"Update call sites for https://github.com/dotnet/coreclr/pull/22225\r\n\r\n\r\nNote that this PR will **not build** right now - it is being used to analyze the consolidation of call sites for https://github.com/dotnet/corefx/issues/32269.\r\n\r\ncc @tannergooding ","Url":"https://github.com/dotnet/corert/pull/6911","RelatedDescription":"Closed or merged PR \"[NO MERGE] BitOps analysis CoreRT (WIP)\" (#6911)"},{"Id":"404454879","IsPullRequest":true,"CreatedAt":"2019-01-29T21:38:32","Actor":"MichalStrehovsky","Number":"6913","RawContent":null,"Title":"Recover some of the size lost with AsyncMethodBuilder/Task unification","State":"closed","Body":"When we unified the implementations of these across all of our runtimes, we lost all size optimizations people have been doing on the Project N side over the past six years.\r\n\r\nThis restores a bit of the loss. For one sample app with lots of async usage, this removes 2.1 MB of generic instantiations.\r\n\r\nThere is more we can do, but I can't spend time on that right now. These two things jumped out on me when I was looking at it back in December and were an easy fix I wanted to do for a while.","Url":"https://github.com/dotnet/corert/pull/6913","RelatedDescription":"Closed or merged PR \"Recover some of the size lost with AsyncMethodBuilder/Task unification\" (#6913)"},{"Id":"404079527","IsPullRequest":true,"CreatedAt":"2019-01-29T01:59:43","Actor":"Dotnet-GitSync-Bot","Number":"6910","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corert/pull/6910","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6910)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"405980989","IsPullRequest":true,"CreatedAt":"2019-02-02T14:21:04","Actor":"dotnet-maestro[bot]","Number":"2900","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19101.16\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19101.16\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2900","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#2900)"},{"Id":"405976817","IsPullRequest":true,"CreatedAt":"2019-02-02T12:01:29","Actor":"dotnet-bot","Number":"2899","RawContent":null,"Title":"Merge release/2.2.2xx to master","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2899","RelatedDescription":"Open PR \"Merge release/2.2.2xx to master\" (#2899)"},{"Id":"405976816","IsPullRequest":true,"CreatedAt":"2019-02-02T12:01:27","Actor":"dotnet-bot","Number":"2898","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2898","RelatedDescription":"Open PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#2898)"},{"Id":"405919332","IsPullRequest":true,"CreatedAt":"2019-02-02T03:00:14","Actor":"dotnet-bot","Number":"2897","RawContent":null,"Title":"Merge release/2.2.2xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2897","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to master\" (#2897)"},{"Id":"405434764","IsPullRequest":true,"CreatedAt":"2019-02-02T02:35:54","Actor":"nugetlurker","Number":"2891","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview3.5800 into sdk","State":"closed","Body":"Insert NuGet Build 5.0.0-preview3.5800 into sdk release/2.2.2xx branch","Url":"https://github.com/dotnet/sdk/pull/2891","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.0.0-preview3.5800 into sdk\" (#2891)"},{"Id":"405886328","IsPullRequest":true,"CreatedAt":"2019-02-02T02:35:40","Actor":"wli3","Number":"2896","RawContent":null,"Title":"WIP test ci","State":"closed","Body":"Seems It_uses_NetstandardLibrary20x_as_the_implicit_version_for_NetStandard20 will always fail with 2.0.2 instead of 2.0.3","Url":"https://github.com/dotnet/sdk/pull/2896","RelatedDescription":"Closed or merged PR \"WIP test ci\" (#2896)"},{"Id":"405434781","IsPullRequest":true,"CreatedAt":"2019-02-02T01:34:54","Actor":"nugetlurker","Number":"2892","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview3.5800 into sdk","State":"closed","Body":"Insert NuGet Build 5.0.0-preview3.5800 into sdk release/2.1.6xx branch","Url":"https://github.com/dotnet/sdk/pull/2892","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.0.0-preview3.5800 into sdk\" (#2892)"},{"Id":"405494486","IsPullRequest":true,"CreatedAt":"2019-02-01T19:22:57","Actor":"dotnet-bot","Number":"2893","RawContent":null,"Title":"Merge release/2.2.2xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2893","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to master\" (#2893)"},{"Id":"405692238","IsPullRequest":true,"CreatedAt":"2019-02-01T14:16:37","Actor":"dotnet-maestro[bot]","Number":"2894","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19081.3\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19081.3\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2894","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#2894)"},{"Id":"405716301","IsPullRequest":true,"CreatedAt":"2019-02-01T14:07:59","Actor":"nguerrera","Number":"2895","RawContent":null,"Title":"Implement DesignerRuntimeImplementationProjectOutputGroup","State":"open","Body":"Generate a .designer.deps.json to obj and .designer.runtimeconfig.json to obj/ and returns them + non-NuGet, non-Framework ReferenceCopyLocalPaths.\r\n\r\nThe designer deps file contains only NuGet assets, and the designer runtimeconfig sets the option to allow other files to load from app base.\r\n\r\nFix #2707 \r\n\r\ncc @chabiss @lutzroeder","Url":"https://github.com/dotnet/sdk/pull/2895","RelatedDescription":"Open PR \"Implement DesignerRuntimeImplementationProjectOutputGroup\" (#2895)"},{"Id":"404541551","IsPullRequest":true,"CreatedAt":"2019-02-01T01:10:36","Actor":"dotnet-bot","Number":"2885","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2885","RelatedDescription":"Closed or merged PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#2885)"},{"Id":"404541543","IsPullRequest":true,"CreatedAt":"2019-01-31T17:34:32","Actor":"dotnet-bot","Number":"2884","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2884","RelatedDescription":"Closed or merged PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#2884)"},{"Id":"405235053","IsPullRequest":true,"CreatedAt":"2019-01-31T14:31:49","Actor":"dotnet-maestro[bot]","Number":"2889","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19080.6\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19080.6\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2889","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#2889)"},{"Id":"405261780","IsPullRequest":false,"CreatedAt":"2019-01-31T14:07:27","Actor":"nguerrera","Number":"2890","RawContent":null,"Title":"GenerateBuildDependencyFile fails for Self-contained apps with duplicate FrameworkReferences","State":"open","Body":"_From @fuocor on January 30, 2019 17:2_\n\nsince upgrading the sdk to version 3.0.100-preview-010187 and then 3.0.100-preview-010189  the GenerateBuildDependencyFile build task is failing.\r\n\r\nthe build output is the following\r\n```\r\n> dotnet build\r\nMicrosoft (R) Build Engine version 16.0.385-preview+g966cdf2ac6 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 25.26 ms for C:\\ossiaco\\dotnet\\src\\Ossiaco.Win32.Interop\\Ossiaco.Win32.Interop.csproj.\r\n  Restore completed in 39 ms for C:\\ossiaco\\dotnet\\src\\Ossiaco.Common\\Ossiaco.Common.csproj.\r\n  Restore completed in 39.3 ms for C:\\ossiaco\\dotnet\\src\\Ossiaco.Common.Server.Web\\Ossiaco.Common.Server.Web.csproj.\r\n  Restore completed in 39.31 ms for C:\\ossiaco\\dotnet\\src\\Ossiaco.Common.Server\\Ossiaco.Common.Server.csproj.\r\n  Restore completed in 38.02 ms for C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj.\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.RuntimeIdentifierInference.targets(151,5): message NETSDK1057: You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.RuntimeIdentifierInference.targets(151,5): message NETSDK1057: You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview [C:\\ossiaco\\dotnet\\src\\Ossiaco.Common.Server\\Ossiaco.Common.Server.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.RuntimeIdentifierInference.targets(151,5): message NETSDK1057: You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview [C:\\ossiaco\\dotnet\\src\\Ossiaco.Common\\Ossiaco.Common.csproj]\r\n  Ossiaco.Win32.Interop -> C:\\ossiaco\\dotnet\\src\\Ossiaco.Win32.Interop\\bin\\Debug\\netstandard2.0\\Ossiaco.Win32.Interop.dll\r\n  Ossiaco.Common -> C:\\ossiaco\\dotnet\\src\\Ossiaco.Common\\bin\\Debug\\netstandard2.0\\Ossiaco.Common.dll\r\n  Ossiaco.Common.Server -> C:\\ossiaco\\dotnet\\src\\Ossiaco.Common.Server\\bin\\Debug\\netcoreapp3.0\\Ossiaco.Common.Server.dll\r\n  Ossiaco.Common.Server.Web -> C:\\ossiaco\\dotnet\\src\\Ossiaco.Common.Server.Web\\bin\\Debug\\netcoreapp3.0\\Ossiaco.Common.Server.Web.dll\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018: System.ArgumentException: Can not add property ./Microsoft.AspNetCore.Antiforgery.dll to Newtonsoft.Json.Linq.JObject. Property with the same name already exists on object. [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Newtonsoft.Json.Linq.JObject.ValidateToken(JToken o, JToken existing) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Newtonsoft.Json.Linq.JContainer.InsertItem(Int32 index, JToken item, Boolean skipParentCheck) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Newtonsoft.Json.Linq.JObject.InsertItem(Int32 index, JToken item, Boolean skipParentCheck) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Newtonsoft.Json.Linq.JContainer.AddInternal(Int32 index, Object content, Boolean skipParentCheck) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Newtonsoft.Json.Linq.JContainer.Add(Object content) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Microsoft.Extensions.DependencyModel.DependencyContextWriter.WriteAssetList(IEnumerable`1 runtimeFiles) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Microsoft.Extensions.DependencyModel.DependencyContextWriter.AddAssets(JObject libraryObject, String key, RuntimeAssetGroup group) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Microsoft.Extensions.DependencyModel.DependencyContextWriter.WriteTargetLibrary(Library library) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Microsoft.Extensions.DependencyModel.DependencyContextWriter.<WriteTarget>b__7_0(Library library) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at System.Linq.Enumerable.SelectArrayIterator`2.MoveNext() [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Newtonsoft.Json.Linq.JContainer.AddInternal(Int32 index, Object content, Boolean skipParentCheck) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Newtonsoft.Json.Linq.JContainer.Add(Object content) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Newtonsoft.Json.Linq.JObject..ctor(Object content) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Microsoft.Extensions.DependencyModel.DependencyContextWriter.WriteTarget(IReadOnlyList`1 libraries) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Microsoft.Extensions.DependencyModel.DependencyContextWriter.WriteTargets(DependencyContext context) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Microsoft.Extensions.DependencyModel.DependencyContextWriter.Write(DependencyContext context) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Microsoft.Extensions.DependencyModel.DependencyContextWriter.Write(DependencyContext context, Stream stream) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Microsoft.NET.Build.Tasks.GenerateDepsFile.ExecuteCore() in /_/src/Tasks/Microsoft.NET.Build.Tasks/GenerateDepsFile.cs:line 172 [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() in /_/src/Tasks/Common/TaskBase.cs:line 35 [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\n\r\nBuild FAILED.\r\n\r\n...\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:04.43\r\n```\r\n\r\n# General\r\n\r\nif I downgrade to 3.0.100-preview-010040 there is no error\n\n_Copied from original issue: dotnet/core#2267_","Url":"https://github.com/dotnet/sdk/issues/2890","RelatedDescription":"Open issue \"GenerateBuildDependencyFile fails for Self-contained apps with duplicate FrameworkReferences\" (#2890)"},{"Id":"404525303","IsPullRequest":true,"CreatedAt":"2019-01-31T03:18:45","Actor":"wli3","Number":"2883","RawContent":null,"Title":"Fix shim apphost without separate target","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/2883","RelatedDescription":"Closed or merged PR \"Fix shim apphost without separate target\" (#2883)"},{"Id":"405051870","IsPullRequest":true,"CreatedAt":"2019-01-31T02:25:15","Actor":"wli3","Number":"2888","RawContent":null,"Title":"Use fixture","State":"open","Body":"Per code review to use fixture to reuse asset on disk","Url":"https://github.com/dotnet/sdk/pull/2888","RelatedDescription":"Open PR \"Use fixture\" (#2888)"},{"Id":"405034976","IsPullRequest":true,"CreatedAt":"2019-01-31T01:04:26","Actor":"dsplaisted","Number":"2887","RawContent":null,"Title":"Refactor targeting pack downloads, and framework version selection","State":"open","Body":"This is currently WIP, I'm sending the PR now to get CI results.\r\n\r\nThis includes the following:\r\n\r\n- Refactors FrameworkReference and targeting pack resolution so that all applicable targeting packs for the target framework will be downloaded.  This is required to support dotnet/cli#10666 (once NuGet/Home#7342 is implemented)\r\n- Fixes #2792.  The following are the ways (in priority order) that the \"runtime framework version\" for a shared framework can be controlled:\r\n    - `RuntimeFrameworkVersion` metadata on the `FrameworkReference` item\r\n    - `RuntimeFrameworkVersion` MSBuild property (applies to all shared frameworks)\r\n    - Then, use either the `LatestRuntimeFrameworkVersion` or the `DefaultRuntimeFrameworkVersion` of the `KnownFrameworkReference`, based on\r\n        - The value (if set) of `TargetLatestRuntimePatch` metadata on the `FrameworkReference`\r\n        - The `TargetLatestRuntimePatch` MSBuild property (which defaults to True if `SelfContained` is true, and False otherwise)\r\n","Url":"https://github.com/dotnet/sdk/pull/2887","RelatedDescription":"Open PR \"Refactor targeting pack downloads, and framework version selection\" (#2887)"},{"Id":"404558166","IsPullRequest":true,"CreatedAt":"2019-01-30T01:15:32","Actor":"zamont","Number":"2886","RawContent":null,"Title":"Add a new task FilterManagedAssemblies into Microsoft.NET.Build.Tasks","State":"open","Body":"The FilterManagedAssemblies task takes in a list of files and a switch to\r\nrestrict the managed assemblies to IL ONLY and returns those that are\r\nmanaged assemblies and conditionally are IL ONLY.","Url":"https://github.com/dotnet/sdk/pull/2886","RelatedDescription":"Open PR \"Add a new task FilterManagedAssemblies into Microsoft.NET.Build.Tasks\" (#2886)"},{"Id":"404060640","IsPullRequest":true,"CreatedAt":"2019-01-29T23:01:16","Actor":"wli3","Number":"2876","RawContent":null,"Title":"Fix shim apphost","State":"closed","Body":"Will squash before merge. Will hold for preview 3\r\n\r\nIt might be hard to read from direct diff. 798624c is the initial change to make it work. After that are all refactorings to separate it into 2 Targets.\r\n\r\nFix https://github.com/dotnet/sdk/issues/2867","Url":"https://github.com/dotnet/sdk/pull/2876","RelatedDescription":"Closed or merged PR \"Fix shim apphost\" (#2876)"},{"Id":"404061747","IsPullRequest":true,"CreatedAt":"2019-01-29T21:14:36","Actor":"dotnet-bot","Number":"2877","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.1.6xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.1.6xx\ngit reset --hard upstream/release/2.1.6xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.1.6xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2877","RelatedDescription":"Closed or merged PR \"Merge release/2.1.5xx to release/2.1.6xx\" (#2877)"},{"Id":"404061761","IsPullRequest":true,"CreatedAt":"2019-01-29T21:14:32","Actor":"dotnet-bot","Number":"2878","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.2.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2878","RelatedDescription":"Closed or merged PR \"Merge release/2.1.5xx to release/2.2.1xx\" (#2878)"},{"Id":"404459898","IsPullRequest":false,"CreatedAt":"2019-01-29T19:53:39","Actor":"sxmanton","Number":"2882","RawContent":null,"Title":"ProjectReference doesn't behave the same as PackageReference for contentFiles","State":"open","Body":"Hi, I have a library project which builds a Package with a config file which is placed in `contentFiles\\any\\any` with PackageCopyToOutput set to true. When installing this as a PackageReference, the config file is copied to the output directory of the consuming project as expected. However, when referencing it as a ProjectReference in a Tester app in the same solution, the config file is not copied to output. \r\n\r\nIs there some way to achieve the same behavior between the ProjectReference and PackageReference that I'm missing here? If not, this seems like a deficiency of the current system. It seems very odd to me that ProjectReference functions equivalently as PackageReference in terms of defining transitive dependencies (even supports PrivateAssets, IncludeAssets, etc.), but does not behave the same for copying contentFiles.","Url":"https://github.com/dotnet/sdk/issues/2882","RelatedDescription":"Open issue \"ProjectReference doesn't behave the same as PackageReference for contentFiles\" (#2882)"},{"Id":"404423399","IsPullRequest":true,"CreatedAt":"2019-01-29T18:19:00","Actor":"peterhuene","Number":"2881","RawContent":null,"Title":"Ensure Microsoft.NETCore.App is an implicit dependency for publish.","State":"open","Body":"This commit ensures that we exclude files from the `Microsoft.NETCore.App`\r\nplatform library on publish when the platform library is\r\n`Microsoft.AspNetCore.App`, which doesn't have an explicit dependency on\r\n`Microsoft.NETCore.App`.\r\n\r\nWhen publishing a 2.x ASP.NET application, the `MicrosoftNETPlatformLibrary`\r\nproperty gets changed by ASP.NET to `Microsoft.AspNetCore.App`.  This causes\r\nthe task responsible for determining what files to copy locally to treat files\r\nfrom `Microsoft.NETCore.App` and its dependencies as not being part of the\r\nplatform.\r\n\r\nHowever, when publishing the application as framework-dependent, almost all the\r\nplatform files get excluded thanks to conflict resolution which has the files\r\nas part of the platform manifest and preferred packages.  Unfortunately, the\r\napphost, hostpolicy, and hostfxr files are not part of these lists and as a\r\nresult will be copied locally.\r\n\r\nThis breaks framework-dependent apphost activation because hostfxr and\r\nhostpolicy are copied locally.  Additionally, these files end up in the\r\ndeps.json file which also prevents roll-forward activation if the two files are\r\nmanually deleted.\r\n\r\nThe fix is to treat `Microsoft.NETCore.App` as an implicit dependency of\r\n`Microsoft.AspNetCore.App` where we calculate the list of excluded packages for\r\na framework-dependent publish.\r\n\r\nFixes dotnet/cli#10602.","Url":"https://github.com/dotnet/sdk/pull/2881","RelatedDescription":"Open PR \"Ensure Microsoft.NETCore.App is an implicit dependency for publish.\" (#2881)"},{"Id":"404087126","IsPullRequest":false,"CreatedAt":"2019-01-29T01:54:52","Actor":"dsplaisted","Number":"2880","RawContent":null,"Title":"\"salt\" MSBuild handshake in test / dogfood environment","State":"open","Body":"Right now for our tests (and in the dogfood script) we override the MSBuildSDKsPath to point MSBuild to the SDK under test.  However, this doesn't seem to prevent sharing MSBuild nodes that didn't have this set, which can end up causing assembly loading or other issues.\r\n\r\nIdeally in our test environment we would add a \"salt\" to the node connection handshake, so that MSBuild would only be able to connect to nodes that come from the same test environment.\r\n\r\nThis would probably require a change in MSBuild to allow us to provide such a \"salt\".\r\n\r\n@rainersigwald, thoughts?","Url":"https://github.com/dotnet/sdk/issues/2880","RelatedDescription":"Open issue \"\"salt\" MSBuild handshake in test / dogfood environment\" (#2880)"},{"Id":"404073631","IsPullRequest":false,"CreatedAt":"2019-01-29T00:53:11","Actor":"mairaw","Number":"2879","RawContent":null,"Title":"Don't reuse the https://aka.ms/sdkimplicitrefs link to indicate version should not be indicated","State":"open","Body":"This comes from a discussion at https://github.com/dotnet/docs/issues/8691 and my proposal can be found at https://github.com/dotnet/docs/issues/8691#issuecomment-448343752\r\n\r\nCustomers are getting the following error:\r\nNETSDK1071: A PackageReference to 'Microsoft.AspNetCore.All' specified a Version of 2.2.0-preview3-35497. Specifying the version of this package is not recommended. For more information, see https://aka.ms/sdkimplicitrefs. However, this document does not cover how Microsoft.AspNetCore.All should actually be referenced in this situation.\r\n\r\nHowever, specifying the version of a package has nothing to do with implicit package references, so I don't think we should be using that same link for this error message. \r\nWe should create a new aka.ms link for that error and that link would point to a different location in the ASP.NET docs TBD.\r\n\r\n/cc @Rick-Anderson","Url":"https://github.com/dotnet/sdk/issues/2879","RelatedDescription":"Open issue \"Don't reuse the https://aka.ms/sdkimplicitrefs link to indicate version should not be indicated\" (#2879)"},{"Id":"404001119","IsPullRequest":false,"CreatedAt":"2019-01-28T20:50:09","Actor":"natemcmaster","Number":"2875","RawContent":null,"Title":"Cannot force ResolveFrameworkReference to avoid downloading targeting packs","State":"open","Body":"Feature request: for the sake of things like source-build and building your own targeting pack (e.g. https://github.com/aspnet/AspNetCore), I'd like to be able to force the SDK into an \"offline mode\" which fails instead of attempting to download targeting packs. The current code only checks for `Directory.Exists`\r\n\r\nhttps://github.com/dotnet/sdk/blob/915adb77cc3763f88aca3da622961abd54f100f2/src/Tasks/Microsoft.NET.Build.Tasks/ResolveFrameworkReferences.cs#L112-L126\r\n\r\n\r\n**Options I've considered:**\r\n\r\n* Add a global property, like `DisableTargetingPackAcquisition`\r\n* Add something to `KnownFrameworkReference` or `<FrameworkReference>` as metadata\r\n\r\ncc @dsplaisted @nguerrera\r\n","Url":"https://github.com/dotnet/sdk/issues/2875","RelatedDescription":"Open issue \"Cannot force ResolveFrameworkReference to avoid downloading targeting packs\" (#2875)"},{"Id":"403377692","IsPullRequest":true,"CreatedAt":"2019-01-28T17:09:42","Actor":"dotnet-bot","Number":"2873","RawContent":null,"Title":"Merge release/2.1.4xx to release/2.1.5xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.4xx-to-release/2.1.5xx\ngit reset --hard upstream/release/2.1.5xx\ngit merge upstream/release/2.1.4xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.4xx-to-release/2.1.5xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2873","RelatedDescription":"Closed or merged PR \"Merge release/2.1.4xx to release/2.1.5xx\" (#2873)"},{"Id":"403387485","IsPullRequest":true,"CreatedAt":"2019-01-26T03:38:39","Actor":"peterhuene","Number":"2874","RawContent":null,"Title":"Add test for ComposeStore target for netcoreapp3.0.","State":"closed","Body":"This PR adds a test to cover using the `ComposeStore` target from a\r\nproject targeting `netcoreapp3.0`.\r\n\r\nThe test is intended to replicate similar tests we have in `dotnet/cli`\r\nso that we can catch regression of the `dotnet store` command in the SDK\r\nrepo.\r\n\r\nThe test ensures `ComposeStore` will work when targeting `netcoreapp3.0`\r\nand that the underlying issue (a reference to `Microsoft.NETCore.App`\r\nbeing added without a version) is checked for.","Url":"https://github.com/dotnet/sdk/pull/2874","RelatedDescription":"Closed or merged PR \"Add test for ComposeStore target for netcoreapp3.0.\" (#2874)"},{"Id":"403237287","IsPullRequest":true,"CreatedAt":"2019-01-25T16:52:30","Actor":"mmitche","Number":"2872","RawContent":null,"Title":"Reclassify signtool dependency","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/2872","RelatedDescription":"Closed or merged PR \"Reclassify signtool dependency\" (#2872)"},{"Id":"403163675","IsPullRequest":false,"CreatedAt":"2019-01-25T13:46:22","Actor":"marcelopinheiro-bpp","Number":"2871","RawContent":null,"Title":"Problems to load project because of  C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Microsoft.Common.targets\\ImportAfter\\Microsoft.NET.Build.Extensions.NETFramework.targets","State":"open","Body":"When loading a Project inside my solution, I  was receiving errors of files not found in the \"ImportAfter\" Directory (C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Microsoft.Common.Targets\\ImportAfter).\r\n\r\nSo I added manually the files \r\n* Microsoft.NET.Build.Extensions.targets\r\n* Microsoft.NET.DefaultPackageConflictOverrides.targets\r\n* Microsoft.NET.Build.Extensions.NETFramework.targets\r\n* Microsoft.NET.Build.Extensions.ConflictResolution.targets\r\n\r\nBecause they didn't came together the Visual Studio Community installation.\r\n\r\nAfter that, a received this error (The error is in PT-BR):\r\n```\r\nHouve uma tentativa de comparação numérica em \"$(_TargetFrameworkVersionWithoutV)\", que é avaliada como \"\" em vez de um número, na condição \"'$(ImplicitlyExpandNETStandardFacades)' == '' AND '$(_TargetFrameworkVersionWithoutV)' >= '4.6.1'\".  C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Microsoft.Common.targets\\ImportAfter\\Microsoft.NET.Build.Extensions.NETFramework.targets\r\n```\r\n\r\nI don't know what to modify or what to do now. Thanks for the attention\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/2871","RelatedDescription":"Open issue \"Problems to load project because of  C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\MSBuild\\15.0\\Microsoft.Common.targets\\ImportAfter\\Microsoft.NET.Build.Extensions.NETFramework.targets\" (#2871)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"1015450578","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"},{"Id":"359151445","IsPullRequest":false,"CreatedAt":"2018-09-11T17:44:50","Actor":"leecow","Number":"84","RawContent":null,"Title":"September 2018 .NET Updates","State":"open","Body":"# September 2018 .NET Updates\r\n\r\nThe following .NET updates were released in September 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework September 2018 Security and Quality Rollup - September 11, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/09/11/net-framework-september-2018-security-and-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core September 2018 Update - September 11, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.4/2.1.4.md)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/84","RelatedDescription":"Open issue \"September 2018 .NET Updates\" (#84)"},{"Id":"359136325","IsPullRequest":false,"CreatedAt":"2018-09-11T17:00:55","Actor":"blowdart","Number":"83","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in .NET Core when System.IO.Pipelines improperly handles requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an application that is leveraging System.IO.Pipelines. The vulnerability can be exploited remotely, without authentication. A remote unauthenticated attacker could exploit this vulnerability by providing specially crafted requests to the application.\r\n\r\nThe update addresses the vulnerability by correcting how System.IO.Pipelines handles requests.\r\n\r\nIf you are using ASP.NET Core 2.1 you will also need to update your ASP.NET version this by following the instructions in the [ASP.NET Core bulletin](https://github.com/aspnet/Announcements/issues/316).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/32228\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.IO.Pipelines package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Pipelines | 4.5.0 | 4.5.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications which use System.IO.Pipelines\r\n\r\nSystem.IO.Pipelines is distributed both in ASP.NET Core 2.1 and separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the System.IO.Pipelines package.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8409](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8409)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 11, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-09-11_\r\n","Url":"https://github.com/dotnet/announcements/issues/83","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\" (#83)"},{"Id":"357399856","IsPullRequest":false,"CreatedAt":"2018-09-05T20:56:25","Actor":"richlander","Number":"82","RawContent":null,"Title":".NET Core Runtime ARM64 Status","State":"open","Body":"# .NET Core Runtime ARM64 Status\r\n\r\nThe .NET Core team is in the process of adding support for ARM64, as part of the .NET Core 3.0 project. This issue will be updated as ARM64 support progresses.\r\n\r\n[.NET Core 3.0 Preview 1](https://github.com/dotnet/core/issues/2099) includes support for Linux ARM64. Please try this build and provide support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/coreclr #19843](https://github.com/dotnet/coreclr/issues/19843)\r\n\r\n## Current Status\r\n\r\nARM64 builds are functional, for console and ASP.NET Core apps.\r\n\r\n## Details\r\n\r\nInitial support for ARM64 was added in the .NET Core 2.1 release. The team is not maintaining .NET Core 2.x branches with respect to ARM64. All ARM64 improvements will be made in the .NET Core 3.0 branch (currently [master](https://github.com/dotnet/coreclr)).\r\n\r\nSee [Installing .NET Core 3.0 on Linux ARM64](https://gist.github.com/richlander/467813274cea8abc624553ee72b28213) to install .NET Core on your ARM64 machine. Builds are available from the [daily builds page](https://github.com/dotnet/core/blob/master/daily-builds.md).\r\n\r\n## Bug Queries\r\n\r\nthe following bugs queries are available for ARM64:\r\n\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n\r\n## Operating Systems\r\n\r\n.NET Core 3.0 ARM64 builds are tested on the following operating systems:\r\n\r\n* Ubuntu 16.04 and 18.04\r\n* Debian 9\r\n\r\n## Test Hardware\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following hardware:\r\n\r\n* [NVIDIA Jetson TX2 Module](https://developer.nvidia.com/embedded/buy/jetson-tx2)\r\n* [Pine A64](https://www.pine64.org/?page_id=46823)\r\n* [Qualcomm Centriq 2400](https://www.qualcomm.com/products/qualcomm-centriq-2400-processor)\r\n* [Qualcomm Snapdragon](https://www.qualcomm.com/snapdragon/always-connected-pc)\r\n* [Raspberry Pi3](https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/)","Url":"https://github.com/dotnet/announcements/issues/82","RelatedDescription":"Open issue \".NET Core Runtime ARM64 Status\" (#82)"},{"Id":"349693735","IsPullRequest":false,"CreatedAt":"2018-08-22T18:23:01","Actor":"richlander","Number":"80","RawContent":null,"Title":"Improving Performance of ARM32 Docker Images with .NET Core Package Cache","State":"closed","Body":"# Improving Performance of ARM32 Docker Images with .NET Core Package Cache\r\n\r\n.NET Core SDK distributions include a compressed copy of NuGet packages for .NET Core, ASP.NET Core and EF Core. These packages are decompressed upon installation of the .NET Core SDK. The packages are not currently included in ARM32 distributions due to the time and space cost to decompress the packages. Instead, they will be added to [.NET Core ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/), where these costs can be paid as part of image creation.\r\n\r\nThese NuGet packages include content for two purposes:\r\n\r\n- Reference assemblies for .NET Core, for code compilation.\r\n- Pre-compiled assemblies (compiled with [crossgen](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md)) for .NET Core, for use in self-contained applications.\r\n\r\nIn both cases, the presence of these packages avoid the need to access remote NuGet feeds for .NET Core assemblies as part of package restore.\r\n\r\nThis change only affects [.NET Core 2.1 SDK ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/). This change will be made in August 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #653](https://github.com/dotnet/dotnet-docker/issues/653)\r\n\r\n## .NET Core SDK NugetFallbackFolder\r\n\r\nThe .NET Core SDK includes a compressed copy of all NuGet package, in LZMA format. It exists at the following version-specific location:\r\n\r\n```\r\nroot@3778032bc43d:/# ls -l /usr/share/dotnet/sdk/2.1.302/*.lzma\r\n-rw-r--r-- 1 1004 sudo 35995936 Jul  2 22:51 /usr/share/dotnet/sdk/2.1.302/nuGetPackagesArchive.lzma\r\n```\r\n\r\nThis file is decompressed to the following location: `/usr/share/dotnet/sdk/NuGetFallbackFolder/`\r\n\r\nA package restore for a .NET Core assembly will restore the assembly from the NuGetFallbackFolder location and copy it to the user NuGet cache. At that point, regular NuGet behavior is used.\r\n\r\n## Impact of this change\r\n\r\nThere should be no functional difference in behavior after this change. .NET SDK commands should complete faster and require fewer package restore network requests.\r\n\r\nThe following examples demonstrates the benefit of this change. The improvement can be observed with package restore. Build times (assuming no restore) are not affected.\r\n\r\n### .NET Core 2.1 SDK image after this change\r\n\r\n> The change has already been made in the `microsoft/dotnet-nightly` repo, as you can see in the example below. In August, this same change will be made available in the `microsoft/dotnet` repo.\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet-nightly:2.1-sdk\r\nroot@416731f24915:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 6.68 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    0m32.496s\r\nuser    0m35.820s\r\nsys     0m4.280s\r\nroot@416731f24915:/# cd mvcapp/\r\nroot@416731f24915:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.8.138-preview+ge0cd4f1c1f for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 524.78 ms for /mvcapp/mvcapp.csproj.\r\n/usr/share/dotnet/sdk/2.1.401-preview-009081/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(143,5): message NETSDK1057: You are working with a preview version of the .NET Core SDK. You can define the SDK version via a global.json file in the current project. More at https://go.microsoft.com/fwlink/?linkid=869452 [/mvcapp/mvcapp.csproj]\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:09.15\r\n\r\nreal    2m13.377s\r\nuser    1m25.260s\r\nsys     0m9.420s\r\nroot@416731f24915:/mvcapp#\r\n```\r\n\r\n### .NET Core 2.1 SDK image before this change\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet:2.1-sdk\r\nroot@9d1d5e45df6a:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Installing System.Xml.XmlSerializer 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.0.0.\r\n  Installing System.Globalization.Extensions 4.0.1.\r\n  Installing runtime.native.System.Security.Cryptography 4.0.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.0.0.\r\n  Installing System.Security.Cryptography.Cng 4.2.0.\r\n  Installing System.Security.Cryptography.Csp 4.0.0.\r\n  Installing runtime.native.System.Net.Http 4.0.1.\r\n  Installing runtime.native.System 4.0.0.\r\n  Installing runtime.native.System.IO.Compression 4.1.0.\r\n  Installing System.Buffers 4.0.0.\r\n  Installing System.Private.DataContractSerialization 4.3.0.\r\n  Installing System.Security.Principal 4.3.0.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing runtime.rhel.7-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.ubuntu.14.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.opensuse.42.1-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.App 2.1.0.\r\n  Installing runtime.ubuntu.16.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.App 2.1.1.\r\n  Installing runtime.ubuntu.16.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 2.1.0.\r\n  Installing Microsoft.NETCore.Targets 2.1.0.\r\n  Installing NETStandard.Library 2.0.3.\r\n  Installing Microsoft.NETCore.DotNetHostPolicy 2.1.0.\r\n  Installing Microsoft.AspNetCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Antiforgery 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Session 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.KeyPerFile 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Embedded 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Physical 2.1.1.\r\n  Installing Microsoft.Extensions.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Cookies 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Core 2.1.1.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.Authentication.Google 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Facebook 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting.Abstractions 2.1.1.\r\n  Installing runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.HttpsPolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.MicrosoftAccount 2.1.1.\r\n  Installing Microsoft.Extensions.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.MiddlewareAnalysis 2.1.1.\r\n  Installing Microsoft.Extensions.FileSystemGlobbing 2.1.1.\r\n  Installing Microsoft.Extensions.DiagnosticAdapter 2.1.0.\r\n  Installing Microsoft.Extensions.Identity.Core 2.1.1.\r\n  Installing Microsoft.Extensions.Identity.Stores 2.1.1.\r\n  Installing Microsoft.Extensions.Options.ConfigurationExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Localization.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Abstractions 2.1.1.\r\n  Installing runtime.fedora.24-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Options 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Composite 2.1.1.\r\n  Installing Microsoft.Extensions.Logging 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.TraceSource 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.UserSecrets 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Debug 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Console 2.1.1.\r\n  Installing Microsoft.Extensions.DependencyInjection 2.1.1.\r\n  Installing Microsoft.Extensions.ObjectPool 2.1.1.\r\n  Installing runtime.debian.8-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.DependencyInjection.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Binder 2.1.1.\r\n  Installing runtime.fedora.23-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Configuration.EnvironmentVariables 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.FileExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Memory 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.CommandLine 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Abstractions 2.1.1.\r\n  Installing Microsoft.Net.Http.Headers 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.InMemory 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Ini 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.StaticFiles 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Relational 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Https 2.1.1.\r\n  Installing Microsoft.Extensions.Primitives 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel 2.1.1.\r\n  Installing Microsoft.Extensions.WebEncoders 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebUtilities 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR 1.0.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Tools 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Rewrite 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCompression 2.1.1.\r\n  Installing System.Globalization.Extensions 4.3.0.\r\n  Installing Microsoft.AspNetCore.Razor.Language 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.TagHelpers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Runtime 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.RazorPages 2.1.1.\r\n  Installing Microsoft.AspNetCore.Owin 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.ViewCompilation 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Json 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebSockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Cors 2.1.1.\r\n  Installing System.Diagnostics.DiagnosticSource 4.3.0.\r\n  Installing Microsoft.AspNetCore.Mvc.DataAnnotations 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ApiExplorer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.EventSource 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OAuth 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Json 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Protocols.Json 1.0.1.\r\n  Installing Microsoft.AspNetCore.NodeServices 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.JsonPatch 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization.Routing 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.IISIntegration 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.UI 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HttpOverrides 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Features 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cors 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Server.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.Internal 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.KeyDerivation 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HostFiltering 2.1.1.\r\n  Installing Microsoft.CSharp 4.0.1.\r\n  Installing Microsoft.AspNetCore.CookiePolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Core 2.1.1.\r\n  Installing Microsoft.AspNetCore.Html.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Twitter 2.1.1.\r\n  Installing Microsoft.AspNetCore.Connections.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization.Policy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.HttpSys 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.SqlServer 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.SqlServer 2.1.1.\r\n  Installing Microsoft.AspNet.WebApi.Client 5.2.6.\r\n  Installing Microsoft.AspNetCore.SignalR.Core 1.0.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ViewFeatures 2.1.1.\r\n  Installing Microsoft.CodeAnalysis.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.JwtBearer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OpenIdConnect 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.WsFederation 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore 2.1.1.\r\n  Installing System.Runtime.Serialization.Primitives 4.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Core 2.1.1.\r\n  Installing System.Xml.ReaderWriter 4.0.11.\r\n  Installing Microsoft.NETCore.DotNetHostResolver 2.1.0.\r\n  Installing System.Diagnostics.DiagnosticSource 4.5.0.\r\n  Installing System.ComponentModel.Annotations 4.5.0.\r\n  Installing System.Buffers 4.5.0.\r\n  Installing System.Memory 4.5.1.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.1.\r\n  Installing System.Text.Encodings.Web 4.5.0.\r\n  Installing Microsoft.CSharp 4.5.0.\r\n  Installing System.Net.WebSockets.WebSocketProtocol 4.5.1.\r\n  Installing Newtonsoft.Json 11.0.2.\r\n  Installing System.IO.Pipelines 4.5.0.\r\n  Installing System.Numerics.Vectors 4.5.0.\r\n  Installing System.Security.Principal.Windows 4.5.0.\r\n  Installing System.Threading.Tasks.Extensions 4.5.1.\r\n  Installing System.Security.Cryptography.Cng 4.5.0.\r\n  Installing System.Net.Http 4.1.0.\r\n  Installing System.Security.Cryptography.Xml 4.5.0.\r\n  Installing Microsoft.Win32.Registry 4.5.0.\r\n  Installing System.Reflection.Metadata 1.6.0.\r\n  Installing System.Data.SqlClient 4.5.1.\r\n  Installing Newtonsoft.Json.Bson 1.0.1.\r\n  Installing Newtonsoft.Json 10.0.1.\r\n  Installing System.Threading.Channels 4.5.0.\r\n  Installing System.Reflection.Emit 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.CSharp 2.8.0.\r\n  Installing Microsoft.CodeAnalysis.Common 2.8.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.OpenIdConnect 5.2.0.\r\n  Installing System.IdentityModel.Tokens.Jwt 5.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.WsFederation 5.2.0.\r\n  Installing System.Collections.Immutable 1.5.0.\r\n  Installing Remotion.Linq 2.2.0.\r\n  Installing System.Interactive.Async 3.1.1.\r\n  Installing Microsoft.Extensions.DependencyModel 2.1.0.\r\n  Installing Microsoft.NETCore.DotNetAppHost 2.1.0.\r\n  Installing Microsoft.NETCore.Platforms 2.0.0.\r\n  Installing System.Security.Cryptography.Pkcs 4.5.0.\r\n  Installing System.Security.Permissions 4.5.0.\r\n  Installing System.Security.AccessControl 4.5.0.\r\n  Installing NETStandard.Library 1.6.1.\r\n  Installing System.Text.Encoding.CodePages 4.5.0.\r\n  Installing System.Linq 4.3.0.\r\n  Installing runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing System.Diagnostics.Debug 4.3.0.\r\n  Installing System.Globalization 4.3.0.\r\n  Installing System.IO 4.3.0.\r\n  Installing System.Collections 4.3.0.\r\n  Installing System.Runtime.Serialization.Primitives 4.3.0.\r\n  Installing System.Runtime.Serialization.Formatters 4.3.0.\r\n  Installing System.Xml.XmlDocument 4.3.0.\r\n  Installing System.Threading 4.3.0.\r\n  Installing System.Resources.ResourceManager 4.3.0.\r\n  Installing System.Text.Encoding.Extensions 4.3.0.\r\n  Installing System.Xml.XDocument 4.3.0.\r\n  Installing System.Threading.Tasks 4.3.0.\r\n  Installing System.Linq.Expressions 4.3.0.\r\n  Installing System.Runtime.Numerics 4.3.0.\r\n  Installing System.Text.Encoding 4.3.0.\r\n  Installing System.Reflection.Extensions 4.3.0.\r\n  Installing System.Text.RegularExpressions 4.3.0.\r\n  Installing System.Runtime.Extensions 4.3.0.\r\n  Installing System.Reflection 4.3.0.\r\n  Installing System.ObjectModel 4.3.0.\r\n  Installing System.Dynamic.Runtime 4.3.0.\r\n  Installing System.Xml.ReaderWriter 4.3.0.\r\n  Installing Microsoft.CSharp 4.3.0.\r\n  Installing System.ComponentModel.TypeConverter 4.3.0.\r\n  Installing System.Runtime 4.3.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.3.0.\r\n  Installing System.Reflection.Primitives 4.3.0.\r\n  Installing System.AppContext 4.3.0.\r\n  Installing System.Console 4.3.0.\r\n  Installing System.Collections.Concurrent 4.3.0.\r\n  Installing System.Diagnostics.Tools 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.0.0.\r\n  Installing System.IO.Compression 4.3.0.\r\n  Installing System.IO.FileSystem 4.3.0.\r\n  Installing System.IO.FileSystem.Primitives 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.3.0.\r\n  Installing System.Collections.Immutable 1.3.1.\r\n  Installing System.Runtime.InteropServices 4.3.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.1.0.\r\n  Installing System.Diagnostics.StackTrace 4.3.0.\r\n  Installing System.Reflection.Metadata 1.4.2.\r\n  Installing System.Threading.Thread 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.Analyzers 1.1.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.3.0.\r\n  Installing System.ValueTuple 4.3.0.\r\n  Installing System.Diagnostics.FileVersionInfo 4.3.0.\r\n  Installing System.Threading.Tasks.Parallel 4.3.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.3.0.\r\n  Installing System.Xml.XPath.XDocument 4.3.0.\r\n  Installing System.Text.Encoding.CodePages 4.3.0.\r\n  Installing System.Runtime.InteropServices 4.1.0.\r\n  Installing Microsoft.IdentityModel.Protocols 5.2.0.\r\n  Installing Microsoft.IdentityModel.Tokens 5.2.0.\r\n  Installing Microsoft.IdentityModel.Xml 5.2.0.\r\n  Installing System.Diagnostics.Debug 4.0.11.\r\n  Installing System.Reflection.Extensions 4.0.1.\r\n  Installing Microsoft.IdentityModel.Tokens.Saml 5.2.0.\r\n  Installing System.Runtime.Extensions 4.1.0.\r\n  Installing System.Threading 4.0.11.\r\n  Installing System.Collections 4.0.11.\r\n  Installing System.Reflection 4.1.0.\r\n  Installing System.ObjectModel 4.0.12.\r\n  Installing System.Linq 4.1.0.\r\n  Installing System.Linq.Queryable 4.0.1.\r\n  Installing System.Linq.Expressions 4.1.0.\r\n  Installing System.Runtime 4.1.0.\r\n  Installing NETStandard.Library 1.6.0.\r\n  Installing System.Dynamic.Runtime 4.0.11.\r\n  Installing Newtonsoft.Json 9.0.1.\r\n  Installing Microsoft.DotNet.PlatformAbstractions 2.1.0.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.0.\r\n  Installing runtime.win-x64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-x86.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-arm64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing Microsoft.NETCore.Platforms 1.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.3.0.\r\n  Installing System.Net.Sockets 4.3.0.\r\n  Installing System.Diagnostics.Tracing 4.3.0.\r\n  Installing System.IO.Compression.ZipFile 4.3.0.\r\n  Installing System.Globalization.Calendars 4.3.0.\r\n  Installing System.Threading.Timer 4.3.0.\r\n  Installing System.Security.Cryptography.Primitives 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.0.0.\r\n  Installing System.Runtime.Handles 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.3.0.\r\n  Installing System.Net.Http 4.3.0.\r\n  Installing Microsoft.NETCore.Targets 1.1.0.\r\n  Installing System.Net.Primitives 4.3.0.\r\n  Installing System.Reflection.Emit.Lightweight 4.3.0.\r\n  Installing System.Reflection.TypeExtensions 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.3.0.\r\n  Installing System.ComponentModel 4.3.0.\r\n  Installing System.ComponentModel.Primitives 4.3.0.\r\n  Installing System.Collections.NonGeneric 4.3.0.\r\n  Installing System.Collections.Specialized 4.3.0.\r\n  Installing runtime.native.System 4.3.0.\r\n  Installing runtime.native.System.IO.Compression 4.3.0.\r\n  Installing System.Buffers 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.native.System.Net.Http 4.3.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing System.Security.Cryptography.Cng 4.3.0.\r\n  Installing System.Security.Cryptography.Csp 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing System.Xml.XPath 4.3.0.\r\n  Installing Microsoft.IdentityModel.Logging 5.2.0.\r\n  Installing System.Diagnostics.Contracts 4.3.0.\r\n  Installing System.Runtime.Serialization.Xml 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 1.0.1.\r\n  Installing Microsoft.NETCore.Targets 1.0.1.\r\n  Installing System.Security.Claims 4.3.0.\r\n  Installing System.Reflection.Primitives 4.0.1.\r\n  Installing System.IO 4.1.0.\r\n  Installing System.Globalization 4.0.11.\r\n  Installing System.Threading.Tasks 4.0.11.\r\n  Installing System.Resources.ResourceManager 4.0.1.\r\n  Installing System.Reflection.Emit 4.0.1.\r\n  Installing System.Reflection.TypeExtensions 4.1.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.0.1.\r\n  Installing System.Reflection.Emit.Lightweight 4.0.1.\r\n  Installing System.AppContext 4.1.0.\r\n  Installing System.Collections.Concurrent 4.0.12.\r\n  Installing System.IO.FileSystem.Primitives 4.0.1.\r\n  Installing System.Runtime.Numerics 4.0.1.\r\n  Installing System.Security.Cryptography.Primitives 4.0.0.\r\n  Installing System.Xml.XDocument 4.0.11.\r\n  Installing System.Text.RegularExpressions 4.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.0.1.\r\n  Installing System.Console 4.0.0.\r\n  Installing System.Diagnostics.Tools 4.0.1.\r\n  Installing System.Diagnostics.Tracing 4.1.0.\r\n  Installing System.Globalization.Calendars 4.0.1.\r\n  Installing System.IO.FileSystem 4.0.1.\r\n  Installing System.Net.Sockets 4.1.0.\r\n  Installing System.Text.Encoding 4.0.11.\r\n  Installing System.Threading.Timer 4.0.1.\r\n  Installing System.Net.Primitives 4.0.11.\r\n  Installing System.Runtime.Handles 4.0.1.\r\n  Installing System.Text.Encoding.Extensions 4.0.11.\r\n  Installing System.IO.Compression.ZipFile 4.0.1.\r\n  Installing System.IO.Compression 4.1.0.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 44.04 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    1m8.386s\r\nuser    1m8.010s\r\nsys     0m18.190s\r\nroot@9d1d5e45df6a:/# cd mvcapp/\r\nroot@9d1d5e45df6a:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 557.76 ms for /mvcapp/mvcapp.csproj.\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:07.34\r\n\r\nreal    2m11.716s\r\nuser    1m22.990s\r\nsys     0m8.880s\r\nroot@9d1d5e45df6a:/mvcapp#\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/80","RelatedDescription":"Closed issue \"Improving Performance of ARM32 Docker Images with .NET Core Package Cache\" (#80)"},{"Id":"350233220","IsPullRequest":false,"CreatedAt":"2018-08-13T23:50:57","Actor":"richlander","Number":"81","RawContent":null,"Title":"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+","State":"open","Body":"# Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\r\n\r\nAn [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md) was discovered with [.NET Framework 4.7.1](https://blogs.msdn.microsoft.com/dotnet/2017/10/17/announcing-the-net-framework-4-7-1/). This issue was resolved earlier this year, with the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/). We recently learned that some applications, including Johnson Controls’ C-CURE 9000 Software, were negatively impacted by this change as this update requires all client and server workstations to be updated simultaneously with the appropriate Microsoft updates. The changes made to .NET Framework 4.7.1 were also integrated into .NET Framework 4.6 and later servicing releases. As a result, this advisory applies to .NET Framework 4.6 and later versions.\r\n\r\nThis advisory is provided so that developers can correctly diagnose this issue and be aware of our guidance. We will continue to update this issue as we have new information to share.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #832](https://github.com/Microsoft/dotnet/issues/832)\r\n\r\n## Guidance\r\n\r\nThis guidance only applies to customers that have experienced this issue.\r\n\r\nWe have released [an update for .NET Framework 4.6](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/) and later that resolves the issue. **You must deploy the .NET Framework update for this issue to all .NET Framework 4.6+ machines that communicate via serialized objects**. After doing that, cross-machine serialization will work as expected. \r\n \r\nPlease consult your software vendor to understand if this impacts the software you are using.\r\n\r\n## Technical Context\r\n\r\nIn the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/), we made a change to the internal type CultureAwareComparer to implement ISerializable. We made the change in order to address [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md).\r\n\r\nThe issue reported was that a type that contains an instance of CultureAwareComparer was not able to correctly serialize and deserialize across different versions of the .NET Framework. There are a few types in .NET Framework that do this, the most commonly impacted one being the Dictionary<TKey, TValue> type.\r\n \r\nThe change to implement the ISerializable interface had unintended side effects when exchanging this type across different machines. We have had a small number of reports from customers who have been affected.\r\n\r\nA common, but not unique way, of exchanging objects across machines is to use WCF in conjunction with a serializer. One of the common serializers being DataContractSerializer. The side-effect of the change prevented data serialized on systems where the type implements ISerializable to correctly deserialize of systems where the type does NOT implement ISerializable. The same is true of the opposite case, that systems where the type does not implement ISerializable will not correctly deserialize data from systems where the type does implement ISerializable.\r\n\r\nWe have an updated fix that we intend to release within the next month that will remove the implementation of the ISerializable interface on the type and use a different internal mechanism for ensuring the cross-version serialization continues to work as expected. This change addresses the break experienced with WCF.\r\n\r\nThe upcoming fix will remove the implementation of the ISerializable interface on the type and use a different mechanism for ensuring the cross-version serialization of that type continues to work. This change addresses the break experienced with WCF.\r\n\r\n## Symptoms\r\n\r\nAn application that is affected by this issue will most likely crash when trying to deserialize an object. It may print or log an error message similar to the following one:\r\n\r\n```\r\nThe formatter threw an exception while trying to deserialize the message: \r\nThere was an error while trying to deserialize parameter . The InnerException message was ''EndElement' 'Comparer' from namespace '' is not expected. Expecting element '_compareInfo'.'.  Please see InnerException for more details.\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/81","RelatedDescription":"Open issue \"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\" (#81)"},{"Id":"348162872","IsPullRequest":false,"CreatedAt":"2018-08-07T04:26:40","Actor":"richlander","Number":"79","RawContent":null,"Title":"August 2018 .NET Updates","State":"open","Body":"# August 2018 .NET Updates\r\n\r\nThe following .NET updates were released in August 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [August 2018 .NET Framework Security and Quality Rollup - August 14, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/)\r\n* [Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+](https://github.com/dotnet/announcements/issues/81)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [August 2018 Preview of Quality Rollup - August 30, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core August 2018 Update - August 21, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.3/2.1.3.md)\r\n* [.NET Core 2.1.400 SDK Update - August 14, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.400-SDK/2.1.400-sdk.md)\r\n\r\n## End of Support for Operating System Versions\r\n\r\n.NET Core does not support systems that are out of support. The following operating systems are now out of support. To stay supported, move to a [later version of the given operating system](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md).\r\n\r\n* [Debian 8 -- Jessie](https://lists.debian.org/debian-security-announce/2018/msg00132.html)\r\n* [Ubuntu 17.10 -- Artful Aardvark](https://lists.ubuntu.com/archives/ubuntu-announce/2018-July/000232.html)\r\n\r\nSee [Debian Jessie End of Life -- Impact on .NET Core Docker Images](https://github.com/dotnet/announcements/issues/78)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/79","RelatedDescription":"Open issue \"August 2018 .NET Updates\" (#79)"},{"Id":"348161534","IsPullRequest":false,"CreatedAt":"2018-08-07T04:18:01","Actor":"richlander","Number":"78","RawContent":null,"Title":"Debian Jessie End of Life -- Impact on .NET Core Docker Images","State":"open","Body":"# Debian Jessie End of Life -- Impact on .NET Core Docker Images\r\n\r\nDebian Jessie (AKA Debian 8) is now [out of support](https://lists.debian.org/debian-security-announce/2018/msg00132.html). Debian Jessie is no longer a supported operating system for .NET Core. Docker users need to switch to Debian Stretch-based (AKA Debian 9) images to stay in support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #647](https://github.com/dotnet/dotnet-docker/issues/647)\r\n\r\n## Context\r\n\r\nJessie-based images are currently provided for .NET Core 1.0, 1.1 and 2.0. .NET Core 1.0 and 1.1 expose multi-arch tags, such as `1.0-runtime` and `1.1-sdk`, that support Debian Jessie. When pulled for a Linux Docker daemon (on Linux or Windows), these tags pull Jessie-based images. .NET Core 2.0 supports Jessie, but it is not the default. .NET Core 2.0 multi-arch tags, such as `2.0-runtime` and `2.0-sdk`, pull Debian Stretch-based images, when pulled for a Linux Docker daemon. We made a conscious decision with .NET Core 2.0 to move off of Jessie as the default to avoid this problem, based the Jessie 2018 EOL date. .NET Core 2.1 does not support Jessie, only Stretch.\r\n\r\nWe recently posted about our policy for underlying operating system dependencies with Docker:\r\n\r\n> For each major and minor .NET version, we may take a new major operating system version dependency. As I mentioned earlier, we adopted Debian 9 as the base image for .NET Core 2.0. We stayed with Debian 9 for .NET Core 2.1, since Debian 10 (AKA “Buster”) has not been released. Debian 9 will remain the default base image for .NET Core 2.1 for the life of .NET Core 2.1. **Once we adopt an underlying operating system major version, we will not change it for the life of that given .NET release.**\r\n\r\nSource: https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/\r\n\r\n## Plan\r\n\r\nWe will continue to re-build .NET Core 1.0 and 1.1 multi-arch tags on top of Jessie for the remaining [supported lifetime of .NET Core 1.0 and 1.1](https://github.com/dotnet/core/blob/master/microsoft-support.md). We will also provide a Stretch-based image for .NET Core 1.1. This tag will look like the following: `1.1-runtime-stretch` or `1.1.9-sdk-stretch`. This is same format that Jessie has used.\r\n\r\nWe will produce Jessie-based images for NET Core 2.0 until October 2018, which is when [.NET Core 2.0 support ends](https://github.com/dotnet/core/blob/master/microsoft-support.md). .NET Core 2.0 multi-arch tags support Debian Stretch, not Jessie, as described above.\r\n\r\nIn summary, .NET Core is no longer supported on Debian Jessie, with Docker or otherwise. We will produce Docker images for Jessie until .NET Core 1.0, 1.1 and 2.0 support ends, respectively, to avoid breaking applications. This aligns with the policy defined above, per [Staying up-to-date with .NET Container Images](https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/).\r\n\r\n## Affected Repos\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)","Url":"https://github.com/dotnet/announcements/issues/78","RelatedDescription":"Open issue \"Debian Jessie End of Life -- Impact on .NET Core Docker Images\" (#78)"},{"Id":"345028102","IsPullRequest":false,"CreatedAt":"2018-07-26T22:31:32","Actor":"leecow","Number":"77","RawContent":null,"Title":"https://dot.net now using TLS 1.2-only","State":"open","Body":"Earlier today, https://dot.net switched to using TLS 1.2-only. Most Windows Powershell instances default to TLS 1.1 and will thus fail with `wget : The underlying connection was closed: An unexpected error occurred on a send. trying to run the previous command.`\r\n\r\nAn example of a PowerShell script fix can be seen in https://github.com/dotnet/docs/pull/6689","Url":"https://github.com/dotnet/announcements/issues/77","RelatedDescription":"Open issue \"https://dot.net now using TLS 1.2-only\" (#77)"},{"Id":"343360319","IsPullRequest":false,"CreatedAt":"2018-07-21T22:29:05","Actor":"richlander","Number":"76","RawContent":null,"Title":"July 2018 .NET Updates","State":"open","Body":"# July 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework 4.7.2 is available on Windows Update, WSUS and MU Catalog](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-framework-4-7-2-is-available-on-windows-update-wsus-and-mu-catalog/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3632](https://blogs.msdn.microsoft.com/dotnet/2018/07/18/announcing-net-framework-4-8-early-access-build-3632/)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-core-july-2018-update/)\r\n\r\n## .NET Core Support Policies\r\n\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core Supported OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n","Url":"https://github.com/dotnet/announcements/issues/76","RelatedDescription":"Open issue \"July 2018 .NET Updates\" (#76)"},{"Id":"343360017","IsPullRequest":false,"CreatedAt":"2018-07-21T22:22:25","Actor":"richlander","Number":"75","RawContent":null,"Title":"June 2018 .NET Updates","State":"open","Body":"# June 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework June 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/06/13/net-framework-june-2018-security-and-quality-rollup/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3621!](https://blogs.msdn.microsoft.com/dotnet/2018/06/06/announcing-net-framework-4-8-early-access-build-3621/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core 2.1 June Update](https://blogs.msdn.microsoft.com/dotnet/2018/06/22/net-core-2-1-june-update/)\r\n* [.NET Core 2.0 will reach End of Life on October 1, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core 1.0 and 1.1 EOL Dates Documented](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n\r\n## Previous Updates\r\n\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n* [February 2018](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/75","RelatedDescription":"Open issue \"June 2018 .NET Updates\" (#75)"},{"Id":"343283437","IsPullRequest":false,"CreatedAt":"2018-07-21T00:56:48","Actor":"richlander","Number":"74","RawContent":null,"Title":"Advisory on July 2018 .NET Framework Updates","State":"open","Body":"# Advisory on July 2018 .NET Framework Updates\r\n\r\nUpdated: 08/14/2018\r\n\r\n> A new [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/) has been released that **resolves this advisory for all supported Windows versions**.\r\n\r\n~~A new [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) has been released that resolves this advisory. See Guidance section.~~\r\n\r\n~~Guidance has changed for Windows 7, Windows Server 2008 and Windows Server 2008 R2. See Guidance section.~~\r\n\r\nThe [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) was released earlier this month. We have received multiple customer reports of [applications that fail to start or don't run correctly](https://support.microsoft.com/en-us/help/4345913) after installing the July 2018 update. These reports are specific to applications that initialize a COM component and run with restricted permissions.\r\n\r\nWe have stopped distributing the .NET Framework July 2018 updates on Windows Update and are actively working on fixing and re-shipping this month's updates. If you installed the July 2018 update and have not yet seen any negative behavior, we recommend that you leave your systems as-is but closely monitor them and ensure that you apply upcoming .NET Framework updates.\r\n\r\nAs a team, we regret that this release was shipped with this flaw. This release was tested using our regular and extensive testing process. We discovered while investigating this issue that we have a test hole for the specific combination of COM activation and restricted permissions, including impersonation. We will be mitigating that gap going forward. Again, we are sorry for any inconvenience that this product flaw has caused.\r\n\r\nWe will continue to update this issue and [post](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/) as we have new information.\r\n\r\n## Discussion\r\nPlease share your thoughts/experience on this advisory and see what others are saying at:\r\n\r\n* [microsoft/dotnet #811](https://github.com/Microsoft/dotnet/issues/811)\r\n\r\n## Guidance\r\n\r\nWe strongly recommend that you install [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/).\r\n\r\n~~We recommend that you install [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) on your systems if you experienced the symptoms described in this advisory. If you did not experience these symptoms, we recommend you wait to update your machines until the next regular update, in August.~~\r\n\r\n~~On Windows 7, Windows Server 2008, and Windows Server 2008 R2, we have found that the combination of [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) and  [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) do not resolve all symptoms. On these Windows versions, if you are experiencing these symptoms after installing this combination of patches, we recommend that you uninstall (only) the Monthly Rollup patch and then install the appropriate Security Only patch listed at [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356).~~\r\n\r\n## Technical Context\r\n\r\nThe .NET Framework runtime uses the process token to determine whether the process is being run within an elevated context. These system calls can fail if the required process inspection permissions are not present. This causes an “access denied\" error.\r\n\r\n## Symptoms\r\n\r\nA COM component fails to load because of “access denied,” “class not registered,” or “internal failure occurred for unknown reasons” errors. \r\n\r\nThe most commonly reported failure results in the following error message:\r\n\r\n```console\r\nException type: System.UnauthorizedAccessException\r\nMessage: Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\n### Sharepoint\r\n\r\nWhen users browse to a SharePoint site they may see the following HTTP 403 message:\r\n\r\n```console\r\n\"The Web Site declined to show this webpage\"\r\n```\r\n\r\nThe SharePoint ULS Logs will contain a message like the following:  \r\n\r\n```console\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 0000       High                UnauthorizedAccessException for the request. 403 Forbidden will be returned. Error=An error occurred creating the configuration section handler for system.serviceModel/extensions: Could not load file or assembly <AssemblySignature>  or one of its dependencies. Access is denied. (C:\\Windows\\Microsoft.NET\\Framework64\\v2.0.50727\\Config\\machine.config line 180)    \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General b6p2      VerboseEx                Sending HTTP response 403:403 FORBIDDEN.      \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 8nca       Verbose                Application error when access /, Error=Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\nWhen crawling a people content source, the request may fail with the following entry logged to the SharePoint ULS Log: \r\n\r\n```console\r\nmssearch.exe (0x118C) 0x203C SharePoint Server Search Crawler:Gatherer Plugin cd11 Warning The start address sps3s://<URLtoSite> cannot be crawled.  Context: Application 'Search_Service_Application', Catalog 'Portal_Content'  Details:  Class not registered   (0x80040154)  \r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive error \"ActiveX component can't create object\" \r\n\r\n.NET Application creates instance of .NET COM application within an Impersonation Context may receive error \"0x80040154 (REGDB_E_CLASSNOTREG)\"\r\n```\r\n\r\n### BizTalk Server Administration Console\r\n\r\nBizTalk Server Administration Console fails to launch properly with the following errors: \r\n\r\n```console\r\nAn internal failure occurred for unknown reasons. (WinMgmt) \r\n\r\nProgram Location:  \r\n\r\n   at System.Runtime.InteropServices.Marshal.ThrowExceptionForHRInternal(Int32 errorCode, IntPtr errorInfo) \r\n\r\n   at System.Management.ManagementObject.Get() \r\n\r\n   at Microsoft.BizTalk.SnapIn.Framework.WmiProvider.SelectInstance\r\n```\r\n\r\n> Warning: The following workarounds may make a computer or a network more vulnerable to attack by malicious users or by malicious software such as viruses. We do not recommend these workarounds but are providing this information so that you can implement the workarounds at your own discretion. Use these workarounds at your own risk.\r\n\r\nUse the following guidance as a workaround:\r\n\r\n* Add “NETWORK SERVICE” to the local Administrators group. \r\n\r\n### IIS with Classic ASP\r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive the following error: \"ActiveX component can't create object\". Use the following guidance as a workaround.\r\n\r\n* If your web site uses Anonymous Authentication, change the Web Site Anonymous Authentication credentials to use the \"Application pool identity\"\r\n* If your site uses Basic Authentication, log into the application once as the application pool identity and then create an instance of the .NET COM component. All subsequent activations for that .NET COM component should succeed, for any user.\r\n\r\n### .NET applications using COM and impersonation\r\n\r\n.NET Applications that creates instances of .NET COM application within an Impersonation Context may receive the following error: \"0x80040154 (REGDB_E_CLASSNOTREG)\". Use the following guidance as a workaround.\r\n\r\n* Create an instance of the .NET COM component prior to the impersonation context call. Later impersonated create instance calls should work as expected.\r\n* Run the .NET Application in the context of the impersonated user\r\n* Avoid using Impersonation when creating the .NET COM object","Url":"https://github.com/dotnet/announcements/issues/74","RelatedDescription":"Open issue \"Advisory on July 2018 .NET Framework Updates\" (#74)"},{"Id":"339929129","IsPullRequest":false,"CreatedAt":"2018-07-10T17:00:37","Actor":"blowdart","Number":"73","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core does not correctly validate certificates. An attacker who successfully exploited this vulnerability could present an expired certificate when challenged.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle certificate validation.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wcf/issues/3009\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does not use Windows Communication Foundation you are not affected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, or ASP.NET Core based application that uses System.Private.ServiceModel with a version of 4.5.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Private.ServiceModel | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 |  4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Duplex | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.4 or later <br /> 4.3.3 or later <br /> 4.443 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Http | 4.0.0, 4.0.10, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.NetTcp | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Primitives | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.2 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Security | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.4 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n### <a name=\"project-format\"></a>.NET Core Project formats\r\n\r\n.NET Core has two different project file formats, depending on what software created the project.\r\n\r\n1. `project.json` is the format used in .NET Core 1.0 and Microsoft Visual Studio 2015.\r\n2. `csproj` is the format used in .NET Core 1.1, .NET Core 2.0 and Microsoft Visual Studio 2017.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file or your `project.json` file. They can be fixed by [editing the project file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n The `System.Private.ServiceModel` package is not meant to be directly depended on and will not appear in your direct dependency list.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in three ways, depending on your [project format](#project-format):\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects *OR*.\r\n* By examining the `project.lock.json` file contained in the root directory of your project for `project.json` based projects.\r\n\r\nThe `project.assets.json` and `project.lock.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies-vs2017\"></a>Fixing direct dependencies in a csproj based project / Visual Studio 2017\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.ServiceModel.Http` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.3\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"direct-dependencies-vs2015\"></a> Fixing Direct Dependencies in project.json based project / Visual Studio 2015\r\n\r\nOpen your `project.json` file in your editor. Look for the dependencies section. Below is an example dependencies section:\r\n\r\n``` json\r\n    \"dependencies\": {\r\n      \"Microsoft.NETCore.App\": {\r\n        \"version\": \"1.0.1\",\r\n        \"type\": \"platform\"\r\n      },\r\n     \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n     \"System.ServiceModel.Http\" : \"4.0.0\"\r\n    }\r\n```\r\n\r\nThis example has three direct dependencies: `Microsoft.NETCore.App`, `Microsoft.AspNetCore.Mvc.Core` and `System.ServiceModel.Http`.\r\n\r\n`Microsoft.NetCore.App` is the platform the application targets, you should ignore this. The other packages expose their version to the right of the package name. In our example, our non-platform packages are version 1.0.1.\r\n\r\nReview your direct dependencies for any instance of the packages and versions listed above. In the example above, there is a direct dependency on a vulnerable package, `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update to the fixed package, change the version number to be the appropriate package for your release. In the example, this would be updating `System.ServiceModel.Http` to 4.4.3.\r\n\r\nAfter updating the vulnerable package versions, save your `project.json` file.\r\n\r\nThe dependencies section in our example `project.json` would now look as follows:\r\n\r\n```json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n    \"System.ServiceModel.Http \": \"4.4.3\"\r\n  }\r\n```\r\n\r\nIf you are using Visual Studio and save your updated `project.json` file, Visual Studio will restore the new package version. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependency.\r\n\r\nAfter you have addressed all of your direct dependencies, you must also review your transitive dependencies.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json) or the [the `project.lock.json` file](#project-lock-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json (csproj/VS2017)\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.ServiceModel.Http/4.3.0` is a reference to version 4.3.0 of `System.ServiceModel.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.3.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### <a name=\"project-lock-json\"></a> Manually reviewing project.lock.json (project.json/VS2015)\r\n\r\nOpen the `project.lock.json` file in your editor. We suggest you use an editor that understands json and allows you to collapse and expand nodes to review this file; both Visual Studio and Visual Studio Code provide this functionality.\r\n\r\nIf you are using Visual Studio the `project.lock.json` file is “under” the `project.json` file. Click the right pointing triangle, ▷, to the left of the `project.json` file to expand the solution tree to expose the `project.lock.json` file. The following image shows a project with the `project.json` file expanded to show the `project.lock.json` file.\r\n\r\n![project lock json](https://cloud.githubusercontent.com/assets/796298/25858179/f6e01200-348f-11e7-8a77-7176d8dd3f03.png)\r\n\r\nSearch the `project.lock.json` file for the vulnerable packages, using the format `packagename/`, using each of the package names from the table above. If you find any vulnerable assembly name in your search examine the line on which they are found, the version number is after the `/` and compare to the vulnerable versions table above. For example a search result that shows `System.ServiceModel.Http/4.0.1` is a reference to v4.0.1 of `System.ServiceModel.Http`.   If your `project.lock.json` file includes references to any of the package versions shown above then you will need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to a vulnerable version of `System.ServiceModel.Http` this means none of your direct dependencies depend on any vulnerable packages or you have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to any of the vulnerable packages you must add a direct dependency to the updated package to your `project.json` file to override the transitive dependency. Open your `project.json` and find the dependencies section. For example:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nFor each of the vulnerable packages your search returned you must add a direct dependency to the updated version by adding it to the `project.json` file. You do this by adding a new line to the dependencies section, referring the fixed version. For example, if your search showed a transitive reference to the vulnerable `System.ServiceModel.Http` version 1.0.0 you would add a reference to the appropriate fixed version, 1.0.6. Edit the `project.json` file as follows:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"System.ServiceModel.Http\": \"4.1.2\",\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nAfter you have added direct dependencies to the fixed packages, save your `project.json` file.\r\n\r\nIf you are using Visual Studio save your updated `project.json` file and Visual Studio will restore the new package versions. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8356](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8356)\r\n\r\n### Revisions\r\n\r\nV1.1 (July 23, 2018): Updated package versions, as some assemblies were released unsigned.\r\nV1.0 (July 10, 2018): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2018-07-23_\r\n","Url":"https://github.com/dotnet/announcements/issues/73","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\" (#73)"},{"Id":"329614193","IsPullRequest":false,"CreatedAt":"2018-06-05T20:33:10","Actor":"huanwu","Number":"72","RawContent":null,"Title":"Introducing dotnet-svcutil.xmlserializer for .NET Core","State":"open","Body":"# Introducing dotnet-svcutil.xmlserializer for .NET Core\r\nOn the full .NET Framework you are able to pre-generate a serialization assembly using the tool svcutil. We are providing similar functionality on .NET Core by releasing the dotnet-svcutil.xmlserializer NuGet package. It pre-generates c# serialization code for the types used by WCF Service Contract in the client applications that can be serialized using the XmlSerializer to improve the startup performance of Xml Serialization when serializing or de-serializing objects of those types using XmlSerializer. \r\nYou can start using the tool today by following the [instructions](https://github.com/dotnet/core/blob/master/samples/dotnet-svcutil.xmlserializer-instructions.md). \r\n\r\n## Discussion \r\nPlease share with us any thoughts of questions that you may have at: \r\n\r\n- dotnet/wcf [#2927](https://github.com/dotnet/wcf/issues/2927)\r\n## Details \r\nWhen to use XmlSerializer with WCF in an app to serialize contract data types, it will generate an XmlSerializer during runtime to do the serialization. You can improve the startup performance of Xml serialization by simply adding the reference of dotnet-svcutil.xmlserializer NuGet package to your project. This tool will generate the serialization code and compile it into an assembly next to your output assembly at build time in advance. This assembly can then be deployed and ran with your application. \r\n\r\nPlease create an issue with your feedback at [dotnet/wcf](https://github.com/dotnet/wcf/issues). We are actively looking to improve the tool and your input is a valuable part of the process. ","Url":"https://github.com/dotnet/announcements/issues/72","RelatedDescription":"Open issue \"Introducing dotnet-svcutil.xmlserializer for .NET Core\" (#72)"},{"Id":"327817883","IsPullRequest":false,"CreatedAt":"2018-05-30T17:02:38","Actor":"MichaelSimons","Number":"71","RawContent":null,"Title":".NET Core 2.1 Docker Image Updates","State":"open","Body":"# .NET Core 2.1 Docker Image Updates\r\n\r\nWe have consolidating the set of Docker Hub repositories that we use for .NET Core and ASP.NET Core. We will use [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) as the only repository that we publish to for .NET Core 2.1 and later releases.\r\n\r\nWe added a set of environment variables to .NET Core images to make it easier to host ASP.NET Core sites at any .NET Core image layer and to enable `dotnet watch` in SDK container images without additional configuration.\r\n\r\nAlpine and ARM32 image variants have been added and are supported.\r\n\r\n[.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/blob/master/samples/README.md) have been moved to the [dotnet/dotnet-docker](https://github.com/dotnet/dotnet-docker) repo. The samples have been updated for .NET Core 2.1. New samples have been added, including [Hosting ASP.NET Core Images with Docker over HTTPS](https://github.com/dotnet/dotnet-docker/blob/master/samples/aspnetapp/aspnetcore-docker-https.md).\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #560](https://github.com/dotnet/dotnet-docker/issues/560)\r\n\r\n## Details\r\n\r\nThe following changes have been made as part of the .NET Core 2.1 release.\r\n\r\n### Repo consolidation\r\n\r\n.NET Core and ASP.NET Core images will be published to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) Docker Hub repo for .NET Core 2.1 and later releases. Co-location of images improves image discovery. The .NET Core runtime and SDK images are already co-located. We are adding the ASP.NET Core runtime images to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo as a third image type. We are [no longer producing the microsoft/aspnetcore-build image](https://github.com/aspnet/Announcements/issues/298) with .NET Core 2.1.\r\n\r\nThe following three tags are now available at the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo:\r\n\r\n* `2.1-sdk`\r\n* `2.1-aspnetcore-runtime`\r\n* `2.1-runtime`\r\n\r\n### Environment variables enable new scenarios\r\n\r\nWe added a set of environment variables to .NET Core docker images, for .NET Core 2.1 and later. These environment variables enable more scenarios to work without additional configuration, such as [developing ASP.NET Core applications in a container](https://github.com/dotnet/dotnet-docker/blob/master/samples/aspnetapp/aspnet-docker-dev-in-container.md).\r\n\r\nNew sdk image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/sdk/bionic/amd64/Dockerfile#L28-L32))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n* `DOTNET_USE_POLLING_FILE_WATCHER=true`\r\n\r\nNew Linux runtime-deps image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/runtime-deps/alpine3.7/amd64/Dockerfile#L19-L21))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n\r\nNew Windows runtime image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/runtime/nanoserver-1709/amd64/Dockerfile#L33-L35))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n\r\n### New image variants\r\n\r\nAlpine and ARM32 image variants have been added and are supported as part of the .NET Core 2.1 release. \r\n\r\nFor Alpine, you must [use specific tags to create Alpine-based images](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/README.md#build-and-run-the-sample-for-alpine-with-docker), such as `2.1-runtime-alpine`. \r\n\r\nFor ARM32, you can use the regular multi-arch tags, like `2.1-runtime` and `2.1-sdk` if you are building on an ARM32 device. If you are building on another type of machine, you need to use ARM32-specific tags for the runtime images you create, such as `2.1-runtime-bionic-arm32v7` (for Ubuntu 18.04).\r\n\r\n### Related repos\r\n\r\nThe following repos are related to this announcement:\r\n\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n* [microsoft/dotnet/](https://hub.docker.com/r/microsoft/dotnet/)\r\n","Url":"https://github.com/dotnet/announcements/issues/71","RelatedDescription":"Open issue \".NET Core 2.1 Docker Image Updates\" (#71)"},{"Id":"325815293","IsPullRequest":false,"CreatedAt":"2018-05-23T18:04:46","Actor":"mlacouture","Number":"70","RawContent":null,"Title":"Introducing dotnet-svcutil","State":"open","Body":"# Introducing dotnet-svcutil\r\n\r\nThe Microsoft Windows Communication Foundation (WCF) **dotnet-svcutil** tool is a .NET Core CLI tool that retrieves metadata from a web service on a network location or from a WSDL file, and generates a WCF class containing client proxy methods that you can use to access the web service operations.\r\n\r\nSimilarly to the [Service Model Metadata - svcutil](https://docs.microsoft.com/en-us/dotnet/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe) tool for .NET Framework projects, the **dotnet-svcutil** is a command line tool for generating a web service reference compatible with .NET Core and .NET Standard projects. \r\n\r\nThe **dotnet-svcutil** tool is an alternative option to the [WCF Web Service Reference ](https://docs.microsoft.com/en-us/dotnet/core/additional-tools/wcf-web-service-reference-guide)Visual Studio connected service provider which first shipped with Visual Studio 2017 v15.5.  The **dotnet-svcutil** tool as a .NET Core CLI tool, however, can be run on multiple platforms like Linux and MacOS in addition to Windows.\r\n\r\n# Discussion\r\nPlease share your thoughts with us by commenting on GitHub issue dotnet/wcf#2894\r\n","Url":"https://github.com/dotnet/announcements/issues/70","RelatedDescription":"Open issue \"Introducing dotnet-svcutil\" (#70)"},{"Id":"321374728","IsPullRequest":false,"CreatedAt":"2018-05-08T22:56:33","Actor":"richlander","Number":"68","RawContent":null,"Title":"May 2018 .NET Updates","State":"open","Body":"# May 2018 .NET Updates\r\n\r\nThe following .NET updates were released this month. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework May 2018 Preview of Quality Rollup for Windows 10 April 2018 Update (version 1803)](https://blogs.msdn.microsoft.com/dotnet/2018/05/23/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-april-2018-update-version-1803/)\r\n* [.NET Framework May 2018 Preview of Quality Rollup for Windows 10 1709 (Fall Creators Update)](https://blogs.msdn.microsoft.com/dotnet/2018/05/21/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-1709-fall-creators-update/)\r\n* [.NET Framework May 2018 Security and Quality Rollup for Windows 10](https://blogs.msdn.microsoft.com/dotnet/2018/05/17/net-framework-may-2018-preview-of-quality-rollup-for-windows-10/)\r\n* [.NET Framework May 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-framework-may-2018-security-and-quality-rollup/)\r\n* [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) and related Docker images were updated for [Windows Server, version 1803](https://docs.microsoft.com/en-us/windows-server/get-started/get-started-with-1803).\r\n\r\n## .NET Core\r\n\r\n* [Announcing .NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/)\r\n* [.NET Core May 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-core-may-2018-update/)\r\n* [.NET Core 2.1 RC1](https://blogs.msdn.microsoft.com/dotnet/2018/05/07/announcing-net-core-2-1-rc-1/)\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and related Docker images were updated for [Windows Server, version 1803](https://docs.microsoft.com/en-us/windows-server/get-started/get-started-with-1803).\r\n\r\n## Previous Updates\r\n\r\n* [April 2018 .NET Updates](https://github.com/dotnet/announcements/issues/64)\r\n* [February 2018 Security and Quality Updates](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/68","RelatedDescription":"Open issue \"May 2018 .NET Updates\" (#68)"},{"Id":"321269154","IsPullRequest":false,"CreatedAt":"2018-05-08T17:03:39","Actor":"blowdart","Number":"67","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and .NET native version 2.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability that exists when .NET Framework and .NET Core improperly process XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework, .NET Core, or .NET native application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Framework, .NET Core, and .NET native applications handle XML document processing.\r\n\r\nIf your application is an ASP.NET Core application, developers are also advised to update to [ASP.NET Core 2.0.8](https://www.nuget.org/packages/Microsoft.AspNetCore.All/2.0.8).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/29578\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does not process signed XML, it is not affected by this vulnerability.\r\n* If your application targets .NET Core 1.x or .NET native 1.x, it is not affected as the vulnerable package is not available for these platforms.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, .NET native, or ASP.NET Core based application that uses System.Security.Cryptography.Xml with a version of 4.4.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Security.Cryptography.Xml | ≤4.4.1 |  4.4.2 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n---\r\n\r\nIf you're targeting ASP.NET Core 2.0 and using the `Microsoft.AspNetCore.All` metapackage:\r\n\r\n* Update its version number to [2.0.8](https://www.nuget.org/packages/Microsoft.AspNetCore.All/2.0.8) to pull in updated packages that update their transitive dependencies to the fixed version of `System.Security.Cryptography.Xml`.\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Security.Cryptography.Xml` version 4.4.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Security.Cryptography.Xml` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.Security.Cryptography.Xml` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n---\r\n\r\nIf you're targeting .NET native for a Universal Windows Platform (UWP) application, you should update your dependencies and republish your application.\r\n\r\nIf you submit an application to the Windows Store with an outdated reference, the store will update the reference automatically, which has the potential for compatibility issues. Thus, we recommend updating your application directly and testing its functionality before resubmitting.\r\n\r\n---\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0787](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-0765)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-05-08_","Url":"https://github.com/dotnet/announcements/issues/67","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\" (#67)"},{"Id":"319701474","IsPullRequest":false,"CreatedAt":"2018-05-02T20:31:57","Actor":"MichaelSimons","Number":"66","RawContent":null,"Title":".NET Framework Docker Samples have moved","State":"open","Body":"# .NET Framework Docker Samples have moved\r\nThe .NET Framework Docker samples have moved to the [samples folder of Microsoft/dotnet-framework-docker](https://github.com/Microsoft/dotnet-framework-docker/tree/master/samples).\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker #128](https://github.com/Microsoft/dotnet-framework-docker/issues/128)\r\n\r\n## Details\r\nThe .NET Framework Docker samples have been enhanced and moved to the [samples folder of Microsoft/dotnet-framework-docker](https://github.com/Microsoft/dotnet-framework-docker/tree/master/samples).\r\n\r\n- https://github.com/Microsoft/dotnet-framework-docker/pull/126\r\n- https://github.com/Microsoft/dotnet-framework-docker-samples/issues/22\r\n\r\nThe samples show various ways to use the .NET Framework and Docker together. You can use the samples as the basis of your own Docker images or just to play.\r\n\r\nThe samples exercise various levels of functionality. The [.NET Framework Docker sample](https://github.com/Microsoft/dotnet-framework-docker/blob/master/samples/dotnetapp/README.md) includes the most functionality, including build, unit testing, and pushing images to a container registry. The [ASP.NET Docker sample](https://github.com/Microsoft/dotnet-framework-docker/blob/master/samples/aspnetapp/README.md) includes instructions for testing images with [Azure Container Instances](https://azure.microsoft.com/services/container-instances/). The samples include detailed instructions for use with and without Docker.\r\n","Url":"https://github.com/dotnet/announcements/issues/66","RelatedDescription":"Open issue \".NET Framework Docker Samples have moved\" (#66)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1091393276047876097","CreatedAt":"2019-02-01T17:50:08+00:00","UserScreenname":"dotnet","Text":"Into a different kind of curlies? Our C++ friends are hiring too! https://t.co/CWYhdMAqnt","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":18,"FavoriteCount":5,"RawContent":null},{"Id":"1090788385487171584","CreatedAt":"2019-01-31T01:46:31+00:00","UserScreenname":"dotnet","Text":"The perks of working in the beautiful Pacific Northwest. https://t.co/RlSBioXtmL","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":58,"FavoriteCount":9,"RawContent":null},{"Id":"1090316959105740800","CreatedAt":"2019-01-29T18:33:14+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9qNspl Core updates in .NET Core 3.0 Preview 2 https://t.co/fTITKUpdtp","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":125,"FavoriteCount":65,"RawContent":null},{"Id":"1090308114073571328","CreatedAt":"2019-01-29T17:58:05+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Core 3 Preview 2 https://t.co/OgRjiaV6ys","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":401,"FavoriteCount":279,"RawContent":null},{"Id":"1088888461006782465","CreatedAt":"2019-01-25T19:56:54+00:00","UserScreenname":"dotnet","Text":"Debugging .NET Apps with Time Travel Debugging (TTD) by @fujiy https://t.co/VHwBMfDCSv","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":119,"FavoriteCount":69,"RawContent":null}]}},"RunOn":"2019-02-03T05:30:47.2671467Z","RunDurationInMilliseconds":19368}