{"Data":{"GitHubIssues":{"Issues":[{"Id":"342565385","IsPullRequest":false,"CreatedAt":"2018-07-19T03:23:28","Actor":"dustgrinder","Number":"1151","RawContent":null,"Title":"One single route is reported as 'The following routes are ambiguous'","State":"open","Body":"I repeatedly get errors such as this:\r\n\r\n`Error: System.InvalidOperationException: Failed to compare two elements in the array. --->` `System.InvalidOperationException: The following routes are ambiguous:`\r\n`'admin/product/{ProductUrl}' in 'X.Client.AdminWide.UpdateProduct'`\r\n`'admin/product/{ProductUrl}' in 'X.Client.AdminWide.UpdateProduct'`\r\n\r\nI have only one route 'admin/product/{ProductUrl}' in that page. Also, that page has been working for a while, but only shows that errors after I create a new page with a dynamic url (\"/user/{UserName}/orders\"), which really has nothing related to it.\r\n\r\nThe error only happens if the url is like \"/admin/product\" and doesn't happen when it's \"/admin\".\r\n\r\nThe oddest thing is, *sometimes* I would edit the route of a wholly unrelated page into \"/x/y\" and a random other page would break.\r\n\r\nWhat could be the case here?","Url":"https://github.com/aspnet/Blazor/issues/1151","RelatedDescription":"Open issue \"One single route is reported as 'The following routes are ambiguous'\" (#1151)"},{"Id":"342491812","IsPullRequest":true,"CreatedAt":"2018-07-18T21:05:34","Actor":"Suchiman","Number":"1150","RawContent":null,"Title":"Polyfill for TextDecoder","State":"open","Body":"I was toying around with server side blazor and the first culprit i run into was the lack of Edge support ðŸ˜‰ \r\nI've extracted the least amount of Polyfil necessary from https://github.com/samthor/fast-text-encoding/blob/master/text.js#L137 which worked for my experiments and still uses the native TextDecoder in other browsers.\r\nNot sure if this is acceptable or how / where i need to attribute this.\r\n\r\nFixes #1131\r\n","Url":"https://github.com/aspnet/Blazor/pull/1150","RelatedDescription":"Open PR \"Polyfill for TextDecoder\" (#1150)"},{"Id":"342437114","IsPullRequest":false,"CreatedAt":"2018-07-18T20:43:54","Actor":"Lupusa87","Number":"1149","RawContent":null,"Title":"Any plans to support System.Drawing.Common?","State":"closed","Body":"Maybe it is not so important to have this support on early development phase, but it's interesting if it can be supported and how high importance will it have.\r\n\r\nIt is based on mono, so maybe can be easy implemented.\r\n\r\nhttps://www.nuget.org/packages/System.Drawing.Common\r\nhttps://www.nuget.org/packages/Microsoft.Windows.Compatibility\r\nhttps://github.com/CoreCompat/CoreCompat\r\n\r\n![untitled](https://user-images.githubusercontent.com/40779557/42899160-2852c026-8a93-11e8-9425-ce7b5c7ec947.png)\r\n","Url":"https://github.com/aspnet/Blazor/issues/1149","RelatedDescription":"Closed issue \"Any plans to support System.Drawing.Common?\" (#1149)"},{"Id":"342414783","IsPullRequest":false,"CreatedAt":"2018-07-18T20:42:50","Actor":"doggy8088","Number":"1148","RawContent":null,"Title":"CPU High issue report","State":"closed","Body":"I made a sample project to reproduce this problem.  Please check this out: https://github.com/doggy8088/TodoMVC_Blazor/tree/CPUHighBug\r\n\r\nAfter clone my code, switch to `CPUHighBug` branch.  Open with Visual Studio 2017, then hit `Ctrl+F5`, then you will see the CPU high problem in Chrome.\r\n\r\nIf you need to turn off the Tab in Chrome, please hit `Shift+ESC` to open **Chrome Task Manager**, then Close the high cpu tab.","Url":"https://github.com/aspnet/Blazor/issues/1148","RelatedDescription":"Closed issue \"CPU High issue report\" (#1148)"},{"Id":"342311061","IsPullRequest":false,"CreatedAt":"2018-07-18T20:42:07","Actor":"malibVB","Number":"1147","RawContent":null,"Title":"favicon.ico is not displayed in browser tab","State":"closed","Body":"How to set the favico.ico for an blazor app created with vscode?\r\n\r\nThis is not working:\r\n `<link href=\"favicon.ico\" rel=\"icon\" type=\"image/x-icon\" />`\r\n\r\nI also tried to copy the icon to the path of index.html\r\nIt's also not working.","Url":"https://github.com/aspnet/Blazor/issues/1147","RelatedDescription":"Closed issue \"favicon.ico is not displayed in browser tab\" (#1147)"},{"Id":"342135577","IsPullRequest":true,"CreatedAt":"2018-07-18T00:37:21","Actor":"rynowak","Number":"1146","RawContent":null,"Title":"Add HTML Block rewriting","State":"open","Body":"/cc @SteveSandersonMS - handing this off for you to do the runtime piece.\r\n\r\nRewrites HTML-only subtrees of the IR in an HTML 'block' node with simple string content. \r\n\r\nThis will rely on new runtime/rendertree support in order to work E2E.\r\n","Url":"https://github.com/aspnet/Blazor/pull/1146","RelatedDescription":"Open PR \"Add HTML Block rewriting\" (#1146)"},{"Id":"341651385","IsPullRequest":true,"CreatedAt":"2018-07-17T22:18:42","Actor":"rynowak","Number":"1139","RawContent":null,"Title":"Fix Blazor tooling on 15.8","State":"closed","Body":"/cc @SteveSandersonMS ","Url":"https://github.com/aspnet/Blazor/pull/1139","RelatedDescription":"Closed or merged PR \"Fix Blazor tooling on 15.8\" (#1139)"},{"Id":"342108094","IsPullRequest":false,"CreatedAt":"2018-07-17T22:13:18","Actor":"gnpretorius","Number":"1145","RawContent":null,"Title":"Redirecting between pages (parent> child) but UI is not updating","State":"open","Body":"Not sure if this is a bug or if I'm using it the wrong way. Let me try and explain what I'm trying to do. \r\n\r\n**In the Vue world**\r\nTypically I would have the following components: \r\n\r\n- **App** (the main component page with a ```router-view```)\r\n- - **List** (a component with a list of items and a  ```router-view```)\r\n- - - **Create** (a component with the create details on)\r\n\r\nThis means I could deep link into the create page i.e.\r\n\r\n- root.com/items (The list of items)\r\n- root.com/items/create (This list of items with the create dialog visible)\r\n\r\nNavigating between the two pages would simply show / hide the create section\r\n\r\ne.g. **root.com/items**\r\n```\r\n-------------------------\r\n| Item A | Create | Edit | \r\n| Item B | Create | Edit | \r\n| Item B | Create | Edit | \r\n-------------------------\r\n```\r\ne.g. **root.com/items/create**\r\n```\r\n-------------------------\r\n|                        |\r\n| Name:     ======       |\r\n| Type:      ======      |\r\n|                        |\r\n| Item A | Create | Edit | \r\n| Item B | Create | Edit | \r\n| Item B | Create | Edit | \r\n-------------------------\r\n```\r\n\r\n**In the Blazor world**\r\n\r\nI tried the same in Blazor. The only way to achieve the nested routing was to have the following: \r\n\r\n- MainLayout (inherits from BlazorLayoutComponent)\r\n- - List Page (Has a page directive with the url \"/\" and inherits from BlazorLayoutComponent)\r\n- - - Create Page (Has a page directive with the url \"/create\")\r\n\r\nI have a link on each page linking between them i.e. ```list``` -> ```new``` and ```new``` -> ```list```. \r\n\r\n**The bug**\r\n\r\nWhen I go from the ```list``` page to the ```new``` page, the control shows and everything is fine, however when I navigate back, the UI does not update. The URL does update, just not the UI.\r\n\r\nIs this type of nested routing supported in Blazor? Is it a future consideration? The multi-level child routing in Vue is pretty cool and would be good to see some of this in Blazor ðŸ˜„ \r\n\r\nThanks and shout if it's not clear. \r\nG\r\n","Url":"https://github.com/aspnet/Blazor/issues/1145","RelatedDescription":"Open issue \"Redirecting between pages (parent> child) but UI is not updating\" (#1145)"},{"Id":"341998941","IsPullRequest":false,"CreatedAt":"2018-07-17T16:47:16","Actor":"Stuart88","Number":"1144","RawContent":null,"Title":"Blank page when running preview app","State":"closed","Body":"Downloaded the latest Blazor Language Services from [here](https://marketplace.visualstudio.com/items?itemName=aspnet.blazor) and have gone through the official guide for getting things going.\r\n\r\nThe example app, upon starting a new asp.net blazor project, just shows 'Loading...' in the top left corner, then eventually ends with a white screen.\r\n\r\nThis happens in Firefox and IE, both on the latest versions.\r\n\r\nHelp!\r\n\r\nCheers.","Url":"https://github.com/aspnet/Blazor/issues/1144","RelatedDescription":"Closed issue \"Blank page when running preview app\" (#1144)"},{"Id":"341813701","IsPullRequest":false,"CreatedAt":"2018-07-17T14:52:07","Actor":"Daendel","Number":"1143","RawContent":null,"Title":"Cannot call a method without parameters from JavaScript to C#","State":"closed","Body":"When I try to call a method without parameters:\r\n\r\n```\r\nvar method = Blazor.platform.findMethod(\"TransactionTypeCreator.Client\",\r\n                \"TransactionTypeCreator.Client.Services\",\r\n                \"AppState\",\r\n                \"UploadInput\");\r\n\r\nBlazor.platform.callMethod(method, null, null);\r\n```\r\n\r\nI get an error in MonoPlatform.ts (line 51): \r\n`if (args.length > 4) {     <- Uncaught TypeError: Cannot read property 'length' of null`\r\n\r\nWhy do I need to pass parameters?","Url":"https://github.com/aspnet/Blazor/issues/1143","RelatedDescription":"Closed issue \"Cannot call a method without parameters from JavaScript to C#\" (#1143)"},{"Id":"341798341","IsPullRequest":false,"CreatedAt":"2018-07-17T07:30:52","Actor":"MarekPokornyOva","Number":"1142","RawContent":null,"Title":"Idea: Startup argument","State":"open","Body":"Hi,\r\nI was experimenting with hosting Blazor (version 0.4) on a page - to integrate with a CMS single pages (server side driven routing) instead on SPA as is supposed Blazor setup.\r\n\r\n**Changes:**\r\nblazor.js\r\n```\r\n\tline 344: var allScriptElems, thisScriptElem, ..., ex_1, bootArgs;\r\n\tline 366: bootArgs = thisScriptElem.getAttribute('args');\r\n\tline 378: Environment_1.platform.callEntryPoint(entryPointAssemblyName, entryPointMethod, [Environment_1.platform.toDotNetString(bootArgs)]);\r\n\r\n```\r\nProgram.cs (in client project)\r\n```\r\nstatic void MainWithArgs(string args)\r\n{\r\n\tvar serviceProvider = new BrowserServiceProvider(services =>\r\n\t{\r\n\t\t// Add any custom services here\r\n\t});\r\n\r\n\tstring[] args2 = ParseArgs(args);\r\n\tnew BrowserRenderer(serviceProvider).AddComponent(Type.GetType(args2[0]), args2[1]);\r\n}\r\n\r\n```\r\nUsage example in MVC razor view (server side project):\r\n`<script src=\"_framework/blazor.js\" main=\"MvcSite01.Client.dll\" entrypoint=\"MvcSite01.Client.Program::MainWithArgs\" args='/component:\"MvcSite01.Client.Pages.@(Model.ClientScript), MvcSite01.Client\" /element:\"app\"' references=\"MvcSite01.Shared.dll,Microsoft.AspNetCore.Blazor.Browser.dll,Microsoft.AspNetCore.Blazor.dll,Microsoft.Extensions.DependencyInjection.Abstractions.dll,Microsoft.Extensions.DependencyInjection.dll,mscorlib.dll,netstandard.dll,System.Core.dll,System.dll,System.Net.Http.dll\" linker-enabled=\"true\"></script>\r\n`\r\n\r\nThe startup argument was useful to drive inserted component during the experiment but it can be used any way a developer like, of course.","Url":"https://github.com/aspnet/Blazor/issues/1142","RelatedDescription":"Open issue \"Idea: Startup argument\" (#1142)"},{"Id":"341735673","IsPullRequest":true,"CreatedAt":"2018-07-17T05:43:30","Actor":"WaiChungK","Number":"1141","RawContent":null,"Title":"Update README.md","State":"closed","Body":"Hello, this is my first time contributing to an open source project. I noticed that your contribution link does not link to the correct contribution page. I have made changes to fix the url","Url":"https://github.com/aspnet/Blazor/pull/1141","RelatedDescription":"Closed or merged PR \"Update README.md\" (#1141)"},{"Id":"341733144","IsPullRequest":true,"CreatedAt":"2018-07-17T01:43:56","Actor":"WaiChungK","Number":"1140","RawContent":null,"Title":"Update README.md","State":"closed","Body":"Hello, this is my first time contributing to an open source project. I noticed that your contribution link does not link to the correct contribution page. I have made changes to fix the url","Url":"https://github.com/aspnet/Blazor/pull/1140","RelatedDescription":"Closed or merged PR \"Update README.md\" (#1140)"},{"Id":"341516151","IsPullRequest":false,"CreatedAt":"2018-07-16T15:13:42","Actor":"vertonghenb","Number":"1138","RawContent":null,"Title":"Visual Studio for mac not supported","State":"closed","Body":"Apparently  Visual Studio for Mac doesn't Support C# 7.3 thus not able to build a blazor app.\r\n\r\nDotnet 2.1.300 installed (and possible to build/run blazor apps on mac via CLI), but Visual Studio For Mac is not. \r\n\r\n`Error: CSC : error CS1617: Invalid option '7.3' for /langversion. Use '/langversion:?' to list supported values.`","Url":"https://github.com/aspnet/Blazor/issues/1138","RelatedDescription":"Closed issue \"Visual Studio for mac not supported\" (#1138)"},{"Id":"341248672","IsPullRequest":false,"CreatedAt":"2018-07-16T13:06:27","Actor":"Lupusa87","Number":"1134","RawContent":null,"Title":"Improve js interop with dynamic content execution","State":"closed","Body":"My experimental [project](http://lupusablazordemos.azurewebsites.net/) is working **very slow** right now.\r\n\r\nSo I think about optimization strategies and hope will achieve better performance. This strategies are different but I think this one is interesting not only for my project.\r\n\r\nI am using **canvas** and manipulating it via js interop, it means I do heavy operations with interop, many calls, passing parameters, maintain large code etc.\r\n\r\nLet's imagine I have **30 js registered function** (draw line, rect, arc etc) and mixing them (as will be required from projects logic) and let's say I **100 times** call, pass parameters, receive results from/to js. And it is repeating on every redraw (one second or less interval for smooth clock)!\r\n\r\nThis 30 js functions are like underlying level to access html5 canvas, it can be also referenced nuget package.\r\n\r\nAll this actions: call, passing params, return results have **time cost** and **probably is one reason for slow performance**.\r\n\r\nSo this question popups logically - can we reduce calls amount? For example collect all js functions and **call one time all this commands**.\r\n\r\nI think it is possible, because js allows us (with many ways) to **evalute code** (execute string containing js script).\r\n\r\nSo I can use string builder, collect all necessary js logic and call it one time. Please note that in most case **I don't need results from js**, if I need only to pass in another js function.\r\n\r\nAs I mentioned there is **many ways** to execute dynamic js scripts, first option is **evil()** function but I don't want now to go in details with way is better.\r\nI did **small research** and there can be found optimal way to do this (technique not matters for now).\r\nThere are security, debuging, preformance issues but let's forget about them for now.\r\n\r\nI try to **model theoretical structure** to improve js interop, it to become more dynamic and interoperable. Because as it seems we can't escape from js for next months/years and we need to find ways to use it in efficient way.\r\n\r\nWe can make parallel to **sql queries**, where we can build any query and then server will execute it.\r\n\r\nOk, I think it sounds good, less js functions, less calls, more flexibility and custom approach.\r\nNo one denies me to do it myself, maybe not perfectly but to try :)\r\n\r\n**Why I open this issue?**\r\n First I want to hear what people think about this;\r\n Second I think this improvement  (if it has sense) not should do all developers separately, we can say that someone will implement it and share as nuget package, but I think it's better to do blazor itself because we expect **more competentive people** in blazor team, **built-in feature** will be better and community always can contribute any improvement.\r\n\r\nI will be happy if you think about this and measure does it have perspective or not, is this no sense or **real way for some improvement**.\r\n\r\nHope text is understandable, for now it is **only theoretical** but if there will be interes or I will do it myself I will share my code and results about performance.\r\n\r\nThank you, **waiting for your activity** :)\r\n\r\nI know there are many open issues and many things to think and to do, but IMHO this issue can be useful too.\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1134","RelatedDescription":"Closed issue \"Improve js interop with dynamic content execution\" (#1134)"},{"Id":"341280865","IsPullRequest":false,"CreatedAt":"2018-07-16T13:02:43","Actor":"danroth27","Number":"1136","RawContent":null,"Title":"Minify blazor.server.js","State":"closed","Body":"","Url":"https://github.com/aspnet/Blazor/issues/1136","RelatedDescription":"Closed issue \"Minify blazor.server.js\" (#1136)"},{"Id":"341484363","IsPullRequest":false,"CreatedAt":"2018-07-16T12:10:43","Actor":"uwbwsvd","Number":"1137","RawContent":null,"Title":"empty sreen","State":"closed","Body":"At first I'm not very familiar with all these things but interested.\r\nI tried this:\r\nhttps://blazor.net/docs/get-started.html\r\nAt Point 4 the browser opened: Loading ... Then an empty screen.\r\nI can't find any error messages.\r\nI have installed Visual Studio Community (Windows 10 Pro 1803)  and Blazor today.","Url":"https://github.com/aspnet/Blazor/issues/1137","RelatedDescription":"Closed issue \"empty sreen\" (#1137)"},{"Id":"341253517","IsPullRequest":false,"CreatedAt":"2018-07-14T23:51:56","Actor":"YandyZaldivar","Number":"1135","RawContent":null,"Title":"WebSockets support","State":"closed","Body":"There is this issue #20 tracking SignalR client support.\r\n\r\nI am opening this to follow a standard client WebSockets implementation. Maybe it comes from Mono making `System.Net.WebSockets` available, a separate package/api using JavaScript interop or a new API for Blazor.\r\n\r\nIs there any projection on this already?","Url":"https://github.com/aspnet/Blazor/issues/1135","RelatedDescription":"Closed issue \"WebSockets support\" (#1135)"},{"Id":"341244787","IsPullRequest":false,"CreatedAt":"2018-07-14T15:37:33","Actor":"Lupusa87","Number":"1133","RawContent":null,"Title":"Change standalone web.config to use Cache-Control headers","State":"open","Body":"I published updated [project](http://lupusablazordemos.azurewebsites.net) to azure.\r\nWhen I navigate to site Chrome was showing old version, Firefox got error. Edge showed new version but I am not sure there was loaded and cashed previous version.\r\n**I manually cleared browsers cache**, Chrome and Firefox downloaded updated files and run site as expected.\r\n\r\nOf course we need user to see new version for after all new publishing.\r\n\r\nShould I trigger this somehow from my code or should blazor do it automatically?","Url":"https://github.com/aspnet/Blazor/issues/1133","RelatedDescription":"Open issue \"Change standalone web.config to use Cache-Control headers\" (#1133)"},{"Id":"341031607","IsPullRequest":false,"CreatedAt":"2018-07-13T16:46:01","Actor":"Worble","Number":"1127","RawContent":null,"Title":"RenderFragment always refreshes if component or parent component calls StateHasChanged, even if there is no change to the fragment","State":"closed","Body":"Is there any way to prevent or control this behaviour?","Url":"https://github.com/aspnet/Blazor/issues/1127","RelatedDescription":"Closed issue \"RenderFragment always refreshes if component or parent component calls StateHasChanged, even if there is no change to the fragment\" (#1127)"},{"Id":"341071568","IsPullRequest":false,"CreatedAt":"2018-07-13T15:53:37","Actor":"rynowak","Number":"1132","RawContent":null,"Title":"Add object pool for ServerSide RenderFrame serialization","State":"open","Body":"Follow up item from #1116\r\n\r\nWe should consider pooling the byte arrays/streams from the render frame writer.","Url":"https://github.com/aspnet/Blazor/issues/1132","RelatedDescription":"Open issue \"Add object pool for ServerSide RenderFrame serialization\" (#1132)"},{"Id":"341071254","IsPullRequest":false,"CreatedAt":"2018-07-13T15:52:38","Actor":"rynowak","Number":"1131","RawContent":null,"Title":"Address TODO: Also support browsers that don't have TextDecoder (e.g., Edge)","State":"open","Body":"Follow up item from #1116\r\n\r\nThis is a TODO in the Blazor server boot script. We use TextDecoder where it's available, but don't have any support yet for browsers without it.","Url":"https://github.com/aspnet/Blazor/issues/1131","RelatedDescription":"Open issue \"Address TODO: Also support browsers that don't have TextDecoder (e.g., Edge)\" (#1131)"},{"Id":"341061202","IsPullRequest":false,"CreatedAt":"2018-07-13T15:23:53","Actor":"rynowak","Number":"1130","RawContent":null,"Title":"Allow server boot script to specify a non-default URL for startup","State":"open","Body":"Follow up item from #1116\r\n\r\nThe server boot script is hardcoded to use `/_blazor` as its URL for connected to SignalR. We should allow the developer to specify this URL. This will also be needed when the application has a base path.","Url":"https://github.com/aspnet/Blazor/issues/1130","RelatedDescription":"Open issue \"Allow server boot script to specify a non-default URL for startup\" (#1130)"},{"Id":"341060630","IsPullRequest":false,"CreatedAt":"2018-07-13T15:22:22","Actor":"rynowak","Number":"1129","RawContent":null,"Title":"Make a sensible set of E2E tests run on Server-Side Blazor","State":"open","Body":"Follow up item from https://github.com/aspnet/Blazor/pull/1116","Url":"https://github.com/aspnet/Blazor/issues/1129","RelatedDescription":"Open issue \"Make a sensible set of E2E tests run on Server-Side Blazor\" (#1129)"},{"Id":"341032298","IsPullRequest":true,"CreatedAt":"2018-07-13T14:06:02","Actor":"SteveSandersonMS","Number":"1128","RawContent":null,"Title":"Implementation of JS->.NET interop instance method calls","State":"open","Body":"This is in case we decide the best way to deal with accessing services from JS calls in #1116 is by having support for calling instance methods.\r\n\r\n@rynowak Would be interested in your preference on whether to use this approach, or the `ServicesAccessor.CurrentServices` asynclocal approach.","Url":"https://github.com/aspnet/Blazor/pull/1128","RelatedDescription":"Open PR \"Implementation of JS->.NET interop instance method calls\" (#1128)"},{"Id":"340664971","IsPullRequest":true,"CreatedAt":"2018-07-13T08:49:35","Actor":"SteveSandersonMS","Number":"1123","RawContent":null,"Title":"Make index.html static again","State":"closed","Body":"Previously, we \"built\" the `index.html` file by transforming it during the build, replacing `<script type='blazor-boot'>` with a machine-generated tag that contained the app's boot config.\r\n\r\nThis worked fine, but had the significant drawback that you have no way of launching a Blazor app from any other HTML file. For example, you couldn't render an HTML page on the server and start up a Blazor app from it, because you wouldn't have any way of transforming the `<script type='blazor-boot'>`.\r\n\r\nWith this PR, `<script type='blazor-boot'>` is replaced by a plain old normal script tag (`<script src='_framework/blazor.webassembly.js'></script>` that you can put in any page you want, whether it's a static `index.html` file, or something you're generating at runtime on the server.\r\n\r\nThis is a breaking change, in that `<script type='blazor-boot'>` will no longer work. Developers need to swap it for the new tag mentioned above. We need to emphasise this in the upgrade steps in release notes.","Url":"https://github.com/aspnet/Blazor/pull/1123","RelatedDescription":"Closed or merged PR \"Make index.html static again\" (#1123)"},{"Id":"340921981","IsPullRequest":false,"CreatedAt":"2018-07-13T08:06:09","Actor":"anirudhagupta","Number":"1126","RawContent":null,"Title":"Blazor Release compile exposing the path of developer machine.","State":"open","Body":"I was in travel last week and I see a tweet replied by steve about clock demo. I talk with that person on FB and chat with him if his demo is published under Debug.\r\n\r\nWe both realize the code is compiled under Release and later on I open the dll and able to see the path of his developer machine. \r\n\r\nI think the path can be either relative but not absolute or should not expose the machine path of developer in first place, This could be a lead to some hack.\r\n\r\nI was thinking for another scenario last week, If someone made a blazor app and user use it, user can easily figure out some endpoint which never should be exposed in first place.\r\n\r\nFor example Facebook.com have a secret admin panel at admin.facebook.com user will never know the ajax endpoint since they are not seeing anything without login, in Blazor I can figure out what kind of html admin.faceook.com have ( I am saying that admin.facebook.com is part of same app or I should better say facebook.com/admin) and what ajax endpoint they might have. Is this not a security issues.\r\n\r\nI am not a security expert but this thing make me worried (I am really new to WASM). Is this thing can lead to some trouble, for a common person who didn't prepare himself for DDOS, exposing ajax endpoint could cause a lot of trouble.\r\n\r\nFrom this thread 2 thing need to be checked.\r\n\r\n1. Exposing the develop machine path.\r\n2. Security for exposing ajax Endpoint (Someone can DDOS it by figure out the endpoint easily).\r\n3. Are we going to have any security for point 2 or does it already solved by any kind of thing implemented here.\r\n\r\nThanks\r\n\r\ncc @Lupusa87 @SteveSandersonMS ","Url":"https://github.com/aspnet/Blazor/issues/1126","RelatedDescription":"Open issue \"Blazor Release compile exposing the path of developer machine.\" (#1126)"},{"Id":"340765867","IsPullRequest":false,"CreatedAt":"2018-07-12T19:24:05","Actor":"galvesribeiro","Number":"1125","RawContent":null,"Title":"Failure binding on <select> when both \"bind\" and \"onchange\" are used","State":"closed","Body":"Hey folks,\r\n\r\nWhen I do this: `<select bind=@someVariable onchange=@SomeCallbackMethod>...</select>` the `SomeCallbackMethod` is never called. If I remove the `bind` it works just fine.\r\n\r\nIs that something expected?\r\n\r\nThanks","Url":"https://github.com/aspnet/Blazor/issues/1125","RelatedDescription":"Closed issue \"Failure binding on <select> when both \"bind\" and \"onchange\" are used\" (#1125)"},{"Id":"340674252","IsPullRequest":false,"CreatedAt":"2018-07-12T15:44:24","Actor":"JoelW187","Number":"1124","RawContent":null,"Title":"Access a service through code (not a cshtml file)","State":"closed","Body":"Is there currently anyway to get a reference to a service (particularly, a singleton) through a client class other than a .cshtml?\r\n\r\nI tried this:\r\n\r\n```\r\n    public class TestUtils : Microsoft.AspNetCore.Blazor.Components.BlazorComponent\r\n    {\r\n        [Microsoft.AspNetCore.Blazor.Components.Inject]\r\n        public Services.AppState appstate { get; set; }\r\n    }\r\n```\r\n\r\nBut my appstate property is always null.\r\n\r\nIf there is not currently a way to do this I propose that it be added.\r\n\r\n/joel","Url":"https://github.com/aspnet/Blazor/issues/1124","RelatedDescription":"Closed issue \"Access a service through code (not a cshtml file)\" (#1124)"},{"Id":"340580962","IsPullRequest":false,"CreatedAt":"2018-07-12T14:41:29","Actor":"lakani","Number":"1122","RawContent":null,"Title":"WASM: [System.Net.Http.HttpRequestException] TypeError: Failed to fetch","State":"closed","Body":"i get the following execption \r\n\r\nFailed to load http://localhost:5001/api/TodoItems/: No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'http://localhost:32899' is therefore not allowed access. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.\r\nMonoPlatform.ts:202 WASM: [System.Net.Http.HttpRequestException] TypeError: Failed to fetch\r\nmodule.printErr @ MonoPlatform.ts:202\r\nMonoPlatform.ts:202 WASM:   at Microsoft.AspNetCore.Blazor.Browser.Http.BrowserHttpMessageHandler.SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken) <0x1e07650 + 0x0038e> in <7da830e0eabd429898584695ab9fd9e5>:0 \r\nmodule.printErr @ MonoPlatform.ts:202\r\nMonoPlatform.ts:202 WASM:   at System.Net.Http.HttpClient.SendAsyncWorker (System.Net.Http.HttpRequestMessage request, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken) <0x1df4860 + 0x0017e> in <86e6b54b599b4aa59c8ecb13ffc8f086>:0 \r\nmodule.printErr @ MonoPlatform.ts:202\r\nMonoPlatform.ts:202 WASM:   at System.Net.Http.HttpClient.GetStringAsync (System.String requestUri) <0x1de51e0 + 0x000ee> in <86e6b54b599b4aa59c8ecb13ffc8f086>:0 \r\nmodule.printErr @ MonoPlatform.ts:202\r\nMonoPlatform.ts:202 WASM:   at Microsoft.AspNetCore.Blazor.HttpClientJsonExtensions.GetJsonAsync[T] (System.Net.Http.HttpClient httpClient, System.String requestUri) <0x1f23d58 + 0x000c0> in <72270648a3b54698885c6ba1c18107cc>:0 \r\nmodule.printErr @ MonoPlatform.ts:202\r\nMonoPlatform.ts:202 WASM:   at WebApplication7.Pages.TodoPage.OnInitAsync () <0x1f15960 + 0x00130> in <284c865a052f41afa310cba3c98a6c31>:0 \r\n\r\nwhile calling \r\n\r\n`_todos = await Http.GetJsonAsync<TodoItem[]>(\"http://localhost:5001/api/TodoItems/\");`\r\n\r\ni got two application, each one resides on a differnt domain\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1122","RelatedDescription":"Closed issue \"WASM: [System.Net.Http.HttpRequestException] TypeError: Failed to fetch\" (#1122)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-07-19T05:30:03.2058258Z","RunDurationInMilliseconds":1369}