{"Data":{"GitHub":{"Issues":[{"Id":"497991312","IsPullRequest":true,"CreatedAt":"2019-09-25T01:31:19","Actor":"RussKie","Number":"1969","RawContent":null,"Title":"Prep'ing for 3.0.1 set the next patch release to 3.0.1","State":"closed","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1969)","Url":"https://github.com/dotnet/winforms/pull/1969","RelatedDescription":"Closed or merged PR \"Prep'ing for 3.0.1 set the next patch release to 3.0.1\" (#1969)"},{"Id":"497988384","IsPullRequest":true,"CreatedAt":"2019-09-25T00:40:01","Actor":"RussKie","Number":"1968","RawContent":null,"Title":"Fix 1951 clipboard.get text adds garbage terminator","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #1951\r\nA cherry pick of the fix applied to the master 13c624b13e5a890f2d43c458dad503466d278aca\r\n\r\n\r\n## Proposed changes\r\n\r\n- Fix to a common mistake when switching from a string building API that wasn't sized to a sized one and ending up with garbage at the end. \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- With the fix retrieval of HTML data from the clipboard will only have the expected data.\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- unit tests\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1968)","Url":"https://github.com/dotnet/winforms/pull/1968","RelatedDescription":"Open PR \"Fix 1951 clipboard.get text adds garbage terminator\" (#1968)"},{"Id":"497923992","IsPullRequest":true,"CreatedAt":"2019-09-24T21:05:30","Actor":"hughbe","Number":"1967","RawContent":null,"Title":"Add more Control/ListView related tests","State":"open","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1967)","Url":"https://github.com/dotnet/winforms/pull/1967","RelatedDescription":"Open PR \"Add more Control/ListView related tests\" (#1967)"},{"Id":"496751545","IsPullRequest":true,"CreatedAt":"2019-09-24T16:38:46","Actor":"vladimir-krestov","Number":"1954","RawContent":null,"Title":"WIP: [Accessibility][HC] Fixing DataGridViewComboBoxCell text color in HighContrast1/2 themes","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #1953 \r\n\r\n## Proposed changes\r\n\r\n- Change default cell fore color\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- A user gets another text color in HC themes\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- No\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n![image](https://user-images.githubusercontent.com/49272759/65384780-13fc1600-dd2f-11e9-8a5a-724eda60cb02.png)\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n![image](https://user-images.githubusercontent.com/49272759/65384784-19596080-dd2f-11e9-90f7-a99bc6ce8617.png)\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->.NET Core Version: 3.1.0-preview1.19458.7\r\n- Microsoft Windows [Version 10.0.18362.356]\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1954)","Url":"https://github.com/dotnet/winforms/pull/1954","RelatedDescription":"Closed or merged PR \"WIP: [Accessibility][HC] Fixing DataGridViewComboBoxCell text color in HighContrast1/2 themes\" (#1954)"},{"Id":"497799770","IsPullRequest":true,"CreatedAt":"2019-09-24T16:35:54","Actor":"vladimir-krestov","Number":"1966","RawContent":null,"Title":"[Accessibility][HC] Fixing DataGridViewComboBoxCell text color in HighContrast1/2 themes","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #1953\r\n**Created instead PR #1954**\r\nOriginal bug:\r\n- [Bug 820338:](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/820338) Accessibility: [MAS42A] [HC 1/2]: The text color is incorrect in DGV on HC 1/2 theme\r\n\r\n## Proposed changes\r\n\r\n- Change default cell fore color\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- A user gets another text color in HC themes\r\n\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- No\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n![image](https://user-images.githubusercontent.com/49272759/65530769-380f5100-df01-11e9-8e30-460414e10d93.png)\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n![image](https://user-images.githubusercontent.com/49272759/65530779-3e053200-df01-11e9-8ce5-e24916ec9bf5.png)\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing\r\n \r\n\r\n<!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .NET Core Version: 3.1.0-preview1.19458.7\r\n- Microsoft Windows [Version 10.0.18362.356]\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1966)","Url":"https://github.com/dotnet/winforms/pull/1966","RelatedDescription":"Open PR \"[Accessibility][HC] Fixing DataGridViewComboBoxCell text color in HighContrast1/2 themes\" (#1966)"},{"Id":"497662241","IsPullRequest":false,"CreatedAt":"2019-09-24T12:39:26","Actor":"ryancheung","Number":"1965","RawContent":null,"Title":"Manually rendering IME candidate list bugged(for fullscreen game).","State":"open","Body":"* .NET Core Version: 3.0\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n\r\nI reported this bug in MSDN dev forum before, but got no response. I don't why there's no any Microsoft dev caring about this issue. So again I put it here:\r\n\r\nGiven I'm making a game based on Winforms and SharpDX. The game will run with exclusive fullscreen mode. Then I have to render the candidate list of IME manually in game, just like what WoW Classic do.\r\n\r\nBut unfornately, It just **bugged**, there's no candidate list(or no candidate changed event) in most typing(I'm using the default Chinese IME os provided, Microsoft Pinyin).\r\n\r\nThen I made a project to reproduce the bug:\r\n\r\n.Net Framework version: https://github.com/ryancheung/WindowsForms.IMEHelper\r\n.Net Core 3.0 version: https://github.com/ryancheung/WindowsForms.IMEHelper.Core\r\n\r\n.Net Framework version runs without any crash, but it reproduces the bug extractly.\r\n.Net Core 3.0 version will crash if got `IMM.ImnChangeCandidate` event. Maybe this is another bug in donet core. But it still reproduces the bug.\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n\r\nIt does not emit `IMM.ImnChangeCandidate` event on every correct text composition of Chinese Pinyin.\r\n\r\n**Expected behavior:**\r\n\r\nIt should emit `IMM.ImnChangeCandidate` event on every correct text composition of Chinese Pinyin.\r\n\r\n**Minimal repro:**\r\n\r\n.Net Framework version: https://github.com/ryancheung/WindowsForms.IMEHelper (open with VS 2017)\r\n.Net Core 3.0 version: https://github.com/ryancheung/WindowsForms.IMEHelper.Core (open with VS2019)","Url":"https://github.com/dotnet/winforms/issues/1965","RelatedDescription":"Open issue \"Manually rendering IME candidate list bugged(for fullscreen game).\" (#1965)"},{"Id":"497617763","IsPullRequest":false,"CreatedAt":"2019-09-24T11:06:11","Actor":"epikgit","Number":"1964","RawContent":null,"Title":"Error in opening the winform designer for a certain form","State":"open","Body":"* .NET Core Version: 3.0.100\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Problem description:**\r\nI've got a small application with 6 forms migrated from .NET Framework 4.7.\r\nNow I'm on .NET Core 3.0 and the application builds regularly an works well.\r\nWhen I try to design my forms, the designer opens regularly for all of them except one that throw a strange error:\r\n_Unable to find method 'SendRequestAsync/2' on {no object} for the following reasons: An argument was not supplied for a required parameter._\r\n\r\nCall stack:\r\n```\r\nat  System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat  System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task  task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task  task)\r\nat StreamJsonRpc.JsonRpc.d__92`1.MoveNext()\r\n---  End of stack trace from previous location where exception was thrown ---\r\nat  System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat  System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task  task)\r\nat  Microsoft.VisualStudio.WinForms.Protocol.WinFormsServer.d__31`1.MoveNext()\r\n---  End of stack trace from previous location where exception was thrown ---\r\nat  System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat  System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task  task)\r\nat  Microsoft.VisualStudio.Design.Remote.DesignerSession.<>c__DisplayClass54_0.<b__0>d.MoveNext()\r\n---  End of stack trace from previous location where exception was thrown ---\r\nat  System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat  System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task  task)\r\nat  Microsoft.VisualStudio.Threading.JoinableTask.CompleteOnCurrentThread()\r\nat  Microsoft.VisualStudio.Threading.JoinableTask`1.CompleteOnCurrentThread()\r\nat  Microsoft.VisualStudio.Threading.JoinableTaskFactory.Run[T](Func`1 asyncMethod,  JoinableTaskCreationOptions creationOptions)\r\nat  Microsoft.VisualStudio.Threading.JoinableTaskFactory.Run[T](Func`1  asyncMethod)\r\nat  Microsoft.VisualStudio.Design.Remote.DesignerSession.Run[T](Func`1 func)\r\nat  Microsoft.VisualStudio.Design.Remote.DesignerSession.InitializeRootComponent(CodeTypeDeclaration  typeDeclaration)\r\nat  Microsoft.VisualStudio.WinForms.RemoteClient.Loader.RemoteCodeDomDesignerLoader.PerformLoad(IDesignerSerializationManager  manager)\r\nat  Microsoft.VisualStudio.Design.Serialization.CodeDom.VSCodeDomDesignerLoader.PerformLoad(IDesignerSerializationManager  serializationManager)\r\n---  End of stack trace from previous location where  exception was thrown ---\r\nat  Microsoft.VisualStudio.Design.Serialization.CodeDom.VSCodeDomDesignerLoader.PerformLoad(IDesignerSerializationManager  serializationManager)\r\nat  Microsoft.VisualStudio.Design.Serialization.CodeDom.VSCodeDomDesignerLoader.DeferredLoadHandler.Microsoft.VisualStudio.TextManager.Interop.IVsTextBufferDataEvents.OnLoadCompleted(Int32  fReload)\r\n```\r\n\r\n**Minimal repro:**\r\nIt is difficult to reproduce the error because the form is quite vaste. \r\nI hope someone can understand the call stack to put me in the right direction to allow me to reproduce only the part of the form code that probably throws the error.\r\n\r\nI can only add these generic information:\r\n- the form inherits from System.Windows.Form.Form like any other in the application (I remind that the others forms open regularly in the VS editor);\r\n- the form has a parameterless constructor and one constructor with a string parameter like many others forms;\r\n- I added some custom controls in the form but I did the same with the others;\r\n- the form has been built \"regularly\" with a main class and a partial class in .Designer.cs file like the others.\r\n\r\n[edit] re-formatted the stack trace","Url":"https://github.com/dotnet/winforms/issues/1964","RelatedDescription":"Open issue \"Error in opening the winform designer for a certain form\" (#1964)"},{"Id":"497364696","IsPullRequest":true,"CreatedAt":"2019-09-24T10:12:02","Actor":"hughbe","Number":"1958","RawContent":null,"Title":"Cleanup DWebBrowserEvents2 and add some WebBrowser tests","State":"closed","Body":"## Proposed Changes\r\n- Cleanup DWebBrowserEvents2\r\n- Add some WebBrowser tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1958)","Url":"https://github.com/dotnet/winforms/pull/1958","RelatedDescription":"Closed or merged PR \"Cleanup DWebBrowserEvents2 and add some WebBrowser tests\" (#1958)"},{"Id":"497570900","IsPullRequest":true,"CreatedAt":"2019-09-24T09:57:31","Actor":"RussKie","Number":"1963","RawContent":null,"Title":"fix: DataBindings.Remove/Clear unsubscribe from the INotifyPropertyChanged.PropertyChanged event","State":"closed","Body":"Fixes #1679\r\n(cherry picked from commit e04cb684c868a13065f385b2b312c3ab3d89c999)\r\n\r\n\r\nA regression introduced in #854 that resulted in making use of target control owner's `BindingManagerBase` instead of using the target control's own.\r\n\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n## Proposed changes\r\n\r\n- Restore the original behavior\r\n- Add tests \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Bindings operate as expected\r\n\r\n## Regression? \r\n\r\n- Yes \r\n\r\n## Risk\r\n\r\n- Low\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- manual\r\n- CTI\r\n\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1963)","Url":"https://github.com/dotnet/winforms/pull/1963","RelatedDescription":"Closed or merged PR \"fix: DataBindings.Remove/Clear unsubscribe from the INotifyPropertyChanged.PropertyChanged event\" (#1963)"},{"Id":"497550596","IsPullRequest":false,"CreatedAt":"2019-09-24T08:54:17","Actor":"hughbe","Number":"1962","RawContent":null,"Title":"[CI] Windows Debug Build Occasionally Hangs","State":"open","Body":"I've observed that the Windows Debug Build sometimes times out at 60 minutes in CI and fails to report any results\r\n\r\nNo diagnosis","Url":"https://github.com/dotnet/winforms/issues/1962","RelatedDescription":"Open issue \"[CI] Windows Debug Build Occasionally Hangs\" (#1962)"},{"Id":"497515006","IsPullRequest":true,"CreatedAt":"2019-09-24T07:42:59","Actor":"hughbe","Number":"1961","RawContent":null,"Title":"Extract misc Ole32 data types","State":"open","Body":"## Proposed Changes\r\n- Extract `ELEMDESC`, `IDLDESC`, `PARAMDESC`, `TYPEDESC`, `VARDESC` and friends to `Interop.Ole32` namespace\r\n- Structify `DISPPARAMS`\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1961)","Url":"https://github.com/dotnet/winforms/pull/1961","RelatedDescription":"Open PR \"Extract misc Ole32 data types\" (#1961)"},{"Id":"497511512","IsPullRequest":true,"CreatedAt":"2019-09-24T07:35:11","Actor":"hughbe","Number":"1960","RawContent":null,"Title":"Cleanup SystemParametersInfo interop","State":"open","Body":"## Proposed Changes\r\n- Cleanup `LOGFONTW` related interop (although don't change the definition of `LOGFONTW`, just move it)\r\n- Cleanup `SystemParametersInfoW` interop (by moving it, and making it generic for blittable structs)\r\n- Cleanup `NONCLIENTMETRICSW` interop (by moving it)\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1960)","Url":"https://github.com/dotnet/winforms/pull/1960","RelatedDescription":"Open PR \"Cleanup SystemParametersInfo interop\" (#1960)"},{"Id":"497478268","IsPullRequest":false,"CreatedAt":"2019-09-24T06:12:59","Actor":"baehny","Number":"1959","RawContent":null,"Title":"Reference (not using) windows forms in cross platform class library or application.","State":"open","Body":"Hi,\r\nI am working on a cross platform application that uses windows forms on windows.\r\nSo my csproj contains the following lines:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.WindowsDesktop\">\r\n  <PropertyGroup>\r\n    ...\r\n    <UseWindowsForms>true</UseWindowsForms>\r\n    <UseWPF>true</UseWPF>\r\n    ...\r\n```\r\n\r\nThe problem with this is that I am now unable to build the application with Visual Studio Mac because of the missing Microsoft.NET.Sdk.WindowsDesktop.\r\nI'm completely aware of the fact that windows forms will not work on other platforms but does this mean I'm forced to setup up multiple projects if the application only uses windows forms on windows but still needs to reference the binaries for the build ?\r\nUsing the \"Microsoft.NET.Sdk.WindowsDesktop\" means that every binary that references windows forms (even without using it) cannot be references in a cross platform application/library.\r\n\r\n\r\nIs there any recommended way to do this ? Most information only talk about porting windows apps to .net core. \r\n\r\nOtherwise I'm now forced to split one application and one class library into 2 applications  and 2 class libraries. (with and without windows forms)","Url":"https://github.com/dotnet/winforms/issues/1959","RelatedDescription":"Open issue \"Reference (not using) windows forms in cross platform class library or application.\" (#1959)"},{"Id":"496055248","IsPullRequest":true,"CreatedAt":"2019-09-24T02:05:40","Actor":"zsd4yr","Number":"1946","RawContent":null,"Title":"Add badges for 3.1 release build pipeline and also the code cov of 3.1","State":"closed","Body":"* Add badges for build pipeline for release/3.1\r\n* remove badges for test and all code code coverage\r\n* add section for code coverage in release/3.1\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1946)","Url":"https://github.com/dotnet/winforms/pull/1946","RelatedDescription":"Closed or merged PR \"Add badges for 3.1 release build pipeline and also the code cov of 3.1\" (#1946)"},{"Id":"496492952","IsPullRequest":false,"CreatedAt":"2019-09-24T01:54:59","Actor":"hughbe","Number":"1951","RawContent":null,"Title":"Regression: Clipboard.GetText(\"text\", TextDataFormat.Html) adds garbage terminator","State":"closed","Body":"Test code from https://github.com/dotnet/winforms/pull/1950\r\n\r\n```cs\r\n[StaTheory]\r\n[CommonMemberData(nameof(CommonTestHelper.GetEnumTypeTheoryData), typeof(TextDataFormat))]\r\npublic void Clipboard_SetText_InvokeStringTextDataFormat_GetReturnsExpected(TextDataFormat format)\r\n{\r\n    Clipboard.SetText(\"text\", format);\r\n    Assert.Equal(\"text\", Clipboard.GetText(format));\r\n    Assert.True(Clipboard.ContainsText(format));\r\n}\r\n```\r\n\r\nResults:\r\n```\r\nxUnit.net Console Runner v2.4.1 (64-bit .NET Core 5.0.0-alpha1.19468.6)\r\n  Discovering: System.Windows.Forms.Tests\r\n  Discovered:  System.Windows.Forms.Tests\r\n  Starting:    System.Windows.Forms.Tests\r\n    System.Windows.Forms.Tests.ClipboardTests.Clipboard_SetText_InvokeStringTextDataFormat_GetReturnsExpected(format: Html) [FAIL]\r\n      Assert.Equal() Failure\r\n                     (pos 4)\r\n      Expected: text\r\n      Actual:   text\\0\r\n                     (pos 4)\r\n      Stack Trace:\r\n        /_/src/System.Windows.Forms/tests/UnitTests/System/Windows/Forms/ClipboardTests.cs(452,0): at System.Windows.Forms.Tests.ClipboardTests.Clipboard_SetText_InvokeStringTextDataFormat_GetReturnsExpected(TextDataFormat format)\r\n  Finished:    System.Windows.Forms.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Windows.Forms.Tests  Total: 12926, Errors: 0, Failed: 1, Skipped: 0, Time: 10.469s\r\n=== COMMAND LINE ===\r\n\"D:\\a\\1\\s\\.dotnet\\dotnet.exe\" exec --depsfile \"D:\\a\\1\\s\\artifacts\\bin\\System.Windows.Forms.Tests\\Release\\netcoreapp5.0\\System.Windows.Forms.Tests.deps.json\" --runtimeconfig \"D:\\a\\1\\s\\artifacts\\bin\\System.Windows.Forms.Tests\\Release\\netcoreapp5.0\\System.Windows.Forms.Tests.runtimeconfig.json\"  \"D:\\a\\1\\s\\.packages\\xunit.runner.console/2.4.1/tools/netcoreapp2.0/xunit.console.dll\" \"D:\\a\\1\\s\\artifacts\\bin\\System.Windows.Forms.Tests\\Release\\netcoreapp5.0\\System.Windows.Forms.Tests.dll\" -noautoreporters -xml \"D:\\a\\1\\s\\artifacts\\TestResults\\Release\\System.Windows.Forms.Tests_netcoreapp5.0_x64.xml\" -html \"D:\\a\\1\\s\\artifacts\\TestResults\\Release\\System.Windows.Forms.Tests_netcoreapp5.0_x64.html\"  > \"D:\\a\\1\\s\\artifacts\\log\\Release\\System.Windows.Forms.Tests_netcoreapp5.0_x64.log\" 2>&1\r\n```\r\n\r\nIn .NET Framework the string correctly roundtrips and does not add '\\0' at the end\r\n\r\n/cc @JeremyKuhne","Url":"https://github.com/dotnet/winforms/issues/1951","RelatedDescription":"Closed issue \"Regression: Clipboard.GetText(\"text\", TextDataFormat.Html) adds garbage terminator\" (#1951)"},{"Id":"496485438","IsPullRequest":true,"CreatedAt":"2019-09-24T01:54:59","Actor":"hughbe","Number":"1950","RawContent":null,"Title":"Cleanup clipboard interop and add tests","State":"closed","Body":"## Proposed Changes\r\n- Cleanup Ole32 Clipboard and HGlobal related interop\r\n- Add Clipboard tests\r\n- Fix #1951\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1950)","Url":"https://github.com/dotnet/winforms/pull/1950","RelatedDescription":"Closed or merged PR \"Cleanup clipboard interop and add tests\" (#1950)"},{"Id":"496268586","IsPullRequest":false,"CreatedAt":"2019-09-24T01:42:18","Actor":"bairog","Number":"1948","RawContent":null,"Title":"Size of Form and controls is bigger in WinForms .NET Core app compared to WinForms .NET Framework app","State":"closed","Body":"* .NET Core Version: **v3.0.0-rc1**\r\n* Have you experienced this same bug with .NET Framework?: **No**\r\n\r\n**Problem description:**\r\n\r\n1. Using **Visual Studio 2019 16.3 Preview 4** create a WinForms .NET Core app and a WinForms \r\n .NET Framework app, which have same designer code with some controls added.\r\n[WinFormsFrameworkApp.zip](https://github.com/dotnet/winforms/files/3635383/WinFormsFrameworkApp.zip)\r\n[WinFormsCoreApp.zip](https://github.com/dotnet/winforms/files/3635384/WinFormsCoreApp.zip)\r\n\r\n\r\n2. Build and run these 2 apps, and compare size of forms and controls\r\n\r\n**Actual behavior:** \r\nSize of Form and controls is bigger in WinForms .NET Core app compared to WinForms .NET Framework app (for example Form is **1178x799** pixels on .NET Core 3.0 and **1010x697** pixels on .NET Framework 4.8)\r\n\r\n**Expected behavior:**\r\nThey should have same size (pixel by pixel identical).","Url":"https://github.com/dotnet/winforms/issues/1948","RelatedDescription":"Closed issue \"Size of Form and controls is bigger in WinForms .NET Core app compared to WinForms .NET Framework app\" (#1948)"},{"Id":"497217369","IsPullRequest":true,"CreatedAt":"2019-09-23T18:04:34","Actor":"merriemcgaw","Number":"1957","RawContent":null,"Title":"Make the Core Designer part of the doc","State":"closed","Body":"Docs only update for Master - updating current docs to point more obviously to the Core Designer or Framework Designer.","Url":"https://github.com/dotnet/winforms/pull/1957","RelatedDescription":"Closed or merged PR \"Make the Core Designer part of the doc\" (#1957)"},{"Id":"497204535","IsPullRequest":true,"CreatedAt":"2019-09-23T16:38:32","Actor":"KlausLoeffelmann","Number":"1956","RawContent":null,"Title":"Add Designer documentation for Preview1 release.","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/1956","RelatedDescription":"Closed or merged PR \"Add Designer documentation for Preview1 release.\" (#1956)"},{"Id":"497043255","IsPullRequest":false,"CreatedAt":"2019-09-23T11:34:55","Actor":"hughbe","Number":"1955","RawContent":null,"Title":"Conditional order of precedence bug in ScrollableControl.SetDisplayRectLocation","State":"open","Body":"From the code in https://github.com/dotnet/winforms/blob/3f564803ff268bab776fea7df9970d37760ed4da/src/System.Windows.Forms/src/System/Windows/Forms/ScrollableControl.cs#L786-L798\r\n\r\nThe conditional check `if (xDelta != 0 || yDelta != 0 && IsHandleCreated)` has incorrect bracketing and order of precedence.\r\n\r\nIt should be `if ((xDelta != 0 || yDelta != 0) && IsHandleCreated)`.\r\n\r\nThis has observable differences in behaviour - see #1920 (https://dotnetfiddle.net/EVSyDY)\r\n\r\nFixing this bug would have the following implications\r\n- We don't create a `Handle` if `xDelta != 0` and `IsHandleCreated == true`","Url":"https://github.com/dotnet/winforms/issues/1955","RelatedDescription":"Open issue \"Conditional order of precedence bug in ScrollableControl.SetDisplayRectLocation\" (#1955)"},{"Id":"496750703","IsPullRequest":false,"CreatedAt":"2019-09-22T08:46:30","Actor":"vladimir-krestov","Number":"1953","RawContent":null,"Title":"[Accessibility][HC]: Incorrect DataGridView ComboBox and TextBox cells HC1/2 color","State":"open","Body":"* .NET Core Version: 3.1.0-preview1.19458.7\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n**Original bug:**\r\n- [Bug 820338:](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/820338) Accessibility: [MAS42A] [HC 1/2]: The text color is incorrect in DGV on HC 1/2 theme\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n- A user gets incorrect text color of DataGridView ComboBox and TextBox cells which should be like as in Windows settings:\r\n![image](https://user-images.githubusercontent.com/49272759/65384026-ef4f7080-dd25-11e9-8d8f-b22630b4bd0e.png)\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n- DataGridViewComboBox and DataGridViewTextBox cells text color is not like as in Windows HC theme\r\n![image](https://user-images.githubusercontent.com/49272759/65384266-f035d180-dd28-11e9-9b1c-9ef74dfea6d1.png)\r\n\r\n**Expected behavior:**\r\n- DataGridViewComboBox and DataGridViewTextBox cells text color should be like as in Windows HC theme\r\n![image](https://user-images.githubusercontent.com/49272759/65384372-2de72a00-dd2a-11e9-84b6-b1d4a3d0a92d.png)\r\n\r\n\r\n**Minimal repro:**\r\n1. Create .Net Core WinForms app\r\n2. Add a DataGridView to the app \r\n3. Add a DataGridViewComboBoxColumn and a DataGridViewTextBoxColumn to the DataGridView\r\n4. Turn on HighContrast theme in Windows settings\r\n5. Check text color of DataGridViewComboBox and DataGridViewTextBox cells","Url":"https://github.com/dotnet/winforms/issues/1953","RelatedDescription":"Open issue \"[Accessibility][HC]: Incorrect DataGridView ComboBox and TextBox cells HC1/2 color\" (#1953)"},{"Id":"496715810","IsPullRequest":true,"CreatedAt":"2019-09-22T00:14:33","Actor":"neldridg","Number":"1952","RawContent":null,"Title":"Convert PictureBox WebRequest methods to HttpClient","State":"open","Body":"Fixes #1756 \r\nThis change follows the suggestion from #1756 to change the `WebRequest` methods in `PictureBox.cs` to `HttpClient`.\r\n\r\n## Proposed changes\r\n\r\n- Move `WebRequest` methods to asynchronous `HttpClient` Get methods.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Low/None. Customer should not see any visible changes\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Low\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Ran unit tests.\r\n- Validated tests were accurate after update (no changes were needed)\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n <!-- use `dotnet --info` -->\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   5.0.100-alpha1-014723\r\n Commit:    5504e0070a\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-014723\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0-alpha1.19470.7\r\n  Commit:  c25b8b41ec\r\n\r\n.NET Core SDKs installed:\r\n  5.0.100-alpha1-014723 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n\r\n  Microsoft.AspNetCore.App 5.0.0-alpha1.19470.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 5.0.0-alpha1.19470.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0-alpha1.19470.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n- The move towards requires the `GetResponseCallback` method to be made `async` to deal with the requirement of `HttpClient` to use `async` methods.\r\n- Default behavior of `HttpClient` is to cache all results. No changes were made to headers as this covers the task.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1952)","Url":"https://github.com/dotnet/winforms/pull/1952","RelatedDescription":"Open PR \"Convert PictureBox WebRequest methods to HttpClient\" (#1952)"},{"Id":"496313216","IsPullRequest":true,"CreatedAt":"2019-09-20T12:02:40","Actor":"dotnet-maestro[bot]","Number":"1949","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190920.9\r\n- **Date Produced**: 9/20/2019 9:08 PM\r\n- **Commit**: 84778cd659cc0509e9ebf651c73f2341ae82df8c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19470.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19470.9\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19470.9\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19470.9\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1949)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/1949","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#1949)"},{"Id":"496150665","IsPullRequest":true,"CreatedAt":"2019-09-20T05:20:26","Actor":"dotnet-maestro[bot]","Number":"1947","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0fa602a-d869-4965-7860-08d72198640e)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190924.1\r\n- **Date Produced**: 9/24/2019 4:18 PM\r\n- **Commit**: d7f6c5e944e500f44b8536aed8f6a05320f7729a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19474.1\r\n\r\n[marker]: <> (End:c0fa602a-d869-4965-7860-08d72198640e)\r\n\r\n\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1947)\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 5.0.0-alpha1.19470.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 5.0.0-alpha1.19470.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 5.0.0-alpha1.19470.3 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 5.0.0-alpha1.19470.3 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 5.0.0-alpha1.19470.3 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 5.0.0-alpha1.19470.3 (parent: Microsoft.NETCore.App)\r\n- **System.Resources.Extensions** -> 5.0.0-alpha1.19470.3 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 5.0.0-alpha1.19470.3 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 5.0.0-alpha1.19470.3 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 5.0.0-alpha1.19470.3 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/1947","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#1947)"},{"Id":"496006863","IsPullRequest":true,"CreatedAt":"2019-09-19T20:40:07","Actor":"dotnet-maestro[bot]","Number":"1945","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190919.4\r\n- **Date Produced**: 9/19/2019 6:33 PM\r\n- **Commit**: 19e994876c2c29b01b78cc7a2a7019eb7dfcbd54\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19469.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19469.4\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19469.4\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1945)","Url":"https://github.com/dotnet/winforms/pull/1945","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1945)"},{"Id":"495520487","IsPullRequest":true,"CreatedAt":"2019-09-19T17:57:01","Actor":"dotnet-maestro[bot]","Number":"1940","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0fa602a-d869-4965-7860-08d72198640e)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190918.6\r\n- **Date Produced**: 9/18/2019 11:51 PM\r\n- **Commit**: 30c4a25a9a675d632b6e7180e53a87e6fcacb909\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19468.6\r\n\r\n[marker]: <> (End:c0fa602a-d869-4965-7860-08d72198640e)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1940)","Url":"https://github.com/dotnet/winforms/pull/1940","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#1940)"},{"Id":"495755480","IsPullRequest":true,"CreatedAt":"2019-09-19T17:56:38","Actor":"dotnet-maestro[bot]","Number":"1942","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190918.2\r\n- **Date Produced**: 9/18/2019 8:56 PM\r\n- **Commit**: a28ee518026d2c5d477472f44d391cf9379fc7cb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19468.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19468.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19468.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19468.2\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1942)","Url":"https://github.com/dotnet/winforms/pull/1942","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1942)"},{"Id":"495884137","IsPullRequest":true,"CreatedAt":"2019-09-19T15:46:47","Actor":"hughbe","Number":"1944","RawContent":null,"Title":"Get ApiCompat working in winforms","State":"open","Body":"## Proposed Changes\r\n- We're missing a reference to `Microsoft.DotNet.ApiCompat` so cannot run ApiCompat on winforms against .NET Framework\r\n- Reference this library and also add a list of exclusions for attributes, taken from corefx\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1944)","Url":"https://github.com/dotnet/winforms/pull/1944","RelatedDescription":"Open PR \"Get ApiCompat working in winforms\" (#1944)"},{"Id":"495623700","IsPullRequest":true,"CreatedAt":"2019-09-19T15:19:31","Actor":"hughbe","Number":"1941","RawContent":null,"Title":"Cleanup IExtender/IGetOleObject","State":"closed","Body":"## Proposed Changes\r\n- Cleanup IExtender\r\n- Cleanup IGetOleObject\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1941)","Url":"https://github.com/dotnet/winforms/pull/1941","RelatedDescription":"Closed or merged PR \"Cleanup IExtender/IGetOleObject\" (#1941)"},{"Id":"495760254","IsPullRequest":true,"CreatedAt":"2019-09-19T14:27:32","Actor":"hughbe","Number":"1943","RawContent":null,"Title":"Cleanup PageSetupDialog and add tests","State":"closed","Body":"## Proposed Changes\r\n- Cleanup PageSetupDialog: interop, code style, auto properties\r\n- Add PageSetupDialog tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1943)","Url":"https://github.com/dotnet/winforms/pull/1943","RelatedDescription":"Closed or merged PR \"Cleanup PageSetupDialog and add tests\" (#1943)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-09-25T05:30:57.2616859Z","RunDurationInMilliseconds":1000}