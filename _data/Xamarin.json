{"Data":{"Blog":{"FeedItems":[{"Title":"Attend A .NET Conf Event Near You!","PublishedOn":"2018-08-15T20:29:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you have not yet heard of the .NET Conf, it is a FREE, 3-day virtual developer event co-organized by the .NET community and Microsoft. There is a wide selection of live sessions with feature...","Href":"https://blog.xamarin.com/attend-a-net-conf-event-near-you/","RawContent":null},{"Title":"Preview: iOS 12 development with Xamarin","PublishedOn":"2018-08-10T16:30:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The latest Xamarin preview release supports Xcode 10 beta 5, which includes beta SDKs for iOS 12, macOS Mojave (10.14), watchOS 5, and tvOS 12. Get Started With New iOS 12 APIs Today: iOS 12 includes...","Href":"https://blog.xamarin.com/preview-ios-12-development-with-xamarin/","RawContent":null},{"Title":"Securing network traffic with TLS 1.2","PublishedOn":"2018-08-07T15:58:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Secure and encrypted network communications are a crucial part of mobile application development. Without some kind of security around the communication layer, it is trivial for a third party to...","Href":"https://blog.xamarin.com/securing-network-traffic-with-tls-1-2/","RawContent":null},{"Title":"Adaptive Mobile Designs with FlexLayout","PublishedOn":"2018-08-03T17:33:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms is fantastic for quickly shipping a single code base to multiple platforms and devices. As soon as you are present on all those different screens, you need to make sure your UI looks as...","Href":"https://blog.xamarin.com/adaptive-mobile-designs-with-flexlayout/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in August!","PublishedOn":"2018-08-01T19:46:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This year&#8217;s .NET Conf is coming to you September 12 &#8211; 14, 2018! Over the course of the three days, you have a wide selection of live sessions that feature speakers from the community and...","Href":"https://blog.xamarin.com/xamarin-dotnet-developer-events-august/","RawContent":null},{"Title":"Guest Post: Visual UI tests on iOS simulator using Xamarin and Appium","PublishedOn":"2018-07-30T19:07:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post from Sophie Tagar, a customer support engineer at Applitools. Previously, Sophie was a software developer at Matrix Israel where, among other things, she did full stack...","Href":"https://blog.xamarin.com/visual-ui-tests-ios-simulator-using-xamarin-appium/","RawContent":null},{"Title":"Announcing Xamarin.Android 9.0 (P) Preview","PublishedOn":"2018-07-27T16:11:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Android 9.0 (P) introduces many features such as Wi-Fi RTT(Round-Trip-Time), Display cutout support, Notification enhancements, Multi-camera support, and much more. We&#8217;re excited to announce...","Href":"https://blog.xamarin.com/xamarin-android-9-0-p-preview/","RawContent":null},{"Title":"Previewing Files Inside Your Xamarin.iOS App","PublishedOn":"2018-07-25T18:21:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If your app interacts with files, such as email attachments or photos, allowing users to preview those files without leaving your app is a great way to enhance the user&#8217;s experience....","Href":"https://blog.xamarin.com/previewing-files-with-xamarin-ios/","RawContent":null},{"Title":"Xamarin.Forms 3.1: Improving the Little Things","PublishedOn":"2018-07-18T19:27:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Earlier this year, we surveyed Xamarin.Forms developers about the kinds of custom controls and extra platform code being written repeatedly that should be considered for support “in the box”. From...","Href":"https://blog.xamarin.com/xamarin-forms-3-1-improvments/","RawContent":null},{"Title":"Export To Application Insights With AppCenter Continuous Export","PublishedOn":"2018-07-10T03:35:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Five-star mobile apps have one special feature: they don’t let go of their users. This can be achieved by understanding your app, the app’s users, and how these users interact with your app. The deep...","Href":"https://blog.xamarin.com/appcenter-continuous-export-application-insights/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8134553446","Type":"IssuesEvent","CreatedAt":"2018-08-19T17:07:27","Actor":"SelvaKumar68","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2082","RelatedDescription":"Closed issue \"Image get tiled when adding it to CGContext\" (#2082) at xamarin/xamarin-android","RelatedBody":"Hi Team,\r\n\r\nCurrently I am developing a project by using CGContext to draw image on the specific path.\r\n\r\nIn my sample i have used a class file which is inherited from the UIView,\r\n\r\nInside the Draw override method, I am getting the UIGraphics.GetCurrentContext(), by using this I have  drawn the arc of 0 to 360 degree,\r\n\r\nThe CGContext setFillColor has to be filled with the image, so i have used the below given code.\r\n\r\nvar image = UIColor.FromPatternImage(imageView);\r\n                    context.SetFillColor(image.CGColor);\r\n\r\nimageView contain a single image, but on the output screen the image get repeated for many times.\r\n\r\nSample to replicate this issue has been updated in this query.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run the Sample\r\n\r\nNote that \"Single image get tiled on the output screen\"\r\n\r\n \r\n\r\n<!--\r\n\r\n[TestApp 2.zip](https://github.com/xamarin/xamarin-android/files/2300480/TestApp.2.zip)\r\n-->\r\n\r\n### Expected Behavior\r\n\r\nSingle image has to be on the output screen\r\n\r\n### Actual Behavior\r\n\r\nTiles of image get filled on the screen.\r\n\r\n### Version Information\r\niOS simulator Version : iOS 10.2\r\n\r\n"},{"Id":"8134551675","Type":"IssuesEvent","CreatedAt":"2018-08-19T17:06:06","Actor":"SelvaKumar68","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2082","RelatedDescription":"Opened issue \"Image get tiled when adding it to CGContext\" (#2082) at xamarin/xamarin-android","RelatedBody":"Hi Team,\r\n\r\nCurrently I am developing a project by using CGContext to draw image on the specific path.\r\n\r\nIn my sample i have used a class file which is inherited from the UIView,\r\n\r\nInside the Draw override method, I am getting the UIGraphics.GetCurrentContext(), by using this I have  drawn the arc of 0 to 360 degree,\r\n\r\nThe CGContext setFillColor has to be filled with the image, so i have used the below given code.\r\n\r\nvar image = UIColor.FromPatternImage(imageView);\r\n                    context.SetFillColor(image.CGColor);\r\n\r\nimageView contain a single image, but on the output screen the image get repeated for many times.\r\n\r\nSample to replicate this issue has been updated in this query.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run the Sample\r\n\r\nNote that \"Single image get tiled on the output screen\"\r\n\r\n \r\n\r\n<!--\r\n\r\n[TestApp 2.zip](https://github.com/xamarin/xamarin-android/files/2300480/TestApp.2.zip)\r\n-->\r\n\r\n### Expected Behavior\r\n\r\nSingle image has to be on the output screen\r\n\r\n### Actual Behavior\r\n\r\nTiles of image get filled on the screen.\r\n\r\n### Version Information\r\niOS simulator Version : iOS 10.2\r\n\r\n"},{"Id":"8134304956","Type":"PullRequestEvent","CreatedAt":"2018-08-19T14:19:08","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2075","RelatedDescription":"Merged pull request \"[docs] Improve a couple items for new contributors\" (#2075) at xamarin/xamarin-android","RelatedBody":"Update an old mention of Xamarin Studio.\r\n\r\nAdjust capitalization in a couple links in the README so they match the\r\nanchor names.\r\n\r\nAdd an error early in the preparation targets to let contributors know\r\nthat having spaces in the Android NDK path will lead to errors during\r\nthe build.\r\n\r\nFix a little typo in the order of arguments to `SymbolicLink.Create()`\r\nin `xabuild` so that the system directories are linked into the build\r\noutput directory.  This code only runs if the directories in the build\r\noutput directory do *not exist*, so the goal is to link the system\r\nversions of the .NETFramework and .NETPortable directories into the\r\nbuild output directory."},{"Id":"8133759013","Type":"IssuesEvent","CreatedAt":"2018-08-19T07:11:01","Actor":"mungojam","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2081","RelatedDescription":"Opened issue \"DirectBoot execution fails with java.lang.UnsatisfiedLinkError\" (#2081) at xamarin/xamarin-android","RelatedBody":"When I am trying to use any Xamarin tool in the DirectBoot pre-login session I get:\r\n\r\n> 08-18 22:54:33.644 2722 2722 E AndroidRuntime: FATAL EXCEPTION: main\r\n08-18 22:54:33.644 2722 2722 E AndroidRuntime: Process: com.xamarin.directboot, PID: 2722\r\n08-18 22:54:33.644 2722 2722 E AndroidRuntime: java.lang.UnsatisfiedLinkError: No implementation found for void mono.android.Runtime.register(java.lang.String, java.lang.Class, java.lang.String) (tried Java_mono_android_Runtime_register and Java_mono_android_Runtime_register__Ljava_lang_String_2Ljava_lang_Class_2Ljava_lang_String_2)\r\n08-18 22:54:33.644 2722 2722 E AndroidRuntime: at mono.android.Runtime.register(Native Method)\r\n08-18 22:54:33.644 2722 2722 E AndroidRuntime: at md511db93b05d0fbee144be45ad6fb54d50.BootBroadcastReceiver.(BootBroadcastReceiver.java:15)\r\n08-18 22:54:33.644 2722 2722 E AndroidRuntime: at java.lang.Class.newInstance(Native Method)\r\n08-18 22:54:33.644 2722 2722 E AndroidRuntime: at android.app.ActivityThread.handleReceiver(ActivityThread.java:3671)\r\n08-18 22:54:33.644 2722 2722 E AndroidRuntime: at android.app.ActivityThread.-wrap18(Unknown Source:0)\r\n08-18 22:54:33.644 2722 2722 E AndroidRuntime: at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1979)\r\n08-18 22:54:33.644 2722 2722 E AndroidRuntime: at android.os.Handler.dispatchMessage(Handler.java:108)\r\n08-18 22:54:33.644 2722 2722 E AndroidRuntime: at android.os.Looper.loop(Looper.java:166)\r\n08-18 22:54:33.644 2722 2722 E AndroidRuntime: at android.app.ActivityThread.main(ActivityThread.java:7425)\r\n08-18 22:54:33.644 2722 2722 E AndroidRuntime: at java.lang.reflect.Method.invoke(Native Method)\r\n08-18 22:54:33.644 2722 2722 E AndroidRuntime: at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:245)\r\n08-18 22:54:33.644 2722 2722 E AndroidRuntime: at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:921)\r\n\r\n### Steps to Reproduce\r\n1. Make sure your phone has Nougat+ file based encryption enabled\r\n2. Download [this Xamarin sample](https://developer.xamarin.com/samples/monodroid/android-n/DirectBoot/) (though I get same error with my own attempts to implement DirectBoot)\r\n3. Build in release mode\r\n4. Deploy to phone\r\n5. Set an alarm in the app\r\n6. Reboot and wait for alarm time without logging on\r\n7. Nothing happens\r\n8. Check `logcat` and you'll find the error above\r\n\r\nAlso raised this issue against the sample https://github.com/xamarin/monodroid-samples/issues/277, but it looks more like a Xamarin bug to me.\r\n\r\nhttps://developer.xamarin.com/samples/monodroid/android-n/DirectBoot/DirectBoot.zip\r\n\r\n### Expected Behavior\r\nTo be able to use DirectBoot like other apps can. I've been able to use native apps like google clock and they work fine.\r\n\r\n### Actual Behavior\r\nXamarin actions such as simple notifications do not fire and an error is logged\r\n\r\n### Device\r\nMy phone is a Huawei Honor 9 with Android 8.0.0\r\n\r\n### Version Information\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.8.1\r\nVisualStudio.15.Release/15.8.1+28010.2003\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Enterprise\r\n\r\nApplication Insights Tools for Visual Studio Package   8.13.10627.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.8.05074.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2012   4.0.30625.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60618.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.8.05023.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.9.0-beta8-63208-01\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nCookiecutter   15.8.18201.1\r\nProvides tools for finding, instantiating and customizing templates in cookiecutter format.\r\n\r\nGitHub.VisualStudio   2.5.4.3349\r\nA Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJetBrains ReSharper Ultimate 2018.1.4    Build 112.0.20180731.142027\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2018 JetBrains, Inc.\r\n\r\nMerq   1.1.38 (5b3c069)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10730.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMono Debugging for Visual Studio   4.11.7-pre (8955b2a)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNode.js Tools   1.4.20802.1 Commit Hash:97e1085d8b4b8e3e51c398e910177f87e86d135e\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nOpen Command Line   2.1.216\r\nOpens a command line at the root of the project. Support for all consoles such as CMD, PowerShell, Bash etc. Provides syntax highlighting, Intellisense and execution of .cmd and .bat files.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython   15.8.18201.1\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - Django support   15.8.18201.1\r\nProvides templates and integration for the Django web framework.\r\n\r\nPython - IronPython support   15.8.18201.1\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   15.8.18201.1\r\nProfiling support for Python projects.\r\n\r\nR Tools for Visual Studio   1.3.40517.1016\r\nProvides project system, R Interactive window, plotting, and more for the R programming language.\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSnapshot Debugging Extension   1.0\r\nSnapshot Debugging Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61808.07020\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.8.20801.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.9.0-beta8-63208-01\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: c55dd2c3d618eb93a8d16e503947342b1fa93556.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWiX Toolset Visual Studio Extension   0.9.21.62588\r\nWiX Toolset Visual Studio Extension version 0.9.21.62588\r\nCopyright (c) .NET Foundation and contributors. All rights reserved.\r\n\r\nXamarin   4.11.0.732 (d15-8@33e83e124)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.14.218 (79f535bdd)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.113 (e1d02a7)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.0.0.18 (HEAD/3d8a28f1a)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.14.0.13 (373c313)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n"},{"Id":"8133084415","Type":"IssuesEvent","CreatedAt":"2018-08-18T20:03:42","Actor":"sglorz","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2079","RelatedDescription":"Closed issue \"TableView Height same as Width\" (#2079) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nI created a TableView in my application. For iOS and UWP, everything is fine. For Android, the Height of the TableView is not properly calulated as it is equal to its Width.\r\n\r\n### Version Information\r\n\r\nVS 2017\r\nXamarin.Forms 3.1.0.697729\r\n"},{"Id":"8131396457","Type":"PullRequestEvent","CreatedAt":"2018-08-17T22:37:35","Actor":"luhenry","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1726","RelatedDescription":"Closed pull request \"[mono-sdks] Integrate with mono/mono#6500\" (#1726) at xamarin/xamarin-android","RelatedBody":""},{"Id":"8131395951","Type":"PullRequestEvent","CreatedAt":"2018-08-17T22:37:21","Actor":"luhenry","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2080","RelatedDescription":"Opened pull request \"[mono-sdks] Integrate with `mono:2018-06-sdks-standalone`\" (#2080) at xamarin/xamarin-android","RelatedBody":""},{"Id":"8131284200","Type":"IssuesEvent","CreatedAt":"2018-08-17T21:59:25","Actor":"sglorz","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2079","RelatedDescription":"Opened issue \"TableView Height same as Width\" (#2079) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nI created a TableView in my application. For iOS and UWP, everything is fine. For Android, the Height of the TableView is not properly calulated as it is equal to its Width.\r\n\r\n### Version Information\r\n\r\nVS 2017\r\nXamarin.Forms 3.1.0.697729\r\n"},{"Id":"8130848446","Type":"IssuesEvent","CreatedAt":"2018-08-17T20:04:52","Actor":"inetconnector","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2078","RelatedDescription":"Closed issue \"Android Wear classes for complications missing (SetAcceptsTapEvents, usings,...\" (#2078) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nTried to create a watchface with complications for Android\r\ni did not find the necessary classes like\r\n\r\n**using Android.Support.Wearable.Complications.ComplicationData;\r\nusing Android.Support.Wearable.Complications.Rendering.ComplicationDrawable;**\r\n\r\npublic override void OnCreate( ISurfaceHolder holder ) {\r\nSetWatchFaceStyle(\r\n\t\t\t\t\tnew WatchFaceStyle.Builder( owner ) \r\n\t\t\t\t\t\t. **_SetAcceptsTapEvents_**\r\n\r\n**public override void OnTapCommand( int tapType, int xValue, int yValue, long eventTime ) {\r\n ..\r\n}**"},{"Id":"8130791291","Type":"IssuesEvent","CreatedAt":"2018-08-17T19:50:56","Actor":"inetconnector","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2078","RelatedDescription":"Opened issue \"Android Wear classes for complications missing (SetAcceptsTapEvents, usings,...\" (#2078) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nTried to create a watchface with complications for Android\r\ni did not find the necessary classes like\r\n\r\n**import Android.Support.Wearable.Complications.ComplicationData;\r\nimport Android.Support.Wearable.Complications.Rendering.ComplicationDrawable;**\r\n\r\npublic override void OnCreate( ISurfaceHolder holder ) {\r\nSetWatchFaceStyle(\r\n\t\t\t\t\tnew WatchFaceStyle.Builder( owner ) \r\n\t\t\t\t\t\t. **_SetAcceptsTapEvents_**\r\n\r\n**public override void OnTapCommand( int tapType, int xValue, int yValue, long eventTime ) {\r\n ..\r\n}**"},{"Id":"8130717475","Type":"IssuesEvent","CreatedAt":"2018-08-17T19:33:14","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2077","RelatedDescription":"Opened issue \"See if we can better support MSBuildSdkExtras\" (#2077) at xamarin/xamarin-android","RelatedBody":"### The Problem\r\n\r\nVarious NuGet authors are using [MSBuildSdkExtras](https://github.com/onovotny/MSBuildSdkExtras), to use a single project file and target multiple frameworks, such as: `net46`, `netstandard2.0`, `MonoAndroid60`, `MonoAndroid80`, etc.\r\n\r\nThis brings up a few issues:\r\n- We don't have a test verifying that a project built with `MSBuildSdkExtras` works. We probably don't want to break it.\r\n- I saw some issues brought up on #1628, for example, we are using `obj\\monoandroid81\\MonoAndroid81` as our `$(IntermediateOutputPath)` on Windows...\r\n- Most frameworks built in parallel, while `MonoAndroid` is not. We need to see if we have a setting causing is, is it intentional, etc.?\r\n- Currently it looks like Xamarin.Android is the slowest framework in these types of projects. Can we do anything to improve this? These projects are not app projects, but library projects. Generally, they might not even use `Resource.designer.cs` or other Android-like things.\r\n\r\n### Expected Behavior\r\n\r\n`MSBuildSdkExtras` should give NuGet authors a reasonably good experience.\r\n\r\n### Actual Behavior\r\n\r\nIt seems like there are a few issues with Xamarin.Android when using `MSBuildSdkExtras`.\r\n\r\n### Version Information\r\n\r\nI noted all behavior on VS Windows 15.8.0.\r\n\r\n/cc @jeromelaban"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8133376281","Type":"IssuesEvent","CreatedAt":"2018-08-19T00:35:05","Actor":"Lucasjuv","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3610","RelatedDescription":"Opened issue \"[MacOs]Slider inside StackLayout Horizontal Orientation\" (#3610) at xamarin/Xamarin.Forms","RelatedBody":"##Summary\r\nWhen you put a label and a slider inside a StackLayout with Horizontal orientation in MacOs it breaks the page drawing when requesting for width. (NaN is not a valid value for width)\r\n\r\n##API Changes\r\n\r\nFix the slider width setting when inside a horizontal orientated StackLayout.\r\n\r\n##Intended Use Case\r\nUse for a sliding option with description."},{"Id":"8133084353","Type":"IssuesEvent","CreatedAt":"2018-08-18T20:03:38","Actor":"sglorz","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3609","RelatedDescription":"Opened issue \"Android: TableView Height always same as Width \" (#3609) at xamarin/Xamarin.Forms","RelatedBody":"Steps to Reproduce\r\n\r\nI created a TableView in my application. For iOS and UWP, everything is fine. For Android, the Height of the TableView is not properly calulated as it is always equal to its Width.\r\nVersion Information\r\n\r\nVS 2017\r\nXamarin.Forms 3.1.0.697729"},{"Id":"8132396280","Type":"PullRequestEvent","CreatedAt":"2018-08-18T11:19:12","Actor":"ylatuya","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3608","RelatedDescription":"Opened pull request \"[GTK] Add a new forms view to wrap existing GTK+ widgets\" (#3608) at xamarin/Xamarin.Forms","RelatedBody":"\r\n### Description of Change ###\r\n\r\nA convenience wrapper that allows embedding an Gtk Widget into a\r\nForms view to ease porting of GTK+ applications and reuse\r\nexisting GTK+ widgets.\r\n\r\n### Issues Resolved ###\r\n\r\n### API Changes ###\r\n - Added GtkWidgetWrapper class.\r\n### Platforms Affected ###\r\n\r\n- Gtk+\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\n### PR Checklist ###\r\n\r\n- [] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [] Rebased on top of the target branch at time of PR\r\n- [] Changes adhere to coding standard\r\n"},{"Id":"8132257089","Type":"PullRequestEvent","CreatedAt":"2018-08-18T09:20:44","Actor":"jfversluis","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3519","RelatedDescription":"Closed pull request \"[iOS] Implemented SelectedTintColor and UnselectedTintColor for iOS\" (#3519) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThrough the PlatformSpecific API it is now possible to set the selected and unselected tint item on iOS.\r\nThe unselected item color is only supported on iOS 10 and higher.\r\n\r\n- fixes #3478 \r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n - TabbedPage.On<iOS>().GetUnselectedTintColor();\r\n - TabbedPage.On<iOS>().GetSelectedTintColor();\r\n\r\n### Platforms Affected ###\r\n\r\n- iOS\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nThis does not change anything when upgraded as-is. Only when the user leverages this functionality they will see the desired colors in the tab bar on iOS.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8132255219","Type":"PullRequestEvent","CreatedAt":"2018-08-18T09:19:12","Actor":"jfversluis","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3607","RelatedDescription":"Opened pull request \"[Enhancement] Android: WebView - Control over Zoom controls\" (#3607) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFor Android users now have the ability to enable zooming on the `WebView`. It can be done only by gestures, or by also showing the zoom controls.\r\n\r\nAutomated UI tests are not included since I don't think it's possible to test. I did include two unit tests for the setting and retrieving the values of these methods.\r\n\r\n### Issues Resolved ###\r\n\r\n- fixes #1661 \r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n- WebView.On<Android>().EnableZoomControls(true/false);\r\n- WebView.On<Android>().DisplayZoomControls(true/false);\r\n\r\n### Platforms Affected ###\r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nThe default behavior is as it was, no zooming and no zoom controls are visible. When setting `EnableZoomControls` to `true` just zooming, the user is now able to zoom the `WebView` by using gestures. When also enabling `DisplayZoomControls`, the Android default zoom controls are shown.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"8131359414","Type":"IssuesEvent","CreatedAt":"2018-08-17T22:24:06","Actor":"AmrAlSayed0","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3606","RelatedDescription":"Opened issue \"x:DataType tries to force compile bindings which have a Source and Path property set\" (#3606) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nSetting the x:DataType of the DataTemplate of a ListView that has a binding to a different object than the current binding context like this\r\n```xml\r\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n             xmlns:viewModels=\"clr-namespace:DataTypeSourceBug.ViewModels;assembly=DataTypeSourceBug\"\r\n             x:Class=\"DataTypeSourceBug.MainPage\"\r\n             x:Name=\"Page\">\r\n    <ContentPage.BindingContext>\r\n        <viewModels:MainPageViewModel />\r\n    </ContentPage.BindingContext>\r\n    <ListView ItemsSource=\"{Binding StringList}\">\r\n        <ListView.ItemTemplate>\r\n            <DataTemplate x:DataType=\"x:String\">\r\n                <Label Text=\"{Binding .}\">\r\n                    <Label.GestureRecognizers>\r\n                        <TapGestureRecognizer Command=\"{Binding Path=BindingContext.InsideListViewCommand,Source={x:Reference Page}}\"\r\n                                              CommandParameter=\"{Binding .}\" />\r\n                    </Label.GestureRecognizers>\r\n                </Label>\r\n            </DataTemplate>\r\n        </ListView.ItemTemplate>\r\n    </ListView>\r\n</ContentPage>\r\n```\r\nproduces an error while compiling with the following stack trace\r\n```\r\n  Resource: DataTypeSourceBug.Views.MainPage.xaml...\r\n   Creating empty MainPage.__InitComponentRuntime ...done.\r\n   Copying body of InitializeComponent to __InitComponentRuntime ...done.\r\n   Parsing Xaml... done.\r\n   Replacing MainPage.InitializeComponent ()... failed.\r\nViews\\MainPage.xaml(17,47): error : Position 17:47. Binding: Property 'BindingContext' not found on 'System.String'\r\n   at Xamarin.Forms.Build.Tasks.SetPropertiesVisitor.ParsePath(String path, TypeReference tSourceRef, IXmlLineInfo lineInfo, ModuleDefinition module)\r\n   at Xamarin.Forms.Build.Tasks.SetPropertiesVisitor.<CompileBindingPath>d__30.MoveNext()\r\n   at Xamarin.Forms.Build.Tasks.SetPropertiesVisitor.<ProvideValue>d__29.MoveNext()\r\n   at Xamarin.Forms.Build.Tasks.ILProcessorExtensions.Append(ILProcessor processor, IEnumerable`1 instructions)\r\n   at Xamarin.Forms.Build.Tasks.SetPropertiesVisitor.Visit(ElementNode node, INode parentNode)\r\n   at Xamarin.Forms.Xaml.ElementNode.Accept(IXamlNodeVisitor visitor, INode parentNode)\r\n   at Xamarin.Forms.Xaml.ElementNode.Accept(IXamlNodeVisitor visitor, INode parentNode)\r\n   at Xamarin.Forms.Xaml.ElementNode.Accept(IXamlNodeVisitor visitor, INode parentNode)\r\n   at Xamarin.Forms.Build.Tasks.SetPropertiesVisitor.SetDataTemplate(IElementNode parentNode, ElementNode node, ILContext parentContext, IXmlLineInfo xmlLineInfo)\r\n   at Xamarin.Forms.Build.Tasks.SetPropertiesVisitor.Visit(ElementNode node, INode parentNode)\r\n   at Xamarin.Forms.Xaml.ElementNode.Accept(IXamlNodeVisitor visitor, INode parentNode)\r\n   at Xamarin.Forms.Xaml.ElementNode.Accept(IXamlNodeVisitor visitor, INode parentNode)\r\n   at Xamarin.Forms.Xaml.ElementNode.Accept(IXamlNodeVisitor visitor, INode parentNode)\r\n   at Xamarin.Forms.Xaml.RootNode.Accept(IXamlNodeVisitor visitor, INode parentNode)\r\n   at Xamarin.Forms.Build.Tasks.XamlCTask.TryCoreCompile(MethodDefinition initComp, MethodDefinition initCompRuntime, ILRootNode rootnode, Exception& exception)\r\n```\r\n### Steps to Reproduce\r\n\r\n1. Try to build the attached repo. \r\n\r\n### Expected Behavior\r\nCompiles fine without trying to compile the bindings that use different Source and Path\r\n### Actual Behavior\r\nError when compiling\r\n### Basic Information\r\n\r\n- Version with issue: 3.1.0\r\n- Last known good version:\r\n- IDE: Visual Studio 15.8\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:\r\n  - Android:\r\n  - UWP:\r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n[DataTypeSourceBug.zip](https://github.com/xamarin/Xamarin.Forms/files/2298886/DataTypeSourceBug.zip)\r\n"},{"Id":"8131067094","Type":"PullRequestEvent","CreatedAt":"2018-08-17T20:58:38","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3605","RelatedDescription":"Opened pull request \"[Core] When building SLN Forms.Core dll doesn't generate\" (#3605) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nWhen building Xamarin.Forms.SLN fresh the build fails because the Xamarin.Forms.Core.dll doesn't get produced.\r\n\r\nIf you manually build Xamarin.Forms.Core.csproj first then it produces the dll and everything works fine after that.\r\n\r\nIf you remove the *XFCorePostProcessor UsingTask* then everything compiles fine first go, but this Task shouldn't get in the way of producing \"Xamarin.Forms.Core.dll\". \r\n\r\nLooking at the build output it looks like msbuild makes the wrong determination about whether it should be running *Csc*\r\n\r\n```\r\n1>  Skipping target \"CoreCompile\" because all output files are up-to-date with respect to the input files.\r\n```\r\n\r\nI'll log a separate issue with Visual Studio \r\n\r\n### Platforms Affected ###\r\n\r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8134555833","Type":"IssuesEvent","CreatedAt":"2018-08-19T17:09:18","Actor":"SelvaKumar68","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4645","RelatedDescription":"Opened issue \"Adding Single image to CGContext background makes tile view on output\" (#4645) at xamarin/xamarin-macios","RelatedBody":"Hi Team,\r\n\r\nCurrently I am developing a project by using CGContext to draw image on the specific path.\r\n\r\nIn my sample i have used a class file which is inherited from the UIView,\r\n\r\nInside the Draw override method, I am getting the UIGraphics.GetCurrentContext(), by using this I have  drawn the arc of 0 to 360 degree,\r\n\r\nThe CGContext setFillColor has to be filled with the image, so i have used the below given code.\r\n\r\nvar image = UIColor.FromPatternImage(imageView);\r\n                    context.SetFillColor(image.CGColor);\r\n\r\nimageView contain a single image, but on the output screen the image get repeated for many times.\r\n\r\nSample to replicate this issue has been updated in this query.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run the Sample\r\n\r\nNote that \"Single image get tiled on the output screen\"\r\n\r\n \r\n\r\n<!--\r\n\r\n[TestApp 2.zip](https://github.com/xamarin/xamarin-android/files/2300480/TestApp.2.zip)\r\n-->\r\n\r\n### Expected Behavior\r\n\r\nSingle image has to be on the output screen\r\n\r\n### Actual Behavior\r\n\r\nTiles of image get filled on the screen.\r\n\r\n### Version Information\r\niOS simulator Version : iOS 10.2\r\n"},{"Id":"8131640783","Type":"PullRequestEvent","CreatedAt":"2018-08-18T00:28:19","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4644","RelatedDescription":"Opened pull request \"[CoreGraphics] Fix CGFunction to work after being disposed.\" (#4644) at xamarin/xamarin-macios","RelatedBody":"We have a test for CGFunction, and in iOS 12 the behavior changed where\npreviously the CGFunction was invoked immediately when rendering, it's now\nretained and only called later.\n\nThis is troublesome for the test, because it disposes the managed CGFunction\nwhen it thinks it's completed. Since the function is invoked way later, the\ntest now crashes. Ops.\n\nThe obvious fix is to change the test to dispose the CGFunction later. This\nfalls flat when finding out that \"later\" is undetermined. Native code retains\nthe CGFunction, and can do whatever it wishes with it until it's released, and\nthere's no way to know when that is.\n\nOK: what about not disposing the CGFunction, and letting the GC do its job?\nThis also falls flat, because there's a circular reference between the native\nCGFunction and the managed wrapper, preventing any of them from being released\nautomatically by the GC. The only way to break the circular reference is to\ndispose the managed wrapper.\n\nSo, can we fix the circular reference? Unfortunately not, because we can't\nmonitor the native CGFunction's retain count, which is required in order to\nswitch the native->managed link between weak and strong according to the\nretain count.\n\nThis leaves one solution (that I could come up with at least): make sure\neverything works fine after disposing the managed wrapper.\n\nThis involves a few things:\n\n* Only break the native->managed connection (the 'gch' GCHandle) when the\n  native CGFunction is freed. This is accomplished by using the API provided\n  by Apple for exactly that purpose (the 'release' callback field in the\n  'CGFunctionCallbacks' struct).\n\n* Use a static variable for the 'CGFunctionCallback' struct and its contents.\n  This solves another potential problem: the GC could have collected the\n  delegate to the 'EvaluateCallback' function at any point.\n\n* Don't null out the 'evaluate' delegate in Dispose. This leaves the user with\n  no way to break a potential circular reference through that delegate (since\n  it will never be null), so provide a property that makes it possible for\n  users to explicitly null out the delegate ('EvaluateFunction').\n\n* Only call the 'evaluate' callback if it's not null.\n\nThis also has the additional advantage that test (and any customer code\nrunning into the same issue) works without modifications."},{"Id":"8131461360","Type":"PullRequestEvent","CreatedAt":"2018-08-17T23:01:53","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4643","RelatedDescription":"Opened pull request \"[F# tests] Default to LinkSdk for device builds.\" (#4643) at xamarin/xamarin-macios","RelatedBody":"Makes device builds (and uploads) much faster.\n\nI've checked all other tests, and this was the only one not using LinkSdk\n(except tests that don't on purpose, such as linker tests)."},{"Id":"8131415793","Type":"PullRequestEvent","CreatedAt":"2018-08-17T22:44:37","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4639","RelatedDescription":"Merged pull request \"Try to fix random make failure in src/ by not using pattern rules.\" (#4639) at xamarin/xamarin-macios","RelatedBody":"Randomly make 3.81 says this:\n\n    error CS0006: Metadata file 'build/ios/reference/MonoTouch.Dialog-1.dll' could not be found\n\nThe makefile seems fine, and it also doesn't happen when using make 4.21, so\nthis looks like a make bug.\n\nSo rewrite the troublesome rule to not be a pattern rule, and cross some fingers."},{"Id":"8131316720","Type":"IssuesEvent","CreatedAt":"2018-08-17T22:09:43","Actor":"bradumbaugh","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4642","RelatedDescription":"Opened issue \"[Xcode 10] Binding for GetLanguageHypotheses returning wrong type\" (#4642) at xamarin/xamarin-macios","RelatedBody":"\r\n### Steps to Reproduce\r\n\r\nInspect the binding for `NLLanguageRecognizer.GetLanguageHypotheses`:\r\n\r\n`public Dictionary<NLLanguage, nuint> GetLanguageHypotheses (nuint maxHypotheses)`\r\n\r\nThis method is a wrapper around\r\n\r\n`public virtual NSDictionary<NSString, NSNumber> GetNativeLanguageHypotheses (nuint maxHypotheses)`\r\n\r\nThe wrapper method returns a `Dictionary<NLLanguage, nuint>`, whereas the wrapped method returns `NSDictionary<NSString, NSNumber>`. Since the values in the dictionary represent [probabilities](https://developer.apple.com/documentation/naturallanguage/nllanguagerecognizer/2976561-languagehypotheseswithmaximum?language=objc), this is a loss in specificity.\r\n\r\n### Expected Behavior\r\n\r\nReturned Dictionary should have values of a type that can represent fractional numbers.\r\n\r\n### Actual Behavior\r\n\r\nReturned Dictionary has `nuint` values.\r\n\r\n### Environment\r\n\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.5.4 (build 7)\r\nInstallation UUID: 623d8c09-02dc-4241-ad34-5c29ea2d12f7\r\nRuntime:\r\n\tMono 5.10.1.57 (2017-12/ea8a24b1bbf) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.193 (master / 64fece5f)\r\n\r\n\tPackage version: 510010057\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.1\r\n\t2.0.5\r\n\t2.0.3\r\nSDK: /usr/local/share/dotnet/sdk/2.1.301/Sdks\r\nSDK Versions:\r\n\t2.1.301\r\n\t2.1.4\r\n\t2.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.0 (14320.2.4)\r\nBuild 10L221o\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.99.2.250 (Visual Studio Enterprise)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.99.2.130 (Visual Studio Enterprise)\r\nHash: 86e97b10\r\nBranch: HEAD\r\nBuild date: 2018-08-04 01:01:50-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.3.2 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/bradumbaugh/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t2.3   (API level 10)\r\n\t\t4.0.3 (API level 15)\r\n\t\t4.2   (API level 17)\r\n\t\t4.4   (API level 19)\r\n\t\t5.0   (API level 21)\r\n\t\t6.0   (API level 23)\r\n\t\t7.0   (API level 24)\r\n\t\t7.1   (API level 25)\r\n\t\t8.1   (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.0\r\nSDK Build Tools Version: 28.0.0\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705040007\r\nGit revision: 1fcae95fd5b606f806c3b1d445237f675c395fdd\r\nBuild date: 2018-08-02 18:48:50+00\r\nXamarin addins: 48a82b251ec0ef78cb92223061ea448f967f4ec2\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Thu Jun 21 22:53:14 PDT 2018\r\n    root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nMonoGame Extension 3.7.0.1\r\nVim 0.61.0\r\nInternet of Things (IoT) development (Preview) 7.5.3\r\n\r\n"},{"Id":"8130938471","Type":"PullRequestEvent","CreatedAt":"2018-08-17T20:26:32","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4641","RelatedDescription":"Opened pull request \"[mtouch] Add the option of always weak link a framework. Fixes #4628\" (#4641) at xamarin/xamarin-macios","RelatedBody":"Linking with CoreNFC crash applications on iOS 12 on iPad (and likely\nother device not supporting, or supported, for NFC).\n\nThis used to work on iOS 11.x (when introduced). The solution is to\nalways **weak** link CoreNFC (since we can't guess devices)\n\nhttps://github.com/xamarin/xamarin-macios/issues/4628"},{"Id":"8130744001","Type":"PullRequestEvent","CreatedAt":"2018-08-17T19:39:40","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4640","RelatedDescription":"Opened pull request \"[IntentsUI] Update for Xcode 10 beta 6\" (#4640) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"8129791257","Type":"IssuesEvent","CreatedAt":"2018-08-17T16:08:43","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4305","RelatedDescription":"Closed issue \"Default MasterDetail template crashes with Xcode 10 beta 2\" (#4305) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. Create a new iOS Master Detail template\r\n2. Launch on iOS simulator (with Xcode 10 beta 2 selected)\r\n3. App crashes\r\n\r\n### Expected Behavior\r\n\r\nThe app shouldn't crash.\r\n\r\n_Note: workaround, enable the linker._\r\n\r\n### Actual Behavior\r\n\r\nhttps://gist.github.com/VincentDondain/d4dc8d59052a311264211833b2739761\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.5.2 (build 40)\r\nInstallation UUID: 00d602ef-271b-479b-9054-0433b5797215\r\nRuntime:\r\n\tMono 5.10.1.57 (2017-12/ea8a24b1bbf) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 510010057\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0-preview2-25407-01\r\n\t1.1.2\r\n\t1.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0-preview2-006497\r\n\t1.0.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.0 (14274.19)\r\nBuild 10L177m\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.99.0.74 (Visual Studio Enterprise)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.99.0.74 (Visual Studio Enterprise)\r\nHash: 5ef269076\r\nBranch: arkit-b2\r\nBuild date: 2018-06-20 12:16:21-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.3.2 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/vidondai/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t2.3 (API level 10)\r\n\t\t4.3 (API level 18)\r\n\t\t6.0 (API level 23)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705020040\r\nGit revision: cfe2fc0566bc4db990242959de40505a13f58352\r\nBuild date: 2018-05-30 11:24:18-04\r\nXamarin addins: 3ac7413ef51a88e06367313c27aec8f7292752a6\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.5\r\nDarwin 17.6.0 Darwin Kernel Version 17.6.0\r\n    Tue May  8 15:22:16 PDT 2018\r\n    root:xnu-4570.61.1~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nAddinMaker 1.4.2\r\nNuGet Package Explorer 0.2\r\nInternet of Things (IoT) development (Preview) 7.5\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\nhttps://gist.github.com/VincentDondain/ae113d4a50f813ccfdc088aefad8143f\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\nSee repro steps.\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1029840138099220487","CreatedAt":"2018-08-15T21:19:57+00:00","UserScreenname":"xamarinhq","Text":"Attend A #dotNETConf Event Near You - https://t.co/VrHYwnCS69\n\nIt's a FREE, 3-day virtual dev event co-organized by… https://t.co/tqMWcB8mJz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":33,"RawContent":null},{"Id":"1026898128509825024","CreatedAt":"2018-08-07T18:29:27+00:00","UserScreenname":"xamarinhq","Text":"- Authentication   - Encryption   - Integrity\n3 important requirements to securing network communications &amp; absolut… https://t.co/hDPkHLZsLA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":91,"FavoriteCount":47,"RawContent":null},{"Id":"1025442837813518336","CreatedAt":"2018-08-03T18:06:38+00:00","UserScreenname":"xamarinhq","Text":"Want to use a single code base for multiple platforms and devices? Of course you do. ...just posted to our Xamarin… https://t.co/qJBV4vvEir","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":171,"FavoriteCount":85,"RawContent":null},{"Id":"1024752638599028736","CreatedAt":"2018-08-01T20:24:02+00:00","UserScreenname":"xamarinhq","Text":"This year’s #dotNETConf is coming 9/12-14. Live sessions w/ speakers from the community &amp; it's your chance to learn… https://t.co/Nujb04dGd4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":72,"FavoriteCount":46,"RawContent":null},{"Id":"1024013376295452672","CreatedAt":"2018-07-30T19:26:28+00:00","UserScreenname":"xamarinhq","Text":"Here's everything you need to know to integrate automated visual UI tests into a dev toolchain that includes an… https://t.co/12Ihjj4bSN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":122,"FavoriteCount":56,"RawContent":null},{"Id":"1022882059763830784","CreatedAt":"2018-07-27T16:31:01+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/RGpgfHMoPZ -- Announcing Xamarin .Android support for Android 9.0 (P) now available for both #VS2017 &amp;… https://t.co/9clAy4LHZp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":83,"FavoriteCount":53,"RawContent":null},{"Id":"1022866229143461888","CreatedAt":"2018-07-27T15:28:07+00:00","UserScreenname":"xamarinhq","Text":"Previewing files from inside your Xamarin .iOS app is a great way to enhance user experience. ...and adding this fe… https://t.co/tF7v5at9xo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":30,"RawContent":null},{"Id":"1019670557011243008","CreatedAt":"2018-07-18T19:49:40+00:00","UserScreenname":"xamarinhq","Text":"Xamarin.Forms 3.1 delivers the latest in quality improvements. We're excited to introduce Xamarin.Forms 3.1, now wi… https://t.co/qW6S2P7Hi0","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":261,"FavoriteCount":163,"RawContent":null},{"Id":"1016758939877117952","CreatedAt":"2018-07-10T18:59:56+00:00","UserScreenname":"xamarinhq","Text":"Understanding your app, it's users, &amp; their interactions helps you build a 5-star app. Application Insights w/ AppC… https://t.co/Smw5tVHZ1X","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":43,"FavoriteCount":26,"RawContent":null},{"Id":"1014949294737186816","CreatedAt":"2018-07-05T19:09:03+00:00","UserScreenname":"xamarinhq","Text":"Cool intros to new goodies in &lt;10 minutes! Explore some of the “Snack Pack” episodes that @JamesMontemagno bundled… https://t.co/80gmo35fb6","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":89,"FavoriteCount":43,"RawContent":null},{"Id":"1014903254034141190","CreatedAt":"2018-07-05T16:06:06+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/3RaJk3O0xb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":34,"RawContent":null},{"Id":"1014521211970379776","CreatedAt":"2018-07-04T14:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":34,"RawContent":null},{"Id":"1014159326645313537","CreatedAt":"2018-07-03T14:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":25,"RawContent":null},{"Id":"1013873320834445313","CreatedAt":"2018-07-02T19:53:31+00:00","UserScreenname":"xamarinhq","Text":"In today's Xamarin Podcast, @PierceBoggan &amp; @JamesMontemagno talk up latest &amp; greatest in mobile #dotNET dev; Xamar… https://t.co/chy5AhHt86","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":63,"FavoriteCount":43,"RawContent":null},{"Id":"1013805063209455616","CreatedAt":"2018-07-02T15:22:17+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/kdzv9U4084","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":23,"RawContent":null},{"Id":"1013547297437835264","CreatedAt":"2018-07-01T22:18:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/JL1SW3MFro","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":29,"RawContent":null},{"Id":"1012399525338595328","CreatedAt":"2018-06-28T18:17:10+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/3QxhuBcUiC v7.2 introduces two new MSBuild properties to make maintaining Android VersionCode for Andr… https://t.co/j469e1DU24","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":84,"FavoriteCount":58,"RawContent":null}]}},"RunOn":"2018-08-20T05:30:51.0473514Z","RunDurationInMilliseconds":3894}