{"Data":{"GitHub":{"Issues":[{"Id":"413633669","IsPullRequest":true,"CreatedAt":"2019-02-23T00:53:21","Actor":"JuditRose","Number":"480","RawContent":null,"Title":"added toolbox item and toolbox item collection implementation","State":"open","Body":"Fixes #478 \r\n\r\nImplementations are copied over from here: https://github.com/dotnet/corefx/commit/fc7b99477d4937b8c31ea5a9e647ec7578139328\r\n\r\nFYI: This PR is partially dependent on the changes in #439, because of the required dependencies moving around from System.Windows.Forms to Common. ","Url":"https://github.com/dotnet/winforms/pull/480","RelatedDescription":"Open PR \"added toolbox item and toolbox item collection implementation\" (#480)"},{"Id":"413408756","IsPullRequest":false,"CreatedAt":"2019-02-23T00:03:02","Actor":"MohammadHamdyGhanem","Number":"475","RawContent":null,"Title":"ToolStripItem.Bounds is not correct for subitems","State":"closed","Body":"Mouse over a ToolStripMenuItem\r\nI want to know if the mouse is over any ToolStripMenuItem (in main menu, or context menu, at any level).\r\nI couldn't do it by `GetControlAtPos` method.\r\nI can check if the context menu is visible, then check if the mouse pos is inside the rectangle of one of its items. The problem is that `ToolStripItem.Bounds` property returns the correct rectangle only for the context menu and its direct child items, but the x y pos of the next level is the same as the first level! (try any ContextMenuStrip with items and sub items).\r\n\r\nSo, Is there a current solution to get the control or menu item under the mouse cursor easily? \r\nIf not, can you solve this in Window Forms Core?\r\nNote that writing handlers to detect mouse hover in each menu items all over the form is not the best solution.\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/475","RelatedDescription":"Closed issue \"ToolStripItem.Bounds is not correct for subitems\" (#475)"},{"Id":"413622579","IsPullRequest":true,"CreatedAt":"2019-02-22T23:48:38","Actor":"zsd4yr","Number":"479","RawContent":null,"Title":"fix downgrade netcore platforms","State":"open","Body":"fixes #477","Url":"https://github.com/dotnet/winforms/pull/479","RelatedDescription":"Open PR \"fix downgrade netcore platforms\" (#479)"},{"Id":"413616089","IsPullRequest":false,"CreatedAt":"2019-02-22T23:16:37","Actor":"JuditRose","Number":"478","RawContent":null,"Title":"Port Toolbox related components from framework to core","State":"open","Body":" - [ ] ToolboxItem\r\n - [x] IToolboxUser\r\n - [x] IToolboxService\r\n - [ ] ToolboxItemCollection\r\n - [x] ToolboxItemCreatorCallback\r\n\r\nRelated requests: #221 #469","Url":"https://github.com/dotnet/winforms/issues/478","RelatedDescription":"Open issue \"Port Toolbox related components from framework to core\" (#478)"},{"Id":"413539384","IsPullRequest":false,"CreatedAt":"2019-02-22T19:11:50","Actor":"JoeErickson","Number":"477","RawContent":null,"Title":"Error NU1605 trying to build Winforms.sln","State":"open","Body":"* .NET Core Version: \r\n  3.0.100-preview3-010283 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview4-010480 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Problem description:**\r\n\r\nAfter forking dotnet/winforms master Winforms.sln does not build - there are 64 cases of errors like this:\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tNU1605\tDetected package downgrade: Microsoft.NETCore.Platforms from 3.0.0-preview4.19118.6 to 3.0.0-preview3.19115.9. Reference the package directly from the project to select a different version. \r\n System.Windows.Forms -> System.Drawing.Common 4.6.0-preview4.19118.6 -> Microsoft.NETCore.Platforms (>= 3.0.0-preview4.19118.6) \r\n System.Windows.Forms -> Microsoft.NETCore.Platforms (>= 3.0.0-preview3.19115.9)\tSystem.Windows.Forms.Ref\tC:\\Users\\JoeErickson\\source\\repos\\winforms\\src\\System.Windows.Forms\\ref\\System.Windows.Forms.Ref.csproj\t1\t\r\n```\r\n\r\nThis has been an ongoing problem for a while. The workaround has been to change the ~15 C# projects to not treat NU1605 as an error.\r\n\r\nNU1605 is explicitly set to be treated as an error in all C# projects in Winforms.sln and this makes good sense but I cannot figure out how to get the correct build of .NET Core 3. Neither the daily build nor the current Preview 3 release works. This problem has persisted for at least several weeks.\r\n\r\n**Minimal repro:**\r\n1) Install latest Visual Studio 2019 Preview 3 and .NET Core 3 (Preview 3 or daily build).\r\n2) Fork and clone dotnet/winforms master.\r\n3) Load Winforms.sln into VS 2019.\r\n4) Try to build.\r\n","Url":"https://github.com/dotnet/winforms/issues/477","RelatedDescription":"Open issue \"Error NU1605 trying to build Winforms.sln\" (#477)"},{"Id":"413521806","IsPullRequest":true,"CreatedAt":"2019-02-22T18:21:20","Actor":"hughbe","Number":"476","RawContent":null,"Title":"Add ToolStripItem tests and remove bad Debug Asserts","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/pull/476","RelatedDescription":"Open PR \"Add ToolStripItem tests and remove bad Debug Asserts\" (#476)"},{"Id":"413394268","IsPullRequest":true,"CreatedAt":"2019-02-22T16:58:57","Actor":"dotnet-maestro[bot]","Number":"474","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19121.5\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/474","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#474)"},{"Id":"413300416","IsPullRequest":false,"CreatedAt":"2019-02-22T08:47:59","Actor":"Vino-Wang","Number":"473","RawContent":null,"Title":"Unable to cast object of type ‘System.IO.MemoryStream’ to type ‘System.Drawing.Color’ in .NET Core app","State":"open","Body":"* .NET Core Version:  .NET Core 3.0 Preview 3 3.0.100.10342 from Release branch\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\nUnable to cast object of type ‘System.IO.MemoryStream’ to type ‘System.Drawing.Color’ in .NET Core app.\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\nAn exception pops up, and the type isn't changed successfully.\r\n![netcoreapp](https://user-images.githubusercontent.com/18568603/53230246-3bb7cc80-36c1-11e9-8a28-ef97b0d6968b.png)\r\n\r\n**Expected behavior:**\r\nNo exception and the code execute successfully.\r\n![frameworkapp](https://user-images.githubusercontent.com/18568603/53230274-45d9cb00-36c1-11e9-91a2-78abd6d24107.png)\r\n\r\n**Minimal repro:**\r\n1.\tLaunch VS and create a default.NET Core app.\r\n2.\tAdd the following code to Form1.cs & Form1.designer.cs, then run the app(Or you can run the attached app directly).\r\n[NETCoreApp.zip](https://github.com/dotnet/winforms/files/2893083/NETCoreApp.zip)\r\n[FrameworkApp.zip](https://github.com/dotnet/winforms/files/2893085/FrameworkApp.zip)\r\n   Form1.cs\r\n        private void Form1_Load(object sender, EventArgs e)\r\n        {\r\n            //Set the format to \"CustomFormat\", then try to cast object of type 'System.IO.MemoryStream' to type 'System.Drawing.Color'\r\n            Color c = Color.Black;\r\n            Clipboard.SetData(\"CustomFormat\", Color.Red);\r\n            Object result = Clipboard.GetData(\"CustomFormat\");\r\n            c = (Color)result; // set the breakpoint at here\r\n\r\n            //Set the format to DataFormats.StringFormat, then try to cast object of type 'System.String' to type 'System.Drawing.Color'\r\n            //Color c = Color.Black;\r\n            //Clipboard.SetData(DataFormats.StringFormat, Color.Red);\r\n            //object result = Clipboard.GetData(DataFormats.StringFormat);\r\n            //c = (Color)result;  // set the breakpoint at here\r\n\r\n            //Set the format to \"CustomFormat\", then try to cast object of type 'System.IO.MemoryStream' to type 'System.String'\r\n            //String s;\r\n            //Clipboard.SetData(\"CustomFormat\", \"abc\");\r\n            //object result = Clipboard.GetData(\"CustomFormat\");\r\n            //s = (string)result;  // set the breakpoint at here\r\n}\r\n\t\r\n\tForm1.Designer.cs\r\n\tprivate void InitializeComponent()\r\n        {\r\n            this.SuspendLayout();\r\n            // \r\n            // Form1\r\n            // \r\n            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);\r\n            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;\r\n            this.ClientSize = new System.Drawing.Size(800, 450);\r\n            this.Name = \"Form1\";\r\n            this.Text = \"Form1\";\r\n            this.Load += new System.EventHandler(this.Form1_Load);\r\n            this.ResumeLayout(false);\r\n        }\r\n","Url":"https://github.com/dotnet/winforms/issues/473","RelatedDescription":"Open issue \"Unable to cast object of type ‘System.IO.MemoryStream’ to type ‘System.Drawing.Color’ in .NET Core app\" (#473)"},{"Id":"413164263","IsPullRequest":true,"CreatedAt":"2019-02-21T23:14:30","Actor":"dotnet-maestro[bot]","Number":"472","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- System.CodeDom - 4.6.0-preview3.19121.13\r\n- Microsoft.Win32.Registry - 4.6.0-preview3.19121.13\r\n- Microsoft.Win32.SystemEvents - 4.6.0-preview3.19121.13\r\n- System.Security.Cryptography.Cng - 4.6.0-preview3.19121.13\r\n- System.Security.Permissions - 4.6.0-preview3.19121.13\r\n- System.Configuration.ConfigurationManager - 4.6.0-preview3.19121.13\r\n- System.Windows.Extensions - 4.6.0-preview3.19121.13\r\n- System.Drawing.Common - 4.6.0-preview3.19121.13\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/472","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/corefx\" (#472)"},{"Id":"413076765","IsPullRequest":true,"CreatedAt":"2019-02-21T20:07:32","Actor":"tmat","Number":"470","RawContent":null,"Title":"Set copyright and package license","State":"closed","Body":"Prepares repo for change https://github.com/dotnet/arcade/pull/2003 by setting `Copyright` and `PackageLicenseExpression` properties. These values will be required to be set by each repository once https://github.com/dotnet/arcade/pull/2003 is merged.\r\n\r\nIn order to not break the current builds this change sets the properties conditionally. This condition can be removed once all repos switch to Arcade that has https://github.com/dotnet/arcade/pull/2003.\r\n\r\n@markwilkie\r\n","Url":"https://github.com/dotnet/winforms/pull/470","RelatedDescription":"Closed or merged PR \"Set copyright and package license\" (#470)"},{"Id":"413093981","IsPullRequest":false,"CreatedAt":"2019-02-21T19:47:52","Actor":"zsd4yr","Number":"471","RawContent":null,"Title":"Improve startup performance of applications with crossgen","State":"open","Body":"Work planned for composition repository will now be done in core-setup","Url":"https://github.com/dotnet/winforms/issues/471","RelatedDescription":"Open issue \"Improve startup performance of applications with crossgen\" (#471)"},{"Id":"412913278","IsPullRequest":true,"CreatedAt":"2019-02-21T19:26:28","Actor":"dotnet-maestro[bot]","Number":"466","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19121.1\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/466","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#466)"},{"Id":"412735532","IsPullRequest":true,"CreatedAt":"2019-02-21T19:24:56","Actor":"dotnet-maestro[bot]","Number":"464","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- System.CodeDom - 4.6.0-preview3.19120.17\r\n- Microsoft.Win32.Registry - 4.6.0-preview3.19120.17\r\n- Microsoft.Win32.SystemEvents - 4.6.0-preview3.19120.17\r\n- System.Security.Cryptography.Cng - 4.6.0-preview3.19120.17\r\n- System.Security.Permissions - 4.6.0-preview3.19120.17\r\n- System.Configuration.ConfigurationManager - 4.6.0-preview3.19120.17\r\n- System.Windows.Extensions - 4.6.0-preview3.19120.17\r\n- System.Drawing.Common - 4.6.0-preview3.19120.17\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/464","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/corefx\" (#464)"},{"Id":"412945266","IsPullRequest":true,"CreatedAt":"2019-02-21T18:32:48","Actor":"v-zbsail","Number":"467","RawContent":null,"Title":"LOC CHECKIN | dotnet/winforms master | 20190221","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/467","RelatedDescription":"Closed or merged PR \"LOC CHECKIN | dotnet/winforms master | 20190221\" (#467)"},{"Id":"412984502","IsPullRequest":false,"CreatedAt":"2019-02-21T15:32:32","Actor":"alepikhov","Number":"469","RawContent":null,"Title":"Required types and 'This method/object is not implemented by design.'","State":"open","Body":"While trying to put our codebase on core3 rails, we faced unexpected exception that frustrated us.\r\n \r\nThe following types are strongly necessary for our application:\r\n- System.Drawing.Design.ToolboxItem\r\n- System.ComponentModel.Design.ComponentDesigner \r\n \r\nBut we catch this exception: \r\nSystem.NotImplementedException: 'This method/object is not implemented by design.' \r\n \r\nCould you confirm that these types are in your plan and will be implemented in release v3.0?\r\n \r\nWe are also waiting for the following types from the System.Design lib:\r\n- System.ComponentModel.Design.UndoEngine\r\n- System.ComponentModel.Design.DesignSurface \r\n- System.ComponentModel.Design.InheritanceService \r\n- System.ComponentModel.Design.DesignerActionMethodItem\r\n- System.ComponentModel.Design.DesignerActionPropertyItem\r\n \r\nCan we expect to see all the missed types in the final release?","Url":"https://github.com/dotnet/winforms/issues/469","RelatedDescription":"Open issue \"Required types and 'This method/object is not implemented by design.'\" (#469)"},{"Id":"412975985","IsPullRequest":true,"CreatedAt":"2019-02-21T15:15:33","Actor":"hughbe","Number":"468","RawContent":null,"Title":"Use EventArgs.Empty instead of new EventArgs()","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/pull/468","RelatedDescription":"Open PR \"Use EventArgs.Empty instead of new EventArgs()\" (#468)"},{"Id":"412759207","IsPullRequest":false,"CreatedAt":"2019-02-21T05:48:16","Actor":"Zheng-Li01","Number":"465","RawContent":null,"Title":"ComboBox’s text cannot be partially selected when using mouse slides","State":"open","Body":"**OS:** RS5 X64\r\n**VS:** Dev16 16.0.0 Preview 4.0 [28612.88.d16.0]\r\n**.NET SDK:** .NET Core 3.0.100-preview-010334 from release branch\r\n\r\n**More info:**\r\nThe issue reproduce on when setting the \"DropDownStyle\" property value of the Combobox control is \"Sample\"/\"DropDown\".\r\n\r\n**Steps to Reproduce:**\r\n1.  Open the attached .NET Core application and run it.([\\\\mlangfs1\\public\\Winforms\\v-zhgl\\ComboboxIssue\\CoreApplication.zip](url))\r\n2. Try to select partially text in the Combobox control using mouse slides.\r\n\r\n**Actual**: ComboBox’s text cannot be partially selected when using mouse slides\r\n![comboboxissue](https://user-images.githubusercontent.com/38325459/53146214-549b8180-35de-11e9-813e-012b3a6ad75e.gif)\r\n\r\n**Expexted**: ComboBox’s text can be partially selected when using mouse slides\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/465","RelatedDescription":"Open issue \"ComboBox’s text cannot be partially selected when using mouse slides\" (#465)"},{"Id":"412671247","IsPullRequest":true,"CreatedAt":"2019-02-20T23:21:55","Actor":"zsd4yr","Number":"463","RawContent":null,"Title":"Merge from master into Release/3.0 for Preview 3","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/463","RelatedDescription":"Closed or merged PR \"Merge from master into Release/3.0 for Preview 3\" (#463)"},{"Id":"412664931","IsPullRequest":true,"CreatedAt":"2019-02-20T22:51:39","Actor":"dotnet-maestro[bot]","Number":"462","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- System.CodeDom - 4.6.0-preview3.19120.9\r\n- Microsoft.Win32.Registry - 4.6.0-preview3.19120.9\r\n- Microsoft.Win32.SystemEvents - 4.6.0-preview3.19120.9\r\n- System.Security.Cryptography.Cng - 4.6.0-preview3.19120.9\r\n- System.Security.Permissions - 4.6.0-preview3.19120.9\r\n- System.Configuration.ConfigurationManager - 4.6.0-preview3.19120.9\r\n- System.Windows.Extensions - 4.6.0-preview3.19120.9\r\n- System.Drawing.Common - 4.6.0-preview3.19120.9\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/462","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/corefx\" (#462)"},{"Id":"412413650","IsPullRequest":true,"CreatedAt":"2019-02-20T19:10:51","Actor":"dotnet-maestro[bot]","Number":"461","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19119.2\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/461","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#461)"},{"Id":"412149726","IsPullRequest":true,"CreatedAt":"2019-02-19T22:19:47","Actor":"dotnet-maestro[bot]","Number":"460","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- System.CodeDom - 4.6.0-preview3.19119.6\r\n- Microsoft.Win32.Registry - 4.6.0-preview3.19119.6\r\n- Microsoft.Win32.SystemEvents - 4.6.0-preview3.19119.6\r\n- System.Security.Cryptography.Cng - 4.6.0-preview3.19119.6\r\n- System.Security.Permissions - 4.6.0-preview3.19119.6\r\n- System.Configuration.ConfigurationManager - 4.6.0-preview3.19119.6\r\n- System.Windows.Extensions - 4.6.0-preview3.19119.6\r\n- System.Drawing.Common - 4.6.0-preview3.19119.6\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/460","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/corefx\" (#460)"},{"Id":"412079783","IsPullRequest":false,"CreatedAt":"2019-02-19T19:10:26","Actor":"zsd4yr","Number":"459","RawContent":null,"Title":"Refactor Clipboard to make it testable","State":"open","Body":"Related to #416\r\n\r\nIdeally we would refactor clipboard code so that all calls to win32 OLE* methods are exposed by a single class (OleClipboard) and published as a public interface and a constructor that takes object that implements that interface as a parameter. Then the test will mock the IOleClipboard interface and use constructor that takes this mock as a parameter.","Url":"https://github.com/dotnet/winforms/issues/459","RelatedDescription":"Open issue \"Refactor Clipboard to make it testable\" (#459)"},{"Id":"411186878","IsPullRequest":true,"CreatedAt":"2019-02-19T17:49:39","Actor":"dotnet-maestro[bot]","Number":"456","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- System.CodeDom - 4.6.0-preview4.19117.1\r\n- Microsoft.Win32.Registry - 4.6.0-preview4.19117.1\r\n- Microsoft.Win32.SystemEvents - 4.6.0-preview4.19117.1\r\n- System.Security.Cryptography.Cng - 4.6.0-preview4.19117.1\r\n- System.Security.Permissions - 4.6.0-preview4.19117.1\r\n- System.Configuration.ConfigurationManager - 4.6.0-preview4.19117.1\r\n- System.Windows.Extensions - 4.6.0-preview4.19117.1\r\n- System.Drawing.Common - 4.6.0-preview4.19117.1\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- System.CodeDom - 4.6.0-preview4.19118.1\r\n- Microsoft.Win32.Registry - 4.6.0-preview4.19118.1\r\n- Microsoft.Win32.SystemEvents - 4.6.0-preview4.19118.1\r\n- System.Security.Cryptography.Cng - 4.6.0-preview4.19118.1\r\n- System.Security.Permissions - 4.6.0-preview4.19118.1\r\n- System.Configuration.ConfigurationManager - 4.6.0-preview4.19118.1\r\n- System.Windows.Extensions - 4.6.0-preview4.19118.1\r\n- System.Drawing.Common - 4.6.0-preview4.19118.1\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- System.CodeDom - 4.6.0-preview4.19118.6\r\n- Microsoft.Win32.Registry - 4.6.0-preview4.19118.6\r\n- Microsoft.Win32.SystemEvents - 4.6.0-preview4.19118.6\r\n- System.Security.Cryptography.Cng - 4.6.0-preview4.19118.6\r\n- System.Security.Permissions - 4.6.0-preview4.19118.6\r\n- System.Configuration.ConfigurationManager - 4.6.0-preview4.19118.6\r\n- System.Windows.Extensions - 4.6.0-preview4.19118.6\r\n- System.Drawing.Common - 4.6.0-preview4.19118.6\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/456","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#456)"},{"Id":"411070861","IsPullRequest":true,"CreatedAt":"2019-02-19T17:49:24","Actor":"dotnet-maestro[bot]","Number":"455","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19115.1\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19115.1\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19115.1\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19115.1\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/455","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#455)"},{"Id":"412008707","IsPullRequest":true,"CreatedAt":"2019-02-19T16:27:14","Actor":"dotnet-maestro[bot]","Number":"458","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- System.Windows.Extensions - 4.6.0-preview3.19115.9\r\n- System.CodeDom - 4.6.0-preview3.19115.9\r\n- Microsoft.Win32.Registry - 4.6.0-preview3.19115.9\r\n- Microsoft.Win32.SystemEvents - 4.6.0-preview3.19115.9\r\n- System.Security.Cryptography.Cng - 4.6.0-preview3.19115.9\r\n- System.Security.Permissions - 4.6.0-preview3.19115.9\r\n- System.Configuration.ConfigurationManager - 4.6.0-preview3.19115.9\r\n- System.Drawing.Common - 4.6.0-preview3.19115.9\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/458","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/corefx\" (#458)"},{"Id":"411232017","IsPullRequest":false,"CreatedAt":"2019-02-17T20:37:18","Actor":"wjk","Number":"457","RawContent":null,"Title":"Support IDragSourceHelper/IDragTargetHelper?","State":"open","Body":"These two interfaces are used to support enhanced drag-and-drop support, including (most importantly for me) the ability to specify a custom image to be displayed under the cursor during the drag. While this can be done in C# today by using COM interop, you have to roll your own `IDataObject` implementation to do so, as the default Windows Forms one does not support setting arbitrary COM-based private formats into the data object, per Windows requirements. Would it be possible to update the Windows Forms `DataObject` class to enable this? (It would be even better if there would be higher-level code added to obviate the need to do custom COM interop to use thesee features, but I do not know what the API design for that would look like.) Thanks!","Url":"https://github.com/dotnet/winforms/issues/457","RelatedDescription":"Open issue \"Support IDragSourceHelper/IDragTargetHelper?\" (#457)"},{"Id":"411023043","IsPullRequest":true,"CreatedAt":"2019-02-16T04:02:51","Actor":"manuelvalenzuela","Number":"454","RawContent":null,"Title":"Added CheckParentingCycle, that check for any circular reference in the ancestors chain.","State":"open","Body":"Closes #358 \r\n\r\n@manuelvalenzuela the closing comment has to go in this first message, not the PR header","Url":"https://github.com/dotnet/winforms/pull/454","RelatedDescription":"Open PR \"Added CheckParentingCycle, that check for any circular reference in the ancestors chain.\" (#454)"},{"Id":"410983252","IsPullRequest":true,"CreatedAt":"2019-02-16T00:09:42","Actor":"zsd4yr","Number":"453","RawContent":null,"Title":"Make tested currentUICulture equal to currentCulture on the Thread","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/pull/453","RelatedDescription":"Closed or merged PR \"Make tested currentUICulture equal to currentCulture on the Thread\" (#453)"},{"Id":"410922415","IsPullRequest":true,"CreatedAt":"2019-02-15T20:01:16","Actor":"sharwell","Number":"452","RawContent":null,"Title":"Remove comment header from ResXResourceWriter output","State":"open","Body":"Fixes #450","Url":"https://github.com/dotnet/winforms/pull/452","RelatedDescription":"Open PR \"Remove comment header from ResXResourceWriter output\" (#452)"},{"Id":"410902524","IsPullRequest":false,"CreatedAt":"2019-02-15T19:02:17","Actor":"zsd4yr","Number":"451","RawContent":null,"Title":"Add Rosyln analyzers to generate ship.api.txt as part of msbuild","State":"open","Body":"related to #175 \r\nsee also PR #237\r\n\r\nThis is to ensure any additional API gets captured for the purposes of API review; this file is not used by code.","Url":"https://github.com/dotnet/winforms/issues/451","RelatedDescription":"Open issue \"Add Rosyln analyzers to generate ship.api.txt as part of msbuild\" (#451)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-02-23T05:31:03.3966373Z","RunDurationInMilliseconds":753}