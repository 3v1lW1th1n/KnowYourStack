{"Data":{"Blog":{"FeedItems":[{"Title":"ASP.NET Core 2.1.0-preview2: Improvements to the Kestrel HTTP server","PublishedOn":"2018-04-13T00:42:44+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Change default transport to Sockets Building off the improvements to the managed sockets implementation in .NET Core we have changed the default transport in Kestrel from libuv to sockets. As a...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/12/asp-net-core-2-1-0-preview2-improvements-to-the-kestrel-http-server/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview2 now available","PublishedOn":"2018-04-12T17:24:30+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Today we&#8217;re very happy to announce that the second preview of the next minor release of ASP.NET Core and .NET Core is now available for you to try out. This second preview includes many...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/12/asp-net-core-2-1-0-preview2-now-available/","RawContent":null},{"Title":"Get started building .NET web apps that run in the browser with Blazor","PublishedOn":"2018-03-22T17:00:26+00:00","CommentsCount":42,"FacebookCount":0,"Summary":"Today we released our first public preview of Blazor, a new experimental .NET web framework using C#/Razor and HTML that runs in the browser with WebAssembly. Blazor enables full stack web development...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/22/get-started-building-net-web-apps-in-the-browser-with-blazor/","RawContent":null},{"Title":"ASP.NET Core manageability and Application Insights improvements","PublishedOn":"2018-03-22T14:12:38+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"There are many great investments on the ASP.NET Core 2.1 roadmap. These investments make ASP.NET Core applications easier to write, host, test, and make security and standards compliant. This blog...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/22/asp-net-core-manageability-and-application-insights-improvements/","RawContent":null},{"Title":"Announcing Preview 1 of ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5","PublishedOn":"2018-03-19T22:00:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released Preview 1 of ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5 on NuGet. This is a patch release that contains only bug fixes. You can find the full list of bug fixes for this...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/19/announcing-preview-1-of-asp-net-mvc-5-2-5-web-api-5-2-5-and-web-pages-3-2-5/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Functional testing of MVC applications","PublishedOn":"2018-03-05T18:30:28+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"For ASP.NET Core 2.1 we have created a new package, Microsoft.AspNetCore.Mvc.Testing, to help streamline in-memory end-to-end testing of MVC applications using TestServer. This package takes care of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/05/asp-net-core-2-1-0-preview1-functional-testing-of-mvc-applications/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: GDPR enhancements","PublishedOn":"2018-03-04T19:21:40+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"2018 sees the introduction of the General Data Protection Regulation, an EU framework to allow EU citizens to control, correct and delete their data, no matter where in the word it is held. In ASP.NET...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/04/asp-net-core-2-1-0-preview1-gdpr-enhancements/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Introducing Identity UI as a library","PublishedOn":"2018-03-02T19:00:19+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"ASP.NET Core has historically provided project templates with code for setting up ASP.NET Core Identity, which enables support for identity related features like user registration, login, account...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/02/aspnetcore-2-1-identity-ui/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Razor UI in class libraries","PublishedOn":"2018-03-01T18:00:26+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"One frequently requested scenario that ASP.NET Core 2.1 improves is building UI in reusable class libraries. With ASP.NET Core 2.1 you can package your Razor views and pages (.cshtml files) along with...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/01/asp-net-core-2-1-razor-ui-in-class-libraries/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Improvements to IIS hosting","PublishedOn":"2018-03-01T01:56:02+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"The ASP.NET Core Module (ANCM) is a global IIS module that has been responsible for proxying requests over from IIS to your backend ASP.NET Core application running Kestrel. Since 2.0 we have been...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/28/asp-net-core-2-1-0-preview1-improvements-to-iis-hosting/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7530687846","Type":"IssuesEvent","CreatedAt":"2018-04-14T19:26:46","Actor":"tugberkugurlu","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3057","RelatedDescription":"Opened issue \"Be able to get back from IServiceProvider to IServiceCollection\" (#3057) at aspnet/Home","RelatedBody":"I am looking for a sane way to get back from an instance of `IServiceProvider` which is built from `IServiceCollection` to a fresh instance of `IServiceCollection`. This is basically why I need this: https://github.com/tugberkugurlu/AspNetCoreSamples/blob/4655f7520b6a0cbec65c949a480e35448268b578/AppBuilderTests/WebApp.Tests/ApplicationBuilderTests.cs#L39-L52 If this is possible, I could go from `webHost.Services ` to an instance of `IServiceCollection` w/o that unreliable reflection magic.\r\n\r\nIs there a sane way to do this today?"},{"Id":"7530050037","Type":"IssuesEvent","CreatedAt":"2018-04-14T12:46:07","Actor":"henkmollema","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3056","RelatedDescription":"Closed issue \"Propagate handled exceptions from exception handler middleware\" (#3056) at aspnet/Home","RelatedBody":"Currently the exception handler middleware doesn't propagate the exception after it's handled successfully. This means earlier middleware in the pipeline have no chance to log the exception to other logging systems. For example, Google Cloud error reporting middleware is registered before the exception handler middleware which consists of a simple `try/catch` mechanism. However, the `catch` is never hit as the exception is not being re-thrown.\r\n\r\nThere has been a `TODO` about this in the code for quite some time:\r\nhttps://github.com/aspnet/Diagnostics/blob/9734338a55b5fbd47c7662a3c159a255938595be/src/Microsoft.AspNetCore.Diagnostics/ExceptionHandler/ExceptionHandlerMiddleware.cs#L89-L90\r\n\r\nAre there any plans to implement this? Perhaps controllable via an option? I could send a PR if this feature is desired."},{"Id":"7529902456","Type":"IssuesEvent","CreatedAt":"2018-04-14T10:55:58","Actor":"henkmollema","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3056","RelatedDescription":"Opened issue \"Propagate handled exceptions from exception handler middleware\" (#3056) at aspnet/Home","RelatedBody":"Currently the exception handler middleware doesn't propagate the exception after it's handled successfully. This means earlier middleware in the pipeline have no chance to log the exception to other logging systems. For example, Google Cloud error reporting middleware is registered before the exception handler middleware which consists of a simple `try/catch` mechanism. However, the `catch` is never hit as the exception is not being re-thrown.\r\n\r\nThere has been a `TODO` about this in the code for quite some time:\r\nhttps://github.com/aspnet/Diagnostics/blob/9734338a55b5fbd47c7662a3c159a255938595be/src/Microsoft.AspNetCore.Diagnostics/ExceptionHandler/ExceptionHandlerMiddleware.cs#L89-L90\r\n\r\nAre there any plans to implement this? Perhaps controllable via an option? I could send a PR if this feature is desired."},{"Id":"7528783140","Type":"IssuesEvent","CreatedAt":"2018-04-13T22:20:36","Actor":"natemcmaster","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2941","RelatedDescription":"Closed issue \"PersistKeysToFileSystem in Docker hosted in Linux fails with \"Unknown error 524\"\" (#2941) at aspnet/Home","RelatedBody":"@joetherod commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343)\r\n\r\nTrying to AddDataProtection for MVC Core app.\r\n\r\n```c#\r\nservices.AddDataProtection()\r\n                .PersistKeysToFileSystem(new DirectoryInfo(\"etc/keys/\"))\r\n                .SetApplicationName(\"AppName\")\r\n```\r\n\r\nThe Directory is a configured volume mount in the linux host.\r\nIf I dont use the volume mount, it works.\r\nVolume mount is needed as per described in MS Docs since the app is hosted in many Docker containers.\r\nPlease advise.\r\n\r\nWorks locally. But when configured to a Docker container hosted in linux, I get the following exception on startup:\r\n\r\n{\"Timestamp\":\"2018-03-08T20:45:37.4873753+00:00\",\"Level\":\"Error\",\"MessageTemplate\":\"An error occurred while reading the key ring.\",\"Exception\":\"System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\",\"Properties\":{\"EventId\":{\"Id\":48},\"SourceContext\":\"Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider\",\"RequestId\":\"0HLC55SODK05P:00000001\",\"RequestPath\":\"/_health\",\"CorrelationId\":null,\"ConnectionId\":\"0HLC55SODK05P\"}}\r\n\r\n\r\n---\r\n\r\n@Tratcher commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371634771)\r\n\r\n@natemcmaster \r\n\r\n---\r\n\r\n@natemcmaster commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371636962)\r\n\r\nThis appears to be an issue with your Docker host, not with ASP.NET Core. System.IO.File.Move is failing to write into the mounted directory. Can you verify this with a minimal repro like this?\r\n```c#\r\npublic static void Main(string[] args)\r\n{\r\n    var tempFile = Path.Combine(Path.GetTempPath(), \"test.txt\");\r\n    File.WriteAllText(tempFile, \"Hello\");\r\n    File.Move(tempFile, \"etc/keys/test.txt\");\r\n}\r\n```\r\n\r\n---\r\n\r\n@joetherod commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371659784)\r\n\r\nWrite and move works, but still getting exception.\r\n\r\nAn error occurred while reading the key ring.\",\"Exception\":\"System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\",\"Properties\":{\"EventId\":{\"Id\":48},\"SourceContext\":\"Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider\",\"RequestId\":\"0HLC597NS53I0:00000001\",\"RequestPath\":\"/_health\",\"CorrelationId\":null,\"ConnectionId\":\"0HLC597NS53I0\"}}\r\n\r\nAn unhandled exception was thrown by the application.\",\"Exception\":\"System.Security.Cryptography.CryptographicException: An error occurred while trying to encrypt the provided data. Refer to the inner exception for more information. ---> System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext)\\n   --- End of inner exception stack trace ---\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext)\\n   at Microsoft.AspNetCore.Session.CookieProtection.Protect(IDataProtector protector, String data)\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.<Invoke>d__9.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.<Invoke>d__3.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Hosting.Internal.RequestServicesContainerMiddleware.<Invoke>d__3.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequestsAsync>d__185`1.MoveNext()\",\"Properties\":{\"ConnectionId\":\"0HLC597NS53I0\",\"TraceIdentifier\":\"0HLC597NS53I0:00000001\",\"EventId\":{\"Id\":13,\"Name\":\"ApplicationError\"},\"SourceContext\":\"Microsoft.AspNetCore.Server.Kestrel\",\"RequestId\":\"0HLC597NS53I0:00000001\",\"RequestPath\":\"/_health\",\"CorrelationId\":null}}\r\n\r\n---\r\n\r\n@natemcmaster commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371661817)\r\n\r\nCan you provide more log info? There should be an INFO log item just before this File.Move\r\n\r\nhttps://github.com/aspnet/DataProtection/blob/8a42c24f46d728b4728e6b20febd0a11c1111df2/src/Microsoft.AspNetCore.DataProtection/Repositories/FileSystemXmlRepository.cs#L232-L233\r\n\r\n---\r\n\r\n@joetherod commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371685069)\r\n\r\n services.AddDataProtection()\r\n                .PersistKeysToFileSystem(new DirectoryInfo(\"etc/talentbrew/keys\"))\r\n                .SetApplicationName(\"XXX\")\r\n                .SetDefaultKeyLifetime(TimeSpan.FromDays(365));\r\n\r\nLevel\":\"Information\",\"MessageTemplate\":\"Writing data to file '{FileName}'.\",\"Properties\":{\"FileName\":\"/app/etc/talentbrew/keys/key-fb6f8187-5606-445b-9591-3c268c59ff84.xml\",\"EventId\":{\"Id\":39},\"SourceContext\":\"Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository\",\"RequestId\":\"0HLC5BJ5EVUU9:00000001\",\"RequestPath\":\"/_health\",\"CorrelationId\":null,\"ConnectionId\":\"0HLC5BJ5EVUU9\"}\r\n\r\n\"Level\":\"Error\",\"MessageTemplate\":\"Connection id \\\"{ConnectionId}\\\", Request id \\\"{TraceIdentifier}\\\": An unhandled exception was thrown by the application.\",\"Exception\":\"System.Security.Cryptography.CryptographicException: An error occurred while trying to encrypt the provided data. Refer to the inner exception for more information. ---> System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext)\\n   --- End of inner exception stack trace ---\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext)\\n   at Microsoft.AspNetCore.Session.CookieProtection.Protect(IDataProtector protector, String data)\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.<Invoke>d__9.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.<Invoke>d__3.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Hosting.Internal.RequestServicesContainerMiddleware.<Invoke>d__3.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequestsAsync>d__185`1.MoveNext()\",\"Properties\":{\"ConnectionId\":\"0HLC5BJ5EVUU9\",\"TraceIdentifier\":\"0HLC5BJ5EVUU9:00000001\",\"EventId\":{\"Id\":13,\"Name\":\"ApplicationError\"},\"SourceContext\":\"Microsoft.AspNetCore.Server.Kestrel\",\"RequestId\":\"0HLC5BJ5EVUU9:00000001\",\"RequestPath\":\"/_health\",\"CorrelationId\":null}}\r\n\r\n\"Level\":\"Information\",\"MessageTemplate\":\"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.\",\"Properties\":{\"KeyId\":\"fb6f8187-5606-445b-9591-3c268c59ff84\",\"CreationDate\":\"2018-03-09T01:33:27.3851082+00:00\",\"ActivationDate\":\"2018-03-09T01:33:27.3843013+00:00\",\"ExpirationDate\":\"2019-03-09T01:33:27.3843013+00:00\",\"EventId\":{\"Id\":58},\"SourceContext\":\"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager\",\"RequestId\":\"0HLC5BJ5EVUU9:00000001\",\"RequestPath\":\"/_health\",\"CorrelationId\":null,\"ConnectionId\":\"0HLC5BJ5EVUU9\"},\"Renderings\":{\"KeyId\":[{\"Format\":\"B\",\"Rendering\":\"{fb6f8187-5606-445b-9591-3c268c59ff84}\"}],\"CreationDate\":[{\"Format\":\"u\",\"Rendering\":\"2018-03-09 01:33:27Z\"}],\"ActivationDate\":[{\"Format\":\"u\",\"Rendering\":\"2018-03-09 01:33:27Z\"}],\"ExpirationDate\":[{\"Format\":\"u\",\"Rendering\":\"2019-03-09 01:33:27Z\"}]}}\r\n\r\nLevel\":\"Error\",\"MessageTemplate\":\"An error occurred while reading the key ring.\",\"Exception\":\"System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\",\"Properties\":{\"EventId\":{\"Id\":48},\"SourceContext\":\"Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider\",\"RequestId\":\"0HLC5BJ5EVUU9:00000001\",\"RequestPath\":\"/_health\",\"CorrelationId\":null,\"ConnectionId\":\"0HLC5BJ5EVUU9\"}}\r\n\r\n"},{"Id":"7528273325","Type":"IssuesEvent","CreatedAt":"2018-04-13T20:08:06","Actor":"kichalla","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3052","RelatedDescription":"Closed issue \"Routing tests broken on Mac\" (#3052) at aspnet/Home","RelatedBody":"https://travis-ci.org/aspnet/Routing/jobs/365869435\r\n\r\n```\r\n[xUnit.net 00:00:03.2304060]     Microsoft.AspNetCore.Routing.RouteTest.GetVirtualPath_AlwaysUsesDefaultUrlEncoder [FAIL]\r\nFailed   Microsoft.AspNetCore.Routing.RouteTest.GetVirtualPath_AlwaysUsesDefaultUrlEncoder\r\nError Message:\r\n Assert.Equal() Failure\r\n                                 ↓ (pos 62)\r\nExpected: ···20%23characters%20J%C3%B6rn\r\nActual:   ···20%23characters%20J%EF%BF%BDrn\r\n                                 ↑ (pos 62)\r\nStack Trace:\r\n   at Microsoft.AspNetCore.Routing.RouteTest.GetVirtualPath_AlwaysUsesDefaultUrlEncoder() in /_/test/Microsoft.AspNetCore.Routing.Tests/RouteTest.cs:line 675\r\n```\r\n\r\ncc @kichalla @jbagga @NTaylorMullen ?"},{"Id":"7528086117","Type":"IssuesEvent","CreatedAt":"2018-04-13T19:24:23","Actor":"pakrym","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3055","RelatedDescription":"Closed issue \"ConfigurationBuild.Build with non-existent Json file and reloadOnChange hangs on Ubuntu\" (#3055) at aspnet/Home","RelatedBody":"After instrumenting app from issue https://github.com/aspnet/AzureIntegration/issues/171 with a bunch of `Console.WriteLine()` calls:\r\n![image](https://user-images.githubusercontent.com/1697911/38753295-c89acf6e-3f12-11e8-95a2-9840135fc091.png)\r\n\r\nI got the following output:\r\n![image](https://user-images.githubusercontent.com/1697911/38753268-b8d43462-3f12-11e8-86ab-9c5b52b71000.png)\r\n\r\nThat means that `configurationBuilder.Build()` hangs.\r\n\r\nThe other things to consider is that in this case, `json` file doesn't exist and `reloadOnChange` is set to `true`.\r\n\r\nI also wasn't able to repro this issue outside CI test run, maybe it requires a lot of file IO to repro."},{"Id":"7528047005","Type":"IssuesEvent","CreatedAt":"2018-04-13T19:15:24","Actor":"pakrym","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3055","RelatedDescription":"Opened issue \"ConfigurationBuild.Build with non-existent Json file and reloadOnChange hangs on Ubuntu\" (#3055) at aspnet/Home","RelatedBody":"After instrumenting app from issue https://github.com/aspnet/AzureIntegration/issues/171 with a bunch of `Console.WriteLine()` calls:\r\n![image](https://user-images.githubusercontent.com/1697911/38753295-c89acf6e-3f12-11e8-95a2-9840135fc091.png)\r\n\r\nI got the following output:\r\n![image](https://user-images.githubusercontent.com/1697911/38753268-b8d43462-3f12-11e8-86ab-9c5b52b71000.png)\r\n\r\nThat means that `configurationBuilder.Build()` hangs.\r\n\r\nThe other things to consider is that in this case, `json` file doesn't exist and `reloadOnChange` is set to `true`.\r\n\r\nI also wasn't able to repro this issue outside CI test run, maybe it requires a lot of file IO to repro."}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7533665253","Type":"PullRequestEvent","CreatedAt":"2018-04-16T03:56:50","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2036","RelatedDescription":"Merged pull request \"Microsoft.AspNetCore.SignalR.Redis API review\" (#2036) at aspnet/SignalR","RelatedBody":"- Rename RedisOptions.Factory to ConnectionFactory\r\n- Rename RedisOptions.Options to Configuration\r\n- Internalize Microsoft.AspNetCore.SignalR.Redis.Internal"},{"Id":"7533660222","Type":"PullRequestEvent","CreatedAt":"2018-04-16T03:54:43","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2033","RelatedDescription":"Merged pull request \"API review changes for Microsoft.AspNetCore.SignalR\" (#2033) at aspnet/SignalR","RelatedBody":"- Pubternalize DefaultHubActivator and make methods virtual\r\n- Remove HubConnectionContext.Input **(used by dispatcher so made internal instead)**\r\n- Internalize DefaultHubCallerContext **(used by ChatSample.PresenceHubLifetimeManager so made pub internal)**\r\n- Internalize HubConnectionStore **(used by RedisHubLifetimeManager so made pub internal)**\r\n- Change order arguments in HubLifetimeManager.AddGroupAsync/RemoveGroupAsync\r\n- Change order arguments in IGroupManager.AddGroupAsync/RemoveGroupAsync\r\n- Rename: IClientProxyExtensions -> ClientProxyExtensions\r\n- Remove HubRouteBuilder.MapHub(string)\r\n- Rename excludedIds to excludedConnectionIds in IHubClients.NExcept methods."},{"Id":"7533572551","Type":"PullRequestEvent","CreatedAt":"2018-04-16T03:19:35","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2035","RelatedDescription":"Merged pull request \"Update text and binary formatter helpers to be shared from API review\" (#2035) at aspnet/SignalR","RelatedBody":"- Move formatters to the protocol libraries in which they are used\r\n- Source-link TextMessageFormatter/TestMessageParser in to where the HandshakeProtocol needs it"},{"Id":"7533202748","Type":"PullRequestEvent","CreatedAt":"2018-04-16T00:36:45","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2036","RelatedDescription":"Opened pull request \"Microsoft.AspNetCore.SignalR.Redis API review\" (#2036) at aspnet/SignalR","RelatedBody":"- Rename RedisOptions.Factory to ConnectionFactory\r\n- Rename RedisOptions.Options to Configuration\r\n- Internalize Microsoft.AspNetCore.SignalR.Redis.Internal"},{"Id":"7533169179","Type":"PullRequestEvent","CreatedAt":"2018-04-16T00:16:53","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2035","RelatedDescription":"Opened pull request \"Update text and binary formatter helpers to be shared from API review\" (#2035) at aspnet/SignalR","RelatedBody":"- Move formatters to the protocol libraries in which they are used\r\n- Source-link TextMessageFormatter/TestMessageParser in to where the HandshakeProtocol needs it"},{"Id":"7533047942","Type":"IssuesEvent","CreatedAt":"2018-04-15T23:01:48","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2034","RelatedDescription":"Opened issue \"flakey test: HubConnectionTests.StreamDoesNotStartIfTokenAlreadyCanceled\" (#2034) at aspnet/SignalR","RelatedBody":"https://travis-ci.org/aspnet/SignalR/jobs/366925916#L1672\r\n\r\n```\r\n  Failed   Microsoft.AspNetCore.SignalR.Client.FunctionalTests.HubConnectionTests.StreamDoesNotStartIfTokenAlreadyCanceled(protocolName: \"json\", transportType: ServerSentEvents, path: \"/hubT\")\r\nRUNDOTNET : error Message:  [/home/travis/.dotnet/buildtools/korebuild/2.1.0-preview3-17018/KoreBuild.proj]\r\n   System.Exception : 2 error(s) logged.\r\n  Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport - ErrorSending - Error while sending to 'http://127.0.0.1:37836/hubT?id=yQxRq7gWm5gfF9Kejtv3pQ'.\r\n  ===================\r\n  System.Net.Http.HttpRequestException: Response status code does not indicate success: 404 (Not Found).\r\n     at System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode()\r\n     at Microsoft.AspNetCore.Http.Connections.Client.SendUtils.<SendMessages>d__0.MoveNext() in /_/src/Microsoft.AspNetCore.Http.Connections.Client/SendUtils.cs:line 81\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n     at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n     at Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport.<ProcessAsync>d__18.MoveNext() in /_/src/Microsoft.AspNetCore.Http.Connections.Client/Internal/ServerSentEventsTransport.cs:line 105\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n     at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n     at Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport.<StopAsync>d__20.MoveNext() in /_/src/Microsoft.AspNetCore.Http.Connections.Client/Internal/ServerSentEventsTransport.cs:line 222\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n     at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n     at Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.<DisposeAsyncCore>d__38.MoveNext() in /_/src/Microsoft.AspNetCore.Http.Connections.Client/HttpConnection.cs:line 179\r\n  ===================\r\n  Microsoft.AspNetCore.Http.Connections.Client.HttpConnection - TransportThrewExceptionOnStop - The transport threw an exception while stopping.\r\n  ===================\r\n  System.Net.Http.HttpRequestException: Response status code does not indicate success: 404 (Not Found).\r\n     at System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode()\r\n     at Microsoft.AspNetCore.Http.Connections.Client.SendUtils.<SendMessages>d__0.MoveNext() in /_/src/Microsoft.AspNetCore.Http.Connections.Client/SendUtils.cs:line 81\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n     at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n     at Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport.<ProcessAsync>d__18.MoveNext() in /_/src/Microsoft.AspNetCore.Http.Connections.Client/Internal/ServerSentEventsTransport.cs:line 105\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n     at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n     at Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport.<StopAsync>d__20.MoveNext() in /_/src/Microsoft.AspNetCore.Http.Connections.Client/Internal/ServerSentEventsTransport.cs:line 222\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n     at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n     at Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.<DisposeAsyncCore>d__38.MoveNext() in /_/src/Microsoft.AspNetCore.Http.Connections.Client/HttpConnection.cs:line 179\r\n  ===================\r\n  Stack Trace:\r\n     at Microsoft.AspNetCore.SignalR.Tests.VerifyNoErrorsScope.Dispose() in /_/test/Microsoft.AspNetCore.SignalR.Tests.Utils/VerifyNoErrorsScope.cs:line 63\r\n     at Microsoft.AspNetCore.SignalR.Client.FunctionalTests.HubConnectionTests.<StreamDoesNotStartIfTokenAlreadyCanceled>d__13.MoveNext() in /_/test/Microsoft.AspNetCore.SignalR.Client.FunctionalTests/HubConnectionTests.cs:line 432\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n     at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n     at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n     at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n  Standard Output Messages:\r\n   | [2018-04-15T22:53:39] TestLifetime Information: Starting test StreamDoesNotStartIfTokenAlreadyCanceled_json_ServerSentEvents_hubT\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Waiting on Connection Lock in StartAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:122).\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Starting HubConnection.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Starting HttpConnection.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Establishing connection with server at 'http://127.0.0.1:37836/hubT'.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Sending HTTP request POST 'http://127.0.0.1:37836/hubT/negotiate'.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Established connection 'yQxRq7gWm5gfF9Kejtv3pQ' with the server.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Skipping transport WebSockets because it was disabled by the client.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Starting transport 'ServerSentEvents' with Url: http://127.0.0.1:37836/hubT?id=yQxRq7gWm5gfF9Kejtv3pQ.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Information: Starting transport. Transfer mode: Text.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Sending HTTP request GET 'http://127.0.0.1:37836/hubT?id=yQxRq7gWm5gfF9Kejtv3pQ'.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Starting receive loop.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Starting the send loop.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Transport 'ServerSentEvents' started.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Received 3 bytes. Parsing SSE frame.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Information: HttpConnection Started.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Information: Using HubProtocol 'json v1'.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Sending Hub Handshake.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Sending 32 bytes to the server using url: http://127.0.0.1:37836/hubT?id=yQxRq7gWm5gfF9Kejtv3pQ.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Sending HTTP request POST 'http://127.0.0.1:37836/hubT?id=yQxRq7gWm5gfF9Kejtv3pQ'.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Received 6 bytes. Parsing SSE frame.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Message(s) sent successfully.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Received 13 bytes. Parsing SSE frame.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Passing message to application. Payload size: 3.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Handshake with server complete.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Receive loop starting.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Starting server timeout timer. Duration: 30000.00ms\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Information: HubConnection started.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Releasing Connection Lock in StartAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:164).\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Waiting on Connection Lock in StreamAsChannelCoreAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:247).\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.InvocationRequest.Streaming Trace: Invocation 1 created.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Preparing streaming invocation '1' of 'Stream', with return type 'System.Int32' and 1 argument(s).\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Registering Invocation ID '1' for tracking.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Issuing Invocation '1': System.Int32 Stream(System.Int32).\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Sending StreamInvocationMessage message '1'.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Sending 64 bytes to the server using url: http://127.0.0.1:37836/hubT?id=yQxRq7gWm5gfF9Kejtv3pQ.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Sending HTTP request POST 'http://127.0.0.1:37836/hubT?id=yQxRq7gWm5gfF9Kejtv3pQ'.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Sending StreamInvocationMessage message '1' completed.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Waiting on Connection Lock in StreamAsChannelCoreAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:222).\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Releasing Connection Lock in StreamAsChannelCoreAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:265).\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Sending Cancellation for Invocation '1'.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Sending CancelInvocationMessage message '1'.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Sending CancelInvocationMessage message '1' completed.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Releasing Connection Lock in StreamAsChannelCoreAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:239).\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.InvocationRequest.Streaming Trace: Invocation 1 disposed.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Received 6 bytes. Parsing SSE frame.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Waiting on Connection Lock in StopAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:180).\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Releasing Connection Lock in StopAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:207).\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Stopping HubConnection.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Message(s) sent successfully.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Terminating receive loop.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Sending 30 bytes to the server using url: http://127.0.0.1:37836/hubT?id=yQxRq7gWm5gfF9Kejtv3pQ.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Waiting for the receive loop to terminate.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Sending HTTP request POST 'http://127.0.0.1:37836/hubT?id=yQxRq7gWm5gfF9Kejtv3pQ'.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Waiting on Connection Lock in ReceiveLoop (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:652).\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Releasing Connection Lock in ReceiveLoop (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:661).\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Disposing HttpConnection.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Information: Transport is stopping.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Received 49 bytes. Parsing SSE frame.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Passing message to application. Payload size: 39.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Server-Sent Event Stream ended.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Receive loop stopped.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Warning: Unsuccessful HTTP response status code of NotFound return from POST 'http://127.0.0.1:37836/hubT?id=yQxRq7gWm5gfF9Kejtv3pQ'.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Error: Error while sending to 'http://127.0.0.1:37836/hubT?id=yQxRq7gWm5gfF9Kejtv3pQ'.\r\n   | System.Net.Http.HttpRequestException: Response status code does not indicate success: 404 (Not Found).\r\n   |    at System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode()\r\n   |    at Microsoft.AspNetCore.Http.Connections.Client.SendUtils.<SendMessages>d__0.MoveNext() in /_/src/Microsoft.AspNetCore.Http.Connections.Client/SendUtils.cs:line 52\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport Debug: Transport stopped.\r\n   | System.Net.Http.HttpRequestException: Response status code does not indicate success: 404 (Not Found).\r\n   |    at System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode()\r\n   |    at Microsoft.AspNetCore.Http.Connections.Client.SendUtils.<SendMessages>d__0.MoveNext() in /_/src/Microsoft.AspNetCore.Http.Connections.Client/SendUtils.cs:line 81\r\n   | --- End of stack trace from previous location where exception was thrown ---\r\n   |    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   |    at Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport.<ProcessAsync>d__18.MoveNext() in /_/src/Microsoft.AspNetCore.Http.Connections.Client/Internal/ServerSentEventsTransport.cs:line 105\r\n   | --- End of stack trace from previous location where exception was thrown ---\r\n   |    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   |    at Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport.<StopAsync>d__20.MoveNext() in /_/src/Microsoft.AspNetCore.Http.Connections.Client/Internal/ServerSentEventsTransport.cs:line 217\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Error: The transport threw an exception while stopping.\r\n   | System.Net.Http.HttpRequestException: Response status code does not indicate success: 404 (Not Found).\r\n   |    at System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode()\r\n   |    at Microsoft.AspNetCore.Http.Connections.Client.SendUtils.<SendMessages>d__0.MoveNext() in /_/src/Microsoft.AspNetCore.Http.Connections.Client/SendUtils.cs:line 81\r\n   | --- End of stack trace from previous location where exception was thrown ---\r\n   |    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   |    at Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport.<ProcessAsync>d__18.MoveNext() in /_/src/Microsoft.AspNetCore.Http.Connections.Client/Internal/ServerSentEventsTransport.cs:line 105\r\n   | --- End of stack trace from previous location where exception was thrown ---\r\n   |    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   |    at Microsoft.AspNetCore.Http.Connections.Client.Internal.ServerSentEventsTransport.<StopAsync>d__20.MoveNext() in /_/src/Microsoft.AspNetCore.Http.Connections.Client/Internal/ServerSentEventsTransport.cs:line 222\r\n   | --- End of stack trace from previous location where exception was thrown ---\r\n   |    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   |    at Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.<DisposeAsyncCore>d__38.MoveNext() in /_/src/Microsoft.AspNetCore.Http.Connections.Client/HttpConnection.cs:line 179\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Information: HttpConnection Disposed.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Canceling all outstanding invocations.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Removing pending invocation 1.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.InvocationRequest.Streaming Trace: Invocation 1 disposed.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Shutting down connection.\r\n   | [2018-04-15T22:53:39] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: HubConnection stopped.\r\n   | [2018-04-15T22:53:39] TestLifetime Information: Finished test StreamDoesNotStartIfTokenAlreadyCanceled_json_ServerSentEvents_hubT in 0.1217177s\r\n```"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7533096314","Type":"PullRequestEvent","CreatedAt":"2018-04-15T23:31:42","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7654","RelatedDescription":"Merged pull request \"Fix test failures\" (#7654) at aspnet/Mvc","RelatedBody":"* Disable deps file generation in class library project. This workarounds known issue - https://github.com/dotnet/core-setup/issues/3726\r\n* Update RazorProjectRouteModelProvider to not specify a trailing slash. This produces paths with a single slash as opposed to two slashes messing with route creation.\r\n* React to Microsoft.AspNetCore.Mvc.Razor.Extensions.Reference that shows up in the deps file."},{"Id":"7533079715","Type":"IssuesEvent","CreatedAt":"2018-04-15T23:21:09","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7656","RelatedDescription":"Opened issue \"Deps file generated in netstandard targeting projects does not play well with Microsoft.AspNetCore.Mvc.Testing\" (#7656) at aspnet/Mvc","RelatedBody":"The deps file for a netstandard2.0 targeting project does not play well with how Mvc attempts to discover reference assemblies. Generally this is not problematic since class library deps files do not get copied with the dll. However, testing's targets copies these files over which becomes problematic.\r\n\r\nCore-Setup issue about this - https://github.com/dotnet/core-setup/issues/3726\r\n\r\n"},{"Id":"7533066968","Type":"IssuesEvent","CreatedAt":"2018-04-15T23:13:17","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7655","RelatedDescription":"Opened issue \"Investigate RazorProjectPageRouteModelProvider's change in path\" (#7655) at aspnet/Mvc","RelatedBody":"See https://github.com/aspnet/Mvc/pull/7654/files#diff-a7c12aff511b5b460dee30b88b826852R16. Maybe this is related to https://github.com/aspnet/Mvc/commit/9cea47fa7d83ccb38980edf89ec34ad1f0fae292, but the change went in a couple of days ago and produced successful builds."},{"Id":"7533062234","Type":"PullRequestEvent","CreatedAt":"2018-04-15T23:10:18","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7654","RelatedDescription":"Opened pull request \"Fix test failures\" (#7654) at aspnet/Mvc","RelatedBody":"* Disable deps file generation in class library project. This workarounds known issue - https://github.com/dotnet/core-setup/issues/3726\r\n* Update RazorProjectRouteModelProvider to not specify a trailing slash. This produces paths with a single slash as opposed to two slashes messing with route creation.\r\n* React to Microsoft.AspNetCore.Mvc.Razor.Extensions.Reference that shows up in the deps file."},{"Id":"7532549892","Type":"IssuesEvent","CreatedAt":"2018-04-15T18:14:22","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7423","RelatedDescription":"Closed issue \"Weird DictionaryModelBinder? bug with guids when the guid's first character is not a number\" (#7423) at aspnet/Mvc","RelatedBody":"I seem to have stumbled across a weird bug with modelbinding a dictionary that uses guids as keys.\r\n\r\nSubmitting a form like this:\r\nForm data: `data[912cd1ad-52c0-40cb-9644-55f2eb180a97][somevalue]=test`\r\nAction: `public IActionResult OnPost(Dictionary<string, TestViewModel> data)`\r\n\r\nThis will work as expected and I can access the value by `TestViewModel.SomeValue`\r\n\r\nBut if you happen to submit a guid that does not start with a number ex: `e67d6af7-ff03-4204-8de1-5b021713407d` or just replace a guid's first character with any letter.\r\n\r\n`data[e67d6af7-ff03-4204-8de1-5b021713407d][somevalue]=test` FAIL\r\n`data[a12cd1ad-52c0-40cb-9644-55f2eb180a97][somevalue]=test` FAIL\r\n`data[112cd1ad-52c0-40cb-9644-55f2eb180a97][somevalue]=test` SUCCESS\r\n\r\nI don't know how to explain this better but I've prepared a sample project and a demo site\r\n\r\nSource: https://github.com/keenjus/DictionaryModelBinderBugExample\r\nDemo: http://dictionarymodelbinderbugexample.azurewebsites.net/"},{"Id":"7532549257","Type":"PullRequestEvent","CreatedAt":"2018-04-15T18:14:02","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7641","RelatedDescription":"Closed pull request \"Fix binding & validating dictionaries of non-simple types in jQuery requests\" (#7641) at aspnet/Mvc","RelatedBody":"- #7423\r\n- retry failed inner bindings with alternate syntax in `ModelStateDictionary`\r\n  - use property syntax if first attempt tried index syntax and visa versa\r\n- instantiate `ShortFormDictionaryValidationStrategy` with full `ModelState` keys\r\n  - can now provide exact `ModelState` keys that `ModelStateDictionary` used in inner bindings\r\n- normalize model names without a leading period in `JQueryKeyValuePairNormalizer`\r\n\r\nnits:\r\n- take a few VS suggestions"},{"Id":"7532101379","Type":"IssuesEvent","CreatedAt":"2018-04-15T13:59:02","Actor":"firebird86","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7653","RelatedDescription":"Opened issue \"Razor Pages: Allow access to only page routes that are defined in startup.cs\" (#7653) at aspnet/Mvc","RelatedBody":"I have the following code defined in Startup.cs:\r\n\r\n```\r\nservices.AddMvc().AddRazorPagesOptions(options =>\r\n{\r\noptions.Conventions.AddPageRoute(\"/ListVehicles\", \"/vehicle-list\");\r\n}\r\n```\r\nHow do I only allow access to the page by using the url \"vehicle-list\" instead of just typing the cshtml file name ListVehicles in the url? I tried options.Conventions.Clear() but that didn't work."},{"Id":"7531695794","Type":"IssuesEvent","CreatedAt":"2018-04-15T09:21:19","Actor":"thegodliek","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7652","RelatedDescription":"Opened issue \"data-val-number is not added to int fields\" (#7652) at aspnet/Mvc","RelatedBody":"I've tested this using the MVC visual studio template (not razor pages), the unobtrusive data tag for int fields are not added to the html output, for example:\r\n\r\nthe view model class:\r\n`public int Test { get; set; }`\r\n\r\nthe razor view:\r\n`<input asp-for=\"Test\" class=\"form-control\" />`\r\n\r\nthe html result:\r\n`<input class=\"form-control\" data-val=\"true\" data-val-required=\"The Test field is required.\" id=\"Test\" name=\"Test\" value=\"\" type=\"number\">`\r\n\r\nThe problem is that now if I enter a text that is not a number, I'm getting the default jquery.validate message \" Please enter a valid number. \", but if I manually add the data-val-number=\"some message\", I get correctly the message I want.\r\n\r\nAny thoughts?\r\n\r\nthank you"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7532200139","Type":"IssuesEvent","CreatedAt":"2018-04-15T14:55:17","Actor":"benrhere","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1757","RelatedDescription":"Opened issue \"ASP.NET core 2.0: Custom usermanager causing problems with security stamp?\" (#1757) at aspnet/Identity","RelatedBody":"Hi,\r\n\r\nI'm generating custom claims with the following method:\r\n\r\n        protected override async Task<ClaimsIdentity> GenerateClaimsAsync(TUser user)\r\n        {\r\n            var id = await base.GenerateClaimsAsync(user);\r\n            var myOrgs = user.OrganizationMemberships;\r\n            var myAdminOrgs = myOrgs?.Where(om => om.Role == Data.Enums.OrganizationMembershipRole.Admin || om.Role == Data.Enums.OrganizationMembershipRole.SecondaryAdmin).Select(org=>org.Id).ToList();\r\n            var myPlayerOrgs = myOrgs?.Where(om => om.Role == Data.Enums.OrganizationMembershipRole.Athlete || om.Role == Data.Enums.OrganizationMembershipRole.Admin || om.Role == Data.Enums.OrganizationMembershipRole.SecondaryAdmin).Select(org=>org.Id).ToList();\r\n            if (myAdminOrgs!= null && myAdminOrgs.Count > 0)\r\n            {\r\n                var adminOrgStrings = String.Join(\",\", myAdminOrgs);\r\n                id.AddClaim(new Claim(MyDotNetCoreAppClaimTypes.MyDotNetCoreAppOrgAdmin, adminOrgStrings));\r\n            }\r\n            if (myPlayerOrgs != null && myPlayerOrgs.Count > 0)\r\n            {\r\n                var playerOrgStrings = String.Join(\",\", myPlayerOrgs);\r\n                id.AddClaim(new Claim(MyDotNetCoreAppClaimTypes.MyDotNetCoreAppOrgMember, playerOrgStrings));\r\n            }\r\n            return id;\r\n        }\r\n\r\nThe important thing to note is that I'm referencing a table related to the users table, so I need to explicitly load it. To achieve that, I've created a custom UserManager which pulls the additional needed data:\r\n\r\npublic class MyDotNetCoreAppUserManager : UserManager<MyDotNetCoreAppUser>\r\n    {\r\n\r\n        public MyDotNetCoreAppUserManager(IUserStore<MyDotNetCoreAppUser> store, IOptions<IdentityOptions> optionsAccessor,\r\n        IPasswordHasher<MyDotNetCoreAppUser> passwordHasher, IEnumerable<IUserValidator<MyDotNetCoreAppUser>> userValidators,\r\n        IEnumerable<IPasswordValidator<MyDotNetCoreAppUser>> passwordValidators, ILookupNormalizer keyNormalizer,\r\n        IdentityErrorDescriber errors, IServiceProvider services, ILogger<UserManager<MyDotNetCoreAppUser>> logger)\r\n        : base(store,optionsAccessor,passwordHasher,userValidators,passwordValidators,keyNormalizer,errors,services,logger)\r\n        {\r\n        }\r\n\r\n        /// <summary>\r\n        /// Gets all users\r\n        /// </summary>\r\n        /// <param name=\"includes\">Optional parameter for eager loading related entities</param>\r\n        /// <returns>An list of users</returns>\r\n        public async Task<MyDotNetCoreAppUser> GetAll(string userName, params string[] includes)\r\n        {\r\n\r\n            // Get our User DbSet\r\n            var users = base.Users.Where(u=>u.UserName == userName);\r\n\r\n            // For each include, include in the query\r\n            foreach (var include in includes)\r\n                users = users.Include(include);\r\n\r\n            // Return our result\r\n            return await users.FirstOrDefaultAsync();\r\n        }\r\n\r\n\r\n        //This is called on initial login and is necessary to pull additional related user data\r\n        //used in claim generation. But overriding this causes sescurity stamp validation to fail!\r\n        public override Task<MyDotNetCoreAppUser> FindByNameAsync(string userName)\r\n        {\r\n            var fetchTask = GetAll(userName, \"OrganizationMemberships\");\r\n            return fetchTask;\r\n        }\r\n\r\n        //When it's time to validate the security stamp, a call is made into here for some reason.\r\n        //If I comment this override out, it successfully regenerates claims, and\r\n        //regenerates a login cookie (and I stay logged in)\r\n        //but the claims generation misses the needed related data.\r\n        //But if I enable this override, it just logs the user out after calling into here. (Doesn't\r\n        //fire GenerateClaimsAsync)\r\n        public override Task<MyDotNetCoreAppUser> FindByIdAsync(string userId)\r\n        {\r\n            return GetAll(userId, \"OrganizationMemberships\");\r\n        }\r\n    }\r\n\r\nBut please see above comments in this code. The problem is that after 30 minutes, when it's time to revalidate the security stamp and the user refreshes, one of two things happens:\r\n\r\n-If I do NOT override FindByIdAsync, it somewhat works, meaning the user stays logged in and claims are generated - however, the user object passed ot GenerateClaimsAsync does NOT contain the required OrganizationMemberships property populated.\r\n-If I DO override FindByIdAsync, I hit that breakpoint when I refresh the page after the security stamp timeout expires. However, after I continue, I don't hit the ClaimsGeneration method. Instead, I'm logged out and redirected to the login page.\r\n\r\nAlso maybe relevant:\r\n\r\n           services.AddIdentity<MyDotNetCoreAppUser, MyDotNetCoreAppRole>(opt =>\r\n            {\r\n                opt.Password.RequireNonAlphanumeric = false;\r\n                opt.Password.RequireUppercase = false;\r\n            })\r\n                .AddEntityFrameworkStores<MyDotNetCoreAppDbContext>()\r\n                .AddUserManager<MyDotNetCoreAppUserManager>()\r\n                .AddSignInManager<MyDotNetCoreAppSignInManager>()\r\n                .AddDefaultTokenProviders();\r\n\r\n            services.AddAuthorization(opt =>\r\n            {\r\n                opt.AddPolicy(\"OrgAdmin\", policy => policy.RequireClaim(MyDotNetCoreAppClaimTypes.MyDotNetCoreAppOrgAdmin));\r\n                opt.AddPolicy(\"OrgMember\", policy => policy.RequireClaim(MyDotNetCoreAppClaimTypes.MyDotNetCoreAppOrgMember));\r\n            });\r\n            services.Configure<SecurityStampValidatorOptions>(options =>\r\n            {\r\n                // enables immediate logout, after updating the user's stat.\r\n                options.ValidationInterval = TimeSpan.FromSeconds(6);\r\n            });\r\n\r\n(I set the validation interval to 6 seconds to be able to debug the security stamp validation more easily.)\r\n\r\nAppreciative of any thoughts on this. Thanks..."},{"Id":"7529003088","Type":"IssuesEvent","CreatedAt":"2018-04-13T23:47:06","Actor":"jbagga","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1736","RelatedDescription":"Closed issue \"/Identity/Account/ResetPassword page is not reachable when auth required globally\" (#1736) at aspnet/Identity","RelatedBody":"Looks like at least one page was missed when fixing #1617 \r\n## Repro steps\r\n1. `dotnet new mvc --name netcoreIndividualAuth --auth Individual --use-local-db` (doubt `--use-local-db` is mandatory)\r\n2. `cd netcoreIndividualAuth`\r\n3. Open project in Visual Studio\r\n4. Edit `Startup.ConfigureServices(...)` to require an authenticated user globally i.e. change `services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1);` to\r\n  ``` c#\r\n  services\r\n      .AddMvc(configuration =>\r\n      {\r\n          var policy = new AuthorizationPolicyBuilder()\r\n              .RequireAuthenticatedUser()\r\n              .Build();\r\n          configuration.Filters.Add(new AuthorizeFilter(policy));\r\n      })\r\n      .SetCompatibilityVersion(CompatibilityVersion.Version_2_1);\r\n  ```\r\n\r\n5. Start app in the debugger\r\n6. Ensure debug option \"Enable Just My Code\" is disabled and \"Microsoft Symbol Servers\" are enabled under \"Symbols\"\r\n7. Set C# function breakpoint at `Microsoft.AspNetCore.Identity.UI.Services.EmailSender.SendEmailAsync` \r\n8. In browser, register a new user\r\n9. In debugger, copy the URL in the `htmlMessage` parameter\r\n10. In browser, head to the copied URL but change `&amp;code` to `&code`\r\n11. In browser, log out, click on \"Forgot your password\", then enter the new user's email and click Submit\r\n12. In debugger, copy the URL in the `htmlMessage` parameter\r\n13. In browser, head to the copied URL\r\n\r\n### Expected\r\n- Land on /Identity/Account/ForgotPasswordConfirmation page after step 11\r\n- Land on /Identity/Account/ResetPassword page after step 13\r\n### Actual\r\nRedirected to the login page again in both cases i.e. both page models lack `[AllowAnonymous]` though the lack in /Identity/Account/ResetPassword is more troublesome.\r\n\r\n----\r\nThis is a small part of #1617 which does not work end-to-end. Found while verifying (aspnet/Release#263) with the 2.1.300-preview2-008523 SDK and Microsoft.AspNetCore.Identity.UI 2.1.0-preview2-30552."},{"Id":"7529000560","Type":"PullRequestEvent","CreatedAt":"2018-04-13T23:46:01","Actor":"jbagga","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1744","RelatedDescription":"Merged pull request \"Add AllowAnonymous for resetting password navigation flow\" (#1744) at aspnet/Identity","RelatedBody":"Addresses #1736 and aspnet/templating#448"},{"Id":"7528865077","Type":"PullRequestEvent","CreatedAt":"2018-04-13T22:50:11","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1749","RelatedDescription":"Closed pull request \"[Fixes #1742, #1722, #1706, #1725] Fixing multiple issues\" (#1749) at aspnet/Identity","RelatedBody":"* Add a test to validate that the Identity endpoints are not available when the default UI is not plugged in.\r\n* Remove IUserFactory<TUser> and UserFactory<TUser>\r\n* Update the testing infrastructure to newer bits from MVC.\r\n* Parameterize the testing infrastructure to support testing different user types.\r\n* Make EmailSender internal."},{"Id":"7528861679","Type":"IssuesEvent","CreatedAt":"2018-04-13T22:48:50","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1688","RelatedDescription":"Closed issue \"Identity mismatch between Email and Username\" (#1688) at aspnet/Identity","RelatedBody":"When using Identity it generates views and methods that confuse Email and Username.\r\n\r\nThe register view and methods ask for an Email and Password, assigns Username the value of Email.\r\n\r\nThe login view asks for Email and Password, but uses the email as a Username, via call to _signInManager.PasswordSignInAsync(...) which takes a Username and Password.\r\n\r\nThe Account/Manage view allows you to change your Email.  If I change my email I can no longer login.  If I use my previous Email I can, the Account/Manage views shows my correctly changed email and a readonly Username with my original email used at signup.\r\n\r\nThis is with a new unmodified project generated via new project in visual studio selecting individual user accounts."},{"Id":"7528860982","Type":"IssuesEvent","CreatedAt":"2018-04-13T22:48:34","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1725","RelatedDescription":"Closed issue \"Add functional tests for different user types in DefaultUI\" (#1725) at aspnet/Identity","RelatedBody":"Some user types to think of:\r\n- `class IdentityUser`\r\n- `class TestUser : IdentityUser`\r\n- `class TestUser : IdentityUser<Guid>`\r\n- `class TestUser`"},{"Id":"7528858371","Type":"IssuesEvent","CreatedAt":"2018-04-13T22:47:38","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1742","RelatedDescription":"Closed issue \"Logout must redirect instead of just rendering the page so that the identity in the request gets properly updated\" (#1742) at aspnet/Identity","RelatedBody":"Logout.cshtml and Logout.cshtml.cs are used before _and after_ the user is logged out. If user posts to the Logout page without a `returnUrl` value, the page displays a message: `You have successfully logged out of the application.` Unfortunately, the page is unreachable after logging out (i.e. requires authentication) due to the following line in the generated `IdentityDefaultUIConfigureOptions.PostConfigure(...)`: https://github.com/aspnet/Identity/blob/394e4746b89485e6f6d0736b363d947361e7a378/src/UI/IdentityDefaultUIConfigureOptions.cs#L38\r\n\r\nBecause this setting is done in an `IPostConfigureOptions<CookieAuthenticationOptions>` implementation, it is extra hard for users to override.\r\n\r\nSee also aspnet/Scaffolding#734"},{"Id":"7528632845","Type":"IssuesEvent","CreatedAt":"2018-04-13T21:35:41","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1740","RelatedDescription":"Closed issue \"RoleManager.CreateAsync throw an Exception when role with the same name already exists.\" (#1740) at aspnet/Identity","RelatedBody":"When role with the same name already exists _RoleManager.CreateAsync_ throw an Exception \"Object reference not set to an instance of an object.\"."},{"Id":"7528617576","Type":"PullRequestEvent","CreatedAt":"2018-04-13T21:31:37","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1752","RelatedDescription":"Merged pull request \"Fix error message\" (#1752) at aspnet/Identity","RelatedBody":"Fixes https://github.com/aspnet/Identity/issues/1669"},{"Id":"7528617571","Type":"IssuesEvent","CreatedAt":"2018-04-13T21:31:36","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1669","RelatedDescription":"Closed issue \"Misleading exception message in Identity 2.0.1\" (#1669) at aspnet/Identity","RelatedBody":"```\r\nSystem.NotSupportedException : No IUserTokenProvider named 'Default' is registered.\r\n   at Microsoft.AspNetCore.Identity.UserManager`1.GenerateUserTokenAsync(TUser user, String tokenProvider, String purpose)\r\n   at Microsoft.AspNetCore.Identity.UserManager`1.GeneratePasswordResetTokenAsync(TUser user)\r\n```\r\n\r\nThe framework in reality requires an implementation of `IUserTwoFactorTokenProvider<TUser>` "}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7532734897","Type":"IssuesEvent","CreatedAt":"2018-04-15T20:00:34","Actor":"TechnikEmpire","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2494","RelatedDescription":"Opened issue \"Any reason why upgrading to 2.1-preview2 would break IConnectionAdapter?\" (#2494) at aspnet/KestrelHttpServer","RelatedBody":"I've been searching but to no avail, so I've decided to ask here. Does anyone know of a reason or even a hunch as to why upgrading from 2.0.X to the 2.1 preview2 would cause an `IConnectionAdapter` to stop functioning? I have something like:\r\n\r\n```C#\r\ninternal class TlsSniConnectionAdapter : IConnectionAdapter\r\n{\r\n      ....\r\n\r\n\tpublic Task<IAdaptedConnection> OnConnectionAsync(ConnectionAdapterContext context)\r\n\t{\r\n\t\t// This still gets invoked.\r\n\t\treturn Task.Run(() => InnerOnConnectionAsync(context));\r\n\t}\r\n\t\r\n\tprivate async Task<IAdaptedConnection> InnerOnConnectionAsync(ConnectionAdapterContext context)\r\n\t{\r\n\t\t// This no longer gets invoked at all.\r\n\t}\r\n}\r\n```\r\n\r\nThere's nothing special about this class, it just performs a peek on the connection stream to try to read the SNI extension, from which a certificate for the declared host is dynamically generated and then used in the handshake. Like I said, works fine < 2.1.x. Any ideas that might set me on the right path to solving this would be greatly appreciated. :)"},{"Id":"7531211950","Type":"IssuesEvent","CreatedAt":"2018-04-15T02:21:34","Actor":"dfederm","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2493","RelatedDescription":"Closed issue \"Outbound connections time out with new managed sockets\" (#2493) at aspnet/KestrelHttpServer","RelatedBody":"When upgrading from 2.1 preview 1 to preview 2, all of a sudden all the outbound calls from my webserver (except Azure SQL calls for some reason) seem to hang and eventually timeout. I'm seeing this behavior with both an `HttpClient` and using the latest `Azure Storage` SDK.\r\n\r\nBased on the release notes, I suspect it's due to the switch to managed sockets.\r\n\r\nI'm running on Azure App Services using self-contained deployment."},{"Id":"7531206343","Type":"IssuesEvent","CreatedAt":"2018-04-15T02:16:32","Actor":"dfederm","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2493","RelatedDescription":"Opened issue \"Outbound connections time out with new managed sockets\" (#2493) at aspnet/KestrelHttpServer","RelatedBody":"When upgrading from 2.1 preview 1 to preview 2, all of a sudden all the outbound calls from my webserver (except Azure SQL calls for some reason) seem to hang and eventually timeout. I'm seeing this behavior with both an `HttpClient` and using the latest `Azure Storage` SDK.\r\n\r\nBased on the release notes, I suspect it's due to the switch to managed sockets.\r\n\r\nI'm running on Azure App Services using self-contained deployment."},{"Id":"7529173727","Type":"PullRequestEvent","CreatedAt":"2018-04-14T01:23:15","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2347","RelatedDescription":"Closed pull request \"Less StringValue struct copies + bounds check elimination\" (#2347) at aspnet/KestrelHttpServer","RelatedBody":"Less StringValue struct copies for header existence checks\r\n\r\n* fast in-place bitflag check\r\n* don't let `null` adds set bitflags in headers (as won't be output anyway)\r\n* clear for `null` sets in headers\r\n\r\nLazy calc transfer coding\r\n\r\n* calc once existence is confirmed rather than always (since existence is checked anyway)\r\n\r\nFast-path EnsureHostHeaderExists\r\n\r\n* for OriginForm with single host header\r\n\r\nSkip lots of bounds checks through various methods (by helping the Jit recognize preconditions)\r\n\r\nUpdate to https://github.com/aspnet/KestrelHttpServer/pull/2014"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7529333514","Type":"PullRequestEvent","CreatedAt":"2018-04-14T03:23:53","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2279","RelatedDescription":"Opened pull request \"Added nuspec and symbols.nuspec files to Razor.Design\" (#2279) at aspnet/Razor","RelatedBody":"Fixes #2215 \r\n\r\nReact to aspnet/BuildTools#630\r\n\r\nWe want to include the pdbs of the tasks and tools as part of the Razor.Design symbols package."},{"Id":"7528929672","Type":"PullRequestEvent","CreatedAt":"2018-04-13T23:14:39","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2272","RelatedDescription":"Merged pull request \"Continue generating RelatedAssemblyPart on assembly if GenerateAssemblyInfo=false\" (#2272) at aspnet/Razor","RelatedBody":"\r\nFixes #2257"},{"Id":"7528929665","Type":"IssuesEvent","CreatedAt":"2018-04-13T23:14:39","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2257","RelatedDescription":"Closed issue \"Continue generating RelatedAssemblyPart on assembly if GenerateAssemblyInfo=false\" (#2257) at aspnet/Razor","RelatedBody":"@rynowak @pranavkm, Setting\r\n\r\n`<GenerateAssemblyInfo>false</GenerateAssemblyInfo>`\r\n\r\nin the csproj file prevents Razor assembly info generation (affecting app.dll and app.Views.dll) and such MVC apps throw (see below) when deployed to production servers because views are not found.\r\n\r\n```\r\n\r\nNow listening on: http://127.0.0.1:28447\r\nApplication started. Press Ctrl+C to shut down.\r\ninfo: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]\r\n      Request starting HTTP/1.1 GET http://example.com/  \r\ninfo: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]\r\n      Route matched with {action = \"Index\", controller = \"Home\"}. Executing action SimpleMvcApp.Controllers.HomeController.Index (SimpleMvcApp)\r\ninfo: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]\r\n      Executing action method SimpleMvcApp.Controllers.HomeController.Index (SimpleMvcApp) - Validation state: Valid\r\ninfo: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]\r\n      Executed action method SimpleMvcApp.Controllers.HomeController.Index (SimpleMvcApp), returned result Microsoft.AspNetCore.Mvc.ViewResult in 0.0237ms.\r\ninfo: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor[1]\r\n      Executing ViewResult, running view Index.\r\nfail: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor[3]\r\n      The view 'Index' was not found. Searched locations: /Views/Home/Index.cshtml, /Views/Shared/Index.cshtml\r\ninfo: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]\r\n      Executed action SimpleMvcApp.Controllers.HomeController.Index (SimpleMvcApp) in 0.4997ms\r\nfail: Microsoft.AspNetCore.Server.Kestrel[13]\r\n      Connection id \"0HLCVQKE7G6Q7\", Request id \"0HLCVQKE7G6Q7:00000002\": An unhandled exception was thrown by the application.\r\nSystem.InvalidOperationException: The view 'Index' was not found. The following locations were searched:\r\n/Views/Home/Index.cshtml\r\n/Views/Shared/Index.cshtml\r\n   at Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.EnsureSuccessful(IEnumerable`1 originalLocations)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.ExecuteAsync(ActionContext context, ViewResult result)\r\n   at Microsoft.AspNetCore.Mvc.ViewResult.ExecuteResultAsync(ActionContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)\r\ninfo: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]\r\n      Request finished in 5.1816ms 500 \r\n\r\n```\r\n\r\nThis happens because SimpleMvcApp.dll is missing\r\n\r\n```\r\n\r\n[assembly: RelatedAssembly(\"SimpleMvcApp.Views\")]\r\n[assembly: RazorLanguageVersion(\"2.1\")]\r\n[assembly: RazorConfigurationName(\"MVC-2.1\")]\r\n[assembly: RazorExtensionAssemblyName(\"MVC-2.1\", \"Microsoft.AspNetCore.Mvc.Razor.Extensions\")]\r\n\r\n```\r\n(workaround: add above assembly attributes manually)\r\n\r\nand SimpleMvcApp.Views.dll is missing\r\n\r\n\r\n`[assembly: ProvideApplicationPartFactory(\"Microsoft.AspNetCore.Mvc.ApplicationParts.CompiledRazorAssemblyApplicationPartFactory, Microsoft.AspNetCore.Mvc.Razor\")]`\r\n\r\n\r\n(workaround: add `<GenerateRazorTargetAssemblyInfo>true</GenerateRazorTargetAssemblyInfo>` to the csproj file).\r\n\r\n\r\nDev Machine Setup:\r\nVisual Studio 2017 15.7 Preview 3\r\ndotnet-sdk-2.1.300-preview2-008530-win-x64\r\n\r\nHosting Server Setup:\r\nWindows Server 2012 R2\r\ndotnet-hosting-2.1.0-preview2-final-win\r\n\r\nSteps to reproduce:\r\n\r\n1) Create default MVC 2.1 project.\r\n2) Add `<GenerateAssemblyInfo>false</GenerateAssemblyInfo>` to csproj file.\r\n3) Add custom 'assemblyinfo.cs' with some assembly attributes.\r\n4) Publish to server, enable logging, and browse the site.\r\n"},{"Id":"7528900709","Type":"IssuesEvent","CreatedAt":"2018-04-13T23:03:36","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2278","RelatedDescription":"Closed issue \"Razor build fails when ExtensionDependencyChecker fails\" (#2278) at aspnet/Razor","RelatedBody":"More info here https://github.com/aspnet/Razor/issues/2256. This is just to track part of that issue.\r\n\r\ncc @mkArtakMSFT "},{"Id":"7528899284","Type":"IssuesEvent","CreatedAt":"2018-04-13T23:03:02","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2278","RelatedDescription":"Opened issue \"Razor build fails when ExtensionDependencyChecker fails\" (#2278) at aspnet/Razor","RelatedBody":"More info here https://github.com/aspnet/Razor/issues/2256. This is just to track part of that issue.\r\n\r\ncc @mkArtakMSFT "},{"Id":"7528882477","Type":"IssuesEvent","CreatedAt":"2018-04-13T22:56:38","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2256","RelatedDescription":"Reopened issue \"Razor Build tasks fail when using different version of assemblies\" (#2256) at aspnet/Razor","RelatedBody":"We see errors like the following in the Razor build server when upgrading packages\r\n```\r\nExtension assembly 'Microsoft.AspNetCore.Blazor.Razor.Extensions' at 'C:\\Users\\username\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.2.0-preview1-10195\\tools\\Microsoft.AspNetCore.Blazor.Razor.Extensions.dll' has a different ModuleVersionId than loaded assembly 'Microsoft.AspNetCore.Blazor.Razor.Extensions, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null'\r\n  Extensions could not be loaded. See output for details.\r\nC:\\Users\\username\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.2.0-preview1-10195\\targets\\RazorCompilation.targets(179,5): error : rzc generate exited with code 1 \r\n```\r\n\r\nThere are a few issues with this.\r\n\r\nIt would firstly be great to know which other assembly is loaded and where it was loaded from - my guess is that this happened when updating the packages used by our templates, or by mixing our templates with a repo-local build.\r\n\r\nSecondly, I think this is just a bug. The assembly loading logic we use for Razor is supposed to be based on paths for 'top level' extensions, meaning that we should be able to load two copies of `Microsoft.AspNetCore.Blazor.Razor.Extensions`. We should investigate this and see if it's possible.\r\n\r\nLastly, this **must not** fail the build. We expect users to mix and match dependencies and this is intended to 'just work'. "},{"Id":"7528881525","Type":"IssuesEvent","CreatedAt":"2018-04-13T22:56:18","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2256","RelatedDescription":"Closed issue \"Razor Build tasks fail when using different version of assemblies\" (#2256) at aspnet/Razor","RelatedBody":"We see errors like the following in the Razor build server when upgrading packages\r\n```\r\nExtension assembly 'Microsoft.AspNetCore.Blazor.Razor.Extensions' at 'C:\\Users\\username\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.2.0-preview1-10195\\tools\\Microsoft.AspNetCore.Blazor.Razor.Extensions.dll' has a different ModuleVersionId than loaded assembly 'Microsoft.AspNetCore.Blazor.Razor.Extensions, Version=0.2.0.0, Culture=neutral, PublicKeyToken=null'\r\n  Extensions could not be loaded. See output for details.\r\nC:\\Users\\username\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.2.0-preview1-10195\\targets\\RazorCompilation.targets(179,5): error : rzc generate exited with code 1 \r\n```\r\n\r\nThere are a few issues with this.\r\n\r\nIt would firstly be great to know which other assembly is loaded and where it was loaded from - my guess is that this happened when updating the packages used by our templates, or by mixing our templates with a repo-local build.\r\n\r\nSecondly, I think this is just a bug. The assembly loading logic we use for Razor is supposed to be based on paths for 'top level' extensions, meaning that we should be able to load two copies of `Microsoft.AspNetCore.Blazor.Razor.Extensions`. We should investigate this and see if it's possible.\r\n\r\nLastly, this **must not** fail the build. We expect users to mix and match dependencies and this is intended to 'just work'. "},{"Id":"7528881522","Type":"PullRequestEvent","CreatedAt":"2018-04-13T22:56:18","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2277","RelatedDescription":"Merged pull request \"Don't fail the build when ExtensionDependencyChecker fails\" (#2277) at aspnet/Razor","RelatedBody":"Fixes #2256 \r\n\r\nWe want to make sure to not fail the build and fallback to cli execution when the ExtensionDependencyChecker fails to load an extension."}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7439234583","Type":"IssuesEvent","CreatedAt":"2018-03-27T05:23:09","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069) at aspnet/Tooling","RelatedBody":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc"},{"Id":"7438189808","Type":"IssuesEvent","CreatedAt":"2018-03-26T23:00:08","Actor":"dvdobrovolskiy","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Opened issue \"EntityFramework migrations not available to be applied during publish\" (#1069) at aspnet/Tooling","RelatedBody":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc"},{"Id":"7416019717","Type":"IssuesEvent","CreatedAt":"2018-03-21T22:57:29","Actor":"snebjorn","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/823","RelatedDescription":"Closed issue \"Make tooling support splitting asp.net and bootstrapping in different projects (onion architecture)\" (#823) at aspnet/Tooling","RelatedBody":"I'd like to see better tooling support for a more onion architecture like solution structure.\n\nFor instance\n- Solution\n  - Core (business logic, domain model, etc)\n  - Infrastructure.EntityFramework (DAL)\n  - Presentation.ASPNET (MVC or WebApi)\n  - Bootstrapper (Program.cs and Startup.cs)\n\nSo basically I just moved Program.cs and Startup.cs to another project. This is important because according to the onion architecture Presentation.ASPNET should not have references to Entity Framework.\n\nIf I do this today I loose the \"IIS Express\" run button and I cannot publish via wed deploy in the way I'm used to. Plus a ton of other issues.\n\nWould be sweet if there was better support for this setup :)\n"},{"Id":"7381313128","Type":"IssuesEvent","CreatedAt":"2018-03-14T22:19:23","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/240","RelatedDescription":"Closed issue \"Support debugging of JS executed with EdgeJS in VS\" (#240) at aspnet/Tooling","RelatedBody":"We would like to do the server side HTML rendering with ReactJS in our ASP.NET application. This works with EdgeJS, but there is currently no way to debug the JS code in VS. \n\nIt would be nice if this would work and we wouldn't need node-inspector for this.\n\nhttps://github.com/tjanczuk/edge/issues/316\n"},{"Id":"7376247861","Type":"IssuesEvent","CreatedAt":"2018-03-14T05:33:19","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Closed issue \"Switch between Razor Page View and Code Behind\" (#1068) at aspnet/Tooling","RelatedBody":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n"},{"Id":"7372052889","Type":"IssuesEvent","CreatedAt":"2018-03-13T13:46:08","Actor":"TheConservativeCoder","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Opened issue \"Switch between Razor Page View and Code Behind\" (#1068) at aspnet/Tooling","RelatedBody":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7390961156","Type":"IssuesEvent","CreatedAt":"2018-03-16T14:09:54","Actor":"natemcmaster","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/297","RelatedDescription":"Closed issue \"Model binding accesses read-only properties in post-back\" (#297) at aspnet/Announcements","RelatedBody":"I have a simple edit model, which contains a few computed/read-only properties. When posting to a controller method, the model validation engine accesses these properties, causing an exception.\r\n\r\nHowever, it does not make sense to access or attempt to validate a read-only property.\r\n\r\nAdditionally, all properties are marked with [BindNever], which seems to have no effect on this behavior.\r\n\r\nThe controller method takes a single parameter (the edit model) decorated with [FromForm].\r\n\r\nUsing 2.1.0-preview2-30355."},{"Id":"7390872316","Type":"IssuesEvent","CreatedAt":"2018-03-16T13:54:05","Actor":"mnmr","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/297","RelatedDescription":"Opened issue \"Model binding accesses read-only properties in post-back\" (#297) at aspnet/Announcements","RelatedBody":"I have a simple edit model, which contains a few computed/read-only properties. When posting to a controller method, the model validation engine accesses these properties, causing an exception.\r\n\r\nHowever, it does not make sense to access or attempt to validate a read-only property.\r\n\r\nAdditionally, all properties are marked with [BindNever], which seems to have no effect on this behavior.\r\n\r\nThe controller method takes a single parameter (the edit model) decorated with [FromForm].\r\n\r\nUsing 2.1.0-preview2-30355."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"983838325457829890","CreatedAt":"2018-04-10T22:45:10+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":6,"RawContent":null},{"Id":"983802600398049285","CreatedAt":"2018-04-10T20:23:12+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/441EI8rRQL","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":10,"RawContent":null},{"Id":"981890668095332353","CreatedAt":"2018-04-05T13:45:52+00:00","UserScreenname":"aspnet","Text":"Tune in to @csharpfritz live stream today to learn more about getting started with #ASP.NET Core. https://t.co/mkwxUOObrd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":7,"RawContent":null},{"Id":"981214732198674433","CreatedAt":"2018-04-03T16:59:56+00:00","UserScreenname":"aspnet","Text":"Starting now!\n\n#ASPNET Community Standup\n\nBlazor Update with @danroth27 and @stevensanderson… https://t.co/Tukk2JSsvC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":43,"FavoriteCount":16,"RawContent":null},{"Id":"981205689891803136","CreatedAt":"2018-04-03T16:24:01+00:00","UserScreenname":"aspnet","Text":"Join our @csharpfritz for some #ASP.NET Core coding today, and ask questions during his live coding stream at 12:30… https://t.co/PCKhYbjIMP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":17,"FavoriteCount":9,"RawContent":null},{"Id":"980945681794809856","CreatedAt":"2018-04-02T23:10:50+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nBlazor Update with @danroth27 and @stevensanderson… https://t.co/lCnzHFb8x9","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":99,"FavoriteCount":56,"RawContent":null},{"Id":"979863409561812993","CreatedAt":"2018-03-30T23:30:16+00:00","UserScreenname":"aspnet","Text":"We just released some minor bug fixes to jquery-ajax-unobtrusive and jquery-validation-unobtrusive:… https://t.co/9P5vskn1i8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":26,"FavoriteCount":13,"RawContent":null},{"Id":"978766397814710272","CreatedAt":"2018-03-27T22:51:08+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":7,"RawContent":null},{"Id":"978605317293576193","CreatedAt":"2018-03-27T12:11:03+00:00","UserScreenname":"aspnet","Text":"This will be a fun show that you won't want to miss if you're starting to lean #ASP.NET Core.  Jeff and Shayne are… https://t.co/MdzhQjXGY3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":47,"FavoriteCount":12,"RawContent":null},{"Id":"978387927041323008","CreatedAt":"2018-03-26T21:47:14+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup this Tuesday at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":10,"RawContent":null},{"Id":"976910278083432449","CreatedAt":"2018-03-22T19:55:35+00:00","UserScreenname":"aspnet","Text":"Get started building .NET web apps in the browser with Blazor https://t.co/NLDaIe6hpY","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":159,"FavoriteCount":100,"RawContent":null},{"Id":"976141395114082304","CreatedAt":"2018-03-20T17:00:19+00:00","UserScreenname":"aspnet","Text":"Starting now!\n\nThe #ASPNET Community Standup with @sshirhatti showing #aspnetcore 2.1 Improvements for IIS Hosting.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":10,"RawContent":null},{"Id":"975923268740833280","CreatedAt":"2018-03-20T02:33:33+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup is on Tuesday at 10 AM  Pacific / 1800 GMT. @sshirhatti will be showing… https://t.co/qlOERhEOaw","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":14,"RawContent":null},{"Id":"974312682647162880","CreatedAt":"2018-03-15T15:53:40+00:00","UserScreenname":"aspnet","Text":"Watch @csharpfritz and @shanselman in this recorded video from today's LiveStream about converting an application t… https://t.co/6QP4SCXJ3S","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":4,"RawContent":null},{"Id":"974274384792866817","CreatedAt":"2018-03-15T13:21:29+00:00","UserScreenname":"aspnet","Text":"Tune in to @csharpfritz and @shanselman talking through an #ASP.NET upgrade at 10am ET / 7am PT / 14:00 UTC! https://t.co/vJe8zHT12j","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":3,"RawContent":null},{"Id":"973691520728510464","CreatedAt":"2018-03-13T22:45:23+00:00","UserScreenname":"aspnet","Text":"Starting now... join us for the weekly #ASPNET Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":12,"RawContent":null}]}},"RunOn":"2018-04-16T05:30:09.6166932Z","RunDurationInMilliseconds":8280}