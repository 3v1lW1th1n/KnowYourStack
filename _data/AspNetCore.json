{"Data":{"Blog":{"FeedItems":[{"Title":"Blazor 0.4.0 experimental release now available","PublishedOn":"2018-06-07T21:28:56+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Blazor 0.4.0 is now available! This release includes important bug fixes and several new feature enhancements. New features in Blazor 0.4.0 (details below): Add event payloads for common event types...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/06/07/blazor-0-4-0-experimental-release-now-available/","RawContent":null},{"Title":"Use Dependency Injection In WebForms Application","PublishedOn":"2018-06-05T18:13:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Dependency Injection design pattern is widely used in modern applications.  It decouples objects to the extent that no client code needs to be changed simply because an object it depends changes to a...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/06/05/use-dependency-injection-in-webforms-application/","RawContent":null},{"Title":"ASP.NET Core 2.1.0 now available","PublishedOn":"2018-05-30T17:20:27+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Today we&#039;re thrilled to announce the release of ASP.NET Core 2.1.0! This is the latest release of our open-source and cross-platform web framework for .NET and it&#039;s now ready for production...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/30/asp-net-core-2-1-0-now-available/","RawContent":null},{"Title":"Troubleshooting ASP.NET Core Performance Problems","PublishedOn":"2018-05-23T14:26:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post by Mike Rousos I recently had an opportunity to help a developer with an ASP.NET Core app that was functionally correct but slow when under a heavy user load. We found a few...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/23/asp-net-core-performance-improvements/","RawContent":null},{"Title":"Announcing ASP.NET Providers Connected Service Visual Studio Extension","PublishedOn":"2018-05-22T17:43:31+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Provider pattern was introduced in ASP.NET 2.0 and it gives the developers the flexibility of where to store the state of ASP.NET features (e.g. Session State, Membership, Output Cache etc.). In...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/22/announcing-asp-net-providers-connected-service-visual-studio-extension/","RawContent":null},{"Title":"A Penny Saved is a Ton of Serverless Compute Earned","PublishedOn":"2018-05-21T20:08:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Scott Guthrie recently shared one of my favorite anecdotes on his Azure Red Shirt Tour. A Microsoft customer regularly invokes 1 billion (yes, that’s with a “B”) Azure Functions per day. The customer...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/21/a-penny-saved-is-a-ton-of-serverless-compute-earned/","RawContent":null},{"Title":"Exploring Azure App Service – Web Apps and SQL Azure","PublishedOn":"2018-05-18T19:40:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There is a good chance that your web app uses a database. In my previous post introducing Azure App Service, I showed some of the benefits of hosting apps in Azure App Service, and how easy it is to...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/18/exploring-azure-app-service-web-apps-and-sql-azure/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-rc1 now available","PublishedOn":"2018-05-07T18:00:55+00:00","CommentsCount":21,"FacebookCount":0,"Summary":"Today we’re happy to announce the first release candidate of ASP.NET Core 2.1! This release should be very close to the final stable release of ASP.NET Core 2.1 and includes primarily bug fixes and...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/07/asp-net-core-2-1-0-rc1-now-available/","RawContent":null},{"Title":"Exploring Azure App Service – Introduction","PublishedOn":"2018-05-02T23:01:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Have you ever needed to quickly stand up a web site, or web API app that was publicly available? Is your team or organization thinking about moving to the cloud but aren’t sure the best place to...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/exploring-azure-app-service-introduction/","RawContent":null},{"Title":"Blazor 0.3.0 experimental release now available","PublishedOn":"2018-05-02T19:50:50+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"Blazor 0.3.0 is now available! This release includes important bug fixes and many new feature enhancements. New features in this release (details below): Project templates updated to use Bootstrap 4...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/05/02/blazor-0-3-0-experimental-release-now-available/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7855543449","Type":"IssuesEvent","CreatedAt":"2018-06-21T02:28:15","Actor":"leecow","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3248","RelatedDescription":"Opened issue \".net core 2.0 angular default app IIS deploy to server failing with 502.3 error\" (#3248) at aspnet/Home","RelatedBody":"Issue moved from https://github.com/dotnet/core/issues/1694, opened by @jagindia\r\n\r\nI am using Visual studio 2017  default angular app.\r\nI have also installed DotNetCore.2.0.8-WindowsHosting.exe on local machine as well as remote server.\r\n\r\nInformation at https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/iis/?view=aspnetcore-2.1&tabs=aspnetcore2x is really not clear enough for beginners. Am I supposed to change BuildWebHost methos? \r\n\r\nMy BuildWebhost code  - \r\n\r\n`  public static IWebHost BuildWebHost(string[] args) =>\r\n            WebHost.CreateDefaultBuilder(args)\r\n                .UseStartup<Startup>()\r\n                .Build();`\r\n\r\nI was able to deploy the default app (as is) to IIS on local machine, but when I copy Publish Profile (from bin\\release\\PublishOutput folder) to the remote server and connect it to IIS with No Managed code app pool setting, it throws below error (captured in Failed Request tracing)\r\n\r\n` <EventData>\r\n  <Data Name=\"ContextId\">{80000004-0002-E300-B63F-84710C7967BB}</Data>\r\n  <Data Name=\"ModuleName\">AspNetCoreModule</Data>\r\n  <Data Name=\"Notification\">128</Data>\r\n  <Data Name=\"HttpStatus\">502</Data>\r\n  <Data Name=\"HttpReason\">Bad Gateway</Data>\r\n  <Data Name=\"HttpSubStatus\">3</Data>\r\n  <Data Name=\"ErrorCode\">2147942413</Data>\r\n  <Data Name=\"ConfigExceptionInfo\"></Data>\r\n </EventData>`\r\n\r\nIn fiddler Response Header is -\r\n\r\nHTTP/1.1 502 Bad Gateway\r\nContent-Type: text/html\r\nServer: Microsoft-IIS/8.5\r\nX-Powered-By: ASP.NET\r\nDate: Thu, 14 Jun 2018 17:33:23 GMT\r\nContent-Length: 1477\r\n\r\nAnd error is - \r\n\r\n<h2>502 - Web server received an invalid response while acting as a gateway or proxy server.</h2>\r\n  <h3>There is a problem with the page you are looking for, and it cannot be displayed. When the Web server (while acting as a gateway or proxy) contacted the upstream content server, it received an invalid response from the content server.</h3>\r\n\r\nThere are no errors found in Event Viewer. It says\r\nApplication 'MACHINE/WEBROOT/APPHOST/TEST' started process '6844' successfully and is listening on port '13118'.\r\n\r\nAlso, I am not able to capture the stdoutlogs, somehow it's not registering. I have enabled it on web.config file stdoutLogEnabled=\"true\"  and given the permission to the logs folder at root directory to the specific apppool. \r\n\r\nPlease help. \r\nThanks."},{"Id":"7855536625","Type":"IssuesEvent","CreatedAt":"2018-06-21T02:25:35","Actor":"leecow","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3247","RelatedDescription":"Opened issue \"System.TypeLoadException: 'Could not load type 'System.Runtime.Remoting.Messaging.ILogicalThreadAffinative' from assembly 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.'\" (#3247) at aspnet/Home","RelatedBody":"Issue moved from https://github.com/dotnet/core/issues/1702, opened by @periyasamyt\r\n\r\nI have created a web API project in .Net core. when I included some assemblies developed in .Net Framework 4.0, I am getting following error. Please help me with this.\r\n\r\nSystem.TypeLoadException: 'Could not load type 'System.Runtime.Remoting.Messaging.ILogicalThreadAffinative' from assembly 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.'"},{"Id":"7855522925","Type":"IssuesEvent","CreatedAt":"2018-06-21T02:20:27","Actor":"leecow","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3246","RelatedDescription":"Opened issue \"ModelBinding error with boolean values\" (#3246) at aspnet/Home","RelatedBody":"Issue moved from https://github.com/dotnet/core/issues/1711, opened by @WinthorpeCross\r\n\r\nI have a potential problem with the ModelBinder in my ASP.NET Core  2.0 project.  I have the following 'Index' controller action:\r\n```\r\n[HttpGet]\r\npublic async Task<IActionResult> Index(SortFilterIndexOptions options) { ... }\r\n```\r\nThe SortFilterIndexOptions are four parameters defined in the following class:\r\n\r\n```\r\npublic class SortFilterIndexOptions\r\n{\r\n    public int SelectedBirdId { get; set; }\r\n    public bool ShowAll { get; set; }\r\n    public bool ShowInTable { get; set; }\r\n    public int page { get; set; }\r\n}\r\n```\r\nThese enable the user to filter a paged index page using checkbox toggle buttons.\r\n\r\nEverything works until I change 'ShowAll' bool member to TRUE and then try to navigate to a different page. The 'ShowAll' parameter part of the url then contains two bool values ('ShowAll=true, false'):\r\n\r\n![screeshot](https://user-images.githubusercontent.com/35421339/41627649-0a0b992a-7419-11e8-8a51-082a1dcbfa1c.jpg)\r\n\r\nwhich of course results in a parse error ('FormatException: String was not recognised as a valid Boolean').\r\n\r\nMy understanding that the ModelBinder in ordinary MVC automatically parses the TRUE from the true,false.\r\n\r\nIt only happens when the 'ShowAll' parameter is toggled to TRUE. "},{"Id":"7855499953","Type":"IssuesEvent","CreatedAt":"2018-06-21T02:11:59","Actor":"leecow","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3245","RelatedDescription":"Opened issue \"ASP.NET Core 2.1 Web API wont start with Microsoft.AspNetCore.All 2.1.1\" (#3245) at aspnet/Home","RelatedBody":"Issue moved from https://github.com/dotnet/core/issues/1712. Opened by @poteb\r\n\r\nASP.NET Core 2.1 Web API wont start with Microsoft.AspNetCore.All 2.1.1\r\n\r\nI'm debugging my Web API from VS 2017 (15.7.1) and it's working with Microsoft.AspNetCore.All 2.1.0.\r\nBut if I update Microsoft.AspNetCore.All to 2.1.1 it wont start up. It doesn't even give me an exception, the console window flashes briefly and then the debugger detaches. Downgrading to 2.1.0 fixes this. No help in Windows event log.\r\n\r\ndotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\nVersion: 2.1.300\r\nCommit: adab45bf0c\r\n\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.15063\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\2.1.300\\\r\n\r\nHost (useful for support):\r\nVersion: 2.1.0\r\nCommit: caa7b7e2ba\r\n\r\n.NET Core SDKs installed:\r\n1.1.0 [C:\\Program Files\\dotnet\\sdk]\r\n2.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n2.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\nMicrosoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\nMicrosoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 2.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]"},{"Id":"7855403285","Type":"IssuesEvent","CreatedAt":"2018-06-21T01:34:36","Actor":"sobenz","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3244","RelatedDescription":"Closed issue \"Long tail in response time distribution for the simplest of table operations.\" (#3244) at aspnet/Home","RelatedBody":"Hi, This may be a case of having my expectations for the performance of table storage set too high, but our distribution of response times for even simple operations seems to have a long tail, and I am wondering if this is normal, or to be expected.\r\n\r\nEnvironment: \r\nAzure Web App running AspNetCore 2.1 (targeting dotNetCore2.0) and interacting with azure storage using v9.2 of the library. Both the WebApp and Storage account reside in the same Azure Region. \r\n\r\nWe experience a long tail in all storage operations. however the one i am highlighting in my example is about as simple as it comes.\r\n```\r\nvar operation = TableOperation.Retrieve<ConsentEntity>(consumerId.ToString(), string.Empty);\r\nvar tableResult = await table.ExecuteAsync(operation).ConfigureAwait(false);\r\n```\r\nThe highlighted operation runs from between 60rpm -> 1200rpm depending on the time of day. As can be seen from the NewRelic chart below most of these operations happen at a perfectly acceptable time, however as we get towards the upper percentage of response times even these simple operations seem to take a long time.\r\n![image](https://user-images.githubusercontent.com/11184586/41691312-123abd3e-754e-11e8-9875-277274fdda05.png)\r\nGoing beyond this we then start to see some requests that take a completely unacceptable amount of time (of which all seems to be taken up in network requests to storage).\r\n![image](https://user-images.githubusercontent.com/11184586/41691389-7f331a6c-754e-11e8-851f-1e7314e71e29.png)\r\nMy question is whether this is simply expected when using TableStorage, or whether it is something we should address with Azure as it may be an infrastructure issue."},{"Id":"7855344262","Type":"IssuesEvent","CreatedAt":"2018-06-21T01:11:24","Actor":"sobenz","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3244","RelatedDescription":"Opened issue \"Long tail in response time distribution for the simplest of table operations.\" (#3244) at aspnet/Home","RelatedBody":"Hi, This may be a case of having my expectations for the performance of table storage set too high, but our distribution of response times for even simple operations seems to have a long tail, and I am wondering if this is normal, or to be expected.\r\n\r\nEnvironment: \r\nAzure Web App running AspNetCore 2.1 (targeting dotNetCore2.0) and interacting with azure storage using v9.2 of the library. Both the WebApp and Storage account reside in the same Azure Region. \r\n\r\nWe experience a long tail in all storage operations. however the one i am highlighting in my example is about as simple as it comes.\r\n```\r\nvar operation = TableOperation.Retrieve<ConsentEntity>(consumerId.ToString(), string.Empty);\r\nvar tableResult = await table.ExecuteAsync(operation).ConfigureAwait(false);\r\n```\r\nThe highlighted operation runs from between 60rpm -> 1200rpm depending on the time of day. As can be seen from the NewRelic chart below most of these operations happen at a perfectly acceptable time, however as we get towards the upper percentage of response times even these simple operations seem to take a long time.\r\n![image](https://user-images.githubusercontent.com/11184586/41691312-123abd3e-754e-11e8-9875-277274fdda05.png)\r\nGoing beyond this we then start to see some requests that take a completely unacceptable amount of time (of which all seems to be taken up in network requests to storage).\r\n![image](https://user-images.githubusercontent.com/11184586/41691389-7f331a6c-754e-11e8-851f-1e7314e71e29.png)\r\nMy question is whether this is simply expected when using TableStorage, or whether it is something we should address with Azure as it may be an infrastructure issue."},{"Id":"7853598628","Type":"IssuesEvent","CreatedAt":"2018-06-20T17:56:48","Actor":"DanJ210","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3243","RelatedDescription":"Opened issue \"Azure is often not updated quick enough to run latest .Net Core updates.\" (#3243) at aspnet/Home","RelatedBody":"Usually when I create a new .Net Core project on the latest framework version using VS 2017, the app won't run on Azure. I'll get the 502.5 process failure. This happens without me touching the code at all, just using the template as is. I'll have to go into the NuGet packages and downgrade the Microsoft.AspNetCore.All to a lower version and then publishing the Azure app works and the app runs. Otherwise publishing works but the app won't run because the template version has versions that have not yet been installed on Azure. Even though when I first create the project I'm advertised to publish straight to Azure when doing so results in process failures. \r\n\r\nI spent a lot of time figuring out that Azure wasn't prepared for these updated versions which sucked. I'm not sure where or the best place to share this would be but to me this is a good place. Any version of aspnet Core that gets put out should be installed on Azure before being released and marketed heavily to the public. No?"},{"Id":"7850600958","Type":"IssuesEvent","CreatedAt":"2018-06-20T09:03:42","Actor":"glucaci","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3242","RelatedDescription":"Opened issue \" Microsoft.AspNetCore.Proxy nuget feed not updated\" (#3242) at aspnet/Home","RelatedBody":"The last version of `Microsoft.AspNetCore.Proxy` on `nuget.org` is `0.2.0`.\r\nWhy is this feed not updated anymore?\r\n\r\nThanks!"},{"Id":"7850533423","Type":"IssuesEvent","CreatedAt":"2018-06-20T08:51:53","Actor":"chukaifeng","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3237","RelatedDescription":"Closed issue \"There was a problem when I linked to the page in area\" (#3237) at aspnet/Home","RelatedBody":"I am leaning to use .net core, i created a MVC project based on .net core2.1。\r\n\r\nI created a new area called “BaseSetting”， then created a new Controller called “Prov” and linked a page to Home/Index with codes: @Url.Action(\"Index\",\"Prov\",new{area=\"BaseSetting\"})\r\n\r\nBut，when i click this link，link jump to url：http://localhost/TestSite/Prov?area=BaseSetting，and site can't find this page。\r\nThe Problem is “Why ‘BaseSetting’ didn't appear in front of ’/Prov‘”，but appears in query string parameters？Can anyone help me？\r\n"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7855158393","Type":"IssuesEvent","CreatedAt":"2018-06-20T23:58:49","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2517","RelatedDescription":"Closed issue \"Method not found: 'System.Security.Cryptography.X509Certificates.X509CertificateCollection System.Net.Http.HttpClientHandler.get_ClientCertificates()'.\" (#2517) at aspnet/SignalR","RelatedBody":"* Versions of Server-Side NuGet Packages: v1.0.1\r\n* Are you using the C# client or the JavaScript client: C#\r\n* The Server you are using (Kestrel/HttpSysServer/IIS/IIS Express/Azure Web App/etc.):  IIS\r\n* The Operating System on the Server (Windows/Linux/macOS): Server 2008 R2\r\n* The Operating System on the Client (Windows/Linux/macOS): Windows\r\n* The Browser on the client, if using the JavaScript client (IE/Chrome/Edge/Firefox/etc.): Any\r\n\r\nRunning MVC Asp.Net web application connecting to ASPNET Core SignalR service.\r\nWhen calling HubConnection.StartAsync(), critical exception occurs on the server only, doesn't happen when I run locally on IIS Express or using similar code in Linqpad.\r\n\r\n```\r\nConnection = new HubConnectionBuilder().WithUrl(\"[serverurl]\").Build();\r\nawait Connection.StartAsync();\r\n```\r\n\r\n\r\n```\r\n\r\nException: System.MissingMethodException\r\n\r\nMessage: Method not found: 'System.Security.Cryptography.X509Certificates.X509CertificateCollection System.Net.Http.HttpClientHandler.get_ClientCertificates()'.\r\n\r\n```\r\n\r\nRelevant Stack Trace (some removed for clarity):\r\n```\r\n\r\nStackTrace:    at Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.CreateHttpClient()\r\n   at Microsoft.AspNetCore.Http.Connections.Client.HttpConnection..ctor(HttpConnectionOptions httpConnectionOptions, ILoggerFactory loggerFactory)\r\n   at Microsoft.AspNetCore.SignalR.Client.HttpConnectionFactory.<ConnectAsync>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.<StartAsyncCore>d__31.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.<StartAsync>d__24.MoveNext()\r\n```\r\n"},{"Id":"7855116754","Type":"PullRequestEvent","CreatedAt":"2018-06-20T23:43:22","Actor":"DylanDmitri","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2520","RelatedDescription":"Opened pull request \"Dygray/handshake versioning\" (#2520) at aspnet/SignalR","RelatedBody":"After negotiating handshake, server replies with a `minorVersion` field.\r\n\r\nNo adding fields to `IHubProtocol`, so made a new `IHubProtocolWithMinorVersion`. Feels bad, but oh well.\r\n\r\nMessage caching:\r\n - `HandshakeProtocol` used to cache a single success message (empty error) in the `public static ReadOnlyMemory<byte> SuccessHandshakeData`. Eliminating this is technically a breaking change, so instead it's marked as obsolete and hardcoded to same series of bytes the default message would've serialized to previously.\r\n\r\n- With the addition of a `minorVersion` field, there's multiple possible return messages. Fortunately there's not many (no more than the number of protocols your server supports). Added a lookup dictionary for this caching. \r\n\r\n- Checked `HubConnectionContextBenchmark`; the additional dictionary overhead makes the handshake response ~2% slower (from `2.05 us` to `2.09 us`). For reference, adding caching makes the response ~20 times faster."},{"Id":"7855004135","Type":"IssuesEvent","CreatedAt":"2018-06-20T23:04:48","Actor":"seriouz","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2519","RelatedDescription":"Opened issue \"How is it possible to send a blob?\" (#2519) at aspnet/SignalR","RelatedBody":"Hello, is it currently possible to send a blob over the websocket connection? (https://developer.mozilla.org/en-US/docs/Web/API/WebSocket)\r\nThe blob is filled with chunks from a webcam stream encoded in webm/v9."},{"Id":"7854829110","Type":"IssuesEvent","CreatedAt":"2018-06-20T22:13:51","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2518","RelatedDescription":"Closed issue \"System.TypeLoadException: Could not resolve the signature of a virtual method on iOS\" (#2518) at aspnet/SignalR","RelatedBody":"I am still running into this issue on iOS. Oddly enough it works perfectly on Android.\r\n\r\nXamarin Forms Version: 3.0.0.561731\r\n\r\nSignalRCore version: 1.0.1"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7855450622","Type":"PullRequestEvent","CreatedAt":"2018-06-21T01:53:08","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7873","RelatedDescription":"Closed pull request \"Api Explorer not returning type with ActionResult<T>\" (#7873) at aspnet/Mvc","RelatedBody":"... and no type in ProducesResponseTypeAttribute\r\n\r\nStarting with .net 2.1, it's possible to use `ActionResult<T>` as a result for a controller method, omit the type in `ProducesResponseTypeAttribute` and this way the type T should be infered. At least it's what the doc says. However, in the current implementation of ApiExplorer, it doesn't work this way.\r\n\r\nThe PR test if the metadatattribute type is void (means omitted in `ProducesResponseTypeAttribute`), the type is not null (means it was infered from the return type) and if we have a status code that could/should have a content (200-203).\r\n\r\nAddresses #7871 and also https://github.com/domaindrivendev/Swashbuckle.AspNetCore/issues/711 + https://github.com/aspnet/Docs/issues/6844\r\n"},{"Id":"7855026009","Type":"IssuesEvent","CreatedAt":"2018-06-20T23:11:56","Actor":"NTaylorMullen","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7845","RelatedDescription":"Closed issue \"Script Tag Helper asp-fallback-src fails integrity check\" (#7845) at aspnet/Mvc","RelatedBody":"#### Is this a Bug or Feature request?:\r\nBug \r\n\r\n#### Steps to reproduce (preferrably a link to a GitHub repo with a repro project):\r\n\r\n1.  Create a reference to a CDN, using a local fallback and an integrity check, such as:\r\n```\r\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"\r\n    asp-fallback-src=\"~/js/jquery.min.js\"\r\n    asp-fallback-test=\"window.jQuery\"\r\n    crossorigin=\"anonymous\"\r\n    integrity=\"sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=\">\r\n</script>\r\n```\r\n2. Make sure the local file (jquery.min.js) is not binary equal to the CDN version. \r\n3. Change the CDN source to a non valid URI, such as using a non existent version 9.9.9. \r\n4. Fallback to local occurs, but the error occurs because integrity hash doesn't match, and this error thrown:\r\n`Failed to find a valid digest in the 'integrity' attribute for resource 'http://localhost:48888/js/jquery.min.js' with computed SHA-256 integrity 'oozPintQUive6gzYPN7KIhwY/B+d8+5rPTxI1ZkgaFU='. The resource has been blocked.`\r\n\r\n#### Description of the problem:\r\nThe problem is that although the local trusted file can be text equal, if it is not binary equal it generates a different hash doesn't match the CDN hosted version. The resolution would involve not testing the local file copy (already trusted) against the integrity. To maintain backwards compliance, a new attribute should be added called ignore-fallback-integrity, and when set to true would ignore the integrity check on the fallback file. \r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`:\r\n2.1.0\r\n\r\n"},{"Id":"7855022847","Type":"PullRequestEvent","CreatedAt":"2018-06-20T23:10:54","Actor":"NTaylorMullen","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7904","RelatedDescription":"Merged pull request \"Fix up a few pieces for the fallback integrity check feature.\" (#7904) at aspnet/Mvc","RelatedBody":"- Regenerated test baselines.\r\n- Update code styling in TagHelpers.\r\n- Modified some comments for clarity.\r\n- Renamed the `LinkTagHelper`s fallback integrity check attribute to exclude `href`.\r\n\r\n#7845\r\n\r\n@jmhmaine here's the grouped fixes. If you want to see the specifics of what I changed you can take a look at my commit only.\r\n"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7855147315","Type":"IssuesEvent","CreatedAt":"2018-06-20T23:54:41","Actor":"kanadaj","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1845","RelatedDescription":"Opened issue \"Refreshing claims on cookie auth\" (#1845) at aspnet/Identity","RelatedBody":"Hi guys,\r\n\r\nI have a question here. I have a Cookie authentication based web application which uses a custom `IUserRoleStore` that adds additional claims to the user based on some extra tables. The problem I'm facing right now is that even though those tables' value changes, the user's claims don't seem to get refreshed from the `IUserRoleStore` even when the security stamp is re-validated.\r\n\r\nI do have an override for `OnRefreshingPrincipal` though for the purpose of user impersonation; does this method maybe have a default value that I'm overriding that's meant to pull the claims from the store? Or am I missing something?"},{"Id":"7855139829","Type":"PullRequestEvent","CreatedAt":"2018-06-20T23:51:52","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1844","RelatedDescription":"Merged pull request \"Use partial tag helper instead of Html.Partial to avoid analyzer warning\" (#1844) at aspnet/Identity","RelatedBody":""},{"Id":"7855047504","Type":"PullRequestEvent","CreatedAt":"2018-06-20T23:19:00","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1844","RelatedDescription":"Opened pull request \"Use partial tag helper instead of Html.Partial to avoid analyzer warning\" (#1844) at aspnet/Identity","RelatedBody":""},{"Id":"7854623877","Type":"PullRequestEvent","CreatedAt":"2018-06-20T21:24:36","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1843","RelatedDescription":"Merged pull request \"Apply attribute to page model rather than handler\" (#1843) at aspnet/Identity","RelatedBody":""},{"Id":"7854552852","Type":"PullRequestEvent","CreatedAt":"2018-06-20T21:09:36","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1843","RelatedDescription":"Opened pull request \"Apply attribute to page model rather than handler\" (#1843) at aspnet/Identity","RelatedBody":""},{"Id":"7850272394","Type":"IssuesEvent","CreatedAt":"2018-06-20T08:01:21","Actor":"kassim-shaikh","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1842","RelatedDescription":"Opened issue \"Extend UserManager<T> class for Custom Password Hashing service\" (#1842) at aspnet/Identity","RelatedBody":"Hi,\r\nI am using Identity framework for user profile management in my MVC application. There are certain aspects  of the identity framework which  i want to customize based on application need. One of them is **Custom password hashing** :\r\n\r\nI am using combination of Salt, DEK and MEK to generate the random salt and encrypt it with random DEK once the hashing is done. I can't find a way to incorporate this feature just by extending the `IPasswordHashing` interface. One way i could achieve is by extended the `UserManager<T>` class. \r\n\r\nCould any one help me with the best practice to extend the class or basically where can i put custom hashing code."},{"Id":"7850268954","Type":"IssuesEvent","CreatedAt":"2018-06-20T08:00:39","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1841","RelatedDescription":"Closed issue \"Storing huge amount of data in claims creates too large cookie ticket\" (#1841) at aspnet/Identity","RelatedBody":"Hi guys,\r\n\r\nI have encoutered that if I have some data in user claims (from Azure SQL as storage and we use them such as dynamic properties without creating database columns), the cookie manager creates a ticket that in some cases reaches the limit of bytes per domain and I think that depends from the amount of data from the user claims.\r\nI am using .NET 4.6.1.\r\n\r\nSince that some of this data is vital for us, is there a possibility to exclude some claims from the ticket so we can reduce it enough and avoid these types of issue?\r\n\r\nKind regards"},{"Id":"7845386259","Type":"IssuesEvent","CreatedAt":"2018-06-19T12:48:55","Actor":"ms92ita","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1841","RelatedDescription":"Opened issue \"Storing huge amount of data in claims creates too large cookie ticket\" (#1841) at aspnet/Identity","RelatedBody":"Hi guys,\r\n\r\nI have encoutered that if I have some data in user claims (from Azure SQL as storage and we use them such as dynamic properties without creating database columns), the cookie manager creates a ticket that in some cases reaches the limit of bytes per domain and I think that depends from the amount of data from the user claims.\r\nI am using .NET 4.6.1.\r\n\r\nSince that some of this data is vital for us, is there a possibility to exclude some claims from the ticket so we can reduce it enough and avoid these types of issue?\r\n\r\nKind regards"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7855095212","Type":"IssuesEvent","CreatedAt":"2018-06-20T23:35:37","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2678","RelatedDescription":"Opened issue \"Support HTTP/2 response headers with END_STREAM, no body\" (#2678) at aspnet/KestrelHttpServer","RelatedBody":"If the response completes without a body there's no reason to send a data frame. Flush the headers with an End_Stream flag."},{"Id":"7853654818","Type":"IssuesEvent","CreatedAt":"2018-06-20T18:08:00","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2657","RelatedDescription":"Closed issue \"Application code can block http2 frame processing loop\" (#2657) at aspnet/KestrelHttpServer","RelatedBody":"Http2 connections support multiplexing with multiple parallel streams. There's one central loop per connection that reads incoming frames and dispatches them to the correct stream. However that dispatch does not force a thread hop, so if the app code blocks synchronously then the frame loop won't continue.\r\n\r\nThis is what happens when you put a break point in Run in the sample app:\r\n\r\n```\r\n \tHttp2SampleApp.dll!Http2SampleApp.Startup.Configure.AnonymousMethod__1_0(Microsoft.AspNetCore.Http.HttpContext context) Line 19\tC#\r\n \tMicrosoft.AspNetCore.Hosting.dll!Microsoft.AspNetCore.Hosting.Internal.HostingApplication.ProcessRequestAsync(Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context context)\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Core.dll!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context>(Microsoft.AspNetCore.Hosting.Server.IHttpApplication<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context> application) Line 553\tC#\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Core.dll!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequestsAsync<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context>(Microsoft.AspNetCore.Hosting.Server.IHttpApplication<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context> application) Line 464\tC#\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Core.dll!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2Connection.StartStream<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context>(Microsoft.AspNetCore.Hosting.Server.IHttpApplication<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context> application) Line 674\tC#\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Core.dll!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2Connection.DecodeHeadersAsync<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context>(Microsoft.AspNetCore.Hosting.Server.IHttpApplication<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context> application, bool endHeaders, System.Span<byte> payload) Line 635\tC#\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Core.dll!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2Connection.ProcessHeadersFrameAsync<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context>(Microsoft.AspNetCore.Hosting.Server.IHttpApplication<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context> application) Line 423\tC#\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Core.dll!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2Connection.ProcessFrameAsync<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context>(Microsoft.AspNetCore.Hosting.Server.IHttpApplication<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context> application) Line 266\tC#\r\n>\tMicrosoft.AspNetCore.Server.Kestrel.Core.dll!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2Connection.ProcessRequestsAsync<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context>(Microsoft.AspNetCore.Hosting.Server.IHttpApplication<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context> application) Line 163\tC#\r\n```\r\n\r\nData frames likely don't have this issue because they're shunted through a Pipe which should force offloads between writer and reader (?)."},{"Id":"7853652516","Type":"PullRequestEvent","CreatedAt":"2018-06-20T18:07:32","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2670","RelatedDescription":"Merged pull request \"Prevent app code from blocking the connection loop \" (#2670) at aspnet/KestrelHttpServer","RelatedBody":"#2657 Each connection is multiplexed and has a loop that reads and processes frames. That processing must not ever get blocked by application code.\r\n\r\nI fixed one code path where the initial request is dispatched to the app synchronously and the connection loop may get blocked by app code.\r\n\r\nThe only other case I found is for RST frames. https://github.com/aspnet/KestrelHttpServer/issues/2462#issuecomment-397702247. RequestAborted is dispatched on a background thread but that can be affected by ApplicationSchedulingMode. What's the guidance for ApplicationSchedulingMode? Should Inline mode assume the developer is going to write ideal code and never block the app loop? Or are there some conditions where we don't trust the app enough and always offload to a background thread like with the initial request above?"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7855243564","Type":"PullRequestEvent","CreatedAt":"2018-06-21T00:30:45","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2424","RelatedDescription":"Opened pull request \"Converted more parser tests to baselines\" (#2424) at aspnet/Razor","RelatedBody":"#2263 \r\n\r\n- Converted `CSharpAutoCompleteTest` to use baselines\r\n- More changes to the serializer to include symbols\r\n- Regenerated baselines"},{"Id":"7855123955","Type":"IssuesEvent","CreatedAt":"2018-06-20T23:45:53","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2423","RelatedDescription":"Opened issue \"Add version file to prevent VS insertion merge conflicts.\" (#2423) at aspnet/Razor","RelatedBody":"Need to figure out how to get the following into the vsmanproj:\r\n\r\n```XML\r\n<PropertyGroup>\r\n    <ManifestBuildVersion>$(ManifestBuildVersion)</ManifestBuildVersion>\r\n</PropertyGroup>\r\n```"},{"Id":"7850240064","Type":"IssuesEvent","CreatedAt":"2018-06-20T07:54:41","Actor":"eguzelkucuk","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2422","RelatedDescription":"Opened issue \"Asp.net core 2.1.0 RazorTemplateEngine not working\" (#2422) at aspnet/Razor","RelatedBody":"I am doing html minify on razortemplate engine on compiletime on asp.net core, but razortemplate engine does not work after updating project asp.net core 2.1.0.\r\n\r\nIt does not call CreateCodeDocument method. sample code below.\r\n\r\n```\r\npublic class CustomRazorTemplateEngine : RazorTemplateEngine\r\n{\r\nprivate HtmlMinifier _htmlMinifier = new HtmlMinifier();\r\n\r\npublic CustomRazorTemplateEngine(RazorEngine engine, RazorProject project) : base(engine, project)\r\n{\r\n    Options.ImportsFileName = \"_ViewImports.cshtml\";\r\n}\r\n\r\npublic override RazorCodeDocument CreateCodeDocument(RazorProjectItem projectItem)\r\n{\r\n    using (var inputStream = projectItem.Read())\r\n    {\r\n        using (var reader = new StreamReader(inputStream))\r\n        {\r\n            var text = reader.ReadToEnd();\r\n\r\n            var markupStart = text.IndexOf(\"<!DOCTYPE\");\r\n            var directives = text.Substring(0, markupStart);\r\n            var markup = text.Substring(markupStart);\r\n            text = directives + Minify(markup);\r\n            var byteArray = Encoding.UTF8.GetBytes(text);\r\n            var minifiedInputStream = new MemoryStream(byteArray);\r\n\r\n            var source = RazorSourceDocument.ReadFrom(minifiedInputStream, projectItem.PhysicalPath);\r\n            var imports = GetImports(projectItem);\r\n\r\n            return RazorCodeDocument.Create(source, imports);\r\n        }\r\n    }\r\n}\r\n\r\nprivate string Minify(string markup)\r\n{\r\n    MarkupMinificationResult result = _htmlMinifier.Minify(markup, string.Empty, Encoding.UTF8, true);\r\n\r\n    if (result.Errors.Count == 0)\r\n    {\r\n        MinificationStatistics statistics = result.Statistics;\r\n        if (statistics != null)\r\n        {\r\n            Console.WriteLine();\r\n            Console.WriteLine($\"Original size: {statistics.OriginalSize:N0} Bytes | Minified size: {statistics.MinifiedSize:N0} Bytes | Saved: {statistics.SavedInPercent:N2}%\");\r\n        }\r\n        //Console.WriteLine($\"{Environment.NewLine}Minified content:{Environment.NewLine}{Environment.NewLine}{result.MinifiedContent}\");\r\n\r\n        return result.MinifiedContent;\r\n    }\r\n    else\r\n    {\r\n        IList<MinificationErrorInfo> errors = result.Errors;\r\n\r\n        Console.WriteLine();\r\n        Console.WriteLine($\"Found {errors.Count:N0} error(s):\");\r\n\r\n        foreach (var error in errors)\r\n        {\r\n            Console.WriteLine($\" - Line {error.LineNumber}, Column {error.ColumnNumber}: {error.Message}\");\r\n        }\r\n\r\n        return markup;\r\n    }\r\n}\r\n}\r\n```\r\n\r\nstartup.cs\r\n`services.AddSingleton<RazorTemplateEngine, CustomRazorTemplateEngine>();`"},{"Id":"7848713189","Type":"IssuesEvent","CreatedAt":"2018-06-19T23:03:17","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2421","RelatedDescription":"Opened issue \"Port VS15.8 Razor editor fixes over to VS4Mac\" (#2421) at aspnet/Razor","RelatedBody":"- #2410 - 41fad8a33a3e02bd53f01c58a96bc87c5711a32f\r\n- #2408 - 1aa15374b53fb80a6307d3494dde393e70f070a4\r\n- #1255 - af63afdae713f6eb4126eb1f2e70c7ff9061e7b4  d6f3a1bd223ef9d7dc56b16f1da6bdb88fb0264f\r\n- #2299 - dc76027a7affd0a9fa4bac8bbaf07ed1effdf687\r\n- #2297 - b2ec9390065cee0a656c182485599753f9be21bb\r\n\r\n"},{"Id":"7848696645","Type":"PullRequestEvent","CreatedAt":"2018-06-19T22:58:07","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2402","RelatedDescription":"Merged pull request \"Convert parser tests to use baselines\" (#2402) at aspnet/Razor","RelatedBody":"#2263 \r\n\r\n- Added the infrastructure to serialize and verify parser tests with baselines\r\n- Updated CSharpVerbatimBlockTest and CSharpReservedWordsTest to use the new infrastructure\r\n\r\nUpcoming changes: (Sending this separately so that the current PR stays easy to review)\r\n- Make all the remaining parser tests use the new infrastructure\r\n- Cleanup and remove unnecessary overloads in ParserTestBase"},{"Id":"7848663685","Type":"PullRequestEvent","CreatedAt":"2018-06-19T22:47:52","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2420","RelatedDescription":"Opened pull request \"Update Razor SDK packing logic to not include Pack at properties layer.\" (#2420) at aspnet/Razor","RelatedBody":"- We now rely on the Razor source inputs layer to add packing to cshtml content items.\r\n\r\n#2378 \r\n#2384 \r\n\r\n@mkArtakMSFT This is ready to go, let me know when i'm good to merge."},{"Id":"7848601608","Type":"IssuesEvent","CreatedAt":"2018-06-19T22:29:09","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2378","RelatedDescription":"Closed issue \"Copy-pasting an item in an RCL project adds junk to the project file\" (#2378) at aspnet/Razor","RelatedBody":"1. Create a new RCL project in VS (2.1 RTM)\r\n2. Copy the `Page1.cshtml` file in solution explorer\r\n3. Paste\r\n\r\nYou get this.\r\n\r\n```\r\n  <ItemGroup>\r\n    <Content Update=\"Areas\\MyFeature\\Pages\\Page1 - Copy.cshtml\">\r\n      <Pack>$(IncludeRazorContentInPack)</Pack>\r\n    </Content>\r\n  </ItemGroup>\r\n```"}],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"7835454530","Type":"IssuesEvent","CreatedAt":"2018-06-17T06:05:39","Actor":"zoidhddhdd","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/876","RelatedDescription":"Opened issue \"EADME\" (#876) at aspnet/Templates","RelatedBody":"This repo is OBSOLETE - please see the README file for information\r\n![01134d87a8218ca4a92147e6b3063fbbb394d975e1](https://user-images.githubusercontent.com/39866902/41505199-1db96088-720c-11e8-92f2-4e236659aefa.jpg)"}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7844724634","Type":"IssuesEvent","CreatedAt":"2018-06-19T10:33:40","Actor":"Liero","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1076","RelatedDescription":"Opened issue \"Unable to publish when using Microsoft.NET.Sdk.Razor\" (#1076) at aspnet/Tooling","RelatedBody":"After I upgraded my solution from asp.net core 2.0 to 2.1, I'm not able to publish my web app from Visual Studio, although it can build.\r\n\r\nDuring the upgrade I've changed SDK in one of my class libraries to **Microsoft.NET.Sdk.Razor**, but now I'm getting a lot of errors and if project references were not recognized in this library when publishing.\r\n\r\n```\r\nConnecting to C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\publish\\...\r\nMyProject.Web -> C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\MyProject.Web.dll\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Roslyn\\csc.exe /noconfig /unsafe- /checked- /nowarn:1701,1702,1701,1702,2008 /nostdlib+ /errorreport:prompt /warn:4 /define:TRACE;RELEASE;NETCOREAPP;NETCOREAPP2_1 /errorendlocation /preferreduilang:en-US /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.antiforgery\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Antiforgery.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization.policy\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.Policy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cryptography.internal\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cryptography.Internal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.diagnostics.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Diagnostics.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.server.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Server.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.html.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Html.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.features\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Features.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.jsonpatch\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.JsonPatch.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.apiexplorer\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ApiExplorer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.dataannotations\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.formatters.json\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Formatters.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razorpages\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.RazorPages.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.taghelpers\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.TagHelpers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.viewfeatures\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ViewFeatures.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.language\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Language.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.runtime\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.responsecaching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.ResponseCaching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.webutilities\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.WebUtilities.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.csharp\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.common\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.CodeAnalysis.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.dotnet.platformabstractions\\2.1.0\\lib\\netstandard1.3\\Microsoft.DotNet.PlatformAbstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.relational\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Relational.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.sqlserver\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.SqlServer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.memory\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.binder\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Binder.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.DependencyInjection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection\\2.1.0\\lib\\netcoreapp2.0\\Microsoft.Extensions.DependencyInjection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencymodel\\2.1.0\\lib\\netstandard1.6\\Microsoft.Extensions.DependencyModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.composite\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Composite.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.filesystemglobbing\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileSystemGlobbing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.objectpool\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.ObjectPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.options\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Options.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.primitives\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.webencoders\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.WebEncoders.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.net.http.headers\\2.1.0\\lib\\netstandard2.0\\Microsoft.Net.Http.Headers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.VisualBasic.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.Win32.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.win32.registry\\4.5.0\\ref\\netstandard2.0\\Microsoft.Win32.Registry.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\mscorlib.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\netstandard.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json.bson\\1.0.1\\lib\\netstandard1.3\\Newtonsoft.Json.Bson.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json\\11.0.2\\lib\\netstandard2.0\\Newtonsoft.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\remotion.linq\\2.2.0\\lib\\netstandard1.0\\Remotion.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.AppContext.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Buffers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Concurrent.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Immutable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.NonGeneric.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Specialized.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Annotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.EventBasedAsync.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.TypeConverter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Console.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.Common.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.data.sqlclient\\4.5.0\\ref\\netcoreapp2.1\\System.Data.SqlClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Contracts.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Debug.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.DiagnosticSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.FileVersionInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Process.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.StackTrace.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TextWriterTraceListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tools.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TraceSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tracing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Dynamic.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Calendars.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.interactive.async\\3.1.1\\lib\\netstandard1.3\\System.Interactive.Async.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.Brotli.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.ZipFile.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.DriveInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Watcher.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.IsolatedStorage.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.MemoryMappedFiles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Pipes.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.UnmanagedMemoryStream.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Expressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Queryable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.HttpListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Mail.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NameResolution.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NetworkInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Ping.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Requests.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.ServicePoint.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Sockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebHeaderCollection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.Client.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.Vectors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ObjectModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.DispatchProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.ILGeneration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.Lightweight.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Metadata.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.TypeExtensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Reader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.ResourceManager.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Writer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.runtime.compilerservices.unsafe\\4.5.0\\ref\\netstandard2.0\\System.Runtime.CompilerServices.Unsafe.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.CompilerServices.VisualC.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Handles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.RuntimeInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.WindowsRuntime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Loader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Formatters.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.accesscontrol\\4.5.0\\ref\\netstandard2.0\\System.Security.AccessControl.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Claims.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Algorithms.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Csp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.X509Certificates.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.cryptography.xml\\4.5.0\\ref\\netstandard2.0\\System.Security.Cryptography.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.permissions\\4.5.0\\ref\\netstandard2.0\\System.Security.Permissions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Principal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.principal.windows\\4.5.0\\ref\\netstandard2.0\\System.Security.Principal.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.SecureString.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceModel.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceProcess.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.text.encodings.web\\4.5.0\\lib\\netstandard2.0\\System.Text.Encodings.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.RegularExpressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Overlapped.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Dataflow.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Thread.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.ThreadPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Timer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.Local.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ValueTuple.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.HttpUtility.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.ReaderWriter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlSerializer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\WindowsBase.dll\" /debug- /debug:portable /filealign:512 /optimize+ /out:obj\\Release\\netcoreapp2.1\\MyProject.Mail.dll /ruleset:\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Team Tools\\Static Analysis Tools\\\\Rule Sets\\MinimumRecommendedRules.ruleset\" /target:library /warnaserror- /utf8output /deterministic+ /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.CSharp.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.analyzers\\2.1.0\\analyzers\\dotnet\\cs\\Microsoft.EntityFrameworkCore.Analyzers.dll\" EmailDefaults.cs EmailOptions.cs MailSender.cs NotificationService.cs RazorViewToStringRenderer.cs \"C:\\Users\\daniel.turan\\AppData\\Local\\Temp\\.NETCoreApp,Version=v2.1.AssemblyAttributes.cs\" obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs obj\\Release\\netcoreapp2.1\\\\Tem\tporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.RazorAssemblyInfo.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.AssemblyInfo.cs /warnaserror+:NU1605\r\nNotificationService.cs(15,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\nNotificationService.cs(16,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\n...\r\n```\r\n\r\nAlso, see https://stackoverflow.com/questions/50926116/publish-failed-when-using-microsoft-net-sdk-razor-if-reference-was-not-recognize for more details"},{"Id":"7780449586","Type":"IssuesEvent","CreatedAt":"2018-06-05T20:05:23","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1075","RelatedDescription":"Opened issue \"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/\" (#1075) at aspnet/Tooling","RelatedBody":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/"},{"Id":"7773593004","Type":"IssuesEvent","CreatedAt":"2018-06-04T18:29:24","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1074","RelatedDescription":"Reopened issue \"Docker in launchSettings.json\" (#1074) at aspnet/Tooling","RelatedBody":"Please give documentation on how to add volume mounts.  I need to add a custom volume mount into my image."},{"Id":"7766446851","Type":"IssuesEvent","CreatedAt":"2018-06-02T16:19:09","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1074","RelatedDescription":"Closed issue \"Docker in launchSettings.json\" (#1074) at aspnet/Tooling","RelatedBody":"Please give documentation on how to add volume mounts.  I need to add a custom volume mount into my image."},{"Id":"7766245633","Type":"IssuesEvent","CreatedAt":"2018-06-02T14:10:14","Actor":"AceHack","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1074","RelatedDescription":"Opened issue \"Docker in launchSettings.json\" (#1074) at aspnet/Tooling","RelatedBody":"Please give documentation on how to add volume mounts.  I need to add a custom volume mount into my image."},{"Id":"7763744014","Type":"PullRequestEvent","CreatedAt":"2018-06-01T17:41:05","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Tooling/pull/1073","RelatedDescription":"Merged pull request \"Update dotnet-core-2.1.md\" (#1073) at aspnet/Tooling","RelatedBody":"Visual Studio 2017 15.7 has been released now so this document is outdated"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7847708511","Type":"IssuesEvent","CreatedAt":"2018-06-19T19:21:14","Actor":"anurse","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/306","RelatedDescription":"Opened issue \"SignalR Client 2.1.1 in UWP apps with Minimum Version of 1803\" (#306) at aspnet/Announcements","RelatedBody":"ASP.NET Core 2.1.1 contains fixes to resolve blocking issues when using the SignalR Client from UWP applications where the minimum version is set to \"Windows 10, version 1803\". However, these fixes also require some additional dependencies.\r\n\r\n**NOTE**: UWP Applcations with a minimum version set **below** \"Windows 10, version 1803\" (for example, if the minimum version is set to \"Fall Creators Update\") are **not** affected by this issue and **do not require** these steps.\r\n\r\nIn order to use the SignalR Client in UWP applications where the minimum version is set to \"Windows 10, version 1803\" you will need to:\r\n\r\n1. Upgrade `Microsoft.AspNetCore.SignalR.Client` to `1.0.1`. This build is now available on NuGet.\r\n1. Add the following **additional** package references to your project. These are referenced transitively by the SignalR Client, but newer versions are required to resolve this issue. We are planning to improve this in a future patch.\r\n    * `System.Threading.Tasks.Extensions` version `4.5.1`\r\n    * `System.Runtime.CompilerServices.Unsafe` version `4.5.1`\r\n\r\nFor discussion, use https://github.com/aspnet/SignalR/issues/2406"},{"Id":"7784515869","Type":"IssuesEvent","CreatedAt":"2018-06-06T13:30:31","Actor":"Tratcher","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/304","RelatedDescription":"Closed issue \"怎么找工作啊\" (#304) at aspnet/Announcements","RelatedBody":"我学spirng的同学都上班两个月了我实习都没找到，学了给asp告诉我现在不能用了要什么点apsnet。你们行不行啊\r\n\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n\r\nThis repo is for team announcements only. See https://github.com/aspnet/announcements#announcements.\r\n\r\nTo file a bug or start a discussion, please find the appropriate repo in https://github.com/aspnet and create a new issue. \r\nFor general issue discussions please go to https://github.com/aspnet/Home/issues and create a new issue.\r\n"},{"Id":"7784252237","Type":"IssuesEvent","CreatedAt":"2018-06-06T12:44:46","Actor":"ToLearnMoe","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/304","RelatedDescription":"Opened issue \"怎么找工作啊\" (#304) at aspnet/Announcements","RelatedBody":"我学spirng的同学都上班两个月了我实习都没找到，学了给asp告诉我现在不能用了要什么点apsnet。你们行不行啊\r\n\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n\r\nThis repo is for team announcements only. See https://github.com/aspnet/announcements#announcements.\r\n\r\nTo file a bug or start a discussion, please find the appropriate repo in https://github.com/aspnet and create a new issue. \r\nFor general issue discussions please go to https://github.com/aspnet/Home/issues and create a new issue.\r\n"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"334314763","IsPullRequest":false,"CreatedAt":"2018-06-21T02:28:14","Actor":"leecow","Number":"3248","RawContent":null,"Title":".net core 2.0 angular default app IIS deploy to server failing with 502.3 error","State":"open","Body":"Issue moved from https://github.com/dotnet/core/issues/1694, opened by @jagindia\r\n\r\nI am using Visual studio 2017  default angular app.\r\nI have also installed DotNetCore.2.0.8-WindowsHosting.exe on local machine as well as remote server.\r\n\r\nInformation at https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/iis/?view=aspnetcore-2.1&tabs=aspnetcore2x is really not clear enough for beginners. Am I supposed to change BuildWebHost methos? \r\n\r\nMy BuildWebhost code  - \r\n\r\n`  public static IWebHost BuildWebHost(string[] args) =>\r\n            WebHost.CreateDefaultBuilder(args)\r\n                .UseStartup<Startup>()\r\n                .Build();`\r\n\r\nI was able to deploy the default app (as is) to IIS on local machine, but when I copy Publish Profile (from bin\\release\\PublishOutput folder) to the remote server and connect it to IIS with No Managed code app pool setting, it throws below error (captured in Failed Request tracing)\r\n\r\n` <EventData>\r\n  <Data Name=\"ContextId\">{80000004-0002-E300-B63F-84710C7967BB}</Data>\r\n  <Data Name=\"ModuleName\">AspNetCoreModule</Data>\r\n  <Data Name=\"Notification\">128</Data>\r\n  <Data Name=\"HttpStatus\">502</Data>\r\n  <Data Name=\"HttpReason\">Bad Gateway</Data>\r\n  <Data Name=\"HttpSubStatus\">3</Data>\r\n  <Data Name=\"ErrorCode\">2147942413</Data>\r\n  <Data Name=\"ConfigExceptionInfo\"></Data>\r\n </EventData>`\r\n\r\nIn fiddler Response Header is -\r\n\r\nHTTP/1.1 502 Bad Gateway\r\nContent-Type: text/html\r\nServer: Microsoft-IIS/8.5\r\nX-Powered-By: ASP.NET\r\nDate: Thu, 14 Jun 2018 17:33:23 GMT\r\nContent-Length: 1477\r\n\r\nAnd error is - \r\n\r\n<h2>502 - Web server received an invalid response while acting as a gateway or proxy server.</h2>\r\n  <h3>There is a problem with the page you are looking for, and it cannot be displayed. When the Web server (while acting as a gateway or proxy) contacted the upstream content server, it received an invalid response from the content server.</h3>\r\n\r\nThere are no errors found in Event Viewer. It says\r\nApplication 'MACHINE/WEBROOT/APPHOST/TEST' started process '6844' successfully and is listening on port '13118'.\r\n\r\nAlso, I am not able to capture the stdoutlogs, somehow it's not registering. I have enabled it on web.config file stdoutLogEnabled=\"true\"  and given the permission to the logs folder at root directory to the specific apppool. \r\n\r\nPlease help. \r\nThanks.","Url":"https://github.com/aspnet/Home/issues/3248","RelatedDescription":"Open issue \".net core 2.0 angular default app IIS deploy to server failing with 502.3 error\" (#3248)"},{"Id":"334314313","IsPullRequest":false,"CreatedAt":"2018-06-21T02:25:34","Actor":"leecow","Number":"3247","RawContent":null,"Title":"System.TypeLoadException: 'Could not load type 'System.Runtime.Remoting.Messaging.ILogicalThreadAffinative' from assembly 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.'","State":"open","Body":"Issue moved from https://github.com/dotnet/core/issues/1702, opened by @periyasamyt\r\n\r\nI have created a web API project in .Net core. when I included some assemblies developed in .Net Framework 4.0, I am getting following error. Please help me with this.\r\n\r\nSystem.TypeLoadException: 'Could not load type 'System.Runtime.Remoting.Messaging.ILogicalThreadAffinative' from assembly 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.'","Url":"https://github.com/aspnet/Home/issues/3247","RelatedDescription":"Open issue \"System.TypeLoadException: 'Could not load type 'System.Runtime.Remoting.Messaging.ILogicalThreadAffinative' from assembly 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.'\" (#3247)"},{"Id":"334313425","IsPullRequest":false,"CreatedAt":"2018-06-21T02:20:27","Actor":"leecow","Number":"3246","RawContent":null,"Title":"ModelBinding error with boolean values","State":"open","Body":"Issue moved from https://github.com/dotnet/core/issues/1711, opened by @WinthorpeCross\r\n\r\nI have a potential problem with the ModelBinder in my ASP.NET Core  2.0 project.  I have the following 'Index' controller action:\r\n```\r\n[HttpGet]\r\npublic async Task<IActionResult> Index(SortFilterIndexOptions options) { ... }\r\n```\r\nThe SortFilterIndexOptions are four parameters defined in the following class:\r\n\r\n```\r\npublic class SortFilterIndexOptions\r\n{\r\n    public int SelectedBirdId { get; set; }\r\n    public bool ShowAll { get; set; }\r\n    public bool ShowInTable { get; set; }\r\n    public int page { get; set; }\r\n}\r\n```\r\nThese enable the user to filter a paged index page using checkbox toggle buttons.\r\n\r\nEverything works until I change 'ShowAll' bool member to TRUE and then try to navigate to a different page. The 'ShowAll' parameter part of the url then contains two bool values ('ShowAll=true, false'):\r\n\r\n![screeshot](https://user-images.githubusercontent.com/35421339/41627649-0a0b992a-7419-11e8-8a51-082a1dcbfa1c.jpg)\r\n\r\nwhich of course results in a parse error ('FormatException: String was not recognised as a valid Boolean').\r\n\r\nMy understanding that the ModelBinder in ordinary MVC automatically parses the TRUE from the true,false.\r\n\r\nIt only happens when the 'ShowAll' parameter is toggled to TRUE. ","Url":"https://github.com/aspnet/Home/issues/3246","RelatedDescription":"Open issue \"ModelBinding error with boolean values\" (#3246)"},{"Id":"334311959","IsPullRequest":false,"CreatedAt":"2018-06-21T02:11:59","Actor":"leecow","Number":"3245","RawContent":null,"Title":"ASP.NET Core 2.1 Web API wont start with Microsoft.AspNetCore.All 2.1.1","State":"open","Body":"Issue moved from https://github.com/dotnet/core/issues/1712. Opened by @poteb\r\n\r\nASP.NET Core 2.1 Web API wont start with Microsoft.AspNetCore.All 2.1.1\r\n\r\nI'm debugging my Web API from VS 2017 (15.7.1) and it's working with Microsoft.AspNetCore.All 2.1.0.\r\nBut if I update Microsoft.AspNetCore.All to 2.1.1 it wont start up. It doesn't even give me an exception, the console window flashes briefly and then the debugger detaches. Downgrading to 2.1.0 fixes this. No help in Windows event log.\r\n\r\ndotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\nVersion: 2.1.300\r\nCommit: adab45bf0c\r\n\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.15063\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\2.1.300\\\r\n\r\nHost (useful for support):\r\nVersion: 2.1.0\r\nCommit: caa7b7e2ba\r\n\r\n.NET Core SDKs installed:\r\n1.1.0 [C:\\Program Files\\dotnet\\sdk]\r\n2.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n2.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\nMicrosoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\nMicrosoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 2.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]","Url":"https://github.com/aspnet/Home/issues/3245","RelatedDescription":"Open issue \"ASP.NET Core 2.1 Web API wont start with Microsoft.AspNetCore.All 2.1.1\" (#3245)"},{"Id":"334301604","IsPullRequest":false,"CreatedAt":"2018-06-21T01:34:36","Actor":"sobenz","Number":"3244","RawContent":null,"Title":"Long tail in response time distribution for the simplest of table operations.","State":"closed","Body":"Hi, This may be a case of having my expectations for the performance of table storage set too high, but our distribution of response times for even simple operations seems to have a long tail, and I am wondering if this is normal, or to be expected.\r\n\r\nEnvironment: \r\nAzure Web App running AspNetCore 2.1 (targeting dotNetCore2.0) and interacting with azure storage using v9.2 of the library. Both the WebApp and Storage account reside in the same Azure Region. \r\n\r\nWe experience a long tail in all storage operations. however the one i am highlighting in my example is about as simple as it comes.\r\n```\r\nvar operation = TableOperation.Retrieve<ConsentEntity>(consumerId.ToString(), string.Empty);\r\nvar tableResult = await table.ExecuteAsync(operation).ConfigureAwait(false);\r\n```\r\nThe highlighted operation runs from between 60rpm -> 1200rpm depending on the time of day. As can be seen from the NewRelic chart below most of these operations happen at a perfectly acceptable time, however as we get towards the upper percentage of response times even these simple operations seem to take a long time.\r\n![image](https://user-images.githubusercontent.com/11184586/41691312-123abd3e-754e-11e8-9875-277274fdda05.png)\r\nGoing beyond this we then start to see some requests that take a completely unacceptable amount of time (of which all seems to be taken up in network requests to storage).\r\n![image](https://user-images.githubusercontent.com/11184586/41691389-7f331a6c-754e-11e8-851f-1e7314e71e29.png)\r\nMy question is whether this is simply expected when using TableStorage, or whether it is something we should address with Azure as it may be an infrastructure issue.","Url":"https://github.com/aspnet/Home/issues/3244","RelatedDescription":"Closed issue \"Long tail in response time distribution for the simplest of table operations.\" (#3244)"},{"Id":"334188617","IsPullRequest":false,"CreatedAt":"2018-06-20T17:56:47","Actor":"DanJ210","Number":"3243","RawContent":null,"Title":"Azure is often not updated quick enough to run latest .Net Core updates.","State":"open","Body":"Usually when I create a new .Net Core project on the latest framework version using VS 2017, the app won't run on Azure. I'll get the 502.5 process failure. This happens without me touching the code at all, just using the template as is. I'll have to go into the NuGet packages and downgrade the Microsoft.AspNetCore.All to a lower version and then publishing the Azure app works and the app runs. Otherwise publishing works but the app won't run because the template version has versions that have not yet been installed on Azure. Even though when I first create the project I'm advertised to publish straight to Azure when doing so results in process failures. \r\n\r\nI spent a lot of time figuring out that Azure wasn't prepared for these updated versions which sucked. I'm not sure where or the best place to share this would be but to me this is a good place. Any version of aspnet Core that gets put out should be installed on Azure before being released and marketed heavily to the public. No?","Url":"https://github.com/aspnet/Home/issues/3243","RelatedDescription":"Open issue \"Azure is often not updated quick enough to run latest .Net Core updates.\" (#3243)"},{"Id":"333986366","IsPullRequest":false,"CreatedAt":"2018-06-20T09:03:41","Actor":"glucaci","Number":"3242","RawContent":null,"Title":" Microsoft.AspNetCore.Proxy nuget feed not updated","State":"open","Body":"The last version of `Microsoft.AspNetCore.Proxy` on `nuget.org` is `0.2.0`.\r\nWhy is this feed not updated anymore?\r\n\r\nThanks!","Url":"https://github.com/aspnet/Home/issues/3242","RelatedDescription":"Open issue \" Microsoft.AspNetCore.Proxy nuget feed not updated\" (#3242)"},{"Id":"333309843","IsPullRequest":false,"CreatedAt":"2018-06-20T08:51:52","Actor":"chukaifeng","Number":"3237","RawContent":null,"Title":"There was a problem when I linked to the page in area","State":"closed","Body":"I am leaning to use .net core, i created a MVC project based on .net core2.1。\r\n\r\nI created a new area called “BaseSetting”， then created a new Controller called “Prov” and linked a page to Home/Index with codes: @Url.Action(\"Index\",\"Prov\",new{area=\"BaseSetting\"})\r\n\r\nBut，when i click this link，link jump to url：http://localhost/TestSite/Prov?area=BaseSetting，and site can't find this page。\r\nThe Problem is “Why ‘BaseSetting’ didn't appear in front of ’/Prov‘”，but appears in query string parameters？Can anyone help me？\r\n","Url":"https://github.com/aspnet/Home/issues/3237","RelatedDescription":"Closed issue \"There was a problem when I linked to the page in area\" (#3237)"},{"Id":"333022775","IsPullRequest":false,"CreatedAt":"2018-06-20T03:43:52","Actor":"billschen","Number":"3233","RawContent":null,"Title":"dotnet aspnet-codegenerator identity Unrecognized option '-lf' but '--listFiles' OK","State":"closed","Body":"First I run command **dotnet aspnet-codegenerator identity -h** to show help\r\n**--files|-fi**\r\nList of semicolon separated files to scaffold. Use the **--list-files** option to see the available options\r\n**--listFiles|-lf**\r\nLists the files that can be scaffolded by using the '**--files**' option.\r\n\r\nthen I run command dotnet aspnet-codegenerator identity **--listFiles** \r\n![llb1](https://user-images.githubusercontent.com/19528399/41503264-23a0fae8-7201-11e8-99e9-02b46b21c690.jpg)\r\n\r\nBut when I use '-lf' become Unrecognized:\r\n![llb2](https://user-images.githubusercontent.com/19528399/41503271-63373bd6-7201-11e8-81f4-6cb55470168d.jpg)\r\n","Url":"https://github.com/aspnet/Home/issues/3233","RelatedDescription":"Closed issue \"dotnet aspnet-codegenerator identity Unrecognized option '-lf' but '--listFiles' OK\" (#3233)"},{"Id":"333717494","IsPullRequest":false,"CreatedAt":"2018-06-19T15:14:01","Actor":"JohnGalt1717","Number":"3241","RawContent":null,"Title":".NET Core 2.1.1 released to nuget but no SDK/Runtime so error on run in VS.net","State":"open","Body":"Where is the SDK for .NET Core 2.1.1?  You guys shouldn't be releasing packages to nuget until updates are ready on dot.net.","Url":"https://github.com/aspnet/Home/issues/3241","RelatedDescription":"Open issue \".NET Core 2.1.1 released to nuget but no SDK/Runtime so error on run in VS.net\" (#3241)"},{"Id":"333526313","IsPullRequest":false,"CreatedAt":"2018-06-19T05:42:47","Actor":"rocketRobin","Number":"3240","RawContent":null,"Title":"Does the IServiceProvider is singleton in asp net core?","State":"open","Body":"when I write a service, I need to dynamic create a \"Handler\" and in this scene, should I can write like this?\r\n\r\n    public class WorkflowService : IWorkflowService\r\n    {\r\n        private readonly IServiceProvider _provider;\r\n        public WorkflowService( IServiceProvider provider)\r\n        {\r\n            _provider = provider;\r\n        }\r\n\r\nWorkflow service will be singleton \r\n\r\nthanks very much!","Url":"https://github.com/aspnet/Home/issues/3240","RelatedDescription":"Open issue \"Does the IServiceProvider is singleton in asp net core?\" (#3240)"},{"Id":"333450393","IsPullRequest":false,"CreatedAt":"2018-06-19T03:40:15","Actor":"DaveSlinn","Number":"3239","RawContent":null,"Title":"Unable to find package Microsoft.AspNetCore.Authentication.Core with version (>= 2.1.1)","State":"closed","Body":"Upgrading my AspNetCore package references from 2.1.0 to 2.1.1.  I'm now getting the following error:\r\n\r\n```\r\n6>C:\\Cims\\oauth\\src\\CIMS.NET\\Gms.Cor.Api\\Gms.Cor.Api.csproj : error NU1102: Unable to find package Microsoft.AspNetCore.Authentication.Core with version (>= 2.1.1)\r\n6>C:\\Cims\\oauth\\src\\CIMS.NET\\Gms.Cor.Api\\Gms.Cor.Api.csproj : error NU1102:   - Found 11 version(s) in nuget.org [ Nearest version: 2.1.0 ]\r\n6>C:\\Cims\\oauth\\src\\CIMS.NET\\Gms.Cor.Api\\Gms.Cor.Api.csproj : error NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages\r\n6>C:\\Cims\\oauth\\src\\CIMS.NET\\Gms.Cor.Api\\Gms.Cor.Api.csproj : error NU1102: Unable to find package Microsoft.AspNetCore.Authentication.Abstractions with version (>= 2.1.1)\r\n6>C:\\Cims\\oauth\\src\\CIMS.NET\\Gms.Cor.Api\\Gms.Cor.Api.csproj : error NU1102:   - Found 11 version(s) in nuget.org [ Nearest version: 2.1.0 ]\r\n6>C:\\Cims\\oauth\\src\\CIMS.NET\\Gms.Cor.Api\\Gms.Cor.Api.csproj : error NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages\r\n```\r\nHere is my .csproj:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>net47</TargetFramework>\r\n    <ApplicationIcon />\r\n    <OutputType>Library</OutputType>\r\n    <StartupObject />\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|AnyCPU'\">\r\n    <NoWarn>1701;1702;1705;1591</NoWarn>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|AnyCPU'\">\r\n    <NoWarn>1701;1702;1705;1591</NoWarn>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Flurl\" Version=\"2.7.1\" />\r\n    <PackageReference Include=\"IdentityServer4.AccessTokenValidation\" Version=\"2.6.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore\" Version=\"2.1.1\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"2.1.1\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc.Versioning\" Version=\"2.3.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.HttpsPolicy\" Version=\"2.1.1\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc.Formatters.Xml\" Version=\"2.1.1\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.StaticFiles\" Version=\"2.1.1\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Logging.Debug\" Version=\"2.1.1\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.BrowserLink\" Version=\"2.1.1\" />\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"11.0.2\" />\r\n    <PackageReference Include=\"Swashbuckle.AspNetCore\" Version=\"2.5.0\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\Gms.Cor.Repository\\Gms.Cor.Repository.csproj\" />\r\n    <ProjectReference Include=\"..\\Gms.Cor.Sql\\Gms.Cor.Sql.csproj\" />\r\n    <ProjectReference Include=\"..\\Gms.Cor\\Gms.Cor.csproj\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <Folder Include=\"Properties\\\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\nWhen I look at nuget.org, Microsoft.AspNetCore.Authentication.Core says the latest version is 2.1.0 (current) last updated 20 days ago.\r\n\r\nIs this just a timing issue?  In other words, is a 2.1.1 version of this package getting published soon?","Url":"https://github.com/aspnet/Home/issues/3239","RelatedDescription":"Closed issue \"Unable to find package Microsoft.AspNetCore.Authentication.Core with version (>= 2.1.1)\" (#3239)"},{"Id":"333322782","IsPullRequest":false,"CreatedAt":"2018-06-18T15:38:21","Actor":"karelz","Number":"3238","RawContent":null,"Title":"CORS issue whe sending only a file from Js.","State":"closed","Body":"_From @ManuelDev1810 on June 18, 2018 12:22_\n\nHave one of you guys have problem about sending files with asp.net core 2.0 or 2.1, I mean i did it great with razor and all were fine, but now I am sending a file with js,   and I don't why throw that is not allowed CORS... I don't know why because all the other actions works fine with the  cors defined.\r\n\r\nConfigure Services\r\n\r\n`\r\n    services.AddCors(options => {\r\n                options.AddPolicy(\"AllowAllOrigin\", builder =>\r\n                builder.WithOrigins(\"http://localhost:3000\")\r\n                    .AllowAnyHeader()\r\n                    .AllowAnyMethod()\r\n                    .AllowCredentials()\r\n                );\r\n            });\r\n`\r\n\r\nConfigure\r\n\r\n`app.UseCors(\"AllowAllOrigin\");`\r\n\r\nAction\r\n\r\n\r\n        [EnableCors(\"AllowAllOrigin\")]\r\n        [Route(\"img\")]\r\n        [HttpPost]\r\n        public async Task<IActionResult> CreateImg(IFormFile file)\r\n        {\r\n            if (file.Length != 0)\r\n            {\r\n                var path = Path.Combine(Directory.GetCurrentDirectory(), \"wwwroot/Img\", file.FileName);\r\n\r\n                using (var stream = new FileStream(path, FileMode.Create))\r\n                {\r\n                    await file.CopyToAsync(stream);\r\n                }\r\n                return Ok(file);\r\n            }\r\n            return BadRequest();\r\n        }\r\n\r\n`\r\nI get the file, but when goes to use the  \r\n\r\n`\r\n using (var stream = new FileStream(path, FileMode.Create))\r\n      {\r\n                    await file.CopyToAsync(stream);\r\n     }\r\n`\r\n throw not allowed CORS\r\nSorry it is kind of big\r\nAll the others action works fine with the cors defined, but i dont get why with the file throw me not allowed by CORS\r\n\r\n`\r\nNo 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'http://localhost:3000' is therefore not allowed access. The response had HTTP status code 500.\r\n`\r\n\r\nJS\r\n\r\n\r\n let file = this.logo.files[0]\r\n        let data = new FormData()\r\n        data.append('file', file)\r\n        let img = {\r\n            method: 'POST',\r\n            body: data\r\n        }\r\n        await fetch('https://localhost:44365//api/home', img);\r\n\r\n\r\nHow i told you, i get the file in the action, but when goes to\r\n`\r\n using (var stream = new FileStream(path, FileMode.Create))\r\n      {\r\n                    await file.CopyToAsync(stream);\r\n     }\r\n`\r\nThrow the exception.\r\n\r\n--------------\r\n\r\nI really don't why because all the other actions works fine with the  cors defined.\r\n\n\n_Copied from original issue: dotnet/corefx#30486_","Url":"https://github.com/aspnet/Home/issues/3238","RelatedDescription":"Closed issue \"CORS issue whe sending only a file from Js.\" (#3238)"},{"Id":"333243048","IsPullRequest":false,"CreatedAt":"2018-06-18T12:10:31","Actor":"ManuelDev1810","Number":"3236","RawContent":null,"Title":"CORS issue whe sending only a file from Js.","State":"open","Body":"Have one of you guys have problem about sending files with asp.net core 2.0 or 2.1, I mean i did it great with razor and all were fine, but now I am sending a file with js,   and I don't why throw that is not allowed CORS... I don't know why because all the other actions works fine with the  cors defined.\r\n\r\nConfigure Services\r\n\r\n`\r\n    services.AddCors(options => {\r\n                options.AddPolicy(\"AllowAllOrigin\", builder =>\r\n                builder.WithOrigins(\"http://localhost:3000\")\r\n                    .AllowAnyHeader()\r\n                    .AllowAnyMethod()\r\n                    .AllowCredentials()\r\n                );\r\n            });\r\n`\r\n\r\nConfigure\r\n\r\n`app.UseCors(\"AllowAllOrigin\");`\r\n\r\nAction\r\n\r\n\r\n        [EnableCors(\"AllowAllOrigin\")]\r\n        [Route(\"img\")]\r\n        [HttpPost]\r\n        public async Task<IActionResult> CreateImg(IFormFile file)\r\n        {\r\n            if (file.Length != 0)\r\n            {\r\n                var path = Path.Combine(Directory.GetCurrentDirectory(), \"wwwroot/Img\", file.FileName);\r\n\r\n                using (var stream = new FileStream(path, FileMode.Create))\r\n                {\r\n                    await file.CopyToAsync(stream);\r\n                }\r\n                return Ok(file);\r\n            }\r\n            return BadRequest();\r\n        }\r\n\r\n`\r\nI get the file, but when goes to use the  \r\n\r\n`\r\n using (var stream = new FileStream(path, FileMode.Create))\r\n      {\r\n                    await file.CopyToAsync(stream);\r\n     }\r\n`\r\n throw not allowed CORS\r\nSorry it is kind of big\r\nAll the others action works fine with the cors defined, but i dont get why with the file throw me not allowed by CORS\r\n\r\n`\r\nNo 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'http://localhost:3000' is therefore not allowed access. The response had HTTP status code 500.\r\n`\r\n\r\nJS\r\n\r\n\r\n let file = this.logo.files[0]\r\n        let data = new FormData()\r\n        data.append('file', file)\r\n        let img = {\r\n            method: 'POST',\r\n            body: data\r\n        }\r\n        await fetch('https://localhost:44365//api/home', img);\r\n\r\n\r\nHow i told you, i get the file in the action, but when goes to\r\n`\r\n using (var stream = new FileStream(path, FileMode.Create))\r\n      {\r\n                    await file.CopyToAsync(stream);\r\n     }\r\n`\r\nThrow the exception.\r\n\r\n--------------\r\n\r\nI really don't why because all the other actions works fine with the  cors defined.\r\n","Url":"https://github.com/aspnet/Home/issues/3236","RelatedDescription":"Open issue \"CORS issue whe sending only a file from Js.\" (#3236)"},{"Id":"333195837","IsPullRequest":false,"CreatedAt":"2018-06-18T09:31:12","Actor":"periyasamyt","Number":"3235","RawContent":null,"Title":"System.TypeLoadException: 'Could not load type 'System.Runtime.Remoting.Messaging.ILogicalThreadAffinative' from assembly 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.'","State":"open","Body":"I have created a web API project in .Net core. when I included some assemblies developed in .Net Framework 4.0, I am getting following error. Please help me with this.\r\n\r\nSystem.TypeLoadException: 'Could not load type 'System.Runtime.Remoting.Messaging.ILogicalThreadAffinative' from assembly 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.'","Url":"https://github.com/aspnet/Home/issues/3235","RelatedDescription":"Open issue \"System.TypeLoadException: 'Could not load type 'System.Runtime.Remoting.Messaging.ILogicalThreadAffinative' from assembly 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.'\" (#3235)"},{"Id":"333025059","IsPullRequest":false,"CreatedAt":"2018-06-17T00:31:28","Actor":"sobenz","Number":"3234","RawContent":null,"Title":"Website gets into a state where out going HttpClient connections continuously fail.","State":"open","Body":"**TL;DR;** We had a simple service that was running without problem as a Full AspNet (v4.6.1) WebApp on Azure with a common set of business logic libaries in DotNet Standard. On migration to AspNet Core (firsty v2.0, and currently v2.1) on DotNetCore v2.0 we have been getting cases where all outgoing traffic via the HttpClient begins to fail to establish outgoing connections. Once in this state it does not seem to recover.\r\n\r\n**Details:**\r\nThe stack trace below is an example of the types of exception we receive:\r\n\r\n```\r\n2018-06-16 17:12:16.947 +00:00 [Error] web-error-logger: Unhandled web exception at: GET:/api/consent/tenants/LGM695/consumers/e3f1f472-01e6-4c35-8072-355d907b08e4\r\nMicrosoft.WindowsAzure.Storage.StorageException: An error occurred while sending the request. ---> System.Net.Http.HttpRequestException: An error occurred while sending the request. ---> System.Net.Http.WinHttpException: A connection with the server could not be established\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Threading.Tasks.RendezvousAwaitable`1.GetResult()\r\n   at System.Net.Http.WinHttpHandler.<StartRequest>d__105.MoveNext()\r\n   --- End of inner exception stack trace ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Net.Http.HttpClient.<FinishSendAsyncUnbuffered>d__59.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at Microsoft.WindowsAzure.Storage.Core.Executor.Executor.<ExecuteAsyncInternal>d__4`1.MoveNext()\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.WindowsAzure.Storage.Core.Executor.Executor.<ExecuteAsyncInternal>d__4`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at *****.Gdpr.Consent.Storage.ConsentInfoTableStorage.<GetCurrentConsentAsync>d__10.MoveNext() in D:\\a\\1\\s\\src\\*****.Gdpr.Consent\\Storage\\ConsentInfoTableStorage.cs:line 105\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at *****.Gdpr.Consent.Business.ConsentBusiness.<SearchForConsumerConsentAsync>d__14.MoveNext() in D:\\a\\1\\s\\src\\*****.Gdpr.Consent\\Business\\ConsentBusiness.cs:line 217\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at *****.Gdpr.Consent.Service.Controllers.ConsentController.<GetConsumerConsentAsync>d__4.MoveNext() in D:\\a\\1\\s\\src\\*****.Gdpr.Consent.Service\\Controllers\\ConsentController.cs:line 61\r\n```\r\n\r\n- Business & Storage layers of code are unchanged between the functional ASP.Net version and ASP.Net Core versions, and controller code is very liteweight (example below)\r\n\r\n```\r\npublic async Task<IActionResult> GetConsumerConsentAsync([FromRoute]string tenantId, [FromRoute]Guid consumerId)\r\n{\r\n    if ((await GetConfiguredTenant(tenantId)) == null)\r\n        return StatusCode(403, new ErrorInfo { StatusCode = 403, Message = StringResources.ErrorTenantNotConfigured, Details = JToken.FromObject(tenantId) });\r\n    var consentOperation = new ConsentOperation { TenantId = tenantId, ConsumerId = consumerId };\r\n    ConsentInfo consentInfo = await _consentBiz.SearchForConsumerConsentAsync(consentOperation);\r\n    if (consentInfo == null)\r\n        return NotFound();\r\n    return Ok(consentInfo);\r\n}\r\n```\r\n\r\n- Failures are not limited to Azure Storage as we have seen similar failures where the JWT middleware component fails to communicate with AzureA.\r\n- Current libraries are all on the latest no preview version of AspNet Core / Azure Storage etc. The application itself is running currently as .NetCore 2.0 rather than 2.1\r\n- Flow is async all the way through from controller -> business -> storage\r\n- Replication is difficult as site can run fine for several days with no obvious issues (i.e. cpu/memory/thread count roughly static and not gradually increasing) at a load of about 200->3000 rpm depending on time of day. Load does appear however to be somewhat related as failures do tend to be during the bussier times.\r\n\r\nI have read that in dotnet core 2.1 has a complete re-write of the underlying Http network connectivity used by HttpClient. Is anyone aware of the dotnet core 2.0 handling of http calls on windows causing these issues?","Url":"https://github.com/aspnet/Home/issues/3234","RelatedDescription":"Open issue \"Website gets into a state where out going HttpClient connections continuously fail.\" (#3234)"},{"Id":"332859375","IsPullRequest":false,"CreatedAt":"2018-06-15T17:37:29","Actor":"pakrym","Number":"3232","RawContent":null,"Title":"DependencyInjection throws circular dependency exception if service is used as IEnumerable<IService> and IService in one resolution tree","State":"open","Body":"Test: https://github.com/aspnet/DependencyInjection/commit/dcb3d86be026574077c8e508a65fb4e4fe96ca4d","Url":"https://github.com/aspnet/Home/issues/3232","RelatedDescription":"Open issue \"DependencyInjection throws circular dependency exception if service is used as IEnumerable<IService> and IService in one resolution tree\" (#3232)"},{"Id":"332836800","IsPullRequest":false,"CreatedAt":"2018-06-15T16:17:38","Actor":"jaygriggs","Number":"3231","RawContent":null,"Title":"Not always building","State":"open","Body":"I'm getting issues when building \r\nIf I retry it will work fine. Its not 100% of the time just every now and then.\r\nThis has only occurred since updating to NetCore 2.1.  \r\nThe error message is \r\nCould not copy views.dll because it is being used by another process\r\nThe file is locked by: \".NET Core Host (16108)\"\r\nI only have one instance of VS 2017 open. Its updated to the latest.\r\nThanks In Advance ","Url":"https://github.com/aspnet/Home/issues/3231","RelatedDescription":"Open issue \"Not always building\" (#3231)"},{"Id":"332678120","IsPullRequest":false,"CreatedAt":"2018-06-15T14:57:03","Actor":"Etchelon","Number":"3228","RawContent":null,"Title":"Session does not seem to be persisted across Http Requests","State":"closed","Body":"Hello.\r\nI've enabled Session in my aspnet core 2.1 app. To do this I followed the documentation, and have added\r\n```\r\nservices.AddDistributedMemoryCache();\r\nservices.AddSession(options =>\r\n{\r\n\toptions.IdleTimeout = TimeSpan.FromHours(1);\r\n\toptions.Cookie.HttpOnly = true;\r\n\toptions.Cookie.Name = \".Nuvyta.Session\";\r\n});\r\n```\r\nand\r\n```\r\napp.UseSession();\r\n```\r\nProblem: at every REQUEST, <controller>.HttpContext.Session.Id is different and the session storage is reset.\r\nWhat is wrong? The documentation isn't that complex and doesn't say much more...\r\n\r\np.s.: my colleague just found out that the Session is persisted from the moment that something is actually set into it. Otherwise if it's empty it's reset every time... ok you should at least say this in the docs...","Url":"https://github.com/aspnet/Home/issues/3228","RelatedDescription":"Closed issue \"Session does not seem to be persisted across Http Requests\" (#3228)"},{"Id":"332764400","IsPullRequest":false,"CreatedAt":"2018-06-15T14:50:33","Actor":"cbrianball","Number":"3230","RawContent":null,"Title":"Invalidate existing authorization cookies","State":"closed","Body":"I have a web application (ASP.NET Core MVC 1.1.6) hosted as an App Service in Azure. I have configured cookie authentication as follows:\r\n\r\nIn ConfigureServices(...): `services.AddAuthentication(\r\n                SharedOptions => SharedOptions.SignInScheme = CookieAuthenticationDefaults.AuthenticationScheme);`\r\n\r\nIn Configure(...): `application.UseCookieAuthentication();`\r\n\r\nThis causes a session cookie to be issued to the browser once the user has authenticated (I'm using AAD for my authentication). It has recently come to my attention that some browsers will persist session cookies, even after the browser is closed. I will need to deploy code to require users to re-authenticate from time-to-time, but for right now, I'm hoping there's a way I can invalidate all auth cookies that have been previously issued without deploying new code (I'm not looking to delete them, I just want them to no longer be valid). Years ago with ASP.NET, I would have recycled the app pool, or changed the machine key in the web.config file to accomplish this. Is there anything similar I can do in ASP.NET Core?","Url":"https://github.com/aspnet/Home/issues/3230","RelatedDescription":"Closed issue \"Invalidate existing authorization cookies\" (#3230)"},{"Id":"332745481","IsPullRequest":false,"CreatedAt":"2018-06-15T11:52:09","Actor":"jansokoly","Number":"3229","RawContent":null,"Title":"Build error after upgrading to ASP.NET Core 2.1","State":"open","Body":"I have an existing ASP.NET Core project targeting .NET Core 2.0 and NuGet packages Microsoft.AspNetCore.All 2.0.8 and Microsoft.VisualStudio.Web.CodeGeneration.Design 2.0.8.\r\n\r\nNow, when trying to upgrade to .NET Core 2.1, I do the following:\r\n\r\n1. Upgrade target framework to .NET Core 2.1.\r\nRebuild OK.\r\n1. Update NuGet package Microsoft.VisualStudio.Web.CodeGeneration.Design to 2.1.0.\r\nRebuild OK.\r\n1. Update NuGet package Microsoft.AspNetCore.All to 2.1.0.\r\nRebuild fails with:\r\n    > error MSB6006: \"csc.exe\" exited with code -1073741571.\r\n\r\nThere are no further details in Output window. How to track down what's wrong?","Url":"https://github.com/aspnet/Home/issues/3229","RelatedDescription":"Open issue \"Build error after upgrading to ASP.NET Core 2.1\" (#3229)"},{"Id":"332525021","IsPullRequest":false,"CreatedAt":"2018-06-14T22:20:10","Actor":"nehmebilal","Number":"3227","RawContent":null,"Title":"How to configure the max number of concurrent connections using WebListener?","State":"closed","Body":"I am using WebListener in ASP.Net Core as described [here](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/servers/weblistener?view=aspnetcore-2.1). \r\n\r\nHow can I configure the maximum number of concurrent WebSocket connections? \r\n\r\nIt seems that the server starts dropping connections when I have more than a hundred connections.","Url":"https://github.com/aspnet/Home/issues/3227","RelatedDescription":"Closed issue \"How to configure the max number of concurrent connections using WebListener?\" (#3227)"},{"Id":"332332564","IsPullRequest":false,"CreatedAt":"2018-06-14T18:29:34","Actor":"jhgann","Number":"3224","RawContent":null,"Title":"Question about ActionResult<IEnumerable<Something>>","State":"closed","Body":"I have been working on updating to .NET Core 2.1 on my api controllers.  I've changed my IActionResult to ActionResult<T>, and removed the Ok() and just return the T object now.  But it doesn't seem to work with an IEnumerable.\r\nExamples:\r\n**This works:** \r\n```\r\n[HttpGet]\r\npublic async Task<IActionResult> GetUsersInPool(string poolId)\r\n{\r\n   // do work to get users\r\n\r\n    return Ok(pool.Users);\r\n}\r\n```\r\n**This also works:**\r\n```\r\n[HttpGet]\r\npublic async Task<ActionResult<IEnumerable<User>>> GetUsersInPool(string poolId)\r\n{\r\n    // do work to get users\r\n\r\n    return Ok(pool.Users);\r\n}\r\n```\r\n**This also works**\r\n```\r\n[HttpGet]\r\npublic async Task<ActionResult<List<User>>> GetUsersInPool(string poolId)\r\n{\r\n    // do work to get users\r\n\r\n    return new List<User>(pool.Users);\r\n}\r\n```\r\n\r\n**This gives me a compile error:**\r\n```\r\n[HttpGet]\r\npublic async Task<ActionResult<IEnumerable<User>>> GetUsersInPool(string poolId)\r\n{\r\n     // do work to get users\r\n\r\n    return pool.Users;\r\n}\r\n```\r\n\r\n**Error: (on return pool.Users;)**\r\n`CS0029\tCannot implicitly convert type 'System.Collections.Generic.ICollection<License.API.Entities.User>' to 'Microsoft.AspNetCore.Mvc.ActionResult<System.Collections.Generic.IEnumerable<License.API.Entities.User>>`\r\n\r\nIs there something I don't understand about ActionResult, or IEnumerable?  Is the proper solution to covert to list first?\r\n","Url":"https://github.com/aspnet/Home/issues/3224","RelatedDescription":"Closed issue \"Question about ActionResult<IEnumerable<Something>>\" (#3224)"},{"Id":"332477512","IsPullRequest":false,"CreatedAt":"2018-06-14T16:32:29","Actor":"muratg","Number":"3226","RawContent":null,"Title":"Plan to develop a management tool similar to IIS on Linux?","State":"open","Body":"[This issue is moved from dotnet/core repo.  Original issue https://github.com/dotnet/core/issues/1672]\r\n\r\n@JaneConan \r\nWe can see that IIS on window has been able to host dotnetcore applications, but Linux can only rely on Kestrel. Do you have a development plan for Web service management tools of Linux?\r\n\r\n@leecow \r\nAdding a few ASP folks that may have insight - cc @danroth27 @glennc\r\n\r\n@Petermarcu \r\n@muratg can you move this to ASP.NET's repo for the conversation?\r\n\r\n","Url":"https://github.com/aspnet/Home/issues/3226","RelatedDescription":"Open issue \"Plan to develop a management tool similar to IIS on Linux?\" (#3226)"},{"Id":"332422604","IsPullRequest":false,"CreatedAt":"2018-06-14T14:15:57","Actor":"twilliamsgsnetx","Number":"3225","RawContent":null,"Title":"Controller with relatively large payload fails during transfer on HTTPS","State":"open","Body":"I have migrated from HTTP to HTTPS with ASP.NET Core 2.1, and I am facing an issue where a controller that once worked just fine transferring ~20mb via HttpPost seems to hang and fail without any clear reason why.\r\n\r\nPlease tell me what other information I should provide.\r\n\r\n```\r\n[Authorize(Policy = \"Administrator\")]\r\n        [Route(\"api/membership/memberinfo\")]\r\n        [LogAction]\r\n        [RequestSizeLimit(26214400)]\r\n        [HttpPost]\r\n        public IActionResult AddMemberInfo([FromBody]IEnumerable<ViewModels.Membership.MemberInfo> memberInfo)\r\n```\r\n\r\n```\r\nMicrosoft.AspNetCore.Mvc.Internal.ControllerActionInvoker:Trace: Authorization Filter: After executing OnAuthorizationAsync on filter Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.\r\nMicrosoft.AspNetCore.Mvc.Internal.ControllerActionInvoker:Trace: Resource Filter: Before executing OnResourceExecuting on filter Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.SaveTempDataFilter.\r\nMicrosoft.AspNetCore.Mvc.Internal.ControllerActionInvoker:Trace: Resource Filter: After executing OnResourceExecuting on filter Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.SaveTempDataFilter.\r\nMicrosoft.AspNetCore.Mvc.ModelBinding.ParameterBinder:Debug: Attempting to bind parameter 'memberInfo' of type 'System.Collections.Generic.IEnumerable`1[DataPlatform.ViewModels.Membership.MemberInfo]' ...\r\nMicrosoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinder:Debug: Attempting to bind model of type 'System.Collections.Generic.IEnumerable`1[DataPlatform.ViewModels.Membership.MemberInfo]' using the name '' in request data ...\r\nMicrosoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinder:Debug: Rejected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.JsonPatchInputFormatter' for content type 'application/json; charset=UTF-8'.\r\nMicrosoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinder:Debug: Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter' for content type 'application/json; charset=UTF-8'.\r\nMicrosoft.AspNetCore.Server.Kestrel:Debug: Connection id \"0HLEHVRAAJ51M\", Request id \"0HLEHVRAAJ51M:00000002\": started reading request body.\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Sockets:Debug: Connection id \"0HLEHVRAAJ51M\" paused.\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Sockets:Debug: Connection id \"0HLEHVRAAJ51M\" resumed.\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Sockets:Debug: Connection id \"0HLEHVRAAJ51K\" reset.\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Sockets:Debug: Connection id \"0HLEHVRAAJ51L\" reset.\r\nMicrosoft.AspNetCore.Server.Kestrel:Debug: Connection id \"0HLEHVRAAJ51L\" disconnecting.\r\nMicrosoft.AspNetCore.Server.Kestrel:Debug: Connection id \"0HLEHVRAAJ51K\" disconnecting.\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Sockets:Debug: Connection id \"0HLEHVRAAJ51K\" sending FIN.\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Sockets:Debug: Connection id \"0HLEHVRAAJ51L\" sending FIN.\r\nMicrosoft.AspNetCore.Server.Kestrel:Debug: Connection id \"0HLEHVRAAJ51L\" stopped.\r\nMicrosoft.AspNetCore.Server.Kestrel:Debug: Connection id \"0HLEHVRAAJ51K\" stopped.\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Sockets:Debug: Connection id \"0HLEHVRAAJ51M\" reset.\r\nMicrosoft.AspNetCore.Server.Kestrel:Debug: Connection id \"0HLEHVRAAJ51M\" disconnecting.\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Sockets:Debug: Connection id \"0HLEHVRAAJ51M\" sending FIN.\r\nMicrosoft.AspNetCore.Server.Kestrel:Debug: Connection id \"0HLEHVRAAJ51M\", Request id \"0HLEHVRAAJ51M:00000002\": done reading request body.\r\nMicrosoft.AspNetCore.Mvc.Internal.ControllerActionInvoker:Trace: Resource Filter: Before executing OnResourceExecuted on filter Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.SaveTempDataFilter.\r\nMicrosoft.AspNetCore.Mvc.Internal.ControllerActionInvoker:Trace: Resource Filter: After executing OnResourceExecuted on filter Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.SaveTempDataFilter.\r\nMicrosoft.AspNetCore.Mvc.Internal.ControllerActionInvoker:Information: Executed action DataPlatform.Controllers.Membership.MembershipController.AddMemberInfo (DataPlatform) in 129386.9625ms\r\nMicrosoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware:Debug: Microsoft.AspNetCore.Connections.ConnectionResetException occurred, checking if Entity Framework recorded this exception as resulting from a failed database operation.\r\nMicrosoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware:Debug: Entity Framework did not record any exceptions due to failed database operations. This means the current exception is not a failed Entity Framework database operation, or the current exception occurred from a DbContext that was not obtained from request services.\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware:Error: An unhandled exception has occurred while executing the request.\r\n\r\nMicrosoft.AspNetCore.Connections.ConnectionResetException: An existing connection was forcibly closed by the remote host ---> System.Net.Sockets.SocketException: An existing connection was forcibly closed by the remote host\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal.SocketAwaitable.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal.SocketConnection.ProcessReceives()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal.SocketConnection.DoReceive()\r\n   --- End of inner exception stack trace ---\r\n   at System.IO.Pipelines.PipeCompletion.ThrowLatchedException()\r\n   at System.IO.Pipelines.Pipe.GetReadResult(ReadResult& result)\r\n   at System.IO.Pipelines.Pipe.GetReadAsyncResult()\r\n   at System.IO.Pipelines.Pipe.DefaultPipeReader.GetResult(Int16 token)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Http1MessageBody.PumpAsync()\r\n   at System.IO.Pipelines.PipeCompletion.ThrowLatchedException()\r\n   at System.IO.Pipelines.Pipe.GetReadResult(ReadResult& result)\r\n   at System.IO.Pipelines.Pipe.GetReadAsyncResult()\r\n   at System.IO.Pipelines.Pipe.DefaultPipeReader.GetResult(Int16 token)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal.SocketConnection.ProcessSends()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal.SocketConnection.DoSend()\r\n   at System.IO.Pipelines.PipeCompletion.ThrowLatchedException()\r\n   at System.IO.Pipelines.Pipe.GetReadResult(ReadResult& result)\r\n   at System.IO.Pipelines.Pipe.GetReadAsyncResult()\r\n   at System.IO.Pipelines.Pipe.DefaultPipeReader.GetResult(Int16 token)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody.ReadAsync(Memory`1 buffer, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpRequestStream.ReadAsyncInternal(Memory`1 buffer, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.WebUtilities.FileBufferingReadStream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.WebUtilities.StreamHelperExtensions.DrainAsync(Stream stream, ArrayPool`1 bytePool, Nullable`1 limit, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReadRequestBodyAsync(InputFormatterContext context, Encoding encoding)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinder.BindModelAsync(ModelBindingContext bindingContext)\r\n   at Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder.BindModelAsync(ActionContext actionContext, IModelBinder modelBinder, IValueProvider valueProvider, ParameterDescriptor parameter, ModelMetadata metadata, Object value)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerBinderDelegateProvider.<>c__DisplayClass0_0.<<CreateBinderDelegate>g__Bind|0>d.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost:Information: Request finished in 129549.0613ms 500 text/html; charset=utf-8\r\nMicrosoft.AspNetCore.Server.Kestrel:Debug: Connection id \"0HLEHVRAAJ51M\" stopped.\r\n```","Url":"https://github.com/aspnet/Home/issues/3225","RelatedDescription":"Open issue \"Controller with relatively large payload fails during transfer on HTTPS\" (#3225)"},{"Id":"332300208","IsPullRequest":false,"CreatedAt":"2018-06-14T09:09:31","Actor":"alexk8","Number":"3223","RawContent":null,"Title":"\"dotnet new mvc\" now ignores \"--auth Individual\" option, so does visual studio too","State":"closed","Body":"After some latest updates, it is impossible to create new project with individual authentication.\r\nIn the project gererated, there is nothing related to user accounts (no such things as: AccountController,ManageController, logon/sing-in functionality).\r\n\r\n ","Url":"https://github.com/aspnet/Home/issues/3223","RelatedDescription":"Closed issue \"\"dotnet new mvc\" now ignores \"--auth Individual\" option, so does visual studio too\" (#3223)"},{"Id":"332246666","IsPullRequest":false,"CreatedAt":"2018-06-14T04:19:51","Actor":"livarcocc","Number":"3222","RawContent":null,"Title":"Application will not start even with HOME variable set","State":"open","Body":"_From @a1g3 on June 14, 2018 1:30_\n\n## Steps to reproduce\r\nI am aware that this issue has been seen before, but I have my home directory set to the correct location. Whenever I try to run my application(via dotnet _[Path to Application]_), it will not start and I receive the error below. I ran `echo $HOME` and it gives me the correct location `/home/ubuntu`.\r\n\r\n## Expected  behavior\r\nThe application should run.\r\n\r\n## Actual behavior\r\n```\r\nApplication startup exception: System.ArgumentNullException: Value cannot be null.\r\nParameter name: path1\r\n   at System.IO.Path.Combine(String path1, String path2)\r\n   at Vulnerabilities.io.Startup.Configure(IApplicationBuilder app, IHostingEnvironment env) in /home/ubuntu/test/Vulnerabilities.io/Vulnerabilities.io/Startup.cs:line 55\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.HostFilteringStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.Hosting.Internal.AutoRequestServicesStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder builder)\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\ncrit: Microsoft.AspNetCore.Hosting.Internal.WebHost[6]\r\n      Application startup exception\r\nSystem.ArgumentNullException: Value cannot be null.\r\nParameter name: path1\r\n   at System.IO.Path.Combine(String path1, String path2)\r\n   at Vulnerabilities.io.Startup.Configure(IApplicationBuilder app, IHostingEnvironment env) in /home/ubuntu/test/Vulnerabilities.io/Vulnerabilities.io/Startup.cs:line 55\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.HostFilteringStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.Hosting.Internal.AutoRequestServicesStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder builder)\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\n\r\nUnhandled Exception: System.ArgumentNullException: Value cannot be null.\r\nParameter name: path1\r\n   at System.IO.Path.Combine(String path1, String path2)\r\n   at Vulnerabilities.io.Startup.Configure(IApplicationBuilder app, IHostingEnvironment env) in /home/ubuntu/test/Vulnerabilities.io/Vulnerabilities.io/Startup.cs:line 55\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.HostFilteringStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.Hosting.Internal.AutoRequestServicesStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder builder)\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.StartAsync(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.RunAsync(IWebHost host, CancellationToken token, String shutdownMessage)\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.RunAsync(IWebHost host, CancellationToken token)\r\n   at Microsoft.AspNetCore.Hosting.WebHostExtensions.Run(IWebHost host)\r\n   at Vulnerabilities.io.Program.Main(String[] args) in /home/ubuntu/test/Vulnerabilities.io/Vulnerabilities.io/Program.cs:line 11\r\nAborted (core dumped)\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.1.300/\r\n\r\nHost (useful for support):\r\n  Version: 2.1.0\r\n  Commit:  caa7b7e2ba\r\n\r\n.NET Core SDKs installed:\r\n  2.1.300 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\n\n_Copied from original issue: dotnet/cli#9487_","Url":"https://github.com/aspnet/Home/issues/3222","RelatedDescription":"Open issue \"Application will not start even with HOME variable set\" (#3222)"},{"Id":"332095713","IsPullRequest":false,"CreatedAt":"2018-06-13T17:41:27","Actor":"Tgueth","Number":"3221","RawContent":null,"Title":"After upgrading to ASP.NET Core 2.1, get error that project will use 2.1.0-rc1.  How to fix?","State":"open","Body":"Here is the error I receive when I build the application after upgrading to 2.1,\r\n\r\nThe project was restored using Microsoft.NETCore.App version 2.1.0, but with current settings, version  would be used instead.  To resolve this issue, make sure the same settings are used for restore and for subsequent operations such as build or publish.  Typically this issue can occur if the RuntimeIdentifier property is set during build or publish but not during restore.\r\n\r\nThe error refers to line 1 in csproj, but line 1 does not refer to rc1.  How do I fix this?\r\n\r\n","Url":"https://github.com/aspnet/Home/issues/3221","RelatedDescription":"Open issue \"After upgrading to ASP.NET Core 2.1, get error that project will use 2.1.0-rc1.  How to fix?\" (#3221)"},{"Id":"331770010","IsPullRequest":false,"CreatedAt":"2018-06-12T22:13:06","Actor":"Lavinski","Number":"3220","RawContent":null,"Title":"[aspnet/CORS] No CORS headers sent if Exception is thrown","State":"closed","Body":"Normally headers are added however if a controller throws an exception then CORS headers not be present.\r\n\r\nAll matching responses should have CORS headers added. This problem affects the use of middleware (including the UseExceptionHandler middleware).","Url":"https://github.com/aspnet/Home/issues/3220","RelatedDescription":"Closed issue \"[aspnet/CORS] No CORS headers sent if Exception is thrown\" (#3220)"},{"Id":"331757657","IsPullRequest":false,"CreatedAt":"2018-06-12T21:19:32","Actor":"MatthewLymer","Number":"3219","RawContent":null,"Title":"System.NullReferenceException on Microsoft.AspNetCore.Http.Internal.DefaultHttpRequest.get_Query","State":"open","Body":"Operating System: Ubuntu 16.04\r\n\r\ndotnet --info\r\n\r\n    Host (useful for support):\r\n      Version: 2.1.0\r\n      Commit:  caa7b7e2ba\r\n\r\n    .NET Core SDKs installed:\r\n      No SDKs were found.\r\n\r\n    .NET Core runtimes installed:\r\n      Microsoft.NETCore.App 2.1.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\n    To install additional .NET Core runtimes or SDKs:\r\n      https://aka.ms/dotnet-download\r\n\r\nDependencies:\r\n\r\n    <PackageReference Include=\"AutoMapper\" Version=\"6.1.1\" />\r\n    <PackageReference Include=\"JetBrains.Annotations\" Version=\"11.1.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Authentication\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Diagnostics\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Hosting\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Caching.Redis\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration.CommandLine\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration.Json\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Logging.Console\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Options.ConfigurationExtensions\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.Net.Http.Server\" Version=\"1.1.2\" />\r\n    <PackageReference Include=\"Serilog.Extensions.Logging.File\" Version=\"1.1.0\" />\r\n    <PackageReference Include=\"FluentValidation.AspNetCore\" Version=\"7.1.1\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Logging.Filter\" Version=\"1.1.2\" />\r\n    <PackageReference Include=\"System.Text.Encoding.CodePages\" Version=\"4.5.0\" />\r\n\r\nException:\r\n\r\n    System.NullReferenceException\r\n\r\nStack Trace:\r\n\r\n\t   at Microsoft.AspNetCore.Http.Internal.DefaultHttpRequest.get_Query()\r\n\t   at Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProviderFactory.CreateValueProviderAsync(ValueProviderFactoryContext context)\r\n\t   at Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider.CreateAsync(ActionContext actionContext, IList``1 factories)\r\n\t   at Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider.CreateAsync(ControllerContext controllerContext)\r\n\t   at Microsoft.AspNetCore.Mvc.Internal.ControllerBinderDelegateProvider.<>c__DisplayClass0_0.<<CreateBinderDelegate>g__Bind0>d.MoveNext()\r\n\t--- End of stack trace from previous location where exception was thrown ---\r\n\t   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n\t   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n\t   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n\t   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n\t   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n\t   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n\t   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)\r\n\t   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)\r\n\t   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)\r\n\t   at Microsoft.AspNetCore.Hosting.Internal.RequestServicesContainerMiddleware.Invoke(HttpContext httpContext)\r\n\t   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame`1.ProcessRequestsAsync()","Url":"https://github.com/aspnet/Home/issues/3219","RelatedDescription":"Open issue \"System.NullReferenceException on Microsoft.AspNetCore.Http.Internal.DefaultHttpRequest.get_Query\" (#3219)"}],"ResultType":"GitHubIssue"},"SignalR-Issues":{"Issues":[{"Id":"334243425","IsPullRequest":false,"CreatedAt":"2018-06-20T23:58:49","Actor":"screaney","Number":"2517","RawContent":null,"Title":"Method not found: 'System.Security.Cryptography.X509Certificates.X509CertificateCollection System.Net.Http.HttpClientHandler.get_ClientCertificates()'.","State":"closed","Body":"* Versions of Server-Side NuGet Packages: v1.0.1\r\n* Are you using the C# client or the JavaScript client: C#\r\n* The Server you are using (Kestrel/HttpSysServer/IIS/IIS Express/Azure Web App/etc.):  IIS\r\n* The Operating System on the Server (Windows/Linux/macOS): Server 2008 R2\r\n* The Operating System on the Client (Windows/Linux/macOS): Windows\r\n* The Browser on the client, if using the JavaScript client (IE/Chrome/Edge/Firefox/etc.): Any\r\n\r\nRunning MVC Asp.Net web application connecting to ASPNET Core SignalR service.\r\nWhen calling HubConnection.StartAsync(), critical exception occurs on the server only, doesn't happen when I run locally on IIS Express or using similar code in Linqpad.\r\n\r\n```\r\nConnection = new HubConnectionBuilder().WithUrl(\"[serverurl]\").Build();\r\nawait Connection.StartAsync();\r\n```\r\n\r\n\r\n```\r\n\r\nException: System.MissingMethodException\r\n\r\nMessage: Method not found: 'System.Security.Cryptography.X509Certificates.X509CertificateCollection System.Net.Http.HttpClientHandler.get_ClientCertificates()'.\r\n\r\n```\r\n\r\nRelevant Stack Trace (some removed for clarity):\r\n```\r\n\r\nStackTrace:    at Microsoft.AspNetCore.Http.Connections.Client.HttpConnection.CreateHttpClient()\r\n   at Microsoft.AspNetCore.Http.Connections.Client.HttpConnection..ctor(HttpConnectionOptions httpConnectionOptions, ILoggerFactory loggerFactory)\r\n   at Microsoft.AspNetCore.SignalR.Client.HttpConnectionFactory.<ConnectAsync>d__3.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.<StartAsyncCore>d__31.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.<StartAsync>d__24.MoveNext()\r\n```\r\n","Url":"https://github.com/aspnet/SignalR/issues/2517","RelatedDescription":"Closed issue \"Method not found: 'System.Security.Cryptography.X509Certificates.X509CertificateCollection System.Net.Http.HttpClientHandler.get_ClientCertificates()'.\" (#2517)"},{"Id":"334286815","IsPullRequest":true,"CreatedAt":"2018-06-20T23:43:22","Actor":"DylanDmitri","Number":"2520","RawContent":null,"Title":"Dygray/handshake versioning","State":"open","Body":"After negotiating handshake, server replies with a `minorVersion` field. This is the minor version of the agreed upon protocol. This is a declaration by the server, not a negotiation. The minor version field is stored on the client, and will be used to gate features that are added later (for example, does this server support streaming?).\r\n\r\nIn general, if no minor version number is given (old server) it defaults to 0, because 0 is a low number.\r\n\r\nNo adding fields to `IHubProtocol`, so made a new `IHubProtocolWithMinorVersion`. Feels bad, but oh well.\r\n\r\nMessage caching:\r\n - `HandshakeProtocol` used to cache a single success message (empty error) in the `public static ReadOnlyMemory<byte> SuccessHandshakeData`. Eliminating this is technically a breaking change, so instead it's marked as obsolete and hardcoded to same series of bytes the default message would've serialized to previously.\r\n\r\n- With the addition of a `minorVersion` field, there's multiple possible return messages. Fortunately there's not many (no more than the number of protocols your server supports). Added a lookup dictionary for this caching. \r\n\r\n- Checked `HubConnectionContextBenchmark`; the additional dictionary overhead makes the handshake response ~2% slower (from `2.05 us` to `2.09 us`). For reference, adding caching makes the response ~20 times faster.","Url":"https://github.com/aspnet/SignalR/pull/2520","RelatedDescription":"Open PR \"Dygray/handshake versioning\" (#2520)"},{"Id":"334279638","IsPullRequest":false,"CreatedAt":"2018-06-20T23:04:48","Actor":"seriouz","Number":"2519","RawContent":null,"Title":"How is it possible to send a blob?","State":"open","Body":"Hello, is it currently possible to send a blob over the websocket connection? (https://developer.mozilla.org/en-US/docs/Web/API/WebSocket)\r\nThe blob is filled with chunks from a webcam stream encoded in webm/v9.","Url":"https://github.com/aspnet/SignalR/issues/2519","RelatedDescription":"Open issue \"How is it possible to send a blob?\" (#2519)"},{"Id":"334256617","IsPullRequest":false,"CreatedAt":"2018-06-20T22:13:51","Actor":"titonton","Number":"2518","RawContent":null,"Title":"System.TypeLoadException: Could not resolve the signature of a virtual method on iOS","State":"closed","Body":"I am still running into this issue on iOS. Oddly enough it works perfectly on Android.\r\n\r\nXamarin Forms Version: 3.0.0.561731\r\n\r\nSignalRCore version: 1.0.1","Url":"https://github.com/aspnet/SignalR/issues/2518","RelatedDescription":"Closed issue \"System.TypeLoadException: Could not resolve the signature of a virtual method on iOS\" (#2518)"},{"Id":"334203656","IsPullRequest":false,"CreatedAt":"2018-06-20T18:44:14","Actor":"sourceship13","Number":"2516","RawContent":null,"Title":"Signalr works onPageLoad but does not send data to react component after Table Update","State":"open","Body":"Hello All, \r\n\r\nI have a Asp.Net Core 2.0 Project. I'm using IIS Express, Chrome, and Windows server 2016, and VS Studio 2017 to debug. \r\nWhen I load my project I can see my Hub being called and hitting my breakpoint before it returns to the Clients. I have setup SqlDependecyEx; When I update a row in my table I see my Hub being called and returning an array with the database objects in it, but I do not see my call back on the react component being called again. I have place console.log(pingRecords) in my callback on my component and see it get called the first time the page loads but not after I trigger a database update. I do see it hit my Hub on signalr but it does not reach my client's callback. \r\nCan you all help point me in the right direction. I am still new to Signalr and React so any input would help me out. Thank You all in advance and please let me know if I can provide any more info. Thanks!\r\n\r\n**Here is my package.json :**\r\n```\r\n{\r\n  \"version\": \"1.0.0\",\r\n  \"name\": \"dotnetify_react_template\",\r\n  \"private\": true,\r\n  \"scripts\": {\r\n    \"webpackDev\": \"webpack-dev-server --hot --colors --progress --inline --config webpack.config.js\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"aspnet-webpack\": \"2.0.1\",\r\n    \"aspnet-webpack-react\": \"3.0.0\",\r\n    \"awesome-typescript-loader\": \"3.2.1\",\r\n    \"babel-core\": \"6.26.0\",\r\n    \"babel-loader\": \"7.1.2\",\r\n    \"babel-preset-es2015\": \"6.24.1\",\r\n    \"babel-preset-react\": \"6.24.1\",\r\n    \"babel-preset-stage-0\": \"6.24.1\",\r\n    \"chart.js\": \"^2.7.1\",\r\n    \"css-loader\": \"0.28.7\",\r\n    \"dotnetify\": \"3.0.0-pre\",\r\n    \"extract-text-webpack-plugin\": \"2.1.2\",\r\n    \"file-loader\": \"0.11.2\",\r\n    \"flexboxgrid\": \"6.3.1\",\r\n    \"material-ui\": \"^0.19.4\",\r\n    \"prop-types\": \"15.6.0\",\r\n    \"react\": \"^16.4.0\",\r\n    \"react-chartjs-2\": \"^2.6.4\",\r\n    \"react-dom\": \"^16.4.0\",\r\n    \"react-hot-loader\": \"3.1.1\",\r\n    \"style-loader\": \"0.19.0\",\r\n    \"url-loader\": \"0.6.2\",\r\n    \"webpack\": \"2.5.1\",\r\n    \"webpack-hot-middleware\": \"2.18.2\"\r\n  },\r\n  \"dependencies\": {\r\n    \"aspnet-webpack\": \"2.0.1\",\r\n    \"aspnet-webpack-react\": \"3.0.0\",\r\n    \"awesome-typescript-loader\": \"3.2.1\",\r\n    \"babel-core\": \"6.26.0\",\r\n    \"babel-loader\": \"7.1.2\",\r\n    \"babel-preset-es2015\": \"6.24.1\",\r\n    \"babel-preset-react\": \"6.24.1\",\r\n    \"babel-preset-stage-0\": \"6.24.1\",\r\n    \"chart.js\": \"^2.7.1\",\r\n    \"css-loader\": \"0.28.7\",\r\n    \"dotnetify\": \"3.0.0-pre\",\r\n    \"extract-text-webpack-plugin\": \"2.1.2\",\r\n    \"file-loader\": \"0.11.2\",\r\n    \"flexboxgrid\": \"6.3.1\",\r\n    \"material-ui\": \"^0.19.4\",\r\n    \"prop-types\": \"15.6.0\",\r\n    \"react\": \"^16.4.0\",\r\n    \"react-chartjs-2\": \"^2.6.4\",\r\n    \"react-dom\": \"^16.4.0\",\r\n    \"react-hot-loader\": \"3.1.1\",\r\n    \"style-loader\": \"0.19.0\",\r\n    \"url-loader\": \"0.6.2\",\r\n    \"webpack\": \"2.5.1\",\r\n    \"webpack-hot-middleware\": \"2.18.2\"\r\n  }\r\n}\r\n```\r\n**Here is my react component:** \r\n```\r\nimport React from 'react';\r\nimport dotnetify from 'dotnetify';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport globalStyles from '../styles/styles';\r\nimport ThemeDefault from '../styles/theme-default';\r\nimport auth from '../auth';\r\nimport BasePage from '../components/BasePage';\r\n//import { Row, Card} from ''\r\nimport { pink500, grey200, grey500 } from 'material-ui/styles/colors';\r\nimport IconRemove from 'material-ui/svg-icons/content/clear';\r\nimport { log } from 'util';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { ListItem } from 'material-ui';\r\n\r\nconst signalR = require(\"@aspnet/signalr\");\r\n\r\nvar tileJson;\r\n\r\nconst styles = {\r\n    card: {\r\n        minWidth: 160,\r\n        width: 180,\r\n        margin: 20\r\n    },\r\n    cardTitle: {\r\n        fontSize: 18,\r\n        margin: 10,\r\n    },\r\n    cardLatency: {\r\n    }\r\n};\r\nvar listItems;\r\n\r\nclass DeviceMonitor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items: [],\r\n            isLoading: true,\r\n            signalrMessage: '',\r\n            signalrHubConnection: null\r\n        };\r\n\r\n        \r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const signalrHubConnection = new signalR.HubConnectionBuilder().withUrl(\"/Hubs/DeviceHub\").build();\r\n\r\n        this.setState({ signalrHubConnection }, () => {\r\n            this.state.signalrHubConnection.start()\r\n                .then(() => signalrHubConnection.invoke(\"GetDeviceJson\"))\r\n                .catch((err) => console.log('Error:' + err));\r\n\r\n            this.state.signalrHubConnection.on('DevicesFromHub', (pingRecords) => {\r\n                console.log(pingRecords);\r\n                const signalrMessage = pingRecords;\r\n                this.setState({ signalrMessage });\r\n                ;\r\n                listItems = this.state.signalrMessage.map((d) =>\r\n                    <Card style={styles.card} key={d.deviceName}>\r\n                        <CardContent style={{ textAlign: 'center' }}>\r\n                            <Typography variant=\"headline\" style={styles.cardTitle} >\r\n                                {this.state.DeviceList}\r\n                            </Typography>\r\n                            <Typography style={{ color: d.latencyColorCode, fontSize: 20 }} >\r\n                                {d.recentLatency} ms\r\n                        </Typography>\r\n                            <Typography style={{ color: d.minsColorCode, fontSize: 18 }} >\r\n                                {d.responseTimeDiff} mins ago\r\n                        </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                );\r\n                this.setState({ isLoading: false });\r\n            });\r\n        });\r\n\r\n        //this.setState({ signalrHubConnection }, () => {\r\n        //    this.state.signalrHubConnection.start().then(() => connection.invoke(\"GetDeviceJson\").catch(err => console.log('SignalR Error:' + err)));\r\n\r\n        //    this.state.signalrHubConnection.on(\"DevicesFromHub\", (pingRecords) => {\r\n        //        tileJson = pingRecords;\r\n        //        const signalrmessage = pingRecords;\r\n        //        this.setState({ signalrMessage });\r\n        //        console.log('updated');\r\n        //        listItems = this.state.signarMessage.map((d) =>\r\n        //            <Card style={styles.card} key={d.deviceName}>\r\n        //                <CardContent style={{ textAlign: 'center' }}>\r\n        //                    <Typography variant=\"headline\" style={styles.cardTitle} >\r\n        //                        {d.deviceName}\r\n        //                    </Typography>\r\n        //                    <Typography style={{ color: d.latencyColorCode, fontSize: 20 }} >\r\n        //                        {d.recentLatency} ms\r\n        //                </Typography>\r\n        //                    <Typography style={{ color: d.minsColorCode, fontSize: 18 }} >\r\n        //                        {d.responseTimeDiff} mins ago\r\n        //                </Typography>\r\n        //                </CardContent>\r\n        //            </Card>\r\n        //        );\r\n        //        this.setState({ isLoading: false });\r\n\r\n        //    });\r\n\r\n        //});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoading == false) {\r\n            return (\r\n                <MuiThemeProvider muiTheme={ThemeDefault}>\r\n                    <BasePage title=\"Device Monitor\" navigation=\"Application / Device List\">\r\n\r\n                        <Grid container spacing={8}>\r\n                            {listItems}\r\n\r\n                        </Grid>\r\n                    </BasePage>\r\n                </MuiThemeProvider>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <MuiThemeProvider muiTheme={ThemeDefault}>\r\n                    <BasePage title=\"Device Monitor\" navigation=\"Application / Device List\">\r\n                        <div>\r\n                            <h1> loading </h1>\r\n                        </div>\r\n                    </BasePage>\r\n                </MuiThemeProvider>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default DeviceMonitor;\r\n```","Url":"https://github.com/aspnet/SignalR/issues/2516","RelatedDescription":"Open issue \"Signalr works onPageLoad but does not send data to react component after Table Update\" (#2516)"},{"Id":"333869482","IsPullRequest":true,"CreatedAt":"2018-06-19T23:57:50","Actor":"BrennanConroy","Number":"2514","RawContent":null,"Title":"Upgrade Deps","State":"closed","Body":"@ryanbrandenburg FYI","Url":"https://github.com/aspnet/SignalR/pull/2514","RelatedDescription":"Closed or merged PR \"Upgrade Deps\" (#2514)"},{"Id":"333875603","IsPullRequest":false,"CreatedAt":"2018-06-19T23:37:51","Actor":"zulander1","Number":"2515","RawContent":null,"Title":"Error when using Azure Traffic Manager Unexpected response code: 302","State":"open","Body":"Hello,\r\nI am having some error using signalr and Traffic Manager on Azure.\r\nI have two app service in 2 two different region in Azure, both have the CORS set to *, and the routing method to: weighted.\r\nWhen the application is redirected to the second server I get the error. We cannot upgrade to core 2.1, both app service have the same version, ASP core 2.0. \r\nOur current solution is to set the Traffic Manager to priority, which sends the request to the same server…\r\nAny idea how I can resolve the issue?\r\n\r\n--------------------\r\nsignalr-client-1.0.0-alpha2-final.min.js:1 WebSocket connection to 'wss://URL/notifications?id=29173457-e7e5-4bf0-af5d-e7c8b5fae9a9' failed: Error during WebSocket handshake: Unexpected response code: 302\r\nPromise @ signalr-client-1.0.0-alpha2-final.min.js:1\r\nconnect @ signalr-client-1.0.0-alpha2-final.min.js:1\r\n(anonymous) @ signalr-client-1.0.0-alpha2-final.min.js:1\r\ng @ signalr-client-1.0.0-alpha2-final.min.js:1\r\nsignalr-client-1.0.0-alpha2-final.min.js:1 Uncaught (in promise) undefined\r\nh @ signalr-client-1.0.0-alpha2-final.min.js:1\r\nPromise.then (async)\r\ni @ signalr-client-1.0.0-alpha2-final.min.js:1\r\n(anonymous) @ signalr-client-1.0.0-alpha2-final.min.js:1\r\nd @ signalr-client-1.0.0-alpha2-final.min.js:1\r\nstart @ signalr-client-1.0.0-alpha2-final.min.js:1\r\n(anonymous) @ test.min.js:1\r\n(anonymous) @ test.min.js:1\r\n\r\n\r\nhttps://stackoverflow.com/questions/50938317/error-when-using-azure-application-gateway-unexpected-response-code-302\r\n\r\n**#EDIT: I made a mistake it's not an application gateway but Traffic Manager**","Url":"https://github.com/aspnet/SignalR/issues/2515","RelatedDescription":"Open issue \"Error when using Azure Traffic Manager Unexpected response code: 302\" (#2515)"},{"Id":"333521619","IsPullRequest":false,"CreatedAt":"2018-06-19T21:56:03","Actor":"dr130873","Number":"2511","RawContent":null,"Title":"signalr-protocol-msgpack.js points to the app directory to look for msgpack5.js","State":"closed","Body":"Hi there,\r\n\r\nFirst of all I would like to apologize if this seems like a silly question, but I think there is a issue in the signalr-protocol-msgpack.\r\n\r\nWe use gulp to bundle our js files, everything is working until I decided to use signalr-protocol-msgpack.\r\nNow when we execute gulp, I get an error stating that msgpack5.js could not be found in the application directory, other npm packages we use do not behave the same so can you please help me.\r\n\r\nThank you...\r\n\r\nversions indicated below \r\n{\r\n  \"@aspnet/signalr\": \"^1.0.0\",\r\n  \"@aspnet/signalr-protocol-msgpack\": \"^1.0.0\",\r\n  \"requirejs\": \"^2.3.5\",\r\n  \"devDependencies\": {\r\n    \"del\": \"^3.0.0\",\r\n    \"gulp\": \"^3.9.1\",\r\n    \"gulp-bundle-assets\": \"^2.29.0\",\r\n    \"gulp-clean\": \"^0.3.2\",\r\n    \"gulp-requirejs\": \"^1.0.0\",\r\n    \"gulp-strip-debug\": \"^1.1.0\",\r\n    \"gulp-uglify\": \"^3.0.0\",\r\n    \"pump\": \"^1.0.3\"\r\n  },\r\n\r\nvar gulp = require('gulp');\r\nvar rjs = require(\"requirejs\");\r\n\r\ngulp.task('signalr-bundle', function () {\r\n    var config = {\r\n        baseUrl: \"./\",\r\n        out: \"wwwroot/dist/signalr-bundle.js\",\r\n        include: [\r\n\r\n            './node_modules/@aspnet/signalr/dist/browser/signalr.min.js',\r\n            './node_modules/msgpack5/dist/msgpack5.js',\r\n            './node_modules/@aspnet/signalr-protocol-msgpack/dist/browser/signalr-protocol-msgpack.js'\r\n\r\n        ]\r\n    };\r\n    rjs.optimize(config, function (e) {\r\n        console.log(e);\r\n    });\r\n});\r\n\r\nwhen running this gulp task i get the following error\r\n\r\n{ [Error: Error: ENOENT: no such file or directory, open '{app folder}\\msgpack5.js'\r\nIn module tree:\r\n    node_modules/@aspnet/signalr-protocol-msgpack/dist/browser/signalr-protocol-msgpack.js\r\n    at Error (native)\r\n]\r\n  originalError: \r\n   { [Error: ENOENT: no such file or directory, open '{app folder}\\msgpack5.js']\r\n     errno: -4058,\r\n     code: 'ENOENT',\r\n     syscall: 'open',\r\n     path: 'C:\\\\{app folder}\\\\msgpack5.js',\r\n     fileName: 'C:/{app folder/msgpack5.js',\r\n     moduleTree: [ 'node_modules/@aspnet/signalr-protocol-msgpack/dist/browser/signalr-protocol-msgpack.js' ] } }\r\nProcess terminated with code 1.\r\n\r\n\r\n","Url":"https://github.com/aspnet/SignalR/issues/2511","RelatedDescription":"Closed issue \"signalr-protocol-msgpack.js points to the app directory to look for msgpack5.js\" (#2511)"},{"Id":"332615581","IsPullRequest":true,"CreatedAt":"2018-06-19T20:48:16","Actor":"mikaelm12","Number":"2499","RawContent":null,"Title":"Add Empty Java Project","State":"closed","Body":"This one is slightly cleaner","Url":"https://github.com/aspnet/SignalR/pull/2499","RelatedDescription":"Closed or merged PR \"Add Empty Java Project\" (#2499)"},{"Id":"333782873","IsPullRequest":false,"CreatedAt":"2018-06-19T18:42:02","Actor":"PedroHFranco","Number":"2513","RawContent":null,"Title":"After update to 1.0.0 Group not receving message.","State":"closed","Body":"Hello,\r\n\r\nI update my Core.SignalR version from 1.0.0-alpha2-final to 1.0.0, both side and now message sended to group not working, i have tested send to All and Other, and its working fine.\r\n\r\nI'm adding in group when its connected in my Server, like this:\r\n\r\n`Groups.AddToGroupAsync(Context.ConnectionId, \"log4net\");`\r\n\r\nAnd sending like this:\r\n\r\n`Clients.Group(\"log4net\").SendAsync(\"RecieveMessage\", Context.ConnectionId, message);`\r\n\r\nIt's was working fine in alpha version.\r\nI'm doing something wrong or it's has been changed?\r\n\r\nThx.","Url":"https://github.com/aspnet/SignalR/issues/2513","RelatedDescription":"Closed issue \"After update to 1.0.0 Group not receving message.\" (#2513)"},{"Id":"333773213","IsPullRequest":true,"CreatedAt":"2018-06-19T17:44:42","Actor":"anurse","Number":"2512","RawContent":null,"Title":"fix #2474 by adding some transitive dependencies as top-level","State":"open","Body":"Fixes #2474 \r\n\r\nThis is a fix being considered for 2.1.3. The 2.1.1 patch contained fixes for these `System.*` packages to make them work properly on UWP and Xamarin. However, since we get them transitively through `System.Threading.Channels` users don't see that they need to update them, and updating our package alone is insufficient. NuGet doesn't advertise transitive updates, so they have no way of knowing they need the fix.\r\n\r\nThis change adds these dependencies (which are already present transitively) as direct dependencies so that when users update our package (which NuGet should advertise as users will be directly depending on our package), they get the fix.","Url":"https://github.com/aspnet/SignalR/pull/2512","RelatedDescription":"Open PR \"fix #2474 by adding some transitive dependencies as top-level\" (#2512)"},{"Id":"333105683","IsPullRequest":false,"CreatedAt":"2018-06-19T06:42:49","Actor":"kofifus","Number":"2506","RawContent":null,"Title":"How do I get a reference to a Hub? private data","State":"closed","Body":"I have seen https://github.com/aspnet/SignalR/issues/182 but I'm having an issue with that solution\r\n\r\nin https://github.com/aspnet/SignalR/issues/182 the suggestion is to \"creating and injecting a class with shared logic\" like this:\r\n\r\n```\r\nnamespace SharedHubLogic\r\n{\r\n    class HubMethods\r\n    {\r\n        private IHubContext<THub> _hubContext;\r\n        public HubMethods(IHubContext<THub> hubContext)\r\n        {\r\n            _hubContext = hubContext;\r\n        }\r\n\r\n        public Task WriteMessageAsync(string method, param object[] args)\r\n        {\r\n            return _hubContext.Clients.All.InvokeAsync(method, args);\r\n        }\r\n    }\r\n}\r\n\r\nclass CrawlHub : Hub\r\n{\r\n    private HubMethods _hubMethods;\r\n    public CrawlHub(HubMethods hubMethods)\r\n    {\r\n        _hubMethods = hubMethods;\r\n    }\r\n\r\n    public Task CrawlFailed(string reason)\r\n    {\r\n        return _hubMethods.WriteMessageAsync(\"writeStatus\", reason);\r\n    }\r\n}\r\n\r\n```\r\nmy problem is the management of private data... If for example I am keeping a list of connectionIDs updated in OnConnectedAsync and OnDisconnectedAsync and want a GetConnectionIDsList() method in the HubMethods class .. I suddenly need the connections dictionary to be public in that class which is ugly.\r\n\r\nWhat is the best way to solve this ?\r\n\r\n\r\n ","Url":"https://github.com/aspnet/SignalR/issues/2506","RelatedDescription":"Closed issue \"How do I get a reference to a Hub? private data\" (#2506)"},{"Id":"333469591","IsPullRequest":false,"CreatedAt":"2018-06-18T23:29:44","Actor":"BrennanConroy","Number":"2510","RawContent":null,"Title":"Meeting notes: C++ Client","State":"open","Body":"* Use STL Naming: snake cased\r\n* Look into using std::future wrapping pplx::task\r\n* Make a move ctor for hub_connection\r\n* Use hubconnectionbuilder pattern\r\n* Try to match C# api, withurl takes configure func\r\n* Explore: UTF8 strings everywhere (users convert wide to utf8 before passing in?)\r\n* ~~Test out co_await usage~~ (Possible C++20 feature, shouldn't depend on it)\r\n* on_{eventName} for callbacks: only have on_closed right now\r\n* Remove get_connectiond_id and get_connection_state\r\n* Investigate msgpack libraries to see parsing patterns\r\n* Hide low-level connection class\r\n* Sketch .h files without implementation to see how \"ideal\" API could look","Url":"https://github.com/aspnet/SignalR/issues/2510","RelatedDescription":"Open issue \"Meeting notes: C++ Client\" (#2510)"},{"Id":"333413657","IsPullRequest":false,"CreatedAt":"2018-06-18T19:59:50","Actor":"anurse","Number":"2509","RawContent":null,"Title":"Get Java client integrated into build process","State":"open","Body":"* [ ] Integrate into `build.cmd` with **automatic skipping when Java is not present**\r\n  * I think we should try to **fail** the build if Java is not present when on the CI though to avoid accidentally forgetting to build it because we spun up a new agent and didn't install Java.\r\n  * Stretch goal: Acquire Java as part of the build (only on CI)\r\n* [ ] Publish packages to a MyGet Maven feed as part of the build on the CI\r\n* [ ] Make sure VSTS and Jenkins agents have the necessary JDK installed\r\n* [ ] Make sure TeamCity (if we're still using it by then ;)) has the necessary JDK installed.","Url":"https://github.com/aspnet/SignalR/issues/2509","RelatedDescription":"Open issue \"Get Java client integrated into build process\" (#2509)"},{"Id":"333310680","IsPullRequest":false,"CreatedAt":"2018-06-18T15:07:28","Actor":"anurse","Number":"2508","RawContent":null,"Title":"Get initial Java client in","State":"open","Body":"## Goals\r\n* Supports JSON over WebSockets only\r\n* HubConnection class with `.on`, `.invoke`, `.send`\r\n* Can be single-use (not restartable) at this phase\r\n* Can only support very limited set of types (for example, only `String` parameters, etc.)\r\n* Should have Unit Tests.\r\n* Very simple command line sample (can have hard-coded URL, hard-coded messages, or even been recieve-only etc.)\r\n* Should be \"production\" code (tested, edge cases covered, etc.), just very **limited functionality**.\r\n\r\n## Non-Goals\r\n* Configuration (Headers, Cookies, Transport limitation, etc.)\r\n* `HubConnectionBuilder`\r\n* `HttpConnection` as a *public* API (though it would likely be good to have that abstraction for Unit Testing anyway)\r\n","Url":"https://github.com/aspnet/SignalR/issues/2508","RelatedDescription":"Open issue \"Get initial Java client in\" (#2508)"},{"Id":"333292646","IsPullRequest":false,"CreatedAt":"2018-06-18T14:54:57","Actor":"PedroHFranco","Number":"2507","RawContent":null,"Title":"Method not Found Void Microsoft.AspNetCore.Sockets.Client.HttpConnection..ctor(System.Uri, Microsoft.AspNetCore.Sockets.TransportType, Microsoft.Extensions.Logging.ILoggerFactory, System.Net.Http.HttpMessageHandler)","State":"closed","Body":"Hello guys,\r\n\r\nI'm gotting the folow error when i'm trying to connect with HubConnectionBuilder.\r\n\r\n> Método não encontrado: 'Void Microsoft.AspNetCore.Sockets.Client.HttpConnection..ctor(System.Uri, Microsoft.AspNetCore.Sockets.TransportType, Microsoft.Extensions.Logging.ILoggerFactory, System.Net.Http.HttpMessageHandler)'.\r\n\r\nStackTrace:   \r\n\r\n> em Microsoft.AspNetCore.SignalR.Client.HubConnectionBuilderHttpExtensions.<>c__DisplayClass3_0.<WithUrl>b__0()\r\n>    em Microsoft.AspNetCore.SignalR.Client.HubConnectionBuilder.Build()\r\n>    em Sync.Framework.Core.Services.SignalR.Monitoring.MonitoringConnection.BuildAndConnectOnHub() na D:\\Projetos\\Sync\\Sync.Framework\\Sync.Framework.Core\\Services\\SignalR\\Monitoring\\MonitoringConnection.cs:linha 62\r\n\r\nThis is my code in my Client-Side:\r\n\r\n\r\n```\r\n//I have created a singleton class because of thaht my _hubConnection is create globaly\r\n_hubConnection = new HubConnectionBuilder()\r\n                    .WithUrl(url)\r\n                    .WithMessagePackProtocol()\r\n                    .WithTransport(Microsoft.AspNetCore.Sockets.TransportType.WebSockets)\r\n                    .Build();\r\n\r\n _hubConnection.StartAsync().Wait();\r\n\r\n```\r\nI'm using these versions:\r\n```\r\n  <package id=\"Microsoft.AspNetCore.SignalR.Client\" version=\"1.0.0-alpha2-final\" targetFramework=\"net461\" />\r\n  <package id=\"Microsoft.AspNetCore.SignalR.Client.Core\" version=\"1.0.0-alpha2-final\" targetFramework=\"net461\" />\r\n  <package id=\"Microsoft.AspNetCore.SignalR.Common\" version=\"1.0.0-alpha2-final\" targetFramework=\"net461\" />\r\n```\r\nIts a C# client.\r\n\r\nMy Server side have the Microsoft.AspNetCore.SignalR version 1.0.0-alpha2-final\r\n\r\n```\r\npublic override Task OnConnectedAsync()\r\n{\r\n\tvar httpContext = Context.Connection.GetHttpContext();\r\n\tvar token = httpContext.Request.Query[\"Token\"];\r\n\tswitch (token)\r\n\t{\r\n\t\tcase \"log4net\":\r\n\t\t\tGroups.AddAsync(Context.ConnectionId, \"log4net\").Wait();\r\n\t\t\tbreak;\r\n\t\tcase \"autoupdate\":\r\n\t\t\ttoken = httpContext.Request.Query[\"Conta\"];\r\n\t\t\tUpdateConnectionIdAutoUpdate(token, Context.ConnectionId);\r\n\t\t\tGroups.AddAsync(Context.ConnectionId, \"autoupdate\").Wait();\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tUpdateConnectionIdConta(token, Context.ConnectionId);\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn base.OnConnectedAsync();\r\n}\r\n```\r\nIt's an Azure Web app.\r\n\r\nI'm using Windows in both side.\r\n\r\nAny idea how can i fix that ?\r\n","Url":"https://github.com/aspnet/SignalR/issues/2507","RelatedDescription":"Closed issue \"Method not Found Void Microsoft.AspNetCore.Sockets.Client.HttpConnection..ctor(System.Uri, Microsoft.AspNetCore.Sockets.TransportType, Microsoft.Extensions.Logging.ILoggerFactory, System.Net.Http.HttpMessageHandler)\" (#2507)"},{"Id":"333014714","IsPullRequest":false,"CreatedAt":"2018-06-17T02:58:27","Actor":"los93sol","Number":"2505","RawContent":null,"Title":"Publish client to cdnjs?","State":"closed","Body":"With LibraryManager getting full integration into VS current previews it would be great if the client was published to cdnjs in addition to npm so I could eliminate npm from my workflow.","Url":"https://github.com/aspnet/SignalR/issues/2505","RelatedDescription":"Closed issue \"Publish client to cdnjs?\" (#2505)"},{"Id":"332987637","IsPullRequest":false,"CreatedAt":"2018-06-16T17:27:27","Actor":"shaggygi","Number":"2504","RawContent":null,"Title":"Milestone cleanup","State":"closed","Body":"Can milestones [2.1.0-rc1](https://github.com/aspnet/SignalR/milestone/10) and [2.1.0](https://github.com/aspnet/SignalR/milestone/1) be closed now?","Url":"https://github.com/aspnet/SignalR/issues/2504","RelatedDescription":"Closed issue \"Milestone cleanup\" (#2504)"},{"Id":"332946421","IsPullRequest":false,"CreatedAt":"2018-06-16T00:33:02","Actor":"GuanhongW","Number":"2503","RawContent":null,"Title":"How to get a .Net Core Framework SignalR Core client to connect to .Net Server (SignalR)?","State":"open","Body":"I am working on ASP.NET Core2.1. I implemented a SignalR Core Client in asp.net core. I want to build the connection between SignalR Core Client and a SignalR Hub (i.e. AspNet.SignalR). Is there a way can fix the issue?","Url":"https://github.com/aspnet/SignalR/issues/2503","RelatedDescription":"Open issue \"How to get a .Net Core Framework SignalR Core client to connect to .Net Server (SignalR)?\" (#2503)"},{"Id":"332873515","IsPullRequest":true,"CreatedAt":"2018-06-15T22:19:01","Actor":"anurse","Number":"2501","RawContent":null,"Title":"Corrige los fallos cuando las pruebas se ejecutan en máquinas que usan castellano como lenguaje.","State":"closed","Body":"... I hope Google Translate didn't make me look too stupid there ;).\r\n\r\nThis should fix the issues with the Spanish build. Just a few places where we hard-coded asserts of things that end up getting localized.\r\n\r\nFixes #1967 ","Url":"https://github.com/aspnet/SignalR/pull/2501","RelatedDescription":"Closed or merged PR \"Corrige los fallos cuando las pruebas se ejecutan en máquinas que usan castellano como lenguaje.\" (#2501)"},{"Id":"332929196","IsPullRequest":false,"CreatedAt":"2018-06-15T22:18:27","Actor":"anurse","Number":"2502","RawContent":null,"Title":"Flaky Test: CanStartConnectionFromClosedEvent","State":"open","Body":"```\r\n2018-06-15T22:05:10.4647947Z   Microsoft.AspNetCore.SignalR.Client.FunctionalTests.HubConnectionTests - 0 - System.TimeoutException from test\r\n2018-06-15T22:05:10.4662736Z   ===================\r\n2018-06-15T22:05:10.4675771Z   System.TimeoutException: Operation in CanStartConnectionFromClosedEvent timed out at /_/test/Microsoft.AspNetCore.SignalR.Client.FunctionalTests/HubConnectionTests.cs:209\r\n2018-06-15T22:05:10.4690913Z      at System.Threading.Tasks.TaskExtensions.OrTimeout[T](Task`1 task, TimeSpan timeout, String memberName, String filePath, Nullable`1 lineNumber)\r\n2018-06-15T22:05:10.4706293Z      at Microsoft.AspNetCore.SignalR.Client.FunctionalTests.HubConnectionTests.CanStartConnectionFromClosedEvent(String protocolName, HttpTransportType transportType, String path) in /_/test/Microsoft.AspNetCore.SignalR.Client.FunctionalTests/HubConnectionTests.cs:line 209\r\n2018-06-15T22:05:10.4722106Z   ===================\r\n2018-06-15T22:05:10.4736517Z   Stack Trace:\r\n2018-06-15T22:05:10.4751060Z      at Microsoft.AspNetCore.SignalR.Tests.VerifyNoErrorsScope.Dispose() in /_/test/Microsoft.AspNetCore.SignalR.Tests.Utils/VerifyNoErrorsScope.cs:line 63\r\n2018-06-15T22:05:10.4765424Z      at Microsoft.AspNetCore.SignalR.Tests.ServerLogScope.Dispose() in /_/test/Microsoft.AspNetCore.SignalR.Tests.Utils/ServerLogScope.cs:line 66\r\n2018-06-15T22:05:10.4791110Z      at Microsoft.AspNetCore.SignalR.Client.FunctionalTests.HubConnectionTests.CanStartConnectionFromClosedEvent(String protocolName, HttpTransportType transportType, String path) in /_/test/Microsoft.AspNetCore.SignalR.Client.FunctionalTests/HubConnectionTests.cs:line 222\r\n2018-06-15T22:05:10.4810590Z   --- End of stack trace from previous location where exception was thrown ---\r\n2018-06-15T22:05:10.4824539Z   Standard Output Messages:\r\n2018-06-15T22:05:10.4839751Z    | [0.001s] TestLifetime Information: Starting test CanStartConnectionFromClosedEvent-json-LongPolling-/default at 2018-06-15T22:04:58\r\n2018-06-15T22:05:10.4857745Z    | [0.000s] TestLifetime Information: Starting test CanStartConnectionFromClosedEvent_json_LongPolling_default at 2018-06-15T22:04:58\r\n2018-06-15T22:05:10.4873825Z    | [0.001s] ServerLogScope Information: Server log scope started.\r\n2018-06-15T22:05:10.4887134Z    | [0.001s] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Waiting on Connection Lock in StartAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:288).\r\n2018-06-15T22:05:10.4901489Z    | [0.001s] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Starting HubConnection.\r\n2018-06-15T22:05:10.4915887Z    | [0.001s] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Starting HttpConnection.\r\n2018-06-15T22:05:10.4931804Z    | [0.001s] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Establishing connection with server at 'http://127.0.0.1:40499/default'.\r\n2018-06-15T22:05:10.4949146Z    | [0.001s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Sending HTTP request POST 'http://127.0.0.1:40499/default/negotiate'.\r\n2018-06-15T22:05:10.4964867Z    | [0.002s] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLEJ1FLHJDPB\" started.\r\n2018-06-15T22:05:10.4978310Z    | [0.002s] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 POST http://127.0.0.1:40499/default/negotiate  0\r\n2018-06-15T22:05:10.4991873Z    | [0.002s] SERVER Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler Debug: AuthenticationScheme: Bearer was not authenticated.\r\n2018-06-15T22:05:10.5006495Z    | [0.003s] SERVER Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/default/negotiate'.\r\n2018-06-15T22:05:10.5021842Z    | [0.003s] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionManager Debug: New connection Zf6L9dyy8IF8AYRm1pTTPw created.\r\n2018-06-15T22:05:10.5036470Z    | [0.003s] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher Debug: Zf6L9dyy8IF8AYRm1pTTPw - Sending negotiation response.\r\n2018-06-15T22:05:10.5052581Z    | [0.003s] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLEJ1FLHJDPB\" completed keep alive response.\r\n2018-06-15T22:05:10.5065434Z    | [0.003s] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request finished in 1.2299ms 200 application/json\r\n2018-06-15T22:05:10.5082861Z    | [0.009s] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Established connection 'Zf6L9dyy8IF8AYRm1pTTPw' with the server.\r\n2018-06-15T22:05:10.5098029Z    | [0.010s] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Zf6L9dyy8IF8AYRm1pTTPw - Skipping transport WebSockets because it was disabled by the client.\r\n2018-06-15T22:05:10.5115576Z    | [0.010s] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Zf6L9dyy8IF8AYRm1pTTPw - Skipping transport ServerSentEvents because it was disabled by the client.\r\n2018-06-15T22:05:10.5134908Z    | [0.010s] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Zf6L9dyy8IF8AYRm1pTTPw - Starting transport 'LongPolling' with Url: http://127.0.0.1:40499/default?id=Zf6L9dyy8IF8AYRm1pTTPw.\r\n2018-06-15T22:05:10.5151352Z    | [0.010s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Information: Zf6L9dyy8IF8AYRm1pTTPw - Starting transport. Transfer mode: Text.\r\n2018-06-15T22:05:10.5167943Z    | [0.010s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Zf6L9dyy8IF8AYRm1pTTPw - Sending HTTP request GET 'http://127.0.0.1:40499/default?id=Zf6L9dyy8IF8AYRm1pTTPw'.\r\n2018-06-15T22:05:10.5183892Z    | [0.011s] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 GET http://127.0.0.1:40499/default?id=Zf6L9dyy8IF8AYRm1pTTPw  \r\n2018-06-15T22:05:10.5197110Z    | [0.011s] SERVER Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler Debug: AuthenticationScheme: Bearer was not authenticated.\r\n2018-06-15T22:05:10.5215010Z    | [0.011s] SERVER Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/default'.\r\n2018-06-15T22:05:10.5230164Z    | [0.011s] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher Debug: Zf6L9dyy8IF8AYRm1pTTPw - Establishing new connection.\r\n2018-06-15T22:05:10.5244988Z    | [0.011s] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLEJ1FLHJDPB\" completed keep alive response.\r\n2018-06-15T22:05:10.5259503Z    | [0.012s] SERVER Microsoft.AspNetCore.SignalR.HubConnectionHandler Debug: Zf6L9dyy8IF8AYRm1pTTPw - OnConnectedAsync started.\r\n2018-06-15T22:05:10.5277075Z    | [0.012s] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request finished in 0.8396ms 200 application/octet-stream\r\n2018-06-15T22:05:10.5293652Z    | [0.012s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: Zf6L9dyy8IF8AYRm1pTTPw - Starting receive loop.\r\n2018-06-15T22:05:10.5308502Z    | [0.012s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Zf6L9dyy8IF8AYRm1pTTPw - Sending HTTP request GET 'http://127.0.0.1:40499/default?id=Zf6L9dyy8IF8AYRm1pTTPw'.\r\n2018-06-15T22:05:10.5327580Z    | [0.012s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: Zf6L9dyy8IF8AYRm1pTTPw - Starting the send loop.\r\n2018-06-15T22:05:10.5343815Z    | [0.012s] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Zf6L9dyy8IF8AYRm1pTTPw - Transport 'LongPolling' started.\r\n2018-06-15T22:05:10.5357221Z    | [0.013s] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 GET http://127.0.0.1:40499/default?id=Zf6L9dyy8IF8AYRm1pTTPw  \r\n2018-06-15T22:05:10.5372502Z    | [0.013s] SERVER Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler Debug: AuthenticationScheme: Bearer was not authenticated.\r\n2018-06-15T22:05:10.5387248Z    | [0.013s] SERVER Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/default'.\r\n2018-06-15T22:05:10.5403432Z    | [0.013s] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher Debug: Zf6L9dyy8IF8AYRm1pTTPw - Resuming existing connection.\r\n2018-06-15T22:05:10.5419197Z    | [0.016s] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Information: Zf6L9dyy8IF8AYRm1pTTPw - HttpConnection Started.\r\n2018-06-15T22:05:10.5435553Z    | [0.017s] Microsoft.AspNetCore.SignalR.Client.HubConnection Information: Zf6L9dyy8IF8AYRm1pTTPw - Using HubProtocol 'json v1'.\r\n2018-06-15T22:05:10.5451190Z    | [0.017s] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Zf6L9dyy8IF8AYRm1pTTPw - Sending Hub Handshake.\r\n2018-06-15T22:05:10.5476805Z    | [0.017s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: Zf6L9dyy8IF8AYRm1pTTPw - Sending 32 bytes to the server using url: http://127.0.0.1:40499/default?id=Zf6L9dyy8IF8AYRm1pTTPw.\r\n2018-06-15T22:05:10.5494833Z    | [0.017s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Zf6L9dyy8IF8AYRm1pTTPw - Sending HTTP request POST 'http://127.0.0.1:40499/default?id=Zf6L9dyy8IF8AYRm1pTTPw'.\r\n2018-06-15T22:05:10.5509618Z    | [0.018s] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLEJ1FLHJDPC\" started.\r\n2018-06-15T22:05:10.5524584Z    | [0.018s] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 POST http://127.0.0.1:40499/default?id=Zf6L9dyy8IF8AYRm1pTTPw  32\r\n2018-06-15T22:05:10.5539821Z    | [0.019s] SERVER Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler Debug: AuthenticationScheme: Bearer was not authenticated.\r\n2018-06-15T22:05:10.5555305Z    | [0.019s] SERVER Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/default'.\r\n2018-06-15T22:05:10.5572881Z    | [0.019s] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Zf6L9dyy8IF8AYRm1pTTPw - Connection id \"0HLEJ1FLHJDPC\", Request id \"0HLEJ1FLHJDPC:00000001\": started reading request body.\r\n2018-06-15T22:05:10.5590791Z    | [0.019s] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Zf6L9dyy8IF8AYRm1pTTPw - Connection id \"0HLEJ1FLHJDPC\", Request id \"0HLEJ1FLHJDPC:00000001\": done reading request body.\r\n2018-06-15T22:05:10.5606296Z    | [0.019s] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLEJ1FLHJDPC\" completed keep alive response.\r\n2018-06-15T22:05:10.5623197Z    | [0.019s] SERVER Microsoft.AspNetCore.SignalR.Internal.DefaultHubProtocolResolver Debug: Zf6L9dyy8IF8AYRm1pTTPw - Found protocol implementation for requested protocol: json.\r\n2018-06-15T22:05:10.5666954Z    | [0.020s] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request finished in 1.3264ms 200 text/plain\r\n2018-06-15T22:05:10.5682451Z    | [0.020s] SERVER Microsoft.AspNetCore.SignalR.HubConnectionContext Information: Zf6L9dyy8IF8AYRm1pTTPw - Completed connection handshake. Using HubProtocol 'json'.\r\n2018-06-15T22:05:10.5697521Z    | [0.020s] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLEJ1FLHJDPB\" completed keep alive response.\r\n2018-06-15T22:05:10.5713352Z    | [0.020s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: Zf6L9dyy8IF8AYRm1pTTPw - Message(s) sent successfully.\r\n2018-06-15T22:05:10.5728352Z    | [0.020s] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request finished in 7.5021ms 200 application/octet-stream\r\n2018-06-15T22:05:10.5776366Z    | [0.020s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Trace: Zf6L9dyy8IF8AYRm1pTTPw - Poll response with status code 200 received from server. Content length: 3.\r\n2018-06-15T22:05:10.5807472Z    | [0.020s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: Zf6L9dyy8IF8AYRm1pTTPw - Received messages from the server.\r\n2018-06-15T22:05:10.5824902Z    | [0.020s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Zf6L9dyy8IF8AYRm1pTTPw - Sending HTTP request GET 'http://127.0.0.1:40499/default?id=Zf6L9dyy8IF8AYRm1pTTPw'.\r\n2018-06-15T22:05:10.5841331Z    | [0.020s] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Zf6L9dyy8IF8AYRm1pTTPw - Handshake with server complete.\r\n2018-06-15T22:05:10.5857995Z    | [0.020s] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Zf6L9dyy8IF8AYRm1pTTPw - Receive loop starting.\r\n2018-06-15T22:05:10.5872785Z    | [0.021s] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 GET http://127.0.0.1:40499/default?id=Zf6L9dyy8IF8AYRm1pTTPw  \r\n2018-06-15T22:05:10.5887804Z    | [0.021s] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Zf6L9dyy8IF8AYRm1pTTPw - Sending PingMessage message.\r\n2018-06-15T22:05:10.5903638Z    | [0.021s] SERVER Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler Debug: AuthenticationScheme: Bearer was not authenticated.\r\n2018-06-15T22:05:10.5919784Z    | [0.021s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: Zf6L9dyy8IF8AYRm1pTTPw - Sending 11 bytes to the server using url: http://127.0.0.1:40499/default?id=Zf6L9dyy8IF8AYRm1pTTPw.\r\n2018-06-15T22:05:10.5936422Z    | [0.021s] SERVER Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/default'.\r\n2018-06-15T22:05:10.5965597Z    | [0.021s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Zf6L9dyy8IF8AYRm1pTTPw - Sending HTTP request POST 'http://127.0.0.1:40499/default?id=Zf6L9dyy8IF8AYRm1pTTPw'.\r\n2018-06-15T22:05:10.5991476Z    | [0.021s] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher Debug: Zf6L9dyy8IF8AYRm1pTTPw - Resuming existing connection.\r\n2018-06-15T22:05:10.6006705Z    | [0.021s] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 POST http://127.0.0.1:40499/default?id=Zf6L9dyy8IF8AYRm1pTTPw  11\r\n2018-06-15T22:05:10.6022252Z    | [0.021s] SERVER Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler Debug: AuthenticationScheme: Bearer was not authenticated.\r\n2018-06-15T22:05:10.6054270Z    | [0.022s] SERVER Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/default'.\r\n2018-06-15T22:05:10.6077462Z    | [0.022s] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Zf6L9dyy8IF8AYRm1pTTPw - Connection id \"0HLEJ1FLHJDPC\", Request id \"0HLEJ1FLHJDPC:00000002\": started reading request body.\r\n2018-06-15T22:05:10.6094378Z    | [0.022s] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Zf6L9dyy8IF8AYRm1pTTPw - Connection id \"0HLEJ1FLHJDPC\", Request id \"0HLEJ1FLHJDPC:00000002\": done reading request body.\r\n2018-06-15T22:05:10.6108658Z    | [0.022s] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLEJ1FLHJDPC\" completed keep alive response.\r\n2018-06-15T22:05:10.6123428Z    | [0.022s] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request finished in 1.1664ms 200 text/plain\r\n2018-06-15T22:05:10.6137612Z    | [0.023s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: Zf6L9dyy8IF8AYRm1pTTPw - Message(s) sent successfully.\r\n2018-06-15T22:05:10.6153658Z    | [0.023s] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Zf6L9dyy8IF8AYRm1pTTPw - Sending PingMessage message completed.\r\n2018-06-15T22:05:10.6168536Z    | [0.023s] Microsoft.AspNetCore.SignalR.Client.HubConnection Information: Zf6L9dyy8IF8AYRm1pTTPw - HubConnection started.\r\n2018-06-15T22:05:10.6185028Z    | [0.023s] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Zf6L9dyy8IF8AYRm1pTTPw - Releasing Connection Lock in StartAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:331).\r\n2018-06-15T22:05:10.6202116Z    | [0.024s] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Zf6L9dyy8IF8AYRm1pTTPw - Waiting on Connection Lock in InvokeCoreAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:442).\r\n2018-06-15T22:05:10.6218572Z    | [0.024s] Microsoft.AspNetCore.SignalR.Client.Internal.InvocationRequest.NonStreaming Trace: Zf6L9dyy8IF8AYRm1pTTPw - Invocation 1 created.\r\n2018-06-15T22:05:10.6235031Z    | [0.024s] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Zf6L9dyy8IF8AYRm1pTTPw - Preparing blocking invocation '1' of 'Echo', with return type 'System.String' and 1 argument(s).\r\n2018-06-15T22:05:10.6252157Z    | [0.024s] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Zf6L9dyy8IF8AYRm1pTTPw - Registering Invocation ID '1' for tracking.\r\n2018-06-15T22:05:10.6267932Z    | [0.024s] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Zf6L9dyy8IF8AYRm1pTTPw - Issuing Invocation '1': System.String Echo(System.String).\r\n2018-06-15T22:05:10.6283859Z    | [0.025s] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Zf6L9dyy8IF8AYRm1pTTPw - Sending InvocationMessage message '1'.\r\n2018-06-15T22:05:10.6299739Z    | [0.025s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: Zf6L9dyy8IF8AYRm1pTTPw - Sending 70 bytes to the server using url: http://127.0.0.1:40499/default?id=Zf6L9dyy8IF8AYRm1pTTPw.\r\n2018-06-15T22:05:10.6316489Z    | [0.025s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Zf6L9dyy8IF8AYRm1pTTPw - Sending HTTP request POST 'http://127.0.0.1:40499/default?id=Zf6L9dyy8IF8AYRm1pTTPw'.\r\n2018-06-15T22:05:10.6333461Z    | [0.025s] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 POST http://127.0.0.1:40499/default?id=Zf6L9dyy8IF8AYRm1pTTPw  70\r\n2018-06-15T22:05:10.6346978Z    | [0.025s] SERVER Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler Debug: AuthenticationScheme: Bearer was not authenticated.\r\n2018-06-15T22:05:10.6363688Z    | [0.025s] SERVER Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/default'.\r\n2018-06-15T22:05:10.6379768Z    | [0.026s] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Zf6L9dyy8IF8AYRm1pTTPw - Connection id \"0HLEJ1FLHJDPC\", Request id \"0HLEJ1FLHJDPC:00000003\": started reading request body.\r\n2018-06-15T22:05:10.6402522Z    | [0.026s] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Zf6L9dyy8IF8AYRm1pTTPw - Connection id \"0HLEJ1FLHJDPC\", Request id \"0HLEJ1FLHJDPC:00000003\": done reading request body.\r\n2018-06-15T22:05:10.6422298Z    | [0.026s] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLEJ1FLHJDPC\" completed keep alive response.\r\n2018-06-15T22:05:10.6439622Z    | [0.027s] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request finished in 1.4864ms 200 text/plain\r\n2018-06-15T22:05:10.6462969Z    | [0.027s] SERVER Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher Debug: Zf6L9dyy8IF8AYRm1pTTPw - Received hub invocation: InvocationMessage { InvocationId: \"1\", Target: \"Echo\", Arguments: [ SignalR ] }.\r\n2018-06-15T22:05:10.6478242Z    | [0.027s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: Zf6L9dyy8IF8AYRm1pTTPw - Message(s) sent successfully.\r\n2018-06-15T22:05:10.6493580Z    | [0.027s] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLEJ1FLHJDPB\" completed keep alive response.\r\n2018-06-15T22:05:10.6507399Z    | [0.027s] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request finished in 6.7816ms 200 application/octet-stream\r\n2018-06-15T22:05:10.6525345Z    | [0.028s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Trace: Zf6L9dyy8IF8AYRm1pTTPw - Poll response with status code 200 received from server. Content length: 49.\r\n2018-06-15T22:05:10.6547971Z    | [0.028s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: Zf6L9dyy8IF8AYRm1pTTPw - Received messages from the server.\r\n2018-06-15T22:05:10.6566045Z    | [0.028s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Zf6L9dyy8IF8AYRm1pTTPw - Sending HTTP request GET 'http://127.0.0.1:40499/default?id=Zf6L9dyy8IF8AYRm1pTTPw'.\r\n2018-06-15T22:05:10.6583239Z    | [0.028s] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Zf6L9dyy8IF8AYRm1pTTPw - Resetting keep-alive timer, received a message from the server.\r\n2018-06-15T22:05:10.6598178Z    | [0.028s] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Zf6L9dyy8IF8AYRm1pTTPw - Processing 49 byte message from server.\r\n2018-06-15T22:05:10.6614335Z    | [0.028s] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Zf6L9dyy8IF8AYRm1pTTPw - Received Completion for Invocation 1.\r\n2018-06-15T22:05:10.6629944Z    | [0.028s] Microsoft.AspNetCore.SignalR.Client.Internal.InvocationRequest.NonStreaming Trace: Zf6L9dyy8IF8AYRm1pTTPw - Invocation 1 marked as completed.\r\n2018-06-15T22:05:10.6645721Z    | [0.029s] Microsoft.AspNetCore.SignalR.Client.Internal.InvocationRequest.NonStreaming Trace: Zf6L9dyy8IF8AYRm1pTTPw - Invocation 1 disposed.\r\n2018-06-15T22:05:10.6660072Z    | [0.029s] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 GET http://127.0.0.1:40499/default?id=Zf6L9dyy8IF8AYRm1pTTPw  \r\n2018-06-15T22:05:10.6674334Z    | [0.029s] SERVER Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler Debug: AuthenticationScheme: Bearer was not authenticated.\r\n2018-06-15T22:05:10.6688239Z    | [0.029s] SERVER Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/default'.\r\n2018-06-15T22:05:10.6703974Z    | [0.029s] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher Debug: Zf6L9dyy8IF8AYRm1pTTPw - Resuming existing connection.\r\n2018-06-15T22:05:10.6718373Z    | [0.030s] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Zf6L9dyy8IF8AYRm1pTTPw - Sending InvocationMessage message '1' completed.\r\n2018-06-15T22:05:10.6737809Z    | [0.030s] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Zf6L9dyy8IF8AYRm1pTTPw - Releasing Connection Lock in InvokeCoreAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:455).\r\n2018-06-15T22:05:10.6753519Z    | [0.030s] Microsoft.AspNetCore.SignalR.Client.FunctionalTests.HubConnectionTests Information: Stopping connection\r\n2018-06-15T22:05:10.6767866Z    | [0.030s] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Zf6L9dyy8IF8AYRm1pTTPw - Waiting on Connection Lock in StopAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:347).\r\n2018-06-15T22:05:10.6784388Z    | [0.030s] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Zf6L9dyy8IF8AYRm1pTTPw - Releasing Connection Lock in StopAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:374).\r\n2018-06-15T22:05:10.6799016Z    | [0.031s] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Zf6L9dyy8IF8AYRm1pTTPw - Stopping HubConnection.\r\n2018-06-15T22:05:10.6814709Z    | [0.031s] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Zf6L9dyy8IF8AYRm1pTTPw - Terminating receive loop.\r\n2018-06-15T22:05:10.6829758Z    | [0.031s] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Zf6L9dyy8IF8AYRm1pTTPw - Waiting on Connection Lock in ReceiveLoop (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:837).\r\n2018-06-15T22:05:10.6846143Z    | [0.031s] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Zf6L9dyy8IF8AYRm1pTTPw - Releasing Connection Lock in ReceiveLoop (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:846).\r\n2018-06-15T22:05:10.6863175Z    | [0.031s] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Zf6L9dyy8IF8AYRm1pTTPw - Disposing HttpConnection.\r\n2018-06-15T22:05:10.6877474Z    | [0.031s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Information: Zf6L9dyy8IF8AYRm1pTTPw - Transport is stopping.\r\n2018-06-15T22:05:10.6894336Z    | [0.031s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: Zf6L9dyy8IF8AYRm1pTTPw - Send loop canceled.\r\n2018-06-15T22:05:10.6908414Z    | [0.031s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: Zf6L9dyy8IF8AYRm1pTTPw - Send loop stopped.\r\n2018-06-15T22:05:10.6924507Z    | [0.032s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: Zf6L9dyy8IF8AYRm1pTTPw - Receive loop stopped.\r\n2018-06-15T22:05:10.6940098Z    | [0.032s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: Zf6L9dyy8IF8AYRm1pTTPw - Sending DELETE request to 'http://127.0.0.1:40499/default?id=Zf6L9dyy8IF8AYRm1pTTPw'.\r\n2018-06-15T22:05:10.6956602Z    | [0.032s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Zf6L9dyy8IF8AYRm1pTTPw - Sending HTTP request DELETE 'http://127.0.0.1:40499/default?id=Zf6L9dyy8IF8AYRm1pTTPw'.\r\n2018-06-15T22:05:10.6971584Z    | [0.032s] SERVER Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets Debug: Connection id \"0HLEJ1FLHJDPB\" received FIN.\r\n2018-06-15T22:05:10.6984615Z    | [0.033s] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLEJ1FLHJDPB\" disconnecting.\r\n2018-06-15T22:05:10.6997511Z    | [0.033s] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 DELETE http://127.0.0.1:40499/default?id=Zf6L9dyy8IF8AYRm1pTTPw  0\r\n2018-06-15T22:05:10.7012479Z    | [0.033s] SERVER Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler Debug: AuthenticationScheme: Bearer was not authenticated.\r\n2018-06-15T22:05:10.7027023Z    | [0.033s] SERVER Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/default'.\r\n2018-06-15T22:05:10.7042754Z    | [0.033s] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLEJ1FLHJDPC\" completed keep alive response.\r\n2018-06-15T22:05:10.7056933Z    | [0.034s] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request finished in 0.6634ms 202 text/plain\r\n2018-06-15T22:05:10.7070862Z    | [0.034s] SERVER Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets Debug: Connection id \"0HLEJ1FLHJDPB\" sending FIN.\r\n2018-06-15T22:05:10.7086153Z    | [0.034s] SERVER Microsoft.AspNetCore.Http.Connections.Internal.Transports.LongPollingTransport Debug: Zf6L9dyy8IF8AYRm1pTTPw - Client disconnected from Long Polling endpoint for connection.\r\n2018-06-15T22:05:10.7100759Z    | [0.034s] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request finished in 5.5092ms 0 \r\n2018-06-15T22:05:10.7115783Z    | [0.034s] SERVER Microsoft.AspNetCore.SignalR.HubConnectionHandler Debug: Zf6L9dyy8IF8AYRm1pTTPw - OnConnectedAsync ending.\r\n2018-06-15T22:05:10.7131826Z    | [0.035s] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionManager Debug: Zf6L9dyy8IF8AYRm1pTTPw - Removing connection Zf6L9dyy8IF8AYRm1pTTPw from the list of connections.\r\n2018-06-15T22:05:10.7147780Z    | [0.035s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: Zf6L9dyy8IF8AYRm1pTTPw - DELETE request to 'http://127.0.0.1:40499/default?id=Zf6L9dyy8IF8AYRm1pTTPw' accepted.\r\n2018-06-15T22:05:10.7165905Z    | [0.035s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: Zf6L9dyy8IF8AYRm1pTTPw - Transport stopped.\r\n2018-06-15T22:05:10.7181693Z    | [0.035s] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Information: Zf6L9dyy8IF8AYRm1pTTPw - HttpConnection Disposed.\r\n2018-06-15T22:05:10.7198009Z    | [0.035s] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Zf6L9dyy8IF8AYRm1pTTPw - Canceling all outstanding invocations.\r\n2018-06-15T22:05:10.7216285Z    | [0.035s] SERVER Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets Debug: Connection id \"0HLEJ1FLHJDPC\" received FIN.\r\n2018-06-15T22:05:10.7231938Z    | [0.035s] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLEJ1FLHJDPC\" disconnecting.\r\n2018-06-15T22:05:10.7260419Z    | [0.036s] SERVER Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets Debug: Connection id \"0HLEJ1FLHJDPC\" sending FIN.\r\n2018-06-15T22:05:10.7275866Z    | [0.036s] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLEJ1FLHJDPC\" stopped.\r\n2018-06-15T22:05:10.7297762Z    | [0.036s] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLEJ1FLHJDPB\" stopped.\r\n2018-06-15T22:05:10.7314174Z    | [0.036s] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Zf6L9dyy8IF8AYRm1pTTPw - Waiting for the receive loop to terminate.\r\n2018-06-15T22:05:10.7330641Z    | [0.036s] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Zf6L9dyy8IF8AYRm1pTTPw - Shutting down connection.\r\n2018-06-15T22:05:10.7347494Z    | [0.037s] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Zf6L9dyy8IF8AYRm1pTTPw - HubConnection stopped.\r\n2018-06-15T22:05:10.7365044Z    | [0.037s] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Invoking the Closed event handler.\r\n2018-06-15T22:05:10.7379934Z    | [0.037s] Microsoft.AspNetCore.SignalR.Client.FunctionalTests.HubConnectionTests Information: Closed event triggered\r\n2018-06-15T22:05:10.7395980Z    | [0.037s] Microsoft.AspNetCore.SignalR.Client.FunctionalTests.HubConnectionTests Information: Restarting connection\r\n2018-06-15T22:05:10.7412089Z    | [0.037s] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: Waiting on Connection Lock in StartAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:288).\r\n2018-06-15T22:05:10.7431048Z    | [0.037s] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: Starting HubConnection.\r\n2018-06-15T22:05:10.7458727Z    | [0.037s] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Starting HttpConnection.\r\n2018-06-15T22:05:10.7474687Z    | [0.037s] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Establishing connection with server at 'http://127.0.0.1:40499/default'.\r\n2018-06-15T22:05:10.7491499Z    | [0.037s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: Sending HTTP request POST 'http://127.0.0.1:40499/default/negotiate'.\r\n2018-06-15T22:05:10.7507290Z    | [0.038s] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLEJ1FLHJDPD\" started.\r\n2018-06-15T22:05:10.7523118Z    | [0.042s] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 POST http://127.0.0.1:40499/default/negotiate  0\r\n2018-06-15T22:05:10.7536987Z    | [0.042s] SERVER Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler Debug: AuthenticationScheme: Bearer was not authenticated.\r\n2018-06-15T22:05:10.7551630Z    | [0.043s] SERVER Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/default/negotiate'.\r\n2018-06-15T22:05:10.7567525Z    | [0.043s] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionManager Debug: New connection EYzhwHWKs_XugFvgc3v-iA created.\r\n2018-06-15T22:05:10.7584481Z    | [0.043s] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher Debug: EYzhwHWKs_XugFvgc3v-iA - Sending negotiation response.\r\n2018-06-15T22:05:10.7598248Z    | [0.043s] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLEJ1FLHJDPD\" completed keep alive response.\r\n2018-06-15T22:05:10.7612639Z    | [0.043s] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request finished in 1.1464ms 200 application/json\r\n2018-06-15T22:05:10.7627202Z    | [0.045s] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: Established connection 'EYzhwHWKs_XugFvgc3v-iA' with the server.\r\n2018-06-15T22:05:10.7643516Z    | [0.045s] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: EYzhwHWKs_XugFvgc3v-iA - Skipping transport WebSockets because it was disabled by the client.\r\n2018-06-15T22:05:10.7658475Z    | [0.045s] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: EYzhwHWKs_XugFvgc3v-iA - Skipping transport ServerSentEvents because it was disabled by the client.\r\n2018-06-15T22:05:10.7675876Z    | [0.045s] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: EYzhwHWKs_XugFvgc3v-iA - Starting transport 'LongPolling' with Url: http://127.0.0.1:40499/default?id=EYzhwHWKs_XugFvgc3v-iA.\r\n2018-06-15T22:05:10.7693260Z    | [0.045s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Information: EYzhwHWKs_XugFvgc3v-iA - Starting transport. Transfer mode: Text.\r\n2018-06-15T22:05:10.7708524Z    | [0.045s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: EYzhwHWKs_XugFvgc3v-iA - Sending HTTP request GET 'http://127.0.0.1:40499/default?id=EYzhwHWKs_XugFvgc3v-iA'.\r\n2018-06-15T22:05:10.7725212Z    | [0.046s] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 GET http://127.0.0.1:40499/default?id=EYzhwHWKs_XugFvgc3v-iA  \r\n2018-06-15T22:05:10.7741132Z    | [0.046s] SERVER Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler Debug: AuthenticationScheme: Bearer was not authenticated.\r\n2018-06-15T22:05:10.7755981Z    | [0.047s] SERVER Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/default'.\r\n2018-06-15T22:05:10.7771669Z    | [0.047s] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher Debug: EYzhwHWKs_XugFvgc3v-iA - Establishing new connection.\r\n2018-06-15T22:05:10.7785550Z    | [0.047s] Microsoft.AspNetCore.SignalR.Client.FunctionalTests.HubConnectionTests Information: Waiting for reconnect\r\n2018-06-15T22:05:10.7798677Z    | [0.047s] SERVER Microsoft.AspNetCore.SignalR.HubConnectionHandler Debug: EYzhwHWKs_XugFvgc3v-iA - OnConnectedAsync started.\r\n2018-06-15T22:05:10.7815160Z    | [0.048s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: EYzhwHWKs_XugFvgc3v-iA - Starting receive loop.\r\n2018-06-15T22:05:10.7831581Z    | [0.048s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: EYzhwHWKs_XugFvgc3v-iA - Sending HTTP request GET 'http://127.0.0.1:40499/default?id=EYzhwHWKs_XugFvgc3v-iA'.\r\n2018-06-15T22:05:10.7847273Z    | [0.048s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: EYzhwHWKs_XugFvgc3v-iA - Starting the send loop.\r\n2018-06-15T22:05:10.7863471Z    | [0.048s] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: EYzhwHWKs_XugFvgc3v-iA - Transport 'LongPolling' started.\r\n2018-06-15T22:05:10.7877901Z    | [0.048s] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Information: EYzhwHWKs_XugFvgc3v-iA - HttpConnection Started.\r\n2018-06-15T22:05:10.7893575Z    | [0.048s] Microsoft.AspNetCore.SignalR.Client.HubConnection Information: EYzhwHWKs_XugFvgc3v-iA - Using HubProtocol 'json v1'.\r\n2018-06-15T22:05:10.7907842Z    | [0.048s] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: EYzhwHWKs_XugFvgc3v-iA - Sending Hub Handshake.\r\n2018-06-15T22:05:10.7924053Z    | [0.049s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: EYzhwHWKs_XugFvgc3v-iA - Sending 32 bytes to the server using url: http://127.0.0.1:40499/default?id=EYzhwHWKs_XugFvgc3v-iA.\r\n2018-06-15T22:05:10.7940286Z    | [0.049s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: EYzhwHWKs_XugFvgc3v-iA - Sending HTTP request POST 'http://127.0.0.1:40499/default?id=EYzhwHWKs_XugFvgc3v-iA'.\r\n2018-06-15T22:05:10.7955765Z    | [0.049s] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLEJ1FLHJDPE\" started.\r\n2018-06-15T22:05:10.7970312Z    | [0.049s] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 POST http://127.0.0.1:40499/default?id=EYzhwHWKs_XugFvgc3v-iA  32\r\n2018-06-15T22:05:10.7985203Z    | [0.050s] SERVER Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler Debug: AuthenticationScheme: Bearer was not authenticated.\r\n2018-06-15T22:05:10.8000519Z    | [0.050s] SERVER Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/default'.\r\n2018-06-15T22:05:10.8015820Z    | [0.050s] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: EYzhwHWKs_XugFvgc3v-iA - Connection id \"0HLEJ1FLHJDPE\", Request id \"0HLEJ1FLHJDPE:00000001\": started reading request body.\r\n2018-06-15T22:05:10.8031272Z    | [0.050s] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: EYzhwHWKs_XugFvgc3v-iA - Connection id \"0HLEJ1FLHJDPE\", Request id \"0HLEJ1FLHJDPE:00000001\": done reading request body.\r\n2018-06-15T22:05:10.8045592Z    | [0.050s] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLEJ1FLHJDPE\" completed keep alive response.\r\n2018-06-15T22:05:10.8058472Z    | [0.051s] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request finished in 1.2608ms 200 text/plain\r\n2018-06-15T22:05:10.8074425Z    | [0.051s] SERVER Microsoft.AspNetCore.SignalR.Internal.DefaultHubProtocolResolver Debug: EYzhwHWKs_XugFvgc3v-iA - Found protocol implementation for requested protocol: json.\r\n2018-06-15T22:05:10.8089715Z    | [0.051s] SERVER Microsoft.AspNetCore.SignalR.HubConnectionContext Information: EYzhwHWKs_XugFvgc3v-iA - Completed connection handshake. Using HubProtocol 'json'.\r\n2018-06-15T22:05:10.8105669Z    | [0.051s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: EYzhwHWKs_XugFvgc3v-iA - Message(s) sent successfully.\r\n2018-06-15T22:05:10.8119682Z    | [0.053s] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLEJ1FLHJDPD\" completed keep alive response.\r\n2018-06-15T22:05:10.8134891Z    | [0.053s] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request finished in 6.8869ms 200 application/octet-stream\r\n2018-06-15T22:05:10.8150496Z    | [0.053s] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 GET http://127.0.0.1:40499/default?id=EYzhwHWKs_XugFvgc3v-iA  \r\n2018-06-15T22:05:10.8165288Z    | [0.054s] SERVER Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler Debug: AuthenticationScheme: Bearer was not authenticated.\r\n2018-06-15T22:05:10.8179669Z    | [0.054s] SERVER Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/default'.\r\n2018-06-15T22:05:10.8195942Z    | [0.058s] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher Debug: EYzhwHWKs_XugFvgc3v-iA - Resuming existing connection.\r\n2018-06-15T22:05:10.8213689Z    | [0.058s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Trace: EYzhwHWKs_XugFvgc3v-iA - Poll response with status code 200 received from server. Content length: 3.\r\n2018-06-15T22:05:10.8228725Z    | [0.059s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: EYzhwHWKs_XugFvgc3v-iA - Received messages from the server.\r\n2018-06-15T22:05:10.8246426Z    | [0.059s] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: EYzhwHWKs_XugFvgc3v-iA - Handshake with server complete.\r\n2018-06-15T22:05:10.8264384Z    | [0.059s] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: EYzhwHWKs_XugFvgc3v-iA - Receive loop starting.\r\n2018-06-15T22:05:10.8278622Z    | [0.059s] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: EYzhwHWKs_XugFvgc3v-iA - Sending PingMessage message.\r\n2018-06-15T22:05:10.8295053Z    | [0.059s] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: EYzhwHWKs_XugFvgc3v-iA - Sending PingMessage message completed.\r\n2018-06-15T22:05:10.8310630Z    | [0.059s] Microsoft.AspNetCore.SignalR.Client.HubConnection Information: EYzhwHWKs_XugFvgc3v-iA - HubConnection started.\r\n2018-06-15T22:05:10.8326439Z    | [0.059s] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: EYzhwHWKs_XugFvgc3v-iA - Releasing Connection Lock in StartAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:331).\r\n2018-06-15T22:05:10.8342612Z    | [0.059s] Microsoft.AspNetCore.SignalR.Client.FunctionalTests.HubConnectionTests Information: EYzhwHWKs_XugFvgc3v-iA - Restarted connection\r\n2018-06-15T22:05:10.8356333Z    | [0.060s] Microsoft.AspNetCore.SignalR.Client.FunctionalTests.HubConnectionTests Information: Reconnection complete\r\n2018-06-15T22:05:10.8371590Z    | [0.060s] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: EYzhwHWKs_XugFvgc3v-iA - Waiting on Connection Lock in InvokeCoreAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:442).\r\n2018-06-15T22:05:10.8386946Z    | [0.060s] Microsoft.AspNetCore.SignalR.Client.Internal.InvocationRequest.NonStreaming Trace: EYzhwHWKs_XugFvgc3v-iA - Invocation 1 created.\r\n2018-06-15T22:05:10.8402592Z    | [0.060s] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: EYzhwHWKs_XugFvgc3v-iA - Preparing blocking invocation '1' of 'Echo', with return type 'System.String' and 1 argument(s).\r\n2018-06-15T22:05:10.8418291Z    | [0.060s] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: EYzhwHWKs_XugFvgc3v-iA - Registering Invocation ID '1' for tracking.\r\n2018-06-15T22:05:10.8434583Z    | [0.060s] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: EYzhwHWKs_XugFvgc3v-iA - Issuing Invocation '1': System.String Echo(System.String).\r\n2018-06-15T22:05:10.8449549Z    | [0.060s] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: EYzhwHWKs_XugFvgc3v-iA - Sending InvocationMessage message '1'.\r\n2018-06-15T22:05:10.8465510Z    | [0.061s] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: EYzhwHWKs_XugFvgc3v-iA - Sending InvocationMessage message '1' completed.\r\n2018-06-15T22:05:10.8480974Z    | [0.061s] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: EYzhwHWKs_XugFvgc3v-iA - Releasing Connection Lock in InvokeCoreAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:455).\r\n2018-06-15T22:05:10.8497247Z    | [0.061s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: EYzhwHWKs_XugFvgc3v-iA - Sending 81 bytes to the server using url: http://127.0.0.1:40499/default?id=EYzhwHWKs_XugFvgc3v-iA.\r\n2018-06-15T22:05:10.8514067Z    | [0.061s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: EYzhwHWKs_XugFvgc3v-iA - Sending HTTP request POST 'http://127.0.0.1:40499/default?id=EYzhwHWKs_XugFvgc3v-iA'.\r\n2018-06-15T22:05:10.8529843Z    | [0.064s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: EYzhwHWKs_XugFvgc3v-iA - Sending HTTP request GET 'http://127.0.0.1:40499/default?id=EYzhwHWKs_XugFvgc3v-iA'.\r\n2018-06-15T22:05:10.8547315Z    | [0.064s] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 GET http://127.0.0.1:40499/default?id=EYzhwHWKs_XugFvgc3v-iA  \r\n2018-06-15T22:05:10.8562278Z    | [0.064s] SERVER Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler Debug: AuthenticationScheme: Bearer was not authenticated.\r\n2018-06-15T22:05:10.8576286Z    | [0.064s] SERVER Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/default'.\r\n2018-06-15T22:05:10.8593199Z    | [0.065s] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher Debug: EYzhwHWKs_XugFvgc3v-iA - Connection EYzhwHWKs_XugFvgc3v-iA is already active via 0HLEJ1FLHJDPE:00000002.\r\n2018-06-15T22:05:10.8610730Z    | [0.065s] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher Debug: EYzhwHWKs_XugFvgc3v-iA - Resuming existing connection.\r\n2018-06-15T22:05:10.8627334Z    | [0.066s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Trace: EYzhwHWKs_XugFvgc3v-iA - Poll response with status code 200 received from server. Content length: 0.\r\n2018-06-15T22:05:10.8643693Z    | [0.066s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Debug: EYzhwHWKs_XugFvgc3v-iA - Received messages from the server.\r\n2018-06-15T22:05:10.8659961Z    | [0.066s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LoggingHttpMessageHandler Trace: EYzhwHWKs_XugFvgc3v-iA - Sending HTTP request GET 'http://127.0.0.1:40499/default?id=EYzhwHWKs_XugFvgc3v-iA'.\r\n2018-06-15T22:05:10.8675745Z    | [0.066s] SERVER Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLEJ1FLHJDPE\" completed keep alive response.\r\n2018-06-15T22:05:10.8691150Z    | [0.066s] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request finished in 2.2634ms 200 application/octet-stream\r\n2018-06-15T22:05:10.8707010Z    | [0.067s] SERVER Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 GET http://127.0.0.1:40499/default?id=EYzhwHWKs_XugFvgc3v-iA  \r\n2018-06-15T22:05:10.8722875Z    | [0.067s] SERVER Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler Debug: AuthenticationScheme: Bearer was not authenticated.\r\n2018-06-15T22:05:10.8737904Z    | [0.067s] SERVER Microsoft.AspNetCore.Routing.RouteBase Debug: Request successfully matched the route with name '(null)' and template '/default'.\r\n2018-06-15T22:05:10.8755370Z    | [0.067s] SERVER Microsoft.AspNetCore.Http.Connections.Internal.HttpConnectionDispatcher Debug: EYzhwHWKs_XugFvgc3v-iA - Resuming existing connection.\r\n2018-06-15T22:05:10.8774014Z RUNDOTNET : | [5.061s] Microsoft.AspNetCore.SignalR.Client.FunctionalTests.HubConnectionTests error : System.TimeoutException from test [/opt/vsts/work/.dotnet/buildtools/korebuild/2.2.0-preview1-17081/KoreBuild.proj]\r\n2018-06-15T22:05:10.8789915Z    | System.TimeoutException: Operation in CanStartConnectionFromClosedEvent timed out at /_/test/Microsoft.AspNetCore.SignalR.Client.FunctionalTests/HubConnectionTests.cs:209\r\n2018-06-15T22:05:10.8804604Z    |    at System.Threading.Tasks.TaskExtensions.OrTimeout[T](Task`1 task, TimeSpan timeout, String memberName, String filePath, Nullable`1 lineNumber)\r\n2018-06-15T22:05:10.8819051Z    |    at Microsoft.AspNetCore.SignalR.Client.FunctionalTests.HubConnectionTests.CanStartConnectionFromClosedEvent(String protocolName, HttpTransportType transportType, String path) in /_/test/Microsoft.AspNetCore.SignalR.Client.FunctionalTests/HubConnectionTests.cs:line 209\r\n2018-06-15T22:05:10.8835939Z    | [5.063s] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: EYzhwHWKs_XugFvgc3v-iA - Waiting on Connection Lock in StopAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:347).\r\n2018-06-15T22:05:10.8853860Z    | [5.063s] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: EYzhwHWKs_XugFvgc3v-iA - Releasing Connection Lock in StopAsyncCore (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:374).\r\n2018-06-15T22:05:10.8869513Z    | [5.063s] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: EYzhwHWKs_XugFvgc3v-iA - Stopping HubConnection.\r\n2018-06-15T22:05:10.8886145Z    | [5.063s] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: EYzhwHWKs_XugFvgc3v-iA - Terminating receive loop.\r\n2018-06-15T22:05:10.8904350Z    | [5.063s] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: EYzhwHWKs_XugFvgc3v-iA - Waiting on Connection Lock in ReceiveLoop (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:837).\r\n2018-06-15T22:05:10.8921991Z    | [5.063s] Microsoft.AspNetCore.SignalR.Client.HubConnection Trace: EYzhwHWKs_XugFvgc3v-iA - Releasing Connection Lock in ReceiveLoop (/_/src/Microsoft.AspNetCore.SignalR.Client.Core/HubConnection.cs:846).\r\n2018-06-15T22:05:10.8941097Z    | [5.064s] Microsoft.AspNetCore.Http.Connections.Client.HttpConnection Debug: EYzhwHWKs_XugFvgc3v-iA - Disposing HttpConnection.\r\n2018-06-15T22:05:10.8957362Z    | [5.064s] Microsoft.AspNetCore.Http.Connections.Client.Internal.LongPollingTransport Information: EYzhwHWKs_XugFvgc3v-iA - Transport is stopping.\r\n2018-06-15T22:05:10.8975221Z    | [5.064s] Microsoft.AspNetCore.SignalR.Client.HubConnection Debug: EYzhwHWKs_XugFvgc3v-iA - Waiting for the receive loop to terminate.\r\n2018-06-15T22:05:10.8989808Z    | [10.062s] ServerLogScope Information: Server log scope stopped.\r\n2018-06-15T22:05:10.9004741Z    | [10.063s] TestLifetime Information: Finished test CanStartConnectionFromClosedEvent_json_LongPolling_default in 10.062239s\r\n2018-06-15T22:05:10.9020339Z    | [10.168s] TestLifetime Information: Finished test CanStartConnectionFromClosedEvent-json-LongPolling-/default in 10.1673133s\r\n2018-06-15T22:05:10.9034909Z   \r\n```","Url":"https://github.com/aspnet/SignalR/issues/2502","RelatedDescription":"Open issue \"Flaky Test: CanStartConnectionFromClosedEvent\" (#2502)"},{"Id":"332580458","IsPullRequest":true,"CreatedAt":"2018-06-15T17:55:56","Actor":"anurse","Number":"2496","RawContent":null,"Title":"Switch UMD build to WebPack","State":"closed","Body":"Switch to WebPack. It works better on later versions of node (or it should; we'll see with the CI :))\r\n\r\n* Functional Tests use the UMD build (which is what changed as a result of this) and still all pass\r\n* Size is similar:\r\n  * With Rollup:\r\n    * signalr.js - 131KB\r\n    * signalr.min.js - 68KB\r\n    * signalr-protocol-msgpack.js - 74KB\r\n    * signalr-protocol-msgpack.min.js - 48KB\r\n  * Web WebPack:\r\n    * signalr.js - 163KB **See Note**\r\n    * signalr.min.js - 87KB\r\n    * signalr-protocol-msgpack.js - 76KB\r\n    * signalr-protocol-msgpack.min.js - 48KB\r\n* Note: WebPack brings in a couple more polyfills to make things more resilient, also it brings in slightly larger module-loading goop. Hence the larger file size for `signalr.js` (since that uses a bunch of modules).","Url":"https://github.com/aspnet/SignalR/pull/2496","RelatedDescription":"Closed or merged PR \"Switch UMD build to WebPack\" (#2496)"},{"Id":"332830720","IsPullRequest":false,"CreatedAt":"2018-06-15T16:02:33","Actor":"BrennanConroy","Number":"2500","RawContent":null,"Title":"CMakeify Cpp client","State":"open","Body":"Currently there is a VS build for Windows and a CMake build for linux. VS has CMake support so we should change the project to CMake so it builds the same everywhere.","Url":"https://github.com/aspnet/SignalR/issues/2500","RelatedDescription":"Open issue \"CMakeify Cpp client\" (#2500)"},{"Id":"332560708","IsPullRequest":true,"CreatedAt":"2018-06-14T23:54:29","Actor":"BrennanConroy","Number":"2495","RawContent":null,"Title":"Add JS unit tests for WebSockets","State":"closed","Body":"#2405","Url":"https://github.com/aspnet/SignalR/pull/2495","RelatedDescription":"Closed or merged PR \"Add JS unit tests for WebSockets\" (#2495)"},{"Id":"332596758","IsPullRequest":false,"CreatedAt":"2018-06-14T23:41:05","Actor":"LuckyNoS7evin","Number":"2498","RawContent":null,"Title":"Cannot send SignalR message to specific clients using user(userId)","State":"closed","Body":"Cannot send SignalR message to specific clients using user(userId)\r\n\r\nI use `_hubContext.Clients.User(\"luckynos7evin\")` to get the client which does return a connection however client never receives the message.\r\n\r\n(sorry missed the problem description)\r\n\r\n\r\n**Client Code**\r\n```csharp\r\n_hubConnection = new HubConnectionBuilder()\r\n    .WithUrl(\"http://localhost:50040/hubs/game\", options =>\r\n    {\r\n        options.Headers.Add(\"x-gladiator-jwt\", token.Code);\r\n    })\r\n    .Build();\r\n\r\n_hubConnection.On(\"SendPing\", () => \r\n{\r\n    Console.WriteLine($\"Ping\");\r\n});\r\n_hubConnection.On<string, string>(\"SendAction\", (user, message) =>\r\n{\r\n    Console.WriteLine($\"{user}: {message}\");\r\n});\r\n_hubConnection.StartAsync().GetAwaiter().GetResult();\r\n```\r\n\r\nServer Hub:\r\n```csharp\r\n[Authorize(AuthenticationSchemes=\"StreamGladiatorsAuth\")]\r\npublic class GameHub : Hub\r\n{\r\n    public override async Task OnConnectedAsync()\r\n    {\r\n        await Clients.All.SendAsync(\"SendAction\", Context.User.Identity.Name, \"joined\");\r\n    }\r\n\r\n    public override async Task OnDisconnectedAsync(Exception ex)\r\n    {\r\n        await Clients.All.SendAsync(\"SendAction\", Context.User.Identity.Name, \"left\");\r\n    }\r\n\r\n    public async Task Send(string message)\r\n    {\r\n        await Clients.All.SendAsync(\"SendMessage\", Context.User.Identity.Name, message);\r\n    }\r\n}\r\n```\r\n\r\nServer Controller (used for testing only):\r\n```csharp\r\npublic class ViewerController : Controller\r\n{\r\n    private readonly IHubContext<GameHub> _hubContext;\r\n    public ViewerController(IHubContext<GameHub> hubContext)\r\n    {\r\n        _hubContext = hubContext;\r\n    }\r\n       \r\n    [HttpGet]\r\n    public async Task<string> Get()\r\n    {\r\n        await _hubContext.Clients.All.SendAsync(\"SendAction\", \"ping\", \"here\");\r\n\r\n\r\n        await _hubContext.Clients.User(\"luckynos7evin\").SendAsync(\"SendPing\").ContinueWith((value)=> {\r\n\r\n            if(value.IsFaulted)\r\n            {\r\n\r\n            }\r\n\r\n        });\r\n\r\n\r\n        return \"done\";\r\n    }\r\n}\r\n```\r\n\r\nYou can also see the 30 minute highlight on Twitch in which I was trying to debug and figure out what I was doing wrong: [https://www.twitch.tv/videos/273342322](https://www.twitch.tv/videos/273342322)\r\n\r\n* Server-Side NuGet Package: Microsoft.AspNetCore.App 2.1\r\n* Client-Side NuGet Package: Microsoft.AspNetCore.SignalR.Client 1.0\r\n*  C# Client\r\n* Kestrel Server\r\n* Windows 10\r\n\r\n\r\n**Thanks in advance**\r\n\r\nAndy (LuckyNoS7evin)\r\n\r\n\r\n","Url":"https://github.com/aspnet/SignalR/issues/2498","RelatedDescription":"Closed issue \"Cannot send SignalR message to specific clients using user(userId)\" (#2498)"},{"Id":"332394683","IsPullRequest":true,"CreatedAt":"2018-06-14T23:34:00","Actor":"Tragetaschen","Number":"2491","RawContent":null,"Title":"Bind the IObservable subscription in the AsChannelReader extension method to the connection livetime","State":"closed","Body":"These are the changes I made to the extension method in my project to bind the observable subscription to the connection livetime.\r\n\r\nFixes #2456 ","Url":"https://github.com/aspnet/SignalR/pull/2491","RelatedDescription":"Closed or merged PR \"Bind the IObservable subscription in the AsChannelReader extension method to the connection livetime\" (#2491)"},{"Id":"332585140","IsPullRequest":true,"CreatedAt":"2018-06-14T23:29:37","Actor":"anurse","Number":"2497","RawContent":null,"Title":"Update ts-jest","State":"closed","Body":"`npm audit` says we should update. This is **not** a dependency that ever ships to customers, it's purely used in our testing code. `ts-jest` wasn't the source of the issues, but it was the source of all the dependencies that needed to be updated ;)","Url":"https://github.com/aspnet/SignalR/pull/2497","RelatedDescription":"Closed or merged PR \"Update ts-jest\" (#2497)"},{"Id":"332526201","IsPullRequest":true,"CreatedAt":"2018-06-14T21:14:52","Actor":"anurse","Number":"2494","RawContent":null,"Title":"fix running Functional Tests in the browser","State":"closed","Body":"Functional tests were broken in the browser. Also I updated my local `npm`, so the package-lock.json exploded. (PSA: update your `npm` to avoid unexploding it)","Url":"https://github.com/aspnet/SignalR/pull/2494","RelatedDescription":"Closed or merged PR \"fix running Functional Tests in the browser\" (#2494)"},{"Id":"332489515","IsPullRequest":false,"CreatedAt":"2018-06-14T17:10:09","Actor":"ste4net","Number":"2493","RawContent":null,"Title":"HubConnection on JsClient keep all the handler registration","State":"open","Body":"I am using Js client 1.0.0 in a typescript angularX project.\r\n\r\nIn my test i ha declared an HubConnection as property of component class and initialized it during component initizialization.\r\n\r\nHubConnection keep all the previous handler registration even creating and initializing a new HubConnection.\r\n\r\n\r\n \r\n```\r\n[…]\r\nexport class SignalRComponent implements OnInit, OnDestroy {\r\n  public conn: HubConnection;\r\n  ngOnInit() {\r\n   […]\r\n     this.conn = (new HubConnectionBuilder())\r\n        .withUrl(`/messageHub`, options)\r\n        .configureLogging(LogLevel.Information).build();\r\n     this.conn.on(\"testMessage\", (n, m) => console.log([n, m]));\r\n      this.conn.start().then(() => {\r\n        console.log('Hub connection started')\r\n      }).catch(err => {\r\n          console.log('Error while establishing connection')\r\n        });\r\n   }\r\n[…]\r\n```\r\n \r\n\r\nEvery time a new SignalRComponent is created a new handler to \"testMessage\" is register. If i create (and destroy) SignalRComponent  3 times i have 3 messages for each \"testMessage\".\r\n\r\nTo solve this i keep attention at manual unregistering process.\r\nDuring component destruction i have to unregister event and stop connection.\r\n\r\n```\r\n  ngOnDestroy(): void {\r\n    this.conn.off(\"testMessage\");\r\n    this.conn.stop().then(() => console.log(\"Hub connection stopped\"));\r\n  }\r\n```\r\n","Url":"https://github.com/aspnet/SignalR/issues/2493","RelatedDescription":"Open issue \"HubConnection on JsClient keep all the handler registration\" (#2493)"},{"Id":"332485701","IsPullRequest":true,"CreatedAt":"2018-06-14T17:02:00","Actor":"MattGal","Number":"2492","RawContent":null,"Title":"Fix Groovy script to have correct Queue ID","State":"closed","Body":"@dseefeld FYI.\r\n\r\nThe queue listed didn't exist and would be blocked for this if it did (Jenkins jobs can only run on special \".Open\" queues)","Url":"https://github.com/aspnet/SignalR/pull/2492","RelatedDescription":"Closed or merged PR \"Fix Groovy script to have correct Queue ID\" (#2492)"}],"ResultType":"GitHubIssue"},"Identity-Issues":{"Issues":[{"Id":"334288698","IsPullRequest":false,"CreatedAt":"2018-06-20T23:54:41","Actor":"kanadaj","Number":"1845","RawContent":null,"Title":"Refreshing claims in cookie on principal refresh","State":"open","Body":"Hi guys,\r\n\r\nI have a question here. I have a Cookie authentication based web application which uses a custom `IUserClaimsStore` that adds additional claims to the user based on some extra tables. The problem I'm facing right now is that even though those tables' value changes, the user's claims don't seem to get refreshed from the `IUserClaimsStore` even when the security stamp is re-validated.\r\n\r\nI do have an override for `OnRefreshingPrincipal` though for the purpose of user impersonation; does this method maybe have a default value that I'm overriding that's meant to pull the claims from the store? Or am I missing something?","Url":"https://github.com/aspnet/Identity/issues/1845","RelatedDescription":"Open issue \"Refreshing claims in cookie on principal refresh\" (#1845)"},{"Id":"334282435","IsPullRequest":true,"CreatedAt":"2018-06-20T23:51:52","Actor":"pranavkm","Number":"1844","RawContent":null,"Title":"Use partial tag helper instead of Html.Partial to avoid analyzer warning","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/1844","RelatedDescription":"Closed or merged PR \"Use partial tag helper instead of Html.Partial to avoid analyzer warning\" (#1844)"},{"Id":"334250460","IsPullRequest":true,"CreatedAt":"2018-06-20T21:24:36","Actor":"pranavkm","Number":"1843","RawContent":null,"Title":"Apply attribute to page model rather than handler","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/1843","RelatedDescription":"Closed or merged PR \"Apply attribute to page model rather than handler\" (#1843)"},{"Id":"333965406","IsPullRequest":false,"CreatedAt":"2018-06-20T08:01:21","Actor":"kassim-shaikh","Number":"1842","RawContent":null,"Title":"Extend UserManager<T> class for Custom Password Hashing service","State":"open","Body":"Hi,\r\nI am using Identity framework for user profile management in my MVC application. There are certain aspects  of the identity framework which  i want to customize based on application need. One of them is **Custom password hashing** :\r\n\r\nI am using combination of Salt, DEK and MEK to generate the random salt and encrypt it with random DEK once the hashing is done. I can't find a way to incorporate this feature just by extending the `IPasswordHashing` interface. One way i could achieve is by extended the `UserManager<T>` class. \r\n\r\nCould any one help me with the best practice to extend the class or basically where can i put custom hashing code.","Url":"https://github.com/aspnet/Identity/issues/1842","RelatedDescription":"Open issue \"Extend UserManager<T> class for Custom Password Hashing service\" (#1842)"},{"Id":"333656245","IsPullRequest":false,"CreatedAt":"2018-06-20T08:00:38","Actor":"ms92ita","Number":"1841","RawContent":null,"Title":"Storing huge amount of data in claims creates too large cookie ticket","State":"closed","Body":"Hi guys,\r\n\r\nI have encoutered that if I have some data in user claims (from Azure SQL as storage and we use them such as dynamic properties without creating database columns), the cookie manager creates a ticket that in some cases reaches the limit of bytes per domain and I think that depends from the amount of data from the user claims.\r\nI am using .NET 4.6.1.\r\n\r\nSince that some of this data is vital for us, is there a possibility to exclude some claims from the ticket so we can reduce it enough and avoid these types of issue?\r\n\r\nKind regards","Url":"https://github.com/aspnet/Identity/issues/1841","RelatedDescription":"Closed issue \"Storing huge amount of data in claims creates too large cookie ticket\" (#1841)"},{"Id":"333383703","IsPullRequest":false,"CreatedAt":"2018-06-18T18:26:16","Actor":"martinpetrovaj","Number":"1840","RawContent":null,"Title":"Scaffolding Identity code?","State":"open","Body":"Hey guys, quick question. One of the older blogs ([this one](https://blogs.msdn.microsoft.com/webdev/2018/03/02/aspnetcore-2-1-identity-ui/)) mentions that we should be able to also scaffold the \"old\" Identity (like normal controllers and views to which are all sensible and sane MVC people used to) - quoting the linked post:\r\n\r\n> If you want the flexibility of having the identity code in your app, you can use the new identity scaffolder to add it back.\r\n\r\nSo at least that is how I understood it. Is this already implemented, has it been dropped or what? If it is a thing already, how can I access it when creating a new project? Or is there at least any real explanation of the changes, how does this new Identity UI work and how to use it? You don't possibly expect all users to read through your repo and API just to understand how to create and extend a damn login or basic application user functionality, do you?\r\n\r\n_As a little friendly side note, reworking a thing like Identity so much from 2.0 to 2.1 without an obvious reason or any gains from user perspective and releasing it with piss-poor documentation is probably one of the main causes why so many people are still reluctant to transition to Core. This instability, fluctuation and immaturity of Core is just killing._","Url":"https://github.com/aspnet/Identity/issues/1840","RelatedDescription":"Open issue \"Scaffolding Identity code?\" (#1840)"},{"Id":"332619862","IsPullRequest":false,"CreatedAt":"2018-06-18T17:47:20","Actor":"nicolastarzia","Number":"1833","RawContent":null,"Title":"Remove some line of codes in PasswordHasher.","State":"closed","Body":"Could we change the lines below?\r\nhttps://github.com/aspnet/Identity/blob/8cbda5a23dd594116fcd2f60c486d15fa50051af/src/Microsoft.Extensions.Identity.Core/PasswordHasher.cs#L200-L203\r\nhttps://github.com/aspnet/Identity/blob/8cbda5a23dd594116fcd2f60c486d15fa50051af/src/Microsoft.Extensions.Identity.Core/PasswordHasher.cs#L214-L218\r\n\r\nThe method will be cleaner:\r\n``` C#\r\nvar passwordResult = PasswordVerificationResult.Failed;\r\n switch (decodedHashedPassword[0])\r\n            {\r\n                case 0x00:\r\n                    if (VerifyHashedPasswordV2(decodedHashedPassword, providedPassword))\r\n                    {\r\n                        // This is an old password hash format - the caller needs to rehash if we're not running in an older compat mode.\r\n                        passwordResult = (_compatibilityMode == PasswordHasherCompatibilityMode.IdentityV3)\r\n                            ? PasswordVerificationResult.SuccessRehashNeeded\r\n                            : PasswordVerificationResult.Success;\r\n                    } \r\n                    break;\r\n\r\n                case 0x01:\r\n                    int embeddedIterCount;\r\n                    if (VerifyHashedPasswordV3(decodedHashedPassword, providedPassword, out embeddedIterCount))\r\n                    {\r\n                        // If this hasher was configured with a higher iteration count, change the entry now.\r\n                        passwordResult = (embeddedIterCount < _iterCount)\r\n                            ? PasswordVerificationResult.SuccessRehashNeeded\r\n                            : PasswordVerificationResult.Success;\r\n                    }\r\n                    break;\r\n                default:\r\n                    passwordResult = PasswordVerificationResult.Failed; // Just pass in Code Analysis\r\n}\r\nreturn passwordResult;\r\n```","Url":"https://github.com/aspnet/Identity/issues/1833","RelatedDescription":"Closed issue \"Remove some line of codes in PasswordHasher.\" (#1833)"},{"Id":"333254885","IsPullRequest":false,"CreatedAt":"2018-06-18T17:46:37","Actor":"tstivers1990","Number":"1839","RawContent":null,"Title":"Razor Pages _ViewImports documentation could be more clear","State":"closed","Body":"https://docs.microsoft.com/en-us/aspnet/core/mvc/razor-pages/?view=aspnetcore-2.1&tabs=visual-studio#using-layouts-partials-templates-and-tag-helpers-with-razor-pages\r\n\r\nThe part of this documentation that details the `@namespace` declaration could be made more clear. It has led some people to believe `@namespace` should be used as though it is a `using` statement. See the linked StackOverflow answer below for an example of this. I believe part of the reason it isn't clear, is because it doesn't explain `@using` directives in the context of a `_ViewImports` file.\r\n\r\nIn short, the wording could be made more clear, and a section should be added detailing `@using` directives in the context of a `_ViewImports` file.\r\n\r\nhttps://stackoverflow.com/a/50322359","Url":"https://github.com/aspnet/Identity/issues/1839","RelatedDescription":"Closed issue \"Razor Pages _ViewImports documentation could be more clear\" (#1839)"},{"Id":"333151042","IsPullRequest":true,"CreatedAt":"2018-06-18T06:50:40","Actor":"tstivers1990","Number":"1838","RawContent":null,"Title":"Fix ActivePage declarations","State":"open","Body":"* Some of the `ViewData[\"ActivePage\"]` declarations were missing.\r\n* `DeletePersonalData` and `DownloadPersonalData` should set `ActivePage` to `PersonalData` as there is no navigation element for `DeletePersonalData` or `DownloadPersonalData`.\r\n* Remove `DeletePersonalData` and `DownloadPersonalData` variables and methods as they're no longer used by anthing.\r\n* Make `PageNavClass` private as it is never used outside of its class.","Url":"https://github.com/aspnet/Identity/pull/1838","RelatedDescription":"Open PR \"Fix ActivePage declarations\" (#1838)"},{"Id":"333064006","IsPullRequest":false,"CreatedAt":"2018-06-17T13:45:41","Actor":"tstivers1990","Number":"1837","RawContent":null,"Title":"Lack of documentation on adding roles and assigning roles to users","State":"open","Body":"As the title says, there is a complete lack of documentation when it comes to role management. There's plenty of documentation on how to limit access to content based on roles. But none when it comes to creating roles, deleting roles, giving roles to users, and taking roles from users.","Url":"https://github.com/aspnet/Identity/issues/1837","RelatedDescription":"Open issue \"Lack of documentation on adding roles and assigning roles to users\" (#1837)"},{"Id":"333057434","IsPullRequest":false,"CreatedAt":"2018-06-17T12:00:55","Actor":"Kiiyya","Number":"1836","RawContent":null,"Title":"IdentityServiceCollectionExtensions.AddIdentity<TUser,TRole>() doesn't have a type constraint for IdentityUser and IdentityRole","State":"open","Body":"Basically this becomes a run-time exception while it could easily be a compile time error:\r\n\r\n![image](https://user-images.githubusercontent.com/17028679/41507646-c36223ec-7236-11e8-9278-b35dd701a87e.png)\r\n\r\n(Hint: I'm still new to Asp.Net authentication so I might be wrong)","Url":"https://github.com/aspnet/Identity/issues/1836","RelatedDescription":"Open issue \"IdentityServiceCollectionExtensions.AddIdentity<TUser,TRole>() doesn't have a type constraint for IdentityUser and IdentityRole\" (#1836)"},{"Id":"332459122","IsPullRequest":false,"CreatedAt":"2018-06-15T23:58:47","Actor":"Andrioden","Number":"1831","RawContent":null,"Title":"SignInManager.RefreshSignInAsync(inputuser) signs in current user instead of refreshing inputuser","State":"closed","Body":"Environment:\r\n- ASP.Net Core 2.1\r\n- Identity with EF\r\n\r\nBy my understanding RefreshSignInAsync can be used to refresh roles for an user after you have given it new roles. However, when I do, all it does is log the CURRENT_USER user in as the CHANGING_USER user.\r\n\r\nHere is a simplified, but still bugging version of the code, with comments of debugging state\r\n``` \r\nprivate readonly SignInManager<User> _signInManager;\r\n\r\npublic EditModel(SignInManager<User> signInManager)\r\n{\r\n    _signInManager = signInManager;\r\n}\r\n\r\npublic async Task<IActionResult> OnPostAsync()\r\n{\r\n    //Debugging shows that the User.Identity.Name shows CURRENT_USER data.\r\n\r\n    User changingUser = await _userManager.FindByIdAsync(InputUser.Id);\r\n    // Debugging shows that changingUser shows CHANGING_USER data\r\n\r\n    await _signInManager.RefreshSignInAsync(changingUser);\r\n    return RedirectToPage(\"./Index\");\r\n}\r\n```\r\n\r\n\r\nOn the redirect request I again check the debugging state to se which user data is present, and here the CHANGED_USER is now \"logged in\"\r\n\r\n```\r\npublic async Task OnGetAsync()\r\n{\r\n    //Debugging shows that the User.Identity.Name now wrongly shows CHANGING_USER data.\r\n}\r\n```\r\n\r\nThe same happens with \r\n`SignInManager.SignInAsync(dbUser, false, null);`\r\n`UserManager.UpdateSecurityStampAsync(dbUser);`\r\n\r\nHave I\r\n1. Missunderstood RefreshSignInAsync/SignInAsync?\r\n2. Or is this a straight up bug that happens for everyone?\r\n3. Or do I have to provide more contextual information because its a specific problem with my project. If so, what can influence something this?","Url":"https://github.com/aspnet/Identity/issues/1831","RelatedDescription":"Closed issue \"SignInManager.RefreshSignInAsync(inputuser) signs in current user instead of refreshing inputuser\" (#1831)"},{"Id":"332908137","IsPullRequest":false,"CreatedAt":"2018-06-15T20:42:37","Actor":"ryanbrandenburg","Number":"1835","RawContent":null,"Title":"Add Bootstrap 4 compatible Identity UI views","State":"open","Body":"","Url":"https://github.com/aspnet/Identity/issues/1835","RelatedDescription":"Open issue \"Add Bootstrap 4 compatible Identity UI views\" (#1835)"},{"Id":"332907713","IsPullRequest":false,"CreatedAt":"2018-06-15T20:41:01","Actor":"ryanbrandenburg","Number":"1834","RawContent":null,"Title":"Identity UI supports Bootstrap 4.x","State":"open","Body":"Add support for bootstrap 4 in the default UI.","Url":"https://github.com/aspnet/Identity/issues/1834","RelatedDescription":"Open issue \"Identity UI supports Bootstrap 4.x\" (#1834)"},{"Id":"332088062","IsPullRequest":true,"CreatedAt":"2018-06-14T23:46:14","Actor":"ryanbrandenburg","Number":"1830","RawContent":null,"Title":"Set 2.1 baselines","State":"closed","Body":null,"Url":"https://github.com/aspnet/Identity/pull/1830","RelatedDescription":"Closed or merged PR \"Set 2.1 baselines\" (#1830)"},{"Id":"332088007","IsPullRequest":true,"CreatedAt":"2018-06-14T23:46:03","Actor":"ryanbrandenburg","Number":"1829","RawContent":null,"Title":"Set 2.1 baselines","State":"closed","Body":null,"Url":"https://github.com/aspnet/Identity/pull/1829","RelatedDescription":"Closed or merged PR \"Set 2.1 baselines\" (#1829)"},{"Id":"331391677","IsPullRequest":false,"CreatedAt":"2018-06-14T23:07:11","Actor":"kofifus","Number":"1828","RawContent":null,"Title":"connect to .NET Core 2.1 \"Identity as UI\" from a .NET Core 2.1 console app client","State":"closed","Body":"I create a simple .NET Core 2.1 server using \"Identity as UI\" with the default template, and then add some methods \r\n\r\nI now need to create  .NET Core 2.1 console app client but I can't find anything on how to authenticate that client with the server (with an email & password). In particular I want to authenticate and then get the authentication cookie so that I can later feed it to ie SignalR.\r\n\r\nAs far as I understand this should be possible without an external framework like IdentityServer.\r\n\r\nHow do I do that ? is there any sample code anywhere ?\r\n\r\nThanks!\r\n","Url":"https://github.com/aspnet/Identity/issues/1828","RelatedDescription":"Closed issue \"connect to .NET Core 2.1 \"Identity as UI\" from a .NET Core 2.1 console app client\" (#1828)"},{"Id":"332562902","IsPullRequest":true,"CreatedAt":"2018-06-14T21:00:40","Actor":"HaoK","Number":"1832","RawContent":null,"Title":"Fix issue with role claim missing in AddIdentityCore","State":"open","Body":"Fixes https://github.com/aspnet/Identity/issues/1813\r\n\r\n@ajcvickers ","Url":"https://github.com/aspnet/Identity/pull/1832","RelatedDescription":"Open PR \"Fix issue with role claim missing in AddIdentityCore\" (#1832)"},{"Id":"331135567","IsPullRequest":false,"CreatedAt":"2018-06-13T15:23:33","Actor":"tstivers1990","Number":"1825","RawContent":null,"Title":"Identity UI Unsuitable","State":"closed","Body":"The new `Identity UI` library system introduced with 2.1 is unacceptable, in my eyes. There is too much background magic going on that isn't clear even after scaffolding all the pages. Not all users want to have an entire `Areas` folder with nothing but `Identity` in it while the rest of their project lives in the project root.\r\n\r\nAfter scaffolding all the pages, I've noticed some pages have `[AllowAnonymous]` yet no pages have `[Authorize]`, implying requiring authorization is the default. Yet, nowhere in the code is this made clear. Not in the `Startup` configuration. Not in `Program.cs`. Not in any files under the `Identity` folder. Nowhere. Leaving me to believe there's just some background magic going on that is being deliberately hidden from us.\r\n\r\nThe only current option also seems to be using `Razor Pages` for the `Identity UI`. Some of us want full control over how we use `Identity` so that we can customize it to our needs. The current setup is simply unacceptable. If my entire project is using `MVC`, I don't want `Identity` living in its own folder off in la-la land as `Razor Pages`. It makes the project structure a mess, and there's just no reason for it.\r\n\r\nPlease either fix the options so that those who want it can take full control of `Identity` and use it as they wish, whether that's the `MVC` approach or the `Razor Pages` approach. Or provide us with sufficient documentation so that we may add `Identity` to a blank project without using the `Identity UI` library or some magic scaffolding voodoo. As it stands now, there doesn't appear to be any documentation on `Identity` that doesn't rely on the new scaffolding system and `Identity UI`.","Url":"https://github.com/aspnet/Identity/issues/1825","RelatedDescription":"Closed issue \"Identity UI Unsuitable\" (#1825)"},{"Id":"329261618","IsPullRequest":true,"CreatedAt":"2018-06-12T20:39:37","Actor":"HaoK","Number":"1816","RawContent":null,"Title":"Don't hook cancellation tokens by default","State":"closed","Body":"Fixes https://github.com/aspnet/Identity/issues/1811\r\n\r\ncc @davidfowl @ajcvickers ","Url":"https://github.com/aspnet/Identity/pull/1816","RelatedDescription":"Closed or merged PR \"Don't hook cancellation tokens by default\" (#1816)"},{"Id":"331342607","IsPullRequest":true,"CreatedAt":"2018-06-11T20:56:44","Actor":"tstivers1990","Number":"1827","RawContent":null,"Title":"Fix /// comments","State":"closed","Body":"The returns tag incorrectly states that AddDefaultIdentity<T>\r\nreturns IServiceCollection when it actually returns IdentityBuilder.","Url":"https://github.com/aspnet/Identity/pull/1827","RelatedDescription":"Closed or merged PR \"Fix /// comments\" (#1827)"},{"Id":"331328122","IsPullRequest":false,"CreatedAt":"2018-06-11T19:57:29","Actor":"ATylerYarnott","Number":"1826","RawContent":null,"Title":"Configuirability of QR code site name in UI library","State":"open","Body":"In playing with the new Identity UI as a Razor Class Library, I came across the issue of how to configure the site's QR code. Previously, it was suggested to change the value in the EnableAuthenticator.chtml.cs file (the default value would be taken from the solution name). It looks like this value is hard-coded to \"Microsoft.AspNetCore.Identity.UI\". Thus, every website would need to scaffold and override that file in order to customize this.\r\n\r\nShould there perhaps be an AuthenticationTokenProviderOptions class available in ConfigureServices that would allow this to be specified, perhaps defaulting to the solution name? Perhaps something like:\r\n```c#\r\nservices.Configure<AuthenticationTokenProviderOptions>(options =>\r\n{\r\n    options.AuthenticatorSiteName = \"MyWebsiteName\";\r\n});\r\n```\r\nThis would follow current conventions, allow changing this value without scaffolding/overriding the UI RCL, and would provide a simpler method to configure that behavior even if that file is overridden.\r\n\r\nThoughts or alternate proposals?","Url":"https://github.com/aspnet/Identity/issues/1826","RelatedDescription":"Open issue \"Configuirability of QR code site name in UI library\" (#1826)"},{"Id":"330786198","IsPullRequest":false,"CreatedAt":"2018-06-11T18:12:11","Actor":"pwen090","Number":"1824","RawContent":null,"Title":"Securely disable asp.net core 2.1 identity user registration","State":"closed","Body":"In asp.net core 2.1 identity projects with authentication for users the default UI contains user registration functionality. In the past to avoid a potential security risk (particularly for enterprise apps without open user registration) you could simply delete the relevant controller and view code for registration.\r\n\r\nWhat is the proper process for disabling user registration with this new razor library? \r\nScaffold the Account\\Register section and then comment out the code within Register.cshtml and Register.cshtml.cs? I assume you cannot simply comment out the files entirely but instead essentially comment out the specific functions like OnGet, OnPost and so on? \r\nCan you just delete these file[s] completely or will that then revert to the built-in razor library code?\r\n\r\nSecondarily how does one disable the default identity razor class library all together so that there is no potential for attack surface creep in future updates or changes to said library? E.g. My authentication UI/Controllers are only what I have explicitly coded them to be. thank you!","Url":"https://github.com/aspnet/Identity/issues/1824","RelatedDescription":"Closed issue \"Securely disable asp.net core 2.1 identity user registration\" (#1824)"},{"Id":"330461631","IsPullRequest":true,"CreatedAt":"2018-06-08T18:00:54","Actor":"ryanbrandenburg","Number":"1820","RawContent":null,"Title":"Adding VSTS file","State":"closed","Body":null,"Url":"https://github.com/aspnet/Identity/pull/1820","RelatedDescription":"Closed or merged PR \"Adding VSTS file\" (#1820)"},{"Id":"330751019","IsPullRequest":false,"CreatedAt":"2018-06-08T18:00:18","Actor":"ryanbrandenburg","Number":"1823","RawContent":null,"Title":"Flaky tests: CanChainRoleValidators et all","State":"open","Body":"We see this message popping up a lot in failing identity builds on [VSTS](https://dotnet.visualstudio.com/public/public%20Team/_build/results?buildId=1053&view=logs) and [appveyor](https://ci.appveyor.com/project/aspnetci/identity/build/1.0.1587):\r\n```\r\nSystem.Data.SqlClient.SqlException : Connection Timeout Expired.  The timeout period elapsed while attempting to consume the pre-login handshake acknowledgement.  This could be because the pre-login handshake failed or the server was unable to respond back in time.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=45447; handshake=27; \r\n---- System.ComponentModel.Win32Exception : The wait operation timed out.\r\n```\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/1823","RelatedDescription":"Open issue \"Flaky tests: CanChainRoleValidators et all\" (#1823)"},{"Id":"330705079","IsPullRequest":false,"CreatedAt":"2018-06-08T15:31:45","Actor":"summoncse","Number":"1822","RawContent":null,"Title":"Customize Identity User ","State":"open","Body":"How can use my AppUser without having properties of IdentityUser properties in AppUser, for example, I only want AppUser table will be created on database according to my AppUser class properties, not with IdentityUser properties.","Url":"https://github.com/aspnet/Identity/issues/1822","RelatedDescription":"Open issue \"Customize Identity User \" (#1822)"},{"Id":"330585142","IsPullRequest":false,"CreatedAt":"2018-06-08T09:27:38","Actor":"konraddysput","Number":"1821","RawContent":null,"Title":"Cannot override IdentityUserClaim keys and similar key tables","State":"open","Body":"Hello,\r\n\r\nIn our company we decide to use Guid as a key instead of int. When we override default keys in Identity I recognize that I still have int in tables: `AspNetRoleClaims`, `AspNetUserClaims` ... \r\n\r\nIs there anyway to use in these tables Guid instead of int? Its not a bug in our code, but I cannot stop thinking about bad database design because we have two types of keys, not one. \r\n\r\nThanks !","Url":"https://github.com/aspnet/Identity/issues/1821","RelatedDescription":"Open issue \"Cannot override IdentityUserClaim keys and similar key tables\" (#1821)"},{"Id":"330450753","IsPullRequest":false,"CreatedAt":"2018-06-07T21:59:05","Actor":"sbersey","Number":"1819","RawContent":null,"Title":"Can Identity be used in a WinForm App?","State":"open","Body":"I am using Identity in a APS.NET WebForm app and would like to log in users using the same identity database for my Desktop app (WinForms) that is currently using membership? Can this be done? Are their examples? \r\n\r\n(sorry if this is not the correct format for a Q: if it is not, please inform how to post a identity Q properly)\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/1819","RelatedDescription":"Open issue \"Can Identity be used in a WinForm App?\" (#1819)"},{"Id":"330021838","IsPullRequest":false,"CreatedAt":"2018-06-06T20:32:58","Actor":"wcvollmar","Number":"1818","RawContent":null,"Title":"Nuget Package URI Error","State":"open","Body":"Upon downloading the Microsoft.AspNetCore.Identity.UI 2.1.0 package, there appears to be an error in the package structure.  When opening the package I get a \"Part URI cannot start with two forward slashes\" error.  I'm not actually sure where this is occurring, as the metadata appears correct.\r\n\r\nHere's a screenshot of the error:\r\n![nugeterror](https://user-images.githubusercontent.com/40006478/41063609-a52b9532-69c8-11e8-91d0-546c1ac4b667.png)\r\n","Url":"https://github.com/aspnet/Identity/issues/1818","RelatedDescription":"Open issue \"Nuget Package URI Error\" (#1818)"},{"Id":"329314068","IsPullRequest":false,"CreatedAt":"2018-06-05T06:10:36","Actor":"aneequrrehman","Number":"1817","RawContent":null,"Title":"Alternative to AuthenticationResponseGrant?","State":"open","Body":"Is there any alternative to the following code in AspNet Core 2?\r\n\r\n```\r\nvar identity = HttpContext.User.Identity as ClaimsIdentity;\r\nidentity.RemoveClaim(Identity.FindFirst(\"AnnounceCount\"));\r\nidentity.AddClaim(new Claim(\"AnnounceCount\", \"Updated Value\"));\r\nvar authenticationManager = System.Web.HttpContext.Current.GetOwinContext().Authentication;\r\nauthenticationManager.AuthenticationResponseGrant = new AuthenticationResponseGrant(new ClaimsPrincipal(identity), new AuthenticationProperties() { IsPersistent = true });\r\n```\r\n\r\nI would like to change some User Principal values inside the cookie and I do not intend to persist those in the database. Is something like the above code possible in the Asp Net Core version 2? I looked into `OnValidatePrincipal`, `IClaimsTransformation` implementations, but both of those don't fit my needs. Am I missing something here?\r\n\r\nThanks","Url":"https://github.com/aspnet/Identity/issues/1817","RelatedDescription":"Open issue \"Alternative to AuthenticationResponseGrant?\" (#1817)"}],"ResultType":"GitHubIssue"},"Kestrel-Issues":{"Issues":[{"Id":"334285504","IsPullRequest":false,"CreatedAt":"2018-06-20T23:35:36","Actor":"Tratcher","Number":"2678","RawContent":null,"Title":"Support HTTP/2 response headers with END_STREAM, no body","State":"open","Body":"If the response completes without a body there's no reason to send a data frame. Flush the headers with an End_Stream flag.","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2678","RelatedDescription":"Open issue \"Support HTTP/2 response headers with END_STREAM, no body\" (#2678)"},{"Id":"330760115","IsPullRequest":false,"CreatedAt":"2018-06-20T18:08:00","Actor":"Tratcher","Number":"2657","RawContent":null,"Title":"Application code can block http2 frame processing loop","State":"closed","Body":"Http2 connections support multiplexing with multiple parallel streams. There's one central loop per connection that reads incoming frames and dispatches them to the correct stream. However that dispatch does not force a thread hop, so if the app code blocks synchronously then the frame loop won't continue.\r\n\r\nThis is what happens when you put a break point in Run in the sample app:\r\n\r\n```\r\n \tHttp2SampleApp.dll!Http2SampleApp.Startup.Configure.AnonymousMethod__1_0(Microsoft.AspNetCore.Http.HttpContext context) Line 19\tC#\r\n \tMicrosoft.AspNetCore.Hosting.dll!Microsoft.AspNetCore.Hosting.Internal.HostingApplication.ProcessRequestAsync(Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context context)\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Core.dll!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context>(Microsoft.AspNetCore.Hosting.Server.IHttpApplication<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context> application) Line 553\tC#\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Core.dll!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequestsAsync<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context>(Microsoft.AspNetCore.Hosting.Server.IHttpApplication<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context> application) Line 464\tC#\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Core.dll!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2Connection.StartStream<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context>(Microsoft.AspNetCore.Hosting.Server.IHttpApplication<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context> application) Line 674\tC#\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Core.dll!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2Connection.DecodeHeadersAsync<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context>(Microsoft.AspNetCore.Hosting.Server.IHttpApplication<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context> application, bool endHeaders, System.Span<byte> payload) Line 635\tC#\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Core.dll!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2Connection.ProcessHeadersFrameAsync<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context>(Microsoft.AspNetCore.Hosting.Server.IHttpApplication<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context> application) Line 423\tC#\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Core.dll!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2Connection.ProcessFrameAsync<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context>(Microsoft.AspNetCore.Hosting.Server.IHttpApplication<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context> application) Line 266\tC#\r\n>\tMicrosoft.AspNetCore.Server.Kestrel.Core.dll!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2Connection.ProcessRequestsAsync<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context>(Microsoft.AspNetCore.Hosting.Server.IHttpApplication<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context> application) Line 163\tC#\r\n```\r\n\r\nData frames likely don't have this issue because they're shunted through a Pipe which should force offloads between writer and reader (?).","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2657","RelatedDescription":"Closed issue \"Application code can block http2 frame processing loop\" (#2657)"},{"Id":"332878603","IsPullRequest":true,"CreatedAt":"2018-06-20T18:07:32","Actor":"Tratcher","Number":"2670","RawContent":null,"Title":"Prevent app code from blocking the connection loop ","State":"closed","Body":"#2657 Each connection is multiplexed and has a loop that reads and processes frames. That processing must not ever get blocked by application code.\r\n\r\nI fixed one code path where the initial request is dispatched to the app synchronously and the connection loop may get blocked by app code.\r\n\r\nThe only other case I found is for RST frames. https://github.com/aspnet/KestrelHttpServer/issues/2462#issuecomment-397702247. RequestAborted is dispatched on a background thread but that can be affected by ApplicationSchedulingMode. What's the guidance for ApplicationSchedulingMode? Should Inline mode assume the developer is going to write ideal code and never block the app loop? Or are there some conditions where we don't trust the app enough and always offload to a background thread like with the initial request above?","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2670","RelatedDescription":"Closed or merged PR \"Prevent app code from blocking the connection loop \" (#2670)"},{"Id":"333837427","IsPullRequest":true,"CreatedAt":"2018-06-19T22:45:50","Actor":"Tratcher","Number":"2677","RawContent":null,"Title":"Set Min OS version for ALPN tests at Win 8.1.","State":"closed","Body":"This skips tests failing on downlevel CIs.\r\n\r\nWin8.1 is the minimum supported version for ALPN.\r\n\r\n@shirhatti ","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2677","RelatedDescription":"Closed or merged PR \"Set Min OS version for ALPN tests at Win 8.1.\" (#2677)"},{"Id":"333779010","IsPullRequest":false,"CreatedAt":"2018-06-19T19:48:30","Actor":"johnkwaters","Number":"2676","RawContent":null,"Title":"Response Body written to by Middleware not returned","State":"closed","Body":"I have a net core 2.1 middleware that does this:\r\n\r\n```\r\n        public async Task InvokeAsync(HttpContext context, IUserSession session)\r\n        {\r\n            if (context.User.Identity.IsAuthenticated && session.TenantId>0)\r\n            {\r\n                var path = context.Request.Path;\r\n\r\n                if (!session.IsConsentGranted)\r\n                {\r\n\r\n                }\r\n\r\n                if (!session.IsEmailValidated)\r\n                {\r\n                    if (!_validPathsForNonValidatedEmail.Any( p => p.Equals(path, StringComparison.InvariantCultureIgnoreCase)))\r\n                    {\r\n                        if (!context.Response.HasStarted)\r\n                        {\r\n                            using (var writer = new StreamWriter(context.Response.Body))\r\n                            {\r\n                                context.Response.StatusCode = (int)HttpStatusCode.Forbidden;\r\n                                context.Response.ContentType = \"application/json\";\r\n                                await writer.WriteAsync(JsonConvert.SerializeObject(\r\n                                    new ServerError\r\n                                    {\r\n                                        Code = 1,\r\n                                        Error = \"User email has not been validated. Please confirm email.\"\r\n                                    }));\r\n                            }\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Call the next delegate/middleware in the pipeline\r\n            await _next.Invoke(context);\r\n        }\r\n```\r\n\r\nThe 403 status code is returned, but no response body.\r\n\r\nI have tried using await context.Response.WriteAsync instead of the StreamWriter, same issue.\r\n\r\nWhat am I doing wrong?","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2676","RelatedDescription":"Closed issue \"Response Body written to by Middleware not returned\" (#2676)"},{"Id":"333776024","IsPullRequest":true,"CreatedAt":"2018-06-19T19:17:27","Actor":"Tratcher","Number":"2675","RawContent":null,"Title":"Add TLS filter sample","State":"closed","Body":"This is the last part of HTTP/2 TLS restrictions #2251 \r\n- SHOULD NOT use any of the cipher suites that are listed in the cipher suite black list\r\n\r\nSince this is a SHOULD we don't want to add a hardcoded prohibition for it. The list is also 12 pages long and would be expensive to check on each request. Users are better off configuring their TLS provider to refuse these ciphers, but if they need to check for some specific ones they can do that as shown in this sample. \r\n\r\n@blowdart does this look workable?","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2675","RelatedDescription":"Closed or merged PR \"Add TLS filter sample\" (#2675)"},{"Id":"331379392","IsPullRequest":false,"CreatedAt":"2018-06-19T16:05:01","Actor":"Tratcher","Number":"2661","RawContent":null,"Title":"Surface TLS handshake results as IFeature","State":"closed","Body":"Related: https://github.com/aspnet/HttpSysServer/issues/83\r\n\r\nWhen the handshake completes it can be interesting to see what was agreed to. E.g. What algorithms were negotiated, what's their strength, etc..  SslStream exposes these as properties that are populated after the handshake.\r\n\r\nSee https://msdn.microsoft.com/en-us/library/system.net.security.sslstream(v=vs.110).aspx\r\n\r\nNeeded for https://github.com/aspnet/KestrelHttpServer/issues/2251","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2661","RelatedDescription":"Closed issue \"Surface TLS handshake results as IFeature\" (#2661)"},{"Id":"332121115","IsPullRequest":true,"CreatedAt":"2018-06-19T16:04:17","Actor":"Tratcher","Number":"2665","RawContent":null,"Title":"Tls details and Http/2 restrictions","State":"closed","Body":"Expose Tls details as a feature. #2661\r\nLimit Http/2 to TLS 1.2 #2251\r\nBootstrap functional tests #2238\r\n\r\n~~TODO: Move ITlsHandshakeFeature to HttpAbstractions. Make sure it will work with HttpSys and IIS inproc~~\r\n\r\nDepends on https://github.com/aspnet/Common/pull/380","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2665","RelatedDescription":"Closed or merged PR \"Tls details and Http/2 restrictions\" (#2665)"},{"Id":"333434660","IsPullRequest":true,"CreatedAt":"2018-06-18T23:19:39","Actor":"Tratcher","Number":"2674","RawContent":null,"Title":"Remove AppVeyor and Travis","State":"closed","Body":"Per @natemcmaster's offline request. He was going to remove these shortly anyways.\r\nThis also unblocks https://github.com/aspnet/KestrelHttpServer/pull/2665#issuecomment-398174362","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2674","RelatedDescription":"Closed or merged PR \"Remove AppVeyor and Travis\" (#2674)"},{"Id":"333071766","IsPullRequest":false,"CreatedAt":"2018-06-17T15:41:11","Actor":"kabazakra","Number":"2673","RawContent":null,"Title":"Huge byte[] allocations in Large Object Heap after big load","State":"open","Body":"Hi\r\n\r\nI am playing with performance tests for my app. It uses AspNet.Core  + Kestrel ver. 1.1.2. Response size is pretty big, in average about 2MB, so app takes a lot of memory during testing. But what is strange, it doesn't free memory even if testing is completed. Profiler shows a big amount of byte arrays referenced by MemoryChunk and MemoryPool. \r\nIs there a way to reduce pool size if the app in the standby state?  Maybe some configs exist? What is the common strategy for Kestrel in this case? Should it keep allocated bytes forever? \r\nAlso, app throws OutOfMemory from time to time, is there some kind of limit for pool size, I would prefer to drop connection rather than lost my app at all on huge load,\r\n\r\nThank you in advance.\r\nIhor\r\n","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2673","RelatedDescription":"Open issue \"Huge byte[] allocations in Large Object Heap after big load\" (#2673)"},{"Id":"332473580","IsPullRequest":false,"CreatedAt":"2018-06-16T08:38:42","Actor":"nockawa","Number":"2667","RawContent":null,"Title":"ThrowResponseAlreadyStartedException while setting StatusCode in a Controller method","State":"closed","Body":"My use case is pretty simple, I have a method from an asp.net core 2.1 controller that is call for a given `post` request. \r\n\r\nAll I want to do is write some binary data in the `Response.Body` and set the `Response.StatusCode`.\r\n\r\nNo matter what I try it throws a `ThrowResponseAlreadyStartedException` stating: \r\n\r\n`StatusCode cannot be set because the response has already started.`\r\n\r\nAll I want to do is something like this:\r\n\r\n```csharp\r\nResponse.ContentType = \"application/octet-stream\";\r\nResponse.Body.Write(someData, 0, someData.Length);\r\nResponse.StatusCode = (int) HttpStatusCode.OK;\r\n```\r\nMaybe I'm not using the right way to write binary data in the Response's body but that's the only one I came up with. Changing the signature of my method to return `Task<ActionResult<byte[]>>` won't do the trick to return binary data.","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2667","RelatedDescription":"Closed issue \"ThrowResponseAlreadyStartedException while setting StatusCode in a Controller method\" (#2667)"},{"Id":"332943859","IsPullRequest":false,"CreatedAt":"2018-06-16T00:05:37","Actor":"halter73","Number":"2672","RawContent":null,"Title":"Fix HTTP/2 abort logic so it works despite backpressure","State":"open","Body":"Using Pipe APIs as the sole means to abort a connection does not work reliably if there is no guarantee that the pipe consumer will ever stop experiencing backpressure.\r\n\r\nThis is relevant to the current HTTP/2 implementation because Http2Connection.Abort() calls through to [Http2FrameWriter.Abort()](https://github.com/aspnet/KestrelHttpServer/blob/14f020cf11c0d79472c9080064c8899e52c24b3c/src/Kestrel.Core/Internal/Http2/Http2FrameWriter.cs#L35-L48) which tries to abort the connection simply by calling PipeReader.CancelPendingRead() and PipeWriter.Complete(Exception).\r\n\r\nNeither CancelPendingRead nor Complete will be observed by a transport that is experiencing backpressure because there is no pending ReadAsync call. Kestrel's libuv transport used to try to sidestep this issue by attaching an OnWriterCompleted callback, but even that proved insufficient because there was no way to abort the connection after the output had been completely buffered by the pipe and PipeWriter.Complete() had been called. Additionally, any connection adapters such as the one used to support SSL would prevent the transport's OnWriterCompleted callback from firing even when the output hadn't yet been completely buffered.\r\n\r\nThis issue was ultimately fixed for HTTP/1.1 by [this change](https://github.com/aspnet/KestrelHttpServer/commit/b0e1fa5e30fd3da74273d5117226f9a6073e8257#diff-4726ad98c86a27391cc7174486a258c1R194) which calls through to a new Abort() API implemented directly by the transports rather than trying to use Pipe APIs for that purpose. It's also important to note that the same change tracks the completion of the output pipe's reader loop to ensure it doesn't stall indefinitely trying to flush buffered data after a graceful call to PipeWriter.Complete().\r\n\r\nWe will have to make a similar fix for HTTP/2 connections before we can ship it.","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2672","RelatedDescription":"Open issue \"Fix HTTP/2 abort logic so it works despite backpressure\" (#2672)"},{"Id":"332489605","IsPullRequest":false,"CreatedAt":"2018-06-15T22:04:05","Actor":"mikeharder","Number":"2668","RawContent":null,"Title":"Flaky Test: DoesNotOverrideDirectConfigurationWithIServerAddressesFeature_IfPreferHostingUrlsFalse","State":"closed","Body":"https://ci3.dot.net/job/aspnet_KestrelHttpServer/job/dev/job/osx-Configuration_Debug_prtest/208/consoleFull\r\n```\r\n0:04:08    Failed   DoesNotOverrideDirectConfigurationWithIServerAddressesFeature_IfPreferHostingUrlsFalse\r\n10:04:08  RUNDOTNET : error Message:  [/Users/dotnet-bot/.dotnet/buildtools/korebuild/2.2.0-preview1-17087/KoreBuild.proj]\r\n10:04:08     System.IO.IOException : Authentication failed because the remote party has closed the transport stream.\r\n10:04:08    Stack Trace:\r\n10:04:08       at System.Net.Security.SslState.StartReadFrame(Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)\r\n10:04:08       at System.Net.Security.SslState.PartialFrameCallback(AsyncProtocolRequest asyncRequest)\r\n10:04:08    --- End of stack trace from previous location where exception was thrown ---\r\n10:04:08       at System.Net.Security.SslState.ThrowIfExceptional()\r\n10:04:08       at System.Net.Security.SslState.InternalEndProcessAuthentication(LazyAsyncResult lazyResult)\r\n10:04:08       at System.Net.Security.SslState.EndProcessAuthentication(IAsyncResult result)\r\n10:04:08       at System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult asyncResult)\r\n10:04:08       at System.Net.Security.SslStream.<>c.<AuthenticateAsClientAsync>b__46_2(IAsyncResult iar)\r\n10:04:08       at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n10:04:08    --- End of stack trace from previous location where exception was thrown ---\r\n10:04:08       at Microsoft.AspNetCore.Testing.HttpClientSlim.GetStream(Uri requestUri, Boolean validateCertificate)\r\n10:04:08       at Microsoft.AspNetCore.Testing.HttpClientSlim.GetStringAsync(Uri requestUri, Boolean validateCertificate)\r\n10:04:08       at Microsoft.AspNetCore.Testing.HttpClientSlim.GetStringAsync(String requestUri, Boolean validateCertificate)\r\n10:04:08       at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.AddressRegistrationTests.DoesNotOverrideDirectConfigurationWithIServerAddressesFeature_IfPreferHostingUrlsFalse() in /_/test/Kestrel.FunctionalTests/AddressRegistrationTests.cs:line 576\r\n10:04:08    --- End of stack trace from previous location where exception was thrown ---\r\n10:04:08    Standard Output Messages:\r\n10:04:08     | [0.001s] TestLifetime Information: Starting test DoesNotOverrideDirectConfigurationWithIServerAddressesFeature_IfPreferHostingUrlsFalse at 2018-06-14T17:04:01\r\n10:04:08     | [0.004s] Microsoft.AspNetCore.Hosting.Internal.WebHost Debug: Hosting starting\r\n10:04:08  RUNDOTNET : | [0.074s] Microsoft.AspNetCore.Server.Kestrel warning : Overriding address(es) 'http://127.0.0.1:0'. Binding to endpoints defined in UseKestrel() instead. [/Users/dotnet-bot/.dotnet/buildtools/korebuild/2.2.0-preview1-17087/KoreBuild.proj]\r\n10:04:08     | [0.080s] Microsoft.AspNetCore.Hosting.Internal.WebHost Debug: Hosting started\r\n10:04:08     | [0.080s] Microsoft.AspNetCore.Hosting.Internal.WebHost Debug: Loaded hosting startup assembly Libuv.FunctionalTests\r\n10:04:08     | [0.082s] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLEI32HAVP3J\" started.\r\n10:04:08     | [0.082s] Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv Debug: Connection id \"0HLEI32HAVP3J\" received FIN.\r\n10:04:08     | [0.083s] Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv Debug: Connection id \"0HLEI32HAVP3J\" sending FIN.\r\n10:04:08     | [0.085s] Microsoft.AspNetCore.Hosting.Internal.WebHost Debug: Hosting shutdown\r\n10:04:08     | [0.086s] HttpsConnectionAdapter Debug: Failed to authenticate HTTPS connection.\r\n10:04:08     | System.IO.IOException: Authentication failed because the remote party has closed the transport stream.\r\n10:04:08     |    at System.Net.Security.SslState.StartReadFrame(Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)\r\n10:04:08     |    at System.Net.Security.SslState.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n10:04:08     |    at System.Net.Security.SslState.ForceAuthentication(Boolean receiveFirst, Byte[] buffer, AsyncProtocolRequest asyncRequest)\r\n10:04:08     |    at System.Net.Security.SslState.ProcessAuthentication(LazyAsyncResult lazyResult)\r\n10:04:08     |    at System.Net.Security.SslStream.BeginAuthenticateAsServer(SslServerAuthenticationOptions sslServerAuthenticationOptions, CancellationToken cancellationToken, AsyncCallback asyncCallback, Object asyncState)\r\n10:04:08     |    at System.Net.Security.SslStream.<>c.<AuthenticateAsServerAsync>b__51_0(SslServerAuthenticationOptions arg1, CancellationToken arg2, AsyncCallback callback, Object state)\r\n10:04:08     |    at System.Threading.Tasks.TaskFactory`1.FromAsyncImpl[TArg1,TArg2](Func`5 beginMethod, Func`2 endFunction, Action`1 endAction, TArg1 arg1, TArg2 arg2, Object state, TaskCreationOptions creationOptions)\r\n10:04:08     |    at System.Threading.Tasks.TaskFactory.FromAsync[TArg1,TArg2](Func`5 beginMethod, Action`1 endMethod, TArg1 arg1, TArg2 arg2, Object state, TaskCreationOptions creationOptions)\r\n10:04:08     |    at System.Threading.Tasks.TaskFactory.FromAsync[TArg1,TArg2](Func`5 beginMethod, Action`1 endMethod, TArg1 arg1, TArg2 arg2, Object state)\r\n10:04:08     |    at System.Net.Security.SslStream.AuthenticateAsServerAsync(SslServerAuthenticationOptions sslServerAuthenticationOptions, CancellationToken cancellationToken)\r\n10:04:08     |    at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionAdapter.InnerOnConnectionAsync(ConnectionAdapterContext context) in /_/src/Kestrel.Core/Internal/HttpsConnectionAdapter.cs:line 170\r\n10:04:08     | [0.088s] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLEI32HAVP3J\" stopped.\r\n10:04:08     | [0.101s] TestLifetime Information: Finished test DoesNotOverrideDirectConfigurationWithIServerAddressesFeature_IfPreferHostingUrlsFalse in 0.099813s\r\n```","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2668","RelatedDescription":"Closed issue \"Flaky Test: DoesNotOverrideDirectConfigurationWithIServerAddressesFeature_IfPreferHostingUrlsFalse\" (#2668)"},{"Id":"332886646","IsPullRequest":false,"CreatedAt":"2018-06-15T19:17:37","Actor":"Tratcher","Number":"2671","RawContent":null,"Title":"Http/2 Implement graceful shutdown request draining","State":"open","Body":"On IServer.StopAsync the server should wait for the given timeout (5s) for requests to complete. This hasn't been implemented yet for the HTTP/2 connections, all active requests are aborted immediately.","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2671","RelatedDescription":"Open issue \"Http/2 Implement graceful shutdown request draining\" (#2671)"},{"Id":"332150185","IsPullRequest":true,"CreatedAt":"2018-06-14T19:50:03","Actor":"mikeharder","Number":"2666","RawContent":null,"Title":"Prevent double-close race condition in ListenHandleTests.CanListenToOpenTcpSocketHandle()","State":"closed","Body":"- Assign managed socket to static field to prevent disposal\r\n- Addresses #2597","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2666","RelatedDescription":"Closed or merged PR \"Prevent double-close race condition in ListenHandleTests.CanListenToOpenTcpSocketHandle()\" (#2666)"},{"Id":"332490152","IsPullRequest":false,"CreatedAt":"2018-06-14T17:12:22","Actor":"mikeharder","Number":"2669","RawContent":null,"Title":"Flaky Test: EmitsConnectionStartAndStop","State":"open","Body":"https://travis-ci.org/aspnet/KestrelHttpServer/jobs/392348045\r\n\r\n```\r\n  Failed   EmitsConnectionStartAndStop\r\n\u001b[39;49m\u001b[31mRUNDOTNET : error Message:  [/home/travis/.dotnet/buildtools/korebuild/2.2.0-preview1-17087/KoreBuild.proj]\r\n\u001b[39;49m   The collection contained 0 matching element(s) instead of 1.\r\n  Stack Trace:\r\n     at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.EventSourceTests.EmitsConnectionStartAndStop() in /_/test/Kestrel.FunctionalTests/EventSourceTests.cs:line 64\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n  Standard Output Messages:\r\n   | [0.001s] TestLifetime Information: Starting test EmitsConnectionStartAndStop at 2018-06-14T16:59:07\r\n   | [0.011s] Microsoft.AspNetCore.Hosting.Internal.WebHost Debug: Hosting starting\r\n   | [0.012s] Microsoft.AspNetCore.Hosting.Internal.WebHost Debug: Hosting started\r\n   | [0.012s] Microsoft.AspNetCore.Hosting.Internal.WebHost Debug: Loaded hosting startup assembly Sockets.FunctionalTests, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\r\n   | [0.019s] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLEI30GV9PVU\" started.\r\n   | [1.691s] Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request starting HTTP/1.1 GET http:///  \r\n   | [1.692s] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLEI30GV9PVU\" completed keep alive response.\r\n   | [1.693s] Microsoft.AspNetCore.Hosting.Internal.WebHost Information: Request finished in 1.4053ms 200 \r\n   | [2.166s] Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets Debug: Connection id \"0HLEI30GV9PVU\" received FIN.\r\n   | [2.166s] Microsoft.AspNetCore.Hosting.Internal.WebHost Debug: Hosting shutdown\r\n   | [2.166s] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLEI30GV9PVU\" disconnecting.\r\n   | [2.166s] Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets Debug: Connection id \"0HLEI30GV9PVU\" sending FIN.\r\n   | [2.167s] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"0HLEI30GV9PVU\" stopped.\r\n   | [2.473s] TestLifetime Information: Finished test EmitsConnectionStartAndStop in 2.4720806s\r\n```","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2669","RelatedDescription":"Open issue \"Flaky Test: EmitsConnectionStartAndStop\" (#2669)"},{"Id":"331782410","IsPullRequest":true,"CreatedAt":"2018-06-13T20:22:33","Actor":"mikeharder","Number":"2663","RawContent":null,"Title":"Skip ListenHandleTests.CanListenToOpenTcpSocketHandle()","State":"closed","Body":"- Addresses #2597","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2663","RelatedDescription":"Closed or merged PR \"Skip ListenHandleTests.CanListenToOpenTcpSocketHandle()\" (#2663)"},{"Id":"331799318","IsPullRequest":true,"CreatedAt":"2018-06-13T18:25:03","Actor":"JunTaoLuo","Number":"2664","RawContent":null,"Title":"Convert to using definitions from HeaderNames","State":"closed","Body":"Second part of https://github.com/aspnet/Home/issues/2812. ","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2664","RelatedDescription":"Closed or merged PR \"Convert to using definitions from HeaderNames\" (#2664)"},{"Id":"331727160","IsPullRequest":true,"CreatedAt":"2018-06-12T22:49:50","Actor":"mikeharder","Number":"2662","RawContent":null,"Title":"Skip ListenHandleTests.CanListenToOpenTcpSocketHandle()","State":"closed","Body":"- Addresses https://github.com/aspnet/KestrelHttpServer/issues/2597","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2662","RelatedDescription":"Closed or merged PR \"Skip ListenHandleTests.CanListenToOpenTcpSocketHandle()\" (#2662)"},{"Id":"331324804","IsPullRequest":true,"CreatedAt":"2018-06-11T23:43:34","Actor":"halter73","Number":"2660","RawContent":null,"Title":"React to aspnet/BuildTools#684","State":"closed","Body":"This should fix the travis linux builds.\r\n\r\naspnet/BuildTools#684","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2660","RelatedDescription":"Closed or merged PR \"React to aspnet/BuildTools#684\" (#2660)"},{"Id":"329560884","IsPullRequest":false,"CreatedAt":"2018-06-11T21:34:22","Actor":"Tratcher","Number":"2651","RawContent":null,"Title":"H2Spec ArgumentOutOfRangeException ","State":"closed","Body":"This happens on h2spec (v2.1) test http2/4.2 and the test hangs afterwards. Repros with and without TLS.\r\n```\r\ncrit: Microsoft.AspNetCore.Server.Kestrel[0]\r\n      Unexpected exception in HttpConnection.ProcessRequestsAsync.\r\nSystem.ArgumentOutOfRangeException: Specified argument was out of the range of valid values.\r\n   at System.Span`1..ctor(T[] array, Int32 start, Int32 length)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2Frame.get_Raw() in D:\\github\\AspNet\\KestrelHttpServer\\src\\Kestrel.Core\\Internal\\Http2\\Http2Frame.cs:line 22\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2FrameReader.ReadFrame(ReadOnlySequence`1 readableBuffer, Http2Frame frame, SequencePosition& consumed, SequencePosition& examined) in D:\\github\\AspNet\\KestrelHttpServer\\src\\Kestrel.Core\\Internal\\Http2\\Http2FrameReader.cs:line 23\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2Connection.ProcessRequestsAsync[TContext](IHttpApplication`1 application) in D:\\github\\AspNet\\KestrelHttpServer\\src\\Kestrel.Core\\Internal\\Http2\\Http2Connection.cs:line 160\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2Connection.ProcessRequestsAsync[TContext](IHttpApplication`1 application) in D:\\github\\AspNet\\KestrelHttpServer\\src\\Kestrel.Core\\Internal\\Http2\\Http2Connection.cs:line 221\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.HttpConnection.ProcessRequestsAsync[TContext](IHttpApplication`1 httpApplication) in D:\\github\\AspNet\\KestrelHttpServer\\src\\Kestrel.Core\\Internal\\HttpConnection.cs:line 185\r\ndbug: Microsoft.AspNetCore.Server.Kestrel[2]\r\n      Connection id \"0HLEB1F2PS7B8\" stopped.\r\n```\r\n\r\nNote this is most visible when running the full h2spec test suite from the command line against the http/2 sample app. Running the individual test cases from VS does not hang.","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2651","RelatedDescription":"Closed issue \"H2Spec ArgumentOutOfRangeException \" (#2651)"},{"Id":"330491888","IsPullRequest":true,"CreatedAt":"2018-06-11T21:33:59","Actor":"Tratcher","Number":"2656","RawContent":null,"Title":"Enforce max frame size ","State":"closed","Body":"#2651 The MaxFrameSize setting wasn't being enforced so instead you'd get an ArgumentOutOfRangeException for frames larger than the buffer. The h2spec test 4.2 found this, but it wasn't actually failing because the exception was still handled and terminated the connection, only with the wrong http2 error.","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2656","RelatedDescription":"Closed or merged PR \"Enforce max frame size \" (#2656)"},{"Id":"329542022","IsPullRequest":true,"CreatedAt":"2018-06-11T20:51:56","Actor":"Tratcher","Number":"2650","RawContent":null,"Title":"Disable AllowRenegotiation for HTTP/2","State":"closed","Body":"#2251 This is a spec requirement.\r\n\r\nI can't directly test it because SslStream doesn't have a client API to trigger a renegotiate. I added a test to ensure this didn't regress 1.1 client certs since renegotiation is often used to request optional client certs. We'll have to figure out http2 functional tests before I can write a http2 client cert test.","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2650","RelatedDescription":"Closed or merged PR \"Disable AllowRenegotiation for HTTP/2\" (#2650)"},{"Id":"330461750","IsPullRequest":true,"CreatedAt":"2018-06-11T18:02:42","Actor":"ryanbrandenburg","Number":"2655","RawContent":null,"Title":"Adding VSTS file","State":"closed","Body":null,"Url":"https://github.com/aspnet/KestrelHttpServer/pull/2655","RelatedDescription":"Closed or merged PR \"Adding VSTS file\" (#2655)"},{"Id":"331267177","IsPullRequest":false,"CreatedAt":"2018-06-11T16:47:38","Actor":"Tratcher","Number":"2659","RawContent":null,"Title":"Http2Stream.TryParseRequest needs to be able to respond with stream errors","State":"open","Body":"Http2Stream.TryParseRequest is where the basic request fields like method, scheme, path, etc. are validated. Per https://tools.ietf.org/html/rfc7540#section-8.1.2.6 and https://tools.ietf.org/html/rfc7540#section-5.4.2 if anythings wrong then the server should send back a RST_STREAM frame with PROTOCOL_ERROR.\r\n\r\nCurrent failures are reported via BadHttpRequestException, which HttpProtocol.ProcessRequestsAsync catches and turns into a 400 response. This is allowed: \"server MAY send an HTTP response prior to\r\n   closing or resetting the stream\", but this doesn't result in the expected RST_STREAM frame that would tell the client not to send the body.\r\n\r\nRelated:\r\n- https://github.com/aspnet/KestrelHttpServer/issues/2154 h2spec failure http2/8.1.2.3/1\r\n","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2659","RelatedDescription":"Open issue \"Http2Stream.TryParseRequest needs to be able to respond with stream errors\" (#2659)"},{"Id":"331035724","IsPullRequest":false,"CreatedAt":"2018-06-11T03:37:47","Actor":"zuosc","Number":"2658","RawContent":null,"Title":" Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvException: Error -107 ENOTCONN socket is not connected","State":"open","Body":"Error stack：\r\n\r\n```\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvException: Error -107 ENOTCONN socket is not connected\r\nat Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.ThrowError(Int32 statusCode)\r\nat Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.LibuvFunctions.tcp_getpeername(UvTcpHandle handle, SockAddr& addr, Int32& namelen)\r\nat Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvTcpHandle.GetPeerIPEndPoint()\r\nat Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.LibuvConnection..ctor(ListenerContext context, UvStreamHandle socket)\r\nat Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Listener.DispatchConnection(UvStreamHandle socket)\r\nat Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Listener.OnConnection(UvStreamHandle listenSocket, Int32 status)\r\n\r\n```\r\n\r\ndotnet --info:\r\n```\r\n.NET Command Line Tools (2.1.200)\r\n\r\nProduct Information:\r\n Version:            2.1.200\r\n Commit SHA-1 hash:  2edba8d7f1\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  16.04\r\n OS Platform: Linux\r\n RID:         ubuntu.16.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.1.200/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.7\r\n  Build    : 2d61d0b043915bc948ebf98836fefe9ba942be11\r\n```\r\n\r\n\r\nHow it works:\r\n\r\nIt's run with nginx.the nginx conf is:\r\n\r\n```\r\nserver {\r\n        listen 80;\r\n        server_name tmp.12**56.c**ud;\r\n\r\n    location / {\r\n        proxy_set_header   X-Real-IP $remote_addr;\r\n        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\r\n        proxy_set_header   Host      $http_host;\r\n        proxy_pass         http://1**.1**.2**.3*:12758/;\r\n    }\r\n}\r\n\r\n\r\nserver {\r\n        # SSL configuration\r\n\r\n        listen 443 ssl;\r\n        listen [::]:443 ssl;\r\n        ssl on;\r\n\r\n        server_name t*p.12***6.c****d;\r\n\r\n\r\n        ssl_certificate   /etc/nginx/***/fullchain.pem;\r\n        ssl_certificate_key  /etc/nginx/***/wildcard_123456cloud.pem;\r\n        ssl_session_timeout 5m;\r\n        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\r\n        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\r\n        ssl_prefer_server_ciphers on;\r\n\r\n        location / {\r\n                proxy_set_header   X-Real-IP $remote_addr;\r\n                proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\r\n                proxy_set_header   Host      $http_host;\r\n                proxy_pass         http://1**.1**.2**.3*:12758/;\r\n    }\r\n\r\n}\r\n\r\n```\r\n#Important#\r\n\r\nif I deploy the web  on local,then  the nginx conf:[proxy_pass] use  http://127.0.0.1:12758/: ,  everything is ok!\r\n\r\nbut if i deploy the web on remote server,and  the nginx conf:[proxy_pass] use http://1**.1**.2**.3*:12758/;  it's wrong with 'Error -107 ENOTCONN socket is not connected'\r\n\r\n","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2658","RelatedDescription":"Open issue \" Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.Internal.Networking.UvException: Error -107 ENOTCONN socket is not connected\" (#2658)"},{"Id":"330450502","IsPullRequest":true,"CreatedAt":"2018-06-08T01:51:46","Actor":"Tratcher","Number":"2654","RawContent":null,"Title":"Harden TFM checks","State":"closed","Body":"#2624 This avoids regressions when the project TFMs change.","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2654","RelatedDescription":"Closed or merged PR \"Harden TFM checks\" (#2654)"},{"Id":"330410502","IsPullRequest":true,"CreatedAt":"2018-06-07T19:46:27","Actor":"Tratcher","Number":"2653","RawContent":null,"Title":"Automation for h2spec functional tests ","State":"open","Body":"#2640 These won't pass on the CI yet because we still need to work out the acquisition mechanism for the h2spec binaries. The test code should be reviewable though.\r\n\r\nDepends on https://github.com/aspnet/Universe/pull/1222","Url":"https://github.com/aspnet/KestrelHttpServer/pull/2653","RelatedDescription":"Open PR \"Automation for h2spec functional tests \" (#2653)"},{"Id":"330178125","IsPullRequest":false,"CreatedAt":"2018-06-07T16:13:29","Actor":"qqbuby","Number":"2652","RawContent":null,"Title":"System.ObjectDisposedException: Cannot access a disposed object. Object name: 'MemoryPoolBlock'","State":"closed","Body":"```txt\r\n2018/06/07 04:47:53 +00:00 [Error].[Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets].[].[]\r\nUnexpected exception in SocketConnection.StartAsync. System.ObjectDisposedException: Cannot access a disposed object.\r\nObject name: 'MemoryPoolBlock'.\r\n   at System.Buffers.ThrowHelper.ThrowObjectDisposedException(ExceptionArgument argument)\r\n   at System.Buffers.MemoryPoolBlock.Dispose()\r\n   at System.IO.Pipelines.BufferSegment.ResetMemory()\r\n   at System.IO.Pipelines.Pipe.CompletePipe()\r\n   at System.IO.Pipelines.Pipe.CompleteWriter(Exception exception)\r\n   at System.IO.Pipelines.Pipe.DefaultPipeWriter.Complete(Exception exception)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal.SocketConnection.DoReceive()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.Internal.SocketConnection.StartAsync(IConnectionDispatcher connectionDispatcher)\r\n```","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2652","RelatedDescription":"Closed issue \"System.ObjectDisposedException: Cannot access a disposed object. Object name: 'MemoryPoolBlock'\" (#2652)"},{"Id":"329523704","IsPullRequest":false,"CreatedAt":"2018-06-05T16:02:24","Actor":"Tratcher","Number":"2649","RawContent":null,"Title":"Http/2 support for HTTP_1_1_REQUIRED","State":"open","Body":"https://tools.ietf.org/html/rfc7540#section-7\r\n   HTTP_1_1_REQUIRED (0xd):  The endpoint requires that HTTP/1.1 be use instead of HTTP/2.\r\n\r\nThis may require a public API for the application to request a downgrade. E.g. If you go to a websocket endpoint over http/2. Windows auth is another scenario. Any other use cases? \r\n\r\nSending a 400 Bad Request is the workaround. ","Url":"https://github.com/aspnet/KestrelHttpServer/issues/2649","RelatedDescription":"Open issue \"Http/2 support for HTTP_1_1_REQUIRED\" (#2649)"}],"ResultType":"GitHubIssue"},"Razor-Issues":{"Issues":[{"Id":"334294891","IsPullRequest":true,"CreatedAt":"2018-06-21T00:30:45","Actor":"ajaybhargavb","Number":"2424","RawContent":null,"Title":"Converted more parser tests to baselines","State":"open","Body":"#2263 \r\n\r\n- Converted `CSharpAutoCompleteTest` to use baselines\r\n- More changes to the serializer to include symbols\r\n- Regenerated baselines","Url":"https://github.com/aspnet/Razor/pull/2424","RelatedDescription":"Open PR \"Converted more parser tests to baselines\" (#2424)"},{"Id":"334287257","IsPullRequest":false,"CreatedAt":"2018-06-20T23:45:53","Actor":"NTaylorMullen","Number":"2423","RawContent":null,"Title":"Add version file to prevent VS insertion merge conflicts.","State":"open","Body":"Need to figure out how to get the following into the vsmanproj:\r\n\r\n```XML\r\n<PropertyGroup>\r\n    <ManifestBuildVersion>$(ManifestBuildVersion)</ManifestBuildVersion>\r\n</PropertyGroup>\r\n```","Url":"https://github.com/aspnet/Razor/issues/2423","RelatedDescription":"Open issue \"Add version file to prevent VS insertion merge conflicts.\" (#2423)"},{"Id":"333963412","IsPullRequest":false,"CreatedAt":"2018-06-20T07:54:40","Actor":"eguzelkucuk","Number":"2422","RawContent":null,"Title":"Asp.net core 2.1.0 RazorTemplateEngine not working","State":"open","Body":"I am doing html minify on razortemplate engine on compiletime on asp.net core, but razortemplate engine does not work after updating project asp.net core 2.1.0.\r\n\r\nIt does not call CreateCodeDocument method. sample code below.\r\n\r\n```\r\npublic class CustomRazorTemplateEngine : RazorTemplateEngine\r\n{\r\nprivate HtmlMinifier _htmlMinifier = new HtmlMinifier();\r\n\r\npublic CustomRazorTemplateEngine(RazorEngine engine, RazorProject project) : base(engine, project)\r\n{\r\n    Options.ImportsFileName = \"_ViewImports.cshtml\";\r\n}\r\n\r\npublic override RazorCodeDocument CreateCodeDocument(RazorProjectItem projectItem)\r\n{\r\n    using (var inputStream = projectItem.Read())\r\n    {\r\n        using (var reader = new StreamReader(inputStream))\r\n        {\r\n            var text = reader.ReadToEnd();\r\n\r\n            var markupStart = text.IndexOf(\"<!DOCTYPE\");\r\n            var directives = text.Substring(0, markupStart);\r\n            var markup = text.Substring(markupStart);\r\n            text = directives + Minify(markup);\r\n            var byteArray = Encoding.UTF8.GetBytes(text);\r\n            var minifiedInputStream = new MemoryStream(byteArray);\r\n\r\n            var source = RazorSourceDocument.ReadFrom(minifiedInputStream, projectItem.PhysicalPath);\r\n            var imports = GetImports(projectItem);\r\n\r\n            return RazorCodeDocument.Create(source, imports);\r\n        }\r\n    }\r\n}\r\n\r\nprivate string Minify(string markup)\r\n{\r\n    MarkupMinificationResult result = _htmlMinifier.Minify(markup, string.Empty, Encoding.UTF8, true);\r\n\r\n    if (result.Errors.Count == 0)\r\n    {\r\n        MinificationStatistics statistics = result.Statistics;\r\n        if (statistics != null)\r\n        {\r\n            Console.WriteLine();\r\n            Console.WriteLine($\"Original size: {statistics.OriginalSize:N0} Bytes | Minified size: {statistics.MinifiedSize:N0} Bytes | Saved: {statistics.SavedInPercent:N2}%\");\r\n        }\r\n        //Console.WriteLine($\"{Environment.NewLine}Minified content:{Environment.NewLine}{Environment.NewLine}{result.MinifiedContent}\");\r\n\r\n        return result.MinifiedContent;\r\n    }\r\n    else\r\n    {\r\n        IList<MinificationErrorInfo> errors = result.Errors;\r\n\r\n        Console.WriteLine();\r\n        Console.WriteLine($\"Found {errors.Count:N0} error(s):\");\r\n\r\n        foreach (var error in errors)\r\n        {\r\n            Console.WriteLine($\" - Line {error.LineNumber}, Column {error.ColumnNumber}: {error.Message}\");\r\n        }\r\n\r\n        return markup;\r\n    }\r\n}\r\n}\r\n```\r\n\r\nstartup.cs\r\n`services.AddSingleton<RazorTemplateEngine, CustomRazorTemplateEngine>();`","Url":"https://github.com/aspnet/Razor/issues/2422","RelatedDescription":"Open issue \"Asp.net core 2.1.0 RazorTemplateEngine not working\" (#2422)"},{"Id":"333869014","IsPullRequest":false,"CreatedAt":"2018-06-19T23:03:17","Actor":"NTaylorMullen","Number":"2421","RawContent":null,"Title":"Port VS15.8 Razor editor fixes over to VS4Mac VS15.8","State":"open","Body":"- 59baad17dadb952742e8649350669551c1708967\r\n- #2410 - 41fad8a33a3e02bd53f01c58a96bc87c5711a32f\r\n- #2408 - 1aa15374b53fb80a6307d3494dde393e70f070a4\r\n- #2336 - 7c70207594d337f41029e3abc287eb6482eaecc0\r\n- #1255 - af63afdae713f6eb4126eb1f2e70c7ff9061e7b4  d6f3a1bd223ef9d7dc56b16f1da6bdb88fb0264f\r\n- #2299 - dc76027a7affd0a9fa4bac8bbaf07ed1effdf687\r\n- #2297 - b2ec9390065cee0a656c182485599753f9be21bb\r\n\r\n","Url":"https://github.com/aspnet/Razor/issues/2421","RelatedDescription":"Open issue \"Port VS15.8 Razor editor fixes over to VS4Mac VS15.8\" (#2421)"},{"Id":"332097147","IsPullRequest":true,"CreatedAt":"2018-06-19T22:58:07","Actor":"ajaybhargavb","Number":"2402","RawContent":null,"Title":"Convert parser tests to use baselines","State":"closed","Body":"#2263 \r\n\r\n- Added the infrastructure to serialize and verify parser tests with baselines\r\n- Updated CSharpVerbatimBlockTest and CSharpReservedWordsTest to use the new infrastructure\r\n\r\nUpcoming changes: (Sending this separately so that the current PR stays easy to review)\r\n- Make all the remaining parser tests use the new infrastructure\r\n- Cleanup and remove unnecessary overloads in ParserTestBase","Url":"https://github.com/aspnet/Razor/pull/2402","RelatedDescription":"Closed or merged PR \"Convert parser tests to use baselines\" (#2402)"},{"Id":"333865895","IsPullRequest":true,"CreatedAt":"2018-06-19T22:47:52","Actor":"NTaylorMullen","Number":"2420","RawContent":null,"Title":"Update Razor SDK packing logic to not include Pack at properties layer.","State":"open","Body":"- We now rely on the Razor source inputs layer to add packing to cshtml content items.\r\n\r\n#2378 \r\n#2384 \r\n\r\n@mkArtakMSFT This is ready to go, let me know when i'm good to merge.","Url":"https://github.com/aspnet/Razor/pull/2420","RelatedDescription":"Open PR \"Update Razor SDK packing logic to not include Pack at properties layer.\" (#2420)"},{"Id":"333809117","IsPullRequest":true,"CreatedAt":"2018-06-19T22:28:51","Actor":"NTaylorMullen","Number":"2418","RawContent":null,"Title":"Update Razor SDK packing logic to not include Pack at properties layer.","State":"closed","Body":"- We now rely on the Razor source inputs layer to add packing to cshtml content items.\r\n- **NOTE:** VS doesn't respect the Razor sdk reference as part of packages for design time builds; therefore, in order for this change to truly fix the RCL -> copy scenario users will need a new CLI that has these Razor sdk changes included.\r\n\r\nWill port this to the 2.1 patch branch once this PR is signed off on.:\r\n\r\n![image](https://i.imgur.com/0XUKMSz.gif)\r\n\r\n#2378 \r\n","Url":"https://github.com/aspnet/Razor/pull/2418","RelatedDescription":"Closed or merged PR \"Update Razor SDK packing logic to not include Pack at properties layer.\" (#2418)"},{"Id":"332895104","IsPullRequest":true,"CreatedAt":"2018-06-19T22:23:02","Actor":"ajaybhargavb","Number":"2409","RawContent":null,"Title":"Handle pipe names with whitespace properly","State":"closed","Body":"Fixes #2406 \r\n\r\nThe actual bug here was that I was not passing the pipe name in the process arguments within quotes 🤦‍♂️ \r\n\r\n- Added an integration test to verify this fix\r\n- Added more logging to make sure command parsing errors gets logged\r\n\r\n@mkArtakMSFT FYI","Url":"https://github.com/aspnet/Razor/pull/2409","RelatedDescription":"Closed or merged PR \"Handle pipe names with whitespace properly\" (#2409)"},{"Id":"333807718","IsPullRequest":false,"CreatedAt":"2018-06-19T21:53:11","Actor":"ajaybhargavb","Number":"2416","RawContent":null,"Title":"Add perf benchmarks for the parser","State":"closed","Body":"As part of #2263, we want to have a way of making sure our parser doesn't regress in performance as we make improvements to it.","Url":"https://github.com/aspnet/Razor/issues/2416","RelatedDescription":"Closed issue \"Add perf benchmarks for the parser\" (#2416)"},{"Id":"333808839","IsPullRequest":true,"CreatedAt":"2018-06-19T21:52:47","Actor":"ajaybhargavb","Number":"2417","RawContent":null,"Title":"Added benchmarks for syntax tree generation","State":"closed","Body":"#2416 \r\n\r\n```\r\n                                                Method |     Mean |    Error |    StdDev |  Op/s |   Gen 0 | Allocated |\r\n------------------------------------------------------ |---------:|---------:|----------:|------:|--------:|----------:|\r\n 'Razor Design Time Syntax Tree Generation of MSN.com' | 127.8 ms | 1.170 ms | 0.9769 ms | 7.824 | 62.5000 |  30.45 MB |\r\n     'Razor Runtime Syntax Tree Generation of MSN.com' | 125.1 ms | 1.604 ms | 1.4218 ms | 7.994 | 62.5000 |  30.45 MB |\r\n```","Url":"https://github.com/aspnet/Razor/pull/2417","RelatedDescription":"Closed or merged PR \"Added benchmarks for syntax tree generation\" (#2417)"},{"Id":"333781536","IsPullRequest":true,"CreatedAt":"2018-06-19T20:31:51","Actor":"pranavkm","Number":"2415","RawContent":null,"Title":"Don't specify MainEntryPoint when compiling Razor assembly","State":"closed","Body":"Fixes https://github.com/aspnet/Razor/issues/2398","Url":"https://github.com/aspnet/Razor/pull/2415","RelatedDescription":"Closed or merged PR \"Don't specify MainEntryPoint when compiling Razor assembly\" (#2415)"},{"Id":"331262362","IsPullRequest":false,"CreatedAt":"2018-06-19T20:31:51","Actor":"pranavkm","Number":"2398","RawContent":null,"Title":"ASP.NET Core 2.1 gives error CS2017: Cannot specify /main if building a module or library","State":"closed","Body":"Original issue: https://github.com/aspnet/websdk/issues/350\r\n\r\nSteps to reproduce:\r\n\r\n- Install .NET Core SDK 2.1\r\n- Create a new project with dotnet new \"asp.net core web app\"\r\n- The project compiles OK\r\n- Add element `<StartupObject>foo.Program</StartupObject>` to the csproj\r\n\r\nBuild fails with:\r\n\r\n1>CSC : error CS2017: Cannot specify /main if building a module or library\r\n\r\nThis error did not occur with 2.0. Also a plain .NET core console app initialized with dotnet new \"console application\" does not have this problem.\r\n","Url":"https://github.com/aspnet/Razor/issues/2398","RelatedDescription":"Closed issue \"ASP.NET Core 2.1 gives error CS2017: Cannot specify /main if building a module or library\" (#2398)"},{"Id":"333816482","IsPullRequest":false,"CreatedAt":"2018-06-19T19:57:51","Actor":"NTaylorMullen","Number":"2419","RawContent":null,"Title":"Investigate C# 7.3 & 8.0 impact","State":"open","Body":"Need to verify that there are no new language features that require changes in Razor.","Url":"https://github.com/aspnet/Razor/issues/2419","RelatedDescription":"Open issue \"Investigate C# 7.3 & 8.0 impact\" (#2419)"},{"Id":"332924009","IsPullRequest":false,"CreatedAt":"2018-06-19T03:38:26","Actor":"NTaylorMullen","Number":"2410","RawContent":null,"Title":"Functions block statements get extra newline","State":"closed","Body":"This is like https://github.com/aspnet/Razor/issues/2297 but for functions. The fix for #2297 was supposed to work for C# but it looks like content that's extra indented (by default `functions`) result in incorrect behavior. We need to be more restrictive in where our smart indenter applies.\r\n\r\n![image](https://i.imgur.com/9XPzvis.gif)","Url":"https://github.com/aspnet/Razor/issues/2410","RelatedDescription":"Closed issue \"Functions block statements get extra newline\" (#2410)"},{"Id":"333478599","IsPullRequest":true,"CreatedAt":"2018-06-19T03:38:02","Actor":"NTaylorMullen","Number":"2414","RawContent":null,"Title":"Don't smart indent code inside of Razor block constructs.","State":"closed","Body":"- Prior to this change we weren't strict enough with where our smart indenter ran. We made the assumption that every code block could be smart indented and then Roslyn would \"do the right thing\". However, in nested code block scenarios we found that Roslyn and us would both indent resulting in extra newlines. These changes make the criteria for applying smart indentation a little stricter.\r\n- Updated directive code block parsing to add a C# marker symbol in cases of an empty code block directive.\r\n- Added unit tests to verify new smart indenter behavior.\r\n- Updated existing tests to expect new syntax tree marker symbol for empty directive bits.\r\n- Regenerated baselines.\r\n\r\n![image](https://i.imgur.com/WpS0uad.gif)\r\n\r\n@rynowak / @ajaybhargavb if you could review asap por favor 😄, time sensitive\r\n\r\n#2410","Url":"https://github.com/aspnet/Razor/pull/2414","RelatedDescription":"Closed or merged PR \"Don't smart indent code inside of Razor block constructs.\" (#2414)"},{"Id":"332605313","IsPullRequest":false,"CreatedAt":"2018-06-19T00:12:04","Actor":"NTaylorMullen","Number":"2408","RawContent":null,"Title":"Any edit to functions directive content result in full reparses.","State":"closed","Body":"In larger file scenarios this results in the Razor experience flickering as mappings are re-generated repeatedly.","Url":"https://github.com/aspnet/Razor/issues/2408","RelatedDescription":"Closed issue \"Any edit to functions directive content result in full reparses.\" (#2408)"},{"Id":"332941098","IsPullRequest":true,"CreatedAt":"2018-06-19T00:11:41","Actor":"NTaylorMullen","Number":"2411","RawContent":null,"Title":"Add partial parsing of `@functions` directive body.","State":"closed","Body":"- Added ability to understand valid inserts, deletes and replacements for the `@functions` directive (and any other directive that uses our extensible code block bits).\r\n- Added unit tests.\r\n- Updated existing tests.\r\n- Found an issue when completing some C# items the auto-completions would impact the underlying snapshot after we'd captured the change. Fixed this by forcing a reparse when we detect that our understanding of the latest snapshot and the actual latest snapshot diverge.\r\n\r\n#2408","Url":"https://github.com/aspnet/Razor/pull/2411","RelatedDescription":"Closed or merged PR \"Add partial parsing of `@functions` directive body.\" (#2411)"},{"Id":"332276928","IsPullRequest":false,"CreatedAt":"2018-06-18T18:19:00","Actor":"Jenan","Number":"2404","RawContent":null,"Title":"How to use localization in Razor Class Library","State":"closed","Body":"I have tried to create the Razor Class Library with Asp.Net Core in following project structure:\r\n\r\n![alt text](https://user-images.githubusercontent.com/1324242/41396821-a231ab30-6fa1-11e8-992d-dacad64edbd6.png \"Logo Title Text 1\")\r\n\r\nI have used in my web application these settings for localization in `Startup` class:\r\n\r\n```cs\r\n    services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1)\r\n                    .AddViewLocalization(\r\n                        LanguageViewLocationExpanderFormat.Suffix,\r\n                        opts => { opts.ResourcesPath = \"Resources\"; })\r\n                    .AddDataAnnotationsLocalization();\r\n\r\n                services.Configure<RequestLocalizationOptions>(\r\n                    opts =>\r\n                    {\r\n                        var supportedCultures = new[]\r\n                        {\r\n                            new CultureInfo(\"en-US\"),\r\n                            new CultureInfo(\"en\")\r\n                        };\r\n\r\n                        opts.DefaultRequestCulture = new RequestCulture(\"en\");\r\n                        opts.SupportedCultures = supportedCultures;\r\n                        opts.SupportedUICultures = supportedCultures;\r\n                    });\r\n\r\n....\r\n\r\nvar options = app.ApplicationServices.GetService<IOptions<RequestLocalizationOptions>>();\r\n            app.UseRequestLocalization(options.Value);\r\n```\r\nIn` Index.cshtml`:\r\n```\r\n@using Microsoft.AspNetCore.Mvc.Localization\r\n@inject IViewLocalizer Localizer\r\n\r\n\r\n<h1>@Localizer[\"Title\"]</h1>\r\n```\r\nUnfortunately, the result is only string \"Title\". I can't load these resx files from Razor Class Library.\r\n\r\nHow can I use the localization in Razor Class Library like above?\r\n","Url":"https://github.com/aspnet/Razor/issues/2404","RelatedDescription":"Closed issue \"How to use localization in Razor Class Library\" (#2404)"},{"Id":"333150608","IsPullRequest":false,"CreatedAt":"2018-06-18T08:24:48","Actor":"szilarddavid","Number":"2412","RawContent":null,"Title":"Error when running in Azure App Service - Invalid name for a preprocessing symbol; '$(BUILDCONFIGURATION)'","State":"closed","Body":"Using NuGet package version 2.0.0-beta1\r\n\r\nI'm getting this error when running in Azure App Service, but it works on my dev machine.\r\n\r\nLooks to be somewhat similar to https://github.com/aspnet/Razor/issues/1686\r\n\r\nAny tips ?\r\nThanks\r\n\r\nThis is how the template is being complied\r\n\r\n`var engine = new RazorLightEngineBuilder().UseEmbeddedResourcesProject(typeof(MyAppNamespace)).UseMemoryCachingProvider()\r\n.Build();`\r\n\r\n`var templateKey = \"MyTemplateKey\";`\r\n\r\n`dynamic viewBag = new ExpandoObject();`\r\n\r\n`viewBag.AppName = \"MyAppName\";`\r\n\r\n`var template = await engine.CompileRenderAsync(templateKey, model, viewBag);`\r\n\r\n\r\nStack trace\r\n\r\nException has been thrown by the target of an invocation.\r\n System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.AggregateException: One or more errors occurred. (Failed to compile generated Razor template:\r\n - (0:0) Invalid name for a preprocessing symbol; '$(BUILDCONFIGURATION)' is not a valid identifier\r\n See CompilationErrors for detailed information\r\n ) ---> RazorLight.Compilation.TemplateCompilationException: Failed to compile generated Razor template:\r\n - (0:0) Invalid name for a preprocessing symbol; '$(BUILDCONFIGURATION)' is not a valid identifier\r\n See CompilationErrors for detailed information\r\n \r\n at RazorLight.Compilation.RoslynCompilationService.CompileAndEmit(IGeneratedRazorTemplate razorTemplate)\r\n at RazorLight.Compilation.RoslynCompilationService.CompileAsync(IGeneratedRazorTemplate razorTemplate)\r\n --- End of stack trace from previous location where exception was thrown ---\r\n at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n at RazorLight.Compilation.TemplateFactoryProvider.<CompileAsync>d__10.MoveNext()\r\n --- End of stack trace from previous location where exception was thrown ---\r\n at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n at RazorLight.Compilation.TemplateFactoryProvider.<CreateFactoryAsync>d__8.MoveNext()\r\n --- End of stack trace from previous location where exception was thrown ---\r\n at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n at RazorLight.RazorLightEngine.<CompileTemplateAsync>d__14.MoveNext()\r\n --- End of stack trace from previous location where exception was thrown ---\r\n at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n at RazorLight.RazorLightEngine.<CompileRenderAsync>d__11.MoveNext()\r\n --- End of stack trace from previous location where exception was thrown ---\r\n at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n at CallSite.Target(Closure , CallSite , Object )","Url":"https://github.com/aspnet/Razor/issues/2412","RelatedDescription":"Closed issue \"Error when running in Azure App Service - Invalid name for a preprocessing symbol; '$(BUILDCONFIGURATION)'\" (#2412)"},{"Id":"333167865","IsPullRequest":false,"CreatedAt":"2018-06-18T07:59:45","Actor":"Seabizkit","Number":"2413","RawContent":null,"Title":"Question: How would I intercept the completed render at compile time","State":"open","Body":"Hi \r\n\r\nI would like to know if it is possible to get the completed page render at compile time. (not chunks)\r\nhttps://github.com/aspnet/Razor/issues/444\r\nAs i get the impression that all compile type minifications **happen in chunks of sorts.**\r\n\r\nI would just like to run some regex on the finial entire render, is this possible?","Url":"https://github.com/aspnet/Razor/issues/2413","RelatedDescription":"Open issue \"Question: How would I intercept the completed render at compile time\" (#2413)"},{"Id":"332504706","IsPullRequest":true,"CreatedAt":"2018-06-15T20:53:39","Actor":"pranavkm","Number":"2405","RawContent":null,"Title":"Don't discover tag helpers if some references are missing","State":"closed","Body":"A common cause for runtime view compilation failure in MVC is when an application is published\r\nwithout reference assemblies. MVC usually handles this at compilation, by looking for specific\r\nerror codes. More recently, TagHelper discovery fails with an not-so-helpful error message in this\r\nscenario. This change attempts to add a little more error checking to cover the most common cases","Url":"https://github.com/aspnet/Razor/pull/2405","RelatedDescription":"Closed or merged PR \"Don't discover tag helpers if some references are missing\" (#2405)"},{"Id":"332122888","IsPullRequest":true,"CreatedAt":"2018-06-15T20:17:11","Actor":"NTaylorMullen","Number":"2403","RawContent":null,"Title":"Enable using directive IntelliSense auto-completion.","State":"closed","Body":"- Allow identical `@using` directives in the primary document. This means that if a user types `@using System` twice in the primary document (i.e. `Index.cshtml`) then we'll generate that using statement twice; this enables proper C# IntelliSense to light up on both using statements and allows auto-completion to work because there's no more magical distinction logic for Razor code that is in the current document.\r\n- Prior to this change if you had two identical using statements in the same document one would be in no-mans land mapped to nothing (not C#, not HTML) and the other would be mapped to C#; the second a user differentiated the two statements (i.e. adding a `.`) we'd distinctify the using statements resulting in an invalid completion.\r\n- Updated integration test to reflect new using ordering.\r\n- Added new integration test showing how using directives are not de-duplicated in the primary document.\r\n\r\n**Most controversial part of this PR:**\r\n- This PR has an end-user impact where they will now receive the normal C# warning about having duplicate using. I treated this prior behavior more as a bug because we threw away the first using directive instance which impacted editing and in general was a silly thing to correct for the user.\r\n\r\n#1255","Url":"https://github.com/aspnet/Razor/pull/2403","RelatedDescription":"Closed or merged PR \"Enable using directive IntelliSense auto-completion.\" (#2403)"},{"Id":"331731978","IsPullRequest":true,"CreatedAt":"2018-06-15T18:22:05","Actor":"NTaylorMullen","Number":"2399","RawContent":null,"Title":"Add partial parsing for parenthesis","State":"closed","Body":"Putting this out for design in case there are any other cases I missed that I didn't think of.\r\n\r\nThis is part of a fix for #1255 - this change enables signature help in implicit expressions by improving the partial parsing. We're now smart enough about the contents of an implicit expression and attempt to balance parenthesis to determine if we should not full parse.\r\n\r\n\r\n![image](https://i.imgur.com/VJaDEV4.gif)\r\n\r\n#1255 \r\n","Url":"https://github.com/aspnet/Razor/pull/2399","RelatedDescription":"Closed or merged PR \"Add partial parsing for parenthesis\" (#2399)"},{"Id":"332088735","IsPullRequest":true,"CreatedAt":"2018-06-14T23:43:33","Actor":"ryanbrandenburg","Number":"2400","RawContent":null,"Title":"Set 2.1 baselines","State":"closed","Body":null,"Url":"https://github.com/aspnet/Razor/pull/2400","RelatedDescription":"Closed or merged PR \"Set 2.1 baselines\" (#2400)"},{"Id":"332088790","IsPullRequest":true,"CreatedAt":"2018-06-14T23:43:23","Actor":"ryanbrandenburg","Number":"2401","RawContent":null,"Title":"Set 2.1 baselines","State":"closed","Body":null,"Url":"https://github.com/aspnet/Razor/pull/2401","RelatedDescription":"Closed or merged PR \"Set 2.1 baselines\" (#2401)"},{"Id":"332532975","IsPullRequest":false,"CreatedAt":"2018-06-14T19:25:51","Actor":"pranavkm","Number":"2407","RawContent":null,"Title":"Port fix to https://github.com/aspnet/Razor/issues/2398 to 2.1.x","State":"open","Body":"Issue: https://github.com/aspnet/Razor/issues/2398","Url":"https://github.com/aspnet/Razor/issues/2407","RelatedDescription":"Open issue \"Port fix to https://github.com/aspnet/Razor/issues/2398 to 2.1.x\" (#2407)"},{"Id":"332504999","IsPullRequest":false,"CreatedAt":"2018-06-14T17:59:43","Actor":"mkArtakMSFT","Number":"2406","RawContent":null,"Title":"Slow Razor Build Times","State":"open","Body":"_From @barrettg on June 5, 2018 16:45_\n\nI am experiencing very slow build times after installing the 2.1 SDK on my Windows machine.  I'm creating a new project with `dotnet new mvc -au Individual` and then building with `dotnet build /clp:performancesummary`.  It seems the Razor build engine is the source of the problem:\r\n```Microsoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 47.36 ms for C:\\GitHub\\test\\test.csproj.\r\n  test -> C:\\GitHub\\test\\bin\\Debug\\netcoreapp2.1\\test.dll\r\n  test -> C:\\GitHub\\test\\bin\\Debug\\netcoreapp2.1\\test.Views.dll\r\n\r\nProject Evaluation Performance Summary:\r\n      294 ms  C:\\GitHub\\test\\test.csproj                 3 calls\r\n\r\nProject Performance Summary:\r\n    43474 ms  C:\\GitHub\\test\\test.csproj                 7 calls\r\n                260 ms  Restore                                    1 calls\r\n                  0 ms  _IsProjectRestoreSupported                 2 calls\r\n                  1 ms  _GenerateRestoreProjectPathWalk            1 calls\r\n                 21 ms  _GenerateRestoreGraphProjectEntry          1 calls\r\n                  4 ms  _GenerateProjectRestoreGraph               1 calls\r\n              43187 ms  Build                                      1 calls\r\n\r\nTarget Performance Summary:\r\n        0 ms  ResGen                                     1 calls\r\n        0 ms  _RazorPrepareForRun                        1 calls\r\n        0 ms  PrepareResourceNames                       1 calls\r\n        0 ms  PrepareForRazorCompile                     1 calls\r\n        0 ms  Compile                                    1 calls\r\n        0 ms  PrepareResources                           1 calls\r\n        0 ms  GetReferenceAssemblyPaths                  1 calls\r\n        0 ms  ResolvePackageDependenciesForBuild         1 calls\r\n        0 ms  ResolveRazorCompileInputs                  1 calls\r\n        0 ms  PrepareProjectReferences                   1 calls\r\n        0 ms  BeforeBuild                                1 calls\r\n        0 ms  AfterBuild                                 1 calls\r\n        0 ms  _GenerateRazorAssemblyInfo                 1 calls\r\n        0 ms  _CopySourceItemsToOutputDirectory          1 calls\r\n        0 ms  GenerateRazorTargetAssemblyInfo            1 calls\r\n        0 ms  CreateSatelliteAssemblies                  1 calls\r\n        0 ms  GetFrameworkPaths                          1 calls\r\n        0 ms  BeforeResGen                               1 calls\r\n        0 ms  InitializeSourceControlInformation         1 calls\r\n        0 ms  SetWin32ManifestProperties                 1 calls\r\n        0 ms  GenerateUserSecretsAttribute               1 calls\r\n        0 ms  CreateCustomManifestResourceNames          1 calls\r\n        0 ms  PrepareForRun                              1 calls\r\n        0 ms  BeforeCompile                              1 calls\r\n        0 ms  BeforeResolveReferences                    1 calls\r\n        0 ms  GenerateAssemblyInfo                       1 calls\r\n        0 ms  CoreBuild                                  1 calls\r\n        0 ms  AfterCompile                               1 calls\r\n        0 ms  AfterResGen                                1 calls\r\n        0 ms  RazorCompile                               1 calls\r\n        0 ms  AfterResolveReferences                     1 calls\r\n        0 ms  AddSourceRevisionToInformationalVersion    1 calls\r\n        0 ms  RazorGenerate                              1 calls\r\n        0 ms  _GetRestoreSettingsCurrentProject          1 calls\r\n        0 ms  _GenerateRestoreProjectPathItemsCurrentProject   1 calls\r\n        0 ms  PrepareForRazorGenerate                    1 calls\r\n        0 ms  GetTargetPath                              1 calls\r\n        0 ms  _GenerateProjectRestoreGraph               1 calls\r\n        0 ms  _DefaultMicrosoftNETPlatformLibrary        1 calls\r\n        0 ms  _GenerateRestoreGraphProjectEntry          1 calls\r\n        0 ms  _GenerateRestoreDependencies               1 calls\r\n        0 ms  _GenerateProjectRestoreGraphCurrentProject   1 calls\r\n        0 ms  BuildOnlySettings                          1 calls\r\n        0 ms  EnableIntermediateOutputPathMismatchWarning   1 calls\r\n        0 ms  EnsureTFMCompatibility                     1 calls\r\n        0 ms  _CheckForUnsupportedSelfContained          1 calls\r\n        0 ms  IncludeTransitiveProjectReferences         1 calls\r\n        0 ms  Build                                      1 calls\r\n        0 ms  _SetTargetFrameworkMonikerAttribute        1 calls\r\n        0 ms  ExpandSDKReferences                        1 calls\r\n        0 ms  ResolveSDKReferences                       1 calls\r\n        0 ms  ResolveLockFileAnalyzers                   1 calls\r\n        0 ms  _ResolveGeneratedRazorCompileInputs        1 calls\r\n        0 ms  _BeforeVBCSCoreCompile                     1 calls\r\n        0 ms  CollectPackageReferences                   2 calls\r\n        0 ms  _GetRestoreSettingsOverrides               1 calls\r\n        0 ms  ComputeDependencyFileCompilerOptions       1 calls\r\n        0 ms  _GetRestoreSettingsPerFramework            1 calls\r\n        0 ms  _CheckForObsoleteDotNetCliToolReferences   2 calls\r\n        0 ms  _CopyReferenceOnlyAssembliesForBuild       1 calls\r\n        0 ms  _SplitProjectReferencesByFileExistence     1 calls\r\n        0 ms  RazorGetAssemblyAttributes                 1 calls\r\n        0 ms  _CheckForUnsupportedNETCoreVersion         3 calls\r\n        0 ms  _GetRestoreProjectStyle                    2 calls\r\n        0 ms  _IsProjectRestoreSupported                 1 calls\r\n        0 ms  _GetProjectJsonPath                        2 calls\r\n        0 ms  GetAssemblyAttributes                      1 calls\r\n        0 ms  _GenerateRestoreProjectPathItems           1 calls\r\n        0 ms  _GenerateCompileInputs                     1 calls\r\n        0 ms  _ResolveRazorTargetPath                    1 calls\r\n        0 ms  GetRazorTargetAssemblyAttributes           1 calls\r\n        0 ms  GetTargetPathWithTargetPlatformMoniker     1 calls\r\n        0 ms  _RazorGetCopyToOutputDirectoryItems        1 calls\r\n        0 ms  _GenerateSatelliteAssemblyInputs           1 calls\r\n        0 ms  _ComputeNETCoreBuildOutputFiles            1 calls\r\n        0 ms  _CheckForCompileOutputs                    1 calls\r\n        0 ms  CoreResGen                                 1 calls\r\n        0 ms  GetAssemblyVersion                         1 calls\r\n        0 ms  _GenerateRestoreSpecs                      1 calls\r\n        0 ms  _GenerateRestoreProjectPathWalk            1 calls\r\n        0 ms  _ResolveRazorGenerateOutputs               1 calls\r\n        0 ms  _CheckForInvalidConfigurationAndPlatform   1 calls\r\n        0 ms  ResolveReferences                          1 calls\r\n        0 ms  _GenerateRestoreProjectSpec                1 calls\r\n        0 ms  _GenerateRestoreProjectPathItemsPerFramework   1 calls\r\n        0 ms  _GetProjectReferenceTargetFrameworkProperties   1 calls\r\n        0 ms  SplitResourcesByCulture                    1 calls\r\n        0 ms  AssignRazorGenerateTargetPaths             1 calls\r\n        1 ms  ResolveAssemblyReferenceRazorGenerateInputs   1 calls\r\n        1 ms  _CollectTargetFrameworkForTelemetry        1 calls\r\n        1 ms  CoreGenerateAssemblyInfo                   1 calls\r\n        1 ms  GenerateTargetFrameworkMonikerAttribute    1 calls\r\n        1 ms  ResolveRazorConfiguration                  1 calls\r\n        1 ms  CoreGenerateRazorTargetAssemblyInfo        1 calls\r\n        1 ms  _CreateRazorAssemblyInfoInputsCacheFile    1 calls\r\n        1 ms  CreateGeneratedAssemblyInfoInputsCacheFile   1 calls\r\n        1 ms  CheckForDuplicateItems                     1 calls\r\n        1 ms  CoreGenerateUserSecretsAttribute           1 calls\r\n        1 ms  GetCopyToOutputDirectoryItems              1 calls\r\n        1 ms  _GetRestoreTargetFrameworksOutput          1 calls\r\n        1 ms  _HashRazorGenerateInputs                   1 calls\r\n        1 ms  _CreateRazorTargetAssemblyInfoInputsCacheFile   1 calls\r\n        1 ms  ResolveRazorGenerateInputs                 1 calls\r\n        1 ms  _SetEmbeddedWin32ManifestProperties        1 calls\r\n        1 ms  _ComputeReferenceAssemblies                1 calls\r\n        1 ms  AssignTargetPaths                          1 calls\r\n        1 ms  IncrementalClean                           1 calls\r\n        1 ms  _CoreGenerateRazorAssemblyInfo             1 calls\r\n        1 ms  ResolveLockFileReferences                  1 calls\r\n        2 ms  CopyFilesToOutputDirectory                 1 calls\r\n        2 ms  _GenerateCompileDependencyCache            1 calls\r\n        2 ms  _GetAllRestoreProjectPathItems             1 calls\r\n        3 ms  CheckForImplicitPackageReferenceOverrides   2 calls\r\n        3 ms  _RazorCopyFilesToOutputDirectory           1 calls\r\n        3 ms  _CopyOutOfDateSourceItemsToOutputDirectory   1 calls\r\n        3 ms  _GenerateProjectRestoreGraphPerFramework   1 calls\r\n        3 ms  _CleanGetCurrentAndPriorFileWrites         1 calls\r\n        4 ms  PrepareForBuild                            1 calls\r\n        5 ms  _GenerateDotnetCliToolReferenceSpecs       1 calls\r\n        5 ms  RunProduceContentAssets                    1 calls\r\n        6 ms  _LoadRestoreGraphEntryPoints               1 calls\r\n       13 ms  _GetRestoreSettings                        1 calls\r\n       25 ms  _HandlePackageFileConflicts                1 calls\r\n       27 ms  _GenerateRestoreGraph                      1 calls\r\n       28 ms  FindReferenceAssembliesForReferences       1 calls\r\n       28 ms  ResolveProjectReferences                   1 calls\r\n       36 ms  GenerateBuildRuntimeConfigurationFiles     1 calls\r\n       74 ms  GenerateBuildDependencyFile                1 calls\r\n       75 ms  _FilterRestoreGraphProjectInputItems       1 calls\r\n       86 ms  ResolvePackageAssets                       1 calls\r\n      109 ms  ResolveAssemblyReferences                  1 calls\r\n      141 ms  Restore                                    1 calls\r\n      270 ms  RazorCoreCompile                           1 calls\r\n      995 ms  CoreCompile                                1 calls\r\n    20568 ms  RazorCoreGenerate                          1 calls\r\n    20920 ms  ResolveTagHelperRazorGenerateInputs        1 calls\r\n\r\nTask Performance Summary:\r\n        0 ms  GetAssemblyVersion                         1 calls\r\n        0 ms  AssignCulture                              1 calls\r\n        0 ms  ReadLinesFromFile                          1 calls\r\n        0 ms  Delete                                     1 calls\r\n        0 ms  GetRestoreProjectReferencesTask            1 calls\r\n        0 ms  FindAppConfigFile                          1 calls\r\n        0 ms  Telemetry                                  1 calls\r\n        0 ms  GetFrameworkPath                           1 calls\r\n        0 ms  Message                                    7 calls\r\n        0 ms  FindInList                                 1 calls\r\n        1 ms  JoinItems                                  1 calls\r\n        1 ms  CheckForDuplicateItems                     3 calls\r\n        1 ms  GetProjectTargetFrameworksTask             1 calls\r\n        1 ms  FindUnderPath                              5 calls\r\n        1 ms  ConvertToAbsolutePath                      3 calls\r\n        1 ms  AssignTargetPath                           6 calls\r\n        1 ms  Hash                                       5 calls\r\n        1 ms  CheckForImplicitPackageReferenceOverrides   2 calls\r\n        2 ms  WriteCodeFragment                          4 calls\r\n        2 ms  Touch                                      2 calls\r\n        2 ms  GetRestorePackageReferencesTask            1 calls\r\n        3 ms  RemoveDuplicates                           7 calls\r\n        3 ms  WriteLinesToFile                           6 calls\r\n        4 ms  GetRestoreDotnetCliToolsTask               1 calls\r\n        5 ms  ProduceContentAssets                       1 calls\r\n        5 ms  WarnForInvalidProjectsTask                 1 calls\r\n        5 ms  Copy                                       6 calls\r\n        5 ms  MakeDir                                    4 calls\r\n       13 ms  GetRestoreSettingsTask                     1 calls\r\n       20 ms  ResolvePackageFileConflicts                1 calls\r\n       36 ms  GenerateRuntimeConfigurationFiles          1 calls\r\n       74 ms  GenerateDepsFile                           1 calls\r\n       86 ms  ResolvePackageAssets                       1 calls\r\n       87 ms  MsBuild                                    7 calls\r\n      108 ms  ResolveAssemblyReference                   1 calls\r\n      141 ms  RestoreTask                                1 calls\r\n     1262 ms  Csc                                        2 calls\r\n    20566 ms  RazorGenerate                              1 calls\r\n    20917 ms  RazorTagHelper                             1 calls\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:43.74\n\n_Copied from original issue: aspnet/Home#3199_","Url":"https://github.com/aspnet/Razor/issues/2406","RelatedDescription":"Open issue \"Slow Razor Build Times\" (#2406)"},{"Id":"331171242","IsPullRequest":false,"CreatedAt":"2018-06-12T16:27:46","Actor":"andoband","Number":"2397","RawContent":null,"Title":"Vue-like directives","State":"closed","Body":"I've grown to enjoy Vue's `v-if`, `v-show`, and `v-for` directives.  Maybe it's because I've gotten used to Vue, but it feels cleaner than the `@if` and `@foreach` blocks used by Razor and Blazor.  Specifically, it's easier for me to visualize the document structure when the code expressions are inlined with the elements versus external to them.  I also like how well it jells with declarative and reactive client-side development.\r\n\r\nCould Razor/Blazor add a similar syntax?\r\n\r\nI realize this is a personal preference and that there are folks that dislike this declarative style, so I'm not asking to replace the current syntax but rather to add to it in a Blazor-compatible way.\r\n\r\nFor example:\r\n\r\n**Razor/Blazor** (today)\r\n```html\r\n@if (bar != null)\r\n{\r\n    <ul>\r\n        @foreach (var foo in bar) \r\n        {\r\n            <li>@foo.Name</li>\r\n        }\r\n    </ul>\r\n}\r\n```\r\n\r\n**Vue-like** (suggested, or something similar)\r\n```html\r\n<ul @if=\"bar != null\">\r\n    <li @foreach=\"var foo in bar\">@foo.Name</li>\r\n</ul>\r\n```","Url":"https://github.com/aspnet/Razor/issues/2397","RelatedDescription":"Closed issue \"Vue-like directives\" (#2397)"},{"Id":"330631186","IsPullRequest":false,"CreatedAt":"2018-06-08T17:01:34","Actor":"evil-shrike","Number":"2396","RawContent":null,"Title":"Razor SDK produces two assemblies for a Razor Class Library project","State":"closed","Body":"#1809\r\n\r\nHi.\r\nI'm trying to migrate my solution from 2.0 (see https://github.com/aspnet/Razor/issues/1809#issue-281111990) to the new 2.1 Razon SDK. \r\nI have moved all my views (\"Views\" folder) from a project into a new RazorSDK-project \"Views\". It references the main back (to have Model classes) and package Microsoft.AspNetCore.Mvc, that's all.\r\nCompiling these two projects produces two \"Views\" assemblies! \r\n\r\nHere's the most simpified demo. \r\n* Create a new empty Web .net core project\r\n* Create a new empty Razor Class Library project\r\n* Reference the first project from razor project\r\n* change razor' TargetFramework  from netstandard to netcoreapp2.1 (why do you generate it as netstandard btw? it makes it fail to compile in almost all cases as referenced web-project won't be netstandard).\r\n\r\nHere're two csproj:\r\n\r\n### RazorSdkTest.Views.csproj:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Razor\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"2.1.0\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\RazorSdkTest\\RazorSdkTest.csproj\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n### RazorSdkTest.csproj:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <Folder Include=\"wwwroot\\\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.App\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nNow build and get the following assemblies in RazorSdkTest.Views\\bin\\Debug\\netcoreapp2.1: \r\n```\r\nRazorSdkTest.Views.dll\r\nRazorSdkTest.Views.pdb\r\nRazorSdkTest.Views.deps.json\r\nRazorSdkTest.Views.Views.dll\r\nRazorSdkTest.Views.Views.pdb\r\n```\r\n\r\nRazorSdkTest.Views.dll is empty, while RazorSdkTest.Views.Views.dll contains all views.\r\n\r\n","Url":"https://github.com/aspnet/Razor/issues/2396","RelatedDescription":"Closed issue \"Razor SDK produces two assemblies for a Razor Class Library project\" (#2396)"},{"Id":"330462049","IsPullRequest":true,"CreatedAt":"2018-06-07T22:47:33","Actor":"ryanbrandenburg","Number":"2395","RawContent":null,"Title":"Adding VSTS file","State":"open","Body":null,"Url":"https://github.com/aspnet/Razor/pull/2395","RelatedDescription":"Open PR \"Adding VSTS file\" (#2395)"}],"ResultType":"GitHubIssue"},"Templates-Issues":{"Issues":[{"Id":"266880667","IsPullRequest":true,"CreatedAt":"2017-10-24T21:42:12","Actor":"s-whaley","Number":"873","RawContent":null,"Title":"Account AccessDenied View Razor Syntax Bug Fix","State":"closed","Body":"views/account/accessdenied ViewData[title] missing @ symbol","Url":"https://github.com/aspnet/Templates/pull/873","RelatedDescription":"Closed or merged PR \"Account AccessDenied View Razor Syntax Bug Fix\" (#873)"},{"Id":"267855162","IsPullRequest":false,"CreatedAt":"2017-10-24T19:00:48","Actor":"ezeasharma","Number":"874","RawContent":null,"Title":"The project file could not be loaded for csproj","State":"closed","Body":"I migrated my .netcore 1.1 proj to 2.0 using this link https://docs.microsoft.com/en-us/aspnet/core/migration/1x-to-2x/\r\n\r\nbut when i perform \"dotnet restore -v d\" i get the following error:\r\n\r\n```\r\nBuild started 10/23/2017 19:57:01.\r\n     1>Project \"someproj.csproj\" on node 1 (Restore target(s)).\r\n     1>Building with tools version \"15.0\".\r\n     1>someproj.csproj(1,1): error MSB4025: The project file could not be loaded. Data at the root level is invalid. Line 1, position 1.\r\n     1>Done Building Project \"someproj.csproj\" (Restore target(s)) -- FAILED.\r\n\r\nBuild FAILED.\r\n\r\n       \"/someproj/someproj.csproj\" (Restore target) (1) ->\r\n         /someproj.csproj(1,1): error MSB4025: The project file could not be loaded. Data at the root level is invalid. Line 1, position 1.\r\n\r\n    0 Warning(s)\r\n    1 Error(s)\r\n```\r\n\r\nHere is the output for dotnet --info\r\n\r\n```\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.12\r\n OS Platform: Darwin\r\n RID:         osx.10.12-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.0.0/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n```\r\n\r\nThis is my csproj file\r\n```\r\n\r\n<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Folder Include=\"wwwroot\\\" />\r\n    <Folder Include=\"swagger_static\\\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Serilog\" Version=\"2.4.0\" />\r\n    <PackageReference Include=\"Serilog.Extensions.Logging\" Version=\"1.4.0\" />\r\n    <PackageReference Include=\"Serilog.Sinks.Console\" Version=\"2.1.0\" />\r\n    <PackageReference Include=\"Swashbuckle.AspNetCore\" Version=\"1.0.0\" />\r\n    <PackageReference Include=\"Dapper\" Version=\"1.50.2\" />\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.2\" />\r\n    <PackageReference Include=\"System.Threading\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"10.0.3\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n  <DotNetCliToolReference Include=\"Microsoft.EntityFrameworkCore.Tools.DotNet\" Version=\"2.0.0\" />\r\n  <DotNetCliToolReference Include=\"Microsoft.Extensions.SecretManager.Tools\" Version=\"2.0.0\" />\r\n  <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n</ItemGroup>\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\..\\..\\..\\recon.curator.common\\recon.curator.common.csproj\" />\r\n    <ProjectReference Include=\"..\\..\\..\\..\\recon.curator.service\\recon.curator.service.csproj\" />\r\n  </ItemGroup>\r\n</Project>\r\n```","Url":"https://github.com/aspnet/Templates/issues/874","RelatedDescription":"Closed issue \"The project file could not be loaded for csproj\" (#874)"},{"Id":"232879172","IsPullRequest":false,"CreatedAt":"2017-10-24T16:37:14","Actor":"a-elnajjar","Number":"847","RawContent":null,"Title":"Post test ","State":"closed","Body":"Hi asp.net Team;\r\nI see your Templates/test/Microsoft.Web.Templates.Web.Tests/WebAPITests.cs only have tow test methods for testing and verify GET Web API is working. I want to ask can I add testing and verify methods for POST Web API?","Url":"https://github.com/aspnet/Templates/issues/847","RelatedDescription":"Closed issue \"Post test \" (#847)"},{"Id":"252192148","IsPullRequest":false,"CreatedAt":"2017-10-24T16:36:47","Actor":"Dave3of5","Number":"864","RawContent":null,"Title":"Authentication on SPA apps","State":"closed","Body":"There seems to be no template for authentication on the SPA templates.\r\n\r\nI've been looking up various blog post and third party articles on how to add Jwt Authentication but they are scattered and most are for dotnet core 1.1. It would be nice if there was a template that showed the \"correct\" way to do this in dotnet core 2.0.","Url":"https://github.com/aspnet/Templates/issues/864","RelatedDescription":"Closed issue \"Authentication on SPA apps\" (#864)"},{"Id":"252376700","IsPullRequest":false,"CreatedAt":"2017-10-24T16:36:23","Actor":"pejta2207","Number":"865","RawContent":null,"Title":"Account/ConfirmEmail - NullReferenceException in Error.cshtml when providing incorrect token","State":"closed","Body":"**Description**\r\nThe issue is related to Individual Accounts Authentication template. It seems that providing incorrect authentication code for ConfirmEmail action in AccountController (e.g. token which already expired) should result in displaying error page. However, Razor throws an exception while generating the default error view:\r\n\r\n```\r\nNullReferenceException: Object reference not set to an instance of an object.\r\nAspNetCore._Views_Shared_Error_cshtml+<ExecuteAsync>d__0.MoveNext() in Error.cshtml, line 9\r\n```\r\n\r\n**Steps to reproduce**\r\n1. Create new project with Individual Accounts Authentication template.\r\n2. Run the application.\r\n3. Register any user via the registration form.\r\n4. Retrieve UserId of the registered user.\r\n5. Try to confirm email with incorrect token, e.g. http://localhost:PORT/Account/ConfirmEmail?UserId={UserId}&Code=INVALID_CODE\r\n\r\n**Further technical details**\r\nIt's probably caused by the last line in ConfirmEmail action in AccountController:\r\n```\r\nvar result = await _userManager.ConfirmEmailAsync(user, code);\r\nreturn View(result.Succeeded ? \"ConfirmEmail\" : \"Error\");\r\n```\r\n\r\nWhen invalid token is passed, Error view is not provided with `ErrorViewModel`. When `Model` is accessed in 9th line of Error.cshtml (`@if (Model.ShowRequestId)`), it throws NullReferenceException.","Url":"https://github.com/aspnet/Templates/issues/865","RelatedDescription":"Closed issue \"Account/ConfirmEmail - NullReferenceException in Error.cshtml when providing incorrect token\" (#865)"},{"Id":"260997320","IsPullRequest":false,"CreatedAt":"2017-10-24T16:36:05","Actor":"joeaudette","Number":"868","RawContent":null,"Title":"IEmailSender should have explicitly named parameters for html vs plain text","State":"closed","Body":"There have been a number of people reporting bugs about the email confirmation link in the StarterWeb template not working.\r\n\r\nThis is happening because people implement IEmailSender and don't realize that the message being passed in is html. When they send the email as plain text the confirmation link does not work because of the url encoding.\r\n\r\nI think the \"message\" parameter of SendEmailAsync should be renamed to htmlMessage and possibly should have an additional parameter for \"plainTextMessage\" and both should be passed in from AccountController.\r\n\r\nThis would make it more clear to implementors of IEmailSender what kind of string(s) they are dealing with and how to correctly implement it.\r\n\r\nrelated issues:\r\nhttps://github.com/aspnet/Home/issues/2152\r\nhttps://github.com/aspnet/Home/issues/2217","Url":"https://github.com/aspnet/Templates/issues/868","RelatedDescription":"Closed issue \"IEmailSender should have explicitly named parameters for html vs plain text\" (#868)"},{"Id":"268102418","IsPullRequest":false,"CreatedAt":"2017-10-24T16:35:17","Actor":"Eilon","Number":"875","RawContent":null,"Title":"This repo is OBSOLETE - please see the README file for information","State":"open","Body":"Please refer to the README at https://github.com/aspnet/Templates for information.","Url":"https://github.com/aspnet/Templates/issues/875","RelatedDescription":"Open issue \"This repo is OBSOLETE - please see the README file for information\" (#875)"},{"Id":"266114525","IsPullRequest":false,"CreatedAt":"2017-10-21T00:03:24","Actor":"tverboon","Number":"872","RawContent":null,"Title":"Unnecessary User.Id provided in password reset link?","State":"closed","Body":"The user Id is provided in the callback link:\r\n\r\nhttps://github.com/aspnet/Templates/blob/f237bb024e1c8f05a7d78c215be2224022d2c153/template_feed/Microsoft.DotNet.Web.ProjectTemplates.2.0/content/StarterWeb-CSharp/Controllers/AccountController.cs#L424\r\n\r\nBut in the controller action only code is used:\r\nhttps://github.com/aspnet/Templates/blob/f237bb024e1c8f05a7d78c215be2224022d2c153/template_feed/Microsoft.DotNet.Web.ProjectTemplates.2.0/content/StarterWeb-CSharp/Controllers/AccountController.cs#L443\r\n\r\nIn my opinion it's better not to provide more information than necessary.","Url":"https://github.com/aspnet/Templates/issues/872","RelatedDescription":"Closed issue \"Unnecessary User.Id provided in password reset link?\" (#872)"},{"Id":"265394026","IsPullRequest":false,"CreatedAt":"2017-10-13T20:09:16","Actor":"jkotalik","Number":"871","RawContent":null,"Title":"Add HttpsRedirection and HSTS middleware template","State":"closed","Body":"With https://github.com/aspnet/BasicMiddleware/pull/264 being added, @Eilon asked me to write templates for this feature.\r\ncc/ @javiercn @Tratcher ","Url":"https://github.com/aspnet/Templates/issues/871","RelatedDescription":"Closed issue \"Add HttpsRedirection and HSTS middleware template\" (#871)"},{"Id":"264318035","IsPullRequest":true,"CreatedAt":"2017-10-10T17:47:02","Actor":"scottsauber","Number":"870","RawContent":null,"Title":"Change Lockout wording of comment","State":"open","Body":"The Razor Pages Identity template turns on Lockout by default, unlike the MVC one.  This comment is left over from the MVC one and it no longer lines up with what is configured in the template.  I've reworded it to be accurate.  I can change it to just remove the comment all together if you want.","Url":"https://github.com/aspnet/Templates/pull/870","RelatedDescription":"Open PR \"Change Lockout wording of comment\" (#870)"},{"Id":"262627101","IsPullRequest":false,"CreatedAt":"2017-10-04T00:00:30","Actor":"Rick-Anderson","Number":"869","RawContent":null,"Title":"QR Codes should be supported in templates","State":"closed","Body":"[Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes)\r\n\r\nThat should be supported in the templates like [SMS 2FA](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/2fa) used to be. \r\n\r\nrequested by customer in [Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes) comments","Url":"https://github.com/aspnet/Templates/issues/869","RelatedDescription":"Closed issue \"QR Codes should be supported in templates\" (#869)"},{"Id":"254163608","IsPullRequest":false,"CreatedAt":"2017-09-07T12:16:42","Actor":"elAndyG","Number":"866","RawContent":null,"Title":"Cannot update @angular to 4.3.0+ (trying to update to 4.3.6)","State":"closed","Body":"After updating angular to 4.3.6, an internal server error begins to throw \"NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor.\"\r\n\r\nSteps to reproduce:\r\n1. cmd to c:\\\r\n2. dotnet --version \r\n_2.0.0_\r\n3. mkdir dummy\r\n4. cd dummy\r\n5. dotnet new angular\r\n6. dotnet restore\r\n7. npm install\r\n8. dotnet run (prove it works)\r\n8a. ctrl+c to stop the server/build\r\n9. update all @angular from \"4.2.5\" to \"4.3.6\"\r\n10. npm update\r\n11. dotnet run\r\n...You should now crash... (see below)\r\n12. change 4.3.6 back to 4.2.5 and \r\nrepeat 10 and 11.\r\nYou should now work again.\r\n\r\nPlease let me know i there's anything else i can provide to help. Thank you!\r\n\r\n`NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]).\r\n Error: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]). at Error (native) at syntaxError (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:37092:34) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getDependenciesMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51159:35) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getTypeMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51027:26) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getInjectableMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51013:21) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getProviderMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51304:40) at C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51233:49 at Array.forEach (native) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getProvidersMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51193:19) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getNgModuleMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:50848:50)\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.HttpNodeInstance+<InvokeExportAsync>d__7.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.OutOfProcessNodeInstance+<InvokeExportAsync>d__13.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.SpaServices.Prerendering.PrerenderTagHelper+<ProcessAsync>d__29.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner+<RunAsync>d__0.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nAspNetCore._Views_Home_Index_cshtml+<ExecuteAsync>d__12.MoveNext() in Index.cshtml\r\n+\r\n    ViewData[\"Title\"] = \"Home Page\";\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageCoreAsync>d__16.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderAsync>d__14.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__21.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewResult+<ExecuteResultAsync>d__26.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeResultAsync>d__19.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResultFilterAsync>d__24.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResourceFilter>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeFilterPipelineAsync>d__17.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Builder.RouterMiddleware+<Invoke>d__4.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware+<Invoke>d__7.MoveNext()`\r\n","Url":"https://github.com/aspnet/Templates/issues/866","RelatedDescription":"Closed issue \"Cannot update @angular to 4.3.0+ (trying to update to 4.3.6)\" (#866)"},{"Id":"255851740","IsPullRequest":false,"CreatedAt":"2017-09-07T08:13:18","Actor":"marcusien","Number":"867","RawContent":null,"Title":"Cannot force version of the template to install","State":"open","Body":"Hi,\r\n\r\nMaybe there's something not documented but I'd like to install a version of my own template in a specific version.\r\n\r\nWe are creating our own template for our project and we create prerelease packages for our template using semver. The problem is with \"dotnet new -i\" command, we cannot specify a specific version","Url":"https://github.com/aspnet/Templates/issues/867","RelatedDescription":"Open issue \"Cannot force version of the template to install\" (#867)"},{"Id":"251697737","IsPullRequest":true,"CreatedAt":"2017-08-22T14:57:33","Actor":"phenning","Number":"862","RawContent":null,"Title":"Use template engine templates","State":"closed","Body":"","Url":"https://github.com/aspnet/Templates/pull/862","RelatedDescription":"Closed or merged PR \"Use template engine templates\" (#862)"},{"Id":"251783689","IsPullRequest":false,"CreatedAt":"2017-08-21T22:59:07","Actor":"GoshaFighten","Number":"863","RawContent":null,"Title":"Can't compile the devextreme-angular package in the Production mode using the ASP.NET Core 2.0 Angular template","State":"closed","Body":"This issue relates to the [one](https://github.com/DevExpress/devextreme-angular/issues/534). I've created an Angular application using .NET Core 2.0. The issue is reproducible regardless if I use Visual Studio 2017 15.3 or `dotnet new angular`. Everything works fine in the Development mode. But, once I publish my application with the [DevExtreme Angular](https://github.com/DevExpress/devextreme-angular) package using `dotnet publish -c Release`, I'm getting the following error:\r\n\r\n```\r\n      ERROR in ./$$_gendir/~/devextreme-angular/ui/data-grid.ngfactory.ts\r\n      Module parse failed: D:\\FromCustomers\\GH534\\NGCore\\NGCore\\$$_gendir\\node_modules\\devextreme-angular\\ui\\data-grid.ngfactory.ts Unexpected token (63:38)\r\n      You may need an appropriate loader to handle this file type.\r\n      | import * as i52 from 'devextreme-angular/core/iterable-differ-helper';\r\n      | import * as i53 from 'devextreme-angular/core/nested-option';\r\n      | export const DxDataGridModuleNgFactory:i0.NgModuleFactory<i1.DxDataGridModule> = i0.╔╡cmf(i1.DxDataGridModule,\r\n      |     ([] as any[]),(_l:any) => {\r\n      |       return i0.╔╡mod([i0.╔╡mpd(512,i0.ComponentFactoryResolver,i0.╔╡CodegenComponentFactoryResolver,\r\n       @ ./$$_gendir/ClientApp/app/components/fetchdata/fetchdata.component.ngfactory.ts 8:0-102\r\n       @ ./$$_gendir/ClientApp/app/app.module.server.ngfactory.ts\r\n       @ ./ClientApp/boot.server.ts\r\nD:\\FromCustomers\\GH534\\NGCore\\NGCore\\NGCore.csproj(41,5): error MSB3073: The command \"node node_modules/webpack/bin/webpack.js --env.prod\" exited with code 2.\r\n```\r\n\r\nI added\r\n\r\n```\r\n\"devextreme\": \"^17.1.5\",\r\n\"devextreme-angular\": \"^17.1.5\",\r\n```\r\n\r\nto the `package.json` file. Then, I added DevExtreme CSS files to the `webpack.config.vendor.js` as\r\n\r\n```\r\nconst nonTreeShakableModules = [\r\n    'bootstrap',\r\n    'bootstrap/dist/css/bootstrap.css',\r\n    'es6-promise',\r\n    'es6-shim',\r\n    'event-source-polyfill',\r\n    'jquery',\r\n    'devextreme/dist/css/dx.common.css',\r\n    'devextreme/dist/css/dx.light.css'\r\n];\r\n```\r\n\r\nIf instead of the following line in the webpack.config.js file\r\n\r\n```\r\n{ test: /\\.ts$/, include: /ClientApp/, use: isDevBuild ? ['awesome-typescript-loader?silent=true', 'angular2-template-loader'] : '@ngtools/webpack' },\r\n```\r\n\r\nI use\r\n\r\n```\r\n{ test: /\\.ts$/, use: isDevBuild ? ['awesome-typescript-loader?silent=true', 'angular2-template-loader'] : '@ngtools/webpack' },\r\n```\r\n\r\nor\r\n\r\n```\r\n{ test: /\\.ts$/, include: /ClientApp/, use: ['awesome-typescript-loader?silent=true', 'angular2-template-loader'] },\r\n```\r\n\r\neverything works fine. A similar configuration in a project created using Angular CLI works fine as well.\r\n\r\nThe attached `NGCore` project illustrates the issue and `test-app` created with Angular CLI illustrates that this works in a standard Angular CLI project after I call `ng eject`.\r\n\r\nWhat can be the problem here? Is it in DevExtreme modules or in your webpack configuration?\r\n[test-app.zip](https://github.com/aspnet/Templates/files/1240256/test-app.zip)\r\n[NGCore.zip](https://github.com/aspnet/Templates/files/1240259/NGCore.zip)\r\n\r\n","Url":"https://github.com/aspnet/Templates/issues/863","RelatedDescription":"Closed issue \"Can't compile the devextreme-angular package in the Production mode using the ASP.NET Core 2.0 Angular template\" (#863)"},{"Id":"248880384","IsPullRequest":false,"CreatedAt":"2017-08-09T00:05:00","Actor":"Rick-Anderson","Number":"861","RawContent":null,"Title":"Razor Page scaffolder should add `@page \"{id:int}\"` directive","State":"closed","Body":"The RP scaffolder should add `@page \"{id:int}\"` directive so generated links pass the ID as route data, not query strings.\r\n\r\n","Url":"https://github.com/aspnet/Templates/issues/861","RelatedDescription":"Closed issue \"Razor Page scaffolder should add `@page \"{id:int}\"` directive\" (#861)"},{"Id":"248842171","IsPullRequest":false,"CreatedAt":"2017-08-08T20:59:26","Actor":"Rick-Anderson","Number":"860","RawContent":null,"Title":"Razor Pages scaffolder eats    DbUpdateConcurrencyException","State":"closed","Body":"Expected behavior:\r\nScaffolder should correctly handle `DbUpdateConcurrencyException`\r\n\r\nActual behavior:\r\n`DbUpdateConcurrencyException` is caught and ignored.\r\n\r\nTo repro: \r\n\r\n* Create a RP project and add a model.\r\n* [Scaffold the model](https://docs.microsoft.com/en-us/aspnet/core/tutorials/razor-pages/model#add-scaffold-tooling-and-perform-initial-migration)\r\n\r\nThe *Edit.cshtml.cs* file contains the following code:\r\n\r\n```cs\r\npublic async Task<IActionResult> OnPostAsync()\r\n{\r\n    if (!ModelState.IsValid)\r\n    {\r\n        return Page();\r\n    }\r\n\r\n    _context.Attach(Movie).State = EntityState.Modified;\r\n\r\n    try\r\n    {\r\n        await _context.SaveChangesAsync();\r\n    }\r\n    catch (DbUpdateConcurrencyException)\r\n    {\r\n        \r\n    }\r\n\r\n    return RedirectToPage(\"./Index\");\r\n}\r\n```\r\nIt should be\r\n\r\n```cs\r\ncatch (DbUpdateConcurrencyException)\r\n        {\r\n            if (!MovieExists(movie.ID))\r\n            {\r\n                return NotFound();\r\n            }\r\n            else\r\n            {\r\n                throw;\r\n            }\r\n        }\r\n```\r\n","Url":"https://github.com/aspnet/Templates/issues/860","RelatedDescription":"Closed issue \"Razor Pages scaffolder eats    DbUpdateConcurrencyException\" (#860)"},{"Id":"248139089","IsPullRequest":false,"CreatedAt":"2017-08-08T04:05:18","Actor":"alexavrutin","Number":"859","RawContent":null,"Title":"r1","State":"closed","Body":"","Url":"https://github.com/aspnet/Templates/issues/859","RelatedDescription":"Closed issue \"r1\" (#859)"},{"Id":"238353055","IsPullRequest":false,"CreatedAt":"2017-08-03T18:01:57","Actor":"stevedesmond-ca","Number":"851","RawContent":null,"Title":"Why do non-sentence headers end in a period?","State":"closed","Body":"See https://github.com/aspnet/Templates/blob/dev/src/Rules/StarterWeb/IndividualAuth/Views/Account/ResetPasswordConfirmation.cshtml as an example -- almost all the `<h1>`s have periods after them, when they should more likely be Title Case with no period.","Url":"https://github.com/aspnet/Templates/issues/851","RelatedDescription":"Closed issue \"Why do non-sentence headers end in a period?\" (#851)"},{"Id":"247185643","IsPullRequest":false,"CreatedAt":"2017-08-03T17:58:29","Actor":"Rick-Anderson","Number":"858","RawContent":null,"Title":"Razor Page templates use fully qualified name ","State":"closed","Body":"The constructor uses the FQN when it's not necessary. For example:\r\n\r\nSee [Pages/Movie/Index.cshtml.cs](https://github.com/aspnet/Docs/blob/master/aspnetcore/tutorials/razor-pages/razor-pages-start/sample/RazorPagesMovie/Pages/Movie/Index.cshtml.cs#L14-L16)\r\n\r\n`using RazorPagesMovie.Models;` is in the template.\r\n\r\nTo repro - follow the [Razor Pages tutorial](https://docs.microsoft.com/en-us/aspnet/core/tutorials/razor-pages/model)\r\n","Url":"https://github.com/aspnet/Templates/issues/858","RelatedDescription":"Closed issue \"Razor Page templates use fully qualified name \" (#858)"},{"Id":"246217674","IsPullRequest":false,"CreatedAt":"2017-08-03T17:56:43","Actor":"Rick-Anderson","Number":"857","RawContent":null,"Title":"Templates should use app.UseMvcWithDefaultRoute();","State":"closed","Body":"I recommend the templates use `app.UseMvcWithDefaultRoute();` rather than\r\n\r\n```csharp\r\napp.UseMvc(routes =>\r\n{\r\n    routes.MapRoute(\r\n        name: \"default\",\r\n        template: \"{controller}/{action=Index}/{id?}\");\r\n});\r\n```\r\n\r\nThe more complex code is a barrier to entry for new users who don't need this flexibility. Advanced users will have no problem adding the above code when they need it. The code above doesn't make much sense to Razor Pages developers. Recommend this change for all templates but especially for the Razor Pages template.\r\n\r\ncc @DamianEdwards  - part of the lower the barrier to entry effort.","Url":"https://github.com/aspnet/Templates/issues/857","RelatedDescription":"Closed issue \"Templates should use app.UseMvcWithDefaultRoute();\" (#857)"},{"Id":"244917331","IsPullRequest":false,"CreatedAt":"2017-08-03T17:55:35","Actor":"RehanSaeed","Number":"856","RawContent":null,"Title":"Sharing Common Files Between Templates","State":"closed","Body":"I have a ReadMe.html file which I'd like to share between my project templates. The file is mostly the same for all three templates, except that it contains a few symbols common to all my templates. I'd like to keep one copy of this file and use symbols to define template specific sections.\r\n```\r\n<html>\r\n<p>Common paragraph...</p>\r\n<!--#if MyTemplate1-->\r\n<p>MyTemplate1 paragraph...</p>\r\n<!--#endif-->\r\n<!--#if MyTemplate2-->\r\n<p>MyTemplate2 paragraph...</p>\r\n<!--#endif-->\r\n</html>\r\n```\r\n\r\nI can think of a way this might work without any help from the templating engine: Keep a common copy of the file, then copy the file into the template folders as a pre-packaging step in my build script. The disadvantage is that now I have three copies of my file unless I use a .gitignores file but then I have the extra step of having to remove the .gitignores file from the template output.\r\n\r\nI propose that you should be able to add a file as a link, then mark that file as common in your template.json file. Finally, when generating the project, the file is converted from a linked file, into a real one.\r\n","Url":"https://github.com/aspnet/Templates/issues/856","RelatedDescription":"Closed issue \"Sharing Common Files Between Templates\" (#856)"},{"Id":"244134597","IsPullRequest":false,"CreatedAt":"2017-08-03T17:30:02","Actor":"jkotalik","Number":"855","RawContent":null,"Title":"File new template error for Windows 8.1 32 bit for individual auth.","State":"closed","Body":"Steps:\r\n\r\n1. Download VS2017 Int Preview and dotnet preview3 on Windows 8.1 32 bit.\r\n2. File new... ASP.NET Core app, Web Application with Individual User Accounts Authorization\r\n3. Run application, try to register a new user\r\n\r\nExpected Results: A page would show up saying to apply migrations to the database or the user is registered.\r\nActual Results: SqlException on the SQL Server not being found. \r\n![4fce5f97](https://user-images.githubusercontent.com/8302101/28383504-3b7bf12c-6c76-11e7-91d0-5fe2675924a2.PNG)\r\n\r\n\r\nThe fix I had to do was change the ConnectionStrings' DefaultConnection from mssqllocaldb to ProjectsV12. \r\n\r\nMost likely, we would need to change https://github.com/aspnet/Templates/blob/a594b47c417593d43141d3b4eb2bc41d6ad85f20/src/Rules/StarterWeb/IndividualAuth/appsettings.json#L3 to use a variable for the database.","Url":"https://github.com/aspnet/Templates/issues/855","RelatedDescription":"Closed issue \"File new template error for Windows 8.1 32 bit for individual auth.\" (#855)"},{"Id":"244047453","IsPullRequest":false,"CreatedAt":"2017-07-20T08:45:31","Actor":"dazinator","Number":"854","RawContent":null,"Title":"typescript confiugration file item template","State":"closed","Body":"When the typescript configuration file is added to a project, by default it is \"content\" which also by default means it ends up being included in the nuget package when you do a `dotnet pack`. Given that the typescript configuration file is used primarily at build time, I don't think it should be included in a resulting nuget pack by default. Can it be changed to create this in the `csproj`:\r\n\r\n```\r\n <ItemGroup>\r\n    <Content Update=\"Scripts\\tsconfig.json\">\r\n      <Pack>false</Pack>\r\n    </Content>\r\n  </ItemGroup>\r\n```\r\n\r\nWithout this, if another project takes a dependency on this nuget package, you get build errors like this:\r\n\r\n```\r\n\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tTS18003\tBuild:No inputs were found in config file 'C:/Users/darrell.tunnell/.nuget/packages/gluon.module.themeswitcher/2.0.0/contentFiles/any/net452/Scripts/tsconfig.json'. Specified 'include' paths were '[\"**/*\"]' and 'exclude' paths were '[\"node_modules\",\"wwwroot\"]'.\tReach.GCv3.Mvc.Module.CompanyLogo\tC:\\Users\\darrell.tunnell\\Source\\Repos\\gc3-website\\src\\Reach.GCv3.Mvc.Module.CompanyLogo\\tsc\t1\t\r\n\r\n\r\n```\r\n\r\ni.e VS is doscovering the typescript configuration files within referenced nuget packages!","Url":"https://github.com/aspnet/Templates/issues/854","RelatedDescription":"Closed issue \"typescript confiugration file item template\" (#854)"},{"Id":"240276652","IsPullRequest":true,"CreatedAt":"2017-07-05T16:50:58","Actor":"ryanbrandenburg","Number":"853","RawContent":null,"Title":"Remove PackageTargetFallback","State":"closed","Body":"","Url":"https://github.com/aspnet/Templates/pull/853","RelatedDescription":"Closed or merged PR \"Remove PackageTargetFallback\" (#853)"},{"Id":"239518221","IsPullRequest":true,"CreatedAt":"2017-07-05T14:09:36","Actor":"scottaddie","Number":"852","RawContent":null,"Title":"Clarify password reset sentence in ForgotPassword view","State":"closed","Body":"The `ForgotPassword.cshtml` view includes a sentence which was missing a comma and reversed the words \"reset\" and \"password\".\r\n\r\n/cc: @phenning @mlorbetske ","Url":"https://github.com/aspnet/Templates/pull/852","RelatedDescription":"Closed or merged PR \"Clarify password reset sentence in ForgotPassword view\" (#852)"},{"Id":"233959214","IsPullRequest":false,"CreatedAt":"2017-06-06T16:59:43","Actor":"mlorbetske","Number":"850","RawContent":null,"Title":"File new default names inconsistency.","State":"open","Body":"_From @Bartmax on July 24, 2015 2:48_\n\nAll items in the file new dialog (client side) default names kind of follows a pattern but it's not consistent:\n\nStyleSheet.css\nJavaScript.js\nhtmlpage.html (all lowercase)\nCoffeeScript.coffee\njson-schema.json\npackage.json\netc.\n\nSome must have a specific name (like package.json) while others just reflect the file type. \n\nI see 2 inconsistencies here:\n\n1) casing is inconsistent.\n2) TypeScript it suggest file.ts instead of TypeScript.ts\n\n\n_Copied from original issue: aspnet/Tooling#118_","Url":"https://github.com/aspnet/Templates/issues/850","RelatedDescription":"Open issue \"File new default names inconsistency.\" (#850)"},{"Id":"233568569","IsPullRequest":false,"CreatedAt":"2017-06-05T12:14:20","Actor":"neman","Number":"849","RawContent":null,"Title":"Unable to install nuget template","State":"closed","Body":"I created nuget template. When I try to install it, I got the following error at the end\r\n\r\n```C:\\Program Files\\dotnet\\sdk\\1.0.4\\NuGet.targets(97,5): error : Unable to resolve 'Test.Templates' for '.NETCoreApp,Version=v1.0'. [C:\\Users\\nemke\\.templateengine\\dotnetcli\\v1.0.4\\scratch\\restore.csproj]\r\n\r\nGenerating MSBuild file C:\\Users\\nemke\\.templateengine\\dotnetcli\\v1.0.4\\scratch\\obj\\restore.csproj.nuget.g.props.\r\n  Generating MSBuild file C:\\Users\\nemke\\.templateengine\\dotnetcli\\v1.0.4\\scratch\\obj\\restore.csproj.nuget.g.targets.\r\n  Writing lock file to disk. Path: C:\\Users\\nemke\\.templateengine\\dotnetcli\\v1.0.4\\scratch\\obj\\project.assets.json\r\n  Restore failed in 13,16 sec for C:\\Users\\nemke\\.templateengine\\dotnetcli\\v1.0.4\\scratch\\restore.csproj.\r\n\r\n  Errors in C:\\Users\\nemke\\.templateengine\\dotnetcli\\v1.0.4\\scratch\\restore.csproj\r\n      Unable to resolve 'BIB.Templates' for '.NETCoreApp,Version=v1.0'.\r\n\r\n  NuGet Config files used:\r\n      C:\\Users\\nemke\\AppData\\Roaming\\NuGet\\NuGet.Config\r\n      C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config\r\n\r\n  Feeds used:\r\n      https://api.nuget.org/v3/index.json\r\n      C:\\local-nuget\r\n      C:\\Users\\nemke\\.dotnet\\NuGetFallbackFolder\r\n      C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\r\n```\r\n\r\n#### dotnetinfo\r\n\r\n```\r\nC:\\Temp> dotnet --info\r\n.NET Command Line Tools (1.0.4)\r\n\r\nProduct Information:\r\n Version:            1.0.4\r\n Commit SHA-1 hash:  af1e6684fd\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.14393\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\1.0.4\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0-preview1-002111-00\r\n  Build    : 1ff021936263d492539399688f46fd3827169983\r\n``` \r\n\r\n","Url":"https://github.com/aspnet/Templates/issues/849","RelatedDescription":"Closed issue \"Unable to install nuget template\" (#849)"},{"Id":"233555569","IsPullRequest":false,"CreatedAt":"2017-06-05T12:13:42","Actor":"neman","Number":"848","RawContent":null,"Title":"Wrong CLI command for template installation at nuget.org","State":"closed","Body":"When I go tu nuget.org to search for some template I got the following page for link https://www.nuget.org/packages/NetEscapades.Templates/\r\n\r\n![image](https://cloud.githubusercontent.com/assets/350314/26781234/bf4cc98c-49ed-11e7-9e4a-08bb168b6c62.png)\r\n\r\nThe command instruct to use `Install-Package NetEscapades.Templates` which does not work. \r\n\r\n```\r\nInstall-Package NetEscapades.Templates\r\nInstall-Package : No match was found for the specified search criteria and package name 'NetEscapades.Templates'. Try Get-PackageSource to see all available registered p ackage sources.\r\nAt line:1 char:1\r\n+ Install-Package NetEscapades.Templates\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (Microsoft.Power....InstallPackage:InstallPackage) [Install-Package], Exception\r\n    + FullyQualifiedErrorId : NoMatchFoundForCriteria,Microsoft.PowerShell.PackageManagement.Cmdlets.InstallPackage\r\n```\r\nThe correct command is `dotnet new --install \"NetEscapades.Templates::*\"`\r\n\r\nWill this be fixed in future release?  Which will be the correct CLI command?\r\n\r\n","Url":"https://github.com/aspnet/Templates/issues/848","RelatedDescription":"Closed issue \"Wrong CLI command for template installation at nuget.org\" (#848)"},{"Id":"226082169","IsPullRequest":true,"CreatedAt":"2017-05-03T18:58:53","Actor":"phenning","Number":"846","RawContent":null,"Title":"Revert \"Add MVC precompilation package for 1.1\"","State":"closed","Body":"This reverts commit 461cd822646505fb53c6b0ac416af3780e32578f.\r\n\r\n# Conflicts:\r\n#\tsrc/BaseTemplates/StarterWeb/StarterWeb.csproj\r\n#\tsrc/Templates.xml","Url":"https://github.com/aspnet/Templates/pull/846","RelatedDescription":"Closed or merged PR \"Revert \"Add MVC precompilation package for 1.1\"\" (#846)"}],"ResultType":"GitHubIssue"},"Tooling-Issues":{"Issues":[{"Id":"333613195","IsPullRequest":false,"CreatedAt":"2018-06-19T10:33:40","Actor":"Liero","Number":"1076","RawContent":null,"Title":"Unable to publish when using Microsoft.NET.Sdk.Razor","State":"open","Body":"After I upgraded my solution from asp.net core 2.0 to 2.1, I'm not able to publish my web app from Visual Studio, although it can build.\r\n\r\nDuring the upgrade I've changed SDK in one of my class libraries to **Microsoft.NET.Sdk.Razor**, but now I'm getting a lot of errors and if project references were not recognized in this library when publishing.\r\n\r\n```\r\nConnecting to C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\publish\\...\r\nMyProject.Web -> C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\MyProject.Web.dll\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Roslyn\\csc.exe /noconfig /unsafe- /checked- /nowarn:1701,1702,1701,1702,2008 /nostdlib+ /errorreport:prompt /warn:4 /define:TRACE;RELEASE;NETCOREAPP;NETCOREAPP2_1 /errorendlocation /preferreduilang:en-US /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.antiforgery\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Antiforgery.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization.policy\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.Policy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cryptography.internal\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cryptography.Internal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.diagnostics.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Diagnostics.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.server.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Server.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.html.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Html.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.features\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Features.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.jsonpatch\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.JsonPatch.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.apiexplorer\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ApiExplorer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.dataannotations\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.formatters.json\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Formatters.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razorpages\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.RazorPages.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.taghelpers\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.TagHelpers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.viewfeatures\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ViewFeatures.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.language\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Language.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.runtime\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.responsecaching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.ResponseCaching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.webutilities\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.WebUtilities.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.csharp\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.common\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.CodeAnalysis.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.dotnet.platformabstractions\\2.1.0\\lib\\netstandard1.3\\Microsoft.DotNet.PlatformAbstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.relational\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Relational.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.sqlserver\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.SqlServer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.memory\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.binder\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Binder.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.DependencyInjection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection\\2.1.0\\lib\\netcoreapp2.0\\Microsoft.Extensions.DependencyInjection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencymodel\\2.1.0\\lib\\netstandard1.6\\Microsoft.Extensions.DependencyModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.composite\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Composite.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.filesystemglobbing\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileSystemGlobbing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.objectpool\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.ObjectPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.options\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Options.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.primitives\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.webencoders\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.WebEncoders.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.net.http.headers\\2.1.0\\lib\\netstandard2.0\\Microsoft.Net.Http.Headers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.VisualBasic.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.Win32.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.win32.registry\\4.5.0\\ref\\netstandard2.0\\Microsoft.Win32.Registry.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\mscorlib.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\netstandard.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json.bson\\1.0.1\\lib\\netstandard1.3\\Newtonsoft.Json.Bson.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json\\11.0.2\\lib\\netstandard2.0\\Newtonsoft.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\remotion.linq\\2.2.0\\lib\\netstandard1.0\\Remotion.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.AppContext.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Buffers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Concurrent.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Immutable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.NonGeneric.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Specialized.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Annotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.EventBasedAsync.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.TypeConverter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Console.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.Common.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.data.sqlclient\\4.5.0\\ref\\netcoreapp2.1\\System.Data.SqlClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Contracts.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Debug.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.DiagnosticSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.FileVersionInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Process.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.StackTrace.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TextWriterTraceListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tools.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TraceSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tracing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Dynamic.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Calendars.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.interactive.async\\3.1.1\\lib\\netstandard1.3\\System.Interactive.Async.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.Brotli.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.ZipFile.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.DriveInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Watcher.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.IsolatedStorage.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.MemoryMappedFiles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Pipes.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.UnmanagedMemoryStream.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Expressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Queryable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.HttpListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Mail.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NameResolution.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NetworkInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Ping.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Requests.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.ServicePoint.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Sockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebHeaderCollection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.Client.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.Vectors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ObjectModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.DispatchProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.ILGeneration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.Lightweight.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Metadata.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.TypeExtensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Reader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.ResourceManager.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Writer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.runtime.compilerservices.unsafe\\4.5.0\\ref\\netstandard2.0\\System.Runtime.CompilerServices.Unsafe.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.CompilerServices.VisualC.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Handles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.RuntimeInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.WindowsRuntime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Loader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Formatters.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.accesscontrol\\4.5.0\\ref\\netstandard2.0\\System.Security.AccessControl.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Claims.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Algorithms.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Csp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.X509Certificates.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.cryptography.xml\\4.5.0\\ref\\netstandard2.0\\System.Security.Cryptography.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.permissions\\4.5.0\\ref\\netstandard2.0\\System.Security.Permissions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Principal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.principal.windows\\4.5.0\\ref\\netstandard2.0\\System.Security.Principal.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.SecureString.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceModel.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceProcess.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.text.encodings.web\\4.5.0\\lib\\netstandard2.0\\System.Text.Encodings.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.RegularExpressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Overlapped.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Dataflow.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Thread.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.ThreadPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Timer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.Local.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ValueTuple.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.HttpUtility.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.ReaderWriter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlSerializer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\WindowsBase.dll\" /debug- /debug:portable /filealign:512 /optimize+ /out:obj\\Release\\netcoreapp2.1\\MyProject.Mail.dll /ruleset:\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Team Tools\\Static Analysis Tools\\\\Rule Sets\\MinimumRecommendedRules.ruleset\" /target:library /warnaserror- /utf8output /deterministic+ /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.CSharp.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.analyzers\\2.1.0\\analyzers\\dotnet\\cs\\Microsoft.EntityFrameworkCore.Analyzers.dll\" EmailDefaults.cs EmailOptions.cs MailSender.cs NotificationService.cs RazorViewToStringRenderer.cs \"C:\\Users\\daniel.turan\\AppData\\Local\\Temp\\.NETCoreApp,Version=v2.1.AssemblyAttributes.cs\" obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs obj\\Release\\netcoreapp2.1\\\\Tem\tporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.RazorAssemblyInfo.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.AssemblyInfo.cs /warnaserror+:NU1605\r\nNotificationService.cs(15,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\nNotificationService.cs(16,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\n...\r\n```\r\n\r\nAlso, see https://stackoverflow.com/questions/50926116/publish-failed-when-using-microsoft-net-sdk-razor-if-reference-was-not-recognize for more details","Url":"https://github.com/aspnet/Tooling/issues/1076","RelatedDescription":"Open issue \"Unable to publish when using Microsoft.NET.Sdk.Razor\" (#1076)"},{"Id":"329605262","IsPullRequest":false,"CreatedAt":"2018-06-05T20:05:23","Actor":"AngelosP","Number":"1075","RawContent":null,"Title":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/","State":"open","Body":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/","Url":"https://github.com/aspnet/Tooling/issues/1075","RelatedDescription":"Open issue \"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/\" (#1075)"},{"Id":"328747170","IsPullRequest":false,"CreatedAt":"2018-06-02T14:10:13","Actor":"AceHack","Number":"1074","RawContent":null,"Title":"Docker in launchSettings.json","State":"open","Body":"Please give documentation on how to add volume mounts.  I need to add a custom volume mount into my image.","Url":"https://github.com/aspnet/Tooling/issues/1074","RelatedDescription":"Open issue \"Docker in launchSettings.json\" (#1074)"},{"Id":"328082529","IsPullRequest":true,"CreatedAt":"2018-06-01T17:41:04","Actor":"federicorinaldi","Number":"1073","RawContent":null,"Title":"Update dotnet-core-2.1.md","State":"closed","Body":"Visual Studio 2017 15.7 has been released now so this document is outdated","Url":"https://github.com/aspnet/Tooling/pull/1073","RelatedDescription":"Closed or merged PR \"Update dotnet-core-2.1.md\" (#1073)"},{"Id":"323850872","IsPullRequest":false,"CreatedAt":"2018-05-17T06:31:53","Actor":"Pichasepong","Number":"1072","RawContent":null,"Title":"can not upload file FTPS. ","State":"closed","Body":"I don't understand why can't upload result is false. At the highlights in yellow. Help me.\r\n![2018-05-17_9-21-13](https://user-images.githubusercontent.com/12063904/40155003-9812f0d8-59bb-11e8-82ae-8b8e7576b1a1.png)\r\n![2018-05-17_11-02-28](https://user-images.githubusercontent.com/12063904/40156168-efe61078-59c1-11e8-8c4c-7657ba2dd536.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1072","RelatedDescription":"Closed issue \"can not upload file FTPS. \" (#1072)"},{"Id":"268293817","IsPullRequest":false,"CreatedAt":"2018-05-17T02:25:02","Actor":"Pichasepong","Number":"1060","RawContent":null,"Title":"Problems .net core 1.0.1 vs 2015 tooling preview 2 error logs file.Help Me. ","State":"closed","Body":"Problems installing on Server 2012 R2 ,Dot net core 1.0.1 vs 2015 tooling preview 2 error logs file.\r\n\r\n![product_dotnetcoreerror](https://user-images.githubusercontent.com/12063904/31985990-040a5f72-b991-11e7-9356-ddd06160a87c.jpg)\r\n","Url":"https://github.com/aspnet/Tooling/issues/1060","RelatedDescription":"Closed issue \"Problems .net core 1.0.1 vs 2015 tooling preview 2 error logs file.Help Me. \" (#1060)"},{"Id":"317494886","IsPullRequest":false,"CreatedAt":"2018-04-25T06:34:01","Actor":"TheAlphamerc","Number":"1071","RawContent":null,"Title":" Unable to start debugging","State":"open","Body":"The project is success fully build but unable to start debugger. See [here][2018-04-25_11-20-19.7244.Ide.log](https://github.com/aspnet/Tooling/files/1945717/2018-04-25_11-20-19.7244.Ide.log) for more details. \r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1071","RelatedDescription":"Open issue \" Unable to start debugging\" (#1071)"},{"Id":"316585462","IsPullRequest":false,"CreatedAt":"2018-04-24T05:17:55","Actor":"rberger247","Number":"1070","RawContent":null,"Title":"Visual studio freezes when I run add-migration ","State":"closed","Body":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger.","Url":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070)"},{"Id":"308764422","IsPullRequest":false,"CreatedAt":"2018-03-27T05:23:09","Actor":"dvdobrovolskiy","Number":"1069","RawContent":null,"Title":"EntityFramework migrations not available to be applied during publish","State":"closed","Body":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc","Url":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069)"},{"Id":"304770827","IsPullRequest":false,"CreatedAt":"2018-03-14T05:33:19","Actor":"TheConservativeCoder","Number":"1068","RawContent":null,"Title":"Switch between Razor Page View and Code Behind","State":"closed","Body":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n","Url":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Closed issue \"Switch between Razor Page View and Code Behind\" (#1068)"},{"Id":"304312342","IsPullRequest":false,"CreatedAt":"2018-03-13T05:33:42","Actor":"RehanSaeed","Number":"1067","RawContent":null,"Title":"Support dotnet watch in launchSettings.json","State":"closed","Body":"I used to be able to use `dotnet watch` in Visual Studio by adding the following section to `launchSettings.json` and starting the project without debugging using CTRL + F5.\r\n\r\n```\r\n    \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    },\r\n```\r\n\r\nThis used to work in ASP.NET Core 1.1 but no longer does. According to https://github.com/aspnet/DotNetTools/issues/404 the new format for ASP.NET Core 2.0 is:\r\n\r\n```\r\n   \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"workingDirectory\": \"C:\\\\Users\\\\namc\\\\source\\\\repos\\\\WebApplication2\\\\WebApplication2\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n```\r\n\r\nThe problem with this is the hard coded `executablePath` which is Windows specific and the `workingDirectory` which is specific to wherever I did a Git clone on my local machine.","Url":"https://github.com/aspnet/Tooling/issues/1067","RelatedDescription":"Closed issue \"Support dotnet watch in launchSettings.json\" (#1067)"},{"Id":"300865938","IsPullRequest":false,"CreatedAt":"2018-02-28T06:01:18","Actor":"rjamesnw","Number":"1066","RawContent":null,"Title":"Nesting bug","State":"closed","Body":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and clearly shows it, but is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\nYes, I'm aware of upcoming nesting controls in v15.6, but I'm not able to install it yet, and regardless, this should work fine, so it should be looked into nonetheless.\r\n\r\nJust to add: I'm using wild-cards to include the file.  If I explicitly add it I get this:\r\n\r\n`Duplicate 'EmbeddedResource' items were included. ...`\r\n\r\nSo it's clearly found.  It's obviously something up with the build process not finding the nested file.","Url":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Closed issue \"Nesting bug\" (#1066)"},{"Id":"290854647","IsPullRequest":false,"CreatedAt":"2018-01-24T01:14:53","Actor":"NeerajaRagesh","Number":"1065","RawContent":null,"Title":"Issue with Sales discount App - Odoo 9","State":"closed","Body":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n","Url":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Closed issue \"Issue with Sales discount App - Odoo 9\" (#1065)"},{"Id":"273994049","IsPullRequest":true,"CreatedAt":"2018-01-07T03:48:49","Actor":"cartermp","Number":"1062","RawContent":null,"Title":"Update migrate-sql-server.md","State":"closed","Body":"Removed product links in favor of all docs links, changed wording slightly, and moved Get Started to be at the top.","Url":"https://github.com/aspnet/Tooling/pull/1062","RelatedDescription":"Closed or merged PR \"Update migrate-sql-server.md\" (#1062)"},{"Id":"274003770","IsPullRequest":true,"CreatedAt":"2017-11-15T02:15:11","Actor":"cristy","Number":"1064","RawContent":null,"Title":"Re adding","State":"closed","Body":"Submitting with the right location. Not sure why the missing-template.md file got tacked on at the end...","Url":"https://github.com/aspnet/Tooling/pull/1064","RelatedDescription":"Closed or merged PR \"Re adding\" (#1064)"},{"Id":"273996633","IsPullRequest":true,"CreatedAt":"2017-11-15T01:03:12","Actor":"cristy","Number":"1063","RawContent":null,"Title":"Webapp landing page","State":"closed","Body":"This is the markdown for the Web App landing page. Let me know if there's any other changes I should make.","Url":"https://github.com/aspnet/Tooling/pull/1063","RelatedDescription":"Closed or merged PR \"Webapp landing page\" (#1063)"},{"Id":"273873058","IsPullRequest":true,"CreatedAt":"2017-11-14T17:26:42","Actor":"cartermp","Number":"1061","RawContent":null,"Title":"Create migrate-sql-server.md","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1061","RelatedDescription":"Closed or merged PR \"Create migrate-sql-server.md\" (#1061)"},{"Id":"258233429","IsPullRequest":false,"CreatedAt":"2017-09-16T14:09:00","Actor":"ctopher31","Number":"1059","RawContent":null,"Title":"Turn off file nesting in Visual Studio 2017","State":"closed","Body":"To report new issues, use the [Report a Problem](https://developercommunity.visualstudio.com/) tool. The GitHub Issue Tracker for the aspnet/Tooling repo is now deprecated in favor of the Report a Problem tool.\r\n\r\nIf you encounter a problem with Visual Studio, we want to know about it so that we can diagnose and fix it. By using the Report a Problem tool, you can collect detailed information about the problem, and send it to Microsoft with just a few button clicks. See [here](https://docs.microsoft.com/en-us/visualstudio/ide/talk-to-us) for more details. \r\n","Url":"https://github.com/aspnet/Tooling/issues/1059","RelatedDescription":"Closed issue \"Turn off file nesting in Visual Studio 2017\" (#1059)"},{"Id":"257312054","IsPullRequest":false,"CreatedAt":"2017-09-14T00:50:29","Actor":"svallis","Number":"1058","RawContent":null,"Title":"Views in class libraries removed from embedded resources under certain circumstances","State":"closed","Body":"I have a test repo which should hopefully demonstrate this problem, and I hope this is the correct repo for the issue.\r\n\r\nhttps://github.com/svallis/precompilation-classlib\r\n\r\nIf you clone and open this solution and perform the following, the issue should be clear. First, the expected results is what happens when adding views to `app`:\r\n\r\n- Go to `app1\\Views\\Home` and press SHIFT+F2 and create `Test.cshtml`\r\n- Copy and paste the new file to end up with `Test - Copy.cshtml`\r\n- Build the solution\r\n- The `.csproj` file for `app1` remains unchanged\r\n\r\nNow perform the same process on `lib1`:\r\n\r\n- Go to `lib1\\Views\\Shared` and press SHIFT+F2 and create `Test.cshtml`\r\n- Copy and paste the new file to end up with `Test - Copy.cshtml`\r\n- Build the solution\r\n- The `.csproj` file for `lib1` has the following added to it\r\n\r\n```\r\n<ItemGroup>\r\n    <EmbeddedResource Remove=\"Views\\Shared\\Test - Copy.cshtml\" />\r\n</ItemGroup>\r\n```\r\n\r\nAs you can imagine this is highly frustrating during development, and we're constantly running into it while developing features within a library. I don't know if it's an outright bug, or whether we could improve the existing rules in the `.csproj` for the library. Whatever changes are made to the library project file need to preserve existing functionality though, so that views are not included in the publish output and are embedded in the assembly. This allows everything to work both during development and after publishing with precompiled views.","Url":"https://github.com/aspnet/Tooling/issues/1058","RelatedDescription":"Closed issue \"Views in class libraries removed from embedded resources under certain circumstances\" (#1058)"},{"Id":"257171895","IsPullRequest":false,"CreatedAt":"2017-09-12T20:33:21","Actor":"shirhatti","Number":"1057","RawContent":null,"Title":"Support for multi-line string values","State":"open","Body":"_From @alexvy86 on August 3, 2017 21:11_\n\nI'm using Akka.NET in a project and the way they do configuration is not-quite-JSON, but still a hierarchical structure, which I haven't been able to successfully integrate into `appsettings.json`. The only way I've been able to do it is to collapse all of their hierarchy into a single-line string value, which makes it a bit of a pain to work with.\r\n\r\nFor now I just put the whole thing as CDATA in an XML file and use the `AddXmlFile()` extension from `Microsoft.Extensions.Configuration.Xml` to read it, but it'd be preferable to have it in `appsetings.json`.\n\n_Copied from original issue: aspnet/Configuration#703_","Url":"https://github.com/aspnet/Tooling/issues/1057","RelatedDescription":"Open issue \"Support for multi-line string values\" (#1057)"},{"Id":"254062749","IsPullRequest":false,"CreatedAt":"2017-08-31T04:38:52","Actor":"matthewDDennis","Number":"1056","RawContent":null,"Title":"Docker tools fail if multiple TFMs in project file","State":"closed","Body":"If you modify your projects to have multiple frameworks with the `<TargetFrameworks>` tag, then the Docker tools does not know which framework to use as there is no `<TargetFramework>` tag.\r\n\r\nAdding the `<TargetFramework>`netcoreapp1.1`<...>` fixes the problem in Visual Studio and all the frameworks build and can debug with Docker.\r\n\r\nHowever, if you try and build a framework other than the netcoreapp1.1 with the DotNet CLI, it fails as it, as the documentation states, will ignore the `<TargetFrameworks>` tag if the `<TargetFramework>` tag is present \r\n","Url":"https://github.com/aspnet/Tooling/issues/1056","RelatedDescription":"Closed issue \"Docker tools fail if multiple TFMs in project file\" (#1056)"},{"Id":"249781859","IsPullRequest":true,"CreatedAt":"2017-08-14T15:57:44","Actor":"balachir","Number":"1055","RawContent":null,"Title":"Update known-issues-vs2017.md for VS 15.3 RTW","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1055","RelatedDescription":"Closed or merged PR \"Update known-issues-vs2017.md for VS 15.3 RTW\" (#1055)"},{"Id":"247941709","IsPullRequest":false,"CreatedAt":"2017-08-05T03:07:41","Actor":"snebjorn","Number":"1054","RawContent":null,"Title":"Q: [BrowserLink] HowTo programmatically inject custom script into page body at runtime","State":"closed","Body":"Hi, I'm curious about how you made Browser Link inject a custom script into the page body at runtime.\r\nI have to do something similar (ritterim/stuntman#158) so wondering if you've willing to share the implementation :)\r\n\r\nI also made a [stackoverflow post](https://stackoverflow.com/questions/45501245/programmatically-inject-custom-script-into-page-body-at-runtime-like-browser-l)\r\n\r\nThanks","Url":"https://github.com/aspnet/Tooling/issues/1054","RelatedDescription":"Closed issue \"Q: [BrowserLink] HowTo programmatically inject custom script into page body at runtime\" (#1054)"},{"Id":"247229183","IsPullRequest":false,"CreatedAt":"2017-08-02T06:18:35","Actor":"halter73","Number":"1053","RawContent":null,"Title":"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES environment variable is set incorrectly","State":"closed","Body":"Given the launchSettings.json and Program.cs below, it seems that the ASPNETCORE_HOSTINGSTARTUPASSEMBLIES environment variable is set incorrectly when launching both the \"IIS Express\" or \"WebApplication1\" profiles from VS 2017 26730.0.d15rel and dotnet sdk 2.0.0-preview3-006889.\r\n\r\n\r\n#### Expected output for \"IIS Express\" profile launched from VS:\r\n\r\n```\r\nASPNETCORE_HOSTINGSTARTUPASSEMBLIES: 'HostingStartup1;Microsoft.AspNetCore.Server.IISIntegration;Microsoft.AspNetCore.ApplicationInsights.HostingStartup'\r\n```\r\n\r\n#### Actual output for \"IIS Express\" profile launched from VS (App Insights is missing):\r\n\r\n```\r\nASPNETCORE_HOSTINGSTARTUPASSEMBLIES: 'HostingStartup1;Microsoft.AspNetCore.Server.IISIntegration'\r\n```\r\n\r\n#### Expected output for \"WebApplication1\" profile launched from VS:\r\n\r\n```\r\nASPNETCORE_HOSTINGSTARTUPASSEMBLIES: 'HostingStartup1;Microsoft.AspNetCore.ApplicationInsights.HostingStartup'\r\n```\r\n\r\n#### Actual output for \"WebApplication1\" profile launched from VS (HostingStartup1 is missing):\r\n\r\n```\r\nASPNETCORE_HOSTINGSTARTUPASSEMBLIES: 'Microsoft.AspNetCore.ApplicationInsights.HostingStartup'\r\n```\r\n\r\n#### Actual output for \"WebApplication1\" profile launched using \"dotnet run\" (Behaves as expected)\r\n\r\n```\r\nASPNETCORE_HOSTINGSTARTUPASSEMBLIES: 'HostingStartup1'\r\n```\r\n\r\n#### launchSettings.json\r\n```json\r\n{\r\n  \"iisSettings\": {\r\n    \"windowsAuthentication\": false,\r\n    \"anonymousAuthentication\": true,\r\n    \"iisExpress\": {\r\n      \"applicationUrl\": \"http://localhost:61008/\",\r\n      \"sslPort\": 0\r\n    }\r\n  },\r\n  \"profiles\": {\r\n    \"IIS Express\": {\r\n      \"commandName\": \"IISExpress\",\r\n      \"launchBrowser\": true,\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\",\r\n        \"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES\": \"HostingStartup1\"\r\n      }\r\n    },\r\n    \"WebApplication1\": {\r\n      \"commandName\": \"Project\",\r\n      \"launchBrowser\": true,\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\",\r\n        \"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES\": \"HostingStartup1\"\r\n      },\r\n      \"applicationUrl\": \"http://localhost:61010/\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n#### Program.cs\r\n```C#\r\nusing Microsoft.AspNetCore;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing System;\r\n\r\nnamespace WebApplication1\r\n{\r\n    public class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            BuildWebHost(args).Run();\r\n        }\r\n\r\n        public static IWebHost BuildWebHost(string[] args)\r\n        {\r\n            Console.WriteLine(\"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES: '{0}'\", Environment.GetEnvironmentVariable(\"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES\"));\r\n\r\n            return WebHost.CreateDefaultBuilder(args)\r\n                .UseStartup<Startup>()\r\n                .Build();\r\n        }\r\n    }\r\n}\r\n```","Url":"https://github.com/aspnet/Tooling/issues/1053","RelatedDescription":"Closed issue \"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES environment variable is set incorrectly\" (#1053)"},{"Id":"245422589","IsPullRequest":false,"CreatedAt":"2017-07-28T17:44:59","Actor":"varora1406","Number":"1052","RawContent":null,"Title":"Add-Migration command not working.","State":"closed","Body":"IDE : visual studio 15.3 preview 5.0\r\n.net core 2.0\r\nProject : .Net core web application (Angular template) including (Angular v4)\r\n\r\nSteps to reproduce:\r\n* Create a new project and all required nuget packages.\r\n![image](https://user-images.githubusercontent.com/24986539/28577409-559354a8-7174-11e7-9dfb-26cc7efc1228.png)\r\n\r\n* Try to use Add-Migration command. (Don't worry, context classes and rest have been done)\r\n- Result : The term 'Add-Migration' is not recognized as the name of a cmdlet, function, script file, or operable program. \r\n![image](https://user-images.githubusercontent.com/24986539/28577463-81e914c0-7174-11e7-97eb-5cd2a5fb3e28.png)\r\n","Url":"https://github.com/aspnet/Tooling/issues/1052","RelatedDescription":"Closed issue \"Add-Migration command not working.\" (#1052)"},{"Id":"241453336","IsPullRequest":false,"CreatedAt":"2017-07-08T14:19:58","Actor":"RandyBuchholz","Number":"1051","RawContent":null,"Title":"Outdated Reference in ...CodeGeneration.Design\" Version=\"2.0.0-preview2-final\"","State":"open","Body":"There was a compatibility error with Microsoft.Composition. This is being addressed https://github.com/dotnet/corefx/issues/18452.\r\n\r\nCodeGeneration.Design is still referencing the old version and gives:\r\nPackage 'Microsoft.Composition 1.0.27' was restored using '.NETFramework,Version=v4.6.1' instead the project target framework...\r\n\r\nThe correct version is 1.0.31.\r\n\r\n![image](https://user-images.githubusercontent.com/13967891/27986052-85abdeee-63be-11e7-9b53-ec7a6199d628.png)\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1051","RelatedDescription":"Open issue \"Outdated Reference in ...CodeGeneration.Design\" Version=\"2.0.0-preview2-final\"\" (#1051)"},{"Id":"237065229","IsPullRequest":false,"CreatedAt":"2017-07-05T16:21:28","Actor":"Jerajo","Number":"1047","RawContent":null,"Title":"Tooling Preview 2 don't recognize VS 2015 Update 3","State":"closed","Body":"Here is my VS 2015.\r\n\r\n![image](https://user-images.githubusercontent.com/26252994/27312048-4fe10f30-5533-11e7-8319-e09f99059615.png)\r\n\r\nHere is the Error.\r\n\r\n![image](https://user-images.githubusercontent.com/26252994/27312066-8be0e6ea-5533-11e7-9f9e-ada4da2187e4.png)\r\n\r\nLook the Log File.\r\n\r\netc...\r\n[0DBC:1AB0][2017-06-19T21:09:04]i101: Detected package: WebToolsAzureVWD14_trk, state: Absent, cached: None\r\n[0DBC:1AB0][2017-06-19T21:09:04]i101: Detected package: DotNetToolsVS14_trk, state: Absent, cached: None\r\n[0DBC:1AB0][2017-06-19T21:09:04]i101: Detected package: DotNetToolsVWD14_trk, state: Absent, cached: None\r\n[0DBC:1AB0][2017-06-19T21:09:04]i101: Detected package: Preparation_ASPNET, state: Absent, cached: None\r\n[0DBC:1AB0][2017-06-19T21:09:04]i101: Detected package: SetupBlocked_Uninstall, state: Present, cached: None\r\n[0DBC:1AB0][2017-06-19T21:09:04]i052: Condition 'WixBundleInstalled OR NOT(NetFx45Release < 378675) OR (WixBundleAction=2)' evaluates to true.\r\n[0DBC:1AB0][2017-06-19T21:09:04]i052: Condition 'WixBundleInstalled OR VS2015DevEnvExists OR VS2015WebExpressExists OR (WixBundleAction=2)' evaluates to true.\r\n[0DBC:1AB0][2017-06-19T21:09:04]i052: Condition 'WixBundleInstalled OR (((VS2015CommunityUpdateVersion >= v14.0.25420) OR (VS2015ProfessionalUpdateVersion >= v14.0.25420) OR (VS2015EnterpriseUpdateVersion >= v14.0.25420)) OR (VS2015WebExpressUpdateVersion >= v14.0.25420)) OR (SKIP_VSU_CHECK=1) OR (WixBundleAction=2)' evaluates to false.\r\n[0DBC:1AB0][2017-06-19T21:09:04]e000: \r\n### This product requires Visual Studio 2015 Update 3 or later. Please install Visual Studio 2015 Update 3 or later, then install this product again.\r\n[0DBC:1AB0][2017-06-19T21:09:04]e000: Error 0x81f40001: Bundle condition evaluated to false: WixBundleInstalled OR (((VS2015CommunityUpdateVersion >= v14.0.25420) OR (VS2015ProfessionalUpdateVersion >= v14.0.25420) OR (VS2015EnterpriseUpdateVersion >= v14.0.25420)) OR (VS2015WebExpressUpdateVersion >= v14.0.25420)) OR (SKIP_VSU_CHECK=1) OR (WixBundleAction=2)\r\n[0DBC:1AB0][2017-06-19T21:09:04]i199: Detect complete, result: 0x0","Url":"https://github.com/aspnet/Tooling/issues/1047","RelatedDescription":"Closed issue \"Tooling Preview 2 don't recognize VS 2015 Update 3\" (#1047)"},{"Id":"238392758","IsPullRequest":false,"CreatedAt":"2017-07-04T19:13:11","Actor":"miloush","Number":"1048","RawContent":null,"Title":"Adding application manifest ","State":"closed","Body":"The project properties designer asks me to add manifest to the project first before it can be selected:\r\n![untitled](https://user-images.githubusercontent.com/10546952/27518138-8a52e322-59d0-11e7-99b8-78a31d72e1a3.png)\r\n\r\nHowever, there does not seem to be a manifest template in the Add New Item list for ASP.NET Core projects.\r\n\r\nEither add the manifest template, or let the properties designer generate it, or change the \"default settings\" to declare newer OS support.","Url":"https://github.com/aspnet/Tooling/issues/1048","RelatedDescription":"Closed issue \"Adding application manifest \" (#1048)"},{"Id":"239635705","IsPullRequest":true,"CreatedAt":"2017-06-29T23:09:22","Actor":"anangaur","Number":"1050","RawContent":null,"Title":"Update known-issues-vs2017-preview.md","State":"open","Body":"Removed \"No workaround...\" as there is a workaround","Url":"https://github.com/aspnet/Tooling/pull/1050","RelatedDescription":"Open PR \"Update known-issues-vs2017-preview.md\" (#1050)"},{"Id":"239016783","IsPullRequest":true,"CreatedAt":"2017-06-28T20:04:41","Actor":"balachir","Number":"1049","RawContent":null,"Title":"Updates for VS 2017 15.3 Preview 3 / .NET Core 2.0 Preview 2","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1049","RelatedDescription":"Closed or merged PR \"Updates for VS 2017 15.3 Preview 3 / .NET Core 2.0 Preview 2\" (#1049)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"333804954","IsPullRequest":false,"CreatedAt":"2018-06-19T19:21:13","Actor":"anurse","Number":"306","RawContent":null,"Title":"SignalR Client 2.1.1 in UWP apps with Minimum Version of 1803","State":"open","Body":"ASP.NET Core 2.1.1 contains fixes to resolve blocking issues when using the SignalR Client from UWP applications where the minimum version is set to \"Windows 10, version 1803\". However, these fixes also require some additional dependencies.\r\n\r\n**NOTE**: UWP Applcations with a minimum version set **below** \"Windows 10, version 1803\" (for example, if the minimum version is set to \"Fall Creators Update\") are **not** affected by this issue and **do not require** these steps.\r\n\r\nIn order to use the SignalR Client in UWP applications where the minimum version is set to \"Windows 10, version 1803\" you will need to:\r\n\r\n1. Upgrade `Microsoft.AspNetCore.SignalR.Client` to `1.0.1`. This build is now available on NuGet.\r\n1. Add the following **additional** package references to your project. These are referenced transitively by the SignalR Client, but newer versions are required to resolve this issue. We are planning to improve this in a future patch.\r\n    * `System.Threading.Tasks.Extensions` version `4.5.1`\r\n    * `System.Runtime.CompilerServices.Unsafe` version `4.5.1`\r\n\r\nFor discussion, use https://github.com/aspnet/SignalR/issues/2406","Url":"https://github.com/aspnet/Announcements/issues/306","RelatedDescription":"Open issue \"SignalR Client 2.1.1 in UWP apps with Minimum Version of 1803\" (#306)"},{"Id":"333802959","IsPullRequest":false,"CreatedAt":"2018-06-19T19:15:05","Actor":"anurse","Number":"305","RawContent":null,"Title":"SignalR Client 2.1.1 in Xamarin","State":"open","Body":"ASP.NET Core 2.1.1 contains fixes to resolve blocking issues when using the SignalR **Client** from Xamarin. However, these fixes also require an updated build of Xamarin.iOS and Xamarin.Android, as well as some additional dependencies.\r\n\r\nIn order to use the SignalR Client in Xamarin applications you will need to:\r\n\r\n1. Upgrade `Microsoft.AspNetCore.SignalR.Client` to `1.0.1`. This build is now available on NuGet.\r\n1. Add the following **additional** package references to your project. These are referenced transitively by the SignalR Client, but newer versions are required to resolve this issue. We are planning to improve this in a future patch.\r\n    * `System.Threading.Tasks.Extensions` version `4.5.1`\r\n    * `System.Runtime.CompilerServices.Unsafe` version `4.5.1`\r\n1. Upgrade Xamarin to the appropriate version:\r\n    * Xamarin.Android `8.4.0.1`\r\n    * Xamarin.iOS `11.14.0.4`\r\n    * These will be included in:\r\n      * Visual Studio 15.8 **Preview 3** (not released at the time of publishing, but coming soon)\r\n      * Visual Studio for Mac 7.6 **Preview 3** (not released at the time of publishing, but coming soon)\r\n\r\nFor discussion, use https://github.com/aspnet/SignalR/issues/1886","Url":"https://github.com/aspnet/Announcements/issues/305","RelatedDescription":"Open issue \"SignalR Client 2.1.1 in Xamarin\" (#305)"},{"Id":"329851587","IsPullRequest":false,"CreatedAt":"2018-06-06T13:30:30","Actor":"ToLearnMoe","Number":"304","RawContent":null,"Title":"怎么找工作啊","State":"closed","Body":"我学spirng的同学都上班两个月了我实习都没找到，学了给asp告诉我现在不能用了要什么点apsnet。你们行不行啊\r\n\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n\r\nThis repo is for team announcements only. See https://github.com/aspnet/announcements#announcements.\r\n\r\nTo file a bug or start a discussion, please find the appropriate repo in https://github.com/aspnet and create a new issue. \r\nFor general issue discussions please go to https://github.com/aspnet/Home/issues and create a new issue.\r\n","Url":"https://github.com/aspnet/Announcements/issues/304","RelatedDescription":"Closed issue \"怎么找工作啊\" (#304)"},{"Id":"329603099","IsPullRequest":false,"CreatedAt":"2018-06-05T20:11:55","Actor":"AngelosP","Number":"303","RawContent":null,"Title":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/","State":"closed","Body":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/\r\n\r\nFor discussion, use https://github.com/aspnet/Tooling/issues/1075","Url":"https://github.com/aspnet/Announcements/issues/303","RelatedDescription":"Closed issue \"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/\" (#303)"},{"Id":"327435771","IsPullRequest":false,"CreatedAt":"2018-05-29T18:26:40","Actor":"shirhatti","Number":"302","RawContent":null,"Title":"IIS in-process hosting moved out of ASP.NET Core 2.1","State":"open","Body":"We are moving IIS in-process hosting out of the ASP.NET Core 2.1 to give more time to validate the design and implementation. We will ship IIS in-process hosting as part of the ASP.NET Core 2.2 release.\r\n\r\n### Why?\r\n\r\nIIS in-process hosting  is a brand new server implementation and hasn't received sufficient attention during the ASP.NET Core 2.1 release for us to feel comfortable shipping it at this time. \r\n\r\nFor discussion, use https://github.com/aspnet/IISIntegration/issues/878","Url":"https://github.com/aspnet/Announcements/issues/302","RelatedDescription":"Open issue \"IIS in-process hosting moved out of ASP.NET Core 2.1\" (#302)"},{"Id":"322891671","IsPullRequest":false,"CreatedAt":"2018-05-14T16:32:50","Actor":"jkotalik","Number":"301","RawContent":null,"Title":"HttpsRedirectionMiddleware will not redirect to HTTPS if no port is available","State":"open","Body":"We have changed the behavior of the HttpsRedirectionMiddleware between 2.1.0-preview2 to 2.1.0-rc1. Instead of always redirecting a request to HTTPS, we will now not redirect to HTTPS if no port is available. The HTTPS port can be specified by setting ```HttpsRedirectionOptions.HttpsPort```, setting the ASPNETCORE_HTTPS_PORT environment variable, or by setting an HTTPS url in launchsettings.json.\r\n\r\nIf you want to continue keeping the original behavior the HttpsRedirectionMiddleware which redirects to port 443, you can set the ```HttpsRedirectionOptions.HttpsPort = 443```.\r\n \r\n---\r\n\r\n*Please use aspnet/BasicMiddleware#329 for further discussion.*","Url":"https://github.com/aspnet/Announcements/issues/301","RelatedDescription":"Open issue \"HttpsRedirectionMiddleware will not redirect to HTTPS if no port is available\" (#301)"},{"Id":"321270218","IsPullRequest":false,"CreatedAt":"2018-05-08T17:07:04","Actor":"blowdart","Number":"300","RawContent":null,"Title":"Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.0.\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft made an internal discovery of a security vulnerability in version 2.x of ASP.NET Core where\r\na specially crafted request can cause excess resource consumption in Kestrel.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/KestrelHttpServer/issues/2553\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigations for this issue.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThe vulnerability also affects any ASP.NET Core 2.0 project if it uses the following package versions, which must also be [updated](#app-update), in addition to addressing your proxy configuration :\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.Server.Kestrel.Core | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.All | 2.0.0, 2.0,3, 2.0.4, 2.0.5, 2.0.6, 2.0.7<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.8<br />2.1.0-rc1-final\r\n\r\n## Advisory FAQ\r\n\r\n### How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected packages](#affected-software) can be exposed to the vulnerability.\r\n\r\n### How do I fix the issue?\r\n\r\n---\r\n\r\nIf you're targeting .NET Core 2.x and the `Microsoft.AspNetCore.All` \"metapackage\":\r\n\r\n* Update its version number to 2.0.8 if you have targetted 2.0.x *OR*\r\n* Update its version number to 2.1.0-rc1-final if you have targetted previews of 2.1\r\n\r\nUpdating the metapackage will update the [affected packages](#affected-software)\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to a [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.Server.Kestrel.Core` version 2.0.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.Server.Kestrel.Core` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3 />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for each of the [vulnerable packages](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.Server.Kestrel.Core` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_","Url":"https://github.com/aspnet/Announcements/issues/300","RelatedDescription":"Open issue \"Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\" (#300)"},{"Id":"320441265","IsPullRequest":false,"CreatedAt":"2018-05-04T21:52:58","Actor":"danroth27","Number":"299","RawContent":null,"Title":"ASP.NET Core WebHooks moved out of ASP.NET Core 2.1","State":"open","Body":"We are moving ASP.NET Core WebHooks out of the ASP.NET Core 2.1 to give more time to validate the design and implementation. We will continue to ship previews ASP.NET Core WebHooks packages, but they not ship as stable packages as part of the ASP.NET Core 2.1 release.\r\n\r\n### Why?\r\n\r\n[ASP.NET Core WebHooks](https://github.com/aspnet/webhooks) is only a partial port of [ASP.NET WebHooks](https://github.com/aspnet/aspnetwebhooks) and hasn't received sufficient attention during the ASP.NET Core 2.1 release for us to feel comfortable shipping it at this time. \r\n\r\nFor discussion, use https://github.com/aspnet/WebHooks/issues/296","Url":"https://github.com/aspnet/Announcements/issues/299","RelatedDescription":"Open issue \"ASP.NET Core WebHooks moved out of ASP.NET Core 2.1\" (#299)"},{"Id":"309862672","IsPullRequest":false,"CreatedAt":"2018-03-29T18:44:48","Actor":"glennc","Number":"298","RawContent":null,"Title":"Migrating from aspnetcore docker repos to dotnet","State":"open","Body":"Starting with .NET Core 2.1-preview2, we intend to migrate from using the microsoft/aspnetcore-build and microsoft/aspnetcore Docker repos to the microsoft/dotnet Docker repo.  We will continue to ship patches and security fixes for the existing aspnetcore images but any new images for 2.1 and higher will be pushed to microsoft/dotnet.\r\n\r\nDockerfiles using `microsoft/aspnetcore:<version>` should change to `microsoft/dotnet:<version>-aspnetcore-runtime`.\r\n\r\nDockerfiles using `microsoft/aspnetcore-build` that do not require Node should just change to `microsoft/dotnet:<version>-sdk`.\r\n\r\nDockerfiles using Node from the `microsoft/aspnetcore-build` image will either need to install Node into their own image or use mult-stage builds as described in the Dockerfile examples at the end of this announcement.\r\n\r\nThe `ASPNETCORE_URLS` env var that allows ASP.NET Core apps to accept traffic from outside the container will be set in all the `dotnet` images, which was a common early stumbling block for people getting started with ASP.NET Core and Docker. PR is [here](https://github.com/dotnet/dotnet-docker/pull/450)\r\n\r\n### Why the merge?\r\n\r\nFor some time we have been seeing people search for and find the `microsoft/dotnet` images and never realise that there are aspnetcore ones. This could be problematic in the past as the dotnet images were not optimised for ASP.NET Core, making things a little harder or slower. But with changes in the way ASP.NET Core works in 2.1 it was going to be much more impactful, in that ASP.NET Core applications were not likely to run on the base dotnet image. Given that we also thought it made more sense to have a single repository for all images, as ASP.NET is just part of .NET, we are taking this opportunity to remove the potential source of confusion and wasted time for our customers.\r\n\r\n### Why no Node?\r\nThere are two main reasons for this:\r\n\r\n  1. Multi-stage build now makes it easier to pull in the Node image for purely build concerns.\r\n  2. The ASP.NET Core templates no longer have a hard dependency on Node.\r\n\r\n\r\nFor discussion and feedback on this decision you can go here: [https://github.com/aspnet/aspnet-docker/issues/403](https://github.com/aspnet/aspnet-docker/issues/403)\r\n\r\n### Dockerfile examples\r\n\r\nIf you need Node then you will need to add it in your own Dockerfile, like this:\r\n\r\n```Dockerfile\r\nFROM microsoft/dotnet:2.1-sdk as build-env\r\nWORKDIR /app\r\n#setup node\r\nENV NODE_VERSION 8.9.4\r\nENV NODE_DOWNLOAD_SHA 21fb4690e349f82d708ae766def01d7fec1b085ce1f5ab30d9bda8ee126ca8fc\r\n\r\nRUN curl -SL \"https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.gz\" --output nodejs.tar.gz \\\r\n    && echo \"$NODE_DOWNLOAD_SHA nodejs.tar.gz\" | sha256sum -c - \\\r\n    && tar -xzf \"nodejs.tar.gz\" -C /usr/local --strip-components=1 \\\r\n    && rm nodejs.tar.gz \\\r\n    && ln -s /usr/local/bin/node /usr/local/bin/nodejs\r\n\r\n# copy csproj and restore as distinct layers\r\nCOPY *.csproj ./\r\nRUN dotnet restore\r\n\r\n# copy everything else and build\r\nCOPY . ./\r\nRUN dotnet publish -c Release -o out\r\n\r\n# build runtime image\r\nFROM microsoft/dotnet:2.1-aspnetcore-runtime\r\nWORKDIR /app\r\n#setup node, this is only needed if you use Node both at runtime and build time. Some people may only need the build part.\r\nENV NODE_VERSION 8.9.4\r\nENV NODE_DOWNLOAD_SHA 21fb4690e349f82d708ae766def01d7fec1b085ce1f5ab30d9bda8ee126ca8fc\r\n\r\nRUN curl -SL \"https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.gz\" --output nodejs.tar.gz \\\r\n    && echo \"$NODE_DOWNLOAD_SHA nodejs.tar.gz\" | sha256sum -c - \\\r\n    && tar -xzf \"nodejs.tar.gz\" -C /usr/local --strip-components=1 \\\r\n    && rm nodejs.tar.gz \\\r\n    && ln -s /usr/local/bin/node /usr/local/bin/nodejs\r\n\r\nCOPY --from=build-env /app/out .\r\nENTRYPOINT [\"dotnet\", \"aspnetapp.dll\"]\r\n```\r\n\r\nIf you only need Node at build then you may also be able to take advantage of multi-stage build like the following:\r\n\r\n```Dockerfile\r\nFROM microsoft/dotnet:2.1-sdk as build-env\r\nWORKDIR /app\r\n\r\n# copy csproj and restore as distinct layers\r\nCOPY *.csproj ./\r\nRUN dotnet restore\r\n\r\nFROM node as clientBuild\r\n#Do npm restore and other Node stuff.\r\n\r\n#Merge the contents of your .NET build env and your clientBuild and publish.\r\nFROM build-env as publish\r\n# copy everything else and build\r\nCOPY --from=clientBuild . .\r\nRUN dotnet publish -c Release -o out\r\n\r\n# build runtime image\r\nFROM microsoft/dotnet:2.1-aspnetcore-runtime\r\nWORKDIR /app\r\n\r\nCOPY --from=publish /app/out .\r\nENTRYPOINT [\"dotnet\", \"aspnetapp.dll\"]\r\n```\r\n\r\nFor discussion and feedback on this decision you can go here: [https://github.com/aspnet/aspnet-docker/issues/403](https://github.com/aspnet/aspnet-docker/issues/403)\r\n","Url":"https://github.com/aspnet/Announcements/issues/298","RelatedDescription":"Open issue \"Migrating from aspnetcore docker repos to dotnet\" (#298)"},{"Id":"305936138","IsPullRequest":false,"CreatedAt":"2018-03-16T14:09:54","Actor":"mnmr","Number":"297","RawContent":null,"Title":"Model binding accesses read-only properties in post-back","State":"closed","Body":"I have a simple edit model, which contains a few computed/read-only properties. When posting to a controller method, the model validation engine accesses these properties, causing an exception.\r\n\r\nHowever, it does not make sense to access or attempt to validate a read-only property.\r\n\r\nAdditionally, all properties are marked with [BindNever], which seems to have no effect on this behavior.\r\n\r\nThe controller method takes a single parameter (the edit model) decorated with [FromForm].\r\n\r\nUsing 2.1.0-preview2-30355.","Url":"https://github.com/aspnet/Announcements/issues/297","RelatedDescription":"Closed issue \"Model binding accesses read-only properties in post-back\" (#297)"},{"Id":"305310538","IsPullRequest":false,"CreatedAt":"2018-03-14T20:08:36","Actor":"halter73","Number":"296","RawContent":null,"Title":"Managed sockets will replace libuv as Kestrel's default transport","State":"open","Body":"Starting in ASP.NET Core 2.1.0, managed sockets will be replacing libuv as Kestrel's default transport.\r\n\r\nThis change should only break applications that bind to non-TCP endpoints or explicitly call `IWebHostBuilder.UseLibuv()` and reference the libuv transport transitively through the Microsoft.AspNetCore.App and/or Microsoft.AspNetCore.Server.Kestrel NuGet packages.\r\n\r\nTo fix the break simply add a reference to Microsoft.AspNetCore.All and/or Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv.\r\n\r\nWhile switching to the managed socket transport should be seamless<sup>1</sup>, if you want to continue using the libuv transport in 2.1.0 you will need to explicitly call `UseLibuv()` and reference the libuv transport either directly or through the \"All\" metapackage.\r\n\r\n<sup>1</sup> Unless you are trying to bind to a Unix domain socket or use systemd socket activation. As of 2.1, only the libuv transport supports binding to these kinds of endpoints.\r\n\r\n---\r\n\r\n*Please use aspnet/KestrelHttpServer#2360 for further discussion.*","Url":"https://github.com/aspnet/Announcements/issues/296","RelatedDescription":"Open issue \"Managed sockets will replace libuv as Kestrel's default transport\" (#296)"},{"Id":"304854672","IsPullRequest":false,"CreatedAt":"2018-03-13T17:07:23","Actor":"blowdart","Number":"295","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-0787: ASP.NET Core Elevation Of Privilege Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-0787: ASP.NET Core Elevation Of Privilege Vulnerability\r\n\r\n## Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core versions 1.0, 1.1 and 2.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security vulnerability in all public versions of ASP.NET Core where an elevation of privilege vulnerability exists when a ASP.NET Core web application fails to validate web requests correctly.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/Home/issues/2954\r\n\r\n### Mitigation factors\r\n\r\nSites are not vulnerable to this elevation of privilege when:\r\n\r\n* The site is hosted behind a proxy, such as Internet Information Services (IIS), NGINX, or Apache, where:\r\n\r\n  * The proxy validates the host header, and\r\n  * The proxy is configured to listen on fully qualified domain names or\r\n  * The proxy is configured with a wildcard subdomain where the root domain is fully controlled by the site owner.\r\n\r\nFor example, if IIS is configured to respond to requests for `contoso.com` or `*.contoso.com` hosts, the application is protected.\r\n\r\nIf IIS is configured to respond to any request from any host, the application is vulnerable.\r\n\r\nKestrel does not have the capability to validate host headers and is vulnerable if not placed behind a proxy that performs the host header validation.\r\n\r\nApps hosted in Azure Web Apps are not susceptible to this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny ASP.NET Core hosted application which is directly exposed to the internet, or hosted behind a proxy which does not validate or restict host headers to known good values.\r\n\r\nThe vulnerability also affects any ASP.NET Core 2.0 project if it uses the following package versions, which must also be [updated](#app-update), in addition to addressing your proxy configuration :\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.HttpOverrides | 2.0.0, 2.0.1 |  2.0.2 and later\r\nMicrosoft.AspNetCore.Server.Kestrel.Core | 2.0.0, 2.0.1 |  2.0.2 and later\r\n\r\n*No patches are available for ASP.NET Core 1.0.x or ASP.NET Core 1.1.x. Microsoft requires that you place your 1.x ASP.NET Core application behind a proxy.\r\nYou must address the configuration of your proxy to protect your application. If you're not running ASP.NET Core 1.x behind a proxy, you must either place a proxy in front of your application or upgrade to ASP.NET Core 2.0.\r\nand add the host validating middleware provided at https://github.com/aspnet/BasicMiddleware/blob/release/2.0/samples/HostFilteringSample/.*\r\n\r\n## Advisory FAQ\r\n### How do I know if I am affected?\r\n\r\nReview the server and proxy configuration [instructions](#configuration) below to see if your system is configured correctly, and adjust the configuration if necessary.\r\n\r\n### How do I fix the issue?\r\n\r\nYou must address the [configuration](#configuration) of your server or proxy to protect your application to limit requests to known hosts.\r\n\r\nIf you're not running Kestrel 1.x behind a proxy, you must either place a proxy in front of your application or upgrade to ASP.NET Core 2.0 and follow the 2.0 instructions below.\r\n\r\nASP.NET Core 2.0.x applications must [update your code](#app-update) to fully protect your application.\r\n\r\n#### <a name=\"configuration\"></a> Server and Proxy configuration\r\n\r\nYou must examine your externally facing server or proxy configuration and ensure it requires host headers with fully qualified domain names, or known sub-domains if you are using sub-domain wild cards.\r\n\r\n##### ASP.NET Core applications behind [IIS](https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/iis/)\r\n\r\nTo configure IIS to only respond to know hosts:\r\n\r\n* Open IIS Manager.\r\n* Expand the **Sites** node for the machine you want to configure.\r\n* Select the site by clicking on the site.\r\n* In the **Actions** list on the right-hand side of IIS Manager, click **Bindings**.\r\n* Edit any bindings that do not have a host name to specify one. Do not use a `*` wildcard unless it's against a domain under your control. For example, `*.contoso.com` is safe, `*.com` is not.\r\n\r\n##### ASP.NET Core applications running publicly on [Kestrel](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/servers/kestrel)\r\n\r\nKestrel does not have the capability to validate host headers. It must either be placed behind a proxy that performs the host header validation or the validation must be performed within the application by adding  host filtering middleware provided at https://github.com/aspnet/BasicMiddleware/blob/release/2.0/samples/HostFilteringSample/. You must also [update your dependencies](#app-update) to fully protect your application.\r\n\r\n##### ASP.NET Core applications running on [HTTP.SYS](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/servers/httpsys)\r\n\r\nTo configure URL prefixes and ports, you can use the `UseUrls` extension method, the `urls` command-line argument, the ASPNETCORE_URLS environment variable, or the `UrlPrefixes` property on [HttpSysOptions](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.server.httpsys.httpsysoptions). The following code example uses `UrlPrefixes`.\r\n\r\n```c#\r\npublic static IWebHost BuildWebHost(string[] args) =>\r\n    WebHost.CreateDefaultBuilder(args)\r\n        .UseStartup<Startup>()\r\n        .UseHttpSys(options =>\r\n        {\r\n            // The following options are set to default values.\r\n            options.Authentication.Schemes = AuthenticationSchemes.None;\r\n            options.Authentication.AllowAnonymous = true;\r\n            options.MaxConnections = null;\r\n            options.MaxRequestBodySize = 30000000;\r\n            options.UrlPrefixes.Add(\"http://localhost:5000\");\r\n        })\r\n        .Build();\r\n```\r\n\r\n##### ASP.NET Core applications behind [NGINX](https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/linux-nginx)\r\n\r\nTo configure NGINX as a reverse proxy to forward requests to your ASP.NET Core app, replace the contents */etc/nginx/sites-available/default* with the following:\r\n\r\n```NGINX\r\nserver {\r\n    listen        80;\r\n    server_name   example.com *.example.com;\r\n    location / {\r\n        proxy_pass         http://localhost:5000;\r\n        proxy_http_version 1.1;\r\n        proxy_set_header   Upgrade $http_upgrade;\r\n        proxy_set_header   Connection keep-alive;\r\n        proxy_set_header   Host $host;\r\n        proxy_cache_bypass $http_upgrade;\r\n    }\r\n}\r\n```\r\n\r\nNote that with NGINX, when there is no match for `server_name`, NGINX will pick the default server. If no default server has been defined, the first server in the conf file is the default server. Best practice is to add a specific default server which returns a status code of 444 in the conf file. An example default server configuration would be as follows:\r\n\r\n```NGINX\r\nserver {\r\n    listen   80 default_server;\r\n    # listen [::]:80 default_server deferred;\r\n    return   444;\r\n}\r\n```\r\n\r\nWith the preceding configuration file and default server, NGINX accepts public traffic on port 80 with host header `example.com` or `*.example.com`. Requests not matching these hosts won't get forwarded to Kestrel. NGINX forwards the matching requests to Kestrel at `http://localhost:5000`. See [How nginx processes a request](https://nginx.org/docs/http/request_processing.html) for more information.\r\n\r\nOnce the NGINX configuration is established, run `sudo nginx -t` to verify the syntax of the configuration files. If the configuration file test is successful, force NGINX to pick up the changes by running `sudo nginx -s reload`.\r\n\r\n##### ASP.NET Core applications behind [Apache](https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/linux-apache)\r\n\r\nConfiguration files for Apache are located within the `/etc/httpd/conf.d/` directory. Any file with the `*.conf*` extension:\r\n\r\n* Is processed in alphabetical order, and\r\n* The module configuration files in `/etc/httpd/conf.modules.d/` are processed. The module configuration files in `/etc/httpd/conf.modules.d/` contain any configuration files necessary to load modules.\r\n\r\n\r\n```\r\n<VirtualHost *:80>\r\n    ProxyPreserveHost On\r\n    ProxyPass / http://127.0.0.1:5000/\r\n    ProxyPassReverse / http://127.0.0.1:5000/\r\n    ServerName www.example.com\r\n    ServerAlias *.example.com\r\n</VirtualHost>\r\n```\r\n\r\nThe `VirtualHost` block can appear multiple times, in one or more files on a server. In the preceding configuration file, Apache accepts public traffic on port 80. The domain `www.example.com` is being served, and the `*.example.com` alias resolves to the same website. See [Name-based virtual host support](https://httpd.apache.org/docs/current/vhosts/name-based.html) for more information. Requests are proxied at the root to port 5000 of the server at 127.0.0.1. For bi-directional communication, `ProxyPass` and `ProxyPassReverse` are required.\r\n\r\nSave the file and test the configuration. If everything passes, the response is `Syntax [OK]`.\r\n\r\n```bash\r\nsudo service httpd configtest\r\n```\r\n\r\nRestart Apache:\r\n\r\n```bash\r\nsudo systemctl restart httpd\r\nsudo systemctl enable httpd\r\n```\r\n\r\n\r\n#### <a name=\"app-update\"></a> ASP.NET Core 2.0 application code updates\r\n\r\n---\r\n\r\nIf you're targeting .NET Core 2.x and the `Microsoft.AspNetCore.All` \"metapackage\":\r\n\r\n* Update its version number to 2.0.6 or later.\r\n* Updating will pull in the fixed packages listed above.\r\n\r\nIf you're targeting .NET Framework, update the packages listed above to their safe version or later.\r\n\r\nIf your application is using Kestrel without a proxy or the HttpOverrides functionality (UseForwardedHeaders with ForwardedHost) you must also add the host filtering middleware provided at https://github.com/aspnet/BasicMiddleware/tree/release/2.0/samples/HostFilteringSample/.\r\n\r\n---\r\n\r\n.NET Core and ASP.NET Core have two types of dependencies: direct and transitive. You must follow the update instructions below to address both types of dependency.\r\n\r\n### Direct dependencies\r\n\r\nDirect dependencies are dependencies where you specifically add a package to your project. For example, if you add the `Microsoft.AspNetCore.Mvc` package to your project then you have taken a direct dependency on `Microsoft.AspNetCore.Mvc`.\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file.\r\n\r\n### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if you add the `Microsoft.AspNetCore.Mvc` package to your project it depends on the `Microsoft.AspNetCore.Mvc.Core` package (among others). Your project has a direct dependency on `Microsoft.AspNetCore.Mvc` and a transitive dependency on the `Microsoft.AspNetCore.Mvc.Core` package.\r\nTransitive dependencies are reviewable:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n\r\n##### Fixing direct dependencies – Projects targeting .NET Core\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the content menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.5\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the vulnerable metapackage, as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute. The package version number is in the `Version` attribute. The example shows a single direct dependency on `Microsoft.AspNetCore.All` version 2.0.5.\r\n\r\nTo update the version to the secure package, change the version number to a secure package version. In this example, update `Microsoft.AspNetCore.All` to 2.0.6 or later. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.6\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and save your updated *csproj* file, Visual Studio will restore the new package version. You can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\n##### Fixing direct dependencies – Projects targeting .NET Framework\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the content menu, where projectname is the name of your project. Look for `PackageReference` nodes. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.HttpOverrides\" Version=\"2.0.1\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe example has a reference to a single package, as seen by the `PackageReference` element. The name of the package is in the `Include` attribute. The package version number is in the `Version` attribute. The example shows a direct dependency on one of the vulnerable packages from the table above, `Microsoft.AspNetCore.HttpOverrides` version 2.0.1.\r\n\r\nTo update to the secure package, change the version number to the updated package version. In the example, this would be updating `Microsoft.AspNetCore.HttpOverrides` to 2.0.2 and later. Save the *csproj* file. The updated and secure *csproj* look as follows:\r\n\r\n``` XML\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.HttpOverrides\" Version=\"2.0.2\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and save your updated *csproj* file, Visual Studio will restore the new package version. You can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependency version.\r\n\r\n##### After updating your direct dependencies\r\n\r\nRecompile your application.\r\n\r\nIf after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to a compatible version. \r\n\r\nFor example if your project refers directly to `Microsoft.AspNetCore.Mvc.Cors` with a version number of `2.0.0`, when you update your `Microsoft.AspNetCore.Mvc` package to 2.0.1, compilation will throw:\r\n\r\n`NU1012      Dependency conflict. Microsoft.AspNetCore.Mvc 2.0.1 expected Microsoft.AspNetCore.Mvc.Cors >= 2.0.1 but received 2.0.0`\r\n\r\nTo fix this, edit the version for the expected package to be the version expected by updating your *project.json* in the same way that you used to update the vulnerable package versions.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n###### Reviewing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either use Visual Studio’s Solution Explorer, or you can review the *project.assets.json* file.\r\n\r\n###### Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for each of the vulnerable package names above and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![vs2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In these results, you can see a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions. In this example, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions. In the example, the `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a vulnerable version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n###### Manually reviewing project.assets.json (VS2017)\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file. Visual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for each of the vulnerable packages, using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the vulnerable versions table above.\r\n\r\nFor example, a search result that shows `Microsoft.AspNetCore.Mvc.Cors/1.1.0` is a reference to v1.1.0 of `Microsoft.AspNetCore.Mvc.Cors`.   If your *project.assets.json* file includes references to any of the vulnerable packages shown above, then you need to fix the transitive dependencies.\r\n\r\n###### Overriding transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages this means:\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to any of the vulnerable packages you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the content menu, where projectname is the name of your project. Look for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nFor each of the vulnerable packages your search returned, you must add a direct dependency to the updated version by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referring the fixed version.\r\nFor example, if your search showed a transitive reference to the vulnerable `Microsoft.AspNetCore.HttpOverrides` version 2.0.0 you would add a reference to the fixed version, that is, 2.0.2 or later.\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.HttpOverride\" Version=\"2.0.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you have added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n###### Rebuilding your application\r\n\r\nRebuild your application. Test and deploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n\r\n[Mikhail Shcherbakov](https://www.linkedin.com/in/mikhailshcherbakov/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-0787](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0787)\r\n\r\n### Revisions\r\n\r\nV1.1 (Mar 15, 2018): NGINX configuration instructions updated, thanks to @buglloc\r\nV1.0 (Mar 13, 2018): Advisory published.\r\n\r\n_Version 1.1_\r\n_Last Updated 2018-03-15_","Url":"https://github.com/aspnet/Announcements/issues/295","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-0787: ASP.NET Core Elevation Of Privilege Vulnerability\" (#295)"},{"Id":"304853568","IsPullRequest":false,"CreatedAt":"2018-03-13T17:04:23","Actor":"blowdart","Number":"294","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-0808: ASP.NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-0808: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in public ASP.NET Core 1.0, 1.1 and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in all public versions of ASP.NET Core where, if an application is hosted behind Internet Information Server (IIS) a remote unauthenticated attacker can use a specially crafted request can cause a Denial of Service.\r\n\r\n## Dicussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/IISIntegration/issues/658\r\n\r\n### Mitigation Factors\r\nAny site hosted behind a different proxy, such as nginx or an application hosted in Azure, which uses Application Request Routing (ARR) as a proxy is not affected. \r\n\r\n## Affected Software\r\nThe vulnerabilities affect any Microsoft ASP.NET Core project if it is hosted behind an IIS server running AspNetCoreModule (ANCM) prior to 7.1.1990.0.\r\n\r\n## Advisory FAQ\r\n### How do I know if I am affected? \r\n\r\nOpen a PowerShell prompt and run the following command\r\n\r\n```powershell\r\n(Get-Item $env:SystemDrive\\Windows\\System32\\inetsrv\\aspnetcore.dll).VersionInfo\r\n```\r\n\r\nor use the Windows file properties dialog to check the version on `C:\\Windows\\System32\\inetsrv\\aspnetcore.dll`, where C: is your OS install drive.\r\n\r\nIf the file version is less than 7.1.1990.0 you are affected.\r\n\r\n### How do I fix the issue? \r\nInstall the latest version of the ASP.NET Core Hosting Bundle \r\n(You need only install a single version, i.e. installing Version 2.0 will protect Version 1.0/1.1 .NET Core applications and vice versa. Choose the one that corresponds to the highest runtime version on your server).\r\n\r\n* [Hosting Bundle for ASP.NET Core 1.0/1.1](https://go.microsoft.com/fwlink/?linkid=869677)\r\n* [Hosting Bundle for ASP.NET Core 2.0](https://go.microsoft.com/fwlink/?linkid=869674)\r\n\r\nThen restart IIS by running \r\n\r\n```\r\nnet stop was /y\r\nnet start w3svc\r\n```\r\n\r\nfrom an elevated command line.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\t\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n\r\nAndrei Gorlov\r\n\r\n### External Links\r\n\r\n[CVE-2018-0808](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0808)\r\n\r\n### Revisions\r\n\r\nV1.0 (Mar 13, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-03-13_","Url":"https://github.com/aspnet/Announcements/issues/294","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-0808: ASP.NET Core Denial Of Service Vulnerability\" (#294)"},{"Id":"303604146","IsPullRequest":false,"CreatedAt":"2018-03-08T19:36:01","Actor":"natemcmaster","Number":"293","RawContent":null,"Title":"Moving official daily builds to the dotnet-core MyGet feed ","State":"open","Body":"As part of ongoing infrastructural changes, we will be moving official daily of ASP.NET Core to the dotnet-core myget feed. This transition will happen over the next few weeks.\r\n\r\n**Old feed:** https://dotnet.myget.org/F/aspnetcore-dev/api/v3/index.json\r\n**New feed:** https://dotnet.myget.org/F/dotnet-core/api/v3/index.json\r\n\r\nWe recommend updating to use the dotnet-core feed to continue getting the latest daily builds of ASP.NET Core.\r\n\r\nWe are making this change to make it easier for you to pull daily builds that align with the .NET Core CLI and .NET Core runtime. Some of our existing MyGet feeds will continue to exist, but will not be used for official daily builds. Instead, those feeds will only be used for builds of experimental branches of aspnetcore.\r\n\r\nOther useful links:\r\nGallery: https://dotnet.myget.org/gallery/dotnet-core\r\nNuGet v2 source: https://dotnet.myget.org/F/dotnet-core/api/v2\r\nNPM feed: https://dotnet.myget.org/F/dotnet-core/npm/\r\n\r\nPlease use https://github.com/aspnet/Home/issues/2937 for discussion.","Url":"https://github.com/aspnet/Announcements/issues/293","RelatedDescription":"Open issue \"Moving official daily builds to the dotnet-core MyGet feed \" (#293)"},{"Id":"302846756","IsPullRequest":false,"CreatedAt":"2018-03-06T20:07:15","Actor":"natemcmaster","Number":"292","RawContent":null,"Title":"Deprecating the `microsoft/aspnetcore-build:1.0-2.0` Docker image","State":"open","Body":"We will be deprecating the following Docker images\r\n \r\n- microsoft/aspnetcore-build:1.0-1.1\r\n- microsoft/aspnetcore-build:1.0-2.0\r\n\r\nWe will not delete these images. These images will continue to receive patch update whenever a 1.0.x, 1.1.x, or 2.0.x update ships, however, we will not produce a new version which contains the 2.1 runtime.\r\n\r\n### Why?\r\n \r\nThese images existed to support CI/CD pipelines that run apps on multiple versions for .NET Core in the same container. With each release, these images have grown in size. The 1.0-2.0 image is already about 1GB, and would continue to grow with runtime updates. \r\n \r\nFortunately, recent improvements to .NET Core (such as minor version roll-forward) and Docker (multi-stage builds) have reduced the need to use an image with multiple versions of .NET Core. We have seen usage of these multi-version images declining over time, and today, they are a small percentage of our Docker image usage.\r\n\r\nRather than maintaining a single, large image with all possible .NET Core runtimes, we encourage users to use multi-stage builds. Docker's multi-stage feature allows you to compose a single Dockerfile, but still use multiple .NET Core runtimes. Also, starting in 2.1, .NET Core supports rolling forward the runtime version within the major version, which will further reduce the need to have multiple 2.x runtimes side-by-side.\r\n \r\nFor discussion, use https://github.com/aspnet/aspnet-docker/issues/349","Url":"https://github.com/aspnet/Announcements/issues/292","RelatedDescription":"Open issue \"Deprecating the `microsoft/aspnetcore-build:1.0-2.0` Docker image\" (#292)"},{"Id":"301939059","IsPullRequest":false,"CreatedAt":"2018-03-02T23:33:38","Actor":"blowdart","Number":"291","RawContent":null,"Title":"Statement on ASP.NET susceptibility to the recent DuoLabs SAML vulnerability announcement.","State":"open","Body":"This week saw an announcement of vulnerabilities in  SAML parsing libraries by [DUO Labs](https://duo.com/blog/duo-finds-saml-vulnerabilities-affecting-multiple-implementations). Whilst no Microsoft implementations were listed we've seen a number of customer questions about this, especially given the recent WS-Fed support added to ASP.NET Core. \r\n\r\nASP.NET and ASP.NET Core rely on libraries from the Windows Identity team. Their investigation shows [their libraries are not vulnerable](https://cloudblogs.microsoft.com/enterprisemobility/2018/03/02/latest-saml-vulnerability-not-present-in-azure-ad-and-adfs/) to this parsing vulnerability, thus any ASP.NET or ASP.NET Core application which uses the default Microsoft SAML libraries or authentication handlers are safe from this exploit.\r\n","Url":"https://github.com/aspnet/Announcements/issues/291","RelatedDescription":"Open issue \"Statement on ASP.NET susceptibility to the recent DuoLabs SAML vulnerability announcement.\" (#291)"},{"Id":"300752371","IsPullRequest":false,"CreatedAt":"2018-02-27T18:58:59","Actor":"natemcmaster","Number":"290","RawContent":null,"Title":"dotnet-watch, dotnet-ef, and dotnet-user-secrets will move into the .NET Core CLI in 2.1.300","State":"open","Body":"Starting in .NET Core CLI 2.1.300-preview2, the following tools were added as bundled, top-level commands. These tools previously shipped as NuGet packages.\r\n\r\n - Microsoft.DotNet.Watcher.Tools (aka dotnet-watch)\r\n - Microsoft.EntityFrameworkCore.Tools.DotNet (aka dotnet-ef)\r\n - Microsoft.Extensions.SecretManager.Tools (aka dotnet-user-secrets)\r\n - Microsoft.Extensions.Caching.SqlConfig.Tools (aka dotnet-sql-cache)\r\n\r\nCommands like `dotnet watch`, `dotnet ef`, and `dotnet user-secrets` can be executed on any project without needing to install the command via \"dotnet restore\" or \"dotnet install tool\". The commands are available by default in all projects.\r\n\r\n### Upgrading from stable releases of .NET Core CLI (e.g. 2.1.5)\r\n\r\nUsing these tools as a DotNetCliToolReference will no longer work. If your .csproj file has the following lines, they can be removed.\r\n```xml\r\n<ItemGroup>\r\n   <DotNetCliToolReference Include=\"Microsoft.DotNet.Watcher.Tools\" Version=\"(all versions)\" />\r\n   <DotNetCliToolReference Include=\"Microsoft.EntityFrameworkCore.Tools.DotNet\" Version=\"(all versions)\" />\r\n   <DotNetCliToolReference Include=\"Microsoft.Extensions.SecretManager.Tools\" Version=\"(all versions)\" />\r\n   <DotNetCliToolReference Include=\"Microsoft.Extensions.Caching.SqlConfig.Tools\" Version=\"(all versions)\" />\r\n</ItemGroup>\r\n```\r\n\r\n### Upgrading from .NET Core CLI 2.1.300-preview1\r\nFor early-adopters who tried the 2.1.300-preview1 release, you will no longer need to run `dotnet install tool -g` to acquire the following tools:\r\n - dotnet-watch\r\n - dotnet-user-secrets\r\n - dotnet-dev-certs\r\n - dotnet-sql-cache\r\n - dotnet-ef\r\n\r\nIf you had installed these tools in 2.1.300-preview1, you can uninstall them manually by deleting corresponding files from `%USERPROFILE%\\.dotnet\\tools\\` (Windows) or `$HOME/.dotnet/tools` (macOS/Linux).\r\n\r\n**For discussion use https://github.com/aspnet/DotNetTools/issues/399**","Url":"https://github.com/aspnet/Announcements/issues/290","RelatedDescription":"Open issue \"dotnet-watch, dotnet-ef, and dotnet-user-secrets will move into the .NET Core CLI in 2.1.300\" (#290)"},{"Id":"295436695","IsPullRequest":false,"CreatedAt":"2018-02-08T09:18:21","Actor":"SteveSandersonMS","Number":"289","RawContent":null,"Title":"Retiring the Microsoft.AspNetCore.SpaTemplates package (Aurelia/Knockout/Vue templates)","State":"open","Body":"The `Microsoft.AspNetCore.SpaTemplates` package never shipped in the .NET Core SDK, and never reached an official level of support. The ASP.NET team's development resources are finite, and we think we can deliver more valuable features to ASP.NET developers by focusing elsewhere.\r\n\r\nSo:\r\n\r\n* The `Microsoft.DotNet.Web.Spa.ProjectTemplates` package, containing **Angular**, **React**, and **React+Redux** templates, is **not affected**. This ships in the .NET Core SDK and is officially supported. We continue to invest development effort in this package. We can put *more* time and effort into these SPA templates now the effort isn't so spread out.\r\n* If you have an existing Aurelia/Knockout/Vue project based on our SPA templates, you're not directly affected because these templates are only used to create new projects. You can continue building and shipping your app forever. Obviously we still support and enhance the underlying ASP.NET Core APIs (such as those in JavaScriptServices) that you are using.\r\n* The `Microsoft.AspNetCore.SpaTemplates` package, containing Aurelia, Knockout, and Vue templates, continues to be available, but we'll no longer update it or work on issues related to it.\r\n* We encourage enthusiastic community members to [ship your own `dotnet new` templates](https://docs.microsoft.com/en-us/dotnet/core/tools/custom-templates). The `dotnet new` system is extensible for this exact reason. If you want to own the go-to Aurelia/Knockout/Vue project template, now's your chance! You could [fork the ones from `Microsoft.AspNetCore.SpaTemplates`](https://github.com/aspnet/templating/tree/dev/src/Microsoft.AspNetCore.SpaTemplates), or start from scratch depending on what you prefer.\r\n* In the long term, if another JavaScript SPA framework becomes dominant, we will of course consider adding a template for it to the SDK templates package.\r\n\r\nI know this will be irritating to some people, especially those who have worked on PRs for the Aurelia/Knockout/Vue templates. I'm sorry about that! I hope you can understand that our goal is to offer the overall maximum benefit for ASP.NET developers based on the resources available.\r\n\r\nDiscussion for this issue is at https://github.com/aspnet/JavaScriptServices/issues/1522","Url":"https://github.com/aspnet/Announcements/issues/289","RelatedDescription":"Open issue \"Retiring the Microsoft.AspNetCore.SpaTemplates package (Aurelia/Knockout/Vue templates)\" (#289)"},{"Id":"294037619","IsPullRequest":false,"CreatedAt":"2018-02-02T22:04:23","Actor":"danroth27","Number":"288","RawContent":null,"Title":"ASP.NET Core 2.1 high-level planning","State":"open","Body":"*This is high-level only and doesn't include all issues, bugs, etc. from every repo, just intended to give a general idea of release scope and direction.*\r\n\r\nThe following high-level features are planned for the ASP.NET Core 2.1 release:\r\n- **SignalR** - Real-time web framework on ASP.NET Core (https://github.com/aspnet/SignalR/issues/394)\r\n- **HTTPS** - On by default and easy to configure (https://github.com/aspnet/Home/issues/2308)\r\n- **GDPR compliance** - Templates updated with new privacy features (https://github.com/aspnet/Security/issues/1561, https://github.com/aspnet/Identity/issues/1341)\r\n- **Web API conventions** - Rich Swagger support without attributes (https://github.com/aspnet/Mvc/issues/6870, https://github.com/aspnet/Mvc/issues/6784)\r\n- **IHttpClientFactory** - HttpClient as a service, handle cross-cutting concerns like caching, retry logic, timeouts and circuit breakers (https://github.com/aspnet/HttpClientFactory/issues/42)\r\n- **ASP.NET Core Module in-proc hosting** - 6x the throughput on IIS! Better startup error handling (https://github.com/aspnet/AspNetCoreModule/issues/265)\r\n- **Razor pages improvements** - Support for areas, ~/Pages/Shared (https://github.com/aspnet/Mvc/issues/6926, https://github.com/aspnet/Mvc/issues/6604)\r\n- **MVC functional test fixture** - Easily test your MVC apps end-to-end (https://github.com/aspnet/Mvc/issues/6233)\r\n- **Build-time Razor** - Compile Razor pages and views as part of your build, improved startup performance (https://github.com/aspnet/Razor/issues/1809)\r\n- **UI as a library** - Package Razor pages and views as reusable libraries (https://github.com/aspnet/Razor/issues/1809)\r\n- **Identity UI package and scaffolder** - Add identity to any application (https://github.com/aspnet/Home/issues/2311)\r\n- **WebHooks** - Handle WebHook notifications from ASP.NET Core apps (https://github.com/aspnet/WebHooks/issues/5)\r\n\r\nFor more details on each of these features see the [ASP.NET Core 2.1 roadmap](https://blogs.msdn.microsoft.com/webdev/2018/02/02/asp-net-core-2-1-roadmap/) post on the ASP.NET team blog.\r\n\r\nDiscussion for this issue is at aspnet/Home#2846","Url":"https://github.com/aspnet/Announcements/issues/288","RelatedDescription":"Open issue \"ASP.NET Core 2.1 high-level planning\" (#288)"},{"Id":"292632569","IsPullRequest":false,"CreatedAt":"2018-01-30T02:33:11","Actor":"DamianEdwards","Number":"287","RawContent":null,"Title":"Introduction of new meta-package \"Microsoft.AspNetCore.App\"","State":"open","Body":"## Overview\r\nASP.NET Core 2.1 will introduce a new meta-package for use by applications: *Microsoft.AspNetCore.App*. Additionally, new projects created that target 2.1 will use this meta-package by default, rather than the existing meta-package *Microsoft.AspNetCore.All*.\r\n\r\nThe new meta-package differs from the existing meta-package in that it reduces the number of dependencies of packages not owned or supported by the ASP.NET or .NET teams to just those deemed necessary to ensure the major frameworks features function. The full list of packages being removed compared to *Microsoft.AspNetCore.All* can be seen below.\r\n\r\nThe existing *Microsoft.AspNetCore.All* meta-package will continue to be made available throughout the 2.x lifecycle, but we recommend customers move to the new *Microsoft.AspNetCore.App* meta-pacakge and then add individual references to any of the removed packages if their app requires it.\r\n\r\n## Package references not in \"Microsoft.AspNetCore.App\", compared to \"Microsoft.AspNetCore.All\"\r\nThe following packages are direct dependencies of *Microsoft.AspNetCore.All* but **not** of *Microsoft.AspNetCore.App*. Note that any dependencies of these packages that otherwise aren't dependencies of *Microsoft.AspNetCore.App* will now **not** be included implicitly, e.g. *StackExchange.Redis* as a dependency of *Microsoft.Extensions.Caching.Redis*, *Microsoft.ApplicationInsights* as a dependency of *Microsoft.AspNetCore.ApplicationInsights.HostingStartup*:\r\n- Microsoft.Data.Sqlite\r\n- Microsoft.Data.Sqlite.Core\r\n- Microsoft.EntityFrameworkCore.Sqlite\r\n- Microsoft.EntityFrameworkCore.Sqlite.Core\r\n- Microsoft.Extensions.Caching.Redis\r\n- Microsoft.AspNetCore.DataProtection.AzureStorage\r\n- Microsoft.Extensions.Configuration.AzureKeyVault\r\n- Microsoft.AspNetCore.DataProtection.AzureKeyVault\r\n- Microsoft.AspNetCore.Identity.Service.AzureKeyVault\r\n- Microsoft.AspNetCore.AzureKeyVault.HostingStartup\r\n- Microsoft.AspNetCore.ApplicationInsights.HostingStartup\r\n\r\nWhen moving from *Microsoft.AspNetCore.All* to *Microsoft.AspNetCore.App*, if your application uses any APIs from the above packages, or packages brought in by those packages, you'll now need to add references to those packages in your project manually.\r\n\r\nDiscussion for this issue at https://github.com/aspnet/MetaPackages/issues/255","Url":"https://github.com/aspnet/Announcements/issues/287","RelatedDescription":"Open issue \"Introduction of new meta-package \"Microsoft.AspNetCore.App\"\" (#287)"},{"Id":"287579430","IsPullRequest":false,"CreatedAt":"2018-01-10T21:14:16","Actor":"dougbu","Number":"286","RawContent":null,"Title":"Remove project file elements added for WebApiCompatShim in 2.0","State":"open","Body":"The Microsoft.AspNetCore.Mvc.WebApiCompatShim package now depends on the latest (5.2.4-preview1) Microsoft.AspNet.WebApi.Client package. That dependency includes a new .NET Standard 2.0 assembly. This assembly supports all platforms the Microsoft.AspNetCore.Mvc.WebApiCompatShim package supports and includes the full Web API Client feature set.\r\n\r\nWhen upgrading projects using the Microsoft.AspNetCore.Mvc.WebApiCompatShim package to our nightly builds or the forthcoming 2.1.0-preview1 release, we recommend removing the following elements from the project file. (Of course, some projects may need the elements for other reasons.)\r\n``` xml\r\n<PackageTargetFallback>$(PackageTargetFallback);portable-net451+win8</PackageTargetFallback>\r\n<DisableImplicitAssetTargetFallback>true</DisableImplicitAssetTargetFallback>\r\n```\r\n\r\nFYI the `<PackageTargetFallback>` element caused the application to build and run against the Portable Class Library (PCL) assembly from the Microsoft.AspNet.WebApi.Client package.\r\n\r\nFor discussion of this change, see aspnet/Mvc#7229.","Url":"https://github.com/aspnet/Announcements/issues/286","RelatedDescription":"Open issue \"Remove project file elements added for WebApiCompatShim in 2.0\" (#286)"},{"Id":"287180286","IsPullRequest":false,"CreatedAt":"2018-01-09T18:08:18","Actor":"blowdart","Number":"285","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-0784 - ASP.NET Core Templates enable Elevation Of Privilege Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-0784\r\n##  ASP.NET Core Templates enable Elevation Of Privilege Vulnerability\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of ASP.NET Core  2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of an elevation of privilege vulnerability exists when a ASP.NET Core web application, created using vulnerable project templates, fails to properly sanitize web requests. An attacker who successfully exploited this vulnerability could perform content injection attacks and run script in the security context of the logged-on user.\r\n\r\nTo exploit the vulnerability, an attacker could send a specially crafted email, containing a malicious link, to a user. Alternatively, an attacker could use a chat client to social engineer a user into clicking the malicious link. However, in all cases to exploit this vulnerability a user must click a maliciously crafted link from an attacker.\r\n\r\nThe security update addresses the vulnerability by correcting the ASP.NET Core project templates.\r\n\r\nDevelopers who have generated applications from the vulnerable templates should change their code using the following instructions. They should also change their code to address a further vulnerability,  [CVE-2018-0785](https://github.com/aspnet/Announcements/issues/284), which is in the same templates. Finally installing the latest .NET Core SDK, version 2.1.4, from https://www.microsoft.com/net/download/ will update the templates to correct the issue for any new applications created.\r\n\r\n### Discussion\r\n\r\nPlease use https://github.com/aspnet/templating/issues/225 for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nASP.NET Core applications which are not created using the ASP.NET Core 2.0 Individual Authentication templates are not vulnerable to this issue.\r\n\r\n## Affected Software\r\nThe vulnerabilities affect any Microsoft .NET Core project if it uses any of affected runtime versions listed below and have generated applications using Individual Authentication with usernames and passwords stored within the application. Applications which use Azure Active Directory, or Azure Active Directory B2C are not affected.\r\n\r\nVulnerable .NET SDK Version | Fixed SDK Version\r\n----------------| -------------------------\r\n2.0.0, 2.0.2, 2.0.3, 2.1.2, 2.1.3 |  2.1.4\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nYour application will be affected if you generated it using the ASP.NET 2.0 Web Application template or the ASP.NET 2.0 Web Application (Model/View/Controller) template from a vulnerable SDK version where you have selected individual authentication where user accounts are stored in-app.\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\sdk\\ |\r\n| macOS | /usr/local/share/dotnet/sdk/    |\r\n| Supported Linux platforms | /usr/share/dotnet/sdk/   |\r\n\r\nEach SDK version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 2.1.4 then any applications generated for ASP.NET Core 2.0 using Individual Authentication may be vulnerable.. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by changing the code created during application generation using the following instructions.\r\n\r\n#### For ASP.NET Core 2.0 Web Application (Razor Pages)\r\n\r\n1. Open `Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs` find the `OnPostAsync()` method and search for the following line\r\n\r\n```\r\n<div id=\"qrCodeData\" data-url=\"@Html.Raw(Model.AuthenticatorUri)\"></div>\r\n```\r\n\r\nReplace this line with the following code, removing the call to `Html.Raw()`\r\n\r\n```C#\r\n<div id=\"qrCodeData\" data-url=\"@Model.AuthenticatorUri\"></div>\r\n```\r\n\r\n2. Open the `Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs` and search for the following line, inside the `OnGetAsync()` method;\r\n\r\n```C#\r\nawait LoadSharedKeyAndQrCodeUriAsync(user);\r\n```\r\n\r\nRemove the code shown below which follows the call to `LoadSharedKeyAndQrCodeUriAsync(user);`\r\n\r\n```C#\r\nif (string.IsNullOrEmpty(SharedKey))\t\t\r\n{\t\t\r\n    await _userManager.ResetAuthenticatorKeyAsync(user);\t\t\r\n    await LoadSharedKeyAndQrCodeUriAsync(user);\t\t\r\n}\r\n```\r\n\r\nThe `OnGetAsync()` method should now look like\r\n\r\n```C#\r\npublic async Task<IActionResult> OnGetAsync()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    await LoadSharedKeyAndQrCodeUriAsync(user);\r\n\r\n    return Page();\r\n}\r\n```\r\n\r\n3. Still in the `Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs` file  and search for the `LoadSharedKeyAndQrCodeUriAsync(ApplicationUser user) function` and replace it with \r\n\r\n```C#\r\nprivate async Task LoadSharedKeyAndQrCodeUriAsync(ApplicationUser user)\r\n{\r\n    // Load the authenticator key & QR code URI to display on the form\r\n    var unformattedKey = await _userManager.GetAuthenticatorKeyAsync(user);\r\n    if (string.IsNullOrEmpty(unformattedKey))\r\n    {\r\n        await _userManager.ResetAuthenticatorKeyAsync(user);\r\n        unformattedKey = await _userManager.GetAuthenticatorKeyAsync(user);\r\n     }\r\n\r\n    SharedKey = FormatKey(unformattedKey);\r\n    AuthenticatorUri = GenerateQrCodeUri(user.Email, unformattedKey);\r\n }\r\n```\r\n\r\n4. Recompile your application and test you can generate 2fa recovery codes correctly, then redeploy your application.\r\n\r\n#### For ASP.NET Core 2.0 Web Application (Model/View/Controller)\r\n\r\n1. Open the `Controllers\\ManageController.cs` file and find the declaration for `private const string AuthenticatorUriFormat`. Add the following new const declaration below it;\r\n\r\n```C#\r\nprivate const string RecoveryCodesKey = nameof(RecoveryCodesKey);\r\n```\r\n\r\n2. Still in `Controllers\\ManageController.cs` file and find the `EnableAuthenticator()` function. Replace its contents with\r\n\r\n```C#\r\n[HttpGet]\r\npublic async Task<IActionResult> EnableAuthenticator()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    var model = new EnableAuthenticatorViewModel();\r\n    await LoadSharedKeyAndQrCodeUriAsync(user, model);\r\n\r\n    return View(model);\r\n}\r\n```\r\n\r\n3. Still in `Controllers\\ManageController.cs` file and find the `EnableAuthenticator(EnableAuthenticatorViewModel model)` method. Replace its contents with\r\n\r\n```C#\r\n[HttpPost]\r\n[ValidateAntiForgeryToken]\r\npublic async Task<IActionResult> EnableAuthenticator(EnableAuthenticatorViewModel model)\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    if (!ModelState.IsValid)\r\n    {\r\n        await LoadSharedKeyAndQrCodeUriAsync(user, model);\r\n        return View(model);\r\n     }\r\n\r\n    // Strip spaces and hypens\r\n    var verificationCode = model.Code.Replace(\" \", string.Empty).Replace(\"-\", string.Empty);\r\n\r\n    var is2faTokenValid = await _userManager.VerifyTwoFactorTokenAsync(\r\n        user, _userManager.Options.Tokens.AuthenticatorTokenProvider, verificationCode);\r\n\r\n    if (!is2faTokenValid)\r\n    {\r\n        ModelState.AddModelError(\"Code\", \"Verification code is invalid.\");\r\n        await LoadSharedKeyAndQrCodeUriAsync(user, model);\r\n        return View(model);\r\n    }\r\n\r\n    await _userManager.SetTwoFactorEnabledAsync(user, true);\r\n    _logger.LogInformation(\"User with ID {UserId} has enabled 2FA with an authenticator app.\", user.Id);\r\n    var recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\n    TempData[RecoveryCodesKey] = recoveryCodes.ToArray();\r\n\r\n    return RedirectToAction(nameof(ShowRecoveryCodes));\r\n}\r\n```\r\n\r\n4. Still in `Controllers\\ManageController.cs` file create the following method after `EnableAuthenticator(EnableAuthenticatorViewModel model)`;\r\n\r\n```C#\r\n[HttpGet]\r\npublic IActionResult ShowRecoveryCodes()\r\n{\r\n    var recoveryCodes = (string[])TempData[RecoveryCodesKey];\r\n    if (recoveryCodes == null)\r\n    {\r\n        return RedirectToAction(nameof(TwoFactorAuthentication));\r\n    }\r\n\r\n    var model = new ShowRecoveryCodesViewModel { RecoveryCodes = recoveryCodes };\r\n    return View(model);\r\n}\r\n```\r\n\r\n5. Still in `Controllers\\ManageController.cs` file create the following method after the `GenerateQrCodeUri(string email, string unformattedKey)` method\r\n\r\n```C#\r\nprivate async Task LoadSharedKeyAndQrCodeUriAsync(ApplicationUser user, EnableAuthenticatorViewModel model)\r\n{\r\n    var unformattedKey = await _userManager.GetAuthenticatorKeyAsync(user);\r\n    if (string.IsNullOrEmpty(unformattedKey))\r\n    {\r\n        await _userManager.ResetAuthenticatorKeyAsync(user);\r\n        unformattedKey = await _userManager.GetAuthenticatorKeyAsync(user);\r\n    }\r\n\r\n    model.SharedKey = FormatKey(unformattedKey);\r\n    model.AuthenticatorUri = GenerateQrCodeUri(user.Email, unformattedKey);\r\n}\r\n```\r\n\r\n6. Still in `Controllers\\ManageController.cs` Create a new action method in the controller file, `GenerateRecoveryCodesWarning()` containing the following code\r\n\r\n```C#\r\n[HttpGet]\r\npublic async Task<IActionResult> GenerateRecoveryCodesWarning()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    if (!user.TwoFactorEnabled)\r\n    {\r\n        throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' because they do not have 2FA enabled.\");\r\n    }\r\n\r\n    return View(nameof(GenerateRecoveryCodesWarning));\r\n}\r\n```\r\n\r\n7. Open the `Models\\ManageViewModels\\EnableAuthenticatorViewModel.cs` file and add the following `using` reference;\r\n\r\n```C#\r\nusing Microsoft.AspNetCore.Mvc.ModelBinding;\r\n```\r\n\r\nthen replace the class declaration with \r\n\r\n```C# \r\npublic class EnableAuthenticatorViewModel\r\n{\r\n    [Required]\r\n    [StringLength(7, ErrorMessage = \"The {0} must be at least {2} and at max {1} characters long.\", MinimumLength = 6)]\r\n    [DataType(DataType.Text)]\r\n    [Display(Name = \"Verification Code\")]\r\n    public string Code { get; set; }\r\n\r\n    [BindNever]\r\n    public string SharedKey { get; set; }\r\n\r\n    [BindNever]\r\n    public string AuthenticatorUri { get; set; }\r\n}\r\n```\r\n\r\n8. Open the `Views\\Manage\\EnableAuthenticator.cshtml` file and replace the following line\r\n\r\n```\r\n<div id=\"qrCodeData\" data-url=\"@Html.Raw(Model.AuthenticatorUri)\"></div>\r\n```\r\n\r\nwith\r\n\r\n```\r\n<div id=\"qrCodeData\" data-url=\"@Model.AuthenticatorUri\"></div>\r\n```\r\n\r\nremove the call to `Html.Raw()`.\r\n\r\n9. Recompile your application and test you can generate 2fa recovery codes correctly, then redeploy your application.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Acknowledgments\r\nThanks to Kévin Chalet for reporting this issue.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0784](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0784)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Corrected text in link to CVE-2018-0785.\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.1_\r\n_Last Updated 2018-01-10_","Url":"https://github.com/aspnet/Announcements/issues/285","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-0784 - ASP.NET Core Templates enable Elevation Of Privilege Vulnerability\" (#285)"},{"Id":"287180045","IsPullRequest":false,"CreatedAt":"2018-01-09T18:07:26","Actor":"blowdart","Number":"284","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-0785 - ASP.NET Core Templates enable Cross Site Request Forgery","State":"open","Body":"# Microsoft Security Advisory CVE-2018-0785\r\n## ASP.NET Core Templates enable Cross Site Request Forgery\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of ASP.NET Core  2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a Cross Site Request Forgery vulnerability in the individual authentication templates for ASP.NET Core 2.0. An attacker who successfully exploited this vulnerability could change the recovery codes associated with the victim's user account without his/her consent. As a result, a victim of this attack may be permanently locked out of his/her account after loosing access to his/her 2FA device, as the initial recovery codes would be no longer valid.\r\n\r\nThe security update addresses the vulnerability by correcting the ASP.NET Core project templates.\r\n\r\nDevelopers who have generated applications from the vulnerable templates should change their code using the following instructions. They should also change their code to address a further vulnerability,  [CVE-2018-0784](https://github.com/aspnet/Announcements/issues/284), which is in the same templates.\r\n\r\nYou should also install the latest .NET Core SDK, version 2.1.4, from https://www.microsoft.com/net/download/ as will update the templates to correct the issue for any _new_ applications created after its installation. Existing applications must be manually updated using the instructions below.\r\n\r\n### Discussion\r\n\r\nPlease use https://github.com/aspnet/templating/issues/224 for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nASP.NET Core applications which are not created using the ASP.NET Core 2.0 Individual Authentication templates are not vulnerable to this issue.\r\n\r\n## Affected Software\r\nThe vulnerabilities affect any Microsoft .NET Core project if it uses any of affected runtime versions listed below and have generated applications using Individual Authentication with usernames and passwords stored within the application. Applications which use Azure Active Directory, or Azure Active Directory B2C are not affected.\r\n\r\nVulnerable .NET SDK Version | Fixed SDK Version\r\n----------------| -------------------------\r\n2.0.0, 2.0.2, 2.0.3, 2.1.2, 2.1.3 |  2.1.4\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nYour application will be affected if you generated it using the ASP.NET 2.0 Web Application template or the ASP.NET 2.0 Web Application (Model/View/Controller) template from a vulnerable SDK version where you have selected individual authentication where user accounts are stored in-app.\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\sdk\\ |\r\n| macOS | /usr/local/share/dotnet/sdk/    |\r\n| Supported Linux platforms | /usr/share/dotnet/sdk/   |\r\n\r\nEach SDK version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 2.1.4 then any applications generated for ASP.NET Core 2.0 using Individual Authentication may be vulnerable.. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by changing the code created during application generation using the following instructions.\r\n\r\n#### For ASP.NET Core 2.0 Web Application (Razor Pages)\r\n\r\n1. Open `Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs` find the `OnPostAsync()` method. The last line of this file should be\r\n\r\n```C#\r\nreturn RedirectToPage(\"./GenerateRecoveryCodes\");\r\n```\r\n\r\nReplace this line with the following code\r\n\r\n```C#\r\nvar recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\nTempData[\"RecoveryCodes\"] = recoveryCodes.ToArray();\r\nreturn RedirectToPage(\"./ShowRecoveryCodes\");\r\n```\r\n\r\n2. Open the `Pages\\Account\\Manage\\GenerateRecoveryCodes.cshtml` and replace its contents with \r\n\r\n```C#\r\n@page\r\n@model GenerateRecoveryCodesModel\r\n@{\r\n    ViewData[\"Title\"] = \"Generate two-factor authentication (2FA) recovery codes\";\r\n    ViewData[\"ActivePage\"] = \"TwoFactorAuthentication\";\r\n}\r\n\r\n<h4>@ViewData[\"Title\"]</h4>\r\n<div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n        <span class=\"glyphicon glyphicon-warning-sign\"></span>\r\n        <strong>This action generates new recovery codes.</strong>\r\n    </p>\r\n    <p>\r\n        If you lose your device and don't have the recovery codes you will lose access to your account.\r\n    </p>\r\n    <p>\r\n        Generating new recovery codes does not change the keys used in authenticator apps. If you wish to change the key\r\n        used in an authenticator app you should <a asp-page=\"./ResetAuthenticator\">reset your authenticator keys</a>.\r\n    </p>\r\n</div>\r\n\r\n<div>\r\n    <form method=\"post\" class=\"form-group\">\r\n        <button class=\"btn btn-danger\" type=\"submit\">Generate Recovery Codes</button>\r\n    </form>\r\n</div>\r\n```\r\n3. Open the `Pages\\Account\\Manage\\GenerateRecoveryCodes.cshtml.cs` file. Replace its contents with\r\n\r\n```C#\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Identity;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.AspNetCore.Mvc.RazorPages;\r\nusing Microsoft.Extensions.Logging;\r\nusing Company.WebApplication1.Data;\r\n\r\nnamespace Company.WebApplication1.Pages.Account.Manage\r\n{\r\n    public class GenerateRecoveryCodesModel : PageModel\r\n    {\r\n        private readonly UserManager<ApplicationUser> _userManager;\r\n        private readonly ILogger<GenerateRecoveryCodesModel> _logger;\r\n\r\n        public GenerateRecoveryCodesModel(\r\n            UserManager<ApplicationUser> userManager,\r\n            ILogger<GenerateRecoveryCodesModel> logger)\r\n        {\r\n            _userManager = userManager;\r\n            _logger = logger;\r\n        }\r\n\r\n        public async Task<IActionResult> OnGetAsync()\r\n        {\r\n            var user = await _userManager.GetUserAsync(User);\r\n            if (user == null)\r\n            {\r\n                throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n            }\r\n\r\n            if (!user.TwoFactorEnabled)\r\n            {\r\n                throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' because they do not have 2FA enabled.\");\r\n            }\r\n\r\n            return Page();\r\n        }\r\n\r\n        public async Task<IActionResult> OnPostAsync()\r\n        {\r\n            var user = await _userManager.GetUserAsync(User);\r\n            if (user == null)\r\n            {\r\n                throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n            }\r\n\r\n            if (!user.TwoFactorEnabled)\r\n            {\r\n                throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' as they do not have 2FA enabled.\");\r\n            }\r\n\r\n            var recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\n            TempData[\"RecoveryCodes\"] = recoveryCodes.ToArray();\r\n\r\n            _logger.LogInformation(\"User with ID '{UserId}' has generated new 2FA recovery codes.\", user.Id);\r\n\r\n            return RedirectToPage(\"./ShowRecoveryCodes\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n4. Create a new file, `Pages\\Account\\Manage\\ShowRecoveryCodes.cshtml` with the following contents \r\n\r\n```C#\r\n@page\r\n@model ShowRecoveryCodesModel\r\n@{\r\n    ViewData[\"Title\"] = \"Recovery codes\";\r\n    ViewData[\"ActivePage\"] = \"TwoFactorAuthentication\";\r\n}\r\n\r\n<h4>@ViewData[\"Title\"]</h4>\r\n<div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n        <span class=\"glyphicon glyphicon-warning-sign\"></span>\r\n        <strong>Put these codes in a safe place.</strong>\r\n    </p>\r\n    <p>\r\n        If you lose your device and don't have the recovery codes you will lose access to your account.\r\n    </p>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        @for (var row = 0; row < Model.RecoveryCodes.Length; row += 2)\r\n        {\r\n            <code>@Model.RecoveryCodes[row]</code><text>&nbsp;</text><code>@Model.RecoveryCodes[row + 1]</code><br />\r\n        }\r\n    </div>\r\n</div>\r\n```\r\n\r\n5. Create a new file `Pages\\Account\\Manage\\ShowRecoveryCodes.cshtml.cs` with the following contents\r\n\r\n```C#\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.AspNetCore.Mvc.RazorPages;\r\n\r\nnamespace Company.WebApplication1.Pages.Account.Manage\r\n{\r\n    public class ShowRecoveryCodesModel : PageModel\r\n    {\r\n        public string[] RecoveryCodes { get; private set; }\r\n\r\n        public IActionResult OnGet()\r\n        {\r\n            RecoveryCodes = (string[])TempData[\"RecoveryCodes\"];\r\n            if (RecoveryCodes == null)\r\n            {\r\n                return RedirectToPage(\"TwoFactorAuthentication\");\r\n            }\r\n\r\n            return Page();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n6. Recompile your application and test you can generate 2fa recovery codes correctly, then redeploy your application.\r\n\r\n#### For ASP.NET Core 2.0 Web Application (Model/View/Controller)\r\n\r\n1. Open the `Controllers\\ManageController.cs` file and find \r\n\r\n```C#\r\nprivate const string AuthenicatorUriFormat = \"otpauth://totp/{0}:{1}?secret={2}&issuer={0}&digits=6\";\r\n```\r\n  and add a new declaration underneath,\r\n\r\n```C#\r\nprivate const string AuthenicatorUriFormat = \"otpauth://totp/{0}:{1}?secret={2}&issuer={0}&digits=6\";\r\nprivate const string RecoveryCodesKey = nameof(RecoveryCodesKey);\r\n```\r\n\r\n2. Still in `Controllers\\ManageController.cs` file and find the `EnableAuthenticator(EnableAuthenticatorViewModel model)` method. The last line in this method should be\r\n\r\n```C#\r\nreturn RedirectToAction(nameof(GenerateRecoveryCodes));\r\n```\r\n\r\nReplace this final line with\r\n\r\n```C#\r\nvar recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\nTempData[RecoveryCodesKey] = recoveryCodes.ToArray();\r\nreturn RedirectToAction(nameof(ShowRecoveryCodes));\r\n```\r\n\r\n3. Create a new method in `Controllers\\ManageController.cs` called `ShowRecoveryCodes()` with the following code\r\n\r\n```C#\r\n[HttpGet]\r\npublic IActionResult ShowRecoveryCodes()\r\n{\r\n    var recoveryCodes = (string[])TempData[RecoveryCodesKey];\r\n    if (recoveryCodes == null)\r\n    {\r\n        return RedirectToAction(nameof(TwoFactorAuthentication));\r\n    }\r\n\r\n    var model = new ShowRecoveryCodesViewModel { RecoveryCodes = recoveryCodes };\r\n    return View(model);\r\n}\r\n```\r\n\r\n4. Still in `Controllers\\ManageController.cs` Create a new action method in the controller file, `GenerateRecoveryCodesWarning()` containing the following code\r\n\r\n```C#\r\n[HttpGet]\r\npublic async Task<IActionResult> GenerateRecoveryCodesWarning()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    if (!user.TwoFactorEnabled)\r\n    {\r\n        throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' because they do not have 2FA enabled.\");\r\n    }\r\n\r\n    return View(nameof(GenerateRecoveryCodesWarning));\r\n}\r\n```\r\n\r\n5. Still in `Controllers\\ManageController.cs` file and find the `GenerateRecoveryCodes()` method. The code should look as follows\r\n\r\n```C# \r\n[HttpGet]\r\npublic async Task<IActionResult> GenerateRecoveryCodes()\r\n{\r\n    ...\r\n}\r\n```\r\nReplace the method with the following\r\n\r\n```C#\r\n[HttpPost]\r\n[ValidateAntiForgeryToken]\r\npublic async Task<IActionResult> GenerateRecoveryCodes()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    if (!user.TwoFactorEnabled)\r\n    {\r\n        throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' as they do not have 2FA enabled.\");\r\n    }\r\n\r\n    var recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\n    _logger.LogInformation(\"User with ID {UserId} has generated new 2FA recovery codes.\", user.Id);\r\n\r\n    var model = new ShowRecoveryCodesViewModel { RecoveryCodes = recoveryCodes.ToArray() };\r\n\r\n    return View(nameof(ShowRecoveryCodes), model);\r\n}\r\n```\r\n\r\n6. Create a new View in `Views\\Manage\\ShowRecoveryCodes.cshtml` with the following content\r\n\r\n```\r\n@model ShowRecoveryCodesViewModel\r\n@{\r\n    ViewData[\"Title\"] = \"Recovery codes\";\r\n    ViewData.AddActivePage(ManageNavPages.TwoFactorAuthentication);\r\n}\r\n\r\n<h4>@ViewData[\"Title\"]</h4>\r\n<div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n        <span class=\"glyphicon glyphicon-warning-sign\"></span>\r\n        <strong>Put these codes in a safe place.</strong>\r\n    </p>\r\n    <p>\r\n        If you lose your device and don't have the recovery codes you will lose access to your account.\r\n    </p>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        @for (var row = 0; row < Model.RecoveryCodes.Length; row += 2)\r\n        {\r\n            <code>@Model.RecoveryCodes[row]</code><text>&nbsp;</text><code>@Model.RecoveryCodes[row + 1]</code><br />\r\n        }\r\n    </div>\r\n</div>\r\n```\r\n\r\n7. Create a new `ShowRecoveryCodesViewModel` class in the `Models\\ManageViewModels` folder and create the class as follows\r\n\r\n```c#\r\npublic class ShowRecoveryCodesViewModel\r\n{\r\n    public string[] RecoveryCodes { get; set; }\r\n}\r\n``` \r\n\r\n8.  Delete the `Models\\ManageViewModels\\generateRecoveryCodesViewModel.cs` file.\r\n\r\n9. Open the `Views\\Manage\\GenerateRecoveryCodes.cshtml` file. Replace the contents with \r\n\r\n```\r\n@{\r\n    ViewData[\"Title\"] = \"Generate two-factor authentication (2FA) recovery codes\";\r\n    ViewData.AddActivePage(ManageNavPages.TwoFactorAuthentication);\r\n}\r\n\r\n<h2>@ViewData[\"Title\"]</h2>\r\n\r\n<div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n        <span class=\"glyphicon glyphicon-warning-sign\"></span>\r\n        <strong>This action generates new recovery codes.</strong>\r\n    </p>\r\n    <p>\r\n        If you lose your device and don't have the recovery codes you will lose access to your account.\r\n    </p>\r\n    <p>\r\n        Generating new recovery codes does not change the keys used in authenticator apps. If you wish to change the key\r\n        used in an authenticator app you should <a asp-action=\"ResetAuthenticatorWarning\">reset your authenticator keys.</a>\r\n    </p>\r\n</div>\r\n\r\n<div>\r\n    <form asp-action=\"GenerateRecoveryCodes\" method=\"post\" class=\"form-group\">\r\n        <button class=\"btn btn-danger\" type=\"submit\">Generate Recovery Codes</button>\r\n    </form>\r\n</div>\r\n```\r\n\r\n10. Edit `Views\\Manage\\TwoFactorAuthentication.cshtml` to change `<a asp-action=\"GenerateRecoveryCodes\" class=\"btn btn-default\">Reset recovery codes</a>` to ` <a asp-action=\"GenerateRecoveryCodesWarning\" class=\"btn btn-default\">Reset recovery codes</a>`.\r\n\r\n11. Recompile your application and test you can generate 2fa recovery codes correctly, then redeploy your application.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Acknowledgments\r\nThanks to Kévin Chalet for reporting this issue.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0785](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0785)\r\n\r\n### Revisions\r\n\r\nV1.1 (Jan 9, 2018): Updated Razor Pages fix to be correct. Note that [new generated applications will have the incorrect link](https://github.com/aspnet/templating/issues/226).  Thanks @scottsauber.\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.1_\r\n_Last Updated 2018-01-09_\r\n\r\n  \r\n  \r\n  \r\n  \r\n  ","Url":"https://github.com/aspnet/Announcements/issues/284","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-0785 - ASP.NET Core Templates enable Cross Site Request Forgery\" (#284)"},{"Id":"285489159","IsPullRequest":false,"CreatedAt":"2018-01-02T17:28:55","Actor":"Eilon","Number":"283","RawContent":null,"Title":"Using the \"Home\" repo for issue management of other repos","State":"open","Body":"Hi all,\r\n\r\nWe are experimenting to try and use the [Home repo's issue tracker](https://github.com/aspnet/Home/issues) to manage issues for multiple repos. To start with, we have moved the bugs from several other repos to the Home repo, and we will retire the issue trackers of those other repos.\r\n\r\nWe are doing this to try to improve the experience of logging issues for ASP.NET Core.\r\n\r\n* Labels in the form of `repo:RepoName` are used to associate the bug with a product/feature area\r\n* For issue trackers that moved to the Home repo, please log new issues in the Home repo. If a bug is logged in a moved issue tracker, it will be closed.\r\n* Over time, we plan to consolidate more issue trackers into the Home repo\r\n\r\nFor discussions on this topic, please go to https://github.com/aspnet/Home/issues/2736.\r\n\r\nThanks,\r\nEilon\r\n","Url":"https://github.com/aspnet/Announcements/issues/283","RelatedDescription":"Open issue \"Using the \"Home\" repo for issue management of other repos\" (#283)"},{"Id":"277159697","IsPullRequest":false,"CreatedAt":"2017-11-27T20:34:07","Actor":"pranavkm","Number":"282","RawContent":null,"Title":"aspnetcore-ci-*, aspnetcore-volatile-* feeds being deprecated","State":"open","Body":"As part of some of our infrastructural changes, we're discontinuing the use of the following feeds and may remove them entirely in the future:\r\n* https://dotnet.myget.org/f/aspnetcore-ci-dev \r\n* https://dotnet.myget.org/f/aspnetcore-ci-release\r\n* https://dotnet.myget.org/f/aspnetcore-volatile-dev\r\n* https://dotnet.myget.org/f/aspnetcore-volatile-release\r\n\r\nIf you're currently using one of these feeds in your projects to pick up our daily builds, we recommend migrating to https://dotnet.myget.org/f/aspnetcore-dev.\r\n\r\nPlease use this discussion topic - https://github.com/aspnet/Home/issues/2292 - for feedback and questions. ","Url":"https://github.com/aspnet/Announcements/issues/282","RelatedDescription":"Open issue \"aspnetcore-ci-*, aspnetcore-volatile-* feeds being deprecated\" (#282)"},{"Id":"273832346","IsPullRequest":false,"CreatedAt":"2017-11-14T15:25:58","Actor":"blowdart","Number":"281","RawContent":null,"Title":"Reserved","State":"closed","Body":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n","Url":"https://github.com/aspnet/Announcements/issues/281","RelatedDescription":"Closed issue \"Reserved\" (#281)"},{"Id":"273832234","IsPullRequest":false,"CreatedAt":"2017-11-14T15:25:44","Actor":"blowdart","Number":"280","RawContent":null,"Title":"Reserved","State":"closed","Body":"_This issue has been reserved for a potential future security announcement._\r\n\r\nThis does **not** mean a security advisory is coming soon, it simply gives us the ability to predict the issue number that will be used in the future.\r\n","Url":"https://github.com/aspnet/Announcements/issues/280","RelatedDescription":"Closed issue \"Reserved\" (#280)"},{"Id":"273832132","IsPullRequest":false,"CreatedAt":"2017-11-14T15:25:23","Actor":"blowdart","Number":"279","RawContent":null,"Title":"Microsoft Security Advisory CVE-2017-8700: CORS bypass can enable Information Disclosure","State":"open","Body":"# Microsoft Security Advisory CVE-2017-8700 CORS Bypass can enable Information Disclosure\r\n\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in public ASP.NET Core 1.0 and 1.1. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in some public versions of ASP.NET Core where Cross-Origin Resource Sharing (CORS) can be bypassed, leading to information disclosure.\r\n\r\n## Discussion\r\n\r\nPlease use https://github.com/aspnet/Mvc/issues/7054 for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nASP.NET Core applications using version 2.0.0 or higher are not vulnerable.\r\n\r\n## Affected Software\r\nThe vulnerabilities affect any Microsoft ASP.NET Core project if it uses the following affected package versions.\r\n\r\nPackage name | Package versions | Fixed package versions\r\n---------------- | ------------------- | -------------------------\r\nMicrosoft.AspNetCore.Mvc.Core | 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5<br />1.1.0, 1.1.1, 1.1.2 ,1.1.3, 1.1.4 |  1.0.6<br />1.1.6\r\nMicrosoft.AspNetCore.Mvc.Cors | 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5<br />1.1.0, 1.1.1, 1.1.2 ,1.1.3, 1.1.4 |  1.0.6<br />1.1.6\r\n\r\n## Advisory FAQ\r\n### How do I know if I am affected? \r\n\r\n.NET Core and ASP.NET Core have two types of dependencies: direct and transitive. If your project has a direct or transitive dependency on any of the packages and versions listed above, you are affected.\r\nNote: As part of patching ASP.NET Core MVC we update every Microsoft.AspNetCore.Mvc.* package. If, for example, you have a dependency on `Microsoft.AspNetCore.Mvc` you should update to the appropriate version first (1.0.x should be updated to 1.0.6, 1.1.x should be updated to 1.1.6), and it will also update any other vulnerable ` Microsoft.AspNetCore.Mvc` dependency.\r\n\r\n### NET Core Project formats\r\n.NET Core has two different project file formats, depending on what software created the project. \r\n\r\n1. `project.json` is the format used in .NET Core 1.0 and Microsoft Visual Studio 2015.\r\n2. `csproj` is the format used in .NET Core 1.1 and Microsoft Visual Studio 2017.  \r\n\t\r\nYou must ensure you follow the correct update instructions for your project type.\r\n\r\n### Direct Dependencies\r\nDirect dependencies are dependencies where you specifically add a package to your project. For example, if you add the `Microsoft.AspNetCore.Mvc` package to your project then you have taken a direct dependency on` Microsoft.AspNetCore.Mvc`.\r\n\r\nDirect dependencies are discoverable by reviewing your `project.json` or `csproj` file.\r\n\r\n### Transitive Dependencies\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if you add the `Microsoft.AspNetCore.Mvc` package to your project it depends on the `Microsoft.AspNetCore.Mvc.Core` package (among others). Your project has a direct dependency on `Microsoft.AspNetCore.Mvc` and a transitive dependency on the `Microsoft.AspNetCore.Mvc.Core` package.\r\nTransitive dependencies are reviewable in the Visual Studio Solution Explorer window, which supports searching, or by reviewing the `project.lock.json` file contained in the root directory of your project for `project.json` projects or the `project.assets.json` file contained in the obj directory of your project for `csproj` projects. These files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n## How do I fix my affected application?\r\nYou will need to fix both direct dependencies and review and fix any transitive dependencies. The affected packages and versions in the previous “Affected Software” section include each vulnerable package, the vulnerable versions, and the patched versions\r\n\r\n---\r\n\r\n**Note**: If you are using ASP.NET Core MVC in your projects you should first update the `Microsoft.AspNetCore.Mvc` version to the fixed version in the table above. If you are currently using version 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4 or 1.0.5  you should update your package version to 1.0.6. If you are using version 1.1.0, 1.1.1, 1.1.2, 1.1.3 or 1.1.4 you should update your package version to 1.1.6. This will update every MVC package to the fixed versions.\r\n\r\n---\r\n\r\n### Fixing Direct Dependencies – project.json/VS2015\r\nOpen your `project.json` file in your editor. Look for the dependencies section. Below is an example dependencies section:\r\n\r\n``` json\r\n    \"dependencies\": {\r\n      \"Microsoft.NETCore.App\": {\r\n        \"version\": \"1.0.1\",\r\n        \"type\": \"platform\"\r\n      },\r\n     \"Microsoft.AspNetCore.Server.Kestrel\": \"1.0.1\",\r\n     \"Microsoft.AspNetCore.Mvc.Core \": \"1.0.1\",\r\n    }\r\n```\r\nThis example has three direct dependencies: `Microsoft.NETCore.App`, `Microsoft.AspNetCore.Server.Kestrel` and `Microsoft.AspNetCore.Mvc.Core`. \r\n\r\n`Microsoft.NetCore.App` is the platform the application targets, you should ignore this. The other packages expose their version to the right of the package name. In our example, our non-platform packages are version 1.0.1.\r\n\r\nReview your direct dependencies for any instance of the packages and versions listed above. In the example above, there is a direct dependency on the vulnerable package, `Microsoft.AspNetCore.Mvc.Core` version 1.0.1.\r\n\r\nTo update to the fixed package, change the version number to be the appropriate package for your release. In the example, this would be updating `Microsoft.AspNetCore.Mvc.Core` to 1.0.6.\r\n\r\nAfter updating the vulnerable package versions, save your `project.json` file.\r\n\r\nThe dependencies section in our example `project.json` would now look as follows:\r\n\r\n```json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Server.Kestrel\": \"1.0.1\",\r\n    \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",     \r\n  }\r\n```\r\n\r\nIf you are using Visual Studio and save your updated `project.json` file, Visual Studio will restore the new package version. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependency.\r\n\r\nAfter you have addressed all of your direct dependencies, you must also review your transitive dependencies.\r\n\r\n### Fixing Direct Dependencies – csproj/VS2017\r\nOpen your `projectname.csproj` file in your editor, or right click the project in Visual Studio 2017 and choose `Edit projectname.csproj` from the content menu, where projectname is the name of your project. Look for `PackageReference` nodes. The following shows an example project file:\r\n\r\n``` XML\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp1.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <PropertyGroup>\r\n    <PackageTargetFallback>$(PackageTargetFallback);portable-net45+win8+wp8+wpa81;</PackageTargetFallback>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc.Core\" Version=\"1.1.3\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"1.0.0 \" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe example has a single direct dependency, as seen by the `PackageReference` element. The name of the package is in the Include attribute, and the package version number is in the Version attribute that is exposed to the right of the package name. The example shows a single package `Microsoft.AspNetCore.Mvc.Core` version 1.1.6.\r\n\r\nReview your `PackageReference` elements for any instance of the packages and versions listed above. In the example above, there is a direct dependency on the vulnerable package, `Microsoft.AspNetCore.Mvc.Core` version 1.1.3.\r\n\r\nTo update to the fixed package, change the version number to the appropriate package for your release. In the example, this would be updating `Microsoft.AspNetCore.Mvc.Cors` to 1.1.6.\r\n\r\nAfter updating the vulnerable package version, save your `csproj` file. The example `csproj` would now look as follows:\r\n\r\n``` XML\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp1.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <PropertyGroup>\r\n    <PackageTargetFallback>$(PackageTargetFallback);portable-net45+win8+wp8+wpa81;</PackageTargetFallback>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc.Core\" Version=\"1.1.6\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"1.0.0 \" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you are using Visual Studio and save your updated `csproj` file, Visual Studio will restore the new package version. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependency.\r\n\r\n### After updating your direct dependencies\r\n\r\nRecompile your application.\r\n\r\nIf after recompilation you see a Dependency conflict warning, you must update your other direct dependencies to the appropriate version. \r\n\r\nFor example if your project refers to `Microsoft.AspNetCore.Mvc.Cors` with a version number of 1.0.1 when you update your `Microsoft.AspNetCore.Mvc` package to 1.0.6, compilation will throw:\r\n\r\n`NU1012      Dependency conflict. Microsoft.AspNetCore.Mvc.Core 1.0.6 expected Microsoft.AspNetCore.Mvc.Cors >= 1.0.6 but received 1.0.1`\r\n\r\nTo fix this, edit the version for the expected package to be the version expected by updating your `csproj` or `project.json` in the same way that you used to update the vulnerable package versions.\r\n\r\nAfter you have addressed all of your direct dependencies, you must also review your transitive dependencies.\r\n\r\n### Reviewing Transitive Dependencies \r\n\r\nThere are two ways to view transitive dependencies. You can either use Visual Studio’s Solution Explorer, or you can review your `project.lock.json` (project.json/VS2015) or `project.assets.json` (csproj/VS2017) file.\r\n\r\n#### Using Visual Studio Solution Explorer (VS2015)\r\nIf you want to use Visual Studio 2015, open your project in Visual Studio 2015 and then press Ctrl+; to activate the search in Solution Explorer. Search for each of the vulnerable package names and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a reference to `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2015.\r\n\r\n![vs2015](https://cloud.githubusercontent.com/assets/796298/25858059/a1ae6624-348f-11e7-9ce9-ff2d25a3fc5b.png)\r\n\r\nThe search results appear as a tree. In these results, you can see we have found references to `Microsoft.AspNetCore.Mvc`, version 1.0.1, ` vulnerable version. \r\n\r\nThe first entry under the References heading refers to the target framework your application is using. This will be `.NETCoreApp`, `.NETStandard` or `.NET-Framework-vX.Y.Z` (where X.Y.Z is an actual version number) depending on how you configured your application. Under your target framework will be the list of packages you have directly taken a dependency on. In this example, the application takes a dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions. In this case the `Microsoft.AspNetCore.Mvc` package takes a dependency on a vulnerable version of `Microsoft.AspNetCore.Mvc.Core` and numerous other packages.\r\n\r\n#### Manually reviewing project.lock.json (project.json/VS2015)\r\nOpen the `project.lock.json` file in your editor. We suggest you use an editor that understands json and allows you to collapse and expand nodes to review this file; both Visual Studio and Visual Studio Code provide this functionality.\r\n\r\nIf you are using Visual Studio the `project.lock.json` file is “under” the `project.json` file. Click the right pointing triangle, ▷, to the left of the `project.json` file to expand the solution tree to expose the `project.lock.json` file. The following image shows a project with the `project.json` file expanded to show the `project.lock.json` file.\r\n\r\n![project lock json](https://cloud.githubusercontent.com/assets/796298/25858179/f6e01200-348f-11e7-8a77-7176d8dd3f03.png)\r\n\r\nSearch the `project.lock.json` file for the vulnerable packages, using the format `packagename/`, using each of the package names from the table above. If you find any vulnerable assembly name in your search examine the line on which they are found, the version number is after the `/` and compare to the vulnerable versions table above. For example a search result that shows `Microsoft.AspNetCore.Mvc.Cors/1.0.1` is a reference to v1.0.1 of `Microsoft.AspNetCore.Mvc.Cors`.   If your `project.lock.json` file includes references to any of the package versions shown above then you will need to fix the transitive dependencies. \r\n\r\n#### Fixing transitive dependencies (project.json/VS2015)\r\n\r\nIf you have not found any reference to a vulnerable version of  `Microsoft.AspNetCore.Mvc.Cors` this means none of your direct dependencies depend on any vulnerable packages or you have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to any of the vulnerable packages you must add a direct dependency to the updated package to your `project.json` file to override the transitive dependency. Open your `project.json` and find the dependencies section. For example:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Server.Kestrel\": \"1.1.0\",\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nFor each of the vulnerable packages your search returned you must add a direct dependency to the updated version by adding it to the `project.json` file. You do this by adding a new line to the dependencies section, referring the fixed version. For example, if your search showed a transitive reference to the vulnerable `Microsoft.AspNetCore.Mvc.Cors` version 1.0.0 you would add a reference to the appropriate fixed version, 1.0.6. Edit the `project.json` file as follows:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc.Cors\": \"1.0.6\",\r\n    \"Microsoft.AspNetCore.Server.Kestrel\": \"1.1.0\",\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nAfter you have added direct dependencies to the fixed packages, save your `project.json` file.\r\n\r\nIf you are using Visual Studio save your updated `project.json` file and Visual Studio will restore the new package versions. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependencies.\r\n\r\n#### Using Visual Studio Solution Explorer (VS2017)\r\n\r\nIf you want to use Solution Explorer, open your project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for each of the vulnerable package names and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017.\r\n\r\n![vs2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In these results, you can see we have found references to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2.\r\n\r\nUnder the Dependencies node will be a NuGet node. Under the NuGet node will be the list of packages you have directly taken a dependency on and their versions. In this example, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions. In the example the `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer` which in turn takes a dependency on a vulnerable version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n#### Manually reviewing project.assets.json (VS2017)\r\n\r\nOpen the `project.assets.json` file from your project’s obj directory in your editor. We suggest you use an editor that understands json and allows you to collapse and expand nodes to review this file; both Visual Studio and Visual Studio Code provide this functionality.\r\n\r\nSearch the `project.assets.json` file for each of the vulnerable packages, using the format `packagename/` using the package name from the table above. If you find the assembly name in your search examine the line on which they are found, the version number is after the `/` and compare to the vulnerable versions table above. For example a search result that shows `Microsoft.AspNetCore.Mvc.Cors/1.1.0` is a reference to v1.1.0 of `Microsoft.AspNetCore.Mvc.Cors`.   If your `project.assets.json` file includes references to any of the vulnerable packages shown above then you will need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages this means none of your direct dependencies depend on any vulnerable packages or you have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to any of the vulnerable packages you must add a direct dependency to the updated package to your `csproj` file to override the transitive dependency. Open your `projectname.csproj` file in your editor, or right click on the project in Visual Studio 2017 and choose Edit `projectname.csproj` from the content menu, where `projectname` is the name of your project. Look for `PackageReference` nodes, for example:\r\n\r\n``` xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp1.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <PropertyGroup>\r\n    <PackageTargetFallback>$(PackageTargetFallback);portable-net45+win8+wp8+wpa81;</PackageTargetFallback>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore\" Version=\"1.1.1\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"1.1.3\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"1.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nFor each of the vulnerable packages your search returned you must add a direct dependency to the updated version by adding it to the `csproj` file. You do this by adding a new line to the dependencies section, referring the fixed version. For example, if your search showed a transitive reference to the vulnerable `Microsoft.AspNetCore.Mvc.Cors`, version 1.1.4 you would add a reference to the appropriate fixed version, 1.1.6.\r\n\r\n``` xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp1.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <PropertyGroup>\r\n    <PackageTargetFallback>$(PackageTargetFallback);portable-net45+win8+wp8+wpa81;</PackageTargetFallback>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc.Cors\" Version=\"1.1.6\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore\" Version=\"1.1.1\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"1.1.3\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"1.0.0\" />\r\n  </ItemGroup>\r\n```\r\n\r\nAfter you have added the direct dependency reference, save your `csproj` file.\r\n\r\nIf you are using Visual Studio, save your updated `csproj` file and Visual Studio will restore the new package versions. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependencies.\r\n\r\n### Rebuilding your application\r\nFinally rebuild your application, test as you would do normally and redeploy using your favored deployment mechanism.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\t\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2017-8700](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-8700)\r\n\r\n### Revisions\r\n\r\nV1.1 (Dec 13, 2017): Updated 1.1.5 to 1.1.6 to fix a packaging issue (see https://github.com/aspnet/Mvc/issues/7070)\r\nV1.0 (Nov 14, 2017): Advisory published.\r\n\r\n_Version 1.1_\r\n_Last Updated 2017-12-13_","Url":"https://github.com/aspnet/Announcements/issues/279","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2017-8700: CORS bypass can enable Information Disclosure\" (#279)"},{"Id":"273831995","IsPullRequest":false,"CreatedAt":"2017-11-14T15:25:03","Actor":"blowdart","Number":"278","RawContent":null,"Title":"Microsoft Security Advisory CVE-2017-11883: Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2017-11883: Denial Of Service Vulnerability \r\n\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in public ASP.NET Core 1.0, 1.1 and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in all public versions of ASP.NET Core where the application is hosted through Windows Http,Sys where a malformed request can lead to a Denial Of Service.\r\n\r\n## Dicussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/HttpSysServer/issues/416\r\n\r\n### Mitigation Factors\r\nASP.NET Core applications hosted using Kestrel as their web server are not affected. By default ASP.NET Core Web applications are hosted with Kestrel. Developers must make specific decisions to switch to using HTTP.SYS and as this hosting option is only available on Windows this advisory does not affect Linux or macOS.\r\n\r\n## Affected Software\r\nThe vulnerabilities affect any Microsoft ASP.NET Core project if it uses the following affected package versions.\r\n\r\nPackage name | Package versions | Fixed package versions\r\n---------------- | ------------------- | -------------------------\r\nMicrosoft.AspNetCore.Server.WebListener<br /> Microsoft.Net.Http.Server | 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5<br />1.1.0, 1.1.1, 1.1.2 ,1.1.3 | 1.0.6<br />1.1.4\r\nMicrosoft.AspNetCore.Server.HttpSys | 2.0.0, 2.0.1 |  2.0.2\r\n\r\n## Advisory FAQ\r\n### How do I know if I am affected? \r\n\r\n.NET Core and ASP.NET Core have two types of dependencies: direct and transitive. If your project has a direct or transitive dependency on any of the packages and versions listed above, you are affected.\r\n\r\n### NET Core Project formats\r\n.NET Core has two different project file formats, depending on what software created the project. \r\n\r\n1. `project.json` is the format used in .NET Core 1.0 and Microsoft Visual Studio 2015.\r\n2. `csproj` is the format used in .NET Core 1.1, .NET Core 2.0 and Microsoft Visual Studio 2017.  \r\n\t\r\nYou must ensure you follow the correct update instructions for your project type.\r\n\r\n### Direct Dependencies\r\nDirect dependencies are dependencies where you specifically add a package to your project. For example, if you add the `Microsoft.AspNetCore.Mvc` package to your project then you have taken a direct dependency on` Microsoft.AspNetCore.Mvc`.\r\n\r\nDirect dependencies are discoverable by reviewing your `project.json` or `csproj` file.\r\n\r\n### Transitive Dependencies\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if you add the `Microsoft.AspNetCore.Mvc` package to your project it depends on the `Microsoft.AspNetCore.Mvc.Core` package (among others). Your project has a direct dependency on `Microsoft.AspNetCore.Mvc` and a transitive dependency on the `Microsoft.AspNetCore.Mvc.Core` package.\r\nTransitive dependencies are reviewable in the Visual Studio Solution Explorer window, which supports searching, or by reviewing the `project.lock.json` file contained in the root directory of your project for `project.json` projects or the `project.assets.json` file contained in the obj directory of your project for `csproj` projects. These files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n## How do I fix my affected application?\r\nYou will need to fix both direct dependencies and review and fix any transitive dependencies. The affected packages and versions in the previous “Affected Software” section include each vulnerable package, the vulnerable versions, and the patched versions\r\n\r\n\r\n### Fixing Direct Dependencies – project.json/VS2015\r\nOpen your `project.json` file in your editor. Look for the dependencies section. Below is an example dependencies section:\r\n\r\n``` json\r\n    \"dependencies\": {\r\n      \"Microsoft.NETCore.App\": {\r\n        \"version\": \"1.0.1\",\r\n        \"type\": \"platform\"\r\n      },\r\n     \"Microsoft.AspNetCore.Server.WebListener\": \"1.0.1\",\r\n     \"Microsoft.AspNetCore.Mvc.Core \": \"1.0.6\",\r\n    }\r\n```\r\nThis example has three direct dependencies: `Microsoft.NETCore.App`, `Microsoft.AspNetCore.Server.WebListener` and `Microsoft.AspNetCore.Mvc.Core`. \r\n\r\n`Microsoft.NetCore.App` is the platform the application targets, you should ignore this. The other packages expose their version to the right of the package name. In our example, our non-platform packages are version 1.0.1.\r\n\r\nReview your direct dependencies for any instance of the packages and versions listed above. In the example above, there is a direct dependency on the vulnerable package, `Microsoft.AspNetCore.Server.WebListener` version 1.0.1.\r\n\r\nTo update to the fixed package, change the version number to be the appropriate package for your release. In the example, this would be updating `Microsoft.AspNetCore.Server.WebListener` to 1.0.6.\r\n\r\nAfter updating the vulnerable package versions, save your `project.json` file.\r\n\r\nThe dependencies section in our example `project.json` would now look as follows:\r\n\r\n```json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Server.WebListener\": \"1.0.6\",\r\n    \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",     \r\n  }\r\n```\r\n\r\nIf you are using Visual Studio and save your updated `project.json` file, Visual Studio will restore the new package version. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependency.\r\n\r\nAfter you have addressed all of your direct dependencies, you must also review your transitive dependencies.\r\n\r\n### Fixing Direct Dependencies – csproj/VS2017\r\nOpen your `projectname.csproj` file in your editor, or right click the project in Visual Studio 2017 and choose `Edit projectname.csproj` from the content menu, where projectname is the name of your project. Look for `PackageReference` nodes. The following shows an example project file:\r\n\r\n``` XML\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp1.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <PropertyGroup>\r\n    <PackageTargetFallback>$(PackageTargetFallback);portable-net45+win8+wp8+wpa81;</PackageTargetFallback>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.Net.Http.Server\" Version=\"1.1.1\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc.Core\" Version=\"1.1.3\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"1.0.0 \" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe example has a two direct dependencies, as seen by the two `PackageReference` elements. The name of the package is in the Include attribute, and the package version number is in the Version attribute that is exposed to the right of the package name.\r\n\r\nReview your `PackageReference` elements for any instance of the packages and versions listed above. The example shows a direct reference to the vulnerable package `Microsoft.Net.Http.Server` version 1.1.1.\r\n\r\nTo update to the fixed package, change the version number to the appropriate package for your release. In the example, this would be updating `Microsoft.Net.Http.Server` to 1.1.4.\r\n\r\nAfter updating the vulnerable package version, save your `csproj` file. The example `csproj` would now look as follows:\r\n\r\n``` XML\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp1.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <PropertyGroup>\r\n    <PackageTargetFallback>$(PackageTargetFallback);portable-net45+win8+wp8+wpa81;</PackageTargetFallback>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.Net.Http.Server\" Version=\"1.1.4\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc.Core\" Version=\"1.1.3\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"1.0.0 \" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you are using Visual Studio and save your updated `csproj` file, Visual Studio will restore the new package version. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependency.\r\n\r\n### After updating your direct dependencies\r\n\r\nRecompile your application.\r\n\r\nIf after recompilation you see a Dependency conflict warning, you must update your other direct dependencies to the appropriate version. \r\n\r\nFor example if your project refers to `Microsoft.AspNetCore.Mvc.Cors` with a version number of 1.0.1 when you update your `Microsoft.AspNetCore.Mvc` package to 1.0.6, compilation will throw:\r\n\r\n`NU1012      Dependency conflict. Microsoft.AspNetCore.Mvc.Core 1.0.6 expected Microsoft.AspNetCore.Mvc.Cors >= 1.0.6 but received 1.0.1`\r\n\r\nTo fix this, edit the version for the expected package to be the version expected by updating your `csproj` or `project.json` in the same way that you used to update the vulnerable package versions.\r\n\r\nAfter you have addressed all of your direct dependencies, you must also review your transitive dependencies.\r\n\r\n### Reviewing Transitive Dependencies \r\n\r\nThere are two ways to view transitive dependencies. You can either use Visual Studio’s Solution Explorer, or you can review your `project.lock.json` (project.json/VS2015) or `project.assets.json` (csproj/VS2017) file.\r\n\r\n#### Using Visual Studio Solution Explorer (VS2015)\r\nIf you want to use Visual Studio 2015, open your project in Visual Studio 2015 and then press Ctrl+; to activate the search in Solution Explorer. Search for each of the vulnerable package names and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a reference to `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2015.\r\n\r\n![vs2015](https://cloud.githubusercontent.com/assets/796298/25858059/a1ae6624-348f-11e7-9ce9-ff2d25a3fc5b.png)\r\n\r\nThe search results appear as a tree. In these results, you can see we have found references to `Microsoft.AspNetCore.Mvc`, version 1.0.1, ` vulnerable version. \r\n\r\nThe first entry under the References heading refers to the target framework your application is using. This will be `.NETCoreApp`, `.NETStandard` or `.NET-Framework-vX.Y.Z` (where X.Y.Z is an actual version number) depending on how you configured your application. Under your target framework will be the list of packages you have directly taken a dependency on. In this example, the application takes a dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions. In this case the `Microsoft.AspNetCore.Mvc` package takes a dependency on a vulnerable version of `Microsoft.AspNetCore.Mvc.Core` and numerous other packages.\r\n\r\n#### Manually reviewing project.lock.json (project.json/VS2015)\r\nOpen the `project.lock.json` file in your editor. We suggest you use an editor that understands json and allows you to collapse and expand nodes to review this file; both Visual Studio and Visual Studio Code provide this functionality.\r\n\r\nIf you are using Visual Studio the `project.lock.json` file is “under” the `project.json` file. Click the right pointing triangle, ▷, to the left of the `project.json` file to expand the solution tree to expose the `project.lock.json` file. The following image shows a project with the `project.json` file expanded to show the `project.lock.json` file.\r\n\r\n![project lock json](https://cloud.githubusercontent.com/assets/796298/25858179/f6e01200-348f-11e7-8a77-7176d8dd3f03.png)\r\n\r\nSearch the `project.lock.json` file for the vulnerable packages, using the format `packagename/`, using each of the package names from the table above. If you find any vulnerable assembly name in your search examine the line on which they are found, the version number is after the `/` and compare to the vulnerable versions table above. For example a search result that shows `Microsoft.AspNetCore.Mvc.Cors/1.0.1` is a reference to v1.0.1 of `Microsoft.AspNetCore.Mvc.Cors`.   If your `project.lock.json` file includes references to any of the package versions shown above then you will need to fix the transitive dependencies. \r\n\r\n#### Fixing transitive dependencies (project.json/VS2015)\r\n\r\nIf you have not found any reference to a vulnerable version of  `Microsoft.AspNetCore.Mvc.Cors` this means none of your direct dependencies depend on any vulnerable packages or you have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to any of the vulnerable packages you must add a direct dependency to the updated package to your `project.json` file to override the transitive dependency. Open your `project.json` and find the dependencies section. For example:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nFor each of the vulnerable packages your search returned you must add a direct dependency to the updated version by adding it to the `project.json` file. You do this by adding a new line to the dependencies section, referring the fixed version. For example, if your search showed a transitive reference to the vulnerable `Microsoft.AspNetCore.Server.WebListener` version 1.0.0 you would add a reference to the appropriate fixed version, 1.0.6. Edit the `project.json` file as follows:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Server.WebListener\": \"1.0.6\",\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nAfter you have added direct dependencies to the fixed packages, save your `project.json` file.\r\n\r\nIf you are using Visual Studio save your updated `project.json` file and Visual Studio will restore the new package versions. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependencies.\r\n\r\n#### Using Visual Studio Solution Explorer (VS2017)\r\n\r\nIf you want to use Solution Explorer, open your project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for each of the vulnerable package names and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017.\r\n\r\n![vs2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In these results, you can see we have found references to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2.\r\n\r\nUnder the Dependencies node will be a NuGet node. Under the NuGet node will be the list of packages you have directly taken a dependency on and their versions. In this example, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions. In the example the `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer` which in turn takes a dependency on a vulnerable version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n#### Manually reviewing project.assets.json (VS2017)\r\n\r\nOpen the `project.assets.json` file from your project’s obj directory in your editor. We suggest you use an editor that understands json and allows you to collapse and expand nodes to review this file; both Visual Studio and Visual Studio Code provide this functionality.\r\n\r\nSearch the `project.assets.json` file for each of the vulnerable packages, using the format `packagename/` using the package name from the table above. If you find the assembly name in your search examine the line on which they are found, the version number is after the `/` and compare to the vulnerable versions table above. For example a search result that shows `Microsoft.AspNetCore.Mvc.Cors/1.1.0` is a reference to v1.1.0 of `Microsoft.AspNetCore.Mvc.Cors`.   If your `project.assets.json` file includes references to any of the vulnerable packages shown above then you will need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages this means none of your direct dependencies depend on any vulnerable packages or you have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to any of the vulnerable packages you must add a direct dependency to the updated package to your `csproj` file to override the transitive dependency. Open your `projectname.csproj` file in your editor, or right click on the project in Visual Studio 2017 and choose Edit `projectname.csproj` from the content menu, where `projectname` is the name of your project. Look for `PackageReference` nodes, for example:\r\n\r\n``` xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp1.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <PropertyGroup>\r\n    <PackageTargetFallback>$(PackageTargetFallback);portable-net45+win8+wp8+wpa81;</PackageTargetFallback>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore\" Version=\"1.1.1\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"1.1.3\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"1.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nFor each of the vulnerable packages your search returned you must add a direct dependency to the updated version by adding it to the `csproj` file. You do this by adding a new line to the dependencies section, referring the fixed version. For example, if your search showed a transitive reference to the vulnerable `Microsoft.AspNetCore.Server.WebListener` version 1.1.0 you would add a reference to the appropriate fixed version 1.1.4.\r\n\r\n``` xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp1.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <PropertyGroup>\r\n    <PackageTargetFallback>$(PackageTargetFallback);portable-net45+win8+wp8+wpa81;</PackageTargetFallback>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.WebListener\" Version=\"1.1.4\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore\" Version=\"1.1.1\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"1.1.3\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"1.0.0\" />\r\n  </ItemGroup>\r\n```\r\n\r\nAfter you have added the direct dependency reference, save your `csproj` file.\r\n\r\nIf you are using Visual Studio, save your updated `csproj` file and Visual Studio will restore the new package versions. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependencies.\r\n\r\n### Rebuilding your application\r\nFinally rebuild your application, test as you would do normally and redeploy using your favored deployment mechanism.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\t\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2017-11883](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-11883)\r\n\r\n### Revisions\r\n\r\nV1.0 (Nov 14, 2017): Advisory published.\r\nV1.1 (Nov 14, 2017): Mitigation clarification that HTTP.SYS is only available on Windows.\r\nV1.2 (Nov 14, 2017): Added Http.Server package for v1.x platform.\r\nV1.3 (Nov 15, 2017): Updated package version numbers for correctness.\r\n\r\n_Version 1.3_\r\n_Last Updated 2017-11-15_","Url":"https://github.com/aspnet/Announcements/issues/278","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2017-11883: Denial Of Service Vulnerability\" (#278)"},{"Id":"273831890","IsPullRequest":false,"CreatedAt":"2017-11-14T15:24:44","Actor":"blowdart","Number":"277","RawContent":null,"Title":"Microsoft Security Advisory CVE-2017-11879: Open Redirect can cause Elevation Of Privilege","State":"open","Body":"# Microsoft Security Advisory CVE-2017-11879: Open Redirect can cause Elevation Of Privilege \r\n\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in public ASP.NET Core 2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability some public versions of ASP.NET Core where an Open Redirect exists, leading to Elevation Of Privilege.\r\n\r\n## Discussion\r\n\r\nPlease use https://github.com/aspnet/Mvc/issues/7053 for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nASP.NET Core applications using version 1.0.x or 1.1.x are not affected.\r\n\r\n## Affected Software\r\nThe vulnerabilities affect any Microsoft .NET Core project if it uses the following affected package versions.\r\n\r\nPackage name | Package versions | Fixed package versions\r\n---------------- | ------------------- | -------------------------\r\nMicrosoft.AspNetCore.All | 2.0.0 |  2.0.3\r\nMicrosoft.AspNetCore.Mvc.Core | 2.0.0 |  2.0.1\r\n\r\n## Advisory FAQ\r\n### How do I know if I am affected? \r\n\r\n.NET Core and ASP.NET Core have two types of dependencies: direct and transitive. If your project has a direct or transitive dependency on any of the packages and versions listed above, you are affected.\r\n\r\n### Direct Dependencies\r\nDirect dependencies are dependencies where you specifically add a package to your project. For example, if you add the `Microsoft.AspNetCore.Mvc` package to your project then you have taken a direct dependency on` Microsoft.AspNetCore.Mvc`.\r\n\r\nDirect dependencies are discoverable by reviewing your `csproj` file.\r\n\r\n### Transitive Dependencies\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if you add the `Microsoft.AspNetCore.Mvc` package to your project it depends on the `Microsoft.AspNetCore.Mvc.Core` package (among others). Your project has a direct dependency on `Microsoft.AspNetCore.Mvc` and a transitive dependency on the `Microsoft.AspNetCore.Mvc.Core` package.\r\nTransitive dependencies are reviewable in the Visual Studio Solution Explorer window, which supports searching, or by reviewing the `project.lock.json` file contained in the root directory of your project for `project.json` projects or the `project.assets.json` file contained in the obj directory of your project for `csproj` projects. These files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n## How do I fix my affected application?\r\nYou will need to fix both direct dependencies and review and fix any transitive dependencies. The affected packages and versions in the previous “Affected Software” section include each vulnerable package, the vulnerable versions, and the patched versions\r\n\r\n---\r\n\r\nIf you are targeting .NET Core a \"meta-package\" is used, `Microsoft.AspNetCore.All`. You should begin by updating its version number to 2.0.3, this will pull in the fixed `Microsoft.AspNetCore.Mvc.Core` package.\r\n\r\nIf you are targeting .NET Framework you should first update the `Microsoft.AspNetCore` version to the version number to 2.0.1, then adjust the version number for any other packages beginning with `Microsoft.AspNetCore.` to 2.0.3.\r\n\r\n---\r\n\r\n### Fixing Direct Dependencies – Projects targeting .NET Core\r\nOpen your `projectname.csproj` file in your editor, or right click the project in Visual Studio 2017 and choose `Edit projectname.csproj` from the content menu, where projectname is the name of your project. Look for `PackageReference` nodes. The following shows an example project file:\r\n\r\n``` XML\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe example has has a reference to the vulnerable metapackage, as seen by the single `PackageReference` elements. The name of the package is in the Include attribute, and the package version number is in the Version attribute that is exposed to the right of the package name. The example shows a single direct dependency on `Microsoft.AspNetCore.All` version 2.0.0.\r\n\r\nTo update to the fixed package, change the version number to the updated package version. In the example, this would be updating `Microsoft.AspNetCore.All` to 2.0.3.\r\n\r\nAfter updating the vulnerable package version, save your `csproj` file. The example `csproj` would now look as follows:\r\n\r\n``` XML\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.3\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you are using Visual Studio and save your updated `csproj` file, Visual Studio will restore the new package version. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependency.\r\n\r\n### Fixing Direct Dependencies – Projects targeting .NET Framework\r\nOpen your `projectname.csproj` file in your editor, or right click the project in Visual Studio 2017 and choose `Edit projectname.csproj` from the content menu, where projectname is the name of your project. Look for `PackageReference` nodes. The following shows an example project file:\r\n\r\n``` XML\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc.Core\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe example has has a reference a single packages, as seen by the `PackageReference` element. The name of the package is in the Include attribute, and the package version number is in the Version attribute that is exposed to the right of the package name. The example shows a direct dependency on one of the vulnerable packages from the table above, `Microsoft.AspNetCore.Core` version 2.0.0.\r\n\r\nTo update to the fixed package, change the version number to the updated package version. In the example, this would be updating `Microsoft.AspNetCore.Core` to 2.0.1.\r\n\r\nAfter updating the vulnerable package version, save your `csproj` file. The example `csproj` would now look as follows:\r\n\r\n``` XML\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc.Core\" Version=\"2.0.1\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\nIf you are using Visual Studio and save your updated `csproj` file, Visual Studio will restore the new package version. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependency.\r\n\r\n### After updating your direct dependencies\r\n\r\nRecompile your application.\r\n\r\nIf after recompilation you see a Dependency conflict warning, you must update your other direct dependencies to the appropriate version. \r\n\r\nFor example if your project refers a direct reference to `Microsoft.AspNetCore.Mvc.Cors` with a version number of 2.0.0 when you update your `Microsoft.AspNetCore.Mvc` package to 2.0.1, compilation will throw:\r\n\r\n`NU1012      Dependency conflict. Microsoft.AspNetCore.Mvc 2.0.1 expected Microsoft.AspNetCore.Mvc.Cors >= 2.0.1 but received 2.0.0`\r\n\r\nTo fix this, edit the version for the expected package to be the version expected by updating your `project.json` in the same way that you used to update the vulnerable package versions.\r\n\r\nAfter you have addressed all of your direct dependencies, you must also review your transitive dependencies.\r\n\r\n### Reviewing Transitive Dependencies \r\n\r\nThere are two ways to view transitive dependencies. You can either use Visual Studio’s Solution Explorer, or you can review your `project.assets.json` file.\r\n\r\n#### Using Visual Studio Solution Explorer (VS2017)\r\n\r\nIf you want to use Solution Explorer, open your project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for each of the vulnerable package names and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017.\r\n\r\n![vs2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In these results, you can see we have found references to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2.\r\n\r\nUnder the Dependencies node will be a NuGet node. Under the NuGet node will be the list of packages you have directly taken a dependency on and their versions. In this example, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions. In the example the `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer` which in turn takes a dependency on a vulnerable version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n#### Manually reviewing project.assets.json (VS2017)\r\n\r\nOpen the `project.assets.json` file from your project’s obj directory in your editor. We suggest you use an editor that understands json and allows you to collapse and expand nodes to review this file; both Visual Studio and Visual Studio Code provide this functionality.\r\n\r\nSearch the `project.assets.json` file for each of the vulnerable packages, using the format `packagename/` for each of the package names from the table above. If you find the assembly name in your search examine the line on which they are found, the version number is after the `/` and compare to the vulnerable versions table above. For example a search result that shows `Microsoft.AspNetCore.Mvc.Cors/1.1.0` is a reference to v1.1.0 of `Microsoft.AspNetCore.Mvc.Cors`.   If your `project.assets.json` file includes references to any of the vulnerable packages shown above then you will need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages this means none of your direct dependencies depend on any vulnerable packages or you have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to any of the vulnerable packages you must add a direct dependency to the updated package to your `csproj` file to override the transitive dependency. Open your `projectname.csproj` file in your editor, or right click on the project in Visual Studio 2017 and choose Edit `projectname.csproj` from the content menu, where `projectname` is the name of your project. Look for `PackageReference` nodes, for example:\r\n\r\n``` xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nFor each of the vulnerable packages your search returned you must add a direct dependency to the updated version by adding it to the `csproj` file. You do this by adding a new line to the dependencies section, referring the fixed version. For example, if your search showed a transitive reference to the vulnerable `Microsoft.AspNetCore.Mvc.Core` version 2.0.0 you would add a reference to the fixed version, 2.0.1.\r\n\r\n``` xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc.Core\" Version=\"2.0.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you have added the direct dependency reference, save your `csproj` file.\r\n\r\nIf you are using Visual Studio, save your updated `csproj` file and Visual Studio will restore the new package versions. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependencies.\r\n\r\n### Rebuilding your application\r\nFinally rebuild your application, test as you would do normally and redeploy using your favored deployment mechanism.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\t\r\n### Disclaimer\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nThanks to Kévin Chalet for reporting this issue.\r\n\r\n### External Links\r\n\r\n[CVE-2017-11879:](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-11879)\r\n\r\n### Revisions\r\n\r\nV1.0 (Nov 14, 2017): Advisory published.\r\nV1.1 (Nov 14, 2017): Fixed metapackage version.\r\nV1,2  (Nov 14, 2017): Fixed metapackage version in samples. \r\n\r\n_Version 1.2_\r\n_Last Updated 2017-11-14_","Url":"https://github.com/aspnet/Announcements/issues/277","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2017-11879: Open Redirect can cause Elevation Of Privilege\" (#277)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1007012288455479302","CreatedAt":"2018-06-13T21:30:13+00:00","UserScreenname":"aspnet","Text":"Join @csharpfritz tomorrow to learn how to use @AppInsights with your #ASP.NET Core project. https://t.co/xecbDbFNkT","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":17,"FavoriteCount":6,"RawContent":null},{"Id":"1006685262536105984","CreatedAt":"2018-06-12T23:50:44+00:00","UserScreenname":"aspnet","Text":"Watch the recording from today's #ASPNET Community Standup with the #Blazor team, including new Electron and server… https://t.co/c261fjZK3k","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":35,"FavoriteCount":18,"RawContent":null},{"Id":"1006582492004925441","CreatedAt":"2018-06-12T17:02:22+00:00","UserScreenname":"aspnet","Text":"And we're live on the #ASPNET Community Standup! Join the whole #Blazor team, see some exciting new demos!\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":40,"FavoriteCount":21,"RawContent":null},{"Id":"1006309084402995205","CreatedAt":"2018-06-11T22:55:56+00:00","UserScreenname":"aspnet","Text":"Don't miss this week's #ASPNET Community Standup with THE WHOLE BLAZOR TEAM!!!\n\nTuesday at 10 Pacific / 18 GMT… https://t.co/rwDAHrIXMu","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":78,"FavoriteCount":45,"RawContent":null},{"Id":"1005426223554662400","CreatedAt":"2018-06-09T12:27:46+00:00","UserScreenname":"aspnet","Text":"Tune in today at 10a ET / 7a PT / 14:00 UTC / 8p IST and learn about global tools along with Jeff. https://t.co/J9tTYva6s6","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":3,"RawContent":null},{"Id":"1004839694465548288","CreatedAt":"2018-06-07T21:37:06+00:00","UserScreenname":"aspnet","Text":"Blazor 0.4.0 experimental release now available https://t.co/bmpsCos7xn","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":204,"FavoriteCount":124,"RawContent":null},{"Id":"1004123317446381568","CreatedAt":"2018-06-05T22:10:29+00:00","UserScreenname":"aspnet","Text":"The #ASPNET Community Standup is live now at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":6,"RawContent":null},{"Id":"1003773072996909056","CreatedAt":"2018-06-04T22:58:44+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup Tuesday at 3:00 PM Pacific / 23:00 GMT at https://t.co/4Ioo9jNSN2 https://t.co/56UGvtmJC0","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":5,"RawContent":null},{"Id":"1001877838369382400","CreatedAt":"2018-05-30T17:27:45+00:00","UserScreenname":"aspnet","Text":"Our latest release is now available.  Read all about the new #ASP.NET Core 2.1 at https://t.co/n1ZJsZ2YcE","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":211,"FavoriteCount":123,"RawContent":null},{"Id":"996435611354447872","CreatedAt":"2018-05-15T17:02:17+00:00","UserScreenname":"aspnet","Text":"And we're live! Join us as https://t.co/3dFxSj11IQ https://t.co/PAZDWtuk1r","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":3,"RawContent":null},{"Id":"996432221497057285","CreatedAt":"2018-05-15T16:48:49+00:00","UserScreenname":"aspnet","Text":"Starting soon - join us for an MVC Functional Testing overview with Javier Calvarro Nelson at… https://t.co/FavBvWbz0w","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":3,"RawContent":null},{"Id":"996146847939883009","CreatedAt":"2018-05-14T21:54:50+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nMVC Functional Testing with Javier Calvarro Nelson… https://t.co/twYeUUd1RO","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":32,"FavoriteCount":15,"RawContent":null},{"Id":"993841130545426433","CreatedAt":"2018-05-08T13:12:44+00:00","UserScreenname":"aspnet","Text":"Jeff will be pair-programming using @VisualStudio Live Share on an @aspnet Core project with YOU at the Live Share… https://t.co/i0sm9cCOGz","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2018-06-21T05:30:24.1910075Z","RunDurationInMilliseconds":18555}