{"Data":{"Vue":{"Events":[],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"7674307305","Type":"IssuesEvent","CreatedAt":"2018-05-15T03:08:14","Actor":"eunjae-lee","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2199","RelatedDescription":"Opened issue \"A link to named router is not working with root path of nested routes.\" (#2199) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/63b7utzm/19/](https://jsfiddle.net/63b7utzm/19/)\r\n\r\n### Steps to reproduce\r\nFrom the link above, click `/user`.\r\n\r\n### What is expected?\r\nIt's supposed to render `UserHome` component.\r\n\r\n### What is actually happening?\r\nbut it's just rendering `User` component.\r\n\r\n---\r\nIf you try with https://jsfiddle.net/kx7spvh3/1/ , it will work fine.\r\nThe only difference is, this one has links with actual path instead of route names.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7674145622","Type":"IssuesEvent","CreatedAt":"2018-05-15T02:09:01","Actor":"vue-issue-bot","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2198","RelatedDescription":"Closed issue \"vue-router滚动行为还支持吗\" (#2198) at vuejs/vue-router","RelatedBody":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n"},{"Id":"7674145578","Type":"IssuesEvent","CreatedAt":"2018-05-15T02:09:00","Actor":"tanzhiyu","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2198","RelatedDescription":"Opened issue \"vue-router滚动行为还支持吗\" (#2198) at vuejs/vue-router","RelatedBody":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n"},{"Id":"7674027139","Type":"IssuesEvent","CreatedAt":"2018-05-15T01:25:22","Actor":"vue-issue-bot","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2197","RelatedDescription":"Closed issue \"Android8.0版本路由问题\" (#2197) at vuejs/vue-router","RelatedBody":"点击路由跳转链接的时候，第一次点击无反应需要再点一次。之前判断是组件加载慢，但长时间组件都加载不出来就不太合理了。尝试再点一次立刻就加载出来了。或者我连点2次也能很快加载出来。\r\n经测试该现象也只有在Android8.0手机会重现。"},{"Id":"7674027107","Type":"IssuesEvent","CreatedAt":"2018-05-15T01:25:22","Actor":"f2009","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2197","RelatedDescription":"Opened issue \"Android8.0版本路由问题\" (#2197) at vuejs/vue-router","RelatedBody":"点击路由跳转链接的时候，第一次点击无反应需要再点一次。之前判断是组件加载慢，但长时间组件都加载不出来就不太合理了。尝试再点一次立刻就加载出来了。或者我连点2次也能很快加载出来。\r\n经测试该现象也只有在Android8.0手机会重现。"},{"Id":"7671259642","Type":"IssuesEvent","CreatedAt":"2018-05-14T15:10:39","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2194","RelatedDescription":"Closed issue \"wrong work history push state\" (#2194) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://95.213.163.110:3001/user/578f9322f833fde7b4f479f8](http://95.213.163.110:3001/user/578f9322f833fde7b4f479f8)\r\n\r\n### Steps to reproduce\r\nclick to  Объявления and see browser adreess\r\n\r\n### What is expected?\r\nlink change to http://95.213.163.110:3001/user/578f9322f833fde7b4f479f8//ads\r\n\r\n### What is actually happening?\r\nlink change to http://95.213.163.110:3001/user/578f9322f833fde7b4f479f8/ads\r\n\r\n---\r\nI'm using a vue-router, and history is fashion. I have references such as `/user/578f9322f833fde7b4f479f8//ads, the link itself is spelled correctly, and the request to the server goes along the correct path, but in the address bar the link changes to /user/578f9322f833fde7b4f479f8/ads, that is, without 1 slash, and naturally the page refreshes an incident.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7669836318","Type":"IssuesEvent","CreatedAt":"2018-05-14T10:59:52","Actor":"machao1990","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2196","RelatedDescription":"Opened issue \"ie10，iframe中使用router.go(-1)后，再次router.push()，出现history记录错乱的情况\" (#2196) at vuejs/vue-router","RelatedBody":"### Version\r\n2.8.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/mage1990/pcoucsx6/](https://jsfiddle.net/mage1990/pcoucsx6/)\r\n\r\n### Steps to reproduce\r\n1、首先得用原版的ie10访问，不是ie11或者edge模拟ie10，这一点很重要\r\n2、把单页嵌入iframe中，这一点jsfiddle已经帮忙做好了\r\n3、点击list页中的 查看详情 按钮，router.push，页面渲染出子路由对应的detail页\r\n4、点击detail页中的按钮，router.go(-1)，路由返回初始状态\r\n5、再点击list也中的 查看详情 按钮，这时页面会渲染成空白，router.pullpath = '/detail/detail'\r\n\r\n### What is expected?\r\n期望能跟chrome下的表现一样，go(-1)再push时，路由正常表现\r\n\r\n### What is actually happening?\r\n实际上go(-1)再push后，路由路径append了两个detail\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7669284498","Type":"IssuesEvent","CreatedAt":"2018-05-14T09:10:46","Actor":"raxxarr","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2195","RelatedDescription":"Opened issue \"replaceState needs third argument\" (#2195) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/raxxar/ugp1mL8x/8/](https://jsfiddle.net/raxxar/ugp1mL8x/8/)\r\n\r\n### Steps to reproduce\r\n- in latest Safari(OS X or iOS)\r\n- set router base: /app/\r\n- set router mode: history\r\n1. open page 1 via url: localhost:8080/app/p1\r\n2. navigate to /app/p2 by clicking router-link\r\n3. click history back button on browser\r\n\r\nnote: the minimal reproduction cannot reproduce the issue because I don't know how to use url to change route in JSFiddle\r\n\r\n\r\n### What is expected?\r\njump back to /app/p1\r\n\r\n### What is actually happening?\r\njump to /app/\r\n\r\n---\r\nThis issue is caused by using replaceState without giving a third argument when trying to fix a Firefox scroll issue (https://github.com/vuejs/vue-router/blob/dev/src/util/scroll.js#L9)；This works fine on most browsers except for Safari.\r\nAccording to whatwg spec，if the 3rd argument is not given，browser should set current url into history，but Safari set the base url.\r\nHere is Webkit source code: https://trac.webkit.org/browser/webkit/branches/safari-605.2.8.1-branch/Source/WebCore/page/History.cpp#L157\r\nHere is Blink source code: https://chromium.googlesource.com/chromium/blink/ /master/Source/core/frame/History.cpp#153\r\nAs is seen, what Safari do is not what we expect when we omit the 3rd argument.\r\n\r\nAlthough this is not really a vue-router bug, we can add a third argument(current path) to avoid something weird happen.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[],"ResultType":"GitHubEvent"},"Vue-Issues":{"Issues":[{"Id":"322835620","IsPullRequest":false,"CreatedAt":"2018-05-14T14:30:53","Actor":"IamManchanda","Number":"8186","RawContent":null,"Title":"[DOCS] Vue CLI for TypeScript already there","State":"closed","Body":"### Version\r\n2.5.0\r\n\r\n### Reproduction link\r\n[https://vuejs.org/v2/guide/typescript.html](https://vuejs.org/v2/guide/typescript.html)\r\n\r\n### Steps to reproduce\r\n`vue create sample` => manually => Check the TypeScript option\r\n\r\n### What is expected?\r\nThis shouldn't be in docs... Am I missing something?\r\n\r\n### What is actually happening?\r\nThis is in docs... Actually instead of this below content there should be an how to guide on how to use Vue CLI with TypeScript?\r\n\r\n<img width=\"869\" alt=\"screen shot 2018-05-14 at 7 39 18 pm\" src=\"https://user-images.githubusercontent.com/4970624/40002720-24127982-57af-11e8-996e-a2840cf1a73d.png\">\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8186","RelatedDescription":"Closed issue \"[DOCS] Vue CLI for TypeScript already there\" (#8186)"},{"Id":"322622821","IsPullRequest":false,"CreatedAt":"2018-05-14T13:36:25","Actor":"slimee","Number":"8183","RawContent":null,"Title":"Deep object returned by computed is not reactive?","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://github.com/BlueForestTrees/trees/blob/dev/web/src/main/vue/layout/Compare.vue](https://github.com/BlueForestTrees/trees/blob/dev/web/src/main/vue/layout/Compare.vue)\r\n\r\n### Steps to reproduce\r\nCreate a component with props and a computed property.\r\nCreate a deep object from props values inside the computed property.\r\nUse this object in the template.\r\n\r\n### What is expected?\r\nAny changes in the object should be reflected in the template.\r\n\r\n### What is actually happening?\r\nNo changes\r\n\r\n---\r\nDoes a computed property is allways fully reactive?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8183","RelatedDescription":"Closed issue \"Deep object returned by computed is not reactive?\" (#8183)"},{"Id":"322691742","IsPullRequest":false,"CreatedAt":"2018-05-14T06:50:14","Actor":"a77321a","Number":"8185","RawContent":null,"Title":"icon css relative path error","State":"closed","Body":"the path is error , It's no use using alias","Url":"https://github.com/vuejs/vue/issues/8185","RelatedDescription":"Closed issue \"icon css relative path error\" (#8185)"},{"Id":"322641602","IsPullRequest":true,"CreatedAt":"2018-05-14T00:43:03","Actor":"Raikozyz","Number":"8184","RawContent":null,"Title":"Merge pull request #2 from vuejs/dev","State":"closed","Body":"update\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8184","RelatedDescription":"Closed or merged PR \"Merge pull request #2 from vuejs/dev\" (#8184)"},{"Id":"322560189","IsPullRequest":false,"CreatedAt":"2018-05-13T03:45:20","Actor":"benmccallum","Number":"8182","RawContent":null,"Title":"v-model to a nested getter/setter computed property backed by vuex doesn't behave as expected","State":"closed","Body":"### Version\r\n2.5.2\r\n\r\n### Reproduction link\r\n[https://codepen.io/benmccallum/pen/NMzrMj](https://codepen.io/benmccallum/pen/NMzrMj)\r\n\r\n### Steps to reproduce\r\n* Type something into \"firstName\" field and see the value is output immediately to the right. This is as expected. (Uses suggested pattern for Vuex with v-model at https://vuex.vuejs.org/en/forms.html)\r\n\r\n* See \"lastName\" field has an initial value of \"[object Object]\". This isn't expected.\r\n* Type something into \"lastName\" field and see the value is NOT immediately output to the right. This isn't expected. \r\n* Tab out of the \"lastName\" field and notice now it will output to the right.\r\n\r\n\r\n\r\n### What is expected?\r\n1. On load, both inputs should be empty.\r\n2. Typing into lastName should behave the same way as firstName (immediate output to side on 'input' event, not just focus out)\r\n\r\n### What is actually happening?\r\n1. lastName input has \"[object Object]\"\r\n2. Typing into lastName does nothing to our output until you \"focus out\"\r\n\r\n---\r\nI'm basically wanting to nest custom getter/setter properties under a top-level computed property. I'm doing this because I'd like to nest all my forms fields under a computed property called \"form\" that returns an object where each property is itself an object defining the getter/setter to the Vuex store. \r\n\r\nI can potentially flatten these all with a map method that creates a computed property (getter/setter) for each field like `fieldName   \"Field\"` but the reason I'm trying to do this is to normalize a Vue plugin's usage across component state vs vuex state. \r\n\r\nAlso, if this nesting means that the \"form\" property with nestings is recalculated every time a field changes, let me know as obviously that'd be a performance consideration that may drive me to the flat style and force me to figure out how I document the plugin's usage.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8182","RelatedDescription":"Closed issue \"v-model to a nested getter/setter computed property backed by vuex doesn't behave as expected\" (#8182)"},{"Id":"322547677","IsPullRequest":false,"CreatedAt":"2018-05-12T22:40:07","Actor":"wim-put","Number":"8181","RawContent":null,"Title":"export order bug","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://github.com/wim-put/minimal-reproduction-vue-export-order-bug](https://github.com/wim-put/minimal-reproduction-vue-export-order-bug)\r\n\r\n### Steps to reproduce\r\nclone the project and, 'npm install' and 'npm run serve'\r\n\r\n### What is expected?\r\nto render App.vue's template when browsing to the localhost\r\n\r\n### What is actually happening?\r\na warning is thrown, [Vue warn]: Unknown custom element\r\n\r\n---\r\nThe problem does not occur when you change the order of the 2 exports in '/src/components/index.js', then the page is rendered as expected. I have the feeling there is a loose comparison going on in the background.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8181","RelatedDescription":"Closed issue \"export order bug\" (#8181)"},{"Id":"322510103","IsPullRequest":false,"CreatedAt":"2018-05-12T13:25:14","Actor":"luo772435545","Number":"8180","RawContent":null,"Title":"动态组件生成的js引入路径有问题","State":"closed","Body":"### Version\r\n2.5.2\r\n\r\n### Reproduction link\r\n[https://www.baidu.com](https://www.baidu.com)\r\n\r\n### Steps to reproduce\r\nvue在webpack生成多页面\r\n比如index.html  login.html   products/productDetail.html\r\n在productDetail.html  会存在 动态产生的js路径问题\r\n\r\n### What is expected?\r\n在productDetail.html  js路径引入正确\r\n\r\n### What is actually happening?\r\nvue在webpack生成多页面\r\n比如index.html  login.html   products/productDetail.html\r\n在productDetail.html  会存在 动态产生的js路径问题\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8180","RelatedDescription":"Closed issue \"动态组件生成的js引入路径有问题\" (#8180)"},{"Id":"322506468","IsPullRequest":true,"CreatedAt":"2018-05-12T12:10:21","Actor":"mymyoux","Number":"8179","RawContent":null,"Title":"Add iterable supports for v-for ","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nAdds support for iterable object implementing [Symbol.iterator]()\r\nIt shouldn't have an impact for existing code because non iterable objects are not impacted.\r\nVue will have the same behaviour than a for...of expression for iterables. (actual interest for using iterables)\r\nAllows us to pass an iterable directly to a template without giving internal properties or converting it to an array\r\n\r\n\r\nI wrote 4 new tests. No existing tests needed changes.\r\nAll tests passed. I ran tests with PhantomJS (lack of Symbol support), Firefox and Chrome.\r\n\r\n","Url":"https://github.com/vuejs/vue/pull/8179","RelatedDescription":"Open PR \"Add iterable supports for v-for \" (#8179)"},{"Id":"322505433","IsPullRequest":false,"CreatedAt":"2018-05-12T12:04:24","Actor":"caijian1993","Number":"8178","RawContent":null,"Title":"给dom元素设置过id属性后， 就可以直接以id名的全局变量访问到这个元素 ,而不需要任何获取操作，如getElememtById","State":"closed","Body":"### Version\r\n2.5.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/caijian/gns0xb0t/](https://jsfiddle.net/caijian/gns0xb0t/)\r\n\r\n### Steps to reproduce\r\n列如在app.vue中<div id=\"demo\"></div> , 在所有组件内的mounted周期都可以直接当全局变量一样console.log（demo） , 访问到这个div元素 ，而不需要通过doucment.getElementById ，  不知道这个是bug还是故意为之 \r\n\r\n### What is expected?\r\n不知道这个是bug还是故意为之\r\n\r\n### What is actually happening?\r\n给过id属性的dom元素 ， 全局都能访问  ， 不需要任何获取操作\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8178","RelatedDescription":"Closed issue \"给dom元素设置过id属性后， 就可以直接以id名的全局变量访问到这个元素 ,而不需要任何获取操作，如getElememtById\" (#8178)"},{"Id":"322488654","IsPullRequest":true,"CreatedAt":"2018-05-12T06:53:08","Actor":"HerringtonDarkholme","Number":"8177","RawContent":null,"Title":"fix(server): use path.posix.join to generate public path, fix #8167","State":"open","Body":"fix #8167 \r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included","Url":"https://github.com/vuejs/vue/pull/8177","RelatedDescription":"Open PR \"fix(server): use path.posix.join to generate public path, fix #8167\" (#8177)"},{"Id":"322143913","IsPullRequest":false,"CreatedAt":"2018-05-12T06:49:35","Actor":"is-liyiwei","Number":"8169","RawContent":null,"Title":"添加样式后js效果失效","State":"closed","Body":"### Version\r\n2.5.2\r\n\r\n### Reproduction link\r\n[https://github.com/is-liyiwei/im-vuer](https://github.com/is-liyiwei/im-vuer)\r\n\r\n### Steps to reproduce\r\nim-vuer\\src\\components\\CityPicker\\CityPickerItem.vue这个文件里面\r\n\r\n3、4、5行上面添加了bug注释，这个是picker组件，但是添加了样式后无法触发js事件了\r\n\r\n可以启动这个项目\r\n然后进入http://localhost:8081/#/citypicker\r\n然后在CityPickerItem.vue文件的注释的两个span标签测试下，会发现，添加了style的那个span标签会导致选择事件失效\r\n\r\n### What is expected?\r\n添加css样式后不影响js逻辑问题\r\n\r\n### What is actually happening?\r\n添加css后js无法触发事件\r\n\r\n---\r\n个人思考了很久，实在想不出问题所在，按理说css应该不会影响js的事件的吧，所以只能向vue团队请教了0.0\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8169","RelatedDescription":"Closed issue \"添加样式后js效果失效\" (#8169)"},{"Id":"322481576","IsPullRequest":false,"CreatedAt":"2018-05-12T06:41:39","Actor":"CoffeeandTea","Number":"8176","RawContent":null,"Title":"到底是getter/setter还是访问器属性？？？","State":"closed","Body":"### Version\r\n2.5.17-beta.0\r\n\r\n### Reproduction link\r\n[https://cn.vuejs.org/v2/guide/reactivity.html](https://cn.vuejs.org/v2/guide/reactivity.html)\r\n\r\n### Steps to reproduce\r\n只是一个不成熟的小疑问，就是在Vue文档‘深入响应式原理’ 一节中介绍的Vue底层实现原理中那一句 “当你把一个普通的 JavaScript 对象传给 Vue 实例的 data 选项，Vue 将遍历此对象所有的属性，并使用 Object.defineProperty 把这些属性全部转为 getter/setter。”    让我头疼很多天了，这句话想表达的意思是不是“Vue 将遍历此对象所有的（数据）属性，并使用 Object.defineProperty 把这些（数据）属性全部转为 访问器属性？”    getter/setter是访问器属性的两个特性或者说描述吧，除此之外访问器属性还有两个跟数据属性相同的特性：Configurable   Enumerable，    所以属性是属性，属性的特性是属性的特性，二者应该不是等同的吧。说把这些属性全部转为 getter/setter 感觉很莫名其妙怪怪的～\r\n\r\n### What is expected?\r\n以上只是我个人的一个不成熟的小疑问，很可能我的理解是有偏差的，如果是你们直接关闭issue就好了，如果Vue真的是把属性通过Object.defineProperty 定义为了访问器属性，希望能在文档中进一步说明一下下，使得像我一样的小白不会思想误入岐途\r\n\r\n### What is actually happening?\r\nnothing. everything works perfect !      Vue 最棒！\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8176","RelatedDescription":"Closed issue \"到底是getter/setter还是访问器属性？？？\" (#8176)"},{"Id":"322432196","IsPullRequest":false,"CreatedAt":"2018-05-11T21:05:45","Actor":"plehnen","Number":"8175","RawContent":null,"Title":"disable slot warning on duplicate presence","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/1jz3wrfc/](https://jsfiddle.net/1jz3wrfc/)\r\n\r\n### Steps to reproduce\r\niterate a slot.\r\n\r\n### What is expected?\r\nI want to be able to use a separator slot in a v-for iteration.\r\n\r\n### What is actually happening?\r\n[Vue warn]: Duplicate presence of slot \"separator\"\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8175","RelatedDescription":"Closed issue \"disable slot warning on duplicate presence\" (#8175)"},{"Id":"322150968","IsPullRequest":false,"CreatedAt":"2018-05-11T18:12:40","Actor":"xhxno36","Number":"8170","RawContent":null,"Title":"v-if中的使用key管理可复用元素的疑问","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[http://jsbin.com/sulifoseba/edit?html,js,output](http://jsbin.com/sulifoseba/edit?html,js,output)\r\n\r\n### Steps to reproduce\r\nvue教程中的关于v-if使用key管理可复用元素的疑问（https://cn.vuejs.org/v2/guide/conditional.html#用-key-管理可复用的元素），当使用div包裹template模板里面的label和input之后，vue复用的特性就失效了，想知道是为什么\r\n\r\n### What is expected?\r\n能复用\r\n\r\n### What is actually happening?\r\n不能复用\r\n\r\n---\r\n我的理解，加上div后，实际复用的是div，而不是div里面的label和input，label和input还是需要重新渲染？\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8170","RelatedDescription":"Closed issue \"v-if中的使用key管理可复用元素的疑问\" (#8170)"},{"Id":"322271750","IsPullRequest":false,"CreatedAt":"2018-05-11T17:39:08","Actor":"janiek","Number":"8174","RawContent":null,"Title":"Chrome - sorting order of array changes after it gets reactive","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/kkk5p8n8yr](https://codesandbox.io/s/kkk5p8n8yr)\r\n\r\n### Steps to reproduce\r\nOpen the sandbox in chrome. The main code is situated in the helloworld.vue.\r\n\r\nCheckboxes are sorted by a default order (in this case the size). \r\nIf you check a checkbox, the checked checkbox will appear on top and all the other results are sorted by the default order. \r\n\r\nYou will see that the default sorting is interupted when you check a checkbox.\r\n\r\nAdditional information is logged to the console.\r\n\r\n### What is expected?\r\nTo make the code work, a clone was mode of the original sorting. To do this cloning we used a json stringify and parsed the json again. (this was tested as well with other methods). \r\nThen the object gets reactive (getters and setters are added). The sorting order should stay the same.\r\n\r\n### What is actually happening?\r\nAfter this parsing the object gets reactive. Then the sorting order of the array changes in Chrome.\r\n\r\n\r\n---\r\nin other browsers (mozilla, internet explorer, edge) all works fine.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8174","RelatedDescription":"Closed issue \"Chrome - sorting order of array changes after it gets reactive\" (#8174)"},{"Id":"322222722","IsPullRequest":false,"CreatedAt":"2018-05-11T13:19:03","Actor":"maoberlehner","Number":"8171","RawContent":null,"Title":"Scoped slots: data from `slot-scope` can't be passed to custom directives","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/4begnsym/5/](https://jsfiddle.net/4begnsym/5/)\r\n\r\n### Steps to reproduce\r\n- Open the link\r\n- Open the browser dev tools to see the JavaScript error\r\n\r\n### What is expected?\r\nI would expect that I can use data from the `slot-scope` as parameters in custom directives.\r\n\r\n### What is actually happening?\r\nData from `slot-scope` is `undefined` in the custom directive.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8171","RelatedDescription":"Closed issue \"Scoped slots: data from `slot-scope` can't be passed to custom directives\" (#8171)"},{"Id":"322232375","IsPullRequest":false,"CreatedAt":"2018-05-11T12:47:44","Actor":"networkimprov","Number":"8172","RawContent":null,"Title":"SVG icons double-painted in latest Firefox (FF60) ","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/eecd7bqd/](https://jsfiddle.net/eecd7bqd/)\r\n\r\n### Steps to reproduce\r\nIssue is apparent immediately.\r\n\r\n### What is expected?\r\n1 SVG icon\r\n\r\n### What is actually happening?\r\n2 SVG icons\r\n\r\n---\r\nSeen in FireFox 60 Win7 64bit. Not an issue in FF59.\r\n\r\nVue causes an SVG icon library (UIKit) to double-paint its icons.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8172","RelatedDescription":"Closed issue \"SVG icons double-painted in latest Firefox (FF60) \" (#8172)"},{"Id":"322232928","IsPullRequest":true,"CreatedAt":"2018-05-11T09:44:06","Actor":"noteScript","Number":"8173","RawContent":null,"Title":"Merge pull request #1 from vuejs/dev","State":"closed","Body":"update Vue\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8173","RelatedDescription":"Closed or merged PR \"Merge pull request #1 from vuejs/dev\" (#8173)"},{"Id":"322013952","IsPullRequest":false,"CreatedAt":"2018-05-10T17:26:56","Actor":"shubhamkakkar","Number":"8168","RawContent":null,"Title":"user-made directive","State":"closed","Body":"`\r\n<template>\r\n <div>\r\n<p v-highlight = \" { delayed : '2000' } \" > binding - delay</p>\r\n </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n    directives: {\r\n        'highlight': {\r\n            bind(el, binding, vnode) {\r\n              var delay = 0;\r\n /*\r\nis this the acurate syntax to check object's  elment - delayed, is passed or not\r\n*/              \r\n              if (binding.value === \"delayed\" ) { \r\n\r\n                    delay =  binding.value.delay;\r\n                    setTimeout(function(){\r\n                      if (binding.arg === 'background') {\r\n                          el.style.backgroundColor = defaultColor;\r\n                          console.log('binding argument check pass');\r\n                      }\r\n                      else {\r\n                        console.log('binded argument check fail,hence color change');\r\n                          el.style.color = defaultColor;\r\n                      }\r\n                    }, delay);\r\n                    console.log('binding.value.delay');\r\n                }\r\n          `}//bind`\r\n        }//highlight\r\n    }//directives\r\n}//default\r\n\r\n\r\n\r\n`","Url":"https://github.com/vuejs/vue/issues/8168","RelatedDescription":"Closed issue \"user-made directive\" (#8168)"},{"Id":"321970169","IsPullRequest":false,"CreatedAt":"2018-05-10T15:17:27","Actor":"meteorlxy","Number":"8167","RawContent":null,"Title":"SSR will always add a '/' before assets url even if the publicPath is empty","State":"open","Body":"### Version\r\n2.5.17-beta.0\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue/blob/2efc0446b3ac1f18fff8b59215e7b60d51c41965/src/server/template-renderer/index.js](https://github.com/vuejs/vue/blob/2efc0446b3ac1f18fff8b59215e7b60d51c41965/src/server/template-renderer/index.js)\r\n\r\n### Steps to reproduce\r\nNo need to repro, it's written in the code.\r\n\r\nhttps://github.com/vuejs/vue/blob/2efc0446b3ac1f18fff8b59215e7b60d51c41965/src/server/template-renderer/index.js#L107\r\n\r\nhttps://github.com/vuejs/vue/blob/2efc0446b3ac1f18fff8b59215e7b60d51c41965/src/server/template-renderer/index.js#L139-L141\r\n\r\nhttps://github.com/vuejs/vue/blob/2efc0446b3ac1f18fff8b59215e7b60d51c41965/src/server/template-renderer/index.js#L160\r\n\r\nhttps://github.com/vuejs/vue/blob/2efc0446b3ac1f18fff8b59215e7b60d51c41965/src/server/template-renderer/index.js#L184\r\n\r\n```\r\nhref=\"${this.publicPath}/${file}\"\r\nsrc=\"${this.publicPath}/${file}\"\r\n```\r\nThe `publicPath` of `webpackConfig.output` could be empty, and it is resonable.\r\n\r\n### What is expected?\r\n- `publicPath = ''` generates `assets/css/xxx`\r\n- `publicPath = '/'` generates`/assets/css/xxx` \r\n\r\nThey are rather different\r\n\r\n### What is actually happening?\r\n- `publicPath = ''` and `publicPath = '/'` both generate `/assets/css/xxx`\r\n\r\n---\r\nSo we could introduce an extra judgement for `this.publicPath === ''`\r\n\r\nOr we could just use `publicPath` directly.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8167","RelatedDescription":"Open issue \"SSR will always add a '/' before assets url even if the publicPath is empty\" (#8167)"},{"Id":"321914034","IsPullRequest":false,"CreatedAt":"2018-05-10T14:52:12","Actor":"KammererTob","Number":"8165","RawContent":null,"Title":"Watcher of hidden component not triggered when becoming visible","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/b843bmen/1/](https://jsfiddle.net/b843bmen/1/)\r\n\r\n### Steps to reproduce\r\n1. Press \"Change Property\"\r\n2. Press \"Show Component\"\r\n3. \"propToWatch\" watcher not triggered\r\n\r\n### What is expected?\r\nWatcher of the component should be notified about a changed property after it became visible\r\n\r\n### What is actually happening?\r\nThe component is not notified about a changed property while it was invisible.\r\n\r\n---\r\nI am not sure if this is really a bug or intended behaviour. I understand that a invisible component is not active and is thus not notified while being invisible, but i feel that a component which becomes visible should be informed of changed properties, especially if they now differ from their initial default value (empty String in this example)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8165","RelatedDescription":"Closed issue \"Watcher of hidden component not triggered when becoming visible\" (#8165)"},{"Id":"321927573","IsPullRequest":false,"CreatedAt":"2018-05-10T14:50:52","Actor":"jpoo90","Number":"8166","RawContent":null,"Title":"Updating vNode.componentOptions.propsData doesn't trigger a render","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/8kky52prq2](https://codesandbox.io/s/8kky52prq2)\r\n\r\n### Steps to reproduce\r\nWhen you click one of the inactive tabs, those don't get re-render. You can see that the parent component (Tabs.js) state.activeIndex is updated but nothing happens with the children.\r\n\r\n### What is expected?\r\nWhen we update `vNode.componentOptions.propsData` the `vNode` render function should be called and update the component. \r\n\r\n### What is actually happening?\r\nEven though `vNode.componentOptions.propsData` are updated the `vNode` render function is never called.\r\n\r\n---\r\nI think this is a regression that appeared in `vue@2.4.3` . You can see the example [working here](\r\nhttps://codesandbox.io/s/znn83v2m43)  with  `vue@2.4.2`.\r\n\r\nI looked through the release notes and I think [this commit](https://github.com/vuejs/vue/commit/0529040c17b8632032a43d142aac88386f6b4a1f) is the one causing the problem. Please let me know if there is something I can do to help you on this. \r\n\r\nThanks in advance!\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8166","RelatedDescription":"Closed issue \"Updating vNode.componentOptions.propsData doesn't trigger a render\" (#8166)"},{"Id":"321792941","IsPullRequest":false,"CreatedAt":"2018-05-10T08:06:56","Actor":"andrewhu","Number":"8160","RawContent":null,"Title":"AJAX method fails in Firefox: fetch() works in created section but not methods section","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n## **Solution:** \r\nAdd a `target=\"_blank\"` in each link. The problem was that the user was getting redirected so the method failed.\r\n\r\n### Steps to reproduce\r\nWhen I access a link on my site, the fetch call in the created() function works successfully. You can verify this by accessing the link scrolling to the bottom and seeing that the value \"createdworks\" was successfully added. \r\nIf you click on a link on any subpage (disclaimer: clicking on the link downloads a pdf file), you get a NetworkError from Firefox. The request works in Chrome, Safari, and Edge.\r\n\r\nMy simplified code for the page below (removed non-essential functions): \r\n\r\n```\r\n<template>\r\n  <div>\r\n      <ul v-if=\"books\" class=\"books\">\r\n        <li v-for=\"b of books\">\r\n          <a v-on:click=\"count\">{link content here}</a>\r\n        </li>\r\n      </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    created() {\r\n      fetch('https://example.com/method' )\r\n    },\r\n    methods: {\r\n      count: function(event) { \r\n        fetch('https://example.com/method')\r\n      }\r\n    }\r\n  }\r\n</script>\r\n```\r\n\r\n### What is expected?\r\nFetch successfully makes a get request\r\n\r\n### What is actually happening?\r\nNetworkError from Firefox\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8160","RelatedDescription":"Closed issue \"AJAX method fails in Firefox: fetch() works in created section but not methods section\" (#8160)"},{"Id":"321797504","IsPullRequest":false,"CreatedAt":"2018-05-10T08:06:28","Actor":"feifeipan","Number":"8161","RawContent":null,"Title":"how to prune keep-alive cache in my own logic code?","State":"closed","Body":"### What problem does this feature solve?\r\nI use keep-alive in router-view in such request \"/detail/:id\"\r\n```\r\n<keep-alive>\r\n      <router-view></router-view>\r\n</keep-alive>\r\n```\r\n\r\nthere are about 100 different detail ids, and I need to remove the not-recently-used cache when leave the router(beforeRouterLeave)\r\n\r\nI found some related issues in git (https://github.com/vuejs/vue/issues/6509) which didn't solve my problem.\r\n\r\nBy the way, keep-alive max props is good but I need to remove some cache in my own logic code.\r\n\r\n\r\n### What does the proposed API look like?\r\nvm.$pruneCache(cache)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8161","RelatedDescription":"Closed issue \"how to prune keep-alive cache in my own logic code?\" (#8161)"},{"Id":"321838328","IsPullRequest":false,"CreatedAt":"2018-05-10T07:59:35","Actor":"XiaoLuo01","Number":"8164","RawContent":null,"Title":"is vm._computedWatchers available?","State":"closed","Body":"### What problem does this feature solve?\r\nIhave many variate be watched in computed property . And I want to get the all variate from computed property at a time , so I can put this variates into a Array, and I find a vue instance of vm._computedWatchers can get all variate , but I can't find this in vue official website . so I want to make sure this property is available?\r\n\r\n### What does the proposed API look like?\r\ncomputed: { quickType() { return this.getSearchValue('quick') }, titleExpre() { return this.getSearchValue('title') } .... more },\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8164","RelatedDescription":"Closed issue \"is vm._computedWatchers available?\" (#8164)"},{"Id":"321837379","IsPullRequest":false,"CreatedAt":"2018-05-10T07:30:36","Actor":"XiaoLuo01","Number":"8163","RawContent":null,"Title":"is vm._computedWatchers available?","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n\r\nIhave many variate be watched in computed property . And  I want to get the all variate from computed property at a time , so I can put this variates into a Array,  and I find a vue instance of vm._computedWatchers can get all variate , but I can't find this in vue official website . so I want to make sure this.property is available?\r\n\r\n`computed: {\r\n    quickType() {\r\n      return this.getSearchValue('quick')\r\n    },\r\n    titleExpre() {\r\n      return this.getSearchValue('title')\r\n    }\r\n.... more\r\n  },`\r\n","Url":"https://github.com/vuejs/vue/issues/8163","RelatedDescription":"Closed issue \"is vm._computedWatchers available?\" (#8163)"},{"Id":"321835206","IsPullRequest":false,"CreatedAt":"2018-05-10T07:20:57","Actor":"wangyinlong","Number":"8162","RawContent":null,"Title":"vue.runtime.common.js and vue-server-renderer cann't find userAgent of undefined","State":"closed","Body":"I use vue server render node module and vue node module for vue ssr\r\nbut when I run server, there is a problem tells me cannot find userAgent of Undefined\r\n\r\nI find the code in the vue-server-render and vue.runtime.common.js\r\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\r\n\r\nin nodejs, window.navigator is undefined but window is exists, I don't know why","Url":"https://github.com/vuejs/vue/issues/8162","RelatedDescription":"Closed issue \"vue.runtime.common.js and vue-server-renderer cann't find userAgent of undefined\" (#8162)"},{"Id":"321789921","IsPullRequest":false,"CreatedAt":"2018-05-10T02:52:35","Actor":"565784135","Number":"8159","RawContent":null,"Title":"不能访问 pc版 中文vue官网","State":"closed","Body":"### Version\r\n2.5.17-beta.0\r\n\r\n### Reproduction link\r\n[https://cn.vuejs.org/](https://cn.vuejs.org/)\r\n\r\n### Steps to reproduce\r\nopen url\r\n\r\n### What is expected?\r\n人人平等，无歧视\r\n\r\n### What is actually happening?\r\n国内外官网样式不一致，刻意给国内开发者增加障碍，对中国人不够友好！！！！\r\n除中文以外的官网都有pc版。\r\n\r\n---\r\n中国人没地位啊\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8159","RelatedDescription":"Closed issue \"不能访问 pc版 中文vue官网\" (#8159)"},{"Id":"321678359","IsPullRequest":false,"CreatedAt":"2018-05-09T18:31:26","Actor":"ArthurGreve","Number":"8158","RawContent":null,"Title":"IE problem using directive to uppercase input v-model","State":"open","Body":"### Version\r\n2.5.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/ktycksy6/](https://jsfiddle.net/ktycksy6/)\r\n\r\n### Steps to reproduce\r\nUsing Internet Explorer, type on the input anything that ends with a letter [eg: asdas, 1234r, w1e2d] and remove the focus from the input.\r\n\r\n### What is expected?\r\nInput keeps new value typed.\r\n\r\n### What is actually happening?\r\nThe input value goes back to previous value.\r\n\r\n---\r\nI'm working on a project where some input[type=text] values must be uppercase, and so, I created a directive that as the user types a value it would automatically uppercase the letter.\r\n\r\nIt works on Chrome, by the way, but it doesn't on IE.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8158","RelatedDescription":"Open issue \"IE problem using directive to uppercase input v-model\" (#8158)"},{"Id":"321638165","IsPullRequest":true,"CreatedAt":"2018-05-09T16:23:09","Actor":"DavidReinberger","Number":"8157","RawContent":null,"Title":"perf(Dep.js): Dep now uses an object to handle subscriptions","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: Performance increase\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nTearing down a big set of Vue elements (table rows) with lot of reactive dependencies, was very slow due to array [traversing](https://forum.vuejs.org/t/destroying-a-component-with-many-children/23533). Using an object sped up the whole process. Page 170 rows from 8s to 1sec and 800rows with less reactive data from 6sec to 2.5~sec. This could be observed best while navigating between routes.","Url":"https://github.com/vuejs/vue/pull/8157","RelatedDescription":"Open PR \"perf(Dep.js): Dep now uses an object to handle subscriptions\" (#8157)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"323050961","IsPullRequest":false,"CreatedAt":"2018-05-15T03:08:14","Actor":"eunjae-lee","Number":"2199","RawContent":null,"Title":"A link to named router is not working with root path of nested routes.","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/63b7utzm/19/](https://jsfiddle.net/63b7utzm/19/)\r\n\r\n### Steps to reproduce\r\nFrom the link above, click `/user`.\r\n\r\n### What is expected?\r\nIt's supposed to render `UserHome` component.\r\n\r\n### What is actually happening?\r\nbut it's just rendering `User` component.\r\n\r\n---\r\nIf you try with https://jsfiddle.net/kx7spvh3/1/ , it will work fine.\r\nThe only difference is, this one has links with actual path instead of route names.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2199","RelatedDescription":"Open issue \"A link to named router is not working with root path of nested routes.\" (#2199)"},{"Id":"323041543","IsPullRequest":false,"CreatedAt":"2018-05-15T02:09:01","Actor":"tanzhiyu","Number":"2198","RawContent":null,"Title":"vue-router滚动行为还支持吗","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2198","RelatedDescription":"Closed issue \"vue-router滚动行为还支持吗\" (#2198)"},{"Id":"323034619","IsPullRequest":false,"CreatedAt":"2018-05-15T01:25:22","Actor":"f2009","Number":"2197","RawContent":null,"Title":"Android8.0版本路由问题","State":"closed","Body":"点击路由跳转链接的时候，第一次点击无反应需要再点一次。之前判断是组件加载慢，但长时间组件都加载不出来就不太合理了。尝试再点一次立刻就加载出来了。或者我连点2次也能很快加载出来。\r\n经测试该现象也只有在Android8.0手机会重现。","Url":"https://github.com/vuejs/vue-router/issues/2197","RelatedDescription":"Closed issue \"Android8.0版本路由问题\" (#2197)"},{"Id":"322599149","IsPullRequest":false,"CreatedAt":"2018-05-14T15:10:38","Actor":"djvonavi","Number":"2194","RawContent":null,"Title":"wrong work history push state","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://95.213.163.110:3001/user/578f9322f833fde7b4f479f8](http://95.213.163.110:3001/user/578f9322f833fde7b4f479f8)\r\n\r\n### Steps to reproduce\r\nclick to  Объявления and see browser adreess\r\n\r\n### What is expected?\r\nlink change to http://95.213.163.110:3001/user/578f9322f833fde7b4f479f8//ads\r\n\r\n### What is actually happening?\r\nlink change to http://95.213.163.110:3001/user/578f9322f833fde7b4f479f8/ads\r\n\r\n---\r\nI'm using a vue-router, and history is fashion. I have references such as `/user/578f9322f833fde7b4f479f8//ads, the link itself is spelled correctly, and the request to the server goes along the correct path, but in the address bar the link changes to /user/578f9322f833fde7b4f479f8/ads, that is, without 1 slash, and naturally the page refreshes an incident.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2194","RelatedDescription":"Closed issue \"wrong work history push state\" (#2194)"},{"Id":"322768061","IsPullRequest":false,"CreatedAt":"2018-05-14T10:59:52","Actor":"machao1990","Number":"2196","RawContent":null,"Title":"there are some problems with vue-router in a iframe in ie10","State":"open","Body":"### Version\r\n2.8.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/mage1990/pcoucsx6/2/](https://jsfiddle.net/mage1990/pcoucsx6/2/)\r\n\r\n### Steps to reproduce\r\nopen the link above in ie10,not the ie10 in ie11's or edge's  f12\r\nclick the detail button in the list component\r\nclick the back button in the detail component\r\nclick the detail button again button again\r\nThe page turns white\r\n\r\n### What is expected?\r\nThe page can be displayed normally.\r\n\r\n### What is actually happening?\r\nThe page turns white\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2196","RelatedDescription":"Open issue \"there are some problems with vue-router in a iframe in ie10\" (#2196)"},{"Id":"322731684","IsPullRequest":false,"CreatedAt":"2018-05-14T09:10:46","Actor":"raxxarr","Number":"2195","RawContent":null,"Title":"replaceState needs third argument","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/raxxarr/router-demo.git](https://github.com/raxxarr/router-demo.git)\r\n\r\n### Steps to reproduce\r\n- in latest Safari(OS X or iOS)\r\n- add base element: `<base href=\"/app/\">`\r\n- set router mode: history\r\n1. open page 1 via url: localhost:8080/app/p1\r\n2. navigate to /app/p2 by clicking button\r\n3. click history back button on browser\r\n\r\n\r\n### What is expected?\r\njump back to /app/p1\r\n\r\n### What is actually happening?\r\njump to /app/\r\n\r\n---\r\nThis issue is caused by using replaceState without giving a third argument when trying to fix a Firefox scroll issue (https://github.com/vuejs/vue-router/blob/dev/src/util/scroll.js#L9)； This works fine on most browsers except for Safari.\r\nAccording to whatwg spec，if the 3rd argument is not given，browser should set current url into history，but Safari set the base url.\r\nHere is Webkit source code: https://trac.webkit.org/browser/webkit/branches/safari-605.2.8.1-branch/Source/WebCore/page/History.cpp#L157\r\nHere is Blink source code: https://chromium.googlesource.com/chromium/blink/ /master/Source/core/frame/History.cpp#153\r\nAs is seen, what Safari do is not what we expect when we omit the 3rd argument.\r\n\r\nAlthough this is not really a vue-router bug, we can add a third argument(current path) to avoid something weird happen.\r\n\r\nps: this bug is confirmed by Webkit https://bugs.webkit.org/show_bug.cgi?id=182678\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2195","RelatedDescription":"Open issue \"replaceState needs third argument\" (#2195)"},{"Id":"322493811","IsPullRequest":true,"CreatedAt":"2018-05-12T08:30:04","Actor":"emanuelmutschlechner","Number":"2193","RawContent":null,"Title":"feat(link): add 'exact-path' matching option","State":"open","Body":"Improves unfinished pull request #2070 and closes issue #2040","Url":"https://github.com/vuejs/vue-router/pull/2193","RelatedDescription":"Open PR \"feat(link): add 'exact-path' matching option\" (#2193)"},{"Id":"322042296","IsPullRequest":true,"CreatedAt":"2018-05-10T19:51:03","Actor":"Ziming98","Number":"2192","RawContent":null,"Title":"Update data-fetching.md","State":"closed","Body":"我做过实验,在HTML5 History 模式下watch才会监听并且有效执行\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2192","RelatedDescription":"Closed or merged PR \"Update data-fetching.md\" (#2192)"},{"Id":"322033328","IsPullRequest":false,"CreatedAt":"2018-05-10T18:48:12","Actor":"armandomendivil","Number":"2191","RawContent":null,"Title":"Reload page when router-link is clicked in the same route","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/aevdnmzw/](http://jsfiddle.net/aevdnmzw/)\r\n\r\n### Steps to reproduce\r\nclick home link multiple times and look like it is just created just once\r\n\r\n### What is expected?\r\nI wanna reload the same page clicking  router-link\r\n\r\n### What is actually happening?\r\nIt is just created once\r\n\r\n---\r\nI'm using element-ui but I'm lookin' that is a behavior for vue-router, I know is not a bug but I want to know how can I do to get my expected behavior, Cheers!\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2191","RelatedDescription":"Closed issue \"Reload page when router-link is clicked in the same route\" (#2191)"},{"Id":"321681347","IsPullRequest":true,"CreatedAt":"2018-05-09T18:40:42","Actor":"trainiac","Number":"2190","RawContent":null,"Title":"Update navigation-guards.md","State":"open","Body":"Be consistent with referring to guard function names.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2190","RelatedDescription":"Open PR \"Update navigation-guards.md\" (#2190)"},{"Id":"321511805","IsPullRequest":false,"CreatedAt":"2018-05-09T10:14:23","Actor":"zsh2017","Number":"2189","RawContent":null,"Title":"vue-router的beforeEach守卫中，抓不到vuex里getters中属性值","State":"closed","Body":"在控制台中打印router.app.$options.store.getters可以看到值。\r\n但是序列化和Object.assign这个对象的时候，显示的是重置初始化的state数据","Url":"https://github.com/vuejs/vue-router/issues/2189","RelatedDescription":"Closed issue \"vue-router的beforeEach守卫中，抓不到vuex里getters中属性值\" (#2189)"},{"Id":"321035558","IsPullRequest":false,"CreatedAt":"2018-05-08T04:05:25","Actor":"mrnateriver","Number":"2188","RawContent":null,"Title":"next() callback in beforeRouteEnter stopped working with Vue 2.5.16","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/09Lom5h4/3/](http://jsfiddle.net/09Lom5h4/3/)\r\n\r\n### Steps to reproduce\r\nReproduced with Vue 2.5.16.\r\n\r\n1. Open provided jsfiddle.net link;\r\n2. Open browser console;\r\n3. Click on 'first a' ;\r\n4. Click on 'first b' ;\r\n5. Click on 'second a' ;\r\n6. Click on 'second b';\r\n7. And click on 'first a' again;\r\n8. Inspect console output.\r\n\r\n### What is expected?\r\nCallback passed to next() call in beforeRouteEnter hook must be called at all times.\r\n\r\nExpected console output:\r\n```\r\nbeforeRouteEnter:\r\nvue-component-3: mounted\r\nvm.title: first_a\r\nbeforeRouteEnter:\r\nvm.title: first_b\r\nbeforeRouteEnter:\r\nvue-component-4: mounted\r\nvm.title: second_a\r\nbeforeRouteEnter:\r\nvm.title: second_b\r\nbeforeRouteEnter:\r\nvue-component-3: mounted\r\nvm.title: first_a\r\n```\r\n\r\n### What is actually happening?\r\nSomething very peculiar.\r\n\r\nThe callback (let's call it CB) that's passed to next() only gets called for an instance of component that is mounted first. Any transitions to other instances of that component *do* trigger beforeRouteEnter hook, but CB doesn't get called. However, if you transition to other instances, and then back to the first one, CB gets called again.\r\n\r\nActual console output:\r\n```\r\nbeforeRouteEnter:\r\nvue-component-3: mounted\r\nvm.title: first_a\r\nbeforeRouteEnter:\r\n<-- missing output: vm.title: first_b\r\nbeforeRouteEnter:\r\nvue-component-4: mounted\r\nvm.title: second_a\r\nbeforeRouteEnter:\r\n<-- missing output: vm.title: second_b\r\nbeforeRouteEnter:\r\nvm.title: first_b <-- this is another bug, which is already reported, issue 2062\r\nvue-component-3: mounted\r\n```\r\n\r\n---\r\nThis behaviour appeared somewhere between Vue versions 2.5.13 and 2.5.16, (almost) everything is fine with 2.5.13:\r\n\r\nhttp://jsfiddle.net/09Lom5h4/4/\r\n\r\nI said *almost* fine, because it overlaps with another bug:\r\n\r\nhttps://github.com/vuejs/vue-router/issues/2062\r\n\r\nI've actually used the JSFiddle from that issue to demonstrate this one.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2188","RelatedDescription":"Open issue \"next() callback in beforeRouteEnter stopped working with Vue 2.5.16\" (#2188)"},{"Id":"318063301","IsPullRequest":false,"CreatedAt":"2018-05-07T16:04:04","Actor":"guarah","Number":"2177","RawContent":null,"Title":"Route switching increases memory consume","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/guarah/memory-leak](https://github.com/guarah/memory-leak)\r\n\r\n### Steps to reproduce\r\n1 - yarn install\r\n2 - yarn serve\r\n3 - select a main route\r\n4 - switch multiple times between child routes\r\n5 - check the memory consume\r\n\r\n### What is expected?\r\nIncreasing memory when switching routes\r\n\r\n### What is actually happening?\r\nWhen switching between child routes multiple times, the memory consume increases a lot.\r\n\r\n---\r\nIn our company we have an app with this basic setup, loading a few cards in kanban placed in child routes.\r\nWhen switching from one kanban to another, the memory increases and take so long to decrease.\r\nApparently the route components keeps in cache. Is there some way to destroy theese components?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2177","RelatedDescription":"Closed issue \"Route switching increases memory consume\" (#2177)"},{"Id":"320531792","IsPullRequest":false,"CreatedAt":"2018-05-05T18:40:15","Actor":"KnorienChang","Number":"2187","RawContent":null,"Title":"history模式下，index.html在二级路由下刷新页面无法读取static文件夹中的资源文件","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://xxx.xx.xxx](https://xxx.xx.xxx)\r\n\r\n### Steps to reproduce\r\nvue-cli(2.9.3) vue-router 3.0.1 ，在index.html引用static文件夹下的静态资源，当路由的模式为history且为二级路由的时候，刷新页面并不能正确的获取到静态资源的文件。因vue-cli生成的项目，无法提供例子。\r\n\r\n### What is expected?\r\n能否在history模式下，刷新的时候也能够正常的读取到static目录下的静态资源文件\r\n\r\n### What is actually happening?\r\n在history模式下且在二级路由的时候，刷新页面的时候不能正确的读取到static文件夹下的静态资源文件\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2187","RelatedDescription":"Closed issue \"history模式下，index.html在二级路由下刷新页面无法读取static文件夹中的资源文件\" (#2187)"},{"Id":"320501662","IsPullRequest":true,"CreatedAt":"2018-05-05T11:26:48","Actor":"posva","Number":"2186","RawContent":null,"Title":"Revert \"fix typo for navigation.md\"","State":"closed","Body":"Reverts vuejs/vue-router#2178","Url":"https://github.com/vuejs/vue-router/pull/2186","RelatedDescription":"Closed or merged PR \"Revert \"fix typo for navigation.md\"\" (#2186)"},{"Id":"320392958","IsPullRequest":false,"CreatedAt":"2018-05-04T19:07:41","Actor":"sobolevn","Number":"2185","RawContent":null,"Title":"Ship Flow types","State":"open","Body":"### What problem does this feature solve?\r\nI am currently working on providing better developer experience for ones using `flow` +  `vue`: https://github.com/sobolevn/vue-flow-typed\r\n\r\nI have noticed that you already have pretty much all the needed types in https://github.com/vuejs/vue-router/blob/dev/flow/declarations.js So, maybe it would be better to ship them with the package?\r\n\r\nOr if they are not ready for the \"production\" shipping, is there anything I can help with?\r\nIf you are not interested in providing these types for now, I will just create a custom package at https://github.com/sobolevn/vue-flow-typed\r\n\r\nThanks!\r\n\r\n\r\n### What does the proposed API look like?\r\n-\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2185","RelatedDescription":"Open issue \"Ship Flow types\" (#2185)"},{"Id":"318269072","IsPullRequest":true,"CreatedAt":"2018-05-04T14:17:53","Actor":"Matsukiyo","Number":"2178","RawContent":null,"Title":"fix typo for navigation.md","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2178","RelatedDescription":"Closed or merged PR \"fix typo for navigation.md\" (#2178)"},{"Id":"320236857","IsPullRequest":false,"CreatedAt":"2018-05-04T11:13:18","Actor":"kirillbunin","Number":"2184","RawContent":null,"Title":"[Docs] Incomplete Navigation Resolution Flow","State":"open","Body":"### What problem does this feature solve?\r\nhttps://github.com/vuejs/vue-router/blob/dev/docs/en/advanced/navigation-guards.md#the-full-navigation-resolution-flow\r\n\r\nI think the docs are lacking full flow, not mentioning 'beforeRouteLeave' for example. Would be cool if diagram were to be created, such as used on Vue lifecycle\r\n\r\nhttps://vuejs.org/v2/guide/instance.html#Lifecycle-Diagram\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2184","RelatedDescription":"Open issue \"[Docs] Incomplete Navigation Resolution Flow\" (#2184)"},{"Id":"319475424","IsPullRequest":false,"CreatedAt":"2018-05-02T22:09:43","Actor":"sheggi","Number":"2183","RawContent":null,"Title":"Configruation for enable/disable ensureSlash() in hash mode ","State":"closed","Body":"### What problem does this feature solve?\r\nUse Case:\r\nvue-route is used beside other scripts, where plain anchors are used.\r\nClicking a link for `#top` we get `#/top` because of ensureSlash() in hash mode. (There is no route defined for `/top`).\r\nTherefore the other script can't complete because the hash with slash is not recognized.\r\n\r\nI guess the ensureSlash() is only required for matching the `/` home route or `/any...` any other route.\r\n\r\nIs there otherwise a dependency I don't see, where ensureHash() is required?\r\n\r\n### What does the proposed API look like?\r\nHaving a configuration is preferable for disabling the default behaviour.\r\n\r\n```js\r\nrouter  = new VueRouter({\r\n    ensureHash: false\r\n});\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2183","RelatedDescription":"Closed issue \"Configruation for enable/disable ensureSlash() in hash mode \" (#2183)"},{"Id":"318599337","IsPullRequest":true,"CreatedAt":"2018-05-02T21:51:31","Actor":"TheLarkInn","Number":"2180","RawContent":null,"Title":"chore(package.json): add sideEffects: false field to package.json","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nThis PR adds the `\"sideEffects\": false` property in vue-router's `package.json` file. This allow's webpack (for those who want to opt-in to requiring vue-routers's original source files (instead of the flattened esm bundles) and want to remove flow type through a babel-transform, then this will allow webpack to aggressively ignore and treeshake unused exports throughout the module system (if they exist!)\r\n\r\nIn many cases this can yield hidden and surprising build time improvements and size reductions in the case that modules flattened from rollup aren't actually needed when webpack performs a scope analysis. \r\n\r\nThe angular team has adopted this approach for the CLI yielding some strong build time speed for webpack (since unused exports are also not resolved, parsed, etc.). From my assessment of the module graph created, it looks that there are no sideEffects created against existing re-exports throughout the codebase, therefore even if a user did opt in on their own will, and remove flow types, there should be no danger of removing code that is needed and causing breakages. \r\n\r\nOverall, this already will not be a breaking change in any way but just provides extra benefits to those (and for the cli (if realized) when using webpack 4 and `mode: production`).\r\n\r\nHappy to answer any other questions.\r\n~Sean + [webpack team](https://github.com/webpack) ","Url":"https://github.com/vuejs/vue-router/pull/2180","RelatedDescription":"Closed or merged PR \"chore(package.json): add sideEffects: false field to package.json\" (#2180)"},{"Id":"319171358","IsPullRequest":false,"CreatedAt":"2018-05-01T11:00:45","Actor":"nowy","Number":"2182","RawContent":null,"Title":"Typescript: `Location` interface typing for query should include arrays","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/en/essentials/navigation.html](https://router.vuejs.org/en/essentials/navigation.html)\r\n\r\n### Steps to reproduce\r\nWhen programmatically navigating on vue router, pass through a dictionary with a param as an array. E.g.\r\n``` json\r\n{\r\n  \"foo\": [\"bar\"]\r\n}\r\n```\r\n\r\n### What is expected?\r\nTypes are expected to work\r\n\r\n### What is actually happening?\r\nIn `router.d.ts`, the typing for `query`, under `Location` is set to:\r\n`Dictionary<string>`.\r\n\r\nThis should be set to allow arrays too. Potentially numbers as well?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2182","RelatedDescription":"Open issue \"Typescript: `Location` interface typing for query should include arrays\" (#2182)"},{"Id":"318926327","IsPullRequest":false,"CreatedAt":"2018-04-30T20:48:02","Actor":"mgarcia96","Number":"2181","RawContent":null,"Title":"Vue router push not working on Firefox","State":"closed","Body":"### Version\r\n2.8.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/332372/](https://jsfiddle.net/50wL7mdz/332372/)\r\n\r\n### Steps to reproduce\r\n[Firefox - Last version]\r\n\r\nJust added a event to a link, add a param to the vuex and then push the step-2 route, and it doens't works on firefox\r\n\r\n### What is expected?\r\nChange url\r\n\r\n### What is actually happening?\r\nNot working url\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2181","RelatedDescription":"Closed issue \"Vue router push not working on Firefox\" (#2181)"},{"Id":"318302414","IsPullRequest":false,"CreatedAt":"2018-04-27T07:43:34","Actor":"adityarw","Number":"2179","RawContent":null,"Title":"am unable to use multiple views giving error","State":"closed","Body":"### Version\r\n2.5.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/posva/6du90epg/](https://jsfiddle.net/posva/6du90epg/)\r\n\r\n### Steps to reproduce\r\nam new to vue please help me..\r\n\r\nrouting code :\r\n\r\nimport Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport HelloWorld from '@/components/HelloWorld'\r\nimport HelloWorlds from '@/components/HelloWorlds'\r\n\r\nVue.use(Router)\r\n\r\nexport default new Router({\r\nroutes: [\r\n{\r\npath: '/',\r\ncomponent: {\r\ndefault: HelloWorld,\r\nb: HelloWorlds\r\n}\r\n},\r\n{\r\npath: 'nav',\r\nname: 'HelloWorlds',\r\ncomponent: HelloWorlds\r\n}\r\n]\r\n})\r\n\r\nVue component\r\n\r\n<script> export default { name: 'App' } </script> <style> #app { font-family: 'Avenir', Helvetica, Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; text-align: center; color: #2c3e50; margin-top: 60px; } </style>\r\n\r\n### What is expected?\r\ni need to show 2 view one above the other. \r\n\r\n### What is actually happening?\r\ngiving error like this\r\n[Vue warn]: Failed to mount component: template or render function not defined.\r\n\r\nfound in\r\n\r\n---> <Anonymous>\r\n       <App> at src/App.vue\r\n         <Root>\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2179","RelatedDescription":"Closed issue \"am unable to use multiple views giving error\" (#2179)"},{"Id":"317844506","IsPullRequest":true,"CreatedAt":"2018-04-26T07:35:02","Actor":"Yakima-Teng","Number":"2176","RawContent":null,"Title":"redundant use of Object.keys","State":"closed","Body":"`configs` exported from `configs.js` is already an array.","Url":"https://github.com/vuejs/vue-router/pull/2176","RelatedDescription":"Closed or merged PR \"redundant use of Object.keys\" (#2176)"},{"Id":"317498966","IsPullRequest":false,"CreatedAt":"2018-04-25T06:52:18","Actor":"Fdango","Number":"2175","RawContent":null,"Title":"Vue-router Nesting problems","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2175","RelatedDescription":"Closed issue \"Vue-router Nesting problems\" (#2175)"},{"Id":"317496725","IsPullRequest":false,"CreatedAt":"2018-04-25T06:42:24","Actor":"Fdango","Number":"2174","RawContent":null,"Title":"I Want to ask next，add template How to jump?","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n[``](https://codepen.io/fdango/pen/zjBvNq?editors=1010)","Url":"https://github.com/vuejs/vue-router/issues/2174","RelatedDescription":"Closed issue \"I Want to ask next，add template How to jump?\" (#2174)"},{"Id":"317469376","IsPullRequest":false,"CreatedAt":"2018-04-25T03:45:55","Actor":"umardraz","Number":"2173","RawContent":null,"Title":"Help required on router.push","State":"closed","Body":"Hi\r\n\r\nI need a little help to understand why one of my router.push not working as per my requirement.\r\n\r\nI have a search box and on submit I am using router.push and then sending the search box value as keyword here is the example\r\n\r\n```\r\nsubmitSearch () {\r\n      this.$router.push({\r\n        name: 'search',\r\n        params: { keyword: this.keyword }\r\n      })\r\n    }\r\n```\r\n\r\nFor live example you can see this on my site\r\n\r\n> https://www.umardraz.com/login\r\n> username = admin\r\n> password = Passw0rd\r\n> \r\n> \r\n\r\nYou can find the search box right sider the header.","Url":"https://github.com/vuejs/vue-router/issues/2173","RelatedDescription":"Closed issue \"Help required on router.push\" (#2173)"},{"Id":"317034262","IsPullRequest":true,"CreatedAt":"2018-04-24T09:18:56","Actor":"csg-coder","Number":"2172","RawContent":null,"Title":"docs(examples): typo fix","State":"closed","Body":"\r\n","Url":"https://github.com/vuejs/vue-router/pull/2172","RelatedDescription":"Closed or merged PR \"docs(examples): typo fix\" (#2172)"},{"Id":"316909265","IsPullRequest":false,"CreatedAt":"2018-04-23T20:17:03","Actor":"luchux","Number":"2171","RawContent":null,"Title":"Documentation link is down? ","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/](https://router.vuejs.org/)\r\n\r\n### Steps to reproduce\r\nVisit links\r\n\r\n### What is expected?\r\nhttps://router.vuejs.org/ should open docs\r\nhttp://vuejs.github.io/vue-router should open docs\r\n\r\n### What is actually happening?\r\nhttps://router.vuejs.org/ (down) \r\nhttp://vuejs.github.io/vue-router (down)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2171","RelatedDescription":"Closed issue \"Documentation link is down? \" (#2171)"},{"Id":"316908030","IsPullRequest":false,"CreatedAt":"2018-04-23T17:27:45","Actor":"luchux","Number":"2170","RawContent":null,"Title":"Documentation link down? ","State":"closed","Body":"I can't access neither of those: \r\nhttp://vuejs.github.io/vue-router\r\nhttps://router.vuejs.org/\r\n\r\n![screen shot 2018-04-23 at 2 26 57 pm](https://user-images.githubusercontent.com/1475656/39142913-785c09e4-4702-11e8-9012-f59132717784.png)\r\n","Url":"https://github.com/vuejs/vue-router/issues/2170","RelatedDescription":"Closed issue \"Documentation link down? \" (#2170)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"322621739","IsPullRequest":false,"CreatedAt":"2018-05-13T19:47:16","Actor":"ChristianStornowski","Number":"1267","RawContent":null,"Title":"Adjust vuex types for using state values and modules in one store","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/14njpn10p3](https://codesandbox.io/s/14njpn10p3)\r\n\r\n### Steps to reproduce\r\n1. Create a project like https://codesandbox.io/s/14njpn10p3\r\n2. npm run test:types\r\n\r\n\r\n### What is expected?\r\nno type errors.\r\n\r\n### What is actually happening?\r\nsrc/test.ts(46,41): error TS2345: Argument of type '{ state: { value: number; }; modules: { a: Module<AModule, RootState>; }; }' is not assignable to parameter of type 'StoreOptions<RootState>'.\r\n  Types of property 'state' are incompatible.\r\n    Type '{ value: number; }' is not assignable to type 'RootState | undefined'.\r\n      Type '{ value: number; }' is not assignable to type 'RootState'.\r\n        Property 'a' is missing in type '{ value: number; }'.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1267","RelatedDescription":"Open issue \"Adjust vuex types for using state values and modules in one store\" (#1267)"},{"Id":"322501191","IsPullRequest":false,"CreatedAt":"2018-05-12T10:40:18","Actor":"zjafei","Number":"1266","RawContent":null,"Title":"希望有一个可以获取vuxe中action是否进行中状态的插件","State":"open","Body":"### What problem does this feature solve?\r\naction基本是处理异步业务的。loading的状态是很重要的。\r\n我现在的做法是在每个action中都设置一个isLoading的state\r\n但是我希望 每个action在开始时候在全局的isLoading的action的map里面注册一下loading的状态，\r\n在走完最后一个next后再注销一下。\r\n我通过查询这个action的map就可以知道对应的action的状态\r\n而不用去手动注册好多的isLoading的state \r\n\r\n\r\n### What does the proposed API look like?\r\n`vue.use(vuxeLoading);\r\n\r\nconst {someActionLoadingState} = vue.vuxeLoading;\r\n\r\nconsole.log(someActionLoadingState) // true or false`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1266","RelatedDescription":"Open issue \"希望有一个可以获取vuxe中action是否进行中状态的插件\" (#1266)"},{"Id":"322434498","IsPullRequest":false,"CreatedAt":"2018-05-11T21:06:03","Actor":"rv-akim","Number":"1265","RawContent":null,"Title":"add a `mapDataFromGetters` helper ","State":"open","Body":"### What problem does this feature solve?\r\nThis would allow developers to hydrate component state in the `data` property  from the store, without having to do it in mounted.\r\n\r\nThe problem right now with `mapGetters` and `mapState` is that they are defined in computed after data gets evaluated.\r\n\r\nI want to get away from:\r\n\r\n```\r\ndata() {\r\n  return {\r\n    firstName: this.$store.getters.firstName,\r\n    lastName: this.$store.getters.lastName,\r\n  }\r\n}\r\n```\r\n\r\nSetting these values in mounted and using computed values on mount seems to be a lot of boiler plate when I simply want to hydrate data using store values in `data` of a component.\r\n\r\n### What does the proposed API look like?\r\nThe above example would translate roughly to this:\r\n```\r\nfunction mapGettersToData(gettersObj, context) {\r\n  const mappedGetters = {};\r\n  Object.keys(gettersObj).forEach((key, i) => {\r\n     mappedGetters[key] = context.$store.getters[Object.values(gettersObj)[i]];\r\n  });\r\n  return mappedGetters;\r\n}\r\n```\r\n```\r\ndata() {\r\n  return {\r\n    ...mapGettersToData({\r\n      propName: 'path/to/getter',\r\n    }, this),\r\n  };\r\n}\r\n```\r\n\r\nOr extend mapGetters/mapState to work in data property of a component\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE --> ","Url":"https://github.com/vuejs/vuex/issues/1265","RelatedDescription":"Open issue \"add a `mapDataFromGetters` helper \" (#1265)"},{"Id":"322428565","IsPullRequest":true,"CreatedAt":"2018-05-11T20:43:49","Actor":"DanielRuf","Number":"1264","RawContent":null,"Title":"chore: migrate to CircleCI 2 and add Node.js 10","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1264","RelatedDescription":"Open PR \"chore: migrate to CircleCI 2 and add Node.js 10\" (#1264)"},{"Id":"322275360","IsPullRequest":false,"CreatedAt":"2018-05-11T12:15:11","Actor":"teamonn","Number":"1263","RawContent":null,"Title":"null 值一刷新变成了 Object {__ob__: Observer}","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n\r\n我一个数据放在vuex，直接进入页面是null（初始值）。但是我再在当前这个页面刷新，这个值就成了Object {__ob__: Observer}。\r\n\r\n我序列化这个值是{}，有木有小伙伴也遇到这种奇怪的bug？","Url":"https://github.com/vuejs/vuex/issues/1263","RelatedDescription":"Closed issue \"null 值一刷新变成了 Object {__ob__: Observer}\" (#1263)"},{"Id":"322147340","IsPullRequest":false,"CreatedAt":"2018-05-11T02:34:28","Actor":"smithyj","Number":"1262","RawContent":null,"Title":"Can you add hooks before and after mutation actions ?","State":"open","Body":"### What problem does this feature solve?\r\ncome true global loading plugins\r\n\r\n### What does the proposed API look like?\r\nfor example:\r\nstore.subscribeBeforeAction()\r\nstore.subscribeAfterAction()\r\nstore.subscribeBeforeMutation()\r\nstore.subscribeAfterMutation()\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1262","RelatedDescription":"Open issue \"Can you add hooks before and after mutation actions ?\" (#1262)"},{"Id":"321864784","IsPullRequest":false,"CreatedAt":"2018-05-10T09:18:51","Actor":"GopherJ","Number":"1261","RawContent":null,"Title":"Why can I change my store directly by a getter?","State":"open","Body":"### What problem does this feature solve?\r\n```javascript\r\nconst getters = {\r\n    GET_QUERY(state) {\r\n         return state.query;\r\n    }\r\n}\r\n```\r\nthen I can change by store directly by using `this.GET_QUERY`, so that every time I need to use `cloneDeep` to avoid that my store would be changed.\r\n\r\nCan getter be read-only like using `Object.defineProperty`:\r\n```javascript\r\nObject.defineProperty(store.getters, 'GET_QUERY', {\r\n   enumerable: true,\r\n   get() {\r\n       return store.state.query;\r\n   }\r\n})\r\n```\r\n\r\n### What does the proposed API look like?\r\n```\r\nconst getters = {\r\n    GET_QUERY(state) {\r\n         return state.query;\r\n    }\r\n}\r\n```\r\n`this.GET_QUERY.a = {}` won't be successful.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1261","RelatedDescription":"Open issue \"Why can I change my store directly by a getter?\" (#1261)"},{"Id":"321863505","IsPullRequest":false,"CreatedAt":"2018-05-10T09:14:31","Actor":"GopherJ","Number":"1260","RawContent":null,"Title":"Why can I change my store directly by a getter?","State":"closed","Body":"```javascript\r\nconst getters = {\r\n    GET_QUERY(state) {\r\n         return state.query;\r\n    }\r\n}\r\n```\r\nthen I can change by store directly by using `this.GET_QUERY`, so that every time I need to use `cloneDeep` to avoid that my store would be changed.\r\n\r\nCan getter be read-only like using `Object.defineProperty`:\r\n```javascript\r\nObject.defineProperty(store.getters, 'GET_QUERY', {\r\n   enumerable: true,\r\n   get() {\r\n       return store.state.query;\r\n   }\r\n})\r\n```","Url":"https://github.com/vuejs/vuex/issues/1260","RelatedDescription":"Closed issue \"Why can I change my store directly by a getter?\" (#1260)"},{"Id":"320843685","IsPullRequest":false,"CreatedAt":"2018-05-07T15:26:56","Actor":"hjJunior","Number":"1259","RawContent":null,"Title":"vuex unknown action type","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\nI tried to reproduce here, but my code is a little different, I'm using by npm\r\n[https://jsfiddle.net/sgwe6qde/4/](https://jsfiddle.net/sgwe6qde/4/)\r\n\r\n### Steps to reproduce\r\nCall to action from store module\r\n\r\n### What is expected?\r\nI expected the function to be executed\r\n\r\n### What is actually happening?\r\nI'm getting the error saying 'unknown action type: matriculas/fetchMatriculaTab'\r\n\r\n---\r\nI tried to search about it on web, and I solve to put namespaced: true, but I keep got this error,\r\nI also have tried to use mapAction in another way\r\n`...Vuex.mapActions('matriculas', ['fetchMatriculaTab'])`\r\nSo at this way, I get error saying  'module namespaec not found'\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1259","RelatedDescription":"Closed issue \"vuex unknown action type\" (#1259)"},{"Id":"315820263","IsPullRequest":true,"CreatedAt":"2018-05-05T19:37:26","Actor":"hungphongbk","Number":"1241","RawContent":null,"Title":"🇻🇳Vietnamese translation","State":"closed","Body":"Vietnamese translation of Vuex docs. Hope this translation helps many others come from Vietnam join the Vue community.","Url":"https://github.com/vuejs/vuex/pull/1241","RelatedDescription":"Closed or merged PR \"🇻🇳Vietnamese translation\" (#1241)"},{"Id":"320524785","IsPullRequest":false,"CreatedAt":"2018-05-05T17:00:36","Actor":"jmcooper","Number":"1258","RawContent":null,"Title":"Add ability to access namespaced getters with dot notation","State":"open","Body":"### What problem does this feature solve?\r\nWhen working with a namespaced module (e.g. a users module), you can access items on the user module's state like this: \r\n`this.$store.state.users.user`\r\n\r\nHowever, you can't access getters in the same way.  This will return an error:\r\n`this.$store.getters.users.newUsers`\r\n\r\nBecause `getters.users` is undefined. Instead you have to access it with bracket notation: `this.$store.getters['users/newUsers']`\r\n\r\nThis is true even though, without modules, I can access getters with dot notation:\r\n`this.$store.getters.newUsers`\r\n\r\nIs there a reason why this isn't possible with getters? It would be nice if we could access namespaced getters in the same way we can with namespaced state.  This current behavior seems inconsistent.\r\n\r\n### What does the proposed API look like?\r\nGiven a `users` namespaced module, add the ability to access getters with: `this.$store.getters.users.newUsers`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1258","RelatedDescription":"Open issue \"Add ability to access namespaced getters with dot notation\" (#1258)"},{"Id":"319468849","IsPullRequest":false,"CreatedAt":"2018-05-03T17:18:48","Actor":"jatarga","Number":"1256","RawContent":null,"Title":"Module reusing is not working","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/18l8w90v34](https://codesandbox.io/s/18l8w90v34)\r\n\r\n### Steps to reproduce\r\nhttps://codesandbox.io/s/18l8w90v34\r\n\r\n### What is expected?\r\nMultiple instance of a component with it's (namespaced) store should not share the same state, because I'm initializing the state with new function instance:\r\n\r\n``` js\r\n    export default {\r\n         namespaced: true,\r\n         state: function() {\r\n              // new instance for each component?\r\n              return {\r\n                 counter: 100\r\n              };\r\n          },\r\n        getters: {\r\n            counter: state => state.counter\r\n        },\r\n        mutations: {\r\n             updateCounter(state, counter) {\r\n                 state.counter = counter;\r\n             }\r\n         }\r\n     };\r\n```\r\n\r\n### What is actually happening?\r\nI have a `DepartmentContactSelectorRow `component with it's own store, and want to use that component in different pages but Vuex using same store state for all instances of `DepartmentContactSelectorRow`, although I return `state `with new function instance. I tried it with namespaced and not-namespaced but still same problem. Please check the demo I provided.\r\n\r\nReference doc: https://vuex.vuejs.org/en/modules.html (bottom of page)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1256","RelatedDescription":"Closed issue \"Module reusing is not working\" (#1256)"},{"Id":"319553989","IsPullRequest":false,"CreatedAt":"2018-05-02T13:32:58","Actor":"acan13","Number":"1257","RawContent":null,"Title":"registerModule option to preserve state while initializing attributes added since previous initialization","State":"open","Body":"### What problem does this feature solve?\r\nContext: Currently if you use registerModule with {preserveState: false} it will reinitialize the entire module state and overwrite all the values. If you use {preserveState: true} it will not do anything to the current values.\r\n\r\n\r\nProblem: What if you wish to preserve the values, but you have added attributes since the last time the module was initialized? If you use {preserveState: true} it will not add the new attribute (possible breaking things) while if you use {preserveState: false} it will overwrite all of the state already there. \r\n\r\n\r\nFeature request: Could there be a happy medium where vuex will only initialize attributes that aren't already present?\r\n\r\n\r\nUse case: We are using vue persisted state to persist UI settings stored in vuex. Because we reuse these settings in a few different apps, we store the module definitions in a shared folder and then import them into our different apps using registerModule. If we use {preserveState: false} then the settings in place are overwritten while if we use {preserveState: true} the new settings we add don't get added to the store.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nThe current behavior makes sense to me, so I would propose leaving it and adding another option. I have no idea what to call it, but something like:\r\n```javascript\r\nVue.registerModule('mymodule', myModule, {preserveState: true, updateAttributes: true});\r\n```\r\n\r\nI'm new to this, but I would be willing to look into how to implement it if people think it would be a good idea.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1257","RelatedDescription":"Open issue \"registerModule option to preserve state while initializing attributes added since previous initialization\" (#1257)"},{"Id":"318732713","IsPullRequest":false,"CreatedAt":"2018-04-30T08:51:17","Actor":"ChristianStornowski","Number":"1255","RawContent":null,"Title":"Vuex types are not working with Typescript 2.8.3 for a root store with modules and state key-value pairs","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex](https://github.com/vuejs/vuex)\r\n\r\n### Steps to reproduce\r\n1. clone https://github.com/vuejs/vuex\r\n2. change to typescript 2.8.3\r\n3. npm run test:types\r\n\r\n### What is expected?\r\nNo type error or warning was printed in console\r\n\r\n### What is actually happening?\r\nerror TS2345: Argument of type '{ state: { value: number; }; modules: { a: { modules: { b: { state: { value: number; }; }; }; }; ...' is not assignable to parameter of type 'StoreOptions<RootState>'.\r\n  Types of property 'state' are incompatible.\r\n    Type '{ value: number; }' is not assignable to type 'RootState | undefined'.\r\n      Type '{ value: number; }' is not assignable to type 'RootState'.\r\n        Property 'a' is missing in type '{ value: number; }'.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1255","RelatedDescription":"Closed issue \"Vuex types are not working with Typescript 2.8.3 for a root store with modules and state key-value pairs\" (#1255)"},{"Id":"318608492","IsPullRequest":true,"CreatedAt":"2018-04-28T07:24:06","Actor":"bibi7","Number":"1254","RawContent":null,"Title":"Fix: amend the code in eg.","State":"closed","Body":"Signed-off-by: wangzhaojie <wangzhaojie@antiy.cn>\r\nhey there,  today i'm learing vuex and i find that a little mistake which may be wrong in this md.\r\ni think use `this.state` instead of `state` may be good cuz the console will not go red\r\nhave fun : )","Url":"https://github.com/vuejs/vuex/pull/1254","RelatedDescription":"Closed or merged PR \"Fix: amend the code in eg.\" (#1254)"},{"Id":"318599035","IsPullRequest":true,"CreatedAt":"2018-04-28T04:22:31","Actor":"TheLarkInn","Number":"1253","RawContent":null,"Title":"chore(package.json): add sideEffects: false field to package.json","State":"open","Body":"This PR adds the `\"sideEffects\": false` property in vuex's `package.json` file. This allow's webpack (for those who want to opt-in to requiring vuex's original source files (instead of the flattened esm bundles), then this will allow webpack to aggressively ignore and treeshake unused exports throughout the module system. \r\n\r\nIn many cases this can yield hidden and surprising build time improvements and size reductions in the case that modules flattened from rollup aren't actually needed when webpack performs a scope analysis. \r\n\r\nThe angular team has adopted this approach for the CLI yielding some strong build time speed for webpack (since unused exports are also not resolved, parsed, etc.). From my assessment of the module graph created, it looks that there are no sideEffects created against existing re-exports throughout the codebase, therefore even if a user did opt in on their own will, and remove flow types, there should be no danger of removing code that is needed and causing breakages. \r\n\r\nOverall, this already will not be a breaking change in any way but just provides extra benefits to those (and for the cli (if realized) when using webpack 4 and `mode: production`). Users would still have to explicitly alias vuex (as it shows in your examples folder to realize these build speed and size wins). \r\n\r\nHappy to answer any other questions.\r\n~Sean + [webpack team](https://github.com/webpack) \r\n\r\nRelated: https://github.com/vuejs/vue/pull/8099","Url":"https://github.com/vuejs/vuex/pull/1253","RelatedDescription":"Open PR \"chore(package.json): add sideEffects: false field to package.json\" (#1253)"},{"Id":"317907922","IsPullRequest":true,"CreatedAt":"2018-04-26T07:26:40","Actor":"songzeng2016","Number":"1252","RawContent":null,"Title":"Modify object extended operator case","State":"open","Body":"Connected above, easier to understand.","Url":"https://github.com/vuejs/vuex/pull/1252","RelatedDescription":"Open PR \"Modify object extended operator case\" (#1252)"},{"Id":"317388828","IsPullRequest":false,"CreatedAt":"2018-04-24T20:46:35","Actor":"grimaldou","Number":"1251","RawContent":null,"Title":"Error installing issue","State":"closed","Body":"Hi guys, running the ```npm install --save vuex```\r\n\r\nthrows:\r\nnpm ERR! Could not install from \"vuex\" as it does not contain a package.json file. \r\n\r\nIm installing in a fresh repo and also some old projects I have since today display the same error\r\n\r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1251","RelatedDescription":"Closed issue \"Error installing issue\" (#1251)"},{"Id":"316915655","IsPullRequest":false,"CreatedAt":"2018-04-24T09:06:07","Actor":"suau","Number":"1249","RawContent":null,"Title":"Vuex.Store.watch with immediate:true is too immediate","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/suaujs/8b9m301c/](https://jsfiddle.net/suaujs/8b9m301c/)\r\n\r\n### Steps to reproduce\r\nClick run in the jsfiddle and check the console\r\n\r\n### What is expected?\r\nThe Vuex.Store.watch method returns a unwatch function, which can be called to stop watching.\r\nWith the immediate option, the current value should be called and the unwatch() function should be available in the callback.\r\n\r\n### What is actually happening?\r\nThe issue arises when Vuex.Store.watch is used with the immediate option, which will trigger the callback synchronously within the watch() call.\r\ntherefore it isn't possible to unwatch from within the callback anymore as the callback is called before the watch() method returns the unwatch method.\r\n\r\n---\r\n### Why is this important/usecase:\r\nGet a store object until an expected value is returned, then stop watching and execute an action.\r\nExample 1: Get the \"user\" object from the store, let's assume:\r\n- undefined: the user hasn't been loaded from localstorage yet \r\n- null: means there is no user\r\n- object: the user is loaded and logged in\r\n\r\nhere is some code on how I'd do that (not working, due to mentioned behavior/bug):\r\n```\r\nfunction getUser(store: Store): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n        const unwatch = store.watch(\r\n            (state: any) => {\r\n                return state.user;\r\n            },\r\n            (value: any) => {\r\n                if (value || value === null) {\r\n                    unwatch(); // THIS WILL THROW AN ERROR IF IT IS THE FIRST VALUE RECEIVED\r\n                    resolve(value)\r\n                }\r\n            },\r\n            {\r\n                immediate: true\r\n            }\r\n        );\r\n    });\r\n}\r\n```\r\n\r\n### Possible solutions\r\n- Vuex.Store.watch should never run the getter or callback synchronously in the `watch()` call\r\n- pass in an unwatch function as the third parameter into the callback (see workaround wrapper below)\r\n- make use of the callbacks return value, e.g. `return true` will stop watching\r\n\r\n### Workaround\r\nManually check if the current state is already meeting your `unwatch()` expectations and only register a store watcher if that's not the case. Fix for Example 1:\r\n```\r\nfunction getUser(store: Store): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n        const user = store.state.user;\r\n        if (user || user === null) {\r\n            resolve(user);\r\n        } else {\r\n            const unwatch = store.watch(\r\n                (state: any) => {\r\n                    return state.user;\r\n                },\r\n                (value: any) => {\r\n                    if (value || value === null) {\r\n                        unwatch();\r\n                        resolve(value)\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    });\r\n}\r\n```\r\n### Workaround wrapper\r\nThis is a more general purpose wrapper as a workaround (not fully tested)\r\n```\r\nfunction wrapper(store: Store<any>, getter: (state?: any, getters?: any) => any,\r\n                  callback: (newValue?: any, oldValue?: any, unwatch?: () => void) => void, options?: any): () => void {\r\n    // callback receives a unwatch function as third parameter\r\n    if (options.immediate) {\r\n        let shouldStop = false;\r\n        const current = getter(store.state, store.getters);\r\n        callback(current, undefined, () => {\r\n            shouldStop = true;\r\n        });\r\n        if (shouldStop) {\r\n            return () => {};\r\n        }\r\n    }\r\n    const unwatch = store.watch(\r\n        getter,\r\n        (newValue: any, oldValue: any) => {\r\n            callback(newValue, oldValue, unwatch);\r\n        },\r\n        Object.assign({}, options, {immediate: false}));\r\n    return unwatch;\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1249","RelatedDescription":"Closed issue \"Vuex.Store.watch with immediate:true is too immediate\" (#1249)"},{"Id":"316927011","IsPullRequest":false,"CreatedAt":"2018-04-23T18:23:11","Actor":"levimichael","Number":"1250","RawContent":null,"Title":"Need more specific errors for missing mapping helpers","State":"closed","Body":"Hello! I've run into this issue a few times over the past few weeks. When setting up my mapState, etc, I often forget to import the function from vuex into my component. I realize that this is a result of my own forgetfulness, however the error \"Cannot read property 'middleware' of undefined\" is not helpful.\r\n\r\nAlthough by now I'm starting to catch myself by attributing that error to missing an import. 😆\r\n\r\nNot sure what can be done with this specifically, but it would be nice to see more specific errors until I break this habit of forgetting. ","Url":"https://github.com/vuejs/vuex/issues/1250","RelatedDescription":"Closed issue \"Need more specific errors for missing mapping helpers\" (#1250)"},{"Id":"316911432","IsPullRequest":false,"CreatedAt":"2018-04-23T17:37:12","Actor":"suau","Number":"1248","RawContent":null,"Title":"Vuex.Store.watch with immediate:true is too immediate","State":"closed","Body":"### Expected:\r\nThe `Vuex.Store.watch` method returns a `unwatch function`, which can be called to stop watching.\r\nThis can be called from within the callback as expected. (note: the callback will only be called on changes, the initial value will only be returned if the immediate option is used)\r\n\r\n### Issue:\r\nThe issue arises when `Vuex.Store.watch` is used with the `immediate option`, which will trigger the callback immediately with the current value of the expression.\r\nUsing `immediate: true` it isn't possible to unwatch from within the callback anymore as the callback is called before the watch() method returns the unwatch method.\r\n\r\n### Why is this important/usecase:\r\nGet a store object until an expected value is returned, then stop watching and execute an action.\r\nExample 1: Get the \"user\" object from the store, let's assume:\r\n- undefined: the user hasn't been loaded from localstorage yet \r\n- null: means there is no user\r\n- object: the user is loaded and logged in\r\n\r\nhere is some code on how I'd do that (not working, due to mentioned behavior/bug):\r\n```\r\nfunction getUser(store: Store): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n        const unwatch = store.watch(\r\n            (state: any) => {\r\n                return state.user;\r\n            },\r\n            (value: any) => {\r\n                if (value || value === null) {\r\n                    unwatch(); // THIS WILL THROW AN ERROR IF IT IS THE FIRST VALUE RECEIVED\r\n                    resolve(value)\r\n                }\r\n            },\r\n            {\r\n                immediate: true\r\n            }\r\n        );\r\n    });\r\n}\r\n```\r\n\r\nI've created a fiddle here to showcase the issue, (just set immediate: false to see how it should work):\r\nhttps://jsfiddle.net/suaujs/8b9m301c/\r\n\r\n### Possible solutions\r\n- Vuex.Store.watch should never run the getter or callback synchronously in the `watch()` call\r\n- pass in an unwatch function as the third parameter into the callback (see workaround wrapper below)\r\n- make use of the callbacks return value, e.g. `return true` will stop watching\r\n\r\n### Workaround\r\nManually check if the current state is already meeting your `unwatch()` expectations and only register a store watcher if that's not the case. Fix for Example 1:\r\n```\r\nfunction getUser(store: Store): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n        const user = store.state.user;\r\n        if (user || user === null) {\r\n            resolve(user);\r\n        } else {\r\n            const unwatch = store.watch(\r\n                (state: any) => {\r\n                    return state.user;\r\n                },\r\n                (value: any) => {\r\n                    if (value || value === null) {\r\n                        unwatch();\r\n                        resolve(value)\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    });\r\n}\r\n```\r\n### Workaround wrapper\r\nThis is a more general purpose wrapper as a workaround (not fully tested)\r\n```\r\nfunction wrapper(store: Store<any>, getter: (state?: any, getters?: any) => any,\r\n                  callback: (newValue?: any, oldValue?: any, unwatch?: () => void) => void, options?: any): () => void {\r\n    // callback receives a unwatch function as third parameter\r\n    if (options.immediate) {\r\n        let shouldStop = false;\r\n        const current = getter(store.state, store.getters);\r\n        callback(current, undefined, () => {\r\n            shouldStop = true;\r\n        });\r\n        if (shouldStop) {\r\n            return () => {};\r\n        }\r\n    }\r\n    const unwatch = store.watch(\r\n        getter,\r\n        (newValue: any, oldValue: any) => {\r\n            callback(newValue, oldValue, unwatch);\r\n        },\r\n        Object.assign({}, options, {immediate: false}));\r\n    return unwatch;\r\n}\r\n```\r\n","Url":"https://github.com/vuejs/vuex/issues/1248","RelatedDescription":"Closed issue \"Vuex.Store.watch with immediate:true is too immediate\" (#1248)"},{"Id":"316233065","IsPullRequest":false,"CreatedAt":"2018-04-23T14:12:30","Actor":"frissdiegurke","Number":"1243","RawContent":null,"Title":"Inconsistent reference to replaced state","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/frissdiegurke/50wL7mdz/326656/](https://jsfiddle.net/frissdiegurke/50wL7mdz/326656/)\r\n\r\n### Steps to reproduce\r\n1. Use `store.replaceState` with some new state object that is not the same as the current state.\r\n\r\n### What is expected?\r\n`store._modules.root.state` and `store._modules.root.context.state` should both reference the new state object\r\n\r\n### What is actually happening?\r\n`store._modules.root.state` instead still references the old (detached) state object\r\n\r\n---\r\nI know that `_modules` is a considered private attribute (as the leading `_` tells me), but I thought I should notify you anyways since this is probably unintentional behavior (e.g. it does block garbage collection of the old state) and could lead to further internal issues.\r\n\r\nFor namespaced modules the behavior within `_modulesNamespaceMap` is as expected.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1243","RelatedDescription":"Closed issue \"Inconsistent reference to replaced state\" (#1243)"},{"Id":"316170183","IsPullRequest":true,"CreatedAt":"2018-04-22T15:00:26","Actor":"flytux","Number":"1242","RawContent":null,"Title":"Update actions.md","State":"closed","Body":"revise korean word for mutations -> from 돌연변이 to 상태변이 : line 48","Url":"https://github.com/vuejs/vuex/pull/1242","RelatedDescription":"Closed or merged PR \"Update actions.md\" (#1242)"},{"Id":"316500949","IsPullRequest":true,"CreatedAt":"2018-04-22T12:28:36","Actor":"Jinjiang","Number":"1246","RawContent":null,"Title":"[docs][zh-cn] updates","State":"closed","Body":"https://github.com/vuejs/vuex/compare/6e965c9...ea1e4ef","Url":"https://github.com/vuejs/vuex/pull/1246","RelatedDescription":"Closed or merged PR \"[docs][zh-cn] updates\" (#1246)"},{"Id":"316569097","IsPullRequest":false,"CreatedAt":"2018-04-22T10:55:19","Actor":"gorbypark","Number":"1247","RawContent":null,"Title":"Support ES6 import from <script type=\"module\"> tag inside browser","State":"open","Body":"### What problem does this feature solve?\r\nUsing vuex in the browser is possible, by using a standard html ```<script src='\"vuex.js\">``` tag, but if you want to use something like mapGetters, it require something like ```import { mapGetters } from 'vuex'```.  This is in theory possible in the browser by using a tag like \r\n```\r\n<script type=\"module>\r\n  import { mapGetters } from './vuex.js'\r\n  ...\r\n</script>\r\n``` \r\nbut appears to not work with vuex.  Vue itself, using the vue.esm.browser.js bundle from unpkg works this way, but if vuex.esm.js is used it produces an error.\r\n```\r\nReferenceError: process is not defined\r\n    at Vue.mappedGetter (vuex.esm.js:848)\r\n    at Watcher.get (vue.js:3140)\r\n    at Watcher.evaluate (vue.js:3247)\r\n    at Proxy.computedGetter (vue.js:3503)\r\n    at Proxy.eval (eval at createFunction (vue.js:10667), <anonymous>:3:144)\r\n    at Vue._render (vue.js:4535)\r\n    at Vue.updateComponent (vue.js:2788)\r\n    at Watcher.get (vue.js:3140)\r\n    at new Watcher (vue.js:3129)\r\n    at mountComponent (vue.js:2795)\r\n```\r\n\r\n### What does the proposed API look like?\r\n```import { ... } from 'vuex.esm.js'``` should work inside the browser.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1247","RelatedDescription":"Open issue \"Support ES6 import from <script type=\"module\"> tag inside browser\" (#1247)"},{"Id":"316343995","IsPullRequest":true,"CreatedAt":"2018-04-20T17:04:54","Actor":"periscuelo","Number":"1245","RawContent":null,"Title":"Fixes for pt-br translation","State":"open","Body":"@ktsn I made a little more of revisions.\r\nI believe now we have a good correction pack to make a update.\r\nCan you or @ErickPetru review it for us?\r\nThanks =)","Url":"https://github.com/vuejs/vuex/pull/1245","RelatedDescription":"Open PR \"Fixes for pt-br translation\" (#1245)"},{"Id":"316273159","IsPullRequest":false,"CreatedAt":"2018-04-20T13:42:36","Actor":"Vic-Dev","Number":"1244","RawContent":null,"Title":"Access module namespace from within module","State":"open","Body":"### What problem does this feature solve?\r\nI want to be able to return different data from my module's getter if the name of the module matches the route name. Ie, I have many modules that all use the same underlying store, but are stored under different namespaces. Each module has a getter that attempts to compare it's namespace with the current route name, and then returns different data if the namespace matches the route name.\r\n\r\n### What does the proposed API look like?\r\nThere's a number of ways of making this information available within a store module. You could have it be another parameter that gets passed in to each function. Eg,\r\n```\r\ngetters: {\r\n  thing: (state, getters, rootState, rootGetters, namespace) {\r\n    console.log(namespace);\r\n  }\r\n}\r\n```\r\n\r\nOr you could make it a property on the state I guess:\r\n\r\n```\r\ngetters: {\r\n  thing: (state, getters, rootState, rootGetters) {\r\n    console.log(state._namespace);\r\n  }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1244","RelatedDescription":"Open issue \"Access module namespace from within module\" (#1244)"},{"Id":"315592634","IsPullRequest":true,"CreatedAt":"2018-04-20T00:36:53","Actor":"periscuelo","Number":"1238","RawContent":null,"Title":"(Add pt-br language) Fixes pullrequest of DavidWilliamBalbino ","State":"closed","Body":"I made this pullrequest just to help make the merge of a translation as fast as possible. Thank you all for looking it for us. If need more fixes please, let me know.\r\n\r\nThank you again","Url":"https://github.com/vuejs/vuex/pull/1238","RelatedDescription":"Closed or merged PR \"(Add pt-br language) Fixes pullrequest of DavidWilliamBalbino \" (#1238)"},{"Id":"315708441","IsPullRequest":true,"CreatedAt":"2018-04-19T02:52:38","Actor":"bichikim","Number":"1240","RawContent":null,"Title":"update add isProduction function","State":"closed","Body":" - change using isProduction instead of process.env.NODE_ENV\r\nvuex frequently uses process.env.NODE_ENV so It needs a isProdunction function\r\n","Url":"https://github.com/vuejs/vuex/pull/1240","RelatedDescription":"Closed or merged PR \"update add isProduction function\" (#1240)"},{"Id":"315700615","IsPullRequest":true,"CreatedAt":"2018-04-19T02:38:40","Actor":"aloerina01","Number":"1239","RawContent":null,"Title":"docs: Modify document to remove 'silent commit'","State":"closed","Body":"refs: #1236","Url":"https://github.com/vuejs/vuex/pull/1239","RelatedDescription":"Closed or merged PR \"docs: Modify document to remove 'silent commit'\" (#1239)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-05-15T05:30:38.9726395Z","RunDurationInMilliseconds":5076}