{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin and Azure Office Hours Recap: Mid-2019","PublishedOn":"2019-07-26T16:40:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"That‚Äôs right, I ‚ù§Ô∏èevery single one of you(!) and I want to know more about your stories building mobile apps. Share the stories of your successes, as well as the not-so-successful adventures. Tell us...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-azure-office-hours-recap-mid-2019/","RawContent":null},{"Title":"Introducing AndroidX for Xamarin","PublishedOn":"2019-07-25T19:52:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Android Support Library has had a long history of over the last 7 years providing backwards compatibility to Android framework APIs. Over the years, this library has grown in adoption as the...","Href":"https://devblogs.microsoft.com/xamarin/androidx-for-xamarin/","RawContent":null},{"Title":"Faster Startup Times With Startup Tracing On Android","PublishedOn":"2019-07-24T19:44:20+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"One of the biggest pain points we&#8217;ve heard from you is startup times on Android.\nImproving Startup Times\nIf you use AOT today, it improves startup times drastically, but you suffer in APK size...","Href":"https://devblogs.microsoft.com/xamarin/faster-startup-times-with-startup-tracing-on-android/","RawContent":null},{"Title":"Xamarin Podcast: XAML Hot Reload Is Out! üî•üîÑ","PublishedOn":"2019-07-19T18:33:26+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Keeping up with the latest in .NET, C#, Xamarin, and Azure is easier than ever. Co-hosts Matt Soucoup and James Montemagno cover a range of topics relevant to Xamarin developers from designing mobile...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-podcast-xaml-hot-reload/","RawContent":null},{"Title":"Recapping Xamarin Developer Summit","PublishedOn":"2019-07-16T17:52:45+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The first-ever Xamarin Developer Summit¬†has¬†come to a close. The Xamarin team had an action-packed two days of announcements, talks, and hanging out with our community in Houston! Here is a recap of...","Href":"https://devblogs.microsoft.com/xamarin/recapping-xamarin-developer-summit/","RawContent":null},{"Title":"Snppts ‚Äì Beautiful UI Snippets for Xamarin.Forms","PublishedOn":"2019-07-15T19:20:23+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Guest Post: Steven Thewissen is a Xamarin developer, Microsoft MVP, and author from the Netherlands with a knack for all things graphical. He co-founded Snppts and also creates/maintains several NuGet...","Href":"https://devblogs.microsoft.com/xamarin/snppts-ui-snippets-xamarin-forms/","RawContent":null},{"Title":"Xamarin.Essentials welcomes tvOS, watchOS, and Tizen","PublishedOn":"2019-07-12T17:33:21+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"This week marked the launch of Xamarin.Essentials 1.2 packed full of new enhancements and optimizations. The main highlight is the new file preview features enabling you to send, view, and email files...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-essentials-tvos-watchos-tizen/","RawContent":null},{"Title":"Announcing XAML Hot Reload for Xamarin.Forms","PublishedOn":"2019-07-11T14:45:52+00:00","CommentsCount":31,"FacebookCount":0,"Summary":"Today at Xamarin Developer Summit, we announced XAML Hot Reload for Xamarin.Forms, which enables you to make changes to your XAML UI and see them reflected live, without requiring another build and...","Href":"https://devblogs.microsoft.com/xamarin/xaml-hot-reload/","RawContent":null},{"Title":"Xamarin Developer Summit Live Streams!","PublishedOn":"2019-07-09T17:50:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Developer Summit is right around the corner! The two-day conference starts this Thursday in Houston, Texas. It will be packed with TONS of amazing sessions and workshops for Xamarin...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-developer-summit-live-streams/","RawContent":null},{"Title":"Xamarin.Forms 4.1.0 Stable Now Available","PublishedOn":"2019-07-08T16:34:41+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today we are happy to announce Xamarin.Forms 4.1 availability on NuGet. Our 3.0.0 series of releases focused heavily on growing Xamarin.Forms by filling in the gaps. We learned that this should be...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-forms-4-1-0-stable-now-available/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"10106241458","Type":"PullRequestEvent","CreatedAt":"2019-07-29T20:05:11","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3405","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] <CopyIfChanged/> should check size\" (#3405) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/2584\r\n\r\nBuilding a project with two different `$(TargetFrameworkVersion)`:\r\n\r\n    msbuild /p:Configuration=Release /p:TargetFrameworkVersion=v4.4\r\n    msbuild /t:Configuration=Release /p:TargetFrameworkVersion=v9.0\r\n\r\nResults in a build error:\r\n\r\n    error MSB4018: The \"LinkAssemblies\" task failed unexpectedly.\r\n    Mono.Linker.MarkException: Error processing method: 'System.Void BatchStepSensor.BatchStepSensorFragment::OnSaveInstanceState(Android.OS.Bundle)' in assembly: 'BatchStepSensor.dll' ---> Mono.Cecil.ResolutionException: Failed to resolve System.Void Android.OS.BaseBundle::PutInt(System.String,System.Int32)\r\n        at Mono.Linker.Steps.MarkStep.HandleUnresolvedMethod(MethodReference reference)\r\n        at Mono.Linker.Steps.MarkStep.MarkMethod(MethodReference reference)\r\n        at Mono.Linker.Steps.MarkStep.MarkInstruction(Instruction instruction)\r\n        at Mono.Linker.Steps.MarkStep.MarkMethodBody(MethodBody body)\r\n        at Mono.Linker.Steps.MarkStep.ProcessMethod(MethodDefinition method)\r\n        at Mono.Linker.Steps.MarkStep.ProcessQueue()\r\n        --- End of inner exception stack trace ---\r\n        at Mono.Linker.Steps.MarkStep.ProcessQueue()\r\n        at Mono.Linker.Steps.MarkStep.ProcessPrimaryQueue()\r\n        at Mono.Linker.Steps.MarkStep.Process()\r\n        at MonoDroid.Tuner.MonoDroidMarkStep.Process(LinkContext context)\r\n        at Mono.Linker.Pipeline.ProcessStep(LinkContext context, IStep step)\r\n        at Mono.Linker.Pipeline.Process(LinkContext context)\r\n        at MonoDroid.Tuner.Linker.Process(LinkerOptions options, ILogger logger, LinkContext& context)\r\n        at Xamarin.Android.Tasks.LinkAssemblies.Execute(DirectoryAssemblyResolver res)\r\n        at Xamarin.Android.Tasks.LinkAssemblies.Execute()\r\n        at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n        at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n\r\nWhich is due to an outdated `Mono.Android.dll` in the `obj` directory:\r\n\r\n    Target Name=_CopyIntermediateAssemblies\r\n        CopyIfChanged\r\n        ...\r\n        Skipping C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\Common7\\IDE\\ReferenceAssemblies\\Microsoft\\Framework\\MonoAndroid\\v9.0\\Mono.Android.dll its up to date\r\n        ...\r\n        ModifiedFiles:\r\n            obj\\Release\\linksrc\\BatchStepSensor.dll\r\n\r\nReviewing the `<CopyIfChanged/>` MSBuild task, there is a code path\r\nwhere the copy is skipped if the source file is newer than the\r\ndestination.\r\n\r\nIn the case of modifying `$(TargetFrameworkVersion)` on an incremental\r\nbuild, a *different* `Mono.Android.dll` would have an older timestamp.\r\nThe copy would be skipped.\r\n\r\nA fix here is to *also* check the size of the source and destination\r\nfiles, and only allow the copy to be skipped if the sizes match."},{"Id":"10106209142","Type":"PullRequestEvent","CreatedAt":"2019-07-29T19:59:57","Actor":"jpobst","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3404","RelatedDescription":"Opened pull request \"Bump to xamarin/Java.Interop/master@be581591\" (#3404) at xamarin/xamarin-android","RelatedBody":""},{"Id":"10105480044","Type":"IssuesEvent","CreatedAt":"2019-07-29T18:06:24","Actor":"Carbaholic","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3403","RelatedDescription":"Opened issue \"InputMethodManager.IsAcceptingText erroneously reports true\" (#3403) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n```\r\n    public class KeyboardNotificationProvider_Droid : IKeyboardNotificationProvider\r\n    {\r\n        private KeyboardListner _keyboardListner;\r\n\r\n        private static ViewTreeObserver CurrentViewTreeObserver => ActivityProvider.RootContentView.ViewTreeObserver;\r\n\r\n        public void StartNotifying()\r\n        {\r\n            _keyboardListner = _keyboardListner ?? new KeyboardListner();\r\n            CurrentViewTreeObserver.AddOnGlobalLayoutListener(_keyboardListner);\r\n        }\r\n\r\n        public void StopNotifying()\r\n        {\r\n            CurrentViewTreeObserver.RemoveOnGlobalLayoutListener(_keyboardListner);\r\n        }\r\n\r\n        [Register(\"mymd.mobile.droid.services.KeyboardListner\")]\r\n        public class KeyboardListner : Java.Lang.Object, ViewTreeObserver.IOnGlobalLayoutListener\r\n        {\r\n            private const float KeyboardDisplayedToHiddenRatio = 0.15f;\r\n\r\n            private double _keyboardHeight;\r\n\r\n            private static InputMethodManager _inputManager;\r\n\r\n            public KeyboardListner()\r\n            {\r\n                _inputManager = GetInputManager();\r\n            }\r\n\r\n            public KeyboardListner(IntPtr handle, JniHandleOwnership transfer)\r\n                : base(handle, transfer)\r\n            {\r\n            }\r\n\r\n            public void OnGlobalLayout()\r\n            {\r\n                //if (Android.OS.Build.VERSION.SdkInt != Android.OS.BuildVersionCodes.P)\r\n                //{\r\n                    TryCalculateKeyboardHeight();\r\n                    NotifyOnKeyboardToggled();\r\n                //}\r\n            }\r\n\r\n            private void TryCalculateKeyboardHeight()\r\n            {\r\n                var contentView = ActivityProvider.RootContentView;\r\n\r\n                if (contentView == null)\r\n                    return;\r\n\r\n                var windowVisibleDisplayFrame = new Rect();\r\n                contentView.GetWindowVisibleDisplayFrame(windowVisibleDisplayFrame);\r\n\r\n                var visibleScreenHeight = contentView.RootView.Height;\r\n                var potentialKeyboardHeight = visibleScreenHeight - windowVisibleDisplayFrame.Bottom;\r\n\r\n                if (potentialKeyboardHeight > visibleScreenHeight * KeyboardDisplayedToHiddenRatio)\r\n                    _keyboardHeight = Math.Ceiling(potentialKeyboardHeight.ToFormsScreenValue());\r\n            }\r\n\r\n            private void NotifyOnKeyboardToggled()\r\n            {                \r\n                if (_inputManager.Handle == IntPtr.Zero)\r\n                    _inputManager = GetInputManager();\r\n\r\n                if (_inputManager.IsAcceptingText && _keyboardHeight > 0)\r\n                {\r\n                    KeyboardToggledMessage msg = new KeyboardToggledMessage(this, true, _keyboardHeight);\r\n                    MessagingCenter.Send(\"Keyboard\", \"KeyboardChanged\", msg);\r\n                }\r\n                else\r\n                {\r\n                    KeyboardToggledMessage msg = new KeyboardToggledMessage(this, false, 0d);\r\n                    MessagingCenter.Send(\"Keyboard\", \"KeyboardChanged\", msg);\r\n                }\r\n            }\r\n\r\n            private static InputMethodManager GetInputManager()\r\n                => (InputMethodManager) ActivityProvider.CurrentActivity.GetSystemService(Context.InputMethodService);\r\n        }\r\n    }\r\n```\r\n\r\n### Expected Behavior\r\n\r\nWhen the keyboard is dismissed, I would expect IsAcceptingText to report back false and for the keyboard height to report back 0.\r\n\r\n### Actual Behavior\r\n\r\nWhen the keyboard is dismissed it reports back IsAcceptingText as true and the same keyboard height as when the keyboard was visible.\r\n\r\n### Version Information\r\n\r\nOnly a problem with Android Pie.\r\n\r\n### Log File\r\n\r\n\r\n\r\nI will work on a full reproduction project for this later today. For now just wanted to get it up there for people to think about."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"10107985088","Type":"IssuesEvent","CreatedAt":"2019-07-30T02:34:50","Actor":"jrahma","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/7016","RelatedDescription":"Opened issue \"Image Watermark / Loading\" (#7016) at xamarin/Xamarin.Forms","RelatedBody":"Hi,\r\n\r\nPlease add Image Watermark / Loading to the Image control so this image will be displayed until the requested images is loaded, otherwise [NoImage](https://github.com/xamarin/Xamarin.Forms/issues/7015) will be displayed.\r\n\r\nWatermark or LoadingImage should support normal images as well as animated GIFs.\r\n\r\nso the Image code will look like this:\r\n\r\n`<Image Source=\"{Binding student_photo]\" LoadingImage=\"Loading.gif\" NoImage=\"DefaultNoPhoto.png\" />\r\n`\r\n\r\nThanks,\r\n[Jassim](https://www.jassimrahma.net)\r\n"},{"Id":"10107974913","Type":"IssuesEvent","CreatedAt":"2019-07-30T02:32:06","Actor":"jrahma","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/7015","RelatedDescription":"Opened issue \"Image's NoImage\" (#7015) at xamarin/Xamarin.Forms","RelatedBody":"Hi,\r\n\r\nPlease add NoImage property ot the Image control which will have the image to be displayed when no image is loaded from database or https call.\r\n\r\nFor example, if a student page opened and the student has no photo on the server trhen it should look like this:\r\n\r\n`NoImage=\"NoPhoto.png\"\r\n`\r\n\r\nThanks,\r\n[Jassim](https://www.jassimrahma.net)\r\n\r\n"},{"Id":"10107959747","Type":"IssuesEvent","CreatedAt":"2019-07-30T02:28:06","Actor":"jrahma","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/7014","RelatedDescription":"Opened issue \"Image GIF support\" (#7014) at xamarin/Xamarin.Forms","RelatedBody":"Hi,\r\n\r\nPlease add GIF support to the Image control to display animated GIF..\r\n\r\nThanks,\r\n[Jassim](https://www.jassimrahma.net)\r\n"},{"Id":"10107937289","Type":"IssuesEvent","CreatedAt":"2019-07-30T02:22:08","Actor":"jrahma","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/7013","RelatedDescription":"Opened issue \"ContentPage & ContentView DarkMode\" (#7013) at xamarin/Xamarin.Forms","RelatedBody":"Hi,\r\n\r\nPlease add a DarkMode property to the ContentPage and ContentView which should have the following values:\r\n\r\n1. Enabled: Always enabled\r\n2. Disabled: Always disabled\r\n3. Auto: Auto [might depends on device or time of the day]\r\n\r\nIt can also have DarkModeBackgroundColor and DarkModeTextColor\r\n\r\n\r\nThanks,\r\n[Jassim](https://www.jassimrahma.net)\r\n\r\n\r\n"},{"Id":"10107497037","Type":"IssuesEvent","CreatedAt":"2019-07-30T00:17:14","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6584","RelatedDescription":"Closed issue \"[Bug] The Focus problem in ViewCell of TableView.\" (#6584) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nWhen I enter and delete the contents of the `Entry` in the second, the **UnFocus** event of the first input control is called. The second `Entry`'s **UnFocus** event will then be called.\r\n### Related Code\r\n```\r\npublic Page()\r\n{\r\n    InitializeComponent();\r\n\r\n    TableView tableView = new TableView();\r\n    TableRoot root = new TableRoot();\r\n    tableView.Intent = TableIntent.Settings;\r\n\r\n    Entry entry1 = new Entry\r\n    {\r\n        HorizontalTextAlignment = TextAlignment.Start,\r\n        BackgroundColor = Color.White,\r\n        HeightRequest = 50,\r\n        MaxLength = 256,\r\n        FontSize = 16\r\n    };\r\n    entry1.Unfocused += Entry_Unfocused_1;\r\n\r\n    Entry entry2 = new Entry\r\n    {\r\n        HorizontalTextAlignment = TextAlignment.Start,\r\n        BackgroundColor = Color.White,\r\n        HeightRequest = 50,\r\n        MaxLength = 256,\r\n        FontSize = 16\r\n    };\r\n    entry2.Unfocused += Entry_Unfocused_2;\r\n\r\n    TableSection section = new TableSection();\r\n    ViewCell label_cell_1 = new ViewCell();\r\n    label_cell_1.View = new Label { Text = \"Entry_1\" };\r\n    ViewCell entry_cell_1 = new ViewCell();\r\n    entry_cell_1.View = entry1;\r\n    section.Add(label_cell_1);\r\n    section.Add(entry_cell_1);\r\n\r\n    ViewCell label_cell_2 = new ViewCell();\r\n    label_cell_2.View = new Label { Text = \"Entry_2\" };\r\n    ViewCell entry_cell_2 = new ViewCell();\r\n    entry_cell_2.View = entry2;\r\n    section.Add(label_cell_2);\r\n    section.Add(entry_cell_2);\r\n\r\n    root.Add(section);\r\n    tableView.Root = root;\r\n    Content = tableView;\r\n}\r\n\r\nprivate void Entry_Unfocused_1(object sender, FocusEventArgs e)\r\n{\r\n    DisplayAlert(\"UnFocus\", \"Entry1 lost focus\", \"OK\");\r\n}\r\nprivate void Entry_Unfocused_2(object sender, FocusEventArgs e)\r\n{\r\n    DisplayAlert(\"UnFocus\", \"Entry2 lost focus\", \"OK\");\r\n}\r\n```\r\n\r\n### Basic Information\r\n\r\n- IDE: VS 15.9\r\n- Xamarin Forms: 3.6.0.344457\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> 8.1\r\n\r\n### Screenshots\r\n![](https://us.v-cdn.net/5019960/uploads/editor/ao/cd4wj9w1di4d.gif \"\")\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n"},{"Id":"10107458218","Type":"IssuesEvent","CreatedAt":"2019-07-30T00:06:07","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6885","RelatedDescription":"Closed issue \"The error displaying ViewCell in Android.\" (#6885) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nXaml cell:\r\n`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<ViewCell xmlns=\"http://xamarin.com/schemas/2014/forms\" \r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n             x:Class=\"AutoGRAPHMobile.DetailCell\"\r\n             xmlns:ffimageloading=\"clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms\"\r\n             xmlns:xamarinLibrary=\"clr-namespace:XamarinLibrary;assembly=XamarinLibraryNS\"\r\n             BindingContextChanged=\"ViewCell_BindingContextChanged\">\r\n    <ViewCell.View>\r\n        <StackLayout Orientation=\"Horizontal\" Margin=\"1\" Padding=\"2\" BackgroundColor=\"#ffffffff\">\r\n            <Grid VerticalOptions=\"Center\">\r\n                <Grid.ColumnDefinitions>\r\n                    <ColumnDefinition Width=\"34\"/>\r\n                </Grid.ColumnDefinitions>\r\n                <Grid.RowDefinitions>\r\n                    <RowDefinition Height=\"Auto\"/>\r\n                    <RowDefinition Height=\"Auto\"/>\r\n                </Grid.RowDefinitions>\r\n                <ffimageloading:CachedImage x:Name=\"imageDetail\" Source=\"{Binding imageDetailIcon}\" IsVisible=\"{Binding VisibleDetailIcon}\" WidthRequest=\"30\" HeightRequest=\"30\" HorizontalOptions=\"Center\" Grid.Column=\"0\" Grid.Row=\"0\">\r\n                </ffimageloading:CachedImage>\r\n                <ffimageloading:CachedImage x:Name=\"imageSummary\" Source=\"summary.png\" IsVisible=\"{Binding VisibleSummary}\" WidthRequest=\"26\" HeightRequest=\"36\" HorizontalOptions=\"Center\" Grid.Column=\"0\" Grid.Row=\"0\">\r\n                </ffimageloading:CachedImage>\r\n                <Label x:Name=\"lIndex\" Text=\"{Binding IndexDisplay}\" IsVisible=\"{Binding VisibleIndex}\" TextColor=\"Black\" FontSize=\"18\" LineBreakMode=\"TailTruncation\" HorizontalOptions=\"Center\" Grid.Column=\"0\" Grid.Row=\"1\">\r\n                    <Label.FontFamily>\r\n                        <OnPlatform x:TypeArguments=\"x:String\" iOS=\"Roboto Condensed\" Android=\"RobotoCondensed-SK-Regular.ttf#Roboto Condensed\"/>\r\n                    </Label.FontFamily>\r\n                </Label>\r\n            </Grid>\r\n            <Grid HorizontalOptions=\"FillAndExpand\">\r\n                <Grid.ColumnDefinitions>\r\n                    <ColumnDefinition Width=\"Auto\" />\r\n                    <ColumnDefinition Width=\"*\"/>\r\n                    <ColumnDefinition Width=\"40\"/>\r\n                </Grid.ColumnDefinitions>\r\n                <StackLayout x:Name=\"slLabel\" Orientation=\"Vertical\" VerticalOptions=\"Center\" Grid.Column=\"0\" Spacing=\"1\">\r\n                    <Label x:Name=\"l0\" Text=\"slLabel\" TextColor=\"#000000\" FontSize=\"14\" LineBreakMode=\"TailTruncation\" HorizontalOptions=\"StartAndExpand\">\r\n                        <Label.FontFamily>\r\n                            <OnPlatform x:TypeArguments=\"x:String\" iOS=\"Roboto Condensed\" Android=\"RobotoCondensed-SK-Regular.ttf#Roboto Condensed\"/>\r\n                        </Label.FontFamily>\r\n                    </Label>\r\n                    <Label x:Name=\"l1\" Text=\"slLabel\" TextColor=\"#000000\" FontSize=\"14\" LineBreakMode=\"TailTruncation\" HorizontalOptions=\"StartAndExpand\">\r\n                        <Label.FontFamily>\r\n                            <OnPlatform x:TypeArguments=\"x:String\" iOS=\"Roboto Condensed\" Android=\"RobotoCondensed-SK-Regular.ttf#Roboto Condensed\"/>\r\n                        </Label.FontFamily>\r\n                    </Label>\r\n                    <Label x:Name=\"l2\" Text=\"slLabel\" TextColor=\"#000000\" FontSize=\"14\" LineBreakMode=\"TailTruncation\" HorizontalOptions=\"StartAndExpand\">\r\n                        <Label.FontFamily>\r\n                            <OnPlatform x:TypeArguments=\"x:String\" iOS=\"Roboto Condensed\" Android=\"RobotoCondensed-SK-Regular.ttf#Roboto Condensed\"/>\r\n                        </Label.FontFamily>\r\n                    </Label>\r\n                    <Label x:Name=\"l3\" Text=\"slLabel\" TextColor=\"#000000\" FontSize=\"14\" LineBreakMode=\"TailTruncation\" HorizontalOptions=\"StartAndExpand\">\r\n                        <Label.FontFamily>\r\n                            <OnPlatform x:TypeArguments=\"x:String\" iOS=\"Roboto Condensed\" Android=\"RobotoCondensed-SK-Regular.ttf#Roboto Condensed\"/>\r\n                        </Label.FontFamily>\r\n                    </Label>\r\n                    <Label x:Name=\"l4\" Text=\"slLabel\" TextColor=\"#000000\" FontSize=\"14\" LineBreakMode=\"TailTruncation\" HorizontalOptions=\"StartAndExpand\">\r\n                        <Label.FontFamily>\r\n                            <OnPlatform x:TypeArguments=\"x:String\" iOS=\"Roboto Condensed\" Android=\"RobotoCondensed-SK-Regular.ttf#Roboto Condensed\"/>\r\n                        </Label.FontFamily>\r\n                    </Label>\r\n                </StackLayout>\r\n                <StackLayout x:Name=\"slValue\" Orientation=\"Vertical\" VerticalOptions=\"Center\" Grid.Column=\"1\" Spacing=\"1\">\r\n                    <Label x:Name=\"v0\" Text=\"slValue\" TextColor=\"#000000\" FontSize=\"14\" LineBreakMode=\"TailTruncation\">\r\n                        <Label.FontFamily>\r\n                            <OnPlatform x:TypeArguments=\"x:String\" iOS=\"Roboto Condensed\" Android=\"RobotoCondensed-SK-Regular.ttf#Roboto Condensed\"/>\r\n                        </Label.FontFamily>\r\n                    </Label>\r\n                    <Label x:Name=\"v1\" Text=\"slValue\" TextColor=\"#000000\" FontSize=\"14\" LineBreakMode=\"TailTruncation\">\r\n                        <Label.FontFamily>\r\n                            <OnPlatform x:TypeArguments=\"x:String\" iOS=\"Roboto Condensed\" Android=\"RobotoCondensed-SK-Regular.ttf#Roboto Condensed\"/>\r\n                        </Label.FontFamily>\r\n                    </Label>\r\n                    <Label x:Name=\"v2\" Text=\"slValue\" TextColor=\"#000000\" FontSize=\"14\" LineBreakMode=\"TailTruncation\">\r\n                        <Label.FontFamily>\r\n                            <OnPlatform x:TypeArguments=\"x:String\" iOS=\"Roboto Condensed\" Android=\"RobotoCondensed-SK-Regular.ttf#Roboto Condensed\"/>\r\n                        </Label.FontFamily>\r\n                    </Label>\r\n                    <Label x:Name=\"v3\" Text=\"slValue\" TextColor=\"#000000\" FontSize=\"14\" LineBreakMode=\"TailTruncation\">\r\n                        <Label.FontFamily>\r\n                            <OnPlatform x:TypeArguments=\"x:String\" iOS=\"Roboto Condensed\" Android=\"RobotoCondensed-SK-Regular.ttf#Roboto Condensed\"/>\r\n                        </Label.FontFamily>\r\n                    </Label>\r\n                    <Label x:Name=\"v4\" Text=\"slValue\" TextColor=\"#000000\" FontSize=\"14\" LineBreakMode=\"TailTruncation\">\r\n                        <Label.FontFamily>\r\n                            <OnPlatform x:TypeArguments=\"x:String\" iOS=\"Roboto Condensed\" Android=\"RobotoCondensed-SK-Regular.ttf#Roboto Condensed\"/>\r\n                        </Label.FontFamily>\r\n                    </Label>\r\n                </StackLayout>\r\n                <xamarinLibrary:AnimatedButton x:Name=\"buttomToMap\" ImageButton=\"SwipeTrackBlue.png\" WidthRequest=\"40\" ImageButtonHeight=\"30\" ImageButtonWidth=\"30\" Margin=\"0\" HorizontalOptions=\"Center\" VerticalOptions=\"Fill\" Grid.Column=\"2\"/>\r\n            </Grid>\r\n        </StackLayout>\r\n    </ViewCell.View>\r\n</ViewCell>`\r\nIn the ViewCell_BindingContextChanged event, the Texts are set in Labels of l0, l1, l2, l3, l4, v0, v1, v2, v3, v4.\r\nLabel lIndex does not scale correctly when scrolling through the list.\r\nIt helps only if in the ViewCell_BindingContextChanged event call ForceUpdateSize () ;.\r\nThen the displaying of the cell becomes correct.\r\nPlease tell me what could be the problem?\r\nThis behavior began after updating to Xamarin.Forms 4.0.0.425677.\r\nBefore that, there were no such problems.\r\nFurther update did not decide the problem.\r\nIn iOS everything works fine, the problem occurs only in Android.\r\nXaml ListView:\r\n`<ListView x:Name=\"listView\" Refreshing=\"listView_Refreshing\" IsPullToRefreshEnabled=\"True\" Margin=\"0\" HasUnevenRows=\"True\" BackgroundColor=\"Transparent\" CachingStrategy=\"RecycleElement\" ItemTapped=\"listView_ItemTapped\"  VerticalOptions=\"FillAndExpand\" SeparatorVisibility=\"None\" Grid.Row=\"2\">\r\n                        <ListView.ItemTemplate>\r\n                            <DataTemplate>\r\n                                <local:DetailCell/>\r\n                            </DataTemplate>\r\n                        </ListView.ItemTemplate>\r\n                    </ListView>`\r\n\r\nI send you a demo project. I'm testing on a smartphone. Android 4.4\r\nAttached a few more screenshots with ForceUpdateSize(); and without ForceUpdateSize();\r\n\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.1.0.581479\r\n- Last known good version: 3.6.0.539721\r\n- IDE: Visual Studio 2017 15.9.13\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  12.2\r\n  - Android: 9.0\r\n  - UWP:  16299\r\n- Nuget Packages: Xamarin.FFImageLoading\r\n- Affected Devices: Android 4.4, Android 6, Android 9\r\n\r\n### Screenshots\r\n\r\n[http://i.tk-chel.ru/anton/screenshot.zip](url)\r\n### Reproduction Link\r\n\r\n[http://i.tk-chel.ru/anton/AppDemo.zip](url)\r\n"},{"Id":"10107400938","Type":"PullRequestEvent","CreatedAt":"2019-07-29T23:50:12","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6928","RelatedDescription":"Merged pull request \"UWP CollectionView cleanup\" (#6928) at xamarin/Xamarin.Forms","RelatedBody":"# Description of Change ###\r\n\r\nJust some cleanup to bring the UWP CollectionView implementation patterns in line with the other platforms:\r\n\r\n- Move files to CollectionView folder for consistency with other platforms\r\n- Move SelectableItemsViewRenderer to Setup/Teardown pattern\r\n- Fix event handler naming\r\n- Use Is method for property changed check\r\n\r\n### Issues Resolved ### \r\n\r\nNone, just making things more consistent\r\n\r\n### API Changes ###\r\n\r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nNot applicable\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"10107397989","Type":"PullRequestEvent","CreatedAt":"2019-07-29T23:49:19","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6455","RelatedDescription":"Merged pull request \"[UWP] Fixes default button padding\" (#6455) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nBy default button loading with no empty padding. Therefore empty padding must be set to the native control.\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #6450\r\n\r\n### API Changes ###\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nBefore\r\n![image](https://user-images.githubusercontent.com/27482193/59118105-083f3c00-8958-11e9-906a-245193376199.png)\r\n\r\nAfter\r\n![image](https://user-images.githubusercontent.com/27482193/59118004-cf06cc00-8957-11e9-9af0-4802c6fd497e.png)\r\n\r\n\r\n### Testing Procedure ###\r\n\r\n- run Button Layout Gallery\r\n- check button padding\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"10107338492","Type":"IssuesEvent","CreatedAt":"2019-07-29T23:33:08","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6810","RelatedDescription":"Closed issue \"[Bug] Pull to refresh ListView: empty cells when refreshing list after scrolling on Android\" (#6810) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nWhen a list view implements the \"pull to refresh\" feature, refreshing the list after scrolling causes some cells to become empty. The empty cells become visible again after scrolling down so that they disappear from the view port, and then scrolling up.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Clone the official sample project [Xamarin.Forms ListView Sample: Interactivity](https://github.com/xamarin/xamarin-forms-samples/tree/master/UserInterface/ListView/Interactivity)\r\n2. Edit the file `interactiveListViewXaml.xaml.cs` and change the initialization of the static list `items` so that it contains enough elements to allow scrolling.\r\n```cs\r\n// Replace this:\r\nitems = new ObservableCollection<string> () { \"Speaker\", \"Pen\", \"Lamp\", \"Monitor\", \"Bag\", \"Book\", \"Cap\", \"Tote\", \"Floss\", \"Phone\"};\r\n\r\n// By this:\r\nitems = new ObservableCollection<string>();\r\nfor (int i = 0; i < 100; i++)\r\n{\r\n    items.Add($\"Item #{i}\");\r\n}\r\n```\r\n3. Run the app on a device. The main page appears and displays the list.\r\n4. Scroll down, then scroll up.\r\n5. Pull to refresh the list.\r\n6. Observe that some cells become empty after the list view has been refreshed.\r\n\r\n### Expected Behavior\r\n\r\nAll cells should be visible after the list view has been refreshed.\r\n\r\n### Actual Behavior\r\n\r\nSome cells are empty after refreshing the list.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms version 4.1.0.555618\r\n- Last known good version: XF version 3.6.0.539721\r\n- IDE: Visual Studio 2019 16.1.2\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  N/A<!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: 9.0<!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  N/A<!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Affected Devices: Motorola Moto G3 XT1541 with Android 6.0.1\r\n\r\n### Screenshots\r\n\r\n#### Listview in its initial state\r\n![01-initial-list](https://user-images.githubusercontent.com/37797661/60767112-0c738c00-a0b3-11e9-9107-14576b1b90fd.png)\r\n\r\n#### Scroll down\r\n![02-scroll-down](https://user-images.githubusercontent.com/37797661/60767113-0c738c00-a0b3-11e9-8194-fa0c4d21b261.png)\r\n\r\n#### Scroll up, then refresh\r\n![03-scroll-up](https://user-images.githubusercontent.com/37797661/60767114-0d0c2280-a0b3-11e9-93d8-603b2b9f2158.png)\r\n\r\n#### See the empty cells\r\n![04-list-after-refresh](https://user-images.githubusercontent.com/37797661/60767115-0d0c2280-a0b3-11e9-94b4-78ca4b53876b.png)\r\n\r\n\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"10107614305","Type":"PullRequestEvent","CreatedAt":"2019-07-30T00:52:03","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6684","RelatedDescription":"Opened pull request \"[xcode11] Bump to Xcode 11 Beta 5\" (#6684) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"10107365925","Type":"PullRequestEvent","CreatedAt":"2019-07-29T23:40:23","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6683","RelatedDescription":"Opened pull request \"[Introspection] ABRecord is abstract and cannot be instantiated.\" (#6683) at xamarin/xamarin-macios","RelatedBody":"Fixes: https://github.com/xamarin/maccore/issues/1903"},{"Id":"10107269895","Type":"PullRequestEvent","CreatedAt":"2019-07-29T23:15:33","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6682","RelatedDescription":"Opened pull request \"Bump mono.\" (#6682) at xamarin/xamarin-macios","RelatedBody":"List of commits are:\r\n* Fix http framework module that errors using SDK 2.1.801 (#15854) https://github.com/mono/mono/commit/c16ec8c31a1368704b8318194b6a6776ebe9b9d2\r\n* Bump msbuild to track mono-2019-06 https://github.com/mono/mono/commit/844d5d7c912b57f86b5318b9f1c8250350328a78\r\n* [msbuild] Bump to track HEAD of `mono-2019-06` https://github.com/mono/mono/commit/1b250ede0a0b50dd1dafb5db03d926d307ff6266\r\n*  Update nuget.exe to 5.2.0, matching msbuild (#15851) https://github.com/mono/mono/commit/cec37277df4559fa8890cb0fe65c5472584dc2dd\r\n* [android] switch to python offset tool (#15848) https://github.com/mono/mono/commit/17ac7dcfc74e7371b99a1b7bf73d17e78df90c55\r\n\r\nFull diff: https://github.com/mono/mono/compare/761220d914e28b3ebd67e5642cf8c200110f62ec...17ac7dcfc74e7371b99a1b7bf73d17e78df90c55"},{"Id":"10107253822","Type":"PullRequestEvent","CreatedAt":"2019-07-29T23:11:42","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6681","RelatedDescription":"Opened pull request \"Bump mono to head of 2019-06\" (#6681) at xamarin/xamarin-macios","RelatedBody":"List of commits are:\r\n* Fix http framework module that errors using SDK 2.1.801 (#15854) https://github.com/mono/mono/commit/c16ec8c31a1368704b8318194b6a6776ebe9b9d2\r\n* Bump msbuild to track mono-2019-06 https://github.com/mono/mono/commit/844d5d7c912b57f86b5318b9f1c8250350328a78\r\n* [msbuild] Bump to track HEAD of `mono-2019-06` https://github.com/mono/mono/commit/1b250ede0a0b50dd1dafb5db03d926d307ff6266\r\n*  Update nuget.exe to 5.2.0, matching msbuild (#15851) https://github.com/mono/mono/commit/cec37277df4559fa8890cb0fe65c5472584dc2dd\r\n* [android] switch to python offset tool (#15848) https://github.com/mono/mono/commit/17ac7dcfc74e7371b99a1b7bf73d17e78df90c55\r\n\r\nFull diff: https://github.com/mono/mono/compare/761220d914e28b3ebd67e5642cf8c200110f62ec...17ac7dcfc74e7371b99a1b7bf73d17e78df90c55"},{"Id":"10107162670","Type":"IssuesEvent","CreatedAt":"2019-07-29T22:49:51","Actor":"radical","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/6674","RelatedDescription":"Reopened issue \"The \"CreateAssetPackManifest\" task failed unexpectedly when timezone set to Philippine Standard Time\" (#6674) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Open Date & Time on macOS\r\n2. Set time zone to \"Philippine Standard Time (GMT+8)\r\n3. Create new iOS Project\r\n4. Build\r\n5. Error\r\n6. Close VSfM\r\n7. Switch back to original time zone\r\n8. Build again\r\n\r\n### Expected Behavior\r\n\r\nTime zone to not cause strange msbuild errors\r\n\r\n### Actual Behavior\r\n```\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018: The \"CreateAssetPackManifest\" task failed unexpectedly.\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018: System.ArgumentOutOfRangeException: Offset must be within plus or minus 14 hours.\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018: Parameter name: offset\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018:   at System.DateTimeOffset.ValidateOffset (System.TimeSpan offset) [0x0004a] in /Users/builder/jenkins/workspace/build-package-osx-mono/2019-02/external/bockbuild/builds/mono-x64/external/corefx/src/Common/src/CoreLib/System/DateTimeOffset.cs:908 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018:   at System.DateTimeOffset..ctor (System.DateTime dateTime) [0x0001d] in /Users/builder/jenkins/workspace/build-package-osx-mono/2019-02/external/bockbuild/builds/mono-x64/external/corefx/src/Common/src/CoreLib/System/DateTimeOffset.cs:82 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018:   at System.DateTimeOffset.FromFileTime (System.Int64 fileTime) [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2019-02/external/bockbuild/builds/mono-x64/external/corefx/src/Common/src/CoreLib/System/DateTimeOffset.cs:522 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018:   at System.IO.FileStatus.GetLastWriteTime (System.ReadOnlySpan`1[T] path, System.Boolean continueOnError) [0x00010] in /Users/builder/jenkins/workspace/build-package-osx-mono/2019-02/external/bockbuild/builds/mono-x64/external/corefx/src/System.IO.FileSystem/src/System/IO/FileStatus.Unix.cs:187 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018:   at System.IO.FileSystemInfo.get_LastWriteTimeCore () [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2019-02/external/bockbuild/builds/mono-x64/external/corefx/src/System.IO.FileSystem/src/System/IO/FileSystemInfo.Unix.cs:60 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018:   at System.IO.FileSystemInfo.get_LastWriteTimeUtc () [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2019-02/external/bockbuild/builds/mono-x64/external/corefx/src/System.IO.FileSystem/src/System/IO/FileSystemInfo.cs:115 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018:   at System.IO.FileSystemInfo.get_LastWriteTime () [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2019-02/external/bockbuild/builds/mono-x64/external/corefx/src/System.IO.FileSystem/src/System/IO/FileSystemInfo.cs:109 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018:   at System.IO.FileSystem.GetLastWriteTime (System.String fullPath) [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2019-02/external/bockbuild/builds/mono-x64/external/corefx/src/System.IO.FileSystem/src/System/IO/FileSystem.Unix.cs:513 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018:   at System.IO.File.GetLastWriteTimeUtc (System.String path) [0x00006] in /Users/builder/jenkins/workspace/build-package-osx-mono/2019-02/external/bockbuild/builds/mono-x64/external/corefx/src/System.IO.FileSystem/src/System/IO/File.cs:239 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018:   at Xamarin.MacDev.Tasks.CreateAssetPackManifestTaskBase.Execute () [0x0003e] in <61c63ca91b0d4182994ad9ade83c74a7>:0 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018:   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute () [0x00023] in /Users/builder/jenkins/workspace/build-package-osx-mono/2019-02/external/bockbuild/builds/msbuild-15/src/Build/BackEnd/TaskExecutionHost/TaskExecutionHost.cs:573 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018:   at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask (Microsoft.Build.BackEnd.ITaskExecutionHost taskExecutionHost, Microsoft.Build.BackEnd.Logging.TaskLoggingContext taskLoggingContext, Microsoft.Build.BackEnd.TaskHost taskHost, Microsoft.Build.BackEnd.ItemBucket bucket, Microsoft.Build.BackEnd.TaskExecutionMode howToExecuteTask) [0x002a9] in /Users/builder/jenkins/workspace/build-package-osx-mono/2019-02/external/bockbuild/builds/msbuild-15/src/Build/BackEnd/Components/RequestBuilder/TaskBuilder.cs:810 \r\n    0 Warning(s)\r\n```\r\n\r\n### Environment\r\n\r\nhttps://gist.github.com/chamons/4a99b2f8058d86222e07f0a9fd463035\r\n\r\n### Build Logs\r\n\r\nhttps://gist.github.com/chamons/929981d7afd2bf5081643866d662d3d2"},{"Id":"10107145172","Type":"PullRequestEvent","CreatedAt":"2019-07-29T22:45:35","Actor":"tj-devel709","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6677","RelatedDescription":"Closed pull request \"[SoundAnalysis] Add Xcode11 Beta 5 binding\" (#6677) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"10107127717","Type":"IssuesEvent","CreatedAt":"2019-07-29T22:41:21","Actor":"radical","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/6674","RelatedDescription":"Closed issue \"The \"CreateAssetPackManifest\" task failed unexpectedly when timezone set to Philippine Standard Time\" (#6674) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Open Date & Time on macOS\r\n2. Set time zone to \"Philippine Standard Time (GMT+8)\r\n3. Create new iOS Project\r\n4. Build\r\n5. Error\r\n6. Close VSfM\r\n7. Switch back to original time zone\r\n8. Build again\r\n\r\n### Expected Behavior\r\n\r\nTime zone to not cause strange msbuild errors\r\n\r\n### Actual Behavior\r\n```\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018: The \"CreateAssetPackManifest\" task failed unexpectedly.\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018: System.ArgumentOutOfRangeException: Offset must be within plus or minus 14 hours.\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018: Parameter name: offset\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018:   at System.DateTimeOffset.ValidateOffset (System.TimeSpan offset) [0x0004a] in /Users/builder/jenkins/workspace/build-package-osx-mono/2019-02/external/bockbuild/builds/mono-x64/external/corefx/src/Common/src/CoreLib/System/DateTimeOffset.cs:908 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018:   at System.DateTimeOffset..ctor (System.DateTime dateTime) [0x0001d] in /Users/builder/jenkins/workspace/build-package-osx-mono/2019-02/external/bockbuild/builds/mono-x64/external/corefx/src/Common/src/CoreLib/System/DateTimeOffset.cs:82 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018:   at System.DateTimeOffset.FromFileTime (System.Int64 fileTime) [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2019-02/external/bockbuild/builds/mono-x64/external/corefx/src/Common/src/CoreLib/System/DateTimeOffset.cs:522 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018:   at System.IO.FileStatus.GetLastWriteTime (System.ReadOnlySpan`1[T] path, System.Boolean continueOnError) [0x00010] in /Users/builder/jenkins/workspace/build-package-osx-mono/2019-02/external/bockbuild/builds/mono-x64/external/corefx/src/System.IO.FileSystem/src/System/IO/FileStatus.Unix.cs:187 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018:   at System.IO.FileSystemInfo.get_LastWriteTimeCore () [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2019-02/external/bockbuild/builds/mono-x64/external/corefx/src/System.IO.FileSystem/src/System/IO/FileSystemInfo.Unix.cs:60 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018:   at System.IO.FileSystemInfo.get_LastWriteTimeUtc () [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2019-02/external/bockbuild/builds/mono-x64/external/corefx/src/System.IO.FileSystem/src/System/IO/FileSystemInfo.cs:115 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018:   at System.IO.FileSystemInfo.get_LastWriteTime () [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2019-02/external/bockbuild/builds/mono-x64/external/corefx/src/System.IO.FileSystem/src/System/IO/FileSystemInfo.cs:109 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018:   at System.IO.FileSystem.GetLastWriteTime (System.String fullPath) [0x00000] in /Users/builder/jenkins/workspace/build-package-osx-mono/2019-02/external/bockbuild/builds/mono-x64/external/corefx/src/System.IO.FileSystem/src/System/IO/FileSystem.Unix.cs:513 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018:   at System.IO.File.GetLastWriteTimeUtc (System.String path) [0x00006] in /Users/builder/jenkins/workspace/build-package-osx-mono/2019-02/external/bockbuild/builds/mono-x64/external/corefx/src/System.IO.FileSystem/src/System/IO/File.cs:239 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018:   at Xamarin.MacDev.Tasks.CreateAssetPackManifestTaskBase.Execute () [0x0003e] in <61c63ca91b0d4182994ad9ade83c74a7>:0 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018:   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute () [0x00023] in /Users/builder/jenkins/workspace/build-package-osx-mono/2019-02/external/bockbuild/builds/msbuild-15/src/Build/BackEnd/TaskExecutionHost/TaskExecutionHost.cs:573 \r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/iOS/Xamarin.iOS.Common.targets(507,3): error MSB4018:   at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask (Microsoft.Build.BackEnd.ITaskExecutionHost taskExecutionHost, Microsoft.Build.BackEnd.Logging.TaskLoggingContext taskLoggingContext, Microsoft.Build.BackEnd.TaskHost taskHost, Microsoft.Build.BackEnd.ItemBucket bucket, Microsoft.Build.BackEnd.TaskExecutionMode howToExecuteTask) [0x002a9] in /Users/builder/jenkins/workspace/build-package-osx-mono/2019-02/external/bockbuild/builds/msbuild-15/src/Build/BackEnd/Components/RequestBuilder/TaskBuilder.cs:810 \r\n    0 Warning(s)\r\n```\r\n\r\n### Environment\r\n\r\nhttps://gist.github.com/chamons/4a99b2f8058d86222e07f0a9fd463035\r\n\r\n### Build Logs\r\n\r\nhttps://gist.github.com/chamons/929981d7afd2bf5081643866d662d3d2"},{"Id":"10107109924","Type":"PullRequestEvent","CreatedAt":"2019-07-29T22:37:14","Actor":"whitneyschmidt","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6678","RelatedDescription":"Closed pull request \"[Xcode11] [carplay] Updates for beta 5\" (#6678) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"10107098045","Type":"PullRequestEvent","CreatedAt":"2019-07-29T22:34:35","Actor":"whitneyschmidt","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6679","RelatedDescription":"Closed pull request \"[Xcode11] [contacts] updates for beta 5\" (#6679) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"10107036811","Type":"PullRequestEvent","CreatedAt":"2019-07-29T22:21:09","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6198","RelatedDescription":"Closed pull request \"[XHarness] Bcl projects should use their own project directory\" (#6198) at xamarin/xamarin-macios","RelatedBody":"BCL projects were sharing all the same directory, this means that there was a number of possible side effects when building more than one project without doing a /t:Clean,Build. The changes make sure that:\r\n\r\n1. All bcl projects have their own dir.\r\n2. Moved all the paths logic to its own class. Means it will later be easier to change the paths if needed.\r\n3. Simplified the project generation methods.\r\n4. Updated the mtouch tests to take into account the new location.\r\n\r\nThis is huge change, mtouch and bcl tests should be ran.\r\n\r\nFixes: https://github.com/xamarin/xamarin-macios/issues/6162"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1154868248317444096","CreatedAt":"2019-07-26T21:37:01+00:00","UserScreenname":"xamarinhq","Text":"#Xamarin iOS Preview 3 is now available for iOS 13 and #Xcode 11 beta. Follow the link to update your #VisualStudio‚Ä¶ https://t.co/x6Xooaa0jA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":25,"FavoriteCount":14,"RawContent":null},{"Id":"1154813056289071104","CreatedAt":"2019-07-26T17:57:42+00:00","UserScreenname":"xamarinhq","Text":"It's been an exciting year with Xamarin Forms #Shell, #Android Emulators, #HotReload, and more! Get the full scoop‚Ä¶ https://t.co/xQJnsNkd0b","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":36,"FavoriteCount":9,"RawContent":null},{"Id":"1154123615991808001","CreatedAt":"2019-07-24T20:18:07+00:00","UserScreenname":"xamarinhq","Text":"Announcing faster starter times using Startup Tracing on #Android with performant startup experience and minimal in‚Ä¶ https://t.co/dEGRpVJUIJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":114,"FavoriteCount":43,"RawContent":null},{"Id":"1153732232198201354","CreatedAt":"2019-07-23T18:22:54+00:00","UserScreenname":"xamarinhq","Text":"We've got a new mini-series. Say 'hello' to Xamarin Forms 101. In today's episode, we take a walk through how to op‚Ä¶ https://t.co/6y81QbFi2B","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":95,"FavoriteCount":35,"RawContent":null},{"Id":"1152295154507833347","CreatedAt":"2019-07-19T19:12:28+00:00","UserScreenname":"xamarinhq","Text":"Keep up with the latest in .NET, C#, Xamarin, and Azure with Co-hosts Matt Soucoup and James Montemagno. This month‚Ä¶ https://t.co/RMbOmc6RZE","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":49,"FavoriteCount":17,"RawContent":null},{"Id":"1151246383837585408","CreatedAt":"2019-07-16T21:45:01+00:00","UserScreenname":"xamarinhq","Text":"Thank You! The first Xamarin Developer Summit was a huge success. This post recaps all the great news and developme‚Ä¶ https://t.co/TNaPa2uXX6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":88,"FavoriteCount":34,"RawContent":null},{"Id":"1151185104460537857","CreatedAt":"2019-07-16T17:41:31+00:00","UserScreenname":"xamarinhq","Text":"On this week's #Xamarin Essential API of the week, we take a look at the Phone Dialer API which enables your app to‚Ä¶ https://t.co/TCMRVbhW8X","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":23,"FavoriteCount":11,"RawContent":null},{"Id":"1149695456684982272","CreatedAt":"2019-07-12T15:02:11+00:00","UserScreenname":"xamarinhq","Text":"Stick around after the @XamDevSummit Keynote to hear about \"Building https://t.co/3QxhuBuvHc from source\" by‚Ä¶ https://t.co/6b0vNDHyzx","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":27,"FavoriteCount":10,"RawContent":null},{"Id":"1149674546556915713","CreatedAt":"2019-07-12T13:39:06+00:00","UserScreenname":"xamarinhq","Text":"Day 2 is here! Watch the live @XamDevSummit keynote and explore Microsoft's complete mobile DevOps offering with‚Ä¶ https://t.co/TpKv78eFbD","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":29,"FavoriteCount":10,"RawContent":null},{"Id":"1149421147064295424","CreatedAt":"2019-07-11T20:52:11+00:00","UserScreenname":"xamarinhq","Text":"Get all the \"Partly Cloudy ‚Äì Tips &amp; Tricks to Using #Azure to Its Fullest in #Mobile Apps\" with @CodeMillMatt at 16‚Ä¶ https://t.co/OWINsa15lf","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":10,"FavoriteCount":1,"RawContent":null},{"Id":"1149415035241926656","CreatedAt":"2019-07-11T20:27:54+00:00","UserScreenname":"xamarinhq","Text":"Catch @JamesMontemagno live at @XamDevSummit \"Crafting Real-Time Mobile Apps with SignalR\"  https://t.co/AGklkmnbyU","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":19,"FavoriteCount":7,"RawContent":null},{"Id":"1149390372851896321","CreatedAt":"2019-07-11T18:49:54+00:00","UserScreenname":"xamarinhq","Text":"Live at 14:05 CT, join @Pureween to \"Streamline &amp; Simplify Events with Reactive Extensions\" at @XamDevSummit! Follo‚Ä¶ https://t.co/pplpgXzjJe","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":15,"FavoriteCount":2,"RawContent":null},{"Id":"1149358581940129793","CreatedAt":"2019-07-11T16:43:34+00:00","UserScreenname":"xamarinhq","Text":"Watch @SweekritiS share \"Page Object Pattern and UITest Best Practices\" #LIVE at @XamDevSummit at 13:05 CT! Just us‚Ä¶ https://t.co/4pSIzUXclE","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":14,"FavoriteCount":0,"RawContent":null},{"Id":"1149336299280773120","CreatedAt":"2019-07-11T15:15:02+00:00","UserScreenname":"xamarinhq","Text":"Today at Xamarin Developer Summit, we announced XAML Hot Reload for Xamarin Forms.\n\nNow you can make changes to you‚Ä¶ https://t.co/AhFwLxKNFz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":166,"FavoriteCount":82,"RawContent":null},{"Id":"1149331380104564736","CreatedAt":"2019-07-11T14:55:29+00:00","UserScreenname":"xamarinhq","Text":"ICYMI, we now have a preview release focused on supporting iOS 13 and Xcode 11. Now you can build applications usin‚Ä¶ https://t.co/La5Jlgs0Kh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null},{"Id":"1148665630306000896","CreatedAt":"2019-07-09T18:50:02+00:00","UserScreenname":"xamarinhq","Text":"We're live streaming the Xamarin Developer Summit!\n\nVirtually attend the conference starting Thursday, July 11th‚Ä¶ https://t.co/Kh76XrlNVo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":77,"FavoriteCount":39,"RawContent":null},{"Id":"1148317583004852224","CreatedAt":"2019-07-08T19:47:01+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin team at this years largest #Xamarin conference, the Xamarin Developer Summit! July 11-12 in Housto‚Ä¶ https://t.co/5rZ4bINXkB","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":48,"FavoriteCount":15,"RawContent":null},{"Id":"1148273170136403975","CreatedAt":"2019-07-08T16:50:32+00:00","UserScreenname":"xamarinhq","Text":"ICYMI, Xamarin Forms 4.1.0 Stable is now available. It has dozens of quality improvements, a new CheckBox control,‚Ä¶ https://t.co/R3yD5qr9qm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":87,"FavoriteCount":45,"RawContent":null},{"Id":"1146463951594459137","CreatedAt":"2019-07-03T17:01:20+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":9,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2019-07-30T05:31:06.8357147Z","RunDurationInMilliseconds":4455}