{"Data":{"Blog":{"FeedItems":[{"Title":"A Quick Update on Google Components for iOS and Android","PublishedOn":"2019-03-13T19:12:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the best parts about using Xamarin for mobile development is access to all of the platform APIs from C# bindings. Additionally, any native iOS or Android library can be consumed by a Xamarin...","Href":"https://blog.xamarin.com/update-google-components-ios-android/","RawContent":null},{"Title":"Enhanced Xamarin Development With MFractor","PublishedOn":"2019-03-12T15:58:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was guest authored and contributed by Matthew Robbins. Matthew is a Microsoft MVP and the founder of MFractor, incredible Xamarin tools for Visual Studio Mac. MFractor MFractor is a powerful...","Href":"https://blog.xamarin.com/enhanced-xamarin-development-with-mfractor/","RawContent":null},{"Title":"Podcast: POP! New docs, blogs, customer showcases, and Twitch streams!","PublishedOn":"2019-03-08T17:03:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Visual Studio Mobile Developer Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in mobile and cloud development. Podcast Highlights This month&#8217;s Visual...","Href":"https://blog.xamarin.com/podcast-pop-docs-blogs-showcases-twitch/","RawContent":null},{"Title":"Beautiful Material Design for Android & iOS","PublishedOn":"2019-03-07T20:27:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This week, Xamarin.Forms 3.6 shipped with another round of improvements, the most exciting of which is called Visual. Visual enables developers to create beautiful, cross-platform mobile applications...","Href":"https://blog.xamarin.com/beautiful-material-design-android-ios/","RawContent":null},{"Title":"Xamarin.Forms 3.6: Visual Has Materialized","PublishedOn":"2019-03-06T20:12:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We’re pleased to announce the release of Xamarin.Forms 3.6 in the usual cadence of our regular releases. In addition to the usual enhancements and bug fixes, we’re also moving our Visual feature from...","Href":"https://blog.xamarin.com/xamarin-forms-3-6-visual-has-materialized/","RawContent":null},{"Title":"Best Practices and Tips for Using Xamarin.UITest","PublishedOn":"2019-03-04T19:35:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We can all agree that it is very important for mobile apps to have great user interfaces, be accessible, and be extremely performant. Given the plethora of devices with different screen sizes, screen...","Href":"https://blog.xamarin.com/best-practices-tips-xamarin-uitest/","RawContent":null},{"Title":"Developer Community Events in March","PublishedOn":"2019-03-01T17:59:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"User groups are getting together to learn about new, exciting releases and tooling to help jumpstart their next mobile development project. Network with your local community and you too could get all...","Href":"https://blog.xamarin.com/developer-community-events-in-march/","RawContent":null},{"Title":"View PDF Files within Your Xamarin.Forms Apps Using the Syncfusion PDF Viewer","PublishedOn":"2019-02-28T17:04:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was guest authored and contributed by Suresh Mohan. Suresh is the Product Manager for PDF Viewer at Syncfusion Software where he specializes in desktop and mobile app development. &#160;...","Href":"https://blog.xamarin.com/xamarin-forms-apps-syncfusion-pdf-viewer/","RawContent":null},{"Title":"Quick Tip: Debugging Local ASP.NET Core Web APIs on Android Emulators","PublishedOn":"2019-02-25T19:36:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When developing mobile applications with a web API backend there is always a need to debug locally on your development machine. If you are using Visual Studio for Mac and debugging iOS applications...","Href":"https://blog.xamarin.com/debug-local-asp-net-core-web-apis-android-emulators/","RawContent":null},{"Title":"Xamarin and Azure Office Hours Recap from December 2018 and January 2019","PublishedOn":"2019-02-21T18:11:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"That&#8217;s right, I ❤️ every single one of you(!) and I want to know more about your stories building mobile apps. I want to hear stories of your successes and also, the not-so-successful...","Href":"https://blog.xamarin.com/xamarin-azure-office-hours-recap-december-january/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9247887076","Type":"IssuesEvent","CreatedAt":"2019-03-15T03:00:33","Actor":"yelinzh","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2833","RelatedDescription":"Opened issue \"Button.PerformHapticFeedback doesn't work well on Wear OS\" (#2833) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\nButton.PerformHapticFeedback works well on mobile device but not on Wear OS.\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n```\r\n    Button btn = FindViewById<Button>(Resource.Id.btn);\r\n    btn.LongClick += delegate{\r\n          btn.PerformHapticFeedback(FeedbackConstants.KeyboardTap);\r\n    };\r\n```\r\n### Expected Behavior\r\nThe PerformHapticFeedback method will be called when I press the button.\r\n### Actual Behavior\r\nThe haptic feedback happens only on the first long press and not subseqent others.\r\n### Version Information\r\nIDE : VS 2017 15.9.9\r\nVersion : 28.0.0.1\r\nPlatform Target:\r\n&nbsp; &nbsp; &nbsp; &nbsp; Android Mobile\r\n&nbsp; &nbsp; &nbsp; &nbsp; Wear OS\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"9247626416","Type":"PullRequestEvent","CreatedAt":"2019-03-15T01:44:04","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2832","RelatedDescription":"Opened pull request \"[installers] add Xamarin.Android.Aapt2.targets\" (#2832) at xamarin/xamarin-android","RelatedBody":"Context: http://build.devdiv.io/2499023\r\n\r\nAn integration build for the designer discovered we forgot this file in 4ccbeb7."},{"Id":"9247174442","Type":"PullRequestEvent","CreatedAt":"2019-03-14T23:32:17","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2830","RelatedDescription":"Merged pull request \"[Mono.Android] delete api-*.xml.in which are now _generated_.\" (#2830) at xamarin/xamarin-android","RelatedBody":"Back at f573af9 we have introduced API XML generation step at build time.\r\nWhich meant that those api XML files are deprecated anymore. They could\r\nhave been deleted at the same time, but they were left somehow."},{"Id":"9247161703","Type":"PullRequestEvent","CreatedAt":"2019-03-14T23:28:55","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2831","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] prepend to $(_ResolveMonoAndroidSdksDependsOn)\" (#2831) at xamarin/xamarin-android","RelatedBody":"Downstream in monodroid, we are having an evaluation ordering problem\r\nwith our MSBuild targets. We were intending to append a target to\r\n`$(_ResolveMonoAndroidSdksDependsOn)`, but in fact the opposite is\r\nhappening:\r\n\r\n    Property reassignment: $(_ResolveMonoAndroidSdksDependsOn)=\"\r\n            GetReferenceAssemblyPaths;\r\n        \" (previous value: \"\r\n\r\n            ;_SetupInstantRun\r\n        \") at Xamarin.Android.Common.targets (868,2)\r\n\r\nxamarin-android is overwriting what monodroid has for the value!\r\n\r\nThe problem was our ordering of `<Import/>`\r\n\r\n    <Import Project=\"Xamarin.Android.Common.Debugging.props\" />\r\n    ...\r\n    <_ResolveMonoAndroidSdksDependsOn>\r\n      GetReferenceAssemblyPaths;\r\n    </_ResolveMonoAndroidSdksDependsOn>\r\n    ...\r\n    <Import Project=\"Xamarin.Android.Common.Debugging.targets\" />\r\n\r\nThe `.props` file was setting an initial value for\r\n`$(_ResolveMonoAndroidSdksDependsOn)`. This wast just opposite\r\nof what I thought was setup, since we import the `.targets` last.\r\n\r\nThe fix here is to do:\r\n\r\n    <_ResolveMonoAndroidSdksDependsOn>\r\n      GetReferenceAssemblyPaths;\r\n      $(_ResolveMonoAndroidSdksDependsOn);\r\n    </_ResolveMonoAndroidSdksDependsOn>"},{"Id":"9245890957","Type":"PullRequestEvent","CreatedAt":"2019-03-14T19:36:38","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2831","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] prepend to $(_ResolveMonoAndroidSdksDependsOn)\" (#2831) at xamarin/xamarin-android","RelatedBody":"Downstream in monodroid, we are having an evaluation ordering problem\r\nwith our MSBuild targets. We were intending to append a target to\r\n`$(_ResolveMonoAndroidSdksDependsOn)`, but in fact the opposite is\r\nhappening:\r\n\r\n    Property reassignment: $(_ResolveMonoAndroidSdksDependsOn)=\"\r\n            GetReferenceAssemblyPaths;\r\n        \" (previous value: \"\r\n\r\n            ;_SetupInstantRun\r\n        \") at Xamarin.Android.Common.targets (868,2)\r\n\r\nxamarin-android is overwriting what monodroid has for the value!\r\n\r\nThe behavior I'm seeing in MSBuild:\r\n\r\n* `Xamarin.Android.Common.targets` is loaded\r\n* All `<Import/>` in `Xamarin.Android.Common.targets` are loaded *and*\r\n  `$(_ResolveMonoAndroidSdksDependsOn)` is evaluated\r\n* `$(_ResolveMonoAndroidSdksDependsOn)` in\r\n  `Xamarin.Android.Common.targets` is evaluated\r\n\r\nI am not sure why MSBuild evaluates files in this way, but here we are."},{"Id":"9245613129","Type":"PullRequestEvent","CreatedAt":"2019-03-14T18:52:44","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2763","RelatedDescription":"Merged pull request \"[Tools] Download aapt2 and bundletool from google.\" (#2763) at xamarin/xamarin-android","RelatedBody":"In order to support things like `AppBundle` we cannot use the version of `aapt2` that is shipped with the sdk. Google [recommends](\r\nhttps://developer.android.com/studio/build/building-cmdline#download_aapt) downloading it from maven. If we are shipping our own version of `aapt2` then we no longer need to fallback to the sdk version. If a user really wants to use the sdk version they can set the `Aapt2ToolPath` property manually. \r\n\r\nWe should also download the `bundletool` and ship that too. This will mean we can rely on both of these being available when we start looking at `AppBundle` support."},{"Id":"9242891878","Type":"PullRequestEvent","CreatedAt":"2019-03-14T13:10:09","Actor":"atsushieno","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2830","RelatedDescription":"Opened pull request \"[Mono.Android] delete api-*.xml.in which are now _generated_.\" (#2830) at xamarin/xamarin-android","RelatedBody":"Back at f573af9 we have introduced API XML generation step at build time.\r\nWhich meant that those api XML files are deprecated anymore. They could\r\nhave been deleted at the same time, but they were left somehow."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9248287677","Type":"IssuesEvent","CreatedAt":"2019-03-15T05:11:31","Actor":"luczha","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5571","RelatedDescription":"Opened issue \"Set the style of NavigationBar on Android does not work in Xamarin.forms\" (#5571) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\n### Steps to Reproduce\r\n\r\n1. I have a Xamarin.Forms app. I would like to remove/hide the back arrow in my navigation bars but keep the title. I was able to do it in iOS using the following code inside my NavigationPageRenderer:\r\n\r\n```\r\nUINavigationBar.Appearance.BackIndicatorImage = new UIImage();\r\nUINavigationBar.Appearance.BackIndicatorTransitionMaskImage = new UIImage();\r\n```\r\n\r\n2. Is there any equivalent code for this in Android that I could use inside my renderer or in the MainActivity? I tried this.ActionBar.SetDisplayHomeAsUpEnabled(false); inside my MainActivity but the ActionBar always returns null. Below is my my MainActivity code:\r\n```\r\npublic class MainActivity : FormsAppCompatActivity\r\n{\r\n    protected override void OnCreate(Bundle bundle)\r\n    {\r\n       TabLayoutResource = Resource.Layout.Tabbar;\r\n       ToolbarResource = Resource.Layout.Toolbar;\r\n\r\n       base.OnCreate(bundle);\r\n\r\n       global::Xamarin.Forms.Forms.Init(this, bundle);\r\n       LoadApplication(new App());\r\n       if (Window != null)\r\n       {\r\n          Window.SetStatusBarColor(Android.Graphics.Color.Transparent);\r\n       }\r\n\r\n       this.ActionBar.SetDisplayHomeAsUpEnabled(false);\r\n\r\n     }\r\n}\r\n\r\n```\r\n\r\n\r\n3. Although the issue had been solved .I also want to know if it is a bug. \r\n \r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  \r\n  - Android:  Android 8.1\r\n\r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n![YwNqK](https://user-images.githubusercontent.com/47239772/54409814-a63db480-4723-11e9-9d73-92d3fd9f0c9d.jpg)\r\n\r\n\r\n### Reproduction Link\r\n\r\nhttps://stackoverflow.com/questions/54984918/removing-navigation-back-arrow-in-xamarin-android\r\n"},{"Id":"9248241724","Type":"IssuesEvent","CreatedAt":"2019-03-15T04:55:44","Actor":"khadeeja-alif","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5570","RelatedDescription":"Opened issue \"Label Data Trigger doesn't work when Formatted Text\" (#5570) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nI try to Change properties on Data Trigger for my Label. I have given FormattedText with two Spans. The trigger setter property change doesn't happen.\r\n\r\n### Steps to Reproduce\r\nThis is my xaml\r\n`<Label FontSize=\"14\" FontFamily=\"{StaticResource BoldFont}\">\r\n                                                           <Label.Triggers>\r\n                                                                <DataTrigger TargetType=\"Label\"\r\n                                                                             Binding=\"{Binding Source={x:Reference discountAmount},Path=IsVisible}\"\r\n                                                                             Value=\"true\">\r\n                                                                    <Setter Property=\"FontSize\" Value=\"12\"/>\r\n                                                                    <Setter Property=\"FontFamily\" Value=\"{StaticResource RegularFont}\"/>\r\n                                                                </DataTrigger>\r\n                                                            </Label.Triggers>\r\n                                                        <Label.FormattedText>\r\n                                                            <FormattedString>\r\n                                                                <Span Text=\"{Binding Currency,Mode=OneWay}\"/>\r\n                                                                <Span Text=\"{Binding Price,Mode=OneWay,StringFormat=' {0:N2}'}\" />\r\n                                                            </FormattedString>\r\n                                                        </Label.FormattedText>\r\n                                                        </Label>`\r\n### Expected Behavior\r\n\r\nFor the setter properties to change if Value true on DataTrigger.\r\n\r\n### Actual Behavior\r\n\r\nDataTrigger doesn't work.  The label properties remain the same.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin Forms 3.2.0.839982\r\n- Last known good version:\r\n- IDE: Visual Studio for Mac (Community) 7.8.2(build 1)\r\n- Platform Target Frameworks: \r\n  - iOS:  8.0\r\n  - Android: 9.0\r\n- Affected Devices: Both iOS & Android\r\n"},{"Id":"9247727685","Type":"IssuesEvent","CreatedAt":"2019-03-15T02:14:05","Actor":"john-heaven","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5569","RelatedDescription":"Opened issue \"Xamarin.Forms PlatformParameter does not contain a constructor that takes 2 arguments\" (#5569) at xamarin/Xamarin.Forms","RelatedBody":"## Summary\r\nADAL Xamarin.Forms PlatformParameter does not contain a constructor that takes 2 arguments\r\n\r\n## API Changes\r\n\r\nCall `AcquireTokenAsync(...)`, which accepts the `IPlatformParameters `object and invokes the authentication flow that's necessary to return a token to the app.\r\n\r\ne.g.\r\n\r\nI am doing a mobile app using ADAL for authentication. I am using VS 2017 Xamarmin.Forms and trageting .Net standard 2.0 for the project. But got the error for the following code. I did some research than found out that PlatformParameters constructor is not supported by .NetCore since .NetCore does not support UI yet. But .Net Standard should support. Is there any solution or workaround? Thank you in advance.\r\n\r\n     ...\r\n    AuthenticationResult authResult = null;\r\n    try\r\n    {\r\n        AuthenticationContext authContext = new AuthenticationContext(authority);\r\n        authResult = await authContext.AcquireTokenAsync(graphResourceUri, clientId, returnUri, parent);\r\n    }\r\n    catch (Exception ee)\r\n    {\r\n        results.Add(new User { error = ee.Message });\r\n        return results;\r\n    }\r\n...\r\n\r\n`AcquireTokenAsync ` now does not contain two parameters in this method.\r\n\r\n## Intended Use Case\r\nMaybe this need custom webservice to make it.\r\n"},{"Id":"9247424722","Type":"PullRequestEvent","CreatedAt":"2019-03-15T00:42:55","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5552","RelatedDescription":"Merged pull request \"[X] resilient to untyped x:Name\" (#5552) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAllow the previewer to recover from an x:Name attribute on a element\r\nwith unresolved type.\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #5546\r\n- closes #5547\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"9247383356","Type":"PullRequestEvent","CreatedAt":"2019-03-15T00:30:21","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5568","RelatedDescription":"Merged pull request \"Added Xamarin.Forms.AppLinks to Readme\" (#5568) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAdds `Xamarin.Forms.AppLinks` to `Readme.md`\r\n\r\n### Issues Resolved ### \r\n\r\nNone\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Platforms Affected ### \r\n\r\nNone\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard"},{"Id":"9247342051","Type":"IssuesEvent","CreatedAt":"2019-03-15T00:18:26","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5215","RelatedDescription":"Closed issue \"[iOS] Can't override PopViewController in custom NavigationRenderer\" (#5215) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nExtending Xamarin.Forms/Xamarin.Forms.Platform.iOS/Renderers/NavigationRenderer.cs to override PopViewController has no effect.\r\n\r\nPopViewController method is overridden in NavigationRenderer itself, but the calling method OnPopViewAsync uses the one in the parent class:\r\npoppedViewController = **base**.PopViewController(animated);\r\n\r\n### Steps to Reproduce\r\n1. extend NavigationRenderer in the iOS project\r\n2. override PushViewController and PopViewController methods\r\n3. while PushViewController works good, PopViewController never triggers in the derived class (nor in NavigationRenderer itself)\r\n\r\n### Expected Behavior\r\nPopViewController method overridden in the derived class gets called\r\n\r\n### Actual Behavior\r\nPopViewController method overriden never gets called\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.4, 3.5\r\n- Last known good version: Unknown\r\n- IDE: Visual Studio 2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  12.1\r\n- Affected Devices: all"},{"Id":"9247340153","Type":"IssuesEvent","CreatedAt":"2019-03-15T00:17:52","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5230","RelatedDescription":"Closed issue \"Imagebutton is not working\" (#5230) at xamarin/Xamarin.Forms","RelatedBody":"- <!--\r\n\r\n Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\n### Steps to Reproduce\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages: 3.5.0.129452\r\n- Affected Devices: \r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"9247335195","Type":"IssuesEvent","CreatedAt":"2019-03-15T00:16:28","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5530","RelatedDescription":"Closed issue \"[Shell] TitleView does not work in Xamarin.Forms 4 \" (#5530) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nI am using Shell for Navigation. When I set TitleView in ContentPage it does not work with Shell. \r\n### Steps to Reproduce\r\n\r\n1. Create new project with Shell as Navigation pattern and add a content page to it\r\n2. Now set NavigationPage.TitleView property of ContentPage.\r\n3. Deploy the app to device or emulator\r\n\r\n### Expected Behavior\r\nThe TitleView should work as with any NavigationPage\r\n### Actual Behavior\r\nThe TitleView is not rendering\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms (4.0.0.169046-pre5)\r\n- Last known good version: The TitleView work if I do not use Shell\r\n- IDE: Visual Studio for Mac preview Version 8.0 (8.0 build 2624)\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  Deployment Target 8.0\r\n  - Android: Target Android version: Android 8.1 (API level 27)\r\n  - UWP:  NA\r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n[TitleViewSample.zip](https://github.com/xamarin/Xamarin.Forms/files/2961792/TitleViewSample.zip)\r\n"},{"Id":"9247190548","Type":"PullRequestEvent","CreatedAt":"2019-03-14T23:36:34","Actor":"brminnick","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5568","RelatedDescription":"Opened pull request \"Added Xamarin.Forms.AppLinks to Readme\" (#5568) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAdds `Xamarin.Forms.AppLinks` to `Readme.md`\r\n\r\n### Issues Resolved ### \r\n\r\nNone\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Platforms Affected ### \r\n\r\nNone\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard"},{"Id":"9247033046","Type":"IssuesEvent","CreatedAt":"2019-03-14T22:56:49","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5404","RelatedDescription":"Closed issue \"XF 3.5 Android Crash in Release\" (#5404) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\nXF 3.4 works great for thousands of users. I can cause a crash every time after simply updating to  XF 3.5 Android when built in Release. How can I submit a private code example?\r\n\r\n### Description\r\nNeed to provide private build for Xamarin eyes only\r\n\r\n### Steps to Reproduce\r\n\r\n1. Upgrade to XF 3.5\r\n2. Build in RELEASE\r\n3. Most screens cause crash with \"activityStartTrigger: not whiteListed\"\r\n\r\n### Expected Behavior\r\nNot crash\r\n### Actual Behavior\r\nCrash - see logs\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version: XF 3.4\r\n- IDE:\r\n- Platform Target Frameworks:  \r\n \r\n  - Android:  XF 3.5 with Android 28\r\n \r\n\r\n### Screenshots\r\n\r\n \r\n### Reproduction Link\r\n\r\n Attached Android Crash: \r\n[log.txt](https://github.com/xamarin/Xamarin.Forms/files/2911143/log.txt)\r\n\r\n"},{"Id":"9246970618","Type":"IssuesEvent","CreatedAt":"2019-03-14T22:42:30","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5193","RelatedDescription":"Closed issue \"TableView Height\" (#5193) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nI've set my TableView Height = 230;\r\nI got System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.\r\n\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9246894466","Type":"IssuesEvent","CreatedAt":"2019-03-14T22:25:52","Actor":"shyamalschandra","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5773","RelatedDescription":"Opened issue \"Step-by-step guide with cookbook for Xamarin IDE for MacOS, iOS, watchOS & tvOS\" (#5773) at xamarin/xamarin-macios","RelatedBody":"Is there going to be more information on step-by-step guides to Xamarin Apple development on Mac than the following in the near future?\r\n\r\nhttps://www.amazon.com/Beginning-Xamarin-Development-Mac-Xamarin-iOS-ebook/dp/B078HQS883/\r\nhttps://www.amazon.com/gp/product/B076T7FS1P?ref=dbs_p2d_P_R_popup_yes_pony_T1\r\nhttps://docs.microsoft.com/en-us/xamarin/mac/\r\n\r\nThanks in advance!"},{"Id":"9245954918","Type":"PullRequestEvent","CreatedAt":"2019-03-14T19:46:38","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5772","RelatedDescription":"Opened pull request \"[mtouch] Update validations around --interpreter\" (#5772) at xamarin/xamarin-macios","RelatedBody":"This also centralize other interpreter checks and options in the same\nlocation (making it easier to read / update).\n\n* Warn and switch the REPL if the interpreter is enabled on simulator\n\nWhy ? It's confusing to build the same code using different options for\nsimulator and devices. This is what happens if you try to use features\nlike `dynamic` or `System.Reflection.Emit`.\n\nSo instead of an error, we warn that the interpreter is not supported\nand switch to the existing REPL mode.\n\nThe JIT remains the only option for the simulator but it allows testing\nfeatures without a device.\n\n* Fail early if the interpreter is used on 32bits [1]\n\nThe current interpreter only works on 64 bits (so ARM64). However the\nerror won't be reported, back to the developer, until deployment time.\n\nThis temporary [1] fix spot the condition very early and report an error\n\n```\nerror MT0099 : Internal error : The interpreter is currently only available for 64 bits.\n```\n\ninstead of the current one at deploy time\n\n```\nIncorrectArchitecture: Failed to find matching arch for 32-bit Mach-O input file /private/var/installd/Library/Caches/com.apple.mobile.installd.staging/temp.tNKDlx/extracted/X.app/X\nerror MT1006: Could not install the application 'X.app' on the device 'Mercure': AMDeviceSecureInstallApplicationBundle returned: 0xe8000087 (kAMDIncorrectArchitectureError).\n\nApplication could not be uploaded to the device.\n```\n\n[1] https://github.com/mono/mono/issues/9871"},{"Id":"9245794353","Type":"PullRequestEvent","CreatedAt":"2019-03-14T19:21:05","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5771","RelatedDescription":"Opened pull request \"[mtouch] Avoid MT0109 warnings when --repl (or --interpreter) is used\" (#5771) at xamarin/xamarin-macios","RelatedBody":"In both cases we use a different binaries for a few assemblies. They\n include support for SRE and a few other things that are not normally\n usable on iOS. That's totally fine and not something that can be fixed\n (unless you stop using the feature). So this PR simply ignore that\n specific case so we don't warn about things that can't be changed (and\n are not a problem)\n\n E.g.\n ```\n Warning MT0109: The assembly 'mscorlib.dll' was loaded from a different path than the provided path (provided path: /Users/poupou/git/intr/xamarin-macios/_ios-build/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/mscorlib.dll, actual path: /Users/poupou/git/intr/xamarin-macios/_ios-build/Library/Frameworks/Xamarin.iOS.framework/Versions/git/lib/mono/Xamarin.iOS/repl/mscorlib.dll). (MT0109) (XXX)\n Warning MT0109: The assembly 'System.Core.dll' was loaded from a different path than the provided path (provided path: /Users/poupou/git/intr/xamarin-macios/_ios-build/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/System.Core.dll, actual path: /Users/poupou/git/intr/xamarin-macios/_ios-build/Library/Frameworks/Xamarin.iOS.framework/Versions/git/lib/mono/Xamarin.iOS/repl/System.Core.dll). (MT0109) (XXX)\n Warning MT0109: The assembly 'System.dll' was loaded from a different path than the provided path (provided path: /Users/poupou/git/intr/xamarin-macios/_ios-build/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/System.dll, actual path: /Users/poupou/git/intr/xamarin-macios/_ios-build/Library/Frameworks/Xamarin.iOS.framework/Versions/git/lib/mono/Xamarin.iOS/repl/System.dll). (MT0109) (XXX)\n Warning MT0109: The assembly 'System.Xml.dll' was loaded from a different path than the provided path (provided path: /Users/poupou/git/intr/xamarin-macios/_ios-build/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/System.Xml.dll, actual path: /Users/poupou/git/intr/xamarin-macios/_ios-build/Library/Frameworks/Xamarin.iOS.framework/Versions/git/lib/mono/Xamarin.iOS/repl/System.Xml.dll). (MT0109) (XXX)\n ```"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1105942645308678144","CreatedAt":"2019-03-13T21:24:08+00:00","UserScreenname":"xamarinhq","Text":"There have been some drastic changes across key libraries for Google Play Services &amp; Android Support. Let's get a q… https://t.co/heywxPz0Qs","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":38,"FavoriteCount":20,"RawContent":null},{"Id":"1105573743986917377","CreatedAt":"2019-03-12T20:58:15+00:00","UserScreenname":"xamarinhq","Text":"#MFractor is a powerful #VS4Mac extension to streamline Xamarin app dev so you can save significant time &amp; effort o… https://t.co/pEwcgwzd3t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":43,"FavoriteCount":21,"RawContent":null},{"Id":"1105491570583851008","CreatedAt":"2019-03-12T15:31:44+00:00","UserScreenname":"xamarinhq","Text":".@codemillmatt &amp; @JamesMontemagno talk about a ton of newness out there for all mobile devs including a hot new… https://t.co/05m3VTmUBe","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":22,"RawContent":null},{"Id":"1103762250509283332","CreatedAt":"2019-03-07T21:00:02+00:00","UserScreenname":"xamarinhq","Text":"Introducing Material Design; a suite of cross-platform components in the #Xamarin.Forms 3.6 Visual feature that boo… https://t.co/gin9lpb0eQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":147,"FavoriteCount":68,"RawContent":null},{"Id":"1103750171215699968","CreatedAt":"2019-03-07T20:12:02+00:00","UserScreenname":"xamarinhq","Text":"Level up your mobile development skills at #MSBuild, May 6-8, 2019 in Seattle. Registration is now open!… https://t.co/EZNWhIn3p6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":39,"FavoriteCount":8,"RawContent":null},{"Id":"1103709031066189825","CreatedAt":"2019-03-07T17:28:33+00:00","UserScreenname":"xamarinhq","Text":"Happening right now! Join the Mobile #dotNET Teams for our community stand-up covering great community contribution… https://t.co/9HUp86ZqBU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":30,"FavoriteCount":15,"RawContent":null},{"Id":"1103701857682231296","CreatedAt":"2019-03-07T17:00:03+00:00","UserScreenname":"xamarinhq","Text":"On this week's Essential API of the week we take a look at Accelerometer, which enables you monitor the device's ac… https://t.co/UxhHHar5zN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":56,"FavoriteCount":17,"RawContent":null},{"Id":"1103399934966067200","CreatedAt":"2019-03-06T21:00:19+00:00","UserScreenname":"xamarinhq","Text":"Announcing Xamarin.Forms 3.6:\n- we've made enhancements, cleaned up some bugs, AND, we've moved our Visual feature… https://t.co/fG4RqX25PH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":261,"FavoriteCount":129,"RawContent":null},{"Id":"1102666586194931713","CreatedAt":"2019-03-04T20:26:15+00:00","UserScreenname":"xamarinhq","Text":"Sweeky Satpathy (from the Mobile Customer Advisory Team) shares some best practices &amp; tips/tricks the team uses to… https://t.co/GSrw6zLTHZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":60,"FavoriteCount":19,"RawContent":null},{"Id":"1101572485114462220","CreatedAt":"2019-03-01T19:58:41+00:00","UserScreenname":"xamarinhq","Text":"Developer Community User Groups are gathering to learn about new, exciting releases and tooling to help jumpstart t… https://t.co/GgCWj5LttS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":49,"FavoriteCount":22,"RawContent":null},{"Id":"1101202237752258564","CreatedAt":"2019-02-28T19:27:27+00:00","UserScreenname":"xamarinhq","Text":"Want to display PDF docs w/i your #Xamarin apps? Now you can. Learn to view PDF files within your Xamarin.Forms app… https://t.co/GjuKzrvNYM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":99,"FavoriteCount":30,"RawContent":null},{"Id":"1100455963361005570","CreatedAt":"2019-02-26T18:02:01+00:00","UserScreenname":"xamarinhq","Text":"In this episode of the #dotNETCore podcast, @jimbobbennett talks #Xamarin &amp; .NET Standard. Listen in or read the tr… https://t.co/VDFrb1excV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":40,"FavoriteCount":14,"RawContent":null},{"Id":"1100149148282769409","CreatedAt":"2019-02-25T21:42:51+00:00","UserScreenname":"xamarinhq","Text":"Android emulators have their own networking config but now you can debug #Android apps locally regardless of whethe… https://t.co/Hbsm6gbXft","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":72,"FavoriteCount":31,"RawContent":null},{"Id":"1098996242238111745","CreatedAt":"2019-02-22T17:21:37+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @DavidOrtinau gives us all the reasons and features to &lt;3 in Xamarin.Forms 3.5. This… https://t.co/pVcHVX6LYJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":56,"FavoriteCount":27,"RawContent":null},{"Id":"1097993381496700935","CreatedAt":"2019-02-19T22:56:36+00:00","UserScreenname":"xamarinhq","Text":"With only a few lines of code, today's #Xamarin.Essentials API of the week helps you persist settings and preferenc… https://t.co/izkl5pGL6m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":50,"FavoriteCount":21,"RawContent":null},{"Id":"1097939132532310018","CreatedAt":"2019-02-19T19:21:02+00:00","UserScreenname":"xamarinhq","Text":"On this week's #XamarinShow Essential API of the week, we take a look at Secure Storage, which enables you to easil… https://t.co/OwQSZ1QRlI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":46,"FavoriteCount":26,"RawContent":null},{"Id":"1097603017375993857","CreatedAt":"2019-02-18T21:05:26+00:00","UserScreenname":"xamarinhq","Text":"Xamarin.Forms 101: Command Parameters: https://t.co/rwzzq9yQib\n\n.@JamesMontemagno takes us through a new mini-serie… https://t.co/ZFInvKFhSL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":109,"FavoriteCount":48,"RawContent":null},{"Id":"1096561048562384898","CreatedAt":"2019-02-16T00:05:01+00:00","UserScreenname":"xamarinhq","Text":"The #Xamarin Developer Blog is migrating to a new platform with a modern, clean design and powerful features that m… https://t.co/nJUxXItfe8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":98,"FavoriteCount":35,"RawContent":null},{"Id":"1095804816121581570","CreatedAt":"2019-02-13T22:00:01+00:00","UserScreenname":"xamarinhq","Text":"The #VisualStudio Mobile Dev Podcast is out. In this episode, @CodeMillMatt &amp; @JamesMontemagno discuss the latest &amp;… https://t.co/SPEvfxFuLn","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":54,"FavoriteCount":14,"RawContent":null}]}},"RunOn":"2019-03-15T05:30:51.1036228Z","RunDurationInMilliseconds":2680}