{"Data":{"GitHub":{"Issues":[{"Id":"537302319","IsPullRequest":true,"CreatedAt":"2019-12-13T01:39:22","Actor":"najeeb-kazmi","Number":"4573","RawContent":null,"Title":"Fix FastTree regression samples","State":"open","Body":"Fix #4572 ","Url":"https://github.com/dotnet/machinelearning/pull/4573","RelatedDescription":"Open PR \"Fix FastTree regression samples\" (#4573)"},{"Id":"537302116","IsPullRequest":false,"CreatedAt":"2019-12-13T01:38:26","Actor":"najeeb-kazmi","Number":"4572","RawContent":null,"Title":"FastTree regression samples use FastForest instead","State":"open","Body":"I noticed some FastTree samples using FastForest, namely:\r\nhttps://github.com/dotnet/machinelearning/blob/fa62c8196e345de82918469b56c2c6c3b16321c1/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/Regression/FastTree.cs#L30-L32\r\nand\r\nhttps://github.com/dotnet/machinelearning/blob/fa62c8196e345de82918469b56c2c6c3b16321c1/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/Regression/FastTreeTweedie.cs#L30-L32\r\nAppears to be a mistake introduced in PR #3948.","Url":"https://github.com/dotnet/machinelearning/issues/4572","RelatedDescription":"Open issue \"FastTree regression samples use FastForest instead\" (#4572)"},{"Id":"536745718","IsPullRequest":false,"CreatedAt":"2019-12-13T00:13:40","Actor":"saltywu","Number":"4566","RawContent":null,"Title":"cache elapsedSeconds error","State":"closed","Body":"MethodÔºöSamples.Dynamic.Cache.TimeToScanIDataView\r\nLine81Ôºöreturn (lines, columnAverage, elapsed.Seconds);\r\n\r\nRecommend to:return (lines, columnAverage, elapsed.TotalMilliseconds);","Url":"https://github.com/dotnet/machinelearning/issues/4566","RelatedDescription":"Closed issue \"cache elapsedSeconds error\" (#4566)"},{"Id":"537273936","IsPullRequest":false,"CreatedAt":"2019-12-12T23:48:47","Actor":"daholste","Number":"4571","RawContent":null,"Title":"Memory leak when featurizing text with the default settings","State":"open","Body":"When featurizing text with the default settings, references to the entire dataset rows are kept around","Url":"https://github.com/dotnet/machinelearning/issues/4571","RelatedDescription":"Open issue \"Memory leak when featurizing text with the default settings\" (#4571)"},{"Id":"537270139","IsPullRequest":true,"CreatedAt":"2019-12-12T23:34:58","Actor":"frank-dong-ms","Number":"4570","RawContent":null,"Title":"fix issue 4528, use thread safe ConcurrentDictionary instead of Dictionary","State":"open","Body":"fix issue #4528 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4570","RelatedDescription":"Open PR \"fix issue 4528, use thread safe ConcurrentDictionary instead of Dictionary\" (#4570)"},{"Id":"537197840","IsPullRequest":true,"CreatedAt":"2019-12-12T20:31:04","Actor":"sharwell","Number":"4569","RawContent":null,"Title":"Enable Conditional Numerical Reproducibility for tests","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4569","RelatedDescription":"Open PR \"Enable Conditional Numerical Reproducibility for tests\" (#4569)"},{"Id":"536088250","IsPullRequest":true,"CreatedAt":"2019-12-12T19:44:02","Actor":"frank-dong-ms","Number":"4563","RawContent":null,"Title":"add document for method ChnageModelThreshold","State":"closed","Body":"Fixes issue #4527 , add documentation for public method ChnageModelThreshold.\r\n\r\nThis method is introduced in #2969\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4563","RelatedDescription":"Closed or merged PR \"add document for method ChnageModelThreshold\" (#4563)"},{"Id":"537154606","IsPullRequest":false,"CreatedAt":"2019-12-12T18:55:25","Actor":"BillMcCrary","Number":"4568","RawContent":null,"Title":"Tensorflow.RuntimeError: 'Current graph is not default graph. Default Graph Key","State":"open","Body":"We would like to be able to load multiple models from disk on startup, then infer against them without having to reload from disk each pass.\r\n\r\nIf I try to keep 2 models in memory at the same time, I get an error if not calling against the last one initialized from disk.\r\n\r\ni.e. this works - only including code needed to generate the error:\r\n```\r\n            MLContext context = new MLContext();\r\n\r\n            TensorFlowModel model1 = context.Model.LoadTensorFlowModel(\"Model1\");\r\n\r\n            TensorFlowEstimator estimator1 = model1.ScoreTensorFlowModel(\"serving_default_input_1\", \"StatefulPartitionedCall\");\r\n\r\n            TensorFlowModel model2 = context.Model.LoadTensorFlowModel(\"Model2\");\r\n\r\n            TensorFlowEstimator estimator2 = model2.ScoreTensorFlowModel(\"serving_default_input_1\", \"StatefulPartitionedCall\");\r\n```\r\n\r\n\r\nbut this throws an error like \"Tensorflow.RuntimeError: 'Current graph is not default graph\":\r\n```\r\n            MLContext context = new MLContext();\r\n\r\n            TensorFlowModel model1 = context.Model.LoadTensorFlowModel(\"Model1\");\r\n\r\n            TensorFlowModel model2 = context.Model.LoadTensorFlowModel(\"Model2\");\r\n            \r\n            TensorFlowEstimator estimator1 = model1.ScoreTensorFlowModel(\"serving_default_input_1\", \"StatefulPartitionedCall\");\r\n\r\n            TensorFlowEstimator estimator2 = model2.ScoreTensorFlowModel(\"serving_default_input_1\", \"StatefulPartitionedCall\");\r\n```\r\n\r\n\r\nI guess we could roll our own process to load from disk to stream 1x, then call context.Model.Load() but that still smells wrong - we're still initializing the model over and over just avoiding disk calls.  Is this a bug or are we doing something wrong?","Url":"https://github.com/dotnet/machinelearning/issues/4568","RelatedDescription":"Open issue \"Tensorflow.RuntimeError: 'Current graph is not default graph. Default Graph Key\" (#4568)"},{"Id":"537109238","IsPullRequest":false,"CreatedAt":"2019-12-12T17:14:37","Actor":"natke","Number":"4567","RawContent":null,"Title":"Incorrect transformer for TypeConvertingEstimator in summary description","State":"open","Body":"Should be TypeConvertingTransformer\n\n---\n#### Document Details\n\n‚ö† *Do not edit this section. It is required for docs.microsoft.com ‚ûü GitHub issue linking.*\n\n* ID: 275f68f3-e68d-effc-a50d-f885902b3d70\n* Version Independent ID: 68b69288-3e30-9de2-e987-ccff3cd3f08b\n* Content: [TypeConvertingEstimator Class (Microsoft.ML.Transforms)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.transforms.typeconvertingestimator?view=ml-dotnet)\n* Content Source: [dotnet/xml/Microsoft.ML.Transforms/TypeConvertingEstimator.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Transforms/TypeConvertingEstimator.xml)\n* Product: **dotnet-ml-api**\n* GitHub Login: @natke\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/4567","RelatedDescription":"Open issue \"Incorrect transformer for TypeConvertingEstimator in summary description\" (#4567)"},{"Id":"536713828","IsPullRequest":true,"CreatedAt":"2019-12-12T02:04:36","Actor":"sharwell","Number":"4565","RawContent":null,"Title":"Updated baselines","State":"open","Body":"* Update CheckEqualityFromPathsCore for clearer output on failure\r\n* Update test outputs now that validation is enabled","Url":"https://github.com/dotnet/machinelearning/pull/4565","RelatedDescription":"Open PR \"Updated baselines\" (#4565)"},{"Id":"534582582","IsPullRequest":true,"CreatedAt":"2019-12-11T23:00:04","Actor":"sharwell","Number":"4550","RawContent":null,"Title":"Add tests for ParameterSet equality","State":"closed","Body":"üìù Builds on #4549\r\n\r\nThis change stabilizes test coverage in `ParameterSet.Equals` and `ParameterSet.ContainsParamValue`.","Url":"https://github.com/dotnet/machinelearning/pull/4550","RelatedDescription":"Closed or merged PR \"Add tests for ParameterSet equality\" (#4550)"},{"Id":"535419919","IsPullRequest":false,"CreatedAt":"2019-12-11T16:28:14","Actor":"mveeris","Number":"4558","RawContent":null,"Title":"ImageClassification training stops","State":"closed","Body":"### System information\r\n\r\n- **.NET Version .NET Core 3.0**: \r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nTrying to train MulticlassClassification with dataset of 2096 images and 8 classes\r\n- **What happened?**\r\nTraining just stops at one point in the Fit() method. It never exits the method.\r\nNo exeptions as well.\r\nWhen I reduce the number images for example to 1100, then training successfuly ends.\r\nAnd it doesn't seem to make any difference witch images I remove.\r\n\r\n### Source code / logs\r\nThis is the last log in the output window. After that CPU activity remains high for few seconds and \r\nthen drops to 0.\r\n\r\nPhase: Bottleneck Computation, Dataset used: Validation, Image Index: 405\r\nPhase: Bottleneck Computation, Dataset used: Validation, Image Index: 406\r\nPhase: Bottleneck Computation, Dataset used: Validation, Image Index: 407\r\n[Source=RowToRowMapperTransform; Cursor, Kind=Trace] Channel finished. Elapsed 00:00:11.0930351.\r\n[Source=RowToRowMapperTransform; Cursor, Kind=Trace] Channel disposed\r\n[Source=GenerateNumber; Cursor, Kind=Trace] Channel finished. Elapsed 00:00:11.0635798.\r\n[Source=GenerateNumber; Cursor, Kind=Trace] Channel disposed\r\n[Source=RangeFilter; Cursor, Kind=Trace] Channel finished. Elapsed 00:00:11.0637819.\r\n[Source=RangeFilter; Cursor, Kind=Trace] Channel disposed\r\n[Source=TextLoader; Binding, Kind=Trace] Channel started\r\n[Source=TextLoader; ParseStats, Kind=Trace] Channel started\r\n[Source=TextLoader; ParseStats, Kind=Trace] Channel finished. Elapsed 00:00:00.0109063.\r\n[Source=TextLoader; ParseStats, Kind=Trace] Channel disposed\r\n[Source=TextLoader; Binding, Kind=Trace] Channel finished. Elapsed 00:00:00.0332705.\r\n[Source=TextLoader; Binding, Kind=Trace] Channel disposed\r\n[Source=TextLoader; Binding, Kind=Trace] Channel started\r\n[Source=TextLoader; ParseStats, Kind=Trace] Channel started\r\n[Source=TextLoader; ParseStats, Kind=Trace] Channel finished. Elapsed 00:00:00.0050095.\r\n[Source=TextLoader; ParseStats, Kind=Trace] Channel disposed\r\n[Source=TextLoader; Binding, Kind=Trace] Channel finished. Elapsed 00:00:00.0168461.\r\n[Source=TextLoader; Binding, Kind=Trace] Channel disposed\r\n'ImageClassificationNetCore.exe' (CoreCLR: clrhost): Loaded 'C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\3.0.0\\System.Runtime.CompilerServices.Unsafe.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled.\r\n'ImageClassificationNetCore.exe' (CoreCLR: clrhost): Loaded 'C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\3.0.0\\System.Text.RegularExpressions.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled.\r\nThe thread 0x11e8 has exited with code 0 (0x0).\r\n[Source=TextLoader; ParseStats, Kind=Trace] Channel started\r\n[Source=TextLoader; Cursor, Kind=Trace] Channel started\r\n[Source=Shuffle; Cursor, Kind=Trace] Channel started\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4558","RelatedDescription":"Closed issue \"ImageClassification training stops\" (#4558)"},{"Id":"536090016","IsPullRequest":true,"CreatedAt":"2019-12-11T01:37:25","Actor":"harshithapv","Number":"4564","RawContent":null,"Title":"Adding Cyclic LR scheduling for Image Classification API ","State":"open","Body":"This PR implements Cyclic Learning rate scheduler. The following paper has more information.\r\nhttps://arxiv.org/abs/1506.01186\r\n\r\nAlso added unit test and integration test for the same.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4564","RelatedDescription":"Open PR \"Adding Cyclic LR scheduling for Image Classification API \" (#4564)"},{"Id":"536053200","IsPullRequest":true,"CreatedAt":"2019-12-10T23:28:55","Actor":"harishsk","Number":"4562","RawContent":null,"Title":"Added onnx export support for SlotsDroppingTransformer","State":"open","Body":"This work required the use of ConstantOfShape operator from onnx which has an attribute of type Tensor. Most operators have attributes that are of primitive types (int, float, etc). ML.NET Onnx converter coded didnt have support to add attributes of tensor types. \r\nTherefore this PR includes the support for adding tensor type attributes along with the necessary code and tests for SlotsDroppingTransformer. ","Url":"https://github.com/dotnet/machinelearning/pull/4562","RelatedDescription":"Open PR \"Added onnx export support for SlotsDroppingTransformer\" (#4562)"},{"Id":"535921255","IsPullRequest":true,"CreatedAt":"2019-12-10T22:04:45","Actor":"sharwell","Number":"4561","RawContent":null,"Title":"Add IterationDataAttribute","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4561","RelatedDescription":"Closed or merged PR \"Add IterationDataAttribute\" (#4561)"},{"Id":"535892862","IsPullRequest":true,"CreatedAt":"2019-12-10T17:59:21","Actor":"sharwell","Number":"4560","RawContent":null,"Title":"Add netcoreapp3.0 output for SsaForecast test","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4560","RelatedDescription":"Open PR \"Add netcoreapp3.0 output for SsaForecast test\" (#4560)"},{"Id":"534800323","IsPullRequest":false,"CreatedAt":"2019-12-10T00:53:47","Actor":"rauhs","Number":"4553","RawContent":null,"Title":"Expose EvaluateWithPRCurve in BinaryClassificationCatalog","State":"closed","Body":"Version: 1.4.0\r\n\r\nThis was once available: 122c31952829338e9cfa91ca72246af6e572a618\r\n\r\nBut now there is no way to access `EvaluateWithPRCurve`.","Url":"https://github.com/dotnet/machinelearning/issues/4553","RelatedDescription":"Closed issue \"Expose EvaluateWithPRCurve in BinaryClassificationCatalog\" (#4553)"},{"Id":"534813076","IsPullRequest":false,"CreatedAt":"2019-12-10T00:52:32","Actor":"rauhs","Number":"4554","RawContent":null,"Title":"BinaryClassification.Evaluate completely ignores the predicted labels","State":"closed","Body":"Version: 1.4.0\r\n\r\nI'm training a Binary LightGBM classifier and want to change the threshold of the model. This will change my predictions accordingly. Though, `BinaryClassification.Evaluate` will always return me the same precision/recall.\r\n\r\n```C#\r\n        var newModel = ctx.BinaryClassification.ChangeModelThreshold(model, -100_000);\r\n        var dataView = newModel.Transform(dv);\r\n        var labels = dataView.GetColumn<bool>(\"PredictedLabel\").ToArray();\r\n\r\n        var numTrue = labels.Count(x => x == true); // All are true.\r\n        var numFalse = labels.Count(x => x == false); // 0\r\n\r\n        testPerformance = ctx.BinaryClassification.Evaluate(dataView);\r\n```\r\n\r\nWith the above threshold the labels are all `true`. ","Url":"https://github.com/dotnet/machinelearning/issues/4554","RelatedDescription":"Closed issue \"BinaryClassification.Evaluate completely ignores the predicted labels\" (#4554)"},{"Id":"535423004","IsPullRequest":false,"CreatedAt":"2019-12-10T00:48:01","Actor":"jigarhshah17","Number":"4559","RawContent":null,"Title":"How to use and pass runtime created class in .Model.CreatePredictionEngine(Of TRow, TDst)(loadedModel)","State":"closed","Body":"i have created class and its field with assign value at run time and want to pass it in (of TRow)\r\nModel.CreatePredictionEngine(Of TRow, TDst)(loadedModel)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4559","RelatedDescription":"Closed issue \"How to use and pass runtime created class in .Model.CreatePredictionEngine(Of TRow, TDst)(loadedModel)\" (#4559)"},{"Id":"535073567","IsPullRequest":true,"CreatedAt":"2019-12-09T17:22:53","Actor":"sharwell","Number":"4557","RawContent":null,"Title":"Add a test handler for AppDomain.UnhandledException","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4557","RelatedDescription":"Open PR \"Add a test handler for AppDomain.UnhandledException\" (#4557)"},{"Id":"535023372","IsPullRequest":true,"CreatedAt":"2019-12-09T15:56:49","Actor":"sharwell","Number":"4556","RawContent":null,"Title":"SsaForecast iterations experiment","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4556","RelatedDescription":"Open PR \"SsaForecast iterations experiment\" (#4556)"},{"Id":"535000982","IsPullRequest":false,"CreatedAt":"2019-12-09T15:20:39","Actor":"KiransHub","Number":"4555","RawContent":null,"Title":"AutoML Nuget Package won't train against TSV","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Win10 64bit\r\n- **.NET Version (eg., dotnet --info)**: \r\ndotnet core 3.0\r\n\r\n### Issue\r\n\r\n- **What did you do?** \r\nInstalled AutoML nuget package. Setup sentiment analysis training. Selected correct labels and features columns. \r\n\r\nWent to train and... \r\n\r\n- **What happened?**\r\n\r\nI got a message almost immediately \"Failed. See more in Output pane\". \r\n\r\nThe output pane for \"Machine Learning\" is completely empty! \r\n\r\n- **What did you expect?**\r\nAt least an error... \r\n\r\nscreenshot:\r\n\r\n![image](https://user-images.githubusercontent.com/4026553/70447947-814e5600-1a97-11ea-8515-6c53bd2c77c7.png)\r\n\r\nHere's the input data pane: \r\n\r\n![image](https://user-images.githubusercontent.com/4026553/70448245-fe79cb00-1a97-11ea-8040-79b9deeccb83.png)\r\n\r\n\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4555","RelatedDescription":"Open issue \"AutoML Nuget Package won't train against TSV\" (#4555)"},{"Id":"534580881","IsPullRequest":true,"CreatedAt":"2019-12-09T06:32:37","Actor":"sharwell","Number":"4549","RawContent":null,"Title":"Add tests for IParameterValue implementations","State":"closed","Body":"This change provides deterministic coverage for the implementation of `LongParameterValue`, `FloatParameterValue`, and `StringParameterValue`.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4549","RelatedDescription":"Closed or merged PR \"Add tests for IParameterValue implementations\" (#4549)"},{"Id":"534598675","IsPullRequest":true,"CreatedAt":"2019-12-09T03:06:42","Actor":"sharwell","Number":"4551","RawContent":null,"Title":"Use std::unique_ptr for samplers_ and likelihood_in_iter_","State":"closed","Body":"Fixes an access violation in native code if `LdaEngine` is deleted before `samplers_` is initialized.","Url":"https://github.com/dotnet/machinelearning/pull/4551","RelatedDescription":"Closed or merged PR \"Use std::unique_ptr for samplers_ and likelihood_in_iter_\" (#4551)"},{"Id":"534605298","IsPullRequest":true,"CreatedAt":"2019-12-08T21:31:56","Actor":"sharwell","Number":"4552","RawContent":null,"Title":"WIP Log exceptions thrown within finalizers","State":"open","Body":"Exceptions thrown from a finalizer will terminate the process.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4552","RelatedDescription":"Open PR \"WIP Log exceptions thrown within finalizers\" (#4552)"},{"Id":"534471315","IsPullRequest":true,"CreatedAt":"2019-12-08T20:50:24","Actor":"sharwell","Number":"4544","RawContent":null,"Title":"WIP Safe pointers","State":"closed","Body":"Locally I converted most owned native objects to `std::unique_ptr` and `std::shared_ptr`. This pull request represents a relatively easy-to-review subset of the changes with minimal overall fan-out in the code.\r\n\r\n* Pass by reference when null is not expected (submitted separately as #4546)\r\n* Use `std::unique_ptr` for objects in `LdaEngine` (submitted separately as #4547)\r\n* Use `std::unique_ptr` for `samplers_` and `likelihood_in_iter_`","Url":"https://github.com/dotnet/machinelearning/pull/4544","RelatedDescription":"Closed or merged PR \"WIP Safe pointers\" (#4544)"},{"Id":"534472994","IsPullRequest":true,"CreatedAt":"2019-12-08T20:45:26","Actor":"sharwell","Number":"4547","RawContent":null,"Title":"Use std::unique_ptr for objects in LdaEngine","State":"closed","Body":"Builds on #4546","Url":"https://github.com/dotnet/machinelearning/pull/4547","RelatedDescription":"Closed or merged PR \"Use std::unique_ptr for objects in LdaEngine\" (#4547)"},{"Id":"534472100","IsPullRequest":true,"CreatedAt":"2019-12-08T17:42:36","Actor":"sharwell","Number":"4545","RawContent":null,"Title":"Add Xunit.Combinatorial for test projects","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4545","RelatedDescription":"Closed or merged PR \"Add Xunit.Combinatorial for test projects\" (#4545)"},{"Id":"534472376","IsPullRequest":true,"CreatedAt":"2019-12-08T17:42:19","Actor":"sharwell","Number":"4546","RawContent":null,"Title":"Pass by reference when null is not expected","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4546","RelatedDescription":"Closed or merged PR \"Pass by reference when null is not expected\" (#4546)"},{"Id":"534535423","IsPullRequest":true,"CreatedAt":"2019-12-08T12:34:36","Actor":"yaeldekel","Number":"4548","RawContent":null,"Title":"Expression estimator/transformer","State":"open","Body":"Fixes #4015 .","Url":"https://github.com/dotnet/machinelearning/pull/4548","RelatedDescription":"Open PR \"Expression estimator/transformer\" (#4548)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-12-13T05:30:40.9010432Z","RunDurationInMilliseconds":617}